; ModuleID = 'build/arduino_mkrzero/subsys/debug/gdbstub/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv6m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread.16 = type { %struct._thread_base.9, %struct._callee_saved.10, i8*, %union.anon.5, i32, %struct.k_heap.14*, %struct._thread_arch.15 }
%struct._thread_base.9 = type { %union.anon.5, %union.anon.5*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.8 }
%union.anon.2.7 = type { i16 }
%struct._timeout.8 = type { %struct._dnode.4, void (%struct._timeout.8*)*, i64 }
%struct._dnode.4 = type { %union.anon.0.2, %union.anon.0.2 }
%union.anon.0.2 = type { %struct._dnode.4* }
%struct._callee_saved.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.5 = type { %struct._dnode.4 }
%struct.k_heap.14 = type { %struct.sys_heap.12, %union.anon.5, %struct.k_spinlock.13 }
%struct.sys_heap.12 = type { %struct.z_heap.11*, i8*, i32 }
%struct.z_heap.11 = type opaque
%struct.k_spinlock.13 = type {}
%struct._thread_arch.15 = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.16*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device.73*)*, %struct.device.73* }
%struct.device.73 = type { i8*, i8*, i8*, %struct.device_state.72*, i8*, i16* }
%struct.device_state.72 = type { i8, i8 }
%struct.sam0_eic_data = type { [2 x %struct.sam0_eic_port_data], [16 x %struct.z_thread_stack_element] }
%struct.sam0_eic_port_data = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.gpio_sam0_config = type { %union.anon.68, %struct.PortGroup*, i8 }
%union.anon.68 = type { i32 }
%struct.PortGroup = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], [16 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type], [32 x i8] }
%union.PORT_DIR_Type = type { %union.anon.68 }
%union.PORT_PMUX_Type = type { %struct.z_thread_stack_element }
%struct.gpio_driver_api = type { i32 (%struct.device.73*, i8, i32)*, i32 (%struct.device.73*, i32*)*, i32 (%struct.device.73*, i32, i32)*, i32 (%struct.device.73*, i32)*, i32 (%struct.device.73*, i32)*, i32 (%struct.device.73*, i32)*, i32 (%struct.device.73*, i8, i32, i32)*, i32 (%struct.device.73*, %struct.gpio_callback*, i1)*, i32 (%struct.device.73*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device.73*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_sam0_data = type { %union.anon.68, %struct.device.73*, i32, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_sam0_dev_cfg = type { %struct.SercomUsart*, i32, i32, i8, i32, i16, void (%struct.device.73*)*, %struct.pinctrl_dev_config* }
%struct.SercomUsart = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_PMUX_Type, [5 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, [8 x i8], %union.GCLK_CLKCTRL_Type, [6 x i8], %union.PORT_PMUX_Type }
%union.GCLK_CLKCTRL_Type = type { %union.anon.2.7 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device.73*, i8*)*, void (%struct.device.73*, i8)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, i8*, i32)*, i32 (%struct.device.73*, i8*, i32)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam0_dev_data = type { %struct.uart_config, void (%struct.device.73*, i8*)*, i8* }
%struct.k_thread.203 = type { %struct._thread_base.196, %struct._callee_saved.10, i8*, %union.anon.192, i32, %struct.k_heap.201*, %struct._thread_arch.15 }
%struct._thread_base.196 = type { %union.anon.192, %union.anon.192*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.195 }
%struct._timeout.195 = type { %struct._dnode.191, void (%struct._timeout.195*)*, i64 }
%struct._dnode.191 = type { %union.anon.0.189, %union.anon.0.189 }
%union.anon.0.189 = type { %struct._dnode.191* }
%union.anon.192 = type { %struct._dnode.191 }
%struct.k_heap.201 = type { %struct.sys_heap.199, %union.anon.192, %struct.k_spinlock.13 }
%struct.sys_heap.199 = type { %struct.z_heap.198*, i8*, i32 }
%struct.z_heap.198 = type opaque
%struct._static_thread_data.506 = type { %struct.k_thread.203*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread.203*, %struct.k_thread.203*, i32, i8, %struct.k_spinlock.13 }
%struct._ready_q = type { %struct.k_thread.203*, %struct._dnode.191 }
%struct.__va_list = type { i8* }
%struct.buf_out_context = type { i32, [0 x i8] }
%struct.str_context = type { i8*, i32, i32 }
%struct.k_thread.60 = type { %struct._thread_base.53, %struct._callee_saved.10, i8*, %union.anon.49, i32, %struct.k_heap.58*, %struct._thread_arch.15 }
%struct._thread_base.53 = type { %union.anon.49, %union.anon.49*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.52 }
%struct._timeout.52 = type { %struct._dnode.48, void (%struct._timeout.52*)*, i64 }
%struct._dnode.48 = type { %union.anon.0.46, %union.anon.0.46 }
%union.anon.0.46 = type { %struct._dnode.48* }
%union.anon.49 = type { %struct._dnode.48 }
%struct.k_heap.58 = type { %struct.sys_heap.56, %union.anon.49, %struct.k_spinlock.13 }
%struct.sys_heap.56 = type { %struct.z_heap.55*, i8*, i32 }
%struct.z_heap.55 = type opaque
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.68, %union.anon.68 }
%struct.soc_port_pin = type { %struct.PortGroup*, i32, i32 }
%struct.Nvmctrl = type { %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type }
%struct.Sysctrl = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type }
%struct.Gclk = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type }
%struct.Pm = type { %struct.z_thread_stack_element, %union.PORT_PMUX_Type, [6 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [8 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [16 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, i32 }
%struct.NVIC_Type = type { [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [64 x i32], [8 x i32] }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32 }
%struct.Eic = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [2 x %union.PORT_DIR_Type] }
%struct.k_fifo = type { %struct.k_queue.345 }
%struct.k_queue.345 = type { %struct._sflist.344, %struct.k_spinlock.13, %struct._wait_q_t.330 }
%struct._sflist.344 = type { %union.anon.68*, %union.anon.68* }
%struct._wait_q_t.330 = type { %struct._dnode.328 }
%struct._dnode.328 = type { %union.anon.0.326, %union.anon.0.326 }
%union.anon.0.326 = type { %struct._dnode.328* }
%struct.SysTick_Type = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode.191], i32 }

@_irq_vector_table = dso_local global [28 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local global [28 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 38768 to i8*), void (i8*)* inttoptr (i32 17249 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 38840 to i8*), void (i8*)* inttoptr (i32 35207 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [14 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread to i8*), i8* bitcast (%struct.init_entry* @__init_atmel_samd_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_11 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_11 to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_29 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_29 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@_k_thread_obj_thread = dso_local global %struct.k_thread.16 zeroinitializer, align 8, !dbg !25
@_k_thread_stack_thread = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !262
@.str.1 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@_k_thread_data_thread = dso_local global %struct._static_thread_data { %struct.k_thread.16* @_k_thread_obj_thread, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_thread, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* @thread_entry, i8* null, i8* null, i8* null, i32 7, i32 4, i32 0, void ()* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread", align 4, !dbg !105
@thread = dso_local constant %struct.k_thread.16* @_k_thread_obj_thread, align 4, !dbg !258
@.str.2 = private unnamed_addr constant [25 x i8] c"Hello from user thread!\0A\00", align 1
@_char_out = dso_local global i32 (i32)* @arch_printk_char_out, align 4, !dbg !267
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_atmel_samd_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @atmel_samd_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !276
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1044
@__device_dts_ord_20 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* null, i8* null, %struct.device_state.72* @__devstate_dts_ord_20, i8* bitcast (%struct.sam0_eic_data* @eic_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_20 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1612
@.str.20 = private unnamed_addr constant [13 x i8] c"eic@40001800\00", align 1
@__devstate_dts_ord_20 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !1594
@eic_data = internal global %struct.sam0_eic_data zeroinitializer, align 4, !dbg !1573
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sam0_eic_init, %struct.device.73* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1548
@sam0_eic_channels = internal constant [2 x [32 x i8]] [[32 x i8] c"\00\01\02\03\04\05\06\07\FF\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\0C\0D\FF\0F\08\FF\0A\0B", [32 x i8] c"\FF\FF\02\03\FF\FF\FF\FF\08\09\0A\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\06\07\FF\FF\FF\FF\FF\FF\FF\FF"], align 1, !dbg !1596
@sam0_eic_init.__isr_sam0_eic_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device.73*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_20 to i8*) }, section ".intList", align 4, !dbg !1603
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_console_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1625
@__devicehdl_dts_ord_57 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1617
@.str.23 = private unnamed_addr constant [14 x i8] c"gpio@41004400\00", align 1
@gpio_sam0_config_0 = internal constant %struct.gpio_sam0_config { %union.anon.68 { i32 -1 }, %struct.PortGroup* inttoptr (i32 1090536448 to %struct.PortGroup*), i8 0 }, align 4, !dbg !1724
@gpio_sam0_api = internal constant %struct.gpio_driver_api { i32 (%struct.device.73*, i8, i32)* @gpio_sam0_config, i32 (%struct.device.73*, i32*)* @gpio_sam0_port_get_raw, i32 (%struct.device.73*, i32, i32)* @gpio_sam0_port_set_masked_raw, i32 (%struct.device.73*, i32)* @gpio_sam0_port_set_bits_raw, i32 (%struct.device.73*, i32)* @gpio_sam0_port_clear_bits_raw, i32 (%struct.device.73*, i32)* @gpio_sam0_port_toggle_bits, i32 (%struct.device.73*, i8, i32, i32)* @gpio_sam0_pin_interrupt_configure, i32 (%struct.device.73*, %struct.gpio_callback*, i1)* @gpio_sam0_manage_callback, i32 (%struct.device.73*)* @gpio_sam0_get_pending_int }, align 4, !dbg !1866
@__devstate_dts_ord_57 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !1860
@gpio_sam0_data_0 = internal global %struct.gpio_sam0_data zeroinitializer, align 4, !dbg !1858
@__device_dts_ord_57 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* bitcast (%struct.gpio_sam0_config* @gpio_sam0_config_0 to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_sam0_api to i8*), %struct.device_state.72* @__devstate_dts_ord_57, i8* bitcast (%struct.gpio_sam0_data* @gpio_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1840
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @gpio_sam0_init, %struct.device.73* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1842
@__devicehdl_dts_ord_11 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1621
@.str.1.24 = private unnamed_addr constant [14 x i8] c"gpio@41004480\00", align 1
@gpio_sam0_config_1 = internal constant %struct.gpio_sam0_config { %union.anon.68 { i32 -1 }, %struct.PortGroup* inttoptr (i32 1090536576 to %struct.PortGroup*), i8 1 }, align 4, !dbg !1868
@__devstate_dts_ord_11 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !1864
@gpio_sam0_data_1 = internal global %struct.gpio_sam0_data zeroinitializer, align 4, !dbg !1862
@__device_dts_ord_11 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.24, i32 0, i32 0), i8* bitcast (%struct.gpio_sam0_config* @gpio_sam0_config_1 to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_sam0_api to i8*), %struct.device_state.72* @__devstate_dts_ord_11, i8* bitcast (%struct.gpio_sam0_data* @gpio_sam0_data_1 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_11, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1854
@__init___device_dts_ord_11 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @gpio_sam0_init, %struct.device.73* @__device_dts_ord_11 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1856
@__devicehdl_dts_ord_29 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1623
@.str.28 = private unnamed_addr constant [16 x i8] c"sercom@42001c00\00", align 1
@uart_sam0_config_0 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1107303424 to %struct.SercomUsart*), i32 115200, i32 3211264, i8 0, i32 128, i16 25, void (%struct.device.73*)* @uart_sam0_irq_config_0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_29 }, align 4, !dbg !2030
@uart_sam0_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device.73*, i8*)* @uart_sam0_poll_in, void (%struct.device.73*, i8)* @uart_sam0_poll_out, i32 (%struct.device.73*)* @uart_sam0_err_check, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_configure, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_config_get, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_fill, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_read, void (%struct.device.73*)* @uart_sam0_irq_tx_enable, void (%struct.device.73*)* @uart_sam0_irq_tx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_ready, void (%struct.device.73*)* @uart_sam0_irq_rx_enable, void (%struct.device.73*)* @uart_sam0_irq_rx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_complete, i32 (%struct.device.73*)* @uart_sam0_irq_rx_ready, void (%struct.device.73*)* null, void (%struct.device.73*)* null, i32 (%struct.device.73*)* @uart_sam0_irq_is_pending, i32 (%struct.device.73*)* @uart_sam0_irq_update, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* @uart_sam0_irq_callback_set }, align 4, !dbg !2579
@__devstate_dts_ord_29 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !2543
@uart_sam0_data_0 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !2536
@__device_dts_ord_29 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state.72* @__devstate_dts_ord_29, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_29, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2527
@__init___device_dts_ord_29 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_sam0_init, %struct.device.73* @__device_dts_ord_29 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2529
@__pinctrl_dev_config__device_dts_ord_29 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_29, i32 0, i32 0), i8 1 }, align 4, !dbg !2554
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 = internal global %struct._isr_list { i32 14, i32 0, i8* bitcast (void (%struct.device.73*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_29 to i8*) }, section ".intList", align 4, !dbg !2545
@__pinctrl_states__device_dts_ord_29 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_29, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2573
@__pinctrl_state_pins_0__device_dts_ord_29 = internal constant [2 x i32] [i32 863043584, i32 861995008], align 4, !dbg !2576
@overflow_cyc = internal global i32 0, align 4, !dbg !2775
@cycle_count = internal global i32 0, align 4, !dbg !2894
@announced_cycles = internal global i32 0, align 4, !dbg !2896
@last_load = internal global i32 0, align 4, !dbg !2892
@lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2889
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sys_clock_driver_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2863
@sam_port_addrs = internal constant [2 x i32] [i32 1090536448, i32 1090536576], align 4, !dbg !2898
@__device_start = external dso_local constant [0 x %struct.device.73], align 4
@__device_end = external dso_local constant [0 x %struct.device.73], align 4
@_k_neg_eagain = dso_local constant i32 -11, align 4, !dbg !3058
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !3064
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !3252
@z_main_thread = dso_local global %struct.k_thread.203 zeroinitializer, align 8, !dbg !3260
@z_idle_stacks = internal global [1 x [256 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !3267
@z_sys_init_run_level.levels = internal global [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !3272
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.53 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal global [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.55, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.56, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !3290
@.str.54 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.55 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.56 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.57 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3396
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data.506], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data.506], align 4
@sched_spinlock = dso_local global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3401
@slice_ticks = internal global i32 0, align 4, !dbg !3512
@slice_max_prio = internal global i32 0, align 4, !dbg !3515
@pending_current = internal global %struct.k_thread.203* null, align 4, !dbg !3517
@z_sys_post_kernel = dso_local global i8 0, align 1, !dbg !3265
@z_idle_threads = dso_local global [1 x %struct.k_thread.203] zeroinitializer, align 8, !dbg !3262
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@timeout_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3519
@curr_tick = internal global i64 0, align 8, !dbg !3549
@timeout_list = internal global %struct._dnode.191 { %union.anon.0.189 { %struct._dnode.191* @timeout_list }, %union.anon.0.189 { %struct._dnode.191* @timeout_list } }, align 4, !dbg !3554
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !3136
@announce_remaining = internal global i32 0, align 4, !dbg !3552
@.str.111 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @_OffsetAbsSyms() #1 !dbg !3870 {
  call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #9, !dbg !3872, !srcloc !3873
  call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #9, !dbg !3874, !srcloc !3875
  call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #9, !dbg !3876, !srcloc !3877
  call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #9, !dbg !3878, !srcloc !3879
  call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3880, !srcloc !3881
  call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #9, !dbg !3882, !srcloc !3883
  call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #9, !dbg !3884, !srcloc !3885
  call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #9, !dbg !3886, !srcloc !3887
  call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #9, !dbg !3888, !srcloc !3889
  call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #9, !dbg !3890, !srcloc !3891
  call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #9, !dbg !3892, !srcloc !3893
  call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #9, !dbg !3894, !srcloc !3895
  call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #9, !dbg !3896, !srcloc !3897
  call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #9, !dbg !3898, !srcloc !3899
  call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #9, !dbg !3900, !srcloc !3901
  call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #9, !dbg !3902, !srcloc !3903
  call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #9, !dbg !3904, !srcloc !3905
  call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #9, !dbg !3906, !srcloc !3907
  call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3908, !srcloc !3909
  call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #9, !dbg !3910, !srcloc !3911
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3912, !srcloc !3913
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #9, !dbg !3914, !srcloc !3915
  call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #9, !dbg !3916, !srcloc !3917
  call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #9, !dbg !3918, !srcloc !3919
  call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #9, !dbg !3920, !srcloc !3923
  call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #9, !dbg !3924, !srcloc !3925
  call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3926, !srcloc !3927
  call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3928, !srcloc !3929
  call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3930, !srcloc !3931
  call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3932, !srcloc !3933
  call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #9, !dbg !3934, !srcloc !3935
  call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #9, !dbg !3936, !srcloc !3937
  call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #9, !dbg !3938, !srcloc !3939
  call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #9, !dbg !3940, !srcloc !3941
  call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3942, !srcloc !3943
  call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3944, !srcloc !3945
  call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3946, !srcloc !3947
  call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3948, !srcloc !3949
  call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3950, !srcloc !3951
  call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3952, !srcloc !3953
  call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #9, !dbg !3954, !srcloc !3955
  call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #9, !dbg !3956, !srcloc !3957
  call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #9, !dbg !3958, !srcloc !3959
  call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #9, !dbg !3960, !srcloc !3961
  call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #9, !dbg !3962, !srcloc !3963
  call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #9, !dbg !3964, !srcloc !3965
  call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3966, !srcloc !3967
  ret void, !dbg !3968
}

; Function Attrs: noinline nounwind optnone
define internal void @thread_entry(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !3971 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3972, metadata !DIExpression()), !dbg !3973
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3974, metadata !DIExpression()), !dbg !3975
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3976, metadata !DIExpression()), !dbg !3977
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)) #10, !dbg !3978
  ret void, !dbg !3979
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #1 !dbg !3980 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3981, metadata !DIExpression()), !dbg !3982
  %2 = call i32 @test() #10, !dbg !3983
  store i32 %2, i32* %1, align 4, !dbg !3984
  %3 = load i32, i32* %1, align 4, !dbg !3985
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 noundef %3) #10, !dbg !3986
  ret void, !dbg !3987
}

; Function Attrs: noinline nounwind optnone
define internal i32 @test() #1 !dbg !3988 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3991, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3993, metadata !DIExpression()), !dbg !3994
  store i32 10, i32* %1, align 4, !dbg !3995
  %3 = load i32, i32* %1, align 4, !dbg !3996
  %4 = mul nsw i32 %3, 2, !dbg !3997
  store i32 %4, i32* %2, align 4, !dbg !3998
  %5 = load i32, i32* %1, align 4, !dbg !3999
  %6 = load i32, i32* %2, align 4, !dbg !4000
  %7 = add nsw i32 %5, %6, !dbg !4001
  ret i32 %7, !dbg !4002
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4003 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4004, metadata !DIExpression()), !dbg !4005
  %3 = load i32, i32* %2, align 4, !dbg !4006
  ret i32 0, !dbg !4007
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) #1 !dbg !4008 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !4011, metadata !DIExpression()), !dbg !4012
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !4013
  store i32 (i32)* %3, i32 (i32)** @_char_out, align 4, !dbg !4014
  ret void, !dbg !4015
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @__printk_get_hook() #1 !dbg !4016 {
  %1 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4019
  %2 = bitcast i32 (i32)* %1 to i8*, !dbg !4019
  ret i8* %2, !dbg !4020
}

; Function Attrs: noinline nounwind optnone
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) #1 !dbg !4021 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context, align 4
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  %7 = bitcast i8** %6 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %7, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4031, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !4033, metadata !DIExpression()), !dbg !4034
  %8 = call zeroext i1 @k_is_user_context() #10, !dbg !4035
  br i1 %8, label %9, label %22, !dbg !4037

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.buf_out_context* %5, metadata !4038, metadata !DIExpression()), !dbg !4047
  %10 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !4047
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !4047
  %11 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !4048
  %12 = load i8*, i8** %4, align 4, !dbg !4049
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !4050
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !4050
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !4050
  %16 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @buf_char_out to i32 (...)*), i8* noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !4050
  %17 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %5, i32 0, i32 0, !dbg !4051
  %18 = load i32, i32* %17, align 4, !dbg !4051
  %19 = icmp ne i32 %18, 0, !dbg !4053
  br i1 %19, label %20, label %21, !dbg !4054

20:                                               ; preds = %9
  call void @buf_flush(%struct.buf_out_context* noundef %5) #10, !dbg !4055
  br label %21, !dbg !4057

21:                                               ; preds = %20, %9
  br label %28, !dbg !4058

22:                                               ; preds = %2
  %23 = load i8*, i8** %4, align 4, !dbg !4059
  %24 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !4061
  %25 = bitcast i8** %24 to [1 x i32]*, !dbg !4061
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !4061
  %27 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %23, [1 x i32] %26) #10, !dbg !4061
  br label %28

28:                                               ; preds = %22, %21
  ret void, !dbg !4062
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_user_context() #1 !dbg !4063 {
  ret i1 false, !dbg !4067
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #3

; Function Attrs: noinline nounwind optnone
define internal i32 @buf_char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !4068 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4071, metadata !DIExpression()), !dbg !4072
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4073, metadata !DIExpression()), !dbg !4074
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %5, metadata !4075, metadata !DIExpression()), !dbg !4077
  %6 = load i8*, i8** %4, align 4, !dbg !4078
  %7 = bitcast i8* %6 to %struct.buf_out_context*, !dbg !4078
  store %struct.buf_out_context* %7, %struct.buf_out_context** %5, align 4, !dbg !4077
  %8 = load i32, i32* %3, align 4, !dbg !4079
  %9 = trunc i32 %8 to i8, !dbg !4079
  %10 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !4080
  %11 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %10, i32 0, i32 1, !dbg !4081
  %12 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !4082
  %13 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %12, i32 0, i32 0, !dbg !4083
  %14 = load i32, i32* %13, align 4, !dbg !4084
  %15 = add i32 %14, 1, !dbg !4084
  store i32 %15, i32* %13, align 4, !dbg !4084
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i32 0, i32 %14, !dbg !4080
  store i8 %9, i8* %16, align 1, !dbg !4085
  %17 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !4086
  %18 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %17, i32 0, i32 0, !dbg !4088
  %19 = load i32, i32* %18, align 4, !dbg !4088
  %20 = icmp eq i32 %19, 0, !dbg !4089
  br i1 %20, label %21, label %23, !dbg !4090

21:                                               ; preds = %2
  %22 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !4091
  call void @buf_flush(%struct.buf_out_context* noundef %22) #10, !dbg !4093
  br label %23, !dbg !4094

23:                                               ; preds = %21, %2
  %24 = load i32, i32* %3, align 4, !dbg !4095
  ret i32 %24, !dbg !4096
}

; Function Attrs: noinline nounwind optnone
define internal i32 @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !4097 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %10 = bitcast i8** %9 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %10, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !4105, metadata !DIExpression()), !dbg !4106
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4107, metadata !DIExpression()), !dbg !4108
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4111, metadata !DIExpression()), !dbg !4112
  %11 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !4113
  %12 = load i8*, i8** %7, align 4, !dbg !4114
  %13 = load i8*, i8** %8, align 4, !dbg !4115
  %14 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !4116
  %15 = bitcast i8** %14 to [1 x i32]*, !dbg !4116
  %16 = load [1 x i32], [1 x i32]* %15, align 4, !dbg !4116
  %17 = call i32 @z_cbvprintf_impl(i32 (...)* noundef %11, i8* noundef %12, i8* noundef %13, [1 x i32] %16, i32 noundef 0) #10, !dbg !4116
  ret i32 %17, !dbg !4117
}

; Function Attrs: noinline nounwind optnone
define internal void @buf_flush(%struct.buf_out_context* noundef %0) #1 !dbg !4118 {
  %2 = alloca %struct.buf_out_context*, align 4
  store %struct.buf_out_context* %0, %struct.buf_out_context** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %2, metadata !4121, metadata !DIExpression()), !dbg !4122
  %3 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !4123
  %4 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %3, i32 0, i32 1, !dbg !4124
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %4, i32 0, i32 0, !dbg !4123
  %6 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !4125
  %7 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %6, i32 0, i32 0, !dbg !4126
  %8 = load i32, i32* %7, align 4, !dbg !4126
  call void @k_str_out(i8* noundef %5, i32 noundef %8) #10, !dbg !4127
  %9 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !4128
  %10 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %9, i32 0, i32 0, !dbg !4129
  store i32 0, i32* %10, align 4, !dbg !4130
  ret void, !dbg !4131
}

; Function Attrs: noinline nounwind optnone
define internal i32 @char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !4132 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4133, metadata !DIExpression()), !dbg !4134
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4135, metadata !DIExpression()), !dbg !4136
  %5 = load i8*, i8** %4, align 4, !dbg !4137
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4138
  %7 = load i32, i32* %3, align 4, !dbg !4139
  %8 = call i32 %6(i32 noundef %7) #10, !dbg !4138
  ret i32 %8, !dbg !4140
}

; Function Attrs: noinline nounwind optnone
define internal void @k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !4141 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4145, metadata !DIExpression()), !dbg !4146
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %5, !dbg !4149

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4150, !srcloc !4152
  br label %6, !dbg !4150

6:                                                ; preds = %5
  %7 = load i8*, i8** %3, align 4, !dbg !4153
  %8 = load i32, i32* %4, align 4, !dbg !4154
  call void @z_impl_k_str_out(i8* noundef %7, i32 noundef %8) #10, !dbg !4155
  ret void, !dbg !4156
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !4157 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4158, metadata !DIExpression()), !dbg !4159
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4160, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4162, metadata !DIExpression()), !dbg !4163
  store i32 0, i32* %5, align 4, !dbg !4164
  br label %6, !dbg !4166

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %5, align 4, !dbg !4167
  %8 = load i32, i32* %4, align 4, !dbg !4169
  %9 = icmp ult i32 %7, %8, !dbg !4170
  br i1 %9, label %10, label %21, !dbg !4171

10:                                               ; preds = %6
  %11 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4172
  %12 = load i8*, i8** %3, align 4, !dbg !4174
  %13 = load i32, i32* %5, align 4, !dbg !4175
  %14 = getelementptr inbounds i8, i8* %12, i32 %13, !dbg !4174
  %15 = load i8, i8* %14, align 1, !dbg !4174
  %16 = zext i8 %15 to i32, !dbg !4174
  %17 = call i32 %11(i32 noundef %16) #10, !dbg !4172
  br label %18, !dbg !4176

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4, !dbg !4177
  %20 = add i32 %19, 1, !dbg !4177
  store i32 %20, i32* %5, align 4, !dbg !4177
  br label %6, !dbg !4178, !llvm.loop !4179

21:                                               ; preds = %6
  ret void, !dbg !4181
}

; Function Attrs: noinline nounwind optnone
define dso_local void @printk(i8* noundef %0, ...) #1 !dbg !4182 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.__va_list, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4185, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !4187, metadata !DIExpression()), !dbg !4188
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !4189
  call void @llvm.va_start(i8* %4), !dbg !4189
  %5 = load i8*, i8** %2, align 4, !dbg !4190
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !4191
  %7 = bitcast i8** %6 to [1 x i32]*, !dbg !4191
  %8 = load [1 x i32], [1 x i32]* %7, align 4, !dbg !4191
  call void @vprintk(i8* noundef %5, [1 x i32] %8) #10, !dbg !4191
  %9 = bitcast %struct.__va_list* %3 to i8*, !dbg !4192
  call void @llvm.va_end(i8* %9), !dbg !4192
  ret void, !dbg !4193
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) #1 !dbg !4194 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4197, metadata !DIExpression()), !dbg !4198
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4199, metadata !DIExpression()), !dbg !4200
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4201, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !4203, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4205, metadata !DIExpression()), !dbg !4206
  %9 = bitcast %struct.__va_list* %7 to i8*, !dbg !4207
  call void @llvm.va_start(i8* %9), !dbg !4207
  %10 = load i8*, i8** %4, align 4, !dbg !4208
  %11 = load i32, i32* %5, align 4, !dbg !4209
  %12 = load i8*, i8** %6, align 4, !dbg !4210
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0, !dbg !4211
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !4211
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !4211
  %16 = call i32 @vsnprintk(i8* noundef %10, i32 noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !4211
  store i32 %16, i32* %8, align 4, !dbg !4212
  %17 = bitcast %struct.__va_list* %7 to i8*, !dbg !4213
  call void @llvm.va_end(i8* %17), !dbg !4213
  %18 = load i32, i32* %8, align 4, !dbg !4214
  ret i32 %18, !dbg !4215
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !4216 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca %struct.str_context, align 4
  %10 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %11 = bitcast i8** %10 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %11, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4219, metadata !DIExpression()), !dbg !4220
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4221, metadata !DIExpression()), !dbg !4222
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4223, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4225, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.declare(metadata %struct.str_context* %9, metadata !4227, metadata !DIExpression()), !dbg !4233
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 0, !dbg !4234
  %13 = load i8*, i8** %6, align 4, !dbg !4235
  store i8* %13, i8** %12, align 4, !dbg !4234
  %14 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !4234
  %15 = load i32, i32* %7, align 4, !dbg !4236
  store i32 %15, i32* %14, align 4, !dbg !4234
  %16 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !4234
  store i32 0, i32* %16, align 4, !dbg !4234
  %17 = bitcast %struct.str_context* %9 to i8*, !dbg !4237
  %18 = load i8*, i8** %8, align 4, !dbg !4238
  %19 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !4239
  %20 = bitcast i8** %19 to [1 x i32]*, !dbg !4239
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !4239
  %22 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef %17, i8* noundef %18, [1 x i32] %21) #10, !dbg !4239
  %23 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !4240
  %24 = load i32, i32* %23, align 4, !dbg !4240
  %25 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !4242
  %26 = load i32, i32* %25, align 4, !dbg !4242
  %27 = icmp slt i32 %24, %26, !dbg !4243
  br i1 %27, label %28, label %33, !dbg !4244

28:                                               ; preds = %4
  %29 = load i8*, i8** %6, align 4, !dbg !4245
  %30 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !4247
  %31 = load i32, i32* %30, align 4, !dbg !4247
  %32 = getelementptr inbounds i8, i8* %29, i32 %31, !dbg !4245
  store i8 0, i8* %32, align 1, !dbg !4248
  br label %33, !dbg !4249

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !4250
  %35 = load i32, i32* %34, align 4, !dbg !4250
  ret i32 %35, !dbg !4251
}

; Function Attrs: noinline nounwind optnone
define internal i32 @str_out(i32 noundef %0, %struct.str_context* noundef %1) #1 !dbg !4252 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_context*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4256, metadata !DIExpression()), !dbg !4257
  store %struct.str_context* %1, %struct.str_context** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.str_context** %5, metadata !4258, metadata !DIExpression()), !dbg !4259
  %6 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4260
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %6, i32 0, i32 0, !dbg !4262
  %8 = load i8*, i8** %7, align 4, !dbg !4262
  %9 = icmp eq i8* %8, null, !dbg !4263
  br i1 %9, label %18, label %10, !dbg !4264

10:                                               ; preds = %2
  %11 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4265
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %11, i32 0, i32 2, !dbg !4266
  %13 = load i32, i32* %12, align 4, !dbg !4266
  %14 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4267
  %15 = getelementptr inbounds %struct.str_context, %struct.str_context* %14, i32 0, i32 1, !dbg !4268
  %16 = load i32, i32* %15, align 4, !dbg !4268
  %17 = icmp sge i32 %13, %16, !dbg !4269
  br i1 %17, label %18, label %24, !dbg !4270

18:                                               ; preds = %10, %2
  %19 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4271
  %20 = getelementptr inbounds %struct.str_context, %struct.str_context* %19, i32 0, i32 2, !dbg !4273
  %21 = load i32, i32* %20, align 4, !dbg !4274
  %22 = add nsw i32 %21, 1, !dbg !4274
  store i32 %22, i32* %20, align 4, !dbg !4274
  %23 = load i32, i32* %4, align 4, !dbg !4275
  store i32 %23, i32* %3, align 4, !dbg !4276
  br label %55, !dbg !4276

24:                                               ; preds = %10
  %25 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4277
  %26 = getelementptr inbounds %struct.str_context, %struct.str_context* %25, i32 0, i32 2, !dbg !4279
  %27 = load i32, i32* %26, align 4, !dbg !4279
  %28 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4280
  %29 = getelementptr inbounds %struct.str_context, %struct.str_context* %28, i32 0, i32 1, !dbg !4281
  %30 = load i32, i32* %29, align 4, !dbg !4281
  %31 = sub nsw i32 %30, 1, !dbg !4282
  %32 = icmp eq i32 %27, %31, !dbg !4283
  br i1 %32, label %33, label %42, !dbg !4284

33:                                               ; preds = %24
  %34 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4285
  %35 = getelementptr inbounds %struct.str_context, %struct.str_context* %34, i32 0, i32 0, !dbg !4287
  %36 = load i8*, i8** %35, align 4, !dbg !4287
  %37 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4288
  %38 = getelementptr inbounds %struct.str_context, %struct.str_context* %37, i32 0, i32 2, !dbg !4289
  %39 = load i32, i32* %38, align 4, !dbg !4290
  %40 = add nsw i32 %39, 1, !dbg !4290
  store i32 %40, i32* %38, align 4, !dbg !4290
  %41 = getelementptr inbounds i8, i8* %36, i32 %39, !dbg !4285
  store i8 0, i8* %41, align 1, !dbg !4291
  br label %53, !dbg !4292

42:                                               ; preds = %24
  %43 = load i32, i32* %4, align 4, !dbg !4293
  %44 = trunc i32 %43 to i8, !dbg !4293
  %45 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4295
  %46 = getelementptr inbounds %struct.str_context, %struct.str_context* %45, i32 0, i32 0, !dbg !4296
  %47 = load i8*, i8** %46, align 4, !dbg !4296
  %48 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4297
  %49 = getelementptr inbounds %struct.str_context, %struct.str_context* %48, i32 0, i32 2, !dbg !4298
  %50 = load i32, i32* %49, align 4, !dbg !4299
  %51 = add nsw i32 %50, 1, !dbg !4299
  store i32 %51, i32* %49, align 4, !dbg !4299
  %52 = getelementptr inbounds i8, i8* %47, i32 %50, !dbg !4295
  store i8 %44, i8* %52, align 1, !dbg !4300
  br label %53

53:                                               ; preds = %42, %33
  %54 = load i32, i32* %4, align 4, !dbg !4301
  store i32 %54, i32* %3, align 4, !dbg !4302
  br label %55, !dbg !4302

55:                                               ; preds = %53, %18
  %56 = load i32, i32* %3, align 4, !dbg !4303
  ret i32 %56, !dbg !4303
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !4304 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !4308, metadata !DIExpression()), !dbg !4309
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4310, metadata !DIExpression()), !dbg !4311
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4312, metadata !DIExpression()), !dbg !4313
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4314, metadata !DIExpression()), !dbg !4315
  %9 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !4316
  %10 = load i8*, i8** %6, align 4, !dbg !4317
  %11 = load i8*, i8** %7, align 4, !dbg !4318
  %12 = load i8*, i8** %8, align 4, !dbg !4319
  call void %9(i8* noundef %10, i8* noundef %11, i8* noundef %12) #10, !dbg !4316
  %13 = call %struct.k_thread.60* @k_current_get() #11, !dbg !4320
  call void @k_thread_abort(%struct.k_thread.60* noundef %13) #10, !dbg !4321
  unreachable, !dbg !4322
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get() #6 !dbg !4323 {
  %1 = call %struct.k_thread.60* @z_current_get() #11, !dbg !4421
  ret %struct.k_thread.60* %1, !dbg !4422
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.60* noundef %0) #1 !dbg !4423 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !4426, metadata !DIExpression()), !dbg !4427
  br label %3, !dbg !4428

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4429, !srcloc !4431
  br label %4, !dbg !4429

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !4432
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !4433
  ret void, !dbg !4434
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get() #6 !dbg !4435 {
  br label %1, !dbg !4436

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4437, !srcloc !4439
  br label %2, !dbg !4437

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !4440
  ret %struct.k_thread.60* %3, !dbg !4441
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) #1 !dbg !4442 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32 (...)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca [22 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.anon, align 8
  %18 = alloca %struct.conversion*, align 4
  %19 = alloca %union.argument_value*, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8, align 1
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0
  %45 = bitcast i8** %44 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %45, align 4
  store i32 (...)* %0, i32 (...)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %8, metadata !4451, metadata !DIExpression()), !dbg !4452
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4453, metadata !DIExpression()), !dbg !4454
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4455, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !4457, metadata !DIExpression()), !dbg !4458
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4459, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !4461, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4466, metadata !DIExpression()), !dbg !4467
  store i32 0, i32* %13, align 4, !dbg !4467
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4468, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.declare(metadata i8* %15, metadata !4470, metadata !DIExpression()), !dbg !4472
  %46 = load i32, i32* %11, align 4, !dbg !4473
  %47 = and i32 %46, 1, !dbg !4474
  %48 = icmp eq i32 %47, 1, !dbg !4475
  %49 = zext i1 %48 to i8, !dbg !4472
  store i8 %49, i8* %15, align 1, !dbg !4472
  br label %50, !dbg !4476

50:                                               ; preds = %833, %581, %432, %77, %5
  %51 = load i8*, i8** %10, align 4, !dbg !4477
  %52 = load i8, i8* %51, align 1, !dbg !4478
  %53 = zext i8 %52 to i32, !dbg !4478
  %54 = icmp ne i32 %53, 0, !dbg !4479
  br i1 %54, label %55, label %834, !dbg !4476

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 4, !dbg !4480
  %57 = load i8, i8* %56, align 1, !dbg !4483
  %58 = zext i8 %57 to i32, !dbg !4483
  %59 = icmp ne i32 %58, 37, !dbg !4484
  br i1 %59, label %60, label %78, !dbg !4485

60:                                               ; preds = %55
  br label %61, !dbg !4486

61:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4488, metadata !DIExpression()), !dbg !4490
  %62 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4490
  %63 = load i8*, i8** %10, align 4, !dbg !4490
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !4490
  store i8* %64, i8** %10, align 4, !dbg !4490
  %65 = load i8, i8* %63, align 1, !dbg !4490
  %66 = zext i8 %65 to i32, !dbg !4490
  %67 = load i8*, i8** %9, align 4, !dbg !4490
  %68 = bitcast i32 (...)* %62 to i32 (i32, i8*)*, !dbg !4490
  %69 = call i32 %68(i32 noundef %66, i8* noundef %67) #10, !dbg !4490
  store i32 %69, i32* %16, align 4, !dbg !4490
  %70 = load i32, i32* %16, align 4, !dbg !4491
  %71 = icmp slt i32 %70, 0, !dbg !4491
  br i1 %71, label %72, label %74, !dbg !4490

72:                                               ; preds = %61
  %73 = load i32, i32* %16, align 4, !dbg !4493
  store i32 %73, i32* %6, align 4, !dbg !4493
  br label %836, !dbg !4493

74:                                               ; preds = %61
  %75 = load i32, i32* %13, align 4, !dbg !4490
  %76 = add i32 %75, 1, !dbg !4490
  store i32 %76, i32* %13, align 4, !dbg !4490
  br label %77, !dbg !4490

77:                                               ; preds = %74
  br label %50, !dbg !4495, !llvm.loop !4496

78:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata %struct.anon* %17, metadata !4498, metadata !DIExpression()), !dbg !4543
  %79 = bitcast %struct.anon* %17 to i8*, !dbg !4543
  call void @llvm.memset.p0i8.i32(i8* align 8 %79, i8 0, i32 24, i1 false), !dbg !4543
  call void @llvm.dbg.declare(metadata %struct.conversion** %18, metadata !4544, metadata !DIExpression()), !dbg !4547
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1, !dbg !4548
  store %struct.conversion* %80, %struct.conversion** %18, align 4, !dbg !4547
  call void @llvm.dbg.declare(metadata %union.argument_value** %19, metadata !4549, metadata !DIExpression()), !dbg !4552
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0, !dbg !4553
  store %union.argument_value* %81, %union.argument_value** %19, align 4, !dbg !4552
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4554, metadata !DIExpression()), !dbg !4555
  %82 = load i8*, i8** %10, align 4, !dbg !4556
  store i8* %82, i8** %20, align 4, !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4557, metadata !DIExpression()), !dbg !4558
  store i32 -1, i32* %21, align 4, !dbg !4558
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4559, metadata !DIExpression()), !dbg !4560
  store i32 -1, i32* %22, align 4, !dbg !4560
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4561, metadata !DIExpression()), !dbg !4562
  store i8* null, i8** %23, align 4, !dbg !4562
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4563, metadata !DIExpression()), !dbg !4564
  %83 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4565
  %84 = getelementptr inbounds i8, i8* %83, i32 22, !dbg !4566
  store i8* %84, i8** %24, align 4, !dbg !4564
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4567, metadata !DIExpression()), !dbg !4568
  store i8 0, i8* %25, align 1, !dbg !4568
  %85 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4569
  %86 = load i8*, i8** %20, align 4, !dbg !4570
  %87 = call i8* @extract_conversion(%struct.conversion* noundef %85, i8* noundef %86) #10, !dbg !4571
  store i8* %87, i8** %10, align 4, !dbg !4572
  %88 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4573
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !4575
  %90 = load i24, i24* %89, align 4, !dbg !4575
  %91 = lshr i24 %90, 8, !dbg !4575
  %92 = and i24 %91, 1, !dbg !4575
  %93 = trunc i24 %92 to i1, !dbg !4575
  br i1 %93, label %94, label %111, !dbg !4576

94:                                               ; preds = %78
  %95 = bitcast %struct.__va_list* %7 to i8**, !dbg !4577
  %96 = load i8*, i8** %95, align 4, !dbg !4577
  %97 = getelementptr inbounds i8, i8* %96, i32 4, !dbg !4577
  store i8* %97, i8** %95, align 4, !dbg !4577
  %98 = bitcast i8* %96 to i32*, !dbg !4577
  %99 = load i32, i32* %98, align 4, !dbg !4577
  store i32 %99, i32* %21, align 4, !dbg !4579
  %100 = load i32, i32* %21, align 4, !dbg !4580
  %101 = icmp slt i32 %100, 0, !dbg !4582
  br i1 %101, label %102, label %110, !dbg !4583

102:                                              ; preds = %94
  %103 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4584
  %104 = bitcast %struct.conversion* %103 to i24*, !dbg !4586
  %105 = load i24, i24* %104, align 4, !dbg !4587
  %106 = and i24 %105, -5, !dbg !4587
  %107 = or i24 %106, 4, !dbg !4587
  store i24 %107, i24* %104, align 4, !dbg !4587
  %108 = load i32, i32* %21, align 4, !dbg !4588
  %109 = sub nsw i32 0, %108, !dbg !4589
  store i32 %109, i32* %21, align 4, !dbg !4590
  br label %110, !dbg !4591

110:                                              ; preds = %102, %94
  br label %125, !dbg !4592

111:                                              ; preds = %78
  %112 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4593
  %113 = bitcast %struct.conversion* %112 to i24*, !dbg !4595
  %114 = load i24, i24* %113, align 4, !dbg !4595
  %115 = lshr i24 %114, 7, !dbg !4595
  %116 = and i24 %115, 1, !dbg !4595
  %117 = trunc i24 %116 to i1, !dbg !4595
  br i1 %117, label %118, label %123, !dbg !4596

118:                                              ; preds = %111
  %119 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4597
  %120 = getelementptr inbounds %struct.conversion, %struct.conversion* %119, i32 0, i32 2, !dbg !4599
  %121 = bitcast %union.anon.68* %120 to i32*, !dbg !4599
  %122 = load i32, i32* %121, align 4, !dbg !4599
  store i32 %122, i32* %21, align 4, !dbg !4600
  br label %124, !dbg !4601

123:                                              ; preds = %111
  br label %124

124:                                              ; preds = %123, %118
  br label %125

125:                                              ; preds = %124, %110
  %126 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4602
  %127 = bitcast %struct.conversion* %126 to i24*, !dbg !4604
  %128 = load i24, i24* %127, align 4, !dbg !4604
  %129 = lshr i24 %128, 10, !dbg !4604
  %130 = and i24 %129, 1, !dbg !4604
  %131 = trunc i24 %130 to i1, !dbg !4604
  br i1 %131, label %132, label %149, !dbg !4605

132:                                              ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4606, metadata !DIExpression()), !dbg !4608
  %133 = bitcast %struct.__va_list* %7 to i8**, !dbg !4609
  %134 = load i8*, i8** %133, align 4, !dbg !4609
  %135 = getelementptr inbounds i8, i8* %134, i32 4, !dbg !4609
  store i8* %135, i8** %133, align 4, !dbg !4609
  %136 = bitcast i8* %134 to i32*, !dbg !4609
  %137 = load i32, i32* %136, align 4, !dbg !4609
  store i32 %137, i32* %26, align 4, !dbg !4608
  %138 = load i32, i32* %26, align 4, !dbg !4610
  %139 = icmp slt i32 %138, 0, !dbg !4612
  br i1 %139, label %140, label %146, !dbg !4613

140:                                              ; preds = %132
  %141 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4614
  %142 = bitcast %struct.conversion* %141 to i24*, !dbg !4616
  %143 = load i24, i24* %142, align 4, !dbg !4617
  %144 = and i24 %143, -513, !dbg !4617
  %145 = or i24 %144, 0, !dbg !4617
  store i24 %145, i24* %142, align 4, !dbg !4617
  br label %148, !dbg !4618

146:                                              ; preds = %132
  %147 = load i32, i32* %26, align 4, !dbg !4619
  store i32 %147, i32* %22, align 4, !dbg !4621
  br label %148

148:                                              ; preds = %146, %140
  br label %163, !dbg !4622

149:                                              ; preds = %125
  %150 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4623
  %151 = bitcast %struct.conversion* %150 to i24*, !dbg !4625
  %152 = load i24, i24* %151, align 4, !dbg !4625
  %153 = lshr i24 %152, 9, !dbg !4625
  %154 = and i24 %153, 1, !dbg !4625
  %155 = trunc i24 %154 to i1, !dbg !4625
  br i1 %155, label %156, label %161, !dbg !4626

156:                                              ; preds = %149
  %157 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4627
  %158 = getelementptr inbounds %struct.conversion, %struct.conversion* %157, i32 0, i32 3, !dbg !4629
  %159 = bitcast %union.anon.68* %158 to i32*, !dbg !4629
  %160 = load i32, i32* %159, align 4, !dbg !4629
  store i32 %160, i32* %22, align 4, !dbg !4630
  br label %162, !dbg !4631

161:                                              ; preds = %149
  br label %162

162:                                              ; preds = %161, %156
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4632
  %165 = getelementptr inbounds %struct.conversion, %struct.conversion* %164, i32 0, i32 2, !dbg !4633
  %166 = bitcast %union.anon.68* %165 to i32*, !dbg !4633
  store i32 0, i32* %166, align 4, !dbg !4634
  %167 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4635
  %168 = getelementptr inbounds %struct.conversion, %struct.conversion* %167, i32 0, i32 3, !dbg !4636
  %169 = bitcast %union.anon.68* %168 to i32*, !dbg !4636
  store i32 0, i32* %169, align 4, !dbg !4637
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4638, metadata !DIExpression()), !dbg !4639
  %170 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4640
  %171 = bitcast %struct.conversion* %170 to i24*, !dbg !4641
  %172 = load i24, i24* %171, align 4, !dbg !4641
  %173 = lshr i24 %172, 16, !dbg !4641
  %174 = and i24 %173, 7, !dbg !4641
  %175 = zext i24 %174 to i32, !dbg !4641
  store i32 %175, i32* %27, align 4, !dbg !4639
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4642, metadata !DIExpression()), !dbg !4643
  %176 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4644
  %177 = bitcast %struct.conversion* %176 to i24*, !dbg !4645
  %178 = load i24, i24* %177, align 4, !dbg !4645
  %179 = lshr i24 %178, 11, !dbg !4645
  %180 = and i24 %179, 15, !dbg !4645
  %181 = zext i24 %180 to i32, !dbg !4645
  store i32 %181, i32* %28, align 4, !dbg !4643
  %182 = load i32, i32* %27, align 4, !dbg !4646
  %183 = icmp eq i32 %182, 1, !dbg !4648
  br i1 %183, label %184, label %262, !dbg !4649

184:                                              ; preds = %163
  %185 = load i32, i32* %28, align 4, !dbg !4650
  switch i32 %185, label %186 [
    i32 0, label %187
    i32 1, label %187
    i32 2, label %187
    i32 3, label %196
    i32 4, label %205
    i32 5, label %217
    i32 6, label %229
    i32 7, label %229
  ], !dbg !4652

186:                                              ; preds = %184
  br label %187, !dbg !4653

187:                                              ; preds = %184, %184, %184, %186
  %188 = bitcast %struct.__va_list* %7 to i8**, !dbg !4654
  %189 = load i8*, i8** %188, align 4, !dbg !4654
  %190 = getelementptr inbounds i8, i8* %189, i32 4, !dbg !4654
  store i8* %190, i8** %188, align 4, !dbg !4654
  %191 = bitcast i8* %189 to i32*, !dbg !4654
  %192 = load i32, i32* %191, align 4, !dbg !4654
  %193 = sext i32 %192 to i64, !dbg !4654
  %194 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4656
  %195 = bitcast %union.argument_value* %194 to i64*, !dbg !4657
  store i64 %193, i64* %195, align 8, !dbg !4658
  br label %238, !dbg !4659

196:                                              ; preds = %184
  %197 = bitcast %struct.__va_list* %7 to i8**, !dbg !4660
  %198 = load i8*, i8** %197, align 4, !dbg !4660
  %199 = getelementptr inbounds i8, i8* %198, i32 4, !dbg !4660
  store i8* %199, i8** %197, align 4, !dbg !4660
  %200 = bitcast i8* %198 to i32*, !dbg !4660
  %201 = load i32, i32* %200, align 4, !dbg !4660
  %202 = sext i32 %201 to i64, !dbg !4660
  %203 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4663
  %204 = bitcast %union.argument_value* %203 to i64*, !dbg !4664
  store i64 %202, i64* %204, align 8, !dbg !4665
  br label %238, !dbg !4666

205:                                              ; preds = %184
  %206 = bitcast %struct.__va_list* %7 to i8**, !dbg !4667
  %207 = load i8*, i8** %206, align 4, !dbg !4667
  %208 = ptrtoint i8* %207 to i32, !dbg !4667
  %209 = add i32 %208, 7, !dbg !4667
  %210 = and i32 %209, -8, !dbg !4667
  %211 = inttoptr i32 %210 to i8*, !dbg !4667
  %212 = getelementptr inbounds i8, i8* %211, i32 8, !dbg !4667
  store i8* %212, i8** %206, align 4, !dbg !4667
  %213 = bitcast i8* %211 to i64*, !dbg !4667
  %214 = load i64, i64* %213, align 8, !dbg !4667
  %215 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4668
  %216 = bitcast %union.argument_value* %215 to i64*, !dbg !4669
  store i64 %214, i64* %216, align 8, !dbg !4670
  br label %238, !dbg !4671

217:                                              ; preds = %184
  %218 = bitcast %struct.__va_list* %7 to i8**, !dbg !4672
  %219 = load i8*, i8** %218, align 4, !dbg !4672
  %220 = ptrtoint i8* %219 to i32, !dbg !4672
  %221 = add i32 %220, 7, !dbg !4672
  %222 = and i32 %221, -8, !dbg !4672
  %223 = inttoptr i32 %222 to i8*, !dbg !4672
  %224 = getelementptr inbounds i8, i8* %223, i32 8, !dbg !4672
  store i8* %224, i8** %218, align 4, !dbg !4672
  %225 = bitcast i8* %223 to i64*, !dbg !4672
  %226 = load i64, i64* %225, align 8, !dbg !4672
  %227 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4673
  %228 = bitcast %union.argument_value* %227 to i64*, !dbg !4674
  store i64 %226, i64* %228, align 8, !dbg !4675
  br label %238, !dbg !4676

229:                                              ; preds = %184, %184
  %230 = bitcast %struct.__va_list* %7 to i8**, !dbg !4677
  %231 = load i8*, i8** %230, align 4, !dbg !4677
  %232 = getelementptr inbounds i8, i8* %231, i32 4, !dbg !4677
  store i8* %232, i8** %230, align 4, !dbg !4677
  %233 = bitcast i8* %231 to i32*, !dbg !4677
  %234 = load i32, i32* %233, align 4, !dbg !4677
  %235 = sext i32 %234 to i64, !dbg !4678
  %236 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4679
  %237 = bitcast %union.argument_value* %236 to i64*, !dbg !4680
  store i64 %235, i64* %237, align 8, !dbg !4681
  br label %238, !dbg !4682

238:                                              ; preds = %229, %217, %205, %196, %187
  %239 = load i32, i32* %28, align 4, !dbg !4683
  %240 = icmp eq i32 %239, 1, !dbg !4685
  br i1 %240, label %241, label %249, !dbg !4686

241:                                              ; preds = %238
  %242 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4687
  %243 = bitcast %union.argument_value* %242 to i64*, !dbg !4689
  %244 = load i64, i64* %243, align 8, !dbg !4689
  %245 = trunc i64 %244 to i8, !dbg !4690
  %246 = sext i8 %245 to i64, !dbg !4690
  %247 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4691
  %248 = bitcast %union.argument_value* %247 to i64*, !dbg !4692
  store i64 %246, i64* %248, align 8, !dbg !4693
  br label %261, !dbg !4694

249:                                              ; preds = %238
  %250 = load i32, i32* %28, align 4, !dbg !4695
  %251 = icmp eq i32 %250, 2, !dbg !4697
  br i1 %251, label %252, label %260, !dbg !4698

252:                                              ; preds = %249
  %253 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4699
  %254 = bitcast %union.argument_value* %253 to i64*, !dbg !4701
  %255 = load i64, i64* %254, align 8, !dbg !4701
  %256 = trunc i64 %255 to i16, !dbg !4702
  %257 = sext i16 %256 to i64, !dbg !4702
  %258 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4703
  %259 = bitcast %union.argument_value* %258 to i64*, !dbg !4704
  store i64 %257, i64* %259, align 8, !dbg !4705
  br label %260, !dbg !4706

260:                                              ; preds = %252, %249
  br label %261

261:                                              ; preds = %260, %241
  br label %404, !dbg !4707

262:                                              ; preds = %163
  %263 = load i32, i32* %27, align 4, !dbg !4708
  %264 = icmp eq i32 %263, 2, !dbg !4710
  br i1 %264, label %265, label %359, !dbg !4711

265:                                              ; preds = %262
  %266 = load i32, i32* %28, align 4, !dbg !4712
  switch i32 %266, label %267 [
    i32 0, label %268
    i32 1, label %268
    i32 2, label %268
    i32 3, label %277
    i32 4, label %302
    i32 5, label %314
    i32 6, label %326
    i32 7, label %326
  ], !dbg !4714

267:                                              ; preds = %265
  br label %268, !dbg !4715

268:                                              ; preds = %265, %265, %265, %267
  %269 = bitcast %struct.__va_list* %7 to i8**, !dbg !4716
  %270 = load i8*, i8** %269, align 4, !dbg !4716
  %271 = getelementptr inbounds i8, i8* %270, i32 4, !dbg !4716
  store i8* %271, i8** %269, align 4, !dbg !4716
  %272 = bitcast i8* %270 to i32*, !dbg !4716
  %273 = load i32, i32* %272, align 4, !dbg !4716
  %274 = zext i32 %273 to i64, !dbg !4716
  %275 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4718
  %276 = bitcast %union.argument_value* %275 to i64*, !dbg !4719
  store i64 %274, i64* %276, align 8, !dbg !4720
  br label %335, !dbg !4721

277:                                              ; preds = %265
  %278 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4722
  %279 = getelementptr inbounds %struct.conversion, %struct.conversion* %278, i32 0, i32 1, !dbg !4724
  %280 = load i8, i8* %279, align 1, !dbg !4724
  %281 = zext i8 %280 to i32, !dbg !4722
  %282 = icmp eq i32 %281, 99, !dbg !4725
  br i1 %282, label %283, label %292, !dbg !4726

283:                                              ; preds = %277
  %284 = bitcast %struct.__va_list* %7 to i8**, !dbg !4727
  %285 = load i8*, i8** %284, align 4, !dbg !4727
  %286 = getelementptr inbounds i8, i8* %285, i32 4, !dbg !4727
  store i8* %286, i8** %284, align 4, !dbg !4727
  %287 = bitcast i8* %285 to i32*, !dbg !4727
  %288 = load i32, i32* %287, align 4, !dbg !4727
  %289 = zext i32 %288 to i64, !dbg !4729
  %290 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4730
  %291 = bitcast %union.argument_value* %290 to i64*, !dbg !4731
  store i64 %289, i64* %291, align 8, !dbg !4732
  br label %301, !dbg !4733

292:                                              ; preds = %277
  %293 = bitcast %struct.__va_list* %7 to i8**, !dbg !4734
  %294 = load i8*, i8** %293, align 4, !dbg !4734
  %295 = getelementptr inbounds i8, i8* %294, i32 4, !dbg !4734
  store i8* %295, i8** %293, align 4, !dbg !4734
  %296 = bitcast i8* %294 to i32*, !dbg !4734
  %297 = load i32, i32* %296, align 4, !dbg !4734
  %298 = zext i32 %297 to i64, !dbg !4734
  %299 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4736
  %300 = bitcast %union.argument_value* %299 to i64*, !dbg !4737
  store i64 %298, i64* %300, align 8, !dbg !4738
  br label %301

301:                                              ; preds = %292, %283
  br label %335, !dbg !4739

302:                                              ; preds = %265
  %303 = bitcast %struct.__va_list* %7 to i8**, !dbg !4740
  %304 = load i8*, i8** %303, align 4, !dbg !4740
  %305 = ptrtoint i8* %304 to i32, !dbg !4740
  %306 = add i32 %305, 7, !dbg !4740
  %307 = and i32 %306, -8, !dbg !4740
  %308 = inttoptr i32 %307 to i8*, !dbg !4740
  %309 = getelementptr inbounds i8, i8* %308, i32 8, !dbg !4740
  store i8* %309, i8** %303, align 4, !dbg !4740
  %310 = bitcast i8* %308 to i64*, !dbg !4740
  %311 = load i64, i64* %310, align 8, !dbg !4740
  %312 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4741
  %313 = bitcast %union.argument_value* %312 to i64*, !dbg !4742
  store i64 %311, i64* %313, align 8, !dbg !4743
  br label %335, !dbg !4744

314:                                              ; preds = %265
  %315 = bitcast %struct.__va_list* %7 to i8**, !dbg !4745
  %316 = load i8*, i8** %315, align 4, !dbg !4745
  %317 = ptrtoint i8* %316 to i32, !dbg !4745
  %318 = add i32 %317, 7, !dbg !4745
  %319 = and i32 %318, -8, !dbg !4745
  %320 = inttoptr i32 %319 to i8*, !dbg !4745
  %321 = getelementptr inbounds i8, i8* %320, i32 8, !dbg !4745
  store i8* %321, i8** %315, align 4, !dbg !4745
  %322 = bitcast i8* %320 to i64*, !dbg !4745
  %323 = load i64, i64* %322, align 8, !dbg !4745
  %324 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4746
  %325 = bitcast %union.argument_value* %324 to i64*, !dbg !4747
  store i64 %323, i64* %325, align 8, !dbg !4748
  br label %335, !dbg !4749

326:                                              ; preds = %265, %265
  %327 = bitcast %struct.__va_list* %7 to i8**, !dbg !4750
  %328 = load i8*, i8** %327, align 4, !dbg !4750
  %329 = getelementptr inbounds i8, i8* %328, i32 4, !dbg !4750
  store i8* %329, i8** %327, align 4, !dbg !4750
  %330 = bitcast i8* %328 to i32*, !dbg !4750
  %331 = load i32, i32* %330, align 4, !dbg !4750
  %332 = zext i32 %331 to i64, !dbg !4751
  %333 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4752
  %334 = bitcast %union.argument_value* %333 to i64*, !dbg !4753
  store i64 %332, i64* %334, align 8, !dbg !4754
  br label %335, !dbg !4755

335:                                              ; preds = %326, %314, %302, %301, %268
  %336 = load i32, i32* %28, align 4, !dbg !4756
  %337 = icmp eq i32 %336, 1, !dbg !4758
  br i1 %337, label %338, label %346, !dbg !4759

338:                                              ; preds = %335
  %339 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4760
  %340 = bitcast %union.argument_value* %339 to i64*, !dbg !4762
  %341 = load i64, i64* %340, align 8, !dbg !4762
  %342 = trunc i64 %341 to i8, !dbg !4763
  %343 = zext i8 %342 to i64, !dbg !4763
  %344 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4764
  %345 = bitcast %union.argument_value* %344 to i64*, !dbg !4765
  store i64 %343, i64* %345, align 8, !dbg !4766
  br label %358, !dbg !4767

346:                                              ; preds = %335
  %347 = load i32, i32* %28, align 4, !dbg !4768
  %348 = icmp eq i32 %347, 2, !dbg !4770
  br i1 %348, label %349, label %357, !dbg !4771

349:                                              ; preds = %346
  %350 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4772
  %351 = bitcast %union.argument_value* %350 to i64*, !dbg !4774
  %352 = load i64, i64* %351, align 8, !dbg !4774
  %353 = trunc i64 %352 to i16, !dbg !4775
  %354 = zext i16 %353 to i64, !dbg !4775
  %355 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4776
  %356 = bitcast %union.argument_value* %355 to i64*, !dbg !4777
  store i64 %354, i64* %356, align 8, !dbg !4778
  br label %357, !dbg !4779

357:                                              ; preds = %349, %346
  br label %358

358:                                              ; preds = %357, %338
  br label %403, !dbg !4780

359:                                              ; preds = %262
  %360 = load i32, i32* %27, align 4, !dbg !4781
  %361 = icmp eq i32 %360, 4, !dbg !4783
  br i1 %361, label %362, label %390, !dbg !4784

362:                                              ; preds = %359
  %363 = load i32, i32* %28, align 4, !dbg !4785
  %364 = icmp eq i32 %363, 8, !dbg !4788
  br i1 %364, label %365, label %377, !dbg !4789

365:                                              ; preds = %362
  %366 = bitcast %struct.__va_list* %7 to i8**, !dbg !4790
  %367 = load i8*, i8** %366, align 4, !dbg !4790
  %368 = ptrtoint i8* %367 to i32, !dbg !4790
  %369 = add i32 %368, 7, !dbg !4790
  %370 = and i32 %369, -8, !dbg !4790
  %371 = inttoptr i32 %370 to i8*, !dbg !4790
  %372 = getelementptr inbounds i8, i8* %371, i32 8, !dbg !4790
  store i8* %372, i8** %366, align 4, !dbg !4790
  %373 = bitcast i8* %371 to double*, !dbg !4790
  %374 = load double, double* %373, align 8, !dbg !4790
  %375 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4792
  %376 = bitcast %union.argument_value* %375 to double*, !dbg !4793
  store double %374, double* %376, align 8, !dbg !4794
  br label %389, !dbg !4795

377:                                              ; preds = %362
  %378 = bitcast %struct.__va_list* %7 to i8**, !dbg !4796
  %379 = load i8*, i8** %378, align 4, !dbg !4796
  %380 = ptrtoint i8* %379 to i32, !dbg !4796
  %381 = add i32 %380, 7, !dbg !4796
  %382 = and i32 %381, -8, !dbg !4796
  %383 = inttoptr i32 %382 to i8*, !dbg !4796
  %384 = getelementptr inbounds i8, i8* %383, i32 8, !dbg !4796
  store i8* %384, i8** %378, align 4, !dbg !4796
  %385 = bitcast i8* %383 to double*, !dbg !4796
  %386 = load double, double* %385, align 8, !dbg !4796
  %387 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4798
  %388 = bitcast %union.argument_value* %387 to double*, !dbg !4799
  store double %386, double* %388, align 8, !dbg !4800
  br label %389

389:                                              ; preds = %377, %365
  br label %402, !dbg !4801

390:                                              ; preds = %359
  %391 = load i32, i32* %27, align 4, !dbg !4802
  %392 = icmp eq i32 %391, 3, !dbg !4804
  br i1 %392, label %393, label %401, !dbg !4805

393:                                              ; preds = %390
  %394 = bitcast %struct.__va_list* %7 to i8**, !dbg !4806
  %395 = load i8*, i8** %394, align 4, !dbg !4806
  %396 = getelementptr inbounds i8, i8* %395, i32 4, !dbg !4806
  store i8* %396, i8** %394, align 4, !dbg !4806
  %397 = bitcast i8* %395 to i8**, !dbg !4806
  %398 = load i8*, i8** %397, align 4, !dbg !4806
  %399 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4808
  %400 = bitcast %union.argument_value* %399 to i8**, !dbg !4809
  store i8* %398, i8** %400, align 8, !dbg !4810
  br label %401, !dbg !4811

401:                                              ; preds = %393, %390
  br label %402

402:                                              ; preds = %401, %389
  br label %403

403:                                              ; preds = %402, %358
  br label %404

404:                                              ; preds = %403, %261
  %405 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4812
  %406 = bitcast %struct.conversion* %405 to i24*, !dbg !4814
  %407 = load i24, i24* %406, align 4, !dbg !4814
  %408 = and i24 %407, 1, !dbg !4814
  %409 = trunc i24 %408 to i1, !dbg !4814
  br i1 %409, label %417, label %410, !dbg !4815

410:                                              ; preds = %404
  %411 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4816
  %412 = bitcast %struct.conversion* %411 to i24*, !dbg !4817
  %413 = load i24, i24* %412, align 4, !dbg !4817
  %414 = lshr i24 %413, 1, !dbg !4817
  %415 = and i24 %414, 1, !dbg !4817
  %416 = trunc i24 %415 to i1, !dbg !4817
  br i1 %416, label %417, label %433, !dbg !4818

417:                                              ; preds = %410, %404
  br label %418, !dbg !4819

418:                                              ; preds = %417
  call void @llvm.dbg.declare(metadata i32* %29, metadata !4821, metadata !DIExpression()), !dbg !4823
  %419 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4823
  %420 = load i8*, i8** %9, align 4, !dbg !4823
  %421 = load i8*, i8** %20, align 4, !dbg !4823
  %422 = load i8*, i8** %10, align 4, !dbg !4823
  %423 = call i32 @outs(i32 (...)* noundef %419, i8* noundef %420, i8* noundef %421, i8* noundef %422) #10, !dbg !4823
  store i32 %423, i32* %29, align 4, !dbg !4823
  %424 = load i32, i32* %29, align 4, !dbg !4824
  %425 = icmp slt i32 %424, 0, !dbg !4824
  br i1 %425, label %426, label %428, !dbg !4823

426:                                              ; preds = %418
  %427 = load i32, i32* %29, align 4, !dbg !4826
  store i32 %427, i32* %6, align 4, !dbg !4826
  br label %836, !dbg !4826

428:                                              ; preds = %418
  %429 = load i32, i32* %29, align 4, !dbg !4823
  %430 = load i32, i32* %13, align 4, !dbg !4823
  %431 = add i32 %430, %429, !dbg !4823
  store i32 %431, i32* %13, align 4, !dbg !4823
  br label %432, !dbg !4823

432:                                              ; preds = %428
  br label %50, !dbg !4828, !llvm.loop !4496

433:                                              ; preds = %410
  %434 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4829
  %435 = getelementptr inbounds %struct.conversion, %struct.conversion* %434, i32 0, i32 1, !dbg !4830
  %436 = load i8, i8* %435, align 1, !dbg !4830
  %437 = zext i8 %436 to i32, !dbg !4829
  switch i32 %437, label %577 [
    i32 37, label %438
    i32 115, label %452
    i32 99, label %469
    i32 100, label %478
    i32 105, label %478
    i32 111, label %511
    i32 117, label %511
    i32 120, label %511
    i32 88, label %511
    i32 112, label %545
    i32 110, label %570
    i32 97, label %576
    i32 65, label %576
    i32 101, label %576
    i32 69, label %576
    i32 102, label %576
    i32 70, label %576
    i32 103, label %576
    i32 71, label %576
  ], !dbg !4831

438:                                              ; preds = %433
  br label %439, !dbg !4832

439:                                              ; preds = %438
  call void @llvm.dbg.declare(metadata i32* %30, metadata !4834, metadata !DIExpression()), !dbg !4836
  %440 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4836
  %441 = load i8*, i8** %9, align 4, !dbg !4836
  %442 = bitcast i32 (...)* %440 to i32 (i32, i8*)*, !dbg !4836
  %443 = call i32 %442(i32 noundef 37, i8* noundef %441) #10, !dbg !4836
  store i32 %443, i32* %30, align 4, !dbg !4836
  %444 = load i32, i32* %30, align 4, !dbg !4837
  %445 = icmp slt i32 %444, 0, !dbg !4837
  br i1 %445, label %446, label %448, !dbg !4836

446:                                              ; preds = %439
  %447 = load i32, i32* %30, align 4, !dbg !4839
  store i32 %447, i32* %6, align 4, !dbg !4839
  br label %836, !dbg !4839

448:                                              ; preds = %439
  %449 = load i32, i32* %13, align 4, !dbg !4836
  %450 = add i32 %449, 1, !dbg !4836
  store i32 %450, i32* %13, align 4, !dbg !4836
  br label %451, !dbg !4836

451:                                              ; preds = %448
  br label %578, !dbg !4841

452:                                              ; preds = %433
  %453 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4842
  %454 = bitcast %union.argument_value* %453 to i8**, !dbg !4844
  %455 = load i8*, i8** %454, align 8, !dbg !4844
  store i8* %455, i8** %23, align 4, !dbg !4845
  call void @llvm.dbg.declare(metadata i32* %31, metadata !4846, metadata !DIExpression()), !dbg !4847
  %456 = load i32, i32* %22, align 4, !dbg !4848
  %457 = icmp sge i32 %456, 0, !dbg !4850
  br i1 %457, label %458, label %462, !dbg !4851

458:                                              ; preds = %452
  %459 = load i8*, i8** %23, align 4, !dbg !4852
  %460 = load i32, i32* %22, align 4, !dbg !4854
  %461 = call i32 @strnlen(i8* noundef %459, i32 noundef %460) #10, !dbg !4855
  store i32 %461, i32* %31, align 4, !dbg !4856
  br label %465, !dbg !4857

462:                                              ; preds = %452
  %463 = load i8*, i8** %23, align 4, !dbg !4858
  %464 = call i32 @strlen(i8* noundef %463) #10, !dbg !4860
  store i32 %464, i32* %31, align 4, !dbg !4861
  br label %465

465:                                              ; preds = %462, %458
  %466 = load i8*, i8** %23, align 4, !dbg !4862
  %467 = load i32, i32* %31, align 4, !dbg !4863
  %468 = getelementptr inbounds i8, i8* %466, i32 %467, !dbg !4864
  store i8* %468, i8** %24, align 4, !dbg !4865
  store i32 -1, i32* %22, align 4, !dbg !4866
  br label %578, !dbg !4867

469:                                              ; preds = %433
  %470 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4868
  store i8* %470, i8** %23, align 4, !dbg !4869
  %471 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4870
  %472 = bitcast %union.argument_value* %471 to i64*, !dbg !4871
  %473 = load i64, i64* %472, align 8, !dbg !4871
  %474 = trunc i64 %473 to i8, !dbg !4872
  %475 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4873
  store i8 %474, i8* %475, align 1, !dbg !4874
  %476 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4875
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !4876
  store i8* %477, i8** %24, align 4, !dbg !4877
  br label %578, !dbg !4878

478:                                              ; preds = %433, %433
  %479 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4879
  %480 = bitcast %struct.conversion* %479 to i24*, !dbg !4881
  %481 = load i24, i24* %480, align 4, !dbg !4881
  %482 = lshr i24 %481, 3, !dbg !4881
  %483 = and i24 %482, 1, !dbg !4881
  %484 = trunc i24 %483 to i1, !dbg !4881
  br i1 %484, label %485, label %486, !dbg !4882

485:                                              ; preds = %478
  store i8 43, i8* %25, align 1, !dbg !4883
  br label %495, !dbg !4885

486:                                              ; preds = %478
  %487 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4886
  %488 = bitcast %struct.conversion* %487 to i24*, !dbg !4888
  %489 = load i24, i24* %488, align 4, !dbg !4888
  %490 = lshr i24 %489, 4, !dbg !4888
  %491 = and i24 %490, 1, !dbg !4888
  %492 = trunc i24 %491 to i1, !dbg !4888
  br i1 %492, label %493, label %494, !dbg !4889

493:                                              ; preds = %486
  store i8 32, i8* %25, align 1, !dbg !4890
  br label %494, !dbg !4892

494:                                              ; preds = %493, %486
  br label %495

495:                                              ; preds = %494, %485
  %496 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4893
  %497 = bitcast %union.argument_value* %496 to i64*, !dbg !4894
  %498 = load i64, i64* %497, align 8, !dbg !4894
  store i64 %498, i64* %14, align 8, !dbg !4895
  %499 = load i64, i64* %14, align 8, !dbg !4896
  %500 = icmp slt i64 %499, 0, !dbg !4898
  br i1 %500, label %501, label %506, !dbg !4899

501:                                              ; preds = %495
  store i8 45, i8* %25, align 1, !dbg !4900
  %502 = load i64, i64* %14, align 8, !dbg !4902
  %503 = sub nsw i64 0, %502, !dbg !4903
  %504 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4904
  %505 = bitcast %union.argument_value* %504 to i64*, !dbg !4905
  store i64 %503, i64* %505, align 8, !dbg !4906
  br label %510, !dbg !4907

506:                                              ; preds = %495
  %507 = load i64, i64* %14, align 8, !dbg !4908
  %508 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4910
  %509 = bitcast %union.argument_value* %508 to i64*, !dbg !4911
  store i64 %507, i64* %509, align 8, !dbg !4912
  br label %510

510:                                              ; preds = %506, %501
  br label %511, !dbg !4913

511:                                              ; preds = %433, %433, %433, %433, %510
  %512 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4914
  %513 = bitcast %union.argument_value* %512 to i64*, !dbg !4915
  %514 = load i64, i64* %513, align 8, !dbg !4915
  %515 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4916
  %516 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4917
  %517 = load i8*, i8** %24, align 4, !dbg !4918
  %518 = call i8* @encode_uint(i64 noundef %514, %struct.conversion* noundef %515, i8* noundef %516, i8* noundef %517) #10, !dbg !4919
  store i8* %518, i8** %23, align 4, !dbg !4920
  br label %519, !dbg !4921

519:                                              ; preds = %550, %511
  call void @llvm.dbg.label(metadata !4922), !dbg !4923
  %520 = load i32, i32* %22, align 4, !dbg !4924
  %521 = icmp sge i32 %520, 0, !dbg !4926
  br i1 %521, label %522, label %544, !dbg !4927

522:                                              ; preds = %519
  call void @llvm.dbg.declare(metadata i32* %32, metadata !4928, metadata !DIExpression()), !dbg !4930
  %523 = load i8*, i8** %24, align 4, !dbg !4931
  %524 = load i8*, i8** %23, align 4, !dbg !4932
  %525 = ptrtoint i8* %523 to i32, !dbg !4933
  %526 = ptrtoint i8* %524 to i32, !dbg !4933
  %527 = sub i32 %525, %526, !dbg !4933
  store i32 %527, i32* %32, align 4, !dbg !4930
  %528 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4934
  %529 = bitcast %struct.conversion* %528 to i24*, !dbg !4935
  %530 = load i24, i24* %529, align 4, !dbg !4936
  %531 = and i24 %530, -65, !dbg !4936
  %532 = or i24 %531, 0, !dbg !4936
  store i24 %532, i24* %529, align 4, !dbg !4936
  %533 = load i32, i32* %32, align 4, !dbg !4937
  %534 = load i32, i32* %22, align 4, !dbg !4939
  %535 = icmp ult i32 %533, %534, !dbg !4940
  br i1 %535, label %536, label %543, !dbg !4941

536:                                              ; preds = %522
  %537 = load i32, i32* %22, align 4, !dbg !4942
  %538 = load i32, i32* %32, align 4, !dbg !4944
  %539 = sub nsw i32 %537, %538, !dbg !4945
  %540 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4946
  %541 = getelementptr inbounds %struct.conversion, %struct.conversion* %540, i32 0, i32 2, !dbg !4947
  %542 = bitcast %union.anon.68* %541 to i32*, !dbg !4947
  store i32 %539, i32* %542, align 4, !dbg !4948
  br label %543, !dbg !4949

543:                                              ; preds = %536, %522
  br label %544, !dbg !4950

544:                                              ; preds = %543, %519
  br label %578, !dbg !4951

545:                                              ; preds = %433
  %546 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4952
  %547 = bitcast %union.argument_value* %546 to i8**, !dbg !4954
  %548 = load i8*, i8** %547, align 8, !dbg !4954
  %549 = icmp ne i8* %548, null, !dbg !4955
  br i1 %549, label %550, label %567, !dbg !4956

550:                                              ; preds = %545
  %551 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4957
  %552 = bitcast %union.argument_value* %551 to i8**, !dbg !4959
  %553 = load i8*, i8** %552, align 8, !dbg !4959
  %554 = ptrtoint i8* %553 to i32, !dbg !4960
  %555 = zext i32 %554 to i64, !dbg !4960
  %556 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4961
  %557 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4962
  %558 = load i8*, i8** %24, align 4, !dbg !4963
  %559 = call i8* @encode_uint(i64 noundef %555, %struct.conversion* noundef %556, i8* noundef %557, i8* noundef %558) #10, !dbg !4964
  store i8* %559, i8** %23, align 4, !dbg !4965
  %560 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4966
  %561 = bitcast %struct.conversion* %560 to i24*, !dbg !4967
  %562 = load i24, i24* %561, align 4, !dbg !4968
  %563 = and i24 %562, -1048577, !dbg !4968
  %564 = or i24 %563, 1048576, !dbg !4968
  store i24 %564, i24* %561, align 4, !dbg !4968
  %565 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4969
  %566 = getelementptr inbounds %struct.conversion, %struct.conversion* %565, i32 0, i32 1, !dbg !4970
  store i8 120, i8* %566, align 1, !dbg !4971
  br label %519, !dbg !4972

567:                                              ; preds = %545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %23, align 4, !dbg !4973
  %568 = load i8*, i8** %23, align 4, !dbg !4974
  %569 = getelementptr inbounds i8, i8* %568, i32 5, !dbg !4975
  store i8* %569, i8** %24, align 4, !dbg !4976
  br label %578, !dbg !4977

570:                                              ; preds = %433
  %571 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4978
  %572 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4981
  %573 = bitcast %union.argument_value* %572 to i8**, !dbg !4982
  %574 = load i8*, i8** %573, align 8, !dbg !4982
  %575 = load i32, i32* %13, align 4, !dbg !4983
  call void @store_count(%struct.conversion* noundef %571, i8* noundef %574, i32 noundef %575) #10, !dbg !4984
  br label %578, !dbg !4985

576:                                              ; preds = %433, %433, %433, %433, %433, %433, %433, %433
  br label %578, !dbg !4986

577:                                              ; preds = %433
  br label %578, !dbg !4987

578:                                              ; preds = %577, %576, %570, %567, %544, %469, %465, %451
  %579 = load i8*, i8** %23, align 4, !dbg !4988
  %580 = icmp eq i8* %579, null, !dbg !4990
  br i1 %580, label %581, label %582, !dbg !4991

581:                                              ; preds = %578
  br label %50, !dbg !4992, !llvm.loop !4496

582:                                              ; preds = %578
  call void @llvm.dbg.declare(metadata i32* %33, metadata !4994, metadata !DIExpression()), !dbg !4995
  %583 = load i8*, i8** %24, align 4, !dbg !4996
  %584 = load i8*, i8** %23, align 4, !dbg !4997
  %585 = ptrtoint i8* %583 to i32, !dbg !4998
  %586 = ptrtoint i8* %584 to i32, !dbg !4998
  %587 = sub i32 %585, %586, !dbg !4998
  store i32 %587, i32* %33, align 4, !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %34, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i32 0, i32* %34, align 4, !dbg !5000
  %588 = load i8, i8* %25, align 1, !dbg !5001
  %589 = zext i8 %588 to i32, !dbg !5001
  %590 = icmp ne i32 %589, 0, !dbg !5003
  br i1 %590, label %591, label %594, !dbg !5004

591:                                              ; preds = %582
  %592 = load i32, i32* %33, align 4, !dbg !5005
  %593 = add i32 %592, 1, !dbg !5005
  store i32 %593, i32* %33, align 4, !dbg !5005
  br label %594, !dbg !5007

594:                                              ; preds = %591, %582
  %595 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5008
  %596 = bitcast %struct.conversion* %595 to i24*, !dbg !5010
  %597 = load i24, i24* %596, align 4, !dbg !5010
  %598 = lshr i24 %597, 20, !dbg !5010
  %599 = and i24 %598, 1, !dbg !5010
  %600 = trunc i24 %599 to i1, !dbg !5010
  br i1 %600, label %601, label %604, !dbg !5011

601:                                              ; preds = %594
  %602 = load i32, i32* %33, align 4, !dbg !5012
  %603 = add i32 %602, 2, !dbg !5012
  store i32 %603, i32* %33, align 4, !dbg !5012
  br label %615, !dbg !5014

604:                                              ; preds = %594
  %605 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5015
  %606 = bitcast %struct.conversion* %605 to i24*, !dbg !5017
  %607 = load i24, i24* %606, align 4, !dbg !5017
  %608 = lshr i24 %607, 19, !dbg !5017
  %609 = and i24 %608, 1, !dbg !5017
  %610 = trunc i24 %609 to i1, !dbg !5017
  br i1 %610, label %611, label %614, !dbg !5018

611:                                              ; preds = %604
  %612 = load i32, i32* %33, align 4, !dbg !5019
  %613 = add i32 %612, 1, !dbg !5019
  store i32 %613, i32* %33, align 4, !dbg !5019
  br label %614, !dbg !5021

614:                                              ; preds = %611, %604
  br label %615

615:                                              ; preds = %614, %601
  %616 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5022
  %617 = getelementptr inbounds %struct.conversion, %struct.conversion* %616, i32 0, i32 2, !dbg !5023
  %618 = bitcast %union.anon.68* %617 to i32*, !dbg !5023
  %619 = load i32, i32* %618, align 4, !dbg !5023
  %620 = load i32, i32* %33, align 4, !dbg !5024
  %621 = add i32 %620, %619, !dbg !5024
  store i32 %621, i32* %33, align 4, !dbg !5024
  %622 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5025
  %623 = bitcast %struct.conversion* %622 to i24*, !dbg !5027
  %624 = load i24, i24* %623, align 4, !dbg !5027
  %625 = lshr i24 %624, 22, !dbg !5027
  %626 = and i24 %625, 1, !dbg !5027
  %627 = trunc i24 %626 to i1, !dbg !5027
  br i1 %627, label %628, label %635, !dbg !5028

628:                                              ; preds = %615
  %629 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5029
  %630 = getelementptr inbounds %struct.conversion, %struct.conversion* %629, i32 0, i32 3, !dbg !5031
  %631 = bitcast %union.anon.68* %630 to i32*, !dbg !5031
  %632 = load i32, i32* %631, align 4, !dbg !5031
  %633 = load i32, i32* %33, align 4, !dbg !5032
  %634 = add i32 %633, %632, !dbg !5032
  store i32 %634, i32* %33, align 4, !dbg !5032
  br label %635, !dbg !5033

635:                                              ; preds = %628, %615
  %636 = load i32, i32* %21, align 4, !dbg !5034
  %637 = icmp sgt i32 %636, 0, !dbg !5036
  br i1 %637, label %638, label %699, !dbg !5037

638:                                              ; preds = %635
  %639 = load i32, i32* %33, align 4, !dbg !5038
  %640 = load i32, i32* %21, align 4, !dbg !5040
  %641 = sub nsw i32 %640, %639, !dbg !5040
  store i32 %641, i32* %21, align 4, !dbg !5040
  %642 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5041
  %643 = bitcast %struct.conversion* %642 to i24*, !dbg !5043
  %644 = load i24, i24* %643, align 4, !dbg !5043
  %645 = lshr i24 %644, 2, !dbg !5043
  %646 = and i24 %645, 1, !dbg !5043
  %647 = trunc i24 %646 to i1, !dbg !5043
  br i1 %647, label %698, label %648, !dbg !5044

648:                                              ; preds = %638
  call void @llvm.dbg.declare(metadata i8* %35, metadata !5045, metadata !DIExpression()), !dbg !5047
  store i8 32, i8* %35, align 1, !dbg !5047
  %649 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5048
  %650 = bitcast %struct.conversion* %649 to i24*, !dbg !5050
  %651 = load i24, i24* %650, align 4, !dbg !5050
  %652 = lshr i24 %651, 6, !dbg !5050
  %653 = and i24 %652, 1, !dbg !5050
  %654 = trunc i24 %653 to i1, !dbg !5050
  br i1 %654, label %655, label %676, !dbg !5051

655:                                              ; preds = %648
  %656 = load i8, i8* %25, align 1, !dbg !5052
  %657 = zext i8 %656 to i32, !dbg !5052
  %658 = icmp ne i32 %657, 0, !dbg !5055
  br i1 %658, label %659, label %675, !dbg !5056

659:                                              ; preds = %655
  br label %660, !dbg !5057

660:                                              ; preds = %659
  call void @llvm.dbg.declare(metadata i32* %36, metadata !5059, metadata !DIExpression()), !dbg !5061
  %661 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5061
  %662 = load i8, i8* %25, align 1, !dbg !5061
  %663 = zext i8 %662 to i32, !dbg !5061
  %664 = load i8*, i8** %9, align 4, !dbg !5061
  %665 = bitcast i32 (...)* %661 to i32 (i32, i8*)*, !dbg !5061
  %666 = call i32 %665(i32 noundef %663, i8* noundef %664) #10, !dbg !5061
  store i32 %666, i32* %36, align 4, !dbg !5061
  %667 = load i32, i32* %36, align 4, !dbg !5062
  %668 = icmp slt i32 %667, 0, !dbg !5062
  br i1 %668, label %669, label %671, !dbg !5061

669:                                              ; preds = %660
  %670 = load i32, i32* %36, align 4, !dbg !5064
  store i32 %670, i32* %6, align 4, !dbg !5064
  br label %836, !dbg !5064

671:                                              ; preds = %660
  %672 = load i32, i32* %13, align 4, !dbg !5061
  %673 = add i32 %672, 1, !dbg !5061
  store i32 %673, i32* %13, align 4, !dbg !5061
  br label %674, !dbg !5061

674:                                              ; preds = %671
  store i8 0, i8* %25, align 1, !dbg !5066
  br label %675, !dbg !5067

675:                                              ; preds = %674, %655
  store i8 48, i8* %35, align 1, !dbg !5068
  br label %676, !dbg !5069

676:                                              ; preds = %675, %648
  br label %677, !dbg !5070

677:                                              ; preds = %696, %676
  %678 = load i32, i32* %21, align 4, !dbg !5071
  %679 = add nsw i32 %678, -1, !dbg !5071
  store i32 %679, i32* %21, align 4, !dbg !5071
  %680 = icmp sgt i32 %678, 0, !dbg !5072
  br i1 %680, label %681, label %697, !dbg !5070

681:                                              ; preds = %677
  br label %682, !dbg !5073

682:                                              ; preds = %681
  call void @llvm.dbg.declare(metadata i32* %37, metadata !5075, metadata !DIExpression()), !dbg !5077
  %683 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5077
  %684 = load i8, i8* %35, align 1, !dbg !5077
  %685 = zext i8 %684 to i32, !dbg !5077
  %686 = load i8*, i8** %9, align 4, !dbg !5077
  %687 = bitcast i32 (...)* %683 to i32 (i32, i8*)*, !dbg !5077
  %688 = call i32 %687(i32 noundef %685, i8* noundef %686) #10, !dbg !5077
  store i32 %688, i32* %37, align 4, !dbg !5077
  %689 = load i32, i32* %37, align 4, !dbg !5078
  %690 = icmp slt i32 %689, 0, !dbg !5078
  br i1 %690, label %691, label %693, !dbg !5077

691:                                              ; preds = %682
  %692 = load i32, i32* %37, align 4, !dbg !5080
  store i32 %692, i32* %6, align 4, !dbg !5080
  br label %836, !dbg !5080

693:                                              ; preds = %682
  %694 = load i32, i32* %13, align 4, !dbg !5077
  %695 = add i32 %694, 1, !dbg !5077
  store i32 %695, i32* %13, align 4, !dbg !5077
  br label %696, !dbg !5077

696:                                              ; preds = %693
  br label %677, !dbg !5070, !llvm.loop !5082

697:                                              ; preds = %677
  br label %698, !dbg !5084

698:                                              ; preds = %697, %638
  br label %699, !dbg !5085

699:                                              ; preds = %698, %635
  %700 = load i8, i8* %25, align 1, !dbg !5086
  %701 = zext i8 %700 to i32, !dbg !5086
  %702 = icmp ne i32 %701, 0, !dbg !5088
  br i1 %702, label %703, label %719, !dbg !5089

703:                                              ; preds = %699
  br label %704, !dbg !5090

704:                                              ; preds = %703
  call void @llvm.dbg.declare(metadata i32* %38, metadata !5092, metadata !DIExpression()), !dbg !5094
  %705 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5094
  %706 = load i8, i8* %25, align 1, !dbg !5094
  %707 = zext i8 %706 to i32, !dbg !5094
  %708 = load i8*, i8** %9, align 4, !dbg !5094
  %709 = bitcast i32 (...)* %705 to i32 (i32, i8*)*, !dbg !5094
  %710 = call i32 %709(i32 noundef %707, i8* noundef %708) #10, !dbg !5094
  store i32 %710, i32* %38, align 4, !dbg !5094
  %711 = load i32, i32* %38, align 4, !dbg !5095
  %712 = icmp slt i32 %711, 0, !dbg !5095
  br i1 %712, label %713, label %715, !dbg !5094

713:                                              ; preds = %704
  %714 = load i32, i32* %38, align 4, !dbg !5097
  store i32 %714, i32* %6, align 4, !dbg !5097
  br label %836, !dbg !5097

715:                                              ; preds = %704
  %716 = load i32, i32* %13, align 4, !dbg !5094
  %717 = add i32 %716, 1, !dbg !5094
  store i32 %717, i32* %13, align 4, !dbg !5094
  br label %718, !dbg !5094

718:                                              ; preds = %715
  br label %719, !dbg !5099

719:                                              ; preds = %718, %699
  %720 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5100
  %721 = bitcast %struct.conversion* %720 to i24*, !dbg !5104
  %722 = load i24, i24* %721, align 4, !dbg !5104
  %723 = lshr i24 %722, 20, !dbg !5104
  %724 = and i24 %723, 1, !dbg !5104
  %725 = trunc i24 %724 to i1, !dbg !5104
  %726 = zext i1 %725 to i32, !dbg !5100
  %727 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5105
  %728 = bitcast %struct.conversion* %727 to i24*, !dbg !5106
  %729 = load i24, i24* %728, align 4, !dbg !5106
  %730 = lshr i24 %729, 19, !dbg !5106
  %731 = and i24 %730, 1, !dbg !5106
  %732 = trunc i24 %731 to i1, !dbg !5106
  %733 = zext i1 %732 to i32, !dbg !5105
  %734 = or i32 %726, %733, !dbg !5107
  %735 = icmp ne i32 %734, 0, !dbg !5107
  br i1 %735, label %736, label %750, !dbg !5108

736:                                              ; preds = %719
  br label %737, !dbg !5109

737:                                              ; preds = %736
  call void @llvm.dbg.declare(metadata i32* %39, metadata !5111, metadata !DIExpression()), !dbg !5113
  %738 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5113
  %739 = load i8*, i8** %9, align 4, !dbg !5113
  %740 = bitcast i32 (...)* %738 to i32 (i32, i8*)*, !dbg !5113
  %741 = call i32 %740(i32 noundef 48, i8* noundef %739) #10, !dbg !5113
  store i32 %741, i32* %39, align 4, !dbg !5113
  %742 = load i32, i32* %39, align 4, !dbg !5114
  %743 = icmp slt i32 %742, 0, !dbg !5114
  br i1 %743, label %744, label %746, !dbg !5113

744:                                              ; preds = %737
  %745 = load i32, i32* %39, align 4, !dbg !5116
  store i32 %745, i32* %6, align 4, !dbg !5116
  br label %836, !dbg !5116

746:                                              ; preds = %737
  %747 = load i32, i32* %13, align 4, !dbg !5113
  %748 = add i32 %747, 1, !dbg !5113
  store i32 %748, i32* %13, align 4, !dbg !5113
  br label %749, !dbg !5113

749:                                              ; preds = %746
  br label %750, !dbg !5118

750:                                              ; preds = %749, %719
  %751 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5119
  %752 = bitcast %struct.conversion* %751 to i24*, !dbg !5121
  %753 = load i24, i24* %752, align 4, !dbg !5121
  %754 = lshr i24 %753, 20, !dbg !5121
  %755 = and i24 %754, 1, !dbg !5121
  %756 = trunc i24 %755 to i1, !dbg !5121
  br i1 %756, label %757, label %775, !dbg !5122

757:                                              ; preds = %750
  br label %758, !dbg !5123

758:                                              ; preds = %757
  call void @llvm.dbg.declare(metadata i32* %40, metadata !5125, metadata !DIExpression()), !dbg !5127
  %759 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5127
  %760 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5127
  %761 = getelementptr inbounds %struct.conversion, %struct.conversion* %760, i32 0, i32 1, !dbg !5127
  %762 = load i8, i8* %761, align 1, !dbg !5127
  %763 = zext i8 %762 to i32, !dbg !5127
  %764 = load i8*, i8** %9, align 4, !dbg !5127
  %765 = bitcast i32 (...)* %759 to i32 (i32, i8*)*, !dbg !5127
  %766 = call i32 %765(i32 noundef %763, i8* noundef %764) #10, !dbg !5127
  store i32 %766, i32* %40, align 4, !dbg !5127
  %767 = load i32, i32* %40, align 4, !dbg !5128
  %768 = icmp slt i32 %767, 0, !dbg !5128
  br i1 %768, label %769, label %771, !dbg !5127

769:                                              ; preds = %758
  %770 = load i32, i32* %40, align 4, !dbg !5130
  store i32 %770, i32* %6, align 4, !dbg !5130
  br label %836, !dbg !5130

771:                                              ; preds = %758
  %772 = load i32, i32* %13, align 4, !dbg !5127
  %773 = add i32 %772, 1, !dbg !5127
  store i32 %773, i32* %13, align 4, !dbg !5127
  br label %774, !dbg !5127

774:                                              ; preds = %771
  br label %775, !dbg !5132

775:                                              ; preds = %774, %750
  %776 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !5133
  %777 = getelementptr inbounds %struct.conversion, %struct.conversion* %776, i32 0, i32 2, !dbg !5134
  %778 = bitcast %union.anon.68* %777 to i32*, !dbg !5134
  %779 = load i32, i32* %778, align 4, !dbg !5134
  store i32 %779, i32* %34, align 4, !dbg !5135
  br label %780, !dbg !5136

780:                                              ; preds = %797, %775
  %781 = load i32, i32* %34, align 4, !dbg !5137
  %782 = add nsw i32 %781, -1, !dbg !5137
  store i32 %782, i32* %34, align 4, !dbg !5137
  %783 = icmp sgt i32 %781, 0, !dbg !5138
  br i1 %783, label %784, label %798, !dbg !5136

784:                                              ; preds = %780
  br label %785, !dbg !5139

785:                                              ; preds = %784
  call void @llvm.dbg.declare(metadata i32* %41, metadata !5141, metadata !DIExpression()), !dbg !5143
  %786 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5143
  %787 = load i8*, i8** %9, align 4, !dbg !5143
  %788 = bitcast i32 (...)* %786 to i32 (i32, i8*)*, !dbg !5143
  %789 = call i32 %788(i32 noundef 48, i8* noundef %787) #10, !dbg !5143
  store i32 %789, i32* %41, align 4, !dbg !5143
  %790 = load i32, i32* %41, align 4, !dbg !5144
  %791 = icmp slt i32 %790, 0, !dbg !5144
  br i1 %791, label %792, label %794, !dbg !5143

792:                                              ; preds = %785
  %793 = load i32, i32* %41, align 4, !dbg !5146
  store i32 %793, i32* %6, align 4, !dbg !5146
  br label %836, !dbg !5146

794:                                              ; preds = %785
  %795 = load i32, i32* %13, align 4, !dbg !5143
  %796 = add i32 %795, 1, !dbg !5143
  store i32 %796, i32* %13, align 4, !dbg !5143
  br label %797, !dbg !5143

797:                                              ; preds = %794
  br label %780, !dbg !5136, !llvm.loop !5148

798:                                              ; preds = %780
  br label %799, !dbg !5150

799:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata i32* %42, metadata !5151, metadata !DIExpression()), !dbg !5153
  %800 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5153
  %801 = load i8*, i8** %9, align 4, !dbg !5153
  %802 = load i8*, i8** %23, align 4, !dbg !5153
  %803 = load i8*, i8** %24, align 4, !dbg !5153
  %804 = call i32 @outs(i32 (...)* noundef %800, i8* noundef %801, i8* noundef %802, i8* noundef %803) #10, !dbg !5153
  store i32 %804, i32* %42, align 4, !dbg !5153
  %805 = load i32, i32* %42, align 4, !dbg !5154
  %806 = icmp slt i32 %805, 0, !dbg !5154
  br i1 %806, label %807, label %809, !dbg !5153

807:                                              ; preds = %799
  %808 = load i32, i32* %42, align 4, !dbg !5156
  store i32 %808, i32* %6, align 4, !dbg !5156
  br label %836, !dbg !5156

809:                                              ; preds = %799
  %810 = load i32, i32* %42, align 4, !dbg !5153
  %811 = load i32, i32* %13, align 4, !dbg !5153
  %812 = add i32 %811, %810, !dbg !5153
  store i32 %812, i32* %13, align 4, !dbg !5153
  br label %813, !dbg !5153

813:                                              ; preds = %809
  br label %814, !dbg !5158

814:                                              ; preds = %830, %813
  %815 = load i32, i32* %21, align 4, !dbg !5159
  %816 = icmp sgt i32 %815, 0, !dbg !5160
  br i1 %816, label %817, label %833, !dbg !5158

817:                                              ; preds = %814
  br label %818, !dbg !5161

818:                                              ; preds = %817
  call void @llvm.dbg.declare(metadata i32* %43, metadata !5163, metadata !DIExpression()), !dbg !5165
  %819 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !5165
  %820 = load i8*, i8** %9, align 4, !dbg !5165
  %821 = bitcast i32 (...)* %819 to i32 (i32, i8*)*, !dbg !5165
  %822 = call i32 %821(i32 noundef 32, i8* noundef %820) #10, !dbg !5165
  store i32 %822, i32* %43, align 4, !dbg !5165
  %823 = load i32, i32* %43, align 4, !dbg !5166
  %824 = icmp slt i32 %823, 0, !dbg !5166
  br i1 %824, label %825, label %827, !dbg !5165

825:                                              ; preds = %818
  %826 = load i32, i32* %43, align 4, !dbg !5168
  store i32 %826, i32* %6, align 4, !dbg !5168
  br label %836, !dbg !5168

827:                                              ; preds = %818
  %828 = load i32, i32* %13, align 4, !dbg !5165
  %829 = add i32 %828, 1, !dbg !5165
  store i32 %829, i32* %13, align 4, !dbg !5165
  br label %830, !dbg !5165

830:                                              ; preds = %827
  %831 = load i32, i32* %21, align 4, !dbg !5170
  %832 = add nsw i32 %831, -1, !dbg !5170
  store i32 %832, i32* %21, align 4, !dbg !5170
  br label %814, !dbg !5158, !llvm.loop !5171

833:                                              ; preds = %814
  br label %50, !dbg !4476, !llvm.loop !4496

834:                                              ; preds = %50
  %835 = load i32, i32* %13, align 4, !dbg !5173
  store i32 %835, i32* %6, align 4, !dbg !5174
  br label %836, !dbg !5174

836:                                              ; preds = %834, %825, %807, %792, %769, %744, %713, %691, %669, %446, %426, %72
  %837 = load i32, i32* %6, align 4, !dbg !5175
  ret i32 %837, !dbg !5175
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_conversion(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5176 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.conversion, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5179, metadata !DIExpression()), !dbg !5180
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5181, metadata !DIExpression()), !dbg !5182
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5183
  %8 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %9 = load i24, i24* %8, align 4, !dbg !5184
  %10 = and i24 %9, -2, !dbg !5184
  %11 = or i24 %10, 0, !dbg !5184
  store i24 %11, i24* %8, align 4, !dbg !5184
  %12 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %13 = load i24, i24* %12, align 4, !dbg !5184
  %14 = and i24 %13, -3, !dbg !5184
  %15 = or i24 %14, 0, !dbg !5184
  store i24 %15, i24* %12, align 4, !dbg !5184
  %16 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %17 = load i24, i24* %16, align 4, !dbg !5184
  %18 = and i24 %17, -5, !dbg !5184
  %19 = or i24 %18, 0, !dbg !5184
  store i24 %19, i24* %16, align 4, !dbg !5184
  %20 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %21 = load i24, i24* %20, align 4, !dbg !5184
  %22 = and i24 %21, -9, !dbg !5184
  %23 = or i24 %22, 0, !dbg !5184
  store i24 %23, i24* %20, align 4, !dbg !5184
  %24 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %25 = load i24, i24* %24, align 4, !dbg !5184
  %26 = and i24 %25, -17, !dbg !5184
  %27 = or i24 %26, 0, !dbg !5184
  store i24 %27, i24* %24, align 4, !dbg !5184
  %28 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %29 = load i24, i24* %28, align 4, !dbg !5184
  %30 = and i24 %29, -33, !dbg !5184
  %31 = or i24 %30, 0, !dbg !5184
  store i24 %31, i24* %28, align 4, !dbg !5184
  %32 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %33 = load i24, i24* %32, align 4, !dbg !5184
  %34 = and i24 %33, -65, !dbg !5184
  %35 = or i24 %34, 0, !dbg !5184
  store i24 %35, i24* %32, align 4, !dbg !5184
  %36 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %37 = load i24, i24* %36, align 4, !dbg !5184
  %38 = and i24 %37, -129, !dbg !5184
  %39 = or i24 %38, 0, !dbg !5184
  store i24 %39, i24* %36, align 4, !dbg !5184
  %40 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %41 = load i24, i24* %40, align 4, !dbg !5184
  %42 = and i24 %41, -257, !dbg !5184
  %43 = or i24 %42, 0, !dbg !5184
  store i24 %43, i24* %40, align 4, !dbg !5184
  %44 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %45 = load i24, i24* %44, align 4, !dbg !5184
  %46 = and i24 %45, -513, !dbg !5184
  %47 = or i24 %46, 0, !dbg !5184
  store i24 %47, i24* %44, align 4, !dbg !5184
  %48 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %49 = load i24, i24* %48, align 4, !dbg !5184
  %50 = and i24 %49, -1025, !dbg !5184
  %51 = or i24 %50, 0, !dbg !5184
  store i24 %51, i24* %48, align 4, !dbg !5184
  %52 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %53 = load i24, i24* %52, align 4, !dbg !5184
  %54 = and i24 %53, -30721, !dbg !5184
  %55 = or i24 %54, 0, !dbg !5184
  store i24 %55, i24* %52, align 4, !dbg !5184
  %56 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %57 = load i24, i24* %56, align 4, !dbg !5184
  %58 = and i24 %57, -32769, !dbg !5184
  %59 = or i24 %58, 0, !dbg !5184
  store i24 %59, i24* %56, align 4, !dbg !5184
  %60 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %61 = load i24, i24* %60, align 4, !dbg !5184
  %62 = and i24 %61, -458753, !dbg !5184
  %63 = or i24 %62, 0, !dbg !5184
  store i24 %63, i24* %60, align 4, !dbg !5184
  %64 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %65 = load i24, i24* %64, align 4, !dbg !5184
  %66 = and i24 %65, -524289, !dbg !5184
  %67 = or i24 %66, 0, !dbg !5184
  store i24 %67, i24* %64, align 4, !dbg !5184
  %68 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %69 = load i24, i24* %68, align 4, !dbg !5184
  %70 = and i24 %69, -1048577, !dbg !5184
  %71 = or i24 %70, 0, !dbg !5184
  store i24 %71, i24* %68, align 4, !dbg !5184
  %72 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %73 = load i24, i24* %72, align 4, !dbg !5184
  %74 = and i24 %73, -2097153, !dbg !5184
  %75 = or i24 %74, 0, !dbg !5184
  store i24 %75, i24* %72, align 4, !dbg !5184
  %76 = bitcast %struct.conversion* %6 to i24*, !dbg !5184
  %77 = load i24, i24* %76, align 4, !dbg !5184
  %78 = and i24 %77, -4194305, !dbg !5184
  %79 = or i24 %78, 0, !dbg !5184
  store i24 %79, i24* %76, align 4, !dbg !5184
  %80 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 1, !dbg !5184
  store i8 0, i8* %80, align 1, !dbg !5184
  %81 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 2, !dbg !5184
  %82 = bitcast %union.anon.68* %81 to i8*, !dbg !5184
  call void @llvm.memset.p0i8.i32(i8* align 4 %82, i8 0, i32 4, i1 false), !dbg !5184
  %83 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 3, !dbg !5184
  %84 = bitcast %union.anon.68* %83 to i8*, !dbg !5184
  call void @llvm.memset.p0i8.i32(i8* align 4 %84, i8 0, i32 4, i1 false), !dbg !5184
  %85 = bitcast %struct.conversion* %7 to i8*, !dbg !5185
  %86 = bitcast %struct.conversion* %6 to i8*, !dbg !5185
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %85, i8* align 4 %86, i32 12, i1 false), !dbg !5185
  %87 = load i8*, i8** %5, align 4, !dbg !5186
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !5186
  store i8* %88, i8** %5, align 4, !dbg !5186
  %89 = load i8*, i8** %5, align 4, !dbg !5187
  %90 = load i8, i8* %89, align 1, !dbg !5189
  %91 = zext i8 %90 to i32, !dbg !5189
  %92 = icmp eq i32 %91, 37, !dbg !5190
  br i1 %92, label %93, label %100, !dbg !5191

93:                                               ; preds = %2
  %94 = load i8*, i8** %5, align 4, !dbg !5192
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !5192
  store i8* %95, i8** %5, align 4, !dbg !5192
  %96 = load i8, i8* %94, align 1, !dbg !5194
  %97 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5195
  %98 = getelementptr inbounds %struct.conversion, %struct.conversion* %97, i32 0, i32 1, !dbg !5196
  store i8 %96, i8* %98, align 1, !dbg !5197
  %99 = load i8*, i8** %5, align 4, !dbg !5198
  store i8* %99, i8** %3, align 4, !dbg !5199
  br label %117, !dbg !5199

100:                                              ; preds = %2
  %101 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5200
  %102 = load i8*, i8** %5, align 4, !dbg !5201
  %103 = call i8* @extract_flags(%struct.conversion* noundef %101, i8* noundef %102) #10, !dbg !5202
  store i8* %103, i8** %5, align 4, !dbg !5203
  %104 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5204
  %105 = load i8*, i8** %5, align 4, !dbg !5205
  %106 = call i8* @extract_width(%struct.conversion* noundef %104, i8* noundef %105) #10, !dbg !5206
  store i8* %106, i8** %5, align 4, !dbg !5207
  %107 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5208
  %108 = load i8*, i8** %5, align 4, !dbg !5209
  %109 = call i8* @extract_prec(%struct.conversion* noundef %107, i8* noundef %108) #10, !dbg !5210
  store i8* %109, i8** %5, align 4, !dbg !5211
  %110 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5212
  %111 = load i8*, i8** %5, align 4, !dbg !5213
  %112 = call i8* @extract_length(%struct.conversion* noundef %110, i8* noundef %111) #10, !dbg !5214
  store i8* %112, i8** %5, align 4, !dbg !5215
  %113 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5216
  %114 = load i8*, i8** %5, align 4, !dbg !5217
  %115 = call i8* @extract_specifier(%struct.conversion* noundef %113, i8* noundef %114) #10, !dbg !5218
  store i8* %115, i8** %5, align 4, !dbg !5219
  %116 = load i8*, i8** %5, align 4, !dbg !5220
  store i8* %116, i8** %3, align 4, !dbg !5221
  br label %117, !dbg !5221

117:                                              ; preds = %100, %93
  %118 = load i8*, i8** %3, align 4, !dbg !5222
  ret i8* %118, !dbg !5222
}

; Function Attrs: noinline nounwind optnone
define internal i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !5223 {
  %5 = alloca i32, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !5226, metadata !DIExpression()), !dbg !5227
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5228, metadata !DIExpression()), !dbg !5229
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5230, metadata !DIExpression()), !dbg !5231
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5232, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5234, metadata !DIExpression()), !dbg !5235
  store i32 0, i32* %10, align 4, !dbg !5235
  br label %12, !dbg !5236

12:                                               ; preds = %41, %4
  %13 = load i8*, i8** %8, align 4, !dbg !5237
  %14 = load i8*, i8** %9, align 4, !dbg !5238
  %15 = icmp ult i8* %13, %14, !dbg !5239
  br i1 %15, label %26, label %16, !dbg !5240

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !5241
  %18 = icmp eq i8* %17, null, !dbg !5242
  br i1 %18, label %19, label %24, !dbg !5243

19:                                               ; preds = %16
  %20 = load i8*, i8** %8, align 4, !dbg !5244
  %21 = load i8, i8* %20, align 1, !dbg !5245
  %22 = zext i8 %21 to i32, !dbg !5245
  %23 = icmp ne i32 %22, 0, !dbg !5243
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !5246
  br label %26, !dbg !5240

26:                                               ; preds = %24, %12
  %27 = phi i1 [ true, %12 ], [ %25, %24 ]
  br i1 %27, label %28, label %44, !dbg !5236

28:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5247, metadata !DIExpression()), !dbg !5249
  %29 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !5250
  %30 = load i8*, i8** %8, align 4, !dbg !5251
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5251
  store i8* %31, i8** %8, align 4, !dbg !5251
  %32 = load i8, i8* %30, align 1, !dbg !5252
  %33 = zext i8 %32 to i32, !dbg !5253
  %34 = load i8*, i8** %7, align 4, !dbg !5254
  %35 = bitcast i32 (...)* %29 to i32 (i32, i8*)*, !dbg !5250
  %36 = call i32 %35(i32 noundef %33, i8* noundef %34) #10, !dbg !5250
  store i32 %36, i32* %11, align 4, !dbg !5249
  %37 = load i32, i32* %11, align 4, !dbg !5255
  %38 = icmp slt i32 %37, 0, !dbg !5257
  br i1 %38, label %39, label %41, !dbg !5258

39:                                               ; preds = %28
  %40 = load i32, i32* %11, align 4, !dbg !5259
  store i32 %40, i32* %5, align 4, !dbg !5261
  br label %46, !dbg !5261

41:                                               ; preds = %28
  %42 = load i32, i32* %10, align 4, !dbg !5262
  %43 = add i32 %42, 1, !dbg !5262
  store i32 %43, i32* %10, align 4, !dbg !5262
  br label %12, !dbg !5236, !llvm.loop !5263

44:                                               ; preds = %26
  %45 = load i32, i32* %10, align 4, !dbg !5265
  store i32 %45, i32* %5, align 4, !dbg !5266
  br label %46, !dbg !5266

46:                                               ; preds = %44, %39
  %47 = load i32, i32* %5, align 4, !dbg !5267
  ret i32 %47, !dbg !5267
}

; Function Attrs: noinline nounwind optnone
define internal i8* @encode_uint(i64 noundef %0, %struct.conversion* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !5268 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.conversion*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5271, metadata !DIExpression()), !dbg !5272
  store %struct.conversion* %1, %struct.conversion** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %6, metadata !5273, metadata !DIExpression()), !dbg !5274
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5275, metadata !DIExpression()), !dbg !5276
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !5277, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5279, metadata !DIExpression()), !dbg !5280
  %13 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5281
  %14 = getelementptr inbounds %struct.conversion, %struct.conversion* %13, i32 0, i32 1, !dbg !5282
  %15 = load i8, i8* %14, align 1, !dbg !5282
  %16 = zext i8 %15 to i32, !dbg !5283
  %17 = call i32 @isupper(i32 noundef %16) #10, !dbg !5284
  %18 = icmp ne i32 %17, 0, !dbg !5284
  %19 = zext i1 %18 to i8, !dbg !5280
  store i8 %19, i8* %9, align 1, !dbg !5280
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5285, metadata !DIExpression()), !dbg !5287
  %20 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5288
  %21 = getelementptr inbounds %struct.conversion, %struct.conversion* %20, i32 0, i32 1, !dbg !5289
  %22 = load i8, i8* %21, align 1, !dbg !5289
  %23 = call i32 @conversion_radix(i8 noundef zeroext %22) #10, !dbg !5290
  store i32 %23, i32* %10, align 4, !dbg !5287
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5291, metadata !DIExpression()), !dbg !5292
  %24 = load i8*, i8** %7, align 4, !dbg !5293
  %25 = load i8*, i8** %8, align 4, !dbg !5294
  %26 = load i8*, i8** %7, align 4, !dbg !5295
  %27 = ptrtoint i8* %25 to i32, !dbg !5296
  %28 = ptrtoint i8* %26 to i32, !dbg !5296
  %29 = sub i32 %27, %28, !dbg !5296
  %30 = getelementptr inbounds i8, i8* %24, i32 %29, !dbg !5297
  store i8* %30, i8** %11, align 4, !dbg !5292
  br label %31, !dbg !5298

31:                                               ; preds = %71, %4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5299, metadata !DIExpression()), !dbg !5301
  %32 = load i64, i64* %5, align 8, !dbg !5302
  %33 = load i32, i32* %10, align 4, !dbg !5303
  %34 = zext i32 %33 to i64, !dbg !5303
  %35 = urem i64 %32, %34, !dbg !5304
  %36 = trunc i64 %35 to i32, !dbg !5305
  store i32 %36, i32* %12, align 4, !dbg !5301
  %37 = load i32, i32* %12, align 4, !dbg !5306
  %38 = icmp ule i32 %37, 9, !dbg !5307
  br i1 %38, label %39, label %42, !dbg !5308

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !5309
  %41 = add i32 48, %40, !dbg !5310
  br label %55, !dbg !5308

42:                                               ; preds = %31
  %43 = load i8, i8* %9, align 1, !dbg !5311
  %44 = trunc i8 %43 to i1, !dbg !5311
  br i1 %44, label %45, label %49, !dbg !5311

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !5312
  %47 = add i32 65, %46, !dbg !5313
  %48 = sub i32 %47, 10, !dbg !5314
  br label %53, !dbg !5311

49:                                               ; preds = %42
  %50 = load i32, i32* %12, align 4, !dbg !5315
  %51 = add i32 97, %50, !dbg !5316
  %52 = sub i32 %51, 10, !dbg !5317
  br label %53, !dbg !5311

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ], !dbg !5311
  br label %55, !dbg !5308

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %41, %39 ], [ %54, %53 ], !dbg !5308
  %57 = trunc i32 %56 to i8, !dbg !5308
  %58 = load i8*, i8** %11, align 4, !dbg !5318
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !5318
  store i8* %59, i8** %11, align 4, !dbg !5318
  store i8 %57, i8* %59, align 1, !dbg !5319
  %60 = load i32, i32* %10, align 4, !dbg !5320
  %61 = zext i32 %60 to i64, !dbg !5320
  %62 = load i64, i64* %5, align 8, !dbg !5321
  %63 = udiv i64 %62, %61, !dbg !5321
  store i64 %63, i64* %5, align 8, !dbg !5321
  br label %64, !dbg !5322

64:                                               ; preds = %55
  %65 = load i64, i64* %5, align 8, !dbg !5323
  %66 = icmp ne i64 %65, 0, !dbg !5324
  br i1 %66, label %67, label %71, !dbg !5325

67:                                               ; preds = %64
  %68 = load i8*, i8** %7, align 4, !dbg !5326
  %69 = load i8*, i8** %11, align 4, !dbg !5327
  %70 = icmp ult i8* %68, %69, !dbg !5328
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i1 [ false, %64 ], [ %70, %67 ], !dbg !5329
  br i1 %72, label %31, label %73, !dbg !5322, !llvm.loop !5330

73:                                               ; preds = %71
  %74 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5332
  %75 = bitcast %struct.conversion* %74 to i24*, !dbg !5334
  %76 = load i24, i24* %75, align 4, !dbg !5334
  %77 = lshr i24 %76, 5, !dbg !5334
  %78 = and i24 %77, 1, !dbg !5334
  %79 = trunc i24 %78 to i1, !dbg !5334
  br i1 %79, label %80, label %101, !dbg !5335

80:                                               ; preds = %73
  %81 = load i32, i32* %10, align 4, !dbg !5336
  %82 = icmp eq i32 %81, 8, !dbg !5339
  br i1 %82, label %83, label %89, !dbg !5340

83:                                               ; preds = %80
  %84 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5341
  %85 = bitcast %struct.conversion* %84 to i24*, !dbg !5343
  %86 = load i24, i24* %85, align 4, !dbg !5344
  %87 = and i24 %86, -524289, !dbg !5344
  %88 = or i24 %87, 524288, !dbg !5344
  store i24 %88, i24* %85, align 4, !dbg !5344
  br label %100, !dbg !5345

89:                                               ; preds = %80
  %90 = load i32, i32* %10, align 4, !dbg !5346
  %91 = icmp eq i32 %90, 16, !dbg !5348
  br i1 %91, label %92, label %98, !dbg !5349

92:                                               ; preds = %89
  %93 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5350
  %94 = bitcast %struct.conversion* %93 to i24*, !dbg !5352
  %95 = load i24, i24* %94, align 4, !dbg !5353
  %96 = and i24 %95, -1048577, !dbg !5353
  %97 = or i24 %96, 1048576, !dbg !5353
  store i24 %97, i24* %94, align 4, !dbg !5353
  br label %99, !dbg !5354

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98, %92
  br label %100

100:                                              ; preds = %99, %83
  br label %101, !dbg !5355

101:                                              ; preds = %100, %73
  %102 = load i8*, i8** %11, align 4, !dbg !5356
  ret i8* %102, !dbg !5357
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optnone
define internal void @store_count(%struct.conversion* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !5358 {
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5363, metadata !DIExpression()), !dbg !5364
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5365, metadata !DIExpression()), !dbg !5366
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5367, metadata !DIExpression()), !dbg !5368
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5369
  %8 = bitcast %struct.conversion* %7 to i24*, !dbg !5370
  %9 = load i24, i24* %8, align 4, !dbg !5370
  %10 = lshr i24 %9, 11, !dbg !5370
  %11 = and i24 %10, 15, !dbg !5370
  %12 = zext i24 %11 to i32, !dbg !5370
  switch i32 %12, label %48 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %44
  ], !dbg !5371

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4, !dbg !5372
  %15 = load i8*, i8** %5, align 4, !dbg !5374
  %16 = bitcast i8* %15 to i32*, !dbg !5375
  store i32 %14, i32* %16, align 4, !dbg !5376
  br label %49, !dbg !5377

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !5378
  %19 = trunc i32 %18 to i8, !dbg !5379
  %20 = load i8*, i8** %5, align 4, !dbg !5380
  store i8 %19, i8* %20, align 1, !dbg !5381
  br label %49, !dbg !5382

21:                                               ; preds = %3
  %22 = load i32, i32* %6, align 4, !dbg !5383
  %23 = trunc i32 %22 to i16, !dbg !5384
  %24 = load i8*, i8** %5, align 4, !dbg !5385
  %25 = bitcast i8* %24 to i16*, !dbg !5386
  store i16 %23, i16* %25, align 2, !dbg !5387
  br label %49, !dbg !5388

26:                                               ; preds = %3
  %27 = load i32, i32* %6, align 4, !dbg !5389
  %28 = load i8*, i8** %5, align 4, !dbg !5390
  %29 = bitcast i8* %28 to i32*, !dbg !5391
  store i32 %27, i32* %29, align 4, !dbg !5392
  br label %49, !dbg !5393

30:                                               ; preds = %3
  %31 = load i32, i32* %6, align 4, !dbg !5394
  %32 = sext i32 %31 to i64, !dbg !5395
  %33 = load i8*, i8** %5, align 4, !dbg !5396
  %34 = bitcast i8* %33 to i64*, !dbg !5397
  store i64 %32, i64* %34, align 8, !dbg !5398
  br label %49, !dbg !5399

35:                                               ; preds = %3
  %36 = load i32, i32* %6, align 4, !dbg !5400
  %37 = sext i32 %36 to i64, !dbg !5401
  %38 = load i8*, i8** %5, align 4, !dbg !5402
  %39 = bitcast i8* %38 to i64*, !dbg !5403
  store i64 %37, i64* %39, align 8, !dbg !5404
  br label %49, !dbg !5405

40:                                               ; preds = %3
  %41 = load i32, i32* %6, align 4, !dbg !5406
  %42 = load i8*, i8** %5, align 4, !dbg !5407
  %43 = bitcast i8* %42 to i32*, !dbg !5408
  store i32 %41, i32* %43, align 4, !dbg !5409
  br label %49, !dbg !5410

44:                                               ; preds = %3
  %45 = load i32, i32* %6, align 4, !dbg !5411
  %46 = load i8*, i8** %5, align 4, !dbg !5412
  %47 = bitcast i8* %46 to i32*, !dbg !5413
  store i32 %45, i32* %47, align 4, !dbg !5414
  br label %49, !dbg !5415

48:                                               ; preds = %3
  br label %49, !dbg !5416

49:                                               ; preds = %48, %44, %40, %35, %30, %26, %21, %17, %13
  ret void, !dbg !5417
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isupper(i32 noundef %0) #1 !dbg !5418 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5420, metadata !DIExpression()), !dbg !5421
  %3 = load i32, i32* %2, align 4, !dbg !5422
  %4 = sub i32 %3, 65, !dbg !5423
  %5 = icmp ult i32 %4, 26, !dbg !5424
  %6 = zext i1 %5 to i32, !dbg !5424
  ret i32 %6, !dbg !5425
}

; Function Attrs: noinline nounwind optnone
define internal i32 @conversion_radix(i8 noundef zeroext %0) #1 !dbg !5426 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5429, metadata !DIExpression()), !dbg !5430
  %4 = load i8, i8* %3, align 1, !dbg !5431
  %5 = zext i8 %4 to i32, !dbg !5431
  switch i32 %5, label %6 [
    i32 100, label %7
    i32 105, label %7
    i32 117, label %7
    i32 111, label %8
    i32 112, label %9
    i32 120, label %9
    i32 88, label %9
  ], !dbg !5432

6:                                                ; preds = %1
  br label %7, !dbg !5433

7:                                                ; preds = %1, %1, %1, %6
  store i32 10, i32* %2, align 4, !dbg !5434
  br label %10, !dbg !5434

8:                                                ; preds = %1
  store i32 8, i32* %2, align 4, !dbg !5436
  br label %10, !dbg !5436

9:                                                ; preds = %1, %1, %1
  store i32 16, i32* %2, align 4, !dbg !5437
  br label %10, !dbg !5437

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !5438
  ret i32 %11, !dbg !5438
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #7

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_flags(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5439 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5440, metadata !DIExpression()), !dbg !5441
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5442, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5444, metadata !DIExpression()), !dbg !5445
  store i8 1, i8* %5, align 1, !dbg !5445
  br label %6, !dbg !5446

6:                                                ; preds = %48, %2
  %7 = load i8*, i8** %4, align 4, !dbg !5447
  %8 = load i8, i8* %7, align 1, !dbg !5449
  %9 = zext i8 %8 to i32, !dbg !5449
  switch i32 %9, label %40 [
    i32 45, label %10
    i32 43, label %16
    i32 32, label %22
    i32 35, label %28
    i32 48, label %34
  ], !dbg !5450

10:                                               ; preds = %6
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5451
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5453
  %13 = load i24, i24* %12, align 4, !dbg !5454
  %14 = and i24 %13, -5, !dbg !5454
  %15 = or i24 %14, 4, !dbg !5454
  store i24 %15, i24* %12, align 4, !dbg !5454
  br label %41, !dbg !5455

16:                                               ; preds = %6
  %17 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5456
  %18 = bitcast %struct.conversion* %17 to i24*, !dbg !5457
  %19 = load i24, i24* %18, align 4, !dbg !5458
  %20 = and i24 %19, -9, !dbg !5458
  %21 = or i24 %20, 8, !dbg !5458
  store i24 %21, i24* %18, align 4, !dbg !5458
  br label %41, !dbg !5459

22:                                               ; preds = %6
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5460
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5461
  %25 = load i24, i24* %24, align 4, !dbg !5462
  %26 = and i24 %25, -17, !dbg !5462
  %27 = or i24 %26, 16, !dbg !5462
  store i24 %27, i24* %24, align 4, !dbg !5462
  br label %41, !dbg !5463

28:                                               ; preds = %6
  %29 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5464
  %30 = bitcast %struct.conversion* %29 to i24*, !dbg !5465
  %31 = load i24, i24* %30, align 4, !dbg !5466
  %32 = and i24 %31, -33, !dbg !5466
  %33 = or i24 %32, 32, !dbg !5466
  store i24 %33, i24* %30, align 4, !dbg !5466
  br label %41, !dbg !5467

34:                                               ; preds = %6
  %35 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5468
  %36 = bitcast %struct.conversion* %35 to i24*, !dbg !5469
  %37 = load i24, i24* %36, align 4, !dbg !5470
  %38 = and i24 %37, -65, !dbg !5470
  %39 = or i24 %38, 64, !dbg !5470
  store i24 %39, i24* %36, align 4, !dbg !5470
  br label %41, !dbg !5471

40:                                               ; preds = %6
  store i8 0, i8* %5, align 1, !dbg !5472
  br label %41, !dbg !5473

41:                                               ; preds = %40, %34, %28, %22, %16, %10
  %42 = load i8, i8* %5, align 1, !dbg !5474
  %43 = trunc i8 %42 to i1, !dbg !5474
  br i1 %43, label %44, label %47, !dbg !5476

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 4, !dbg !5477
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !5477
  store i8* %46, i8** %4, align 4, !dbg !5477
  br label %47, !dbg !5479

47:                                               ; preds = %44, %41
  br label %48, !dbg !5480

48:                                               ; preds = %47
  %49 = load i8, i8* %5, align 1, !dbg !5481
  %50 = trunc i8 %49 to i1, !dbg !5481
  br i1 %50, label %6, label %51, !dbg !5480, !llvm.loop !5482

51:                                               ; preds = %48
  %52 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5484
  %53 = bitcast %struct.conversion* %52 to i24*, !dbg !5486
  %54 = load i24, i24* %53, align 4, !dbg !5486
  %55 = lshr i24 %54, 6, !dbg !5486
  %56 = and i24 %55, 1, !dbg !5486
  %57 = trunc i24 %56 to i1, !dbg !5486
  br i1 %57, label %58, label %71, !dbg !5487

58:                                               ; preds = %51
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5488
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5489
  %61 = load i24, i24* %60, align 4, !dbg !5489
  %62 = lshr i24 %61, 2, !dbg !5489
  %63 = and i24 %62, 1, !dbg !5489
  %64 = trunc i24 %63 to i1, !dbg !5489
  br i1 %64, label %65, label %71, !dbg !5490

65:                                               ; preds = %58
  %66 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5491
  %67 = bitcast %struct.conversion* %66 to i24*, !dbg !5493
  %68 = load i24, i24* %67, align 4, !dbg !5494
  %69 = and i24 %68, -65, !dbg !5494
  %70 = or i24 %69, 0, !dbg !5494
  store i24 %70, i24* %67, align 4, !dbg !5494
  br label %71, !dbg !5495

71:                                               ; preds = %65, %58, %51
  %72 = load i8*, i8** %4, align 4, !dbg !5496
  ret i8* %72, !dbg !5497
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_width(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5498 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5499, metadata !DIExpression()), !dbg !5500
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5501, metadata !DIExpression()), !dbg !5502
  %8 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5503
  %9 = bitcast %struct.conversion* %8 to i24*, !dbg !5504
  %10 = load i24, i24* %9, align 4, !dbg !5505
  %11 = and i24 %10, -129, !dbg !5505
  %12 = or i24 %11, 128, !dbg !5505
  store i24 %12, i24* %9, align 4, !dbg !5505
  %13 = load i8*, i8** %5, align 4, !dbg !5506
  %14 = load i8, i8* %13, align 1, !dbg !5508
  %15 = zext i8 %14 to i32, !dbg !5508
  %16 = icmp eq i32 %15, 42, !dbg !5509
  br i1 %16, label %17, label %25, !dbg !5510

17:                                               ; preds = %2
  %18 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5511
  %19 = bitcast %struct.conversion* %18 to i24*, !dbg !5513
  %20 = load i24, i24* %19, align 4, !dbg !5514
  %21 = and i24 %20, -257, !dbg !5514
  %22 = or i24 %21, 256, !dbg !5514
  store i24 %22, i24* %19, align 4, !dbg !5514
  %23 = load i8*, i8** %5, align 4, !dbg !5515
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5515
  store i8* %24, i8** %5, align 4, !dbg !5515
  store i8* %24, i8** %3, align 4, !dbg !5516
  br label %74, !dbg !5516

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5517, metadata !DIExpression()), !dbg !5518
  %26 = load i8*, i8** %5, align 4, !dbg !5519
  store i8* %26, i8** %6, align 4, !dbg !5518
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5520, metadata !DIExpression()), !dbg !5521
  %27 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5522
  store i32 %27, i32* %7, align 4, !dbg !5521
  %28 = load i8*, i8** %5, align 4, !dbg !5523
  %29 = load i8*, i8** %6, align 4, !dbg !5525
  %30 = icmp ne i8* %28, %29, !dbg !5526
  br i1 %30, label %31, label %72, !dbg !5527

31:                                               ; preds = %25
  %32 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5528
  %33 = bitcast %struct.conversion* %32 to i24*, !dbg !5530
  %34 = load i24, i24* %33, align 4, !dbg !5531
  %35 = and i24 %34, -129, !dbg !5531
  %36 = or i24 %35, 128, !dbg !5531
  store i24 %36, i24* %33, align 4, !dbg !5531
  %37 = load i32, i32* %7, align 4, !dbg !5532
  %38 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5533
  %39 = getelementptr inbounds %struct.conversion, %struct.conversion* %38, i32 0, i32 2, !dbg !5534
  %40 = bitcast %union.anon.68* %39 to i32*, !dbg !5534
  store i32 %37, i32* %40, align 4, !dbg !5535
  %41 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5536
  %42 = getelementptr inbounds %struct.conversion, %struct.conversion* %41, i32 0, i32 2, !dbg !5537
  %43 = bitcast %union.anon.68* %42 to i32*, !dbg !5537
  %44 = load i32, i32* %43, align 4, !dbg !5537
  %45 = icmp slt i32 %44, 0, !dbg !5538
  br i1 %45, label %53, label %46, !dbg !5539

46:                                               ; preds = %31
  %47 = load i32, i32* %7, align 4, !dbg !5540
  %48 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5541
  %49 = getelementptr inbounds %struct.conversion, %struct.conversion* %48, i32 0, i32 2, !dbg !5542
  %50 = bitcast %union.anon.68* %49 to i32*, !dbg !5542
  %51 = load i32, i32* %50, align 4, !dbg !5542
  %52 = icmp ne i32 %47, %51, !dbg !5543
  br label %53, !dbg !5539

53:                                               ; preds = %46, %31
  %54 = phi i1 [ true, %31 ], [ %52, %46 ]
  %55 = zext i1 %54 to i32, !dbg !5539
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5544
  %57 = bitcast %struct.conversion* %56 to i24*, !dbg !5545
  %58 = load i24, i24* %57, align 4, !dbg !5546
  %59 = lshr i24 %58, 1, !dbg !5546
  %60 = and i24 %59, 1, !dbg !5546
  %61 = trunc i24 %60 to i1, !dbg !5546
  %62 = zext i1 %61 to i32, !dbg !5546
  %63 = or i32 %62, %55, !dbg !5546
  %64 = icmp ne i32 %63, 0, !dbg !5546
  %65 = zext i1 %64 to i24, !dbg !5546
  %66 = load i24, i24* %57, align 4, !dbg !5546
  %67 = shl i24 %65, 1, !dbg !5546
  %68 = and i24 %66, -3, !dbg !5546
  %69 = or i24 %68, %67, !dbg !5546
  store i24 %69, i24* %57, align 4, !dbg !5546
  %70 = trunc i24 %65 to i8, !dbg !5546
  %71 = trunc i8 %70 to i1, !dbg !5546
  br label %72, !dbg !5547

72:                                               ; preds = %53, %25
  %73 = load i8*, i8** %5, align 4, !dbg !5548
  store i8* %73, i8** %3, align 4, !dbg !5549
  br label %74, !dbg !5549

74:                                               ; preds = %72, %17
  %75 = load i8*, i8** %3, align 4, !dbg !5550
  ret i8* %75, !dbg !5550
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_prec(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5551 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5552, metadata !DIExpression()), !dbg !5553
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5554, metadata !DIExpression()), !dbg !5555
  %7 = load i8*, i8** %5, align 4, !dbg !5556
  %8 = load i8, i8* %7, align 1, !dbg !5557
  %9 = zext i8 %8 to i32, !dbg !5557
  %10 = icmp eq i32 %9, 46, !dbg !5558
  %11 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5559
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5560
  %13 = zext i1 %10 to i24, !dbg !5561
  %14 = load i24, i24* %12, align 4, !dbg !5561
  %15 = shl i24 %13, 9, !dbg !5561
  %16 = and i24 %14, -513, !dbg !5561
  %17 = or i24 %16, %15, !dbg !5561
  store i24 %17, i24* %12, align 4, !dbg !5561
  %18 = trunc i24 %13 to i8, !dbg !5561
  %19 = trunc i8 %18 to i1, !dbg !5561
  %20 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5562
  %21 = bitcast %struct.conversion* %20 to i24*, !dbg !5564
  %22 = load i24, i24* %21, align 4, !dbg !5564
  %23 = lshr i24 %22, 9, !dbg !5564
  %24 = and i24 %23, 1, !dbg !5564
  %25 = trunc i24 %24 to i1, !dbg !5564
  br i1 %25, label %28, label %26, !dbg !5565

26:                                               ; preds = %2
  %27 = load i8*, i8** %5, align 4, !dbg !5566
  store i8* %27, i8** %3, align 4, !dbg !5568
  br label %81, !dbg !5568

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 4, !dbg !5569
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5569
  store i8* %30, i8** %5, align 4, !dbg !5569
  %31 = load i8*, i8** %5, align 4, !dbg !5570
  %32 = load i8, i8* %31, align 1, !dbg !5572
  %33 = zext i8 %32 to i32, !dbg !5572
  %34 = icmp eq i32 %33, 42, !dbg !5573
  br i1 %34, label %35, label %43, !dbg !5574

35:                                               ; preds = %28
  %36 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5575
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5577
  %38 = load i24, i24* %37, align 4, !dbg !5578
  %39 = and i24 %38, -1025, !dbg !5578
  %40 = or i24 %39, 1024, !dbg !5578
  store i24 %40, i24* %37, align 4, !dbg !5578
  %41 = load i8*, i8** %5, align 4, !dbg !5579
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5579
  store i8* %42, i8** %5, align 4, !dbg !5579
  store i8* %42, i8** %3, align 4, !dbg !5580
  br label %81, !dbg !5580

43:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5581, metadata !DIExpression()), !dbg !5582
  %44 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5583
  store i32 %44, i32* %6, align 4, !dbg !5582
  %45 = load i32, i32* %6, align 4, !dbg !5584
  %46 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5585
  %47 = getelementptr inbounds %struct.conversion, %struct.conversion* %46, i32 0, i32 3, !dbg !5586
  %48 = bitcast %union.anon.68* %47 to i32*, !dbg !5586
  store i32 %45, i32* %48, align 4, !dbg !5587
  %49 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5588
  %50 = getelementptr inbounds %struct.conversion, %struct.conversion* %49, i32 0, i32 3, !dbg !5589
  %51 = bitcast %union.anon.68* %50 to i32*, !dbg !5589
  %52 = load i32, i32* %51, align 4, !dbg !5589
  %53 = icmp slt i32 %52, 0, !dbg !5590
  br i1 %53, label %61, label %54, !dbg !5591

54:                                               ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !5592
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5593
  %57 = getelementptr inbounds %struct.conversion, %struct.conversion* %56, i32 0, i32 3, !dbg !5594
  %58 = bitcast %union.anon.68* %57 to i32*, !dbg !5594
  %59 = load i32, i32* %58, align 4, !dbg !5594
  %60 = icmp ne i32 %55, %59, !dbg !5595
  br label %61, !dbg !5591

61:                                               ; preds = %54, %43
  %62 = phi i1 [ true, %43 ], [ %60, %54 ]
  %63 = zext i1 %62 to i32, !dbg !5591
  %64 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5596
  %65 = bitcast %struct.conversion* %64 to i24*, !dbg !5597
  %66 = load i24, i24* %65, align 4, !dbg !5598
  %67 = lshr i24 %66, 1, !dbg !5598
  %68 = and i24 %67, 1, !dbg !5598
  %69 = trunc i24 %68 to i1, !dbg !5598
  %70 = zext i1 %69 to i32, !dbg !5598
  %71 = or i32 %70, %63, !dbg !5598
  %72 = icmp ne i32 %71, 0, !dbg !5598
  %73 = zext i1 %72 to i24, !dbg !5598
  %74 = load i24, i24* %65, align 4, !dbg !5598
  %75 = shl i24 %73, 1, !dbg !5598
  %76 = and i24 %74, -3, !dbg !5598
  %77 = or i24 %76, %75, !dbg !5598
  store i24 %77, i24* %65, align 4, !dbg !5598
  %78 = trunc i24 %73 to i8, !dbg !5598
  %79 = trunc i8 %78 to i1, !dbg !5598
  %80 = load i8*, i8** %5, align 4, !dbg !5599
  store i8* %80, i8** %3, align 4, !dbg !5600
  br label %81, !dbg !5600

81:                                               ; preds = %61, %35, %26
  %82 = load i8*, i8** %3, align 4, !dbg !5601
  ret i8* %82, !dbg !5601
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_length(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5602 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5603, metadata !DIExpression()), !dbg !5604
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5605, metadata !DIExpression()), !dbg !5606
  %5 = load i8*, i8** %4, align 4, !dbg !5607
  %6 = load i8, i8* %5, align 1, !dbg !5608
  %7 = zext i8 %6 to i32, !dbg !5608
  switch i32 %7, label %87 [
    i32 104, label %8
    i32 108, label %29
    i32 106, label %50
    i32 122, label %58
    i32 116, label %66
    i32 76, label %74
  ], !dbg !5609

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 4, !dbg !5610
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5610
  store i8* %10, i8** %4, align 4, !dbg !5610
  %11 = load i8, i8* %10, align 1, !dbg !5613
  %12 = zext i8 %11 to i32, !dbg !5613
  %13 = icmp eq i32 %12, 104, !dbg !5614
  br i1 %13, label %14, label %22, !dbg !5615

14:                                               ; preds = %8
  %15 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5616
  %16 = bitcast %struct.conversion* %15 to i24*, !dbg !5618
  %17 = load i24, i24* %16, align 4, !dbg !5619
  %18 = and i24 %17, -30721, !dbg !5619
  %19 = or i24 %18, 2048, !dbg !5619
  store i24 %19, i24* %16, align 4, !dbg !5619
  %20 = load i8*, i8** %4, align 4, !dbg !5620
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5620
  store i8* %21, i8** %4, align 4, !dbg !5620
  br label %28, !dbg !5621

22:                                               ; preds = %8
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5622
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5624
  %25 = load i24, i24* %24, align 4, !dbg !5625
  %26 = and i24 %25, -30721, !dbg !5625
  %27 = or i24 %26, 4096, !dbg !5625
  store i24 %27, i24* %24, align 4, !dbg !5625
  br label %28

28:                                               ; preds = %22, %14
  br label %93, !dbg !5626

29:                                               ; preds = %2
  %30 = load i8*, i8** %4, align 4, !dbg !5627
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5627
  store i8* %31, i8** %4, align 4, !dbg !5627
  %32 = load i8, i8* %31, align 1, !dbg !5629
  %33 = zext i8 %32 to i32, !dbg !5629
  %34 = icmp eq i32 %33, 108, !dbg !5630
  br i1 %34, label %35, label %43, !dbg !5631

35:                                               ; preds = %29
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5632
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5634
  %38 = load i24, i24* %37, align 4, !dbg !5635
  %39 = and i24 %38, -30721, !dbg !5635
  %40 = or i24 %39, 8192, !dbg !5635
  store i24 %40, i24* %37, align 4, !dbg !5635
  %41 = load i8*, i8** %4, align 4, !dbg !5636
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5636
  store i8* %42, i8** %4, align 4, !dbg !5636
  br label %49, !dbg !5637

43:                                               ; preds = %29
  %44 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5638
  %45 = bitcast %struct.conversion* %44 to i24*, !dbg !5640
  %46 = load i24, i24* %45, align 4, !dbg !5641
  %47 = and i24 %46, -30721, !dbg !5641
  %48 = or i24 %47, 6144, !dbg !5641
  store i24 %48, i24* %45, align 4, !dbg !5641
  br label %49

49:                                               ; preds = %43, %35
  br label %93, !dbg !5642

50:                                               ; preds = %2
  %51 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5643
  %52 = bitcast %struct.conversion* %51 to i24*, !dbg !5644
  %53 = load i24, i24* %52, align 4, !dbg !5645
  %54 = and i24 %53, -30721, !dbg !5645
  %55 = or i24 %54, 10240, !dbg !5645
  store i24 %55, i24* %52, align 4, !dbg !5645
  %56 = load i8*, i8** %4, align 4, !dbg !5646
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5646
  store i8* %57, i8** %4, align 4, !dbg !5646
  br label %93, !dbg !5647

58:                                               ; preds = %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5648
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5649
  %61 = load i24, i24* %60, align 4, !dbg !5650
  %62 = and i24 %61, -30721, !dbg !5650
  %63 = or i24 %62, 12288, !dbg !5650
  store i24 %63, i24* %60, align 4, !dbg !5650
  %64 = load i8*, i8** %4, align 4, !dbg !5651
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !5651
  store i8* %65, i8** %4, align 4, !dbg !5651
  br label %93, !dbg !5652

66:                                               ; preds = %2
  %67 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5653
  %68 = bitcast %struct.conversion* %67 to i24*, !dbg !5654
  %69 = load i24, i24* %68, align 4, !dbg !5655
  %70 = and i24 %69, -30721, !dbg !5655
  %71 = or i24 %70, 14336, !dbg !5655
  store i24 %71, i24* %68, align 4, !dbg !5655
  %72 = load i8*, i8** %4, align 4, !dbg !5656
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !5656
  store i8* %73, i8** %4, align 4, !dbg !5656
  br label %93, !dbg !5657

74:                                               ; preds = %2
  %75 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5658
  %76 = bitcast %struct.conversion* %75 to i24*, !dbg !5659
  %77 = load i24, i24* %76, align 4, !dbg !5660
  %78 = and i24 %77, -30721, !dbg !5660
  %79 = or i24 %78, 16384, !dbg !5660
  store i24 %79, i24* %76, align 4, !dbg !5660
  %80 = load i8*, i8** %4, align 4, !dbg !5661
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !5661
  store i8* %81, i8** %4, align 4, !dbg !5661
  %82 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5662
  %83 = bitcast %struct.conversion* %82 to i24*, !dbg !5663
  %84 = load i24, i24* %83, align 4, !dbg !5664
  %85 = and i24 %84, -3, !dbg !5664
  %86 = or i24 %85, 2, !dbg !5664
  store i24 %86, i24* %83, align 4, !dbg !5664
  br label %93, !dbg !5665

87:                                               ; preds = %2
  %88 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5666
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !5667
  %90 = load i24, i24* %89, align 4, !dbg !5668
  %91 = and i24 %90, -30721, !dbg !5668
  %92 = or i24 %91, 0, !dbg !5668
  store i24 %92, i24* %89, align 4, !dbg !5668
  br label %93, !dbg !5669

93:                                               ; preds = %87, %74, %66, %58, %50, %49, %28
  %94 = load i8*, i8** %4, align 4, !dbg !5670
  ret i8* %94, !dbg !5671
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_specifier(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5672 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5677, metadata !DIExpression()), !dbg !5678
  store i8 0, i8* %5, align 1, !dbg !5678
  %6 = load i8*, i8** %4, align 4, !dbg !5679
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5679
  store i8* %7, i8** %4, align 4, !dbg !5679
  %8 = load i8, i8* %6, align 1, !dbg !5680
  %9 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5681
  %10 = getelementptr inbounds %struct.conversion, %struct.conversion* %9, i32 0, i32 1, !dbg !5682
  store i8 %8, i8* %10, align 1, !dbg !5683
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5684
  %12 = getelementptr inbounds %struct.conversion, %struct.conversion* %11, i32 0, i32 1, !dbg !5685
  %13 = load i8, i8* %12, align 1, !dbg !5685
  %14 = zext i8 %13 to i32, !dbg !5684
  switch i32 %14, label %94 [
    i32 100, label %15
    i32 105, label %15
    i32 111, label %21
    i32 99, label %21
    i32 117, label %21
    i32 120, label %21
    i32 88, label %21
    i32 97, label %58
    i32 65, label %58
    i32 101, label %58
    i32 69, label %58
    i32 102, label %58
    i32 70, label %58
    i32 103, label %58
    i32 71, label %58
    i32 110, label %64
    i32 115, label %79
    i32 112, label %79
  ], !dbg !5686

15:                                               ; preds = %2, %2
  %16 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5687
  %17 = bitcast %struct.conversion* %16 to i24*, !dbg !5689
  %18 = load i24, i24* %17, align 4, !dbg !5690
  %19 = and i24 %18, -458753, !dbg !5690
  %20 = or i24 %19, 65536, !dbg !5690
  store i24 %20, i24* %17, align 4, !dbg !5690
  br label %27, !dbg !5691

21:                                               ; preds = %2, %2, %2, %2, %2
  %22 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5692
  %23 = bitcast %struct.conversion* %22 to i24*, !dbg !5693
  %24 = load i24, i24* %23, align 4, !dbg !5694
  %25 = and i24 %24, -458753, !dbg !5694
  %26 = or i24 %25, 131072, !dbg !5694
  store i24 %26, i24* %23, align 4, !dbg !5694
  br label %27, !dbg !5692

27:                                               ; preds = %21, %15
  call void @llvm.dbg.label(metadata !5695), !dbg !5696
  %28 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5697
  %29 = bitcast %struct.conversion* %28 to i24*, !dbg !5699
  %30 = load i24, i24* %29, align 4, !dbg !5699
  %31 = lshr i24 %30, 11, !dbg !5699
  %32 = and i24 %31, 15, !dbg !5699
  %33 = zext i24 %32 to i32, !dbg !5699
  %34 = icmp eq i32 %33, 8, !dbg !5700
  br i1 %34, label %35, label %41, !dbg !5701

35:                                               ; preds = %27
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5702
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5704
  %38 = load i24, i24* %37, align 4, !dbg !5705
  %39 = and i24 %38, -2, !dbg !5705
  %40 = or i24 %39, 1, !dbg !5705
  store i24 %40, i24* %37, align 4, !dbg !5705
  br label %41, !dbg !5706

41:                                               ; preds = %35, %27
  %42 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5707
  %43 = getelementptr inbounds %struct.conversion, %struct.conversion* %42, i32 0, i32 1, !dbg !5709
  %44 = load i8, i8* %43, align 1, !dbg !5709
  %45 = zext i8 %44 to i32, !dbg !5707
  %46 = icmp eq i32 %45, 99, !dbg !5710
  br i1 %46, label %47, label %56, !dbg !5711

47:                                               ; preds = %41
  %48 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5712
  %49 = bitcast %struct.conversion* %48 to i24*, !dbg !5714
  %50 = load i24, i24* %49, align 4, !dbg !5714
  %51 = lshr i24 %50, 11, !dbg !5714
  %52 = and i24 %51, 15, !dbg !5714
  %53 = zext i24 %52 to i32, !dbg !5714
  %54 = icmp ne i32 %53, 0, !dbg !5715
  %55 = zext i1 %54 to i8, !dbg !5716
  store i8 %55, i8* %5, align 1, !dbg !5716
  br label %57, !dbg !5717

56:                                               ; preds = %41
  br label %57

57:                                               ; preds = %56, %47
  br label %100, !dbg !5718

58:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5719
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5720
  %61 = load i24, i24* %60, align 4, !dbg !5721
  %62 = and i24 %61, -458753, !dbg !5721
  %63 = or i24 %62, 262144, !dbg !5721
  store i24 %63, i24* %60, align 4, !dbg !5721
  store i8 1, i8* %5, align 1, !dbg !5722
  br label %100, !dbg !5725

64:                                               ; preds = %2
  %65 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5726
  %66 = bitcast %struct.conversion* %65 to i24*, !dbg !5727
  %67 = load i24, i24* %66, align 4, !dbg !5728
  %68 = and i24 %67, -458753, !dbg !5728
  %69 = or i24 %68, 196608, !dbg !5728
  store i24 %69, i24* %66, align 4, !dbg !5728
  %70 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5729
  %71 = bitcast %struct.conversion* %70 to i24*, !dbg !5731
  %72 = load i24, i24* %71, align 4, !dbg !5731
  %73 = lshr i24 %72, 11, !dbg !5731
  %74 = and i24 %73, 15, !dbg !5731
  %75 = zext i24 %74 to i32, !dbg !5731
  %76 = icmp eq i32 %75, 8, !dbg !5732
  br i1 %76, label %77, label %78, !dbg !5733

77:                                               ; preds = %64
  store i8 1, i8* %5, align 1, !dbg !5734
  br label %78, !dbg !5736

78:                                               ; preds = %77, %64
  br label %100, !dbg !5737

79:                                               ; preds = %2, %2
  %80 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5738
  %81 = bitcast %struct.conversion* %80 to i24*, !dbg !5739
  %82 = load i24, i24* %81, align 4, !dbg !5740
  %83 = and i24 %82, -458753, !dbg !5740
  %84 = or i24 %83, 196608, !dbg !5740
  store i24 %84, i24* %81, align 4, !dbg !5740
  %85 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5741
  %86 = bitcast %struct.conversion* %85 to i24*, !dbg !5743
  %87 = load i24, i24* %86, align 4, !dbg !5743
  %88 = lshr i24 %87, 11, !dbg !5743
  %89 = and i24 %88, 15, !dbg !5743
  %90 = zext i24 %89 to i32, !dbg !5743
  %91 = icmp ne i32 %90, 0, !dbg !5744
  br i1 %91, label %92, label %93, !dbg !5745

92:                                               ; preds = %79
  store i8 1, i8* %5, align 1, !dbg !5746
  br label %93, !dbg !5748

93:                                               ; preds = %92, %79
  br label %100, !dbg !5749

94:                                               ; preds = %2
  %95 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5750
  %96 = bitcast %struct.conversion* %95 to i24*, !dbg !5751
  %97 = load i24, i24* %96, align 4, !dbg !5752
  %98 = and i24 %97, -2, !dbg !5752
  %99 = or i24 %98, 1, !dbg !5752
  store i24 %99, i24* %96, align 4, !dbg !5752
  br label %100, !dbg !5753

100:                                              ; preds = %94, %93, %78, %58, %57
  %101 = load i8, i8* %5, align 1, !dbg !5754
  %102 = trunc i8 %101 to i1, !dbg !5754
  %103 = zext i1 %102 to i32, !dbg !5754
  %104 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5755
  %105 = bitcast %struct.conversion* %104 to i24*, !dbg !5756
  %106 = load i24, i24* %105, align 4, !dbg !5757
  %107 = lshr i24 %106, 1, !dbg !5757
  %108 = and i24 %107, 1, !dbg !5757
  %109 = trunc i24 %108 to i1, !dbg !5757
  %110 = zext i1 %109 to i32, !dbg !5757
  %111 = or i32 %110, %103, !dbg !5757
  %112 = icmp ne i32 %111, 0, !dbg !5757
  %113 = zext i1 %112 to i24, !dbg !5757
  %114 = load i24, i24* %105, align 4, !dbg !5757
  %115 = shl i24 %113, 1, !dbg !5757
  %116 = and i24 %114, -3, !dbg !5757
  %117 = or i24 %116, %115, !dbg !5757
  store i24 %117, i24* %105, align 4, !dbg !5757
  %118 = trunc i24 %113 to i8, !dbg !5757
  %119 = trunc i8 %118 to i1, !dbg !5757
  %120 = load i8*, i8** %4, align 4, !dbg !5758
  ret i8* %120, !dbg !5759
}

; Function Attrs: noinline nounwind optnone
define internal i32 @extract_decimal(i8** noundef %0) #1 !dbg !5760 {
  %2 = alloca i8**, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5766, metadata !DIExpression()), !dbg !5767
  %5 = load i8**, i8*** %2, align 4, !dbg !5768
  %6 = load i8*, i8** %5, align 4, !dbg !5769
  store i8* %6, i8** %3, align 4, !dbg !5767
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5770, metadata !DIExpression()), !dbg !5771
  store i32 0, i32* %4, align 4, !dbg !5771
  br label %7, !dbg !5772

7:                                                ; preds = %13, %1
  %8 = load i8*, i8** %3, align 4, !dbg !5773
  %9 = load i8, i8* %8, align 1, !dbg !5774
  %10 = zext i8 %9 to i32, !dbg !5775
  %11 = call i32 @isdigit(i32 noundef %10) #10, !dbg !5776
  %12 = icmp ne i32 %11, 0, !dbg !5772
  br i1 %12, label %13, label %22, !dbg !5772

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !5777
  %15 = mul i32 10, %14, !dbg !5779
  %16 = load i8*, i8** %3, align 4, !dbg !5780
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5780
  store i8* %17, i8** %3, align 4, !dbg !5780
  %18 = load i8, i8* %16, align 1, !dbg !5781
  %19 = zext i8 %18 to i32, !dbg !5781
  %20 = add i32 %15, %19, !dbg !5782
  %21 = sub i32 %20, 48, !dbg !5783
  store i32 %21, i32* %4, align 4, !dbg !5784
  br label %7, !dbg !5772, !llvm.loop !5785

22:                                               ; preds = %7
  %23 = load i8*, i8** %3, align 4, !dbg !5787
  %24 = load i8**, i8*** %2, align 4, !dbg !5788
  store i8* %23, i8** %24, align 4, !dbg !5789
  %25 = load i32, i32* %4, align 4, !dbg !5790
  ret i32 %25, !dbg !5791
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isdigit(i32 noundef %0) #1 !dbg !5792 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5793, metadata !DIExpression()), !dbg !5794
  %3 = load i32, i32* %2, align 4, !dbg !5795
  %4 = sub i32 %3, 48, !dbg !5796
  %5 = icmp ult i32 %4, 10, !dbg !5797
  %6 = zext i1 %5 to i32, !dbg !5797
  ret i32 %6, !dbg !5798
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_ConfigAbsSyms() #1 !dbg !5799 {
  call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #9, !dbg !5801, !srcloc !5802
  call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #9, !dbg !5803, !srcloc !5804
  call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #9, !dbg !5805, !srcloc !5806
  call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #9, !dbg !5807, !srcloc !5808
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #9, !dbg !5809, !srcloc !5810
  call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,28\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #9, !dbg !5811, !srcloc !5812
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,48000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #9, !dbg !5813, !srcloc !5814
  call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,256\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #9, !dbg !5815, !srcloc !5816
  call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #9, !dbg !5817, !srcloc !5818
  call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #9, !dbg !5819, !srcloc !5820
  call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #9, !dbg !5821, !srcloc !5822
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #9, !dbg !5823, !srcloc !5824
  call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #9, !dbg !5825, !srcloc !5826
  call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #9, !dbg !5827, !srcloc !5828
  call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #9, !dbg !5829, !srcloc !5830
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #9, !dbg !5831, !srcloc !5832
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #9, !dbg !5833, !srcloc !5834
  call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #9, !dbg !5835, !srcloc !5836
  call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #9, !dbg !5837, !srcloc !5838
  call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #9, !dbg !5839, !srcloc !5840
  call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #9, !dbg !5841, !srcloc !5842
  call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #9, !dbg !5843, !srcloc !5844
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARDUINO_MKR_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARDUINO_MKR_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARDUINO_MKR_HEADER_ENABLED,%object", ""() #9, !dbg !5845, !srcloc !5846
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,%object", ""() #9, !dbg !5847, !srcloc !5848
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,%object", ""() #9, !dbg !5849, !srcloc !5850
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,%object", ""() #9, !dbg !5851, !srcloc !5852
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,%object", ""() #9, !dbg !5853, !srcloc !5854
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DAC_ENABLED,%object", ""() #9, !dbg !5855, !srcloc !5856
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,%object", ""() #9, !dbg !5857, !srcloc !5858
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,%object", ""() #9, !dbg !5859, !srcloc !5860
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,%object", ""() #9, !dbg !5861, !srcloc !5862
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED,%object", ""() #9, !dbg !5863, !srcloc !5864
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,%object", ""() #9, !dbg !5865, !srcloc !5866
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,%object", ""() #9, !dbg !5867, !srcloc !5868
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,%object", ""() #9, !dbg !5869, !srcloc !5870
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,%object", ""() #9, !dbg !5871, !srcloc !5872
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,%object", ""() #9, !dbg !5873, !srcloc !5874
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,%object", ""() #9, !dbg !5875, !srcloc !5876
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,%object", ""() #9, !dbg !5877, !srcloc !5878
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,%object", ""() #9, !dbg !5879, !srcloc !5880
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,%object", ""() #9, !dbg !5881, !srcloc !5882
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,%object", ""() #9, !dbg !5883, !srcloc !5884
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,%object", ""() #9, !dbg !5885, !srcloc !5886
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #9, !dbg !5887, !srcloc !5888
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #9, !dbg !5889, !srcloc !5890
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #9, !dbg !5891, !srcloc !5892
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #9, !dbg !5893, !srcloc !5894
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_SDHC_SPI_SLOT_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_SDHC_SPI_SLOT_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_SDHC_SPI_SLOT_ENABLED,%object", ""() #9, !dbg !5895, !srcloc !5896
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_SDMMC_DISK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_SDMMC_DISK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_SDMMC_DISK_ENABLED,%object", ""() #9, !dbg !5897, !srcloc !5898
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #9, !dbg !5899, !srcloc !5900
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #9, !dbg !5901, !srcloc !5902
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #9, !dbg !5903, !srcloc !5904
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #9, !dbg !5905, !srcloc !5906
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #9, !dbg !5907, !srcloc !5908
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #9, !dbg !5909, !srcloc !5910
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #9, !dbg !5911, !srcloc !5912
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #9, !dbg !5913, !srcloc !5914
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #9, !dbg !5915, !srcloc !5916
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #9, !dbg !5917, !srcloc !5918
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #9, !dbg !5919, !srcloc !5920
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #9, !dbg !5921, !srcloc !5922
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #9, !dbg !5923, !srcloc !5924
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #9, !dbg !5925, !srcloc !5926
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #9, !dbg !5927, !srcloc !5928
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #9, !dbg !5929, !srcloc !5930
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #9, !dbg !5931, !srcloc !5932
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #9, !dbg !5933, !srcloc !5934
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #9, !dbg !5935, !srcloc !5936
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #9, !dbg !5937, !srcloc !5938
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #9, !dbg !5939, !srcloc !5940
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #9, !dbg !5941, !srcloc !5942
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #9, !dbg !5943, !srcloc !5944
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #9, !dbg !5945, !srcloc !5946
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #9, !dbg !5947, !srcloc !5948
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #9, !dbg !5949, !srcloc !5950
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #9, !dbg !5951, !srcloc !5952
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #9, !dbg !5953, !srcloc !5954
  call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #9, !dbg !5955, !srcloc !5956
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #9, !dbg !5957, !srcloc !5958
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #9, !dbg !5959, !srcloc !5960
  call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #9, !dbg !5961, !srcloc !5962
  call void asm sideeffect ".globl\09CONFIG_BOARD_ARDUINO_MKRZERO\0A\09.equ\09CONFIG_BOARD_ARDUINO_MKRZERO,1\0A\09.type\09CONFIG_BOARD_ARDUINO_MKRZERO,%object", ""() #9, !dbg !5963, !srcloc !5964
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAMD21\0A\09.equ\09CONFIG_SOC_SERIES_SAMD21,1\0A\09.type\09CONFIG_SOC_SERIES_SAMD21,%object", ""() #9, !dbg !5965, !srcloc !5966
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #9, !dbg !5967, !srcloc !5968
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM0\0A\09.equ\09CONFIG_SOC_FAMILY_SAM0,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM0,%object", ""() #9, !dbg !5969, !srcloc !5970
  call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD_XOSC32K\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD_XOSC32K,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD_XOSC32K,%object", ""() #9, !dbg !5971, !srcloc !5972
  call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN,%object", ""() #9, !dbg !5973, !srcloc !5974
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAMD21G18A\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAMD21G18A,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAMD21G18A,%object", ""() #9, !dbg !5975, !srcloc !5976
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_REVISION\0A\09.equ\09CONFIG_SOC_SERIES_REVISION,1\0A\09.type\09CONFIG_SOC_SERIES_REVISION,%object", ""() #9, !dbg !5977, !srcloc !5978
  call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #9, !dbg !5979, !srcloc !5980
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #9, !dbg !5981, !srcloc !5982
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #9, !dbg !5983, !srcloc !5984
  call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #9, !dbg !5985, !srcloc !5986
  call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #9, !dbg !5987, !srcloc !5988
  call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #9, !dbg !5989, !srcloc !5990
  call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #9, !dbg !5991, !srcloc !5992
  call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #9, !dbg !5993, !srcloc !5994
  call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #9, !dbg !5995, !srcloc !5996
  call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #9, !dbg !5997, !srcloc !5998
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M0PLUS\0A\09.equ\09CONFIG_CPU_CORTEX_M0PLUS,1\0A\09.type\09CONFIG_CPU_CORTEX_M0PLUS,%object", ""() #9, !dbg !5999, !srcloc !6000
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #9, !dbg !6001, !srcloc !6002
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #9, !dbg !6003, !srcloc !6004
  call void asm sideeffect ".globl\09CONFIG_ARMV6_M_ARMV8_M_BASELINE\0A\09.equ\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,1\0A\09.type\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,%object", ""() #9, !dbg !6005, !srcloc !6006
  call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #9, !dbg !6007, !srcloc !6008
  call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #9, !dbg !6009, !srcloc !6010
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #9, !dbg !6011, !srcloc !6012
  call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #9, !dbg !6013, !srcloc !6014
  call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #9, !dbg !6015, !srcloc !6016
  call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #9, !dbg !6017, !srcloc !6018
  call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #9, !dbg !6019, !srcloc !6020
  call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #9, !dbg !6021, !srcloc !6022
  call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #9, !dbg !6023, !srcloc !6024
  call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #9, !dbg !6025, !srcloc !6026
  call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #9, !dbg !6027, !srcloc !6028
  call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #9, !dbg !6029, !srcloc !6030
  call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #9, !dbg !6031, !srcloc !6032
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #9, !dbg !6033, !srcloc !6034
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #9, !dbg !6035, !srcloc !6036
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #9, !dbg !6037, !srcloc !6038
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #9, !dbg !6039, !srcloc !6040
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #9, !dbg !6041, !srcloc !6042
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #9, !dbg !6043, !srcloc !6044
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #9, !dbg !6045, !srcloc !6046
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6047, !srcloc !6048
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #9, !dbg !6049, !srcloc !6050
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #9, !dbg !6051, !srcloc !6052
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #9, !dbg !6053, !srcloc !6054
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #9, !dbg !6055, !srcloc !6056
  call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #9, !dbg !6057, !srcloc !6058
  call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #9, !dbg !6059, !srcloc !6060
  call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #9, !dbg !6061, !srcloc !6062
  call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #9, !dbg !6063, !srcloc !6064
  call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #9, !dbg !6065, !srcloc !6066
  call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #9, !dbg !6067, !srcloc !6068
  call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #9, !dbg !6069, !srcloc !6070
  call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #9, !dbg !6071, !srcloc !6072
  call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #9, !dbg !6073, !srcloc !6074
  call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #9, !dbg !6075, !srcloc !6076
  call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #9, !dbg !6077, !srcloc !6078
  call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #9, !dbg !6079, !srcloc !6080
  call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #9, !dbg !6081, !srcloc !6082
  call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #9, !dbg !6083, !srcloc !6084
  call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #9, !dbg !6085, !srcloc !6086
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #9, !dbg !6087, !srcloc !6088
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #9, !dbg !6089, !srcloc !6090
  call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_C\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_C,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_C,%object", ""() #9, !dbg !6091, !srcloc !6092
  call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #9, !dbg !6093, !srcloc !6094
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #9, !dbg !6095, !srcloc !6096
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #9, !dbg !6097, !srcloc !6098
  call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #9, !dbg !6099, !srcloc !6100
  call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #9, !dbg !6101, !srcloc !6102
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #9, !dbg !6103, !srcloc !6104
  call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #9, !dbg !6105, !srcloc !6106
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #9, !dbg !6107, !srcloc !6108
  call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #9, !dbg !6109, !srcloc !6110
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #9, !dbg !6111, !srcloc !6112
  call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #9, !dbg !6113, !srcloc !6114
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #9, !dbg !6115, !srcloc !6116
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #9, !dbg !6117, !srcloc !6118
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #9, !dbg !6119, !srcloc !6120
  call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #9, !dbg !6121, !srcloc !6122
  call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #9, !dbg !6123, !srcloc !6124
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #9, !dbg !6125, !srcloc !6126
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6127, !srcloc !6128
  call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #9, !dbg !6129, !srcloc !6130
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #9, !dbg !6131, !srcloc !6132
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #9, !dbg !6133, !srcloc !6134
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #9, !dbg !6135, !srcloc !6136
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #9, !dbg !6137, !srcloc !6138
  call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #9, !dbg !6139, !srcloc !6140
  call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #9, !dbg !6141, !srcloc !6142
  call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #9, !dbg !6143, !srcloc !6144
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #9, !dbg !6145, !srcloc !6146
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #9, !dbg !6147, !srcloc !6148
  call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #9, !dbg !6149, !srcloc !6150
  call void asm sideeffect ".globl\09CONFIG_UART_SAM0\0A\09.equ\09CONFIG_UART_SAM0,1\0A\09.type\09CONFIG_UART_SAM0,%object", ""() #9, !dbg !6151, !srcloc !6152
  call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #9, !dbg !6153, !srcloc !6154
  call void asm sideeffect ".globl\09CONFIG_SAM0_EIC\0A\09.equ\09CONFIG_SAM0_EIC,1\0A\09.type\09CONFIG_SAM0_EIC,%object", ""() #9, !dbg !6155, !srcloc !6156
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #9, !dbg !6157, !srcloc !6158
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #9, !dbg !6159, !srcloc !6160
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #9, !dbg !6161, !srcloc !6162
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #9, !dbg !6163, !srcloc !6164
  call void asm sideeffect ".globl\09CONFIG_GPIO_SAM0\0A\09.equ\09CONFIG_GPIO_SAM0,1\0A\09.type\09CONFIG_GPIO_SAM0,%object", ""() #9, !dbg !6165, !srcloc !6166
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM0\0A\09.equ\09CONFIG_PINCTRL_SAM0,1\0A\09.type\09CONFIG_PINCTRL_SAM0,%object", ""() #9, !dbg !6167, !srcloc !6168
  call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #9, !dbg !6169, !srcloc !6170
  call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #9, !dbg !6171, !srcloc !6172
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #9, !dbg !6173, !srcloc !6174
  call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #9, !dbg !6175, !srcloc !6176
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #9, !dbg !6177, !srcloc !6178
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #9, !dbg !6179, !srcloc !6180
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #9, !dbg !6181, !srcloc !6182
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #9, !dbg !6183, !srcloc !6184
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #9, !dbg !6185, !srcloc !6186
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #9, !dbg !6187, !srcloc !6188
  call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #9, !dbg !6189, !srcloc !6190
  call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #9, !dbg !6191, !srcloc !6192
  call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #9, !dbg !6193, !srcloc !6194
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #9, !dbg !6195, !srcloc !6196
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #9, !dbg !6197, !srcloc !6198
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #9, !dbg !6199, !srcloc !6200
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #9, !dbg !6201, !srcloc !6202
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #9, !dbg !6203, !srcloc !6204
  call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #9, !dbg !6205, !srcloc !6206
  call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #9, !dbg !6207, !srcloc !6208
  call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #9, !dbg !6209, !srcloc !6210
  call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #9, !dbg !6211, !srcloc !6212
  call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #9, !dbg !6213, !srcloc !6214
  call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #9, !dbg !6215, !srcloc !6216
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #9, !dbg !6217, !srcloc !6218
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !6219, !srcloc !6220
  call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #9, !dbg !6221, !srcloc !6222
  call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !6223, !srcloc !6224
  call void asm sideeffect ".globl\09CONFIG_USE_DT_CODE_PARTITION\0A\09.equ\09CONFIG_USE_DT_CODE_PARTITION,1\0A\09.type\09CONFIG_USE_DT_CODE_PARTITION,%object", ""() #9, !dbg !6225, !srcloc !6226
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x2000\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !6227, !srcloc !6228
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x3a000\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #9, !dbg !6229, !srcloc !6230
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #9, !dbg !6231, !srcloc !6232
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #9, !dbg !6233, !srcloc !6234
  call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #9, !dbg !6235, !srcloc !6236
  call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #9, !dbg !6237, !srcloc !6238
  call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #9, !dbg !6239, !srcloc !6240
  call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #9, !dbg !6241, !srcloc !6242
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #9, !dbg !6243, !srcloc !6244
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #9, !dbg !6245, !srcloc !6246
  call void asm sideeffect ".globl\09CONFIG_NO_OPTIMIZATIONS\0A\09.equ\09CONFIG_NO_OPTIMIZATIONS,1\0A\09.type\09CONFIG_NO_OPTIMIZATIONS,%object", ""() #9, !dbg !6247, !srcloc !6248
  call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #9, !dbg !6249, !srcloc !6250
  call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #9, !dbg !6251, !srcloc !6252
  call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #9, !dbg !6253, !srcloc !6254
  call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #9, !dbg !6255, !srcloc !6256
  call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #9, !dbg !6257, !srcloc !6258
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #9, !dbg !6259, !srcloc !6260
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #9, !dbg !6261, !srcloc !6262
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #9, !dbg !6263, !srcloc !6264
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #9, !dbg !6265, !srcloc !6266
  call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #9, !dbg !6267, !srcloc !6268
  call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #9, !dbg !6269, !srcloc !6270
  call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA,%object", ""() #9, !dbg !6271, !srcloc !6272
  call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA_ARDUINO\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA_ARDUINO,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA_ARDUINO,%object", ""() #9, !dbg !6273, !srcloc !6274
  call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #9, !dbg !6275, !srcloc !6276
  ret void, !dbg !6277
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !6278 {
  %4 = alloca %struct.PortGroup*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  store %struct.PortGroup* %0, %struct.PortGroup** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %4, metadata !6433, metadata !DIExpression()), !dbg !6434
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6435, metadata !DIExpression()), !dbg !6436
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6437, metadata !DIExpression()), !dbg !6438
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6439, metadata !DIExpression()), !dbg !6440
  %9 = load i32, i32* %5, align 4, !dbg !6441
  %10 = and i32 %9, 1, !dbg !6442
  %11 = icmp ne i32 %10, 0, !dbg !6441
  %12 = zext i1 %11 to i8, !dbg !6440
  store i8 %12, i8* %7, align 1, !dbg !6440
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6443, metadata !DIExpression()), !dbg !6444
  %13 = load i32, i32* %5, align 4, !dbg !6445
  %14 = udiv i32 %13, 2, !dbg !6446
  store i32 %14, i32* %8, align 4, !dbg !6444
  %15 = load i8, i8* %7, align 1, !dbg !6447
  %16 = trunc i8 %15 to i1, !dbg !6447
  br i1 %16, label %17, label %31, !dbg !6449

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !6450
  %19 = trunc i32 %18 to i8, !dbg !6450
  %20 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6452
  %21 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %20, i32 0, i32 12, !dbg !6453
  %22 = load i32, i32* %8, align 4, !dbg !6454
  %23 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %21, i32 0, i32 %22, !dbg !6452
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !6455
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !6456
  %26 = load volatile i8, i8* %25, align 1, !dbg !6457
  %27 = and i8 %19, 15, !dbg !6457
  %28 = shl i8 %27, 4, !dbg !6457
  %29 = and i8 %26, 15, !dbg !6457
  %30 = or i8 %29, %28, !dbg !6457
  store volatile i8 %30, i8* %25, align 1, !dbg !6457
  br label %44, !dbg !6458

31:                                               ; preds = %3
  %32 = load i32, i32* %6, align 4, !dbg !6459
  %33 = trunc i32 %32 to i8, !dbg !6459
  %34 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6461
  %35 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %34, i32 0, i32 12, !dbg !6462
  %36 = load i32, i32* %8, align 4, !dbg !6463
  %37 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %35, i32 0, i32 %36, !dbg !6461
  %38 = bitcast %union.PORT_PMUX_Type* %37 to %struct.z_thread_stack_element*, !dbg !6464
  %39 = bitcast %struct.z_thread_stack_element* %38 to i8*, !dbg !6465
  %40 = load volatile i8, i8* %39, align 1, !dbg !6466
  %41 = and i8 %33, 15, !dbg !6466
  %42 = and i8 %40, -16, !dbg !6466
  %43 = or i8 %42, %41, !dbg !6466
  store volatile i8 %43, i8* %39, align 1, !dbg !6466
  br label %44

44:                                               ; preds = %31, %17
  %45 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6467
  %46 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %45, i32 0, i32 13, !dbg !6468
  %47 = load i32, i32* %5, align 4, !dbg !6469
  %48 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %46, i32 0, i32 %47, !dbg !6467
  %49 = bitcast %union.PORT_PMUX_Type* %48 to %struct.z_thread_stack_element*, !dbg !6470
  %50 = bitcast %struct.z_thread_stack_element* %49 to i8*, !dbg !6471
  %51 = load volatile i8, i8* %50, align 1, !dbg !6472
  %52 = and i8 %51, -2, !dbg !6472
  %53 = or i8 %52, 1, !dbg !6472
  store volatile i8 %53, i8* %50, align 1, !dbg !6472
  ret i32 0, !dbg !6473
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_configure(%struct.soc_port_pin* noundef %0) #1 !dbg !6474 {
  %2 = alloca %struct.soc_port_pin*, align 4
  %3 = alloca %struct.PortGroup*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.PORT_PMUX_Type, align 1
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %2, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %3, metadata !6487, metadata !DIExpression()), !dbg !6488
  %7 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6489
  %8 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %7, i32 0, i32 0, !dbg !6490
  %9 = load %struct.PortGroup*, %struct.PortGroup** %8, align 4, !dbg !6490
  store %struct.PortGroup* %9, %struct.PortGroup** %3, align 4, !dbg !6488
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6491, metadata !DIExpression()), !dbg !6492
  %10 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6493
  %11 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %10, i32 0, i32 2, !dbg !6494
  %12 = load i32, i32* %11, align 4, !dbg !6494
  store i32 %12, i32* %4, align 4, !dbg !6492
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6495, metadata !DIExpression()), !dbg !6496
  %13 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6497
  %14 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %13, i32 0, i32 2, !dbg !6498
  %15 = load i32, i32* %14, align 4, !dbg !6498
  %16 = and i32 %15, 983040, !dbg !6499
  %17 = lshr i32 %16, 16, !dbg !6500
  store i32 %17, i32* %5, align 4, !dbg !6496
  call void @llvm.dbg.declare(metadata %union.PORT_PMUX_Type* %6, metadata !6501, metadata !DIExpression()), !dbg !6502
  %18 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6502
  call void @llvm.memset.p0i8.i32(i8* align 1 %18, i8 0, i32 1, i1 false), !dbg !6502
  %19 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6503
  %20 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %19, i32 0, i32 13, !dbg !6504
  %21 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6505
  %22 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %21, i32 0, i32 1, !dbg !6506
  %23 = load i32, i32* %22, align 4, !dbg !6506
  %24 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %20, i32 0, i32 %23, !dbg !6503
  %25 = bitcast %union.PORT_PMUX_Type* %24 to i8*, !dbg !6507
  %26 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6507
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %25, i8* align 1 %26, i32 1, i1 true), !dbg !6507
  %27 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6508
  %28 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %27, i32 0, i32 1, !dbg !6509
  %29 = load i32, i32* %28, align 4, !dbg !6509
  %30 = shl i32 1, %29, !dbg !6510
  %31 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6511
  %32 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %31, i32 0, i32 1, !dbg !6512
  %33 = bitcast %union.PORT_DIR_Type* %32 to i32*, !dbg !6513
  store volatile i32 %30, i32* %33, align 4, !dbg !6514
  %34 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6515
  %35 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %34, i32 0, i32 1, !dbg !6516
  %36 = load i32, i32* %35, align 4, !dbg !6516
  %37 = shl i32 1, %36, !dbg !6517
  %38 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6518
  %39 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %38, i32 0, i32 5, !dbg !6519
  %40 = bitcast %union.PORT_DIR_Type* %39 to i32*, !dbg !6520
  store volatile i32 %37, i32* %40, align 4, !dbg !6521
  %41 = load i32, i32* %4, align 4, !dbg !6522
  %42 = and i32 %41, 64, !dbg !6524
  %43 = icmp ne i32 %42, 0, !dbg !6524
  br i1 %43, label %44, label %51, !dbg !6525

44:                                               ; preds = %1
  %45 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6526
  %46 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6528
  %47 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %46, i32 0, i32 1, !dbg !6529
  %48 = load i32, i32* %47, align 4, !dbg !6529
  %49 = load i32, i32* %5, align 4, !dbg !6530
  %50 = call i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %45, i32 noundef %48, i32 noundef %49) #10, !dbg !6531
  br label %114, !dbg !6532

51:                                               ; preds = %1
  %52 = load i32, i32* %4, align 4, !dbg !6533
  %53 = and i32 %52, 3, !dbg !6535
  %54 = icmp ne i32 %53, 0, !dbg !6535
  br i1 %54, label %55, label %73, !dbg !6536

55:                                               ; preds = %51
  %56 = load i32, i32* %4, align 4, !dbg !6537
  %57 = and i32 %56, 1, !dbg !6540
  %58 = icmp ne i32 %57, 0, !dbg !6540
  br i1 %58, label %59, label %67, !dbg !6541

59:                                               ; preds = %55
  %60 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6542
  %61 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %60, i32 0, i32 1, !dbg !6544
  %62 = load i32, i32* %61, align 4, !dbg !6544
  %63 = shl i32 1, %62, !dbg !6545
  %64 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6546
  %65 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %64, i32 0, i32 6, !dbg !6547
  %66 = bitcast %union.PORT_DIR_Type* %65 to i32*, !dbg !6548
  store volatile i32 %63, i32* %66, align 4, !dbg !6549
  br label %67, !dbg !6550

67:                                               ; preds = %59, %55
  %68 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6551
  %69 = bitcast %struct.z_thread_stack_element* %68 to i8*, !dbg !6552
  %70 = load i8, i8* %69, align 1, !dbg !6553
  %71 = and i8 %70, -5, !dbg !6553
  %72 = or i8 %71, 4, !dbg !6553
  store i8 %72, i8* %69, align 1, !dbg !6553
  br label %73, !dbg !6554

73:                                               ; preds = %67, %51
  %74 = load i32, i32* %4, align 4, !dbg !6555
  %75 = and i32 %74, 8, !dbg !6557
  %76 = icmp ne i32 %75, 0, !dbg !6557
  br i1 %76, label %77, label %83, !dbg !6558

77:                                               ; preds = %73
  %78 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6559
  %79 = bitcast %struct.z_thread_stack_element* %78 to i8*, !dbg !6561
  %80 = load i8, i8* %79, align 1, !dbg !6562
  %81 = and i8 %80, -3, !dbg !6562
  %82 = or i8 %81, 2, !dbg !6562
  store i8 %82, i8* %79, align 1, !dbg !6562
  br label %83, !dbg !6563

83:                                               ; preds = %77, %73
  %84 = load i32, i32* %4, align 4, !dbg !6564
  %85 = and i32 %84, 16, !dbg !6566
  %86 = icmp ne i32 %85, 0, !dbg !6566
  br i1 %86, label %87, label %95, !dbg !6567

87:                                               ; preds = %83
  %88 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6568
  %89 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %88, i32 0, i32 1, !dbg !6570
  %90 = load i32, i32* %89, align 4, !dbg !6570
  %91 = shl i32 1, %90, !dbg !6571
  %92 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6572
  %93 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %92, i32 0, i32 2, !dbg !6573
  %94 = bitcast %union.PORT_DIR_Type* %93 to i32*, !dbg !6574
  store volatile i32 %91, i32* %94, align 4, !dbg !6575
  br label %95, !dbg !6576

95:                                               ; preds = %87, %83
  %96 = load i32, i32* %4, align 4, !dbg !6577
  %97 = and i32 %96, 32, !dbg !6579
  %98 = icmp ne i32 %97, 0, !dbg !6579
  br i1 %98, label %99, label %105, !dbg !6580

99:                                               ; preds = %95
  %100 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6581
  %101 = bitcast %struct.z_thread_stack_element* %100 to i8*, !dbg !6583
  %102 = load i8, i8* %101, align 1, !dbg !6584
  %103 = and i8 %102, -65, !dbg !6584
  %104 = or i8 %103, 64, !dbg !6584
  store i8 %104, i8* %101, align 1, !dbg !6584
  br label %105, !dbg !6585

105:                                              ; preds = %99, %95
  %106 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6586
  %107 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %106, i32 0, i32 13, !dbg !6587
  %108 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6588
  %109 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %108, i32 0, i32 1, !dbg !6589
  %110 = load i32, i32* %109, align 4, !dbg !6589
  %111 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %107, i32 0, i32 %110, !dbg !6586
  %112 = bitcast %union.PORT_PMUX_Type* %111 to i8*, !dbg !6590
  %113 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6590
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %112, i8* align 1 %113, i32 1, i1 true), !dbg !6590
  br label %114, !dbg !6591

114:                                              ; preds = %105, %44
  ret void, !dbg !6591
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_list_configure(%struct.soc_port_pin* noundef %0, i32 noundef %1) #1 !dbg !6592 {
  %3 = alloca %struct.soc_port_pin*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %3, metadata !6595, metadata !DIExpression()), !dbg !6596
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6599, metadata !DIExpression()), !dbg !6601
  store i32 0, i32* %5, align 4, !dbg !6601
  br label %6, !dbg !6602

6:                                                ; preds = %14, %2
  %7 = load i32, i32* %5, align 4, !dbg !6603
  %8 = load i32, i32* %4, align 4, !dbg !6605
  %9 = icmp ult i32 %7, %8, !dbg !6606
  br i1 %9, label %10, label %17, !dbg !6607

10:                                               ; preds = %6
  %11 = load %struct.soc_port_pin*, %struct.soc_port_pin** %3, align 4, !dbg !6608
  %12 = load i32, i32* %5, align 4, !dbg !6610
  %13 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %11, i32 %12, !dbg !6608
  call void @soc_port_configure(%struct.soc_port_pin* noundef %13) #10, !dbg !6611
  br label %14, !dbg !6612

14:                                               ; preds = %10
  %15 = load i32, i32* %5, align 4, !dbg !6613
  %16 = add nsw i32 %15, 1, !dbg !6613
  store i32 %16, i32* %5, align 4, !dbg !6613
  br label %6, !dbg !6614, !llvm.loop !6615

17:                                               ; preds = %6
  ret void, !dbg !6617
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atmel_samd_init(%struct.device.73* noundef %0) #1 !dbg !6618 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !6619, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6621, metadata !DIExpression()), !dbg !6622
  %6 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !6623
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6624, metadata !DIExpression()) #9, !dbg !6629
  %7 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !6631, !srcloc !6632
  store i32 %7, i32* %3, align 4, !dbg !6631
  %8 = load i32, i32* %3, align 4, !dbg !6633
  store i32 %8, i32* %5, align 4, !dbg !6634
  call void @flash_waitstates_init() #10, !dbg !6635
  call void @osc8m_init() #10, !dbg !6636
  call void @osc32k_init() #10, !dbg !6637
  call void @xosc_init() #10, !dbg !6638
  call void @xosc32k_init() #10, !dbg !6639
  call void @dfll_init() #10, !dbg !6640
  call void @gclks_init() #10, !dbg !6641
  call void @dividers_init() #10, !dbg !6642
  %9 = load i32, i32* %5, align 4, !dbg !6643
  store i32 %9, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6644, metadata !DIExpression()) #9, !dbg !6648
  %10 = load i32, i32* %2, align 4, !dbg !6650
  %11 = icmp ne i32 %10, 0, !dbg !6652
  br i1 %11, label %12, label %13, !dbg !6653

12:                                               ; preds = %1
  br label %14, !dbg !6654

13:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6656, !srcloc !6657
  br label %14, !dbg !6658

14:                                               ; preds = %12, %13
  ret i32 0, !dbg !6659
}

; Function Attrs: noinline nounwind optnone
define internal void @flash_waitstates_init() #1 !dbg !6660 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6661
  %2 = and i32 %1, -31, !dbg !6661
  %3 = or i32 %2, 2, !dbg !6661
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6661
  ret void, !dbg !6662
}

; Function Attrs: noinline nounwind optnone
define internal void @osc8m_init() #1 !dbg !6663 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6664
  %2 = and i32 %1, -769, !dbg !6664
  %3 = or i32 %2, 0, !dbg !6664
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6664
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6665
  %5 = and i32 %4, -129, !dbg !6665
  %6 = or i32 %5, 0, !dbg !6665
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6665
  ret void, !dbg !6666
}

; Function Attrs: noinline nounwind optnone
define internal void @osc32k_init() #1 !dbg !6667 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6668, metadata !DIExpression()), !dbg !6669
  %3 = load i32, i32* inttoptr (i32 8413220 to i32*), align 4, !dbg !6670
  store i32 %3, i32* %1, align 4, !dbg !6669
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6671, metadata !DIExpression()), !dbg !6672
  %4 = load i32, i32* %1, align 4, !dbg !6673
  %5 = and i32 %4, 8128, !dbg !6674
  %6 = lshr i32 %5, 6, !dbg !6675
  store i32 %6, i32* %2, align 4, !dbg !6672
  %7 = load i32, i32* %2, align 4, !dbg !6676
  %8 = shl i32 %7, 16, !dbg !6676
  %9 = and i32 8323072, %8, !dbg !6676
  %10 = or i32 %9, 1536, !dbg !6677
  %11 = or i32 %10, 4, !dbg !6678
  %12 = or i32 %11, 2, !dbg !6679
  store volatile i32 %12, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 8, i32 0, i32 0), align 4, !dbg !6680
  br label %13, !dbg !6681

13:                                               ; preds = %19, %0
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6682
  %15 = lshr i32 %14, 2, !dbg !6682
  %16 = and i32 %15, 1, !dbg !6682
  %17 = icmp ne i32 %16, 0, !dbg !6683
  %18 = xor i1 %17, true, !dbg !6683
  br i1 %18, label %19, label %20, !dbg !6681

19:                                               ; preds = %13
  br label %13, !dbg !6681, !llvm.loop !6684

20:                                               ; preds = %13
  ret void, !dbg !6686
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc_init() #1 !dbg !6687 {
  ret void, !dbg !6688
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc32k_init() #1 !dbg !6689 {
  store volatile i16 1548, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6690
  %1 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6691
  %2 = and i16 %1, -3, !dbg !6691
  %3 = or i16 %2, 2, !dbg !6691
  store volatile i16 %3, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6691
  br label %4, !dbg !6692

4:                                                ; preds = %10, %0
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6693
  %6 = lshr i32 %5, 1, !dbg !6693
  %7 = and i32 %6, 1, !dbg !6693
  %8 = icmp ne i32 %7, 0, !dbg !6694
  %9 = xor i1 %8, true, !dbg !6694
  br i1 %9, label %10, label %11, !dbg !6692

10:                                               ; preds = %4
  br label %4, !dbg !6692, !llvm.loop !6695

11:                                               ; preds = %4
  ret void, !dbg !6697
}

; Function Attrs: noinline nounwind optnone
define internal void @dfll_init() #1 !dbg !6698 {
  %1 = alloca i32, align 4
  store volatile i32 1, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6699
  call void @wait_gclk_synchronization() #10, !dbg !6700
  store volatile i32 66817, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6701
  call void @wait_gclk_synchronization() #10, !dbg !6702
  store volatile i16 16640, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !6703
  call void @wait_gclk_synchronization() #10, !dbg !6704
  store volatile i16 2, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6705
  br label %2, !dbg !6706

2:                                                ; preds = %8, %0
  %3 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6707
  %4 = lshr i32 %3, 4, !dbg !6707
  %5 = and i32 %4, 1, !dbg !6707
  %6 = icmp ne i32 %5, 0, !dbg !6708
  %7 = xor i1 %6, true, !dbg !6708
  br i1 %7, label %8, label %9, !dbg !6706

8:                                                ; preds = %2
  br label %2, !dbg !6706, !llvm.loop !6709

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6711, metadata !DIExpression()), !dbg !6712
  store i32 1465, i32* %1, align 4, !dbg !6712
  %10 = load i32, i32* %1, align 4, !dbg !6713
  %11 = shl i32 %10, 0, !dbg !6713
  %12 = and i32 65535, %11, !dbg !6713
  %13 = or i32 2113863680, %12, !dbg !6714
  store volatile i32 %13, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 15, i32 0, i32 0), align 4, !dbg !6715
  br label %14, !dbg !6716

14:                                               ; preds = %20, %9
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6717
  %16 = lshr i32 %15, 4, !dbg !6717
  %17 = and i32 %16, 1, !dbg !6717
  %18 = icmp ne i32 %17, 0, !dbg !6718
  %19 = xor i1 %18, true, !dbg !6718
  br i1 %19, label %20, label %21, !dbg !6716

20:                                               ; preds = %14
  br label %14, !dbg !6716, !llvm.loop !6719

21:                                               ; preds = %14
  %22 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6721
  %23 = zext i16 %22 to i32, !dbg !6721
  %24 = or i32 %23, 2564, !dbg !6721
  %25 = trunc i32 %24 to i16, !dbg !6721
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6721
  br label %26, !dbg !6722

26:                                               ; preds = %32, %21
  %27 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6723
  %28 = lshr i32 %27, 4, !dbg !6723
  %29 = and i32 %28, 1, !dbg !6723
  %30 = icmp ne i32 %29, 0, !dbg !6724
  %31 = xor i1 %30, true, !dbg !6724
  br i1 %31, label %32, label %33, !dbg !6722

32:                                               ; preds = %26
  br label %26, !dbg !6722, !llvm.loop !6725

33:                                               ; preds = %26
  %34 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6727
  %35 = and i16 %34, -3, !dbg !6727
  %36 = or i16 %35, 2, !dbg !6727
  store volatile i16 %36, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6727
  br label %37, !dbg !6728

37:                                               ; preds = %50, %33
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6729
  %39 = lshr i32 %38, 7, !dbg !6729
  %40 = and i32 %39, 1, !dbg !6729
  %41 = icmp ne i32 %40, 0, !dbg !6730
  br i1 %41, label %42, label %48, !dbg !6731

42:                                               ; preds = %37
  %43 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6732
  %44 = lshr i32 %43, 6, !dbg !6732
  %45 = and i32 %44, 1, !dbg !6732
  %46 = icmp ne i32 %45, 0, !dbg !6733
  %47 = xor i1 %46, true, !dbg !6733
  br label %48, !dbg !6731

48:                                               ; preds = %42, %37
  %49 = phi i1 [ true, %37 ], [ %47, %42 ]
  br i1 %49, label %50, label %51, !dbg !6728

50:                                               ; preds = %48
  br label %37, !dbg !6728, !llvm.loop !6734

51:                                               ; preds = %48
  br label %52, !dbg !6736

52:                                               ; preds = %58, %51
  %53 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6737
  %54 = lshr i32 %53, 4, !dbg !6737
  %55 = and i32 %54, 1, !dbg !6737
  %56 = icmp ne i32 %55, 0, !dbg !6738
  %57 = xor i1 %56, true, !dbg !6738
  br i1 %57, label %58, label %59, !dbg !6736

58:                                               ; preds = %52
  br label %52, !dbg !6736, !llvm.loop !6739

59:                                               ; preds = %52
  ret void, !dbg !6741
}

; Function Attrs: noinline nounwind optnone
define internal void @gclks_init() #1 !dbg !6742 {
  store volatile i32 0, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6743
  call void @wait_gclk_synchronization() #10, !dbg !6744
  store volatile i32 198400, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6745
  call void @wait_gclk_synchronization() #10, !dbg !6746
  store volatile i32 67075, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6747
  call void @wait_gclk_synchronization() #10, !dbg !6748
  store volatile i32 7938, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6749
  call void @wait_gclk_synchronization() #10, !dbg !6750
  store volatile i32 66562, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6751
  call void @wait_gclk_synchronization() #10, !dbg !6752
  ret void, !dbg !6753
}

; Function Attrs: noinline nounwind optnone
define internal void @dividers_init() #1 !dbg !6754 {
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6755
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 4, i32 0, i32 0), align 1, !dbg !6756
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 5, i32 0, i32 0), align 2, !dbg !6757
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 6, i32 0, i32 0), align 1, !dbg !6758
  ret void, !dbg !6759
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_gclk_synchronization() #1 !dbg !6760 {
  br label %1, !dbg !6761

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !6762
  %3 = lshr i8 %2, 7, !dbg !6762
  %4 = icmp ne i8 %3, 0, !dbg !6761
  br i1 %4, label %5, label %6, !dbg !6761

5:                                                ; preds = %1
  br label %1, !dbg !6761, !llvm.loop !6763

6:                                                ; preds = %1
  ret void, !dbg !6765
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !6766 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6814, metadata !DIExpression()), !dbg !6815
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !6816, metadata !DIExpression()), !dbg !6817
  %5 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6818
  %6 = icmp ne %struct.__esf* %5, null, !dbg !6820
  br i1 %6, label %7, label %9, !dbg !6821

7:                                                ; preds = %2
  %8 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6822
  call void @esf_dump(%struct.__esf* noundef %8) #10, !dbg !6824
  br label %9, !dbg !6825

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4, !dbg !6826
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6827
  call void @z_fatal_error(i32 noundef %10, %struct.__esf* noundef %11) #10, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: noinline nounwind optnone
define internal void @esf_dump(%struct.__esf* noundef %0) #1 !dbg !6830 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !6833, metadata !DIExpression()), !dbg !6834
  br label %19, !dbg !6835

19:                                               ; preds = %1
  br label %20, !dbg !6836

20:                                               ; preds = %19
  br label %21, !dbg !6840

21:                                               ; preds = %20
  br label %22, !dbg !6841

22:                                               ; preds = %21
  br label %23, !dbg !6845

23:                                               ; preds = %22
  br label %24, !dbg !6846

24:                                               ; preds = %23
  br label %25, !dbg !6850

25:                                               ; preds = %24
  br label %26, !dbg !6851

26:                                               ; preds = %25
  ret void, !dbg !6855
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved.10* noundef %1) #1 !dbg !6856 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca %struct._callee_saved.10*, align 4
  %5 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6872, metadata !DIExpression()), !dbg !6873
  store %struct._callee_saved.10* %1, %struct._callee_saved.10** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %4, metadata !6874, metadata !DIExpression()), !dbg !6875
  %6 = load %struct._callee_saved.10*, %struct._callee_saved.10** %4, align 4, !dbg !6876
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6877, metadata !DIExpression()), !dbg !6878
  %7 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6879
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, !dbg !6880
  %9 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %8, i32 0, i32 0, !dbg !6881
  %10 = bitcast %union.anon.68* %9 to i32*, !dbg !6881
  %11 = load i32, i32* %10, align 4, !dbg !6881
  store i32 %11, i32* %5, align 4, !dbg !6878
  %12 = load i32, i32* %5, align 4, !dbg !6882
  %13 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6883
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef %13) #10, !dbg !6884
  ret void, !dbg !6885
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @arch_syscall_oops(i8* noundef %0) #5 !dbg !6886 {
  %2 = alloca i8*, align 4
  %3 = alloca i32*, align 4
  %4 = alloca %struct.__esf, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6889, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata i32** %3, metadata !6891, metadata !DIExpression()), !dbg !6892
  %5 = load i8*, i8** %2, align 4, !dbg !6893
  %6 = bitcast i8* %5 to i32*, !dbg !6893
  store i32* %6, i32** %3, align 4, !dbg !6892
  call void @llvm.dbg.declare(metadata %struct.__esf* %4, metadata !6894, metadata !DIExpression()), !dbg !6895
  %7 = bitcast %struct.__esf* %4 to i8*, !dbg !6895
  call void @llvm.memset.p0i8.i32(i8* align 4 %7, i8 0, i32 32, i1 false), !dbg !6895
  %8 = load i32*, i32** %3, align 4, !dbg !6896
  %9 = getelementptr inbounds i32, i32* %8, i32 3, !dbg !6896
  %10 = load i32, i32* %9, align 4, !dbg !6896
  %11 = getelementptr inbounds %struct.__esf, %struct.__esf* %4, i32 0, i32 0, !dbg !6897
  %12 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %11, i32 0, i32 6, !dbg !6898
  %13 = bitcast %union.anon.68* %12 to i32*, !dbg !6898
  store i32 %10, i32* %13, align 4, !dbg !6899
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef %4) #10, !dbg !6900
  unreachable, !dbg !6901
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_enable(i32 noundef %0) #1 !dbg !6902 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6904, metadata !DIExpression()), !dbg !6905
  %3 = load i32, i32* %2, align 4, !dbg !6906
  call void @__NVIC_EnableIRQ(i32 noundef %3) #10, !dbg !6907
  ret void, !dbg !6908
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_EnableIRQ(i32 noundef %0) #1 !dbg !6909 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6912, metadata !DIExpression()), !dbg !6913
  %3 = load i32, i32* %2, align 4, !dbg !6914
  %4 = icmp sge i32 %3, 0, !dbg !6916
  br i1 %4, label %5, label %9, !dbg !6917

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6918, !srcloc !6920
  %6 = load i32, i32* %2, align 4, !dbg !6921
  %7 = and i32 %6, 31, !dbg !6922
  %8 = shl i32 1, %7, !dbg !6923
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0, i32 0), align 4, !dbg !6924
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6925, !srcloc !6926
  br label %9, !dbg !6927

9:                                                ; preds = %5, %1
  ret void, !dbg !6928
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_disable(i32 noundef %0) #1 !dbg !6929 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6930, metadata !DIExpression()), !dbg !6931
  %3 = load i32, i32* %2, align 4, !dbg !6932
  call void @__NVIC_DisableIRQ(i32 noundef %3) #10, !dbg !6933
  ret void, !dbg !6934
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_DisableIRQ(i32 noundef %0) #1 !dbg !6935 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6936, metadata !DIExpression()), !dbg !6937
  %3 = load i32, i32* %2, align 4, !dbg !6938
  %4 = icmp sge i32 %3, 0, !dbg !6940
  br i1 %4, label %5, label %9, !dbg !6941

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !6942
  %7 = and i32 %6, 31, !dbg !6944
  %8 = shl i32 1, %7, !dbg !6945
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 2, i32 0), align 4, !dbg !6946
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6947, !srcloc !6951
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6952, !srcloc !6955
  br label %9, !dbg !6956

9:                                                ; preds = %5, %1
  ret void, !dbg !6957
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) #1 !dbg !6958 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6961, metadata !DIExpression()), !dbg !6962
  %3 = load i32, i32* %2, align 4, !dbg !6963
  %4 = udiv i32 %3, 32, !dbg !6963
  %5 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %4, !dbg !6964
  %6 = load volatile i32, i32* %5, align 4, !dbg !6964
  %7 = load i32, i32* %2, align 4, !dbg !6965
  %8 = urem i32 %7, 32, !dbg !6965
  %9 = shl i32 1, %8, !dbg !6965
  %10 = and i32 %6, %9, !dbg !6966
  ret i32 %10, !dbg !6967
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !6968 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6971, metadata !DIExpression()), !dbg !6972
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6973, metadata !DIExpression()), !dbg !6974
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6975, metadata !DIExpression()), !dbg !6976
  %7 = load i32, i32* %5, align 4, !dbg !6977
  %8 = add i32 %7, 0, !dbg !6977
  store i32 %8, i32* %5, align 4, !dbg !6977
  %9 = load i32, i32* %4, align 4, !dbg !6980
  %10 = load i32, i32* %5, align 4, !dbg !6981
  call void @__NVIC_SetPriority(i32 noundef %9, i32 noundef %10) #10, !dbg !6982
  ret void, !dbg !6983
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #1 !dbg !6984 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6987, metadata !DIExpression()), !dbg !6988
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6989, metadata !DIExpression()), !dbg !6990
  %5 = load i32, i32* %3, align 4, !dbg !6991
  %6 = icmp sge i32 %5, 0, !dbg !6993
  br i1 %6, label %7, label %29, !dbg !6994

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !6995
  %9 = lshr i32 %8, 2, !dbg !6995
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !6997
  %11 = load volatile i32, i32* %10, align 4, !dbg !6997
  %12 = load i32, i32* %3, align 4, !dbg !6998
  %13 = and i32 %12, 3, !dbg !6998
  %14 = mul i32 %13, 8, !dbg !6998
  %15 = shl i32 255, %14, !dbg !6999
  %16 = xor i32 %15, -1, !dbg !7000
  %17 = and i32 %11, %16, !dbg !7001
  %18 = load i32, i32* %4, align 4, !dbg !7002
  %19 = shl i32 %18, 6, !dbg !7003
  %20 = and i32 %19, 255, !dbg !7004
  %21 = load i32, i32* %3, align 4, !dbg !7005
  %22 = and i32 %21, 3, !dbg !7005
  %23 = mul i32 %22, 8, !dbg !7005
  %24 = shl i32 %20, %23, !dbg !7006
  %25 = or i32 %17, %24, !dbg !7007
  %26 = load i32, i32* %3, align 4, !dbg !7008
  %27 = lshr i32 %26, 2, !dbg !7008
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !7009
  store volatile i32 %25, i32* %28, align 4, !dbg !7010
  br label %55, !dbg !7011

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !7012
  %31 = and i32 %30, 15, !dbg !7012
  %32 = sub i32 %31, 8, !dbg !7012
  %33 = lshr i32 %32, 2, !dbg !7012
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !7014
  %35 = load volatile i32, i32* %34, align 4, !dbg !7014
  %36 = load i32, i32* %3, align 4, !dbg !7015
  %37 = and i32 %36, 3, !dbg !7015
  %38 = mul i32 %37, 8, !dbg !7015
  %39 = shl i32 255, %38, !dbg !7016
  %40 = xor i32 %39, -1, !dbg !7017
  %41 = and i32 %35, %40, !dbg !7018
  %42 = load i32, i32* %4, align 4, !dbg !7019
  %43 = shl i32 %42, 6, !dbg !7020
  %44 = and i32 %43, 255, !dbg !7021
  %45 = load i32, i32* %3, align 4, !dbg !7022
  %46 = and i32 %45, 3, !dbg !7022
  %47 = mul i32 %46, 8, !dbg !7022
  %48 = shl i32 %44, %47, !dbg !7023
  %49 = or i32 %41, %48, !dbg !7024
  %50 = load i32, i32* %3, align 4, !dbg !7025
  %51 = and i32 %50, 15, !dbg !7025
  %52 = sub i32 %51, 8, !dbg !7025
  %53 = lshr i32 %52, 2, !dbg !7025
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !7026
  store volatile i32 %49, i32* %54, align 4, !dbg !7027
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !7028
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_irq_spurious(i8* noundef %0) #1 !dbg !7029 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7030, metadata !DIExpression()), !dbg !7031
  %3 = load i8*, i8** %2, align 4, !dbg !7032
  call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #10, !dbg !7033
  ret void, !dbg !7034
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_nmi() #1 !dbg !7035 {
  call void @z_SysNmiOnReset() #10, !dbg !7037
  call void @z_arm_int_exit() #10, !dbg !7038
  ret void, !dbg !7039
}

declare dso_local void @z_SysNmiOnReset() #0

declare dso_local void @z_arm_int_exit() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_prep_c() #1 !dbg !7040 {
  call void @relocate_vector_table() #10, !dbg !7042
  call void @z_bss_zero() #10, !dbg !7043
  call void @z_data_copy() #10, !dbg !7044
  call void @z_arm_interrupt_init() #10, !dbg !7045
  call void @z_cstart() #12, !dbg !7046
  unreachable, !dbg !7046
}

; Function Attrs: noinline nounwind optnone
define internal void @relocate_vector_table() #1 !dbg !7047 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -256), i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 2), align 4, !dbg !7048
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !7049, !srcloc !7052
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !7053, !srcloc !7056
  ret void, !dbg !7057
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_swap(i32 noundef %0) #1 !dbg !7058 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7060, metadata !DIExpression()), !dbg !7061
  %4 = load i32, i32* %3, align 4, !dbg !7062
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7063
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 6, !dbg !7064
  %7 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %6, i32 0, i32 0, !dbg !7065
  store i32 %4, i32* %7, align 8, !dbg !7066
  %8 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7067
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7068
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 6, !dbg !7069
  %11 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %10, i32 0, i32 1, !dbg !7070
  store i32 %8, i32* %11, align 4, !dbg !7071
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7072
  %13 = or i32 %12, 268435456, !dbg !7072
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7072
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7073, metadata !DIExpression()) #9, !dbg !7075
  %14 = load i32, i32* %2, align 4, !dbg !7077
  %15 = icmp ne i32 %14, 0, !dbg !7079
  br i1 %15, label %16, label %17, !dbg !7080

16:                                               ; preds = %1
  br label %18, !dbg !7081

17:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7083, !srcloc !7084
  br label %18, !dbg !7085

18:                                               ; preds = %16, %17
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7086
  %20 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %19, i32 0, i32 6, !dbg !7087
  %21 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %20, i32 0, i32 1, !dbg !7088
  %22 = load i32, i32* %21, align 4, !dbg !7088
  ret i32 %22, !dbg !7089
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #1 !dbg !7090 {
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.z_thread_stack_element*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca void (i8*, i8*, i8*)*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %struct.__basic_sf*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !7193, metadata !DIExpression()), !dbg !7194
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %9, metadata !7195, metadata !DIExpression()), !dbg !7196
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !7197, metadata !DIExpression()), !dbg !7198
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %11, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %11, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i8* %4, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !7201, metadata !DIExpression()), !dbg !7202
  store i8* %5, i8** %13, align 4
  call void @llvm.dbg.declare(metadata i8** %13, metadata !7203, metadata !DIExpression()), !dbg !7204
  store i8* %6, i8** %14, align 4
  call void @llvm.dbg.declare(metadata i8** %14, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.declare(metadata %struct.__basic_sf** %15, metadata !7207, metadata !DIExpression()), !dbg !7208
  %16 = load i8*, i8** %10, align 4, !dbg !7209
  %17 = getelementptr inbounds i8, i8* %16, i32 -32, !dbg !7209
  %18 = bitcast i8* %17 to %struct.__basic_sf*, !dbg !7209
  store %struct.__basic_sf* %18, %struct.__basic_sf** %15, align 4, !dbg !7210
  %19 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7211
  %20 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %19, i32 0, i32 6, !dbg !7212
  %21 = bitcast %union.anon.68* %20 to i32*, !dbg !7212
  store i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32* %21, align 4, !dbg !7213
  %22 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7214
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 6, !dbg !7215
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !7215
  %25 = load i32, i32* %24, align 4, !dbg !7216
  %26 = and i32 %25, -2, !dbg !7216
  store i32 %26, i32* %24, align 4, !dbg !7216
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 4, !dbg !7217
  %28 = ptrtoint void (i8*, i8*, i8*)* %27 to i32, !dbg !7218
  %29 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7219
  %30 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %29, i32 0, i32 0, !dbg !7220
  %31 = bitcast %union.anon.68* %30 to i32*, !dbg !7220
  store i32 %28, i32* %31, align 4, !dbg !7221
  %32 = load i8*, i8** %12, align 4, !dbg !7222
  %33 = ptrtoint i8* %32 to i32, !dbg !7223
  %34 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7224
  %35 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %34, i32 0, i32 1, !dbg !7225
  %36 = bitcast %union.anon.68* %35 to i32*, !dbg !7225
  store i32 %33, i32* %36, align 4, !dbg !7226
  %37 = load i8*, i8** %13, align 4, !dbg !7227
  %38 = ptrtoint i8* %37 to i32, !dbg !7228
  %39 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7229
  %40 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %39, i32 0, i32 2, !dbg !7230
  %41 = bitcast %union.anon.68* %40 to i32*, !dbg !7230
  store i32 %38, i32* %41, align 4, !dbg !7231
  %42 = load i8*, i8** %14, align 4, !dbg !7232
  %43 = ptrtoint i8* %42 to i32, !dbg !7233
  %44 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7234
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 3, !dbg !7235
  %46 = bitcast %union.anon.68* %45 to i32*, !dbg !7235
  store i32 %43, i32* %46, align 4, !dbg !7236
  %47 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7237
  %48 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %47, i32 0, i32 7, !dbg !7238
  store i32 16777216, i32* %48, align 4, !dbg !7239
  %49 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !7240
  %50 = ptrtoint %struct.__basic_sf* %49 to i32, !dbg !7241
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !7242
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 1, !dbg !7243
  %53 = getelementptr inbounds %struct._callee_saved.10, %struct._callee_saved.10* %52, i32 0, i32 8, !dbg !7244
  store i32 %50, i32* %53, align 8, !dbg !7245
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !7246
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 6, !dbg !7247
  %56 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %55, i32 0, i32 0, !dbg !7248
  store i32 0, i32* %56, align 8, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_switch_to_main_thread(%struct.k_thread.203* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) #1 !dbg !7251 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca void (i8*, i8*, i8*)*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !7254, metadata !DIExpression()), !dbg !7255
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7256, metadata !DIExpression()), !dbg !7257
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @z_arm_prepare_switch_to_main() #10, !dbg !7260
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !7261
  store %struct.k_thread.203* %7, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7262
  %8 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 4, !dbg !7263
  %9 = load i8*, i8** %5, align 4, !dbg !7264
  call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie i\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %8, i8* %9) #9, !dbg !7265, !srcloc !7266
  unreachable, !dbg !7267
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_prepare_switch_to_main() #1 !dbg !7268 {
  ret void, !dbg !7269
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved.10* noundef %3) #1 !dbg !7270 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._callee_saved.10*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.__esf*, align 4
  %15 = alloca %struct.__esf, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7287, metadata !DIExpression()), !dbg !7288
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7289, metadata !DIExpression()), !dbg !7290
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7291, metadata !DIExpression()), !dbg !7292
  store %struct._callee_saved.10* %3, %struct._callee_saved.10** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %9, metadata !7293, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7295, metadata !DIExpression()), !dbg !7296
  store i32 0, i32* %10, align 4, !dbg !7296
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7297, metadata !DIExpression()), !dbg !7298
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7299
  %17 = and i32 %16, 511, !dbg !7300
  store i32 %17, i32* %11, align 4, !dbg !7298
  call void @llvm.dbg.declare(metadata i8* %12, metadata !7301, metadata !DIExpression()), !dbg !7302
  call void @llvm.dbg.declare(metadata i8* %13, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.declare(metadata %struct.__esf** %14, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata %struct.__esf* %15, metadata !7307, metadata !DIExpression()), !dbg !7308
  store i32 0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7309, metadata !DIExpression()) #9, !dbg !7311
  %18 = load i32, i32* %5, align 4, !dbg !7313
  %19 = icmp ne i32 %18, 0, !dbg !7315
  br i1 %19, label %20, label %21, !dbg !7316

20:                                               ; preds = %4
  br label %22, !dbg !7317

21:                                               ; preds = %4
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7319, !srcloc !7320
  br label %22, !dbg !7321

22:                                               ; preds = %20, %21
  %23 = load i32, i32* %6, align 4, !dbg !7322
  %24 = load i32, i32* %7, align 4, !dbg !7323
  %25 = load i32, i32* %8, align 4, !dbg !7324
  %26 = call %struct.__esf* @get_esf(i32 noundef %23, i32 noundef %24, i32 noundef %25, i8* noundef %13) #10, !dbg !7325
  store %struct.__esf* %26, %struct.__esf** %14, align 4, !dbg !7326
  %27 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7327
  %28 = load i32, i32* %11, align 4, !dbg !7328
  %29 = call i32 @fault_handle(%struct.__esf* noundef %27, i32 noundef %28, i8* noundef %12) #10, !dbg !7329
  store i32 %29, i32* %10, align 4, !dbg !7330
  %30 = load i8, i8* %12, align 1, !dbg !7331
  %31 = trunc i8 %30 to i1, !dbg !7331
  br i1 %31, label %32, label %33, !dbg !7333

32:                                               ; preds = %22
  br label %60, !dbg !7334

33:                                               ; preds = %22
  %34 = bitcast %struct.__esf* %15 to i8*, !dbg !7336
  %35 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7337
  %36 = bitcast %struct.__esf* %35 to i8*, !dbg !7337
  %37 = call i8* @memcpy(i8* noundef %34, i8* noundef %36, i32 noundef 32) #10, !dbg !7338
  %38 = load %struct._callee_saved.10*, %struct._callee_saved.10** %9, align 4, !dbg !7339
  %39 = load i8, i8* %13, align 1, !dbg !7340
  %40 = trunc i8 %39 to i1, !dbg !7340
  br i1 %40, label %41, label %53, !dbg !7342

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7343
  %43 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %42, i32 0, i32 7, !dbg !7346
  %44 = load i32, i32* %43, align 4, !dbg !7346
  %45 = and i32 %44, 511, !dbg !7347
  %46 = icmp eq i32 %45, 0, !dbg !7348
  br i1 %46, label %47, label %52, !dbg !7349

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7350
  %49 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %48, i32 0, i32 7, !dbg !7352
  %50 = load i32, i32* %49, align 4, !dbg !7353
  %51 = or i32 %50, 511, !dbg !7353
  store i32 %51, i32* %49, align 4, !dbg !7353
  br label %52, !dbg !7354

52:                                               ; preds = %47, %41
  br label %58, !dbg !7355

53:                                               ; preds = %33
  %54 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7356
  %55 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %54, i32 0, i32 7, !dbg !7358
  %56 = load i32, i32* %55, align 4, !dbg !7359
  %57 = and i32 %56, -512, !dbg !7359
  store i32 %57, i32* %55, align 4, !dbg !7359
  br label %58

58:                                               ; preds = %53, %52
  %59 = load i32, i32* %10, align 4, !dbg !7360
  call void @z_arm_fatal_error(i32 noundef %59, %struct.__esf* noundef %15) #10, !dbg !7361
  br label %60, !dbg !7362

60:                                               ; preds = %58, %32
  ret void, !dbg !7362
}

; Function Attrs: noinline nounwind optnone
define internal %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3) #1 !dbg !7363 {
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.__esf*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7367, metadata !DIExpression()), !dbg !7368
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7369, metadata !DIExpression()), !dbg !7370
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7373, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7375, metadata !DIExpression()), !dbg !7376
  store i8 0, i8* %10, align 1, !dbg !7376
  call void @llvm.dbg.declare(metadata %struct.__esf** %11, metadata !7377, metadata !DIExpression()), !dbg !7378
  store %struct.__esf* null, %struct.__esf** %11, align 4, !dbg !7378
  %16 = load i8*, i8** %9, align 4, !dbg !7379
  store i8 0, i8* %16, align 1, !dbg !7380
  %17 = load i32, i32* %8, align 4, !dbg !7381
  %18 = and i32 %17, -16777216, !dbg !7383
  %19 = icmp ne i32 %18, -16777216, !dbg !7384
  br i1 %19, label %20, label %21, !dbg !7385

20:                                               ; preds = %4
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7386
  br label %49, !dbg !7386

21:                                               ; preds = %4
  %22 = load i32, i32* %8, align 4, !dbg !7388
  %23 = and i32 %22, 8, !dbg !7390
  %24 = icmp ne i32 %23, 0, !dbg !7390
  br i1 %24, label %25, label %32, !dbg !7391

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !7392
  %27 = and i32 %26, 4, !dbg !7393
  %28 = icmp ne i32 %27, 0, !dbg !7393
  br i1 %28, label %32, label %29, !dbg !7394

29:                                               ; preds = %25
  br label %30, !dbg !7395

30:                                               ; preds = %29
  br label %31, !dbg !7397

31:                                               ; preds = %30
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7401
  br label %49, !dbg !7401

32:                                               ; preds = %25, %21
  %33 = load i8, i8* %10, align 1, !dbg !7402
  %34 = trunc i8 %33 to i1, !dbg !7402
  br i1 %34, label %47, label %35, !dbg !7404

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !7405
  %37 = and i32 %36, 8, !dbg !7408
  %38 = icmp ne i32 %37, 0, !dbg !7408
  br i1 %38, label %39, label %42, !dbg !7409

39:                                               ; preds = %35
  %40 = load i32, i32* %7, align 4, !dbg !7410
  %41 = inttoptr i32 %40 to %struct.__esf*, !dbg !7412
  store %struct.__esf* %41, %struct.__esf** %11, align 4, !dbg !7413
  br label %46, !dbg !7414

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !7415
  %44 = inttoptr i32 %43 to %struct.__esf*, !dbg !7417
  store %struct.__esf* %44, %struct.__esf** %11, align 4, !dbg !7418
  %45 = load i8*, i8** %9, align 4, !dbg !7419
  store i8 1, i8* %45, align 1, !dbg !7420
  br label %46

46:                                               ; preds = %42, %39
  br label %47, !dbg !7421

47:                                               ; preds = %46, %32
  %48 = load %struct.__esf*, %struct.__esf** %11, align 4, !dbg !7422
  store %struct.__esf* %48, %struct.__esf** %5, align 4, !dbg !7423
  br label %49, !dbg !7423

49:                                               ; preds = %47, %31, %20
  %50 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !7424
  ret %struct.__esf* %50, !dbg !7424
}

; Function Attrs: noinline nounwind optnone
define internal i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !7425 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7430, metadata !DIExpression()), !dbg !7431
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7434, metadata !DIExpression()), !dbg !7435
  store i32 0, i32* %7, align 4, !dbg !7435
  %8 = load i8*, i8** %6, align 4, !dbg !7436
  store i8 0, i8* %8, align 1, !dbg !7437
  %9 = load i32, i32* %5, align 4, !dbg !7438
  switch i32 %9, label %14 [
    i32 3, label %10
  ], !dbg !7439

10:                                               ; preds = %3
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7440
  %12 = load i8*, i8** %6, align 4, !dbg !7442
  %13 = call i32 @hard_fault(%struct.__esf* noundef %11, i8* noundef %12) #10, !dbg !7443
  store i32 %13, i32* %7, align 4, !dbg !7444
  br label %17, !dbg !7445

14:                                               ; preds = %3
  %15 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7446
  %16 = load i32, i32* %5, align 4, !dbg !7447
  call void @reserved_exception(%struct.__esf* noundef %15, i32 noundef %16) #10, !dbg !7448
  br label %17, !dbg !7449

17:                                               ; preds = %14, %10
  %18 = load i8*, i8** %6, align 4, !dbg !7450
  %19 = load i8, i8* %18, align 1, !dbg !7452
  %20 = trunc i8 %19 to i1, !dbg !7452
  %21 = zext i1 %20 to i32, !dbg !7453
  %22 = icmp eq i32 %21, 0, !dbg !7454
  br i1 %22, label %23, label %26, !dbg !7455

23:                                               ; preds = %17
  %24 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7456
  %25 = load i32, i32* %5, align 4, !dbg !7458
  call void @fault_show(%struct.__esf* noundef %24, i32 noundef %25) #10, !dbg !7459
  br label %26, !dbg !7460

26:                                               ; preds = %23, %17
  %27 = load i32, i32* %7, align 4, !dbg !7461
  ret i32 %27, !dbg !7462
}

; Function Attrs: noinline nounwind optnone
define internal i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !7463 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7466, metadata !DIExpression()), !dbg !7467
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7470, metadata !DIExpression()), !dbg !7471
  store i32 0, i32* %5, align 4, !dbg !7471
  br label %14, !dbg !7472

14:                                               ; preds = %2
  br label %15, !dbg !7473

15:                                               ; preds = %14
  %16 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7477
  %17 = call zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %16) #10, !dbg !7479
  br i1 %17, label %18, label %26, !dbg !7480

18:                                               ; preds = %15
  br label %19, !dbg !7481

19:                                               ; preds = %18
  br label %20, !dbg !7483

20:                                               ; preds = %19
  %21 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7487
  %22 = getelementptr inbounds %struct.__esf, %struct.__esf* %21, i32 0, i32 0, !dbg !7488
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 0, !dbg !7489
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !7489
  %25 = load i32, i32* %24, align 4, !dbg !7489
  store i32 %25, i32* %5, align 4, !dbg !7490
  br label %26, !dbg !7491

26:                                               ; preds = %20, %15
  %27 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7492
  %28 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %27, i1 noundef zeroext true) #10, !dbg !7493
  %29 = load i8*, i8** %4, align 4, !dbg !7494
  %30 = zext i1 %28 to i8, !dbg !7495
  store i8 %30, i8* %29, align 1, !dbg !7495
  %31 = load i32, i32* %5, align 4, !dbg !7496
  ret i32 %31, !dbg !7497
}

; Function Attrs: noinline nounwind optnone
define internal void @reserved_exception(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7498 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7505, metadata !DIExpression()), !dbg !7506
  %9 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7507
  br label %10, !dbg !7508

10:                                               ; preds = %2
  br label %11, !dbg !7509

11:                                               ; preds = %10
  ret void, !dbg !7513
}

; Function Attrs: noinline nounwind optnone
define internal void @fault_show(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7514 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7515, metadata !DIExpression()), !dbg !7516
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7517, metadata !DIExpression()), !dbg !7518
  %5 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7519
  %6 = load i32, i32* %4, align 4, !dbg !7520
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #1 !dbg !7522 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i16*, align 4
  %5 = alloca i16, align 2
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7525, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.declare(metadata i16** %4, metadata !7527, metadata !DIExpression()), !dbg !7528
  %6 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7529
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %6, i32 0, i32 0, !dbg !7530
  %8 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %7, i32 0, i32 6, !dbg !7531
  %9 = bitcast %union.anon.68* %8 to i32*, !dbg !7531
  %10 = load i32, i32* %9, align 4, !dbg !7531
  %11 = inttoptr i32 %10 to i16*, !dbg !7532
  store i16* %11, i16** %4, align 4, !dbg !7528
  call void @llvm.dbg.declare(metadata i16* %5, metadata !7533, metadata !DIExpression()), !dbg !7534
  %12 = load i16*, i16** %4, align 4, !dbg !7535
  %13 = getelementptr inbounds i16, i16* %12, i32 -1, !dbg !7536
  %14 = load i16, i16* %13, align 2, !dbg !7537
  store i16 %14, i16* %5, align 2, !dbg !7534
  %15 = load i16, i16* %5, align 2, !dbg !7538
  %16 = zext i16 %15 to i32, !dbg !7538
  %17 = and i32 %16, 65280, !dbg !7540
  %18 = icmp eq i32 %17, 57088, !dbg !7541
  br i1 %18, label %19, label %25, !dbg !7542

19:                                               ; preds = %1
  %20 = load i16, i16* %5, align 2, !dbg !7543
  %21 = zext i16 %20 to i32, !dbg !7543
  %22 = and i32 %21, 255, !dbg !7544
  %23 = icmp eq i32 %22, 2, !dbg !7545
  br i1 %23, label %24, label %25, !dbg !7546

24:                                               ; preds = %19
  store i1 true, i1* %2, align 1, !dbg !7547
  br label %26, !dbg !7547

25:                                               ; preds = %19, %1
  store i1 false, i1* %2, align 1, !dbg !7549
  br label %26, !dbg !7549

26:                                               ; preds = %25, %24
  %27 = load i1, i1* %2, align 1, !dbg !7550
  ret i1 %27, !dbg !7550
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %0, i1 noundef zeroext %1) #1 !dbg !7551 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8, align 1
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7554, metadata !DIExpression()), !dbg !7555
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7556, metadata !DIExpression()), !dbg !7557
  ret i1 false, !dbg !7558
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault_init() #1 !dbg !7559 {
  ret void, !dbg !7560
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_interrupt_init() #1 !dbg !7561 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7563, metadata !DIExpression()), !dbg !7564
  store i32 0, i32* %1, align 4, !dbg !7564
  br label %2, !dbg !7565

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4, !dbg !7566
  %4 = icmp slt i32 %3, 28, !dbg !7569
  br i1 %4, label %5, label %10, !dbg !7570

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !7571
  call void @__NVIC_SetPriority.11(i32 noundef %6, i32 noundef 0) #10, !dbg !7573
  br label %7, !dbg !7574

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4, !dbg !7575
  %9 = add nsw i32 %8, 1, !dbg !7575
  store i32 %9, i32* %1, align 4, !dbg !7575
  br label %2, !dbg !7576, !llvm.loop !7577

10:                                               ; preds = %2
  ret void, !dbg !7579
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.11(i32 noundef %0, i32 noundef %1) #1 !dbg !7580 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7581, metadata !DIExpression()), !dbg !7582
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7583, metadata !DIExpression()), !dbg !7584
  %5 = load i32, i32* %3, align 4, !dbg !7585
  %6 = icmp sge i32 %5, 0, !dbg !7587
  br i1 %6, label %7, label %29, !dbg !7588

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !7589
  %9 = lshr i32 %8, 2, !dbg !7589
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !7591
  %11 = load volatile i32, i32* %10, align 4, !dbg !7591
  %12 = load i32, i32* %3, align 4, !dbg !7592
  %13 = and i32 %12, 3, !dbg !7592
  %14 = mul i32 %13, 8, !dbg !7592
  %15 = shl i32 255, %14, !dbg !7593
  %16 = xor i32 %15, -1, !dbg !7594
  %17 = and i32 %11, %16, !dbg !7595
  %18 = load i32, i32* %4, align 4, !dbg !7596
  %19 = shl i32 %18, 6, !dbg !7597
  %20 = and i32 %19, 255, !dbg !7598
  %21 = load i32, i32* %3, align 4, !dbg !7599
  %22 = and i32 %21, 3, !dbg !7599
  %23 = mul i32 %22, 8, !dbg !7599
  %24 = shl i32 %20, %23, !dbg !7600
  %25 = or i32 %17, %24, !dbg !7601
  %26 = load i32, i32* %3, align 4, !dbg !7602
  %27 = lshr i32 %26, 2, !dbg !7602
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !7603
  store volatile i32 %25, i32* %28, align 4, !dbg !7604
  br label %55, !dbg !7605

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !7606
  %31 = and i32 %30, 15, !dbg !7606
  %32 = sub i32 %31, 8, !dbg !7606
  %33 = lshr i32 %32, 2, !dbg !7606
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !7608
  %35 = load volatile i32, i32* %34, align 4, !dbg !7608
  %36 = load i32, i32* %3, align 4, !dbg !7609
  %37 = and i32 %36, 3, !dbg !7609
  %38 = mul i32 %37, 8, !dbg !7609
  %39 = shl i32 255, %38, !dbg !7610
  %40 = xor i32 %39, -1, !dbg !7611
  %41 = and i32 %35, %40, !dbg !7612
  %42 = load i32, i32* %4, align 4, !dbg !7613
  %43 = shl i32 %42, 6, !dbg !7614
  %44 = and i32 %43, 255, !dbg !7615
  %45 = load i32, i32* %3, align 4, !dbg !7616
  %46 = and i32 %45, 3, !dbg !7616
  %47 = mul i32 %46, 8, !dbg !7616
  %48 = shl i32 %44, %47, !dbg !7617
  %49 = or i32 %41, %48, !dbg !7618
  %50 = load i32, i32* %3, align 4, !dbg !7619
  %51 = and i32 %50, 15, !dbg !7619
  %52 = sub i32 %51, 8, !dbg !7619
  %53 = lshr i32 %52, 2, !dbg !7619
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !7620
  store volatile i32 %49, i32* %54, align 4, !dbg !7621
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !7623 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !7722, metadata !DIExpression()), !dbg !7723
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7724
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7726
  %6 = icmp eq %struct.k_thread.203* %4, %5, !dbg !7727
  br i1 %6, label %7, label %19, !dbg !7728

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7729, metadata !DIExpression()) #9, !dbg !7733
  %8 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !7740, !srcloc !7741
  store i32 %8, i32* %2, align 4, !dbg !7740
  %9 = load i32, i32* %2, align 4, !dbg !7742
  %10 = icmp ne i32 %9, 0, !dbg !7743
  %11 = zext i1 %10 to i64, !dbg !7743
  %12 = select i1 %10, i32 1, i32 0, !dbg !7743
  br i1 %10, label %13, label %18, !dbg !7744

13:                                               ; preds = %7
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7745
  %15 = or i32 %14, 268435456, !dbg !7745
  store volatile i32 %15, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7745
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7747
  %17 = and i32 %16, -32769, !dbg !7747
  store volatile i32 %17, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7747
  br label %18, !dbg !7748

18:                                               ; preds = %13, %7
  br label %19, !dbg !7749

19:                                               ; preds = %18, %1
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7750
  call void @z_thread_abort(%struct.k_thread.203* noundef %20) #10, !dbg !7751
  ret void, !dbg !7752
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcpy(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !7753 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7759, metadata !DIExpression()), !dbg !7760
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7763, metadata !DIExpression()), !dbg !7764
  %6 = load i8*, i8** %3, align 4, !dbg !7765
  store i8* %6, i8** %5, align 4, !dbg !7764
  br label %7, !dbg !7766

7:                                                ; preds = %12, %2
  %8 = load i8*, i8** %4, align 4, !dbg !7767
  %9 = load i8, i8* %8, align 1, !dbg !7768
  %10 = zext i8 %9 to i32, !dbg !7768
  %11 = icmp ne i32 %10, 0, !dbg !7769
  br i1 %11, label %12, label %20, !dbg !7766

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 4, !dbg !7770
  %14 = load i8, i8* %13, align 1, !dbg !7772
  %15 = load i8*, i8** %3, align 4, !dbg !7773
  store i8 %14, i8* %15, align 1, !dbg !7774
  %16 = load i8*, i8** %3, align 4, !dbg !7775
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7775
  store i8* %17, i8** %3, align 4, !dbg !7775
  %18 = load i8*, i8** %4, align 4, !dbg !7776
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7776
  store i8* %19, i8** %4, align 4, !dbg !7776
  br label %7, !dbg !7766, !llvm.loop !7777

20:                                               ; preds = %7
  %21 = load i8*, i8** %3, align 4, !dbg !7779
  store i8 0, i8* %21, align 1, !dbg !7780
  %22 = load i8*, i8** %5, align 4, !dbg !7781
  ret i8* %22, !dbg !7782
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7783 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7786, metadata !DIExpression()), !dbg !7787
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7788, metadata !DIExpression()), !dbg !7789
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7792, metadata !DIExpression()), !dbg !7793
  %8 = load i8*, i8** %4, align 4, !dbg !7794
  store i8* %8, i8** %7, align 4, !dbg !7793
  br label %9, !dbg !7795

9:                                                ; preds = %19, %3
  %10 = load i32, i32* %6, align 4, !dbg !7796
  %11 = icmp ugt i32 %10, 0, !dbg !7797
  br i1 %11, label %12, label %17, !dbg !7798

12:                                               ; preds = %9
  %13 = load i8*, i8** %5, align 4, !dbg !7799
  %14 = load i8, i8* %13, align 1, !dbg !7800
  %15 = zext i8 %14 to i32, !dbg !7800
  %16 = icmp ne i32 %15, 0, !dbg !7801
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i1 [ false, %9 ], [ %16, %12 ], !dbg !7802
  br i1 %18, label %19, label %29, !dbg !7795

19:                                               ; preds = %17
  %20 = load i8*, i8** %5, align 4, !dbg !7803
  %21 = load i8, i8* %20, align 1, !dbg !7805
  %22 = load i8*, i8** %4, align 4, !dbg !7806
  store i8 %21, i8* %22, align 1, !dbg !7807
  %23 = load i8*, i8** %5, align 4, !dbg !7808
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7808
  store i8* %24, i8** %5, align 4, !dbg !7808
  %25 = load i8*, i8** %4, align 4, !dbg !7809
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !7809
  store i8* %26, i8** %4, align 4, !dbg !7809
  %27 = load i32, i32* %6, align 4, !dbg !7810
  %28 = add i32 %27, -1, !dbg !7810
  store i32 %28, i32* %6, align 4, !dbg !7810
  br label %9, !dbg !7795, !llvm.loop !7811

29:                                               ; preds = %17
  br label %30, !dbg !7813

30:                                               ; preds = %33, %29
  %31 = load i32, i32* %6, align 4, !dbg !7814
  %32 = icmp ugt i32 %31, 0, !dbg !7815
  br i1 %32, label %33, label %39, !dbg !7813

33:                                               ; preds = %30
  %34 = load i8*, i8** %4, align 4, !dbg !7816
  store i8 0, i8* %34, align 1, !dbg !7818
  %35 = load i8*, i8** %4, align 4, !dbg !7819
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7819
  store i8* %36, i8** %4, align 4, !dbg !7819
  %37 = load i32, i32* %6, align 4, !dbg !7820
  %38 = add i32 %37, -1, !dbg !7820
  store i32 %38, i32* %6, align 4, !dbg !7820
  br label %30, !dbg !7813, !llvm.loop !7821

39:                                               ; preds = %30
  %40 = load i8*, i8** %7, align 4, !dbg !7823
  ret i8* %40, !dbg !7824
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7825 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7828, metadata !DIExpression()), !dbg !7829
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7832, metadata !DIExpression()), !dbg !7833
  %6 = load i32, i32* %4, align 4, !dbg !7834
  %7 = trunc i32 %6 to i8, !dbg !7835
  store i8 %7, i8* %5, align 1, !dbg !7833
  br label %8, !dbg !7836

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %3, align 4, !dbg !7837
  %10 = load i8, i8* %9, align 1, !dbg !7838
  %11 = zext i8 %10 to i32, !dbg !7838
  %12 = load i8, i8* %5, align 1, !dbg !7839
  %13 = zext i8 %12 to i32, !dbg !7839
  %14 = icmp ne i32 %11, %13, !dbg !7840
  br i1 %14, label %15, label %20, !dbg !7841

15:                                               ; preds = %8
  %16 = load i8*, i8** %3, align 4, !dbg !7842
  %17 = load i8, i8* %16, align 1, !dbg !7843
  %18 = zext i8 %17 to i32, !dbg !7843
  %19 = icmp ne i32 %18, 0, !dbg !7844
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i1 [ false, %8 ], [ %19, %15 ], !dbg !7845
  br i1 %21, label %22, label %25, !dbg !7836

22:                                               ; preds = %20
  %23 = load i8*, i8** %3, align 4, !dbg !7846
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7846
  store i8* %24, i8** %3, align 4, !dbg !7846
  br label %8, !dbg !7836, !llvm.loop !7848

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 4, !dbg !7850
  %27 = load i8, i8* %26, align 1, !dbg !7851
  %28 = zext i8 %27 to i32, !dbg !7851
  %29 = load i8, i8* %5, align 1, !dbg !7852
  %30 = zext i8 %29 to i32, !dbg !7852
  %31 = icmp eq i32 %28, %30, !dbg !7853
  br i1 %31, label %32, label %34, !dbg !7854

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 4, !dbg !7855
  br label %35, !dbg !7854

34:                                               ; preds = %25
  br label %35, !dbg !7854

35:                                               ; preds = %34, %32
  %36 = phi i8* [ %33, %32 ], [ null, %34 ], !dbg !7854
  ret i8* %36, !dbg !7856
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strrchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7857 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7858, metadata !DIExpression()), !dbg !7859
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i8* null, i8** %5, align 4, !dbg !7863
  br label %6, !dbg !7864

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7865
  %8 = load i8, i8* %7, align 1, !dbg !7868
  %9 = zext i8 %8 to i32, !dbg !7868
  %10 = load i32, i32* %4, align 4, !dbg !7869
  %11 = trunc i32 %10 to i8, !dbg !7870
  %12 = zext i8 %11 to i32, !dbg !7870
  %13 = icmp eq i32 %9, %12, !dbg !7871
  br i1 %13, label %14, label %16, !dbg !7872

14:                                               ; preds = %6
  %15 = load i8*, i8** %3, align 4, !dbg !7873
  store i8* %15, i8** %5, align 4, !dbg !7875
  br label %16, !dbg !7876

16:                                               ; preds = %14, %6
  br label %17, !dbg !7877

17:                                               ; preds = %16
  %18 = load i8*, i8** %3, align 4, !dbg !7878
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7878
  store i8* %19, i8** %3, align 4, !dbg !7878
  %20 = load i8, i8* %18, align 1, !dbg !7879
  %21 = icmp ne i8 %20, 0, !dbg !7877
  br i1 %21, label %6, label %22, !dbg !7877, !llvm.loop !7880

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 4, !dbg !7882
  ret i8* %23, !dbg !7883
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strlen(i8* noundef %0) #1 !dbg !7884 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7889, metadata !DIExpression()), !dbg !7890
  store i32 0, i32* %3, align 4, !dbg !7890
  br label %4, !dbg !7891

4:                                                ; preds = %9, %1
  %5 = load i8*, i8** %2, align 4, !dbg !7892
  %6 = load i8, i8* %5, align 1, !dbg !7893
  %7 = zext i8 %6 to i32, !dbg !7893
  %8 = icmp ne i32 %7, 0, !dbg !7894
  br i1 %8, label %9, label %14, !dbg !7891

9:                                                ; preds = %4
  %10 = load i8*, i8** %2, align 4, !dbg !7895
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7895
  store i8* %11, i8** %2, align 4, !dbg !7895
  %12 = load i32, i32* %3, align 4, !dbg !7897
  %13 = add i32 %12, 1, !dbg !7897
  store i32 %13, i32* %3, align 4, !dbg !7897
  br label %4, !dbg !7891, !llvm.loop !7898

14:                                               ; preds = %4
  %15 = load i32, i32* %3, align 4, !dbg !7900
  ret i32 %15, !dbg !7901
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strnlen(i8* noundef %0, i32 noundef %1) #1 !dbg !7902 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7907, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i32 0, i32* %5, align 4, !dbg !7910
  br label %6, !dbg !7911

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7912
  %8 = load i8, i8* %7, align 1, !dbg !7913
  %9 = zext i8 %8 to i32, !dbg !7913
  %10 = icmp ne i32 %9, 0, !dbg !7914
  br i1 %10, label %11, label %15, !dbg !7915

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4, !dbg !7916
  %13 = load i32, i32* %4, align 4, !dbg !7917
  %14 = icmp ult i32 %12, %13, !dbg !7918
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !7919
  br i1 %16, label %17, label %22, !dbg !7911

17:                                               ; preds = %15
  %18 = load i8*, i8** %3, align 4, !dbg !7920
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7920
  store i8* %19, i8** %3, align 4, !dbg !7920
  %20 = load i32, i32* %5, align 4, !dbg !7922
  %21 = add i32 %20, 1, !dbg !7922
  store i32 %21, i32* %5, align 4, !dbg !7922
  br label %6, !dbg !7911, !llvm.loop !7923

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7925
  ret i32 %23, !dbg !7926
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strcmp(i8* noundef %0, i8* noundef %1) #1 !dbg !7927 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7930, metadata !DIExpression()), !dbg !7931
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7932, metadata !DIExpression()), !dbg !7933
  br label %5, !dbg !7934

5:                                                ; preds = %20, %2
  %6 = load i8*, i8** %3, align 4, !dbg !7935
  %7 = load i8, i8* %6, align 1, !dbg !7936
  %8 = zext i8 %7 to i32, !dbg !7936
  %9 = load i8*, i8** %4, align 4, !dbg !7937
  %10 = load i8, i8* %9, align 1, !dbg !7938
  %11 = zext i8 %10 to i32, !dbg !7938
  %12 = icmp eq i32 %8, %11, !dbg !7939
  br i1 %12, label %13, label %18, !dbg !7940

13:                                               ; preds = %5
  %14 = load i8*, i8** %3, align 4, !dbg !7941
  %15 = load i8, i8* %14, align 1, !dbg !7942
  %16 = zext i8 %15 to i32, !dbg !7942
  %17 = icmp ne i32 %16, 0, !dbg !7943
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i1 [ false, %5 ], [ %17, %13 ], !dbg !7944
  br i1 %19, label %20, label %25, !dbg !7934

20:                                               ; preds = %18
  %21 = load i8*, i8** %3, align 4, !dbg !7945
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !7945
  store i8* %22, i8** %3, align 4, !dbg !7945
  %23 = load i8*, i8** %4, align 4, !dbg !7947
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7947
  store i8* %24, i8** %4, align 4, !dbg !7947
  br label %5, !dbg !7934, !llvm.loop !7948

25:                                               ; preds = %18
  %26 = load i8*, i8** %3, align 4, !dbg !7950
  %27 = load i8, i8* %26, align 1, !dbg !7951
  %28 = zext i8 %27 to i32, !dbg !7951
  %29 = load i8*, i8** %4, align 4, !dbg !7952
  %30 = load i8, i8* %29, align 1, !dbg !7953
  %31 = zext i8 %30 to i32, !dbg !7953
  %32 = sub nsw i32 %28, %31, !dbg !7954
  ret i32 %32, !dbg !7955
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strncmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7956 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7959, metadata !DIExpression()), !dbg !7960
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7963, metadata !DIExpression()), !dbg !7964
  br label %7, !dbg !7965

7:                                                ; preds = %25, %3
  %8 = load i32, i32* %6, align 4, !dbg !7966
  %9 = icmp ugt i32 %8, 0, !dbg !7967
  br i1 %9, label %10, label %23, !dbg !7968

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 4, !dbg !7969
  %12 = load i8, i8* %11, align 1, !dbg !7970
  %13 = zext i8 %12 to i32, !dbg !7970
  %14 = load i8*, i8** %5, align 4, !dbg !7971
  %15 = load i8, i8* %14, align 1, !dbg !7972
  %16 = zext i8 %15 to i32, !dbg !7972
  %17 = icmp eq i32 %13, %16, !dbg !7973
  br i1 %17, label %18, label %23, !dbg !7974

18:                                               ; preds = %10
  %19 = load i8*, i8** %4, align 4, !dbg !7975
  %20 = load i8, i8* %19, align 1, !dbg !7976
  %21 = zext i8 %20 to i32, !dbg !7976
  %22 = icmp ne i32 %21, 0, !dbg !7977
  br label %23

23:                                               ; preds = %18, %10, %7
  %24 = phi i1 [ false, %10 ], [ false, %7 ], [ %22, %18 ], !dbg !7978
  br i1 %24, label %25, label %32, !dbg !7965

25:                                               ; preds = %23
  %26 = load i8*, i8** %4, align 4, !dbg !7979
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !7979
  store i8* %27, i8** %4, align 4, !dbg !7979
  %28 = load i8*, i8** %5, align 4, !dbg !7981
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !7981
  store i8* %29, i8** %5, align 4, !dbg !7981
  %30 = load i32, i32* %6, align 4, !dbg !7982
  %31 = add i32 %30, -1, !dbg !7982
  store i32 %31, i32* %6, align 4, !dbg !7982
  br label %7, !dbg !7965, !llvm.loop !7983

32:                                               ; preds = %23
  %33 = load i32, i32* %6, align 4, !dbg !7985
  %34 = icmp eq i32 %33, 0, !dbg !7986
  br i1 %34, label %35, label %36, !dbg !7987

35:                                               ; preds = %32
  br label %44, !dbg !7987

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 4, !dbg !7988
  %38 = load i8, i8* %37, align 1, !dbg !7989
  %39 = zext i8 %38 to i32, !dbg !7989
  %40 = load i8*, i8** %5, align 4, !dbg !7990
  %41 = load i8, i8* %40, align 1, !dbg !7991
  %42 = zext i8 %41 to i32, !dbg !7991
  %43 = sub nsw i32 %39, %42, !dbg !7992
  br label %44, !dbg !7987

44:                                               ; preds = %36, %35
  %45 = phi i32 [ 0, %35 ], [ %43, %36 ], !dbg !7987
  ret i32 %45, !dbg !7993
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef %1, i8** noundef %2) #1 !dbg !7994 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8**, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7998, metadata !DIExpression()), !dbg !7999
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8000, metadata !DIExpression()), !dbg !8001
  store i8** %2, i8*** %7, align 4
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !8002, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8006, metadata !DIExpression()), !dbg !8007
  %10 = load i8*, i8** %5, align 4, !dbg !8008
  %11 = icmp ne i8* %10, null, !dbg !8008
  br i1 %11, label %12, label %14, !dbg !8008

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 4, !dbg !8009
  br label %17, !dbg !8008

14:                                               ; preds = %3
  %15 = load i8**, i8*** %7, align 4, !dbg !8010
  %16 = load i8*, i8** %15, align 4, !dbg !8011
  br label %17, !dbg !8008

17:                                               ; preds = %14, %12
  %18 = phi i8* [ %13, %12 ], [ %16, %14 ], !dbg !8008
  store i8* %18, i8** %8, align 4, !dbg !8012
  br label %19, !dbg !8013

19:                                               ; preds = %33, %17
  %20 = load i8*, i8** %8, align 4, !dbg !8014
  %21 = load i8, i8* %20, align 1, !dbg !8015
  %22 = zext i8 %21 to i32, !dbg !8015
  %23 = icmp ne i32 %22, 0, !dbg !8015
  br i1 %23, label %24, label %31, !dbg !8016

24:                                               ; preds = %19
  %25 = load i8*, i8** %6, align 4, !dbg !8017
  %26 = load i8*, i8** %8, align 4, !dbg !8018
  %27 = load i8, i8* %26, align 1, !dbg !8019
  %28 = zext i8 %27 to i32, !dbg !8019
  %29 = call i8* @strchr(i8* noundef %25, i32 noundef %28) #10, !dbg !8020
  %30 = icmp ne i8* %29, null, !dbg !8016
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i1 [ false, %19 ], [ %30, %24 ], !dbg !8021
  br i1 %32, label %33, label %36, !dbg !8013

33:                                               ; preds = %31
  %34 = load i8*, i8** %8, align 4, !dbg !8022
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8022
  store i8* %35, i8** %8, align 4, !dbg !8022
  br label %19, !dbg !8013, !llvm.loop !8024

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 4, !dbg !8026
  %38 = load i8, i8* %37, align 1, !dbg !8028
  %39 = zext i8 %38 to i32, !dbg !8028
  %40 = icmp eq i32 %39, 0, !dbg !8029
  br i1 %40, label %41, label %44, !dbg !8030

41:                                               ; preds = %36
  %42 = load i8*, i8** %8, align 4, !dbg !8031
  %43 = load i8**, i8*** %7, align 4, !dbg !8033
  store i8* %42, i8** %43, align 4, !dbg !8034
  store i8* null, i8** %4, align 4, !dbg !8035
  br label %79, !dbg !8035

44:                                               ; preds = %36
  %45 = load i8*, i8** %8, align 4, !dbg !8036
  store i8* %45, i8** %9, align 4, !dbg !8037
  br label %46, !dbg !8038

46:                                               ; preds = %61, %44
  %47 = load i8*, i8** %9, align 4, !dbg !8039
  %48 = load i8, i8* %47, align 1, !dbg !8040
  %49 = zext i8 %48 to i32, !dbg !8040
  %50 = icmp ne i32 %49, 0, !dbg !8040
  br i1 %50, label %51, label %59, !dbg !8041

51:                                               ; preds = %46
  %52 = load i8*, i8** %6, align 4, !dbg !8042
  %53 = load i8*, i8** %9, align 4, !dbg !8043
  %54 = load i8, i8* %53, align 1, !dbg !8044
  %55 = zext i8 %54 to i32, !dbg !8044
  %56 = call i8* @strchr(i8* noundef %52, i32 noundef %55) #10, !dbg !8045
  %57 = icmp ne i8* %56, null, !dbg !8046
  %58 = xor i1 %57, true, !dbg !8046
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i1 [ false, %46 ], [ %58, %51 ], !dbg !8021
  br i1 %60, label %61, label %64, !dbg !8038

61:                                               ; preds = %59
  %62 = load i8*, i8** %9, align 4, !dbg !8047
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !8047
  store i8* %63, i8** %9, align 4, !dbg !8047
  br label %46, !dbg !8038, !llvm.loop !8049

64:                                               ; preds = %59
  %65 = load i8*, i8** %9, align 4, !dbg !8051
  %66 = load i8, i8* %65, align 1, !dbg !8053
  %67 = zext i8 %66 to i32, !dbg !8053
  %68 = icmp ne i32 %67, 0, !dbg !8054
  br i1 %68, label %69, label %74, !dbg !8055

69:                                               ; preds = %64
  %70 = load i8*, i8** %9, align 4, !dbg !8056
  store i8 0, i8* %70, align 1, !dbg !8058
  %71 = load i8*, i8** %9, align 4, !dbg !8059
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !8060
  %73 = load i8**, i8*** %7, align 4, !dbg !8061
  store i8* %72, i8** %73, align 4, !dbg !8062
  br label %77, !dbg !8063

74:                                               ; preds = %64
  %75 = load i8*, i8** %9, align 4, !dbg !8064
  %76 = load i8**, i8*** %7, align 4, !dbg !8066
  store i8* %75, i8** %76, align 4, !dbg !8067
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %8, align 4, !dbg !8068
  store i8* %78, i8** %4, align 4, !dbg !8069
  br label %79, !dbg !8069

79:                                               ; preds = %77, %41
  %80 = load i8*, i8** %4, align 4, !dbg !8070
  ret i8* %80, !dbg !8070
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcat(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !8071 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8072, metadata !DIExpression()), !dbg !8073
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8074, metadata !DIExpression()), !dbg !8075
  %5 = load i8*, i8** %3, align 4, !dbg !8076
  %6 = load i8*, i8** %3, align 4, !dbg !8077
  %7 = call i32 @strlen(i8* noundef %6) #10, !dbg !8078
  %8 = getelementptr inbounds i8, i8* %5, i32 %7, !dbg !8079
  %9 = load i8*, i8** %4, align 4, !dbg !8080
  %10 = call i8* @strcpy(i8* noundef %8, i8* noundef %9) #10, !dbg !8081
  %11 = load i8*, i8** %3, align 4, !dbg !8082
  ret i8* %11, !dbg !8083
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncat(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !8084 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8085, metadata !DIExpression()), !dbg !8086
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8087, metadata !DIExpression()), !dbg !8088
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8089, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8091, metadata !DIExpression()), !dbg !8092
  %9 = load i8*, i8** %4, align 4, !dbg !8093
  store i8* %9, i8** %7, align 4, !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8094, metadata !DIExpression()), !dbg !8095
  %10 = load i8*, i8** %4, align 4, !dbg !8096
  %11 = call i32 @strlen(i8* noundef %10) #10, !dbg !8097
  store i32 %11, i32* %8, align 4, !dbg !8095
  %12 = load i32, i32* %8, align 4, !dbg !8098
  %13 = load i8*, i8** %4, align 4, !dbg !8099
  %14 = getelementptr inbounds i8, i8* %13, i32 %12, !dbg !8099
  store i8* %14, i8** %4, align 4, !dbg !8099
  br label %15, !dbg !8100

15:                                               ; preds = %26, %3
  %16 = load i32, i32* %6, align 4, !dbg !8101
  %17 = add i32 %16, -1, !dbg !8101
  store i32 %17, i32* %6, align 4, !dbg !8101
  %18 = icmp ugt i32 %16, 0, !dbg !8102
  br i1 %18, label %19, label %24, !dbg !8103

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 4, !dbg !8104
  %21 = load i8, i8* %20, align 1, !dbg !8105
  %22 = zext i8 %21 to i32, !dbg !8105
  %23 = icmp ne i32 %22, 0, !dbg !8106
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ], !dbg !8107
  br i1 %25, label %26, label %32, !dbg !8100

26:                                               ; preds = %24
  %27 = load i8*, i8** %5, align 4, !dbg !8108
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !8108
  store i8* %28, i8** %5, align 4, !dbg !8108
  %29 = load i8, i8* %27, align 1, !dbg !8110
  %30 = load i8*, i8** %4, align 4, !dbg !8111
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !8111
  store i8* %31, i8** %4, align 4, !dbg !8111
  store i8 %29, i8* %30, align 1, !dbg !8112
  br label %15, !dbg !8100, !llvm.loop !8113

32:                                               ; preds = %24
  %33 = load i8*, i8** %4, align 4, !dbg !8115
  store i8 0, i8* %33, align 1, !dbg !8116
  %34 = load i8*, i8** %7, align 4, !dbg !8117
  ret i8* %34, !dbg !8118
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @memcmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !8119 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8122, metadata !DIExpression()), !dbg !8123
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8128, metadata !DIExpression()), !dbg !8129
  %10 = load i8*, i8** %5, align 4, !dbg !8130
  store i8* %10, i8** %8, align 4, !dbg !8129
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8131, metadata !DIExpression()), !dbg !8132
  %11 = load i8*, i8** %6, align 4, !dbg !8133
  store i8* %11, i8** %9, align 4, !dbg !8132
  %12 = load i32, i32* %7, align 4, !dbg !8134
  %13 = icmp ne i32 %12, 0, !dbg !8134
  br i1 %13, label %15, label %14, !dbg !8136

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !8137
  br label %43, !dbg !8137

15:                                               ; preds = %3
  br label %16, !dbg !8139

16:                                               ; preds = %30, %15
  %17 = load i32, i32* %7, align 4, !dbg !8140
  %18 = add i32 %17, -1, !dbg !8140
  store i32 %18, i32* %7, align 4, !dbg !8140
  %19 = icmp ugt i32 %18, 0, !dbg !8141
  br i1 %19, label %20, label %28, !dbg !8142

20:                                               ; preds = %16
  %21 = load i8*, i8** %8, align 4, !dbg !8143
  %22 = load i8, i8* %21, align 1, !dbg !8144
  %23 = zext i8 %22 to i32, !dbg !8144
  %24 = load i8*, i8** %9, align 4, !dbg !8145
  %25 = load i8, i8* %24, align 1, !dbg !8146
  %26 = zext i8 %25 to i32, !dbg !8146
  %27 = icmp eq i32 %23, %26, !dbg !8147
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i1 [ false, %16 ], [ %27, %20 ], !dbg !8148
  br i1 %29, label %30, label %35, !dbg !8139

30:                                               ; preds = %28
  %31 = load i8*, i8** %8, align 4, !dbg !8149
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8149
  store i8* %32, i8** %8, align 4, !dbg !8149
  %33 = load i8*, i8** %9, align 4, !dbg !8151
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !8151
  store i8* %34, i8** %9, align 4, !dbg !8151
  br label %16, !dbg !8139, !llvm.loop !8152

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 4, !dbg !8154
  %37 = load i8, i8* %36, align 1, !dbg !8155
  %38 = zext i8 %37 to i32, !dbg !8155
  %39 = load i8*, i8** %9, align 4, !dbg !8156
  %40 = load i8, i8* %39, align 1, !dbg !8157
  %41 = zext i8 %40 to i32, !dbg !8157
  %42 = sub nsw i32 %38, %41, !dbg !8158
  store i32 %42, i32* %4, align 4, !dbg !8159
  br label %43, !dbg !8159

43:                                               ; preds = %35, %14
  %44 = load i32, i32* %4, align 4, !dbg !8160
  ret i32 %44, !dbg !8160
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memmove(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !8161 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8166, metadata !DIExpression()), !dbg !8167
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8168, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8170, metadata !DIExpression()), !dbg !8171
  %9 = load i8*, i8** %4, align 4, !dbg !8172
  store i8* %9, i8** %7, align 4, !dbg !8171
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8173, metadata !DIExpression()), !dbg !8174
  %10 = load i8*, i8** %5, align 4, !dbg !8175
  store i8* %10, i8** %8, align 4, !dbg !8174
  %11 = load i8*, i8** %7, align 4, !dbg !8176
  %12 = load i8*, i8** %8, align 4, !dbg !8178
  %13 = ptrtoint i8* %11 to i32, !dbg !8179
  %14 = ptrtoint i8* %12 to i32, !dbg !8179
  %15 = sub i32 %13, %14, !dbg !8179
  %16 = load i32, i32* %6, align 4, !dbg !8180
  %17 = icmp ult i32 %15, %16, !dbg !8181
  br i1 %17, label %18, label %33, !dbg !8182

18:                                               ; preds = %3
  br label %19, !dbg !8183

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %6, align 4, !dbg !8185
  %21 = icmp ugt i32 %20, 0, !dbg !8186
  br i1 %21, label %22, label %32, !dbg !8183

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4, !dbg !8187
  %24 = add i32 %23, -1, !dbg !8187
  store i32 %24, i32* %6, align 4, !dbg !8187
  %25 = load i8*, i8** %8, align 4, !dbg !8189
  %26 = load i32, i32* %6, align 4, !dbg !8190
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !8189
  %28 = load i8, i8* %27, align 1, !dbg !8189
  %29 = load i8*, i8** %7, align 4, !dbg !8191
  %30 = load i32, i32* %6, align 4, !dbg !8192
  %31 = getelementptr inbounds i8, i8* %29, i32 %30, !dbg !8191
  store i8 %28, i8* %31, align 1, !dbg !8193
  br label %19, !dbg !8183, !llvm.loop !8194

32:                                               ; preds = %19
  br label %48, !dbg !8196

33:                                               ; preds = %3
  br label %34, !dbg !8197

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %6, align 4, !dbg !8199
  %36 = icmp ugt i32 %35, 0, !dbg !8200
  br i1 %36, label %37, label %47, !dbg !8197

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !8201
  %39 = load i8, i8* %38, align 1, !dbg !8203
  %40 = load i8*, i8** %7, align 4, !dbg !8204
  store i8 %39, i8* %40, align 1, !dbg !8205
  %41 = load i8*, i8** %7, align 4, !dbg !8206
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !8206
  store i8* %42, i8** %7, align 4, !dbg !8206
  %43 = load i8*, i8** %8, align 4, !dbg !8207
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !8207
  store i8* %44, i8** %8, align 4, !dbg !8207
  %45 = load i32, i32* %6, align 4, !dbg !8208
  %46 = add i32 %45, -1, !dbg !8208
  store i32 %46, i32* %6, align 4, !dbg !8208
  br label %34, !dbg !8197, !llvm.loop !8209

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %32
  %49 = load i8*, i8** %4, align 4, !dbg !8211
  ret i8* %49, !dbg !8212
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memcpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !8213 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8218, metadata !DIExpression()), !dbg !8219
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8222, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8224, metadata !DIExpression()), !dbg !8225
  %13 = load i8*, i8** %5, align 4, !dbg !8226
  store i8* %13, i8** %8, align 4, !dbg !8225
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8227, metadata !DIExpression()), !dbg !8228
  %14 = load i8*, i8** %6, align 4, !dbg !8229
  store i8* %14, i8** %9, align 4, !dbg !8228
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8230, metadata !DIExpression()), !dbg !8232
  store i32 3, i32* %10, align 4, !dbg !8232
  %15 = load i8*, i8** %5, align 4, !dbg !8233
  %16 = ptrtoint i8* %15 to i32, !dbg !8235
  %17 = load i8*, i8** %9, align 4, !dbg !8236
  %18 = ptrtoint i8* %17 to i32, !dbg !8237
  %19 = xor i32 %16, %18, !dbg !8238
  %20 = and i32 %19, 3, !dbg !8239
  %21 = icmp eq i32 %20, 0, !dbg !8240
  br i1 %21, label %22, label %62, !dbg !8241

22:                                               ; preds = %3
  br label %23, !dbg !8242

23:                                               ; preds = %33, %22
  %24 = load i8*, i8** %8, align 4, !dbg !8244
  %25 = ptrtoint i8* %24 to i32, !dbg !8245
  %26 = and i32 %25, 3, !dbg !8246
  %27 = icmp ne i32 %26, 0, !dbg !8242
  br i1 %27, label %28, label %41, !dbg !8242

28:                                               ; preds = %23
  %29 = load i32, i32* %7, align 4, !dbg !8247
  %30 = icmp eq i32 %29, 0, !dbg !8250
  br i1 %30, label %31, label %33, !dbg !8251

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 4, !dbg !8252
  store i8* %32, i8** %4, align 4, !dbg !8254
  br label %76, !dbg !8254

33:                                               ; preds = %28
  %34 = load i8*, i8** %9, align 4, !dbg !8255
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8255
  store i8* %35, i8** %9, align 4, !dbg !8255
  %36 = load i8, i8* %34, align 1, !dbg !8256
  %37 = load i8*, i8** %8, align 4, !dbg !8257
  %38 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8257
  store i8* %38, i8** %8, align 4, !dbg !8257
  store i8 %36, i8* %37, align 1, !dbg !8258
  %39 = load i32, i32* %7, align 4, !dbg !8259
  %40 = add i32 %39, -1, !dbg !8259
  store i32 %40, i32* %7, align 4, !dbg !8259
  br label %23, !dbg !8242, !llvm.loop !8260

41:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32** %11, metadata !8262, metadata !DIExpression()), !dbg !8263
  %42 = load i8*, i8** %8, align 4, !dbg !8264
  %43 = bitcast i8* %42 to i32*, !dbg !8265
  store i32* %43, i32** %11, align 4, !dbg !8263
  call void @llvm.dbg.declare(metadata i32** %12, metadata !8266, metadata !DIExpression()), !dbg !8267
  %44 = load i8*, i8** %9, align 4, !dbg !8268
  %45 = bitcast i8* %44 to i32*, !dbg !8269
  store i32* %45, i32** %12, align 4, !dbg !8267
  br label %46, !dbg !8270

46:                                               ; preds = %49, %41
  %47 = load i32, i32* %7, align 4, !dbg !8271
  %48 = icmp uge i32 %47, 4, !dbg !8272
  br i1 %48, label %49, label %57, !dbg !8270

49:                                               ; preds = %46
  %50 = load i32*, i32** %12, align 4, !dbg !8273
  %51 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !8273
  store i32* %51, i32** %12, align 4, !dbg !8273
  %52 = load i32, i32* %50, align 4, !dbg !8275
  %53 = load i32*, i32** %11, align 4, !dbg !8276
  %54 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !8276
  store i32* %54, i32** %11, align 4, !dbg !8276
  store i32 %52, i32* %53, align 4, !dbg !8277
  %55 = load i32, i32* %7, align 4, !dbg !8278
  %56 = sub i32 %55, 4, !dbg !8278
  store i32 %56, i32* %7, align 4, !dbg !8278
  br label %46, !dbg !8270, !llvm.loop !8279

57:                                               ; preds = %46
  %58 = load i32*, i32** %11, align 4, !dbg !8281
  %59 = bitcast i32* %58 to i8*, !dbg !8282
  store i8* %59, i8** %8, align 4, !dbg !8283
  %60 = load i32*, i32** %12, align 4, !dbg !8284
  %61 = bitcast i32* %60 to i8*, !dbg !8285
  store i8* %61, i8** %9, align 4, !dbg !8286
  br label %62, !dbg !8287

62:                                               ; preds = %57, %3
  br label %63, !dbg !8288

63:                                               ; preds = %66, %62
  %64 = load i32, i32* %7, align 4, !dbg !8289
  %65 = icmp ugt i32 %64, 0, !dbg !8290
  br i1 %65, label %66, label %74, !dbg !8288

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 4, !dbg !8291
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !8291
  store i8* %68, i8** %9, align 4, !dbg !8291
  %69 = load i8, i8* %67, align 1, !dbg !8293
  %70 = load i8*, i8** %8, align 4, !dbg !8294
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !8294
  store i8* %71, i8** %8, align 4, !dbg !8294
  store i8 %69, i8* %70, align 1, !dbg !8295
  %72 = load i32, i32* %7, align 4, !dbg !8296
  %73 = add i32 %72, -1, !dbg !8296
  store i32 %73, i32* %7, align 4, !dbg !8296
  br label %63, !dbg !8288, !llvm.loop !8297

74:                                               ; preds = %63
  %75 = load i8*, i8** %5, align 4, !dbg !8299
  store i8* %75, i8** %4, align 4, !dbg !8300
  br label %76, !dbg !8300

76:                                               ; preds = %74, %31
  %77 = load i8*, i8** %4, align 4, !dbg !8301
  ret i8* %77, !dbg !8301
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8302 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8311, metadata !DIExpression()), !dbg !8312
  %12 = load i8*, i8** %5, align 4, !dbg !8313
  store i8* %12, i8** %8, align 4, !dbg !8312
  call void @llvm.dbg.declare(metadata i8* %9, metadata !8314, metadata !DIExpression()), !dbg !8315
  %13 = load i32, i32* %6, align 4, !dbg !8316
  %14 = trunc i32 %13 to i8, !dbg !8317
  store i8 %14, i8* %9, align 1, !dbg !8315
  br label %15, !dbg !8318

15:                                               ; preds = %25, %3
  %16 = load i8*, i8** %8, align 4, !dbg !8319
  %17 = ptrtoint i8* %16 to i32, !dbg !8320
  %18 = and i32 %17, 3, !dbg !8321
  %19 = icmp ne i32 %18, 0, !dbg !8318
  br i1 %19, label %20, label %31, !dbg !8318

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4, !dbg !8322
  %22 = icmp eq i32 %21, 0, !dbg !8325
  br i1 %22, label %23, label %25, !dbg !8326

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 4, !dbg !8327
  store i8* %24, i8** %4, align 4, !dbg !8329
  br label %67, !dbg !8329

25:                                               ; preds = %20
  %26 = load i8, i8* %9, align 1, !dbg !8330
  %27 = load i8*, i8** %8, align 4, !dbg !8331
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !8331
  store i8* %28, i8** %8, align 4, !dbg !8331
  store i8 %26, i8* %27, align 1, !dbg !8332
  %29 = load i32, i32* %7, align 4, !dbg !8333
  %30 = add i32 %29, -1, !dbg !8333
  store i32 %30, i32* %7, align 4, !dbg !8333
  br label %15, !dbg !8318, !llvm.loop !8334

31:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32** %10, metadata !8336, metadata !DIExpression()), !dbg !8337
  %32 = load i8*, i8** %8, align 4, !dbg !8338
  %33 = bitcast i8* %32 to i32*, !dbg !8339
  store i32* %33, i32** %10, align 4, !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8340, metadata !DIExpression()), !dbg !8341
  %34 = load i8, i8* %9, align 1, !dbg !8342
  %35 = zext i8 %34 to i32, !dbg !8343
  store i32 %35, i32* %11, align 4, !dbg !8341
  %36 = load i32, i32* %11, align 4, !dbg !8344
  %37 = shl i32 %36, 8, !dbg !8345
  %38 = load i32, i32* %11, align 4, !dbg !8346
  %39 = or i32 %38, %37, !dbg !8346
  store i32 %39, i32* %11, align 4, !dbg !8346
  %40 = load i32, i32* %11, align 4, !dbg !8347
  %41 = shl i32 %40, 16, !dbg !8348
  %42 = load i32, i32* %11, align 4, !dbg !8349
  %43 = or i32 %42, %41, !dbg !8349
  store i32 %43, i32* %11, align 4, !dbg !8349
  br label %44, !dbg !8350

44:                                               ; preds = %47, %31
  %45 = load i32, i32* %7, align 4, !dbg !8351
  %46 = icmp uge i32 %45, 4, !dbg !8352
  br i1 %46, label %47, label %53, !dbg !8350

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !8353
  %49 = load i32*, i32** %10, align 4, !dbg !8355
  %50 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !8355
  store i32* %50, i32** %10, align 4, !dbg !8355
  store i32 %48, i32* %49, align 4, !dbg !8356
  %51 = load i32, i32* %7, align 4, !dbg !8357
  %52 = sub i32 %51, 4, !dbg !8357
  store i32 %52, i32* %7, align 4, !dbg !8357
  br label %44, !dbg !8350, !llvm.loop !8358

53:                                               ; preds = %44
  %54 = load i32*, i32** %10, align 4, !dbg !8360
  %55 = bitcast i32* %54 to i8*, !dbg !8361
  store i8* %55, i8** %8, align 4, !dbg !8362
  br label %56, !dbg !8363

56:                                               ; preds = %59, %53
  %57 = load i32, i32* %7, align 4, !dbg !8364
  %58 = icmp ugt i32 %57, 0, !dbg !8365
  br i1 %58, label %59, label %65, !dbg !8363

59:                                               ; preds = %56
  %60 = load i8, i8* %9, align 1, !dbg !8366
  %61 = load i8*, i8** %8, align 4, !dbg !8368
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !8368
  store i8* %62, i8** %8, align 4, !dbg !8368
  store i8 %60, i8* %61, align 1, !dbg !8369
  %63 = load i32, i32* %7, align 4, !dbg !8370
  %64 = add i32 %63, -1, !dbg !8370
  store i32 %64, i32* %7, align 4, !dbg !8370
  br label %56, !dbg !8363, !llvm.loop !8371

65:                                               ; preds = %56
  %66 = load i8*, i8** %5, align 4, !dbg !8373
  store i8* %66, i8** %4, align 4, !dbg !8374
  br label %67, !dbg !8374

67:                                               ; preds = %65, %23
  %68 = load i8*, i8** %4, align 4, !dbg !8375
  ret i8* %68, !dbg !8375
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memchr(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8376 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8379, metadata !DIExpression()), !dbg !8380
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8381, metadata !DIExpression()), !dbg !8382
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8383, metadata !DIExpression()), !dbg !8384
  %9 = load i32, i32* %7, align 4, !dbg !8385
  %10 = icmp ne i32 %9, 0, !dbg !8387
  br i1 %10, label %11, label %31, !dbg !8388

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8389, metadata !DIExpression()), !dbg !8391
  %12 = load i8*, i8** %5, align 4, !dbg !8392
  store i8* %12, i8** %8, align 4, !dbg !8391
  br label %13, !dbg !8393

13:                                               ; preds = %26, %11
  %14 = load i8*, i8** %8, align 4, !dbg !8394
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8394
  store i8* %15, i8** %8, align 4, !dbg !8394
  %16 = load i8, i8* %14, align 1, !dbg !8397
  %17 = zext i8 %16 to i32, !dbg !8397
  %18 = load i32, i32* %6, align 4, !dbg !8398
  %19 = trunc i32 %18 to i8, !dbg !8399
  %20 = zext i8 %19 to i32, !dbg !8399
  %21 = icmp eq i32 %17, %20, !dbg !8400
  br i1 %21, label %22, label %25, !dbg !8401

22:                                               ; preds = %13
  %23 = load i8*, i8** %8, align 4, !dbg !8402
  %24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !8404
  store i8* %24, i8** %4, align 4, !dbg !8405
  br label %32, !dbg !8405

25:                                               ; preds = %13
  br label %26, !dbg !8406

26:                                               ; preds = %25
  %27 = load i32, i32* %7, align 4, !dbg !8407
  %28 = add i32 %27, -1, !dbg !8407
  store i32 %28, i32* %7, align 4, !dbg !8407
  %29 = icmp ne i32 %28, 0, !dbg !8408
  br i1 %29, label %13, label %30, !dbg !8406, !llvm.loop !8409

30:                                               ; preds = %26
  br label %31, !dbg !8411

31:                                               ; preds = %30, %3
  store i8* null, i8** %4, align 4, !dbg !8412
  br label %32, !dbg !8412

32:                                               ; preds = %31, %22
  %33 = load i8*, i8** %4, align 4, !dbg !8413
  ret i8* %33, !dbg !8413
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) #1 !dbg !8414 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !8415, metadata !DIExpression()), !dbg !8416
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !8417
  store i32 (i32)* %3, i32 (i32)** @_stdout_hook, align 4, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind optnone
define internal i32 @_stdout_hook_default(i32 noundef %0) #1 !dbg !8420 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8421, metadata !DIExpression()), !dbg !8422
  %3 = load i32, i32* %2, align 4, !dbg !8423
  ret i32 -1, !dbg !8424
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8425 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8428, metadata !DIExpression()), !dbg !8429
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8430, metadata !DIExpression()), !dbg !8431
  %5 = load i32*, i32** %4, align 4, !dbg !8432
  %6 = icmp eq i32* %5, inttoptr (i32 2 to i32*), !dbg !8433
  br i1 %6, label %10, label %7, !dbg !8434

7:                                                ; preds = %2
  %8 = load i32*, i32** %4, align 4, !dbg !8435
  %9 = icmp eq i32* %8, inttoptr (i32 3 to i32*), !dbg !8436
  br i1 %9, label %10, label %14, !dbg !8437

10:                                               ; preds = %7, %2
  %11 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8438
  %12 = load i32, i32* %3, align 4, !dbg !8439
  %13 = call i32 %11(i32 noundef %12) #10, !dbg !8438
  br label %15, !dbg !8437

14:                                               ; preds = %7
  br label %15, !dbg !8437

15:                                               ; preds = %14, %10
  %16 = phi i32 [ %13, %10 ], [ -1, %14 ], !dbg !8437
  ret i32 %16, !dbg !8440
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8441 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8442, metadata !DIExpression()), !dbg !8443
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8444, metadata !DIExpression()), !dbg !8445
  %5 = load i32, i32* %3, align 4, !dbg !8446
  %6 = load i32*, i32** %4, align 4, !dbg !8447
  %7 = call i32 @zephyr_fputc(i32 noundef %5, i32* noundef %6) #10, !dbg !8448
  ret i32 %7, !dbg !8449
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8450 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8452, metadata !DIExpression()), !dbg !8453
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8454, metadata !DIExpression()), !dbg !8455
  br label %5, !dbg !8456

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8457, !srcloc !8459
  br label %6, !dbg !8457

6:                                                ; preds = %5
  %7 = load i32, i32* %3, align 4, !dbg !8460
  %8 = load i32*, i32** %4, align 4, !dbg !8461
  %9 = call i32 @z_impl_zephyr_fputc(i32 noundef %7, i32* noundef %8) #10, !dbg !8462
  ret i32 %9, !dbg !8463
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) #1 !dbg !8464 {
  %3 = alloca i8*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8468, metadata !DIExpression()), !dbg !8469
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8472, metadata !DIExpression()), !dbg !8473
  %7 = load i8*, i8** %3, align 4, !dbg !8474
  %8 = call i32 @strlen(i8* noundef %7) #10, !dbg !8475
  store i32 %8, i32* %5, align 4, !dbg !8473
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8476, metadata !DIExpression()), !dbg !8477
  %9 = load i8*, i8** %3, align 4, !dbg !8478
  %10 = load i32, i32* %5, align 4, !dbg !8479
  %11 = load i32*, i32** %4, align 4, !dbg !8480
  %12 = call i32 @fwrite(i8* noundef %9, i32 noundef 1, i32 noundef %10, i32* noundef %11) #10, !dbg !8481
  store i32 %12, i32* %6, align 4, !dbg !8482
  %13 = load i32, i32* %5, align 4, !dbg !8483
  %14 = load i32, i32* %6, align 4, !dbg !8484
  %15 = icmp eq i32 %13, %14, !dbg !8485
  %16 = zext i1 %15 to i64, !dbg !8483
  %17 = select i1 %15, i32 0, i32 -1, !dbg !8483
  ret i32 %17, !dbg !8486
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8487 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8490, metadata !DIExpression()), !dbg !8491
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8494, metadata !DIExpression()), !dbg !8495
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8496, metadata !DIExpression()), !dbg !8497
  %9 = load i8*, i8** %5, align 4, !dbg !8498
  %10 = load i32, i32* %6, align 4, !dbg !8499
  %11 = load i32, i32* %7, align 4, !dbg !8500
  %12 = load i32*, i32** %8, align 4, !dbg !8501
  %13 = call i32 @zephyr_fwrite(i8* noundef %9, i32 noundef %10, i32 noundef %11, i32* noundef %12) #10, !dbg !8502
  ret i32 %13, !dbg !8503
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8504 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8505, metadata !DIExpression()), !dbg !8506
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8507, metadata !DIExpression()), !dbg !8508
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8509, metadata !DIExpression()), !dbg !8510
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8511, metadata !DIExpression()), !dbg !8512
  br label %9, !dbg !8513

9:                                                ; preds = %4
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8514, !srcloc !8516
  br label %10, !dbg !8514

10:                                               ; preds = %9
  %11 = load i8*, i8** %5, align 4, !dbg !8517
  %12 = load i32, i32* %6, align 4, !dbg !8518
  %13 = load i32, i32* %7, align 4, !dbg !8519
  %14 = load i32*, i32** %8, align 4, !dbg !8520
  %15 = call i32 @z_impl_zephyr_fwrite(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32* noundef %14) #10, !dbg !8521
  ret i32 %15, !dbg !8522
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8523 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8526, metadata !DIExpression()), !dbg !8527
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8528, metadata !DIExpression()), !dbg !8529
  store i32* %3, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !8530, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8532, metadata !DIExpression()), !dbg !8533
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8534, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8536, metadata !DIExpression()), !dbg !8537
  %13 = load i32*, i32** %9, align 4, !dbg !8538
  %14 = icmp ne i32* %13, inttoptr (i32 2 to i32*), !dbg !8540
  br i1 %14, label %15, label %18, !dbg !8541

15:                                               ; preds = %4
  %16 = load i32*, i32** %9, align 4, !dbg !8542
  %17 = icmp ne i32* %16, inttoptr (i32 3 to i32*), !dbg !8543
  br i1 %17, label %24, label %18, !dbg !8544

18:                                               ; preds = %15, %4
  %19 = load i32, i32* %8, align 4, !dbg !8545
  %20 = icmp eq i32 %19, 0, !dbg !8546
  br i1 %20, label %24, label %21, !dbg !8547

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !8548
  %23 = icmp eq i32 %22, 0, !dbg !8549
  br i1 %23, label %24, label %25, !dbg !8550

24:                                               ; preds = %21, %18, %15
  store i32 0, i32* %5, align 4, !dbg !8551
  br label %56, !dbg !8551

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 4, !dbg !8553
  store i8* %26, i8** %12, align 4, !dbg !8554
  %27 = load i32, i32* %8, align 4, !dbg !8555
  store i32 %27, i32* %10, align 4, !dbg !8556
  br label %28, !dbg !8557

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %7, align 4, !dbg !8558
  store i32 %29, i32* %11, align 4, !dbg !8560
  br label %30, !dbg !8561

30:                                               ; preds = %42, %28
  %31 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8562
  %32 = load i8*, i8** %12, align 4, !dbg !8565
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8565
  store i8* %33, i8** %12, align 4, !dbg !8565
  %34 = load i8, i8* %32, align 1, !dbg !8566
  %35 = zext i8 %34 to i32, !dbg !8567
  %36 = call i32 %31(i32 noundef %35) #10, !dbg !8562
  %37 = icmp eq i32 %36, -1, !dbg !8568
  br i1 %37, label %38, label %39, !dbg !8569

38:                                               ; preds = %30
  br label %52, !dbg !8570

39:                                               ; preds = %30
  %40 = load i32, i32* %11, align 4, !dbg !8572
  %41 = add i32 %40, -1, !dbg !8572
  store i32 %41, i32* %11, align 4, !dbg !8572
  br label %42, !dbg !8573

42:                                               ; preds = %39
  %43 = load i32, i32* %11, align 4, !dbg !8574
  %44 = icmp ugt i32 %43, 0, !dbg !8575
  br i1 %44, label %30, label %45, !dbg !8573, !llvm.loop !8576

45:                                               ; preds = %42
  %46 = load i32, i32* %10, align 4, !dbg !8578
  %47 = add i32 %46, -1, !dbg !8578
  store i32 %47, i32* %10, align 4, !dbg !8578
  br label %48, !dbg !8579

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 4, !dbg !8580
  %50 = icmp ugt i32 %49, 0, !dbg !8581
  br i1 %50, label %28, label %51, !dbg !8579, !llvm.loop !8582

51:                                               ; preds = %48
  br label %52, !dbg !8579

52:                                               ; preds = %51, %38
  call void @llvm.dbg.label(metadata !8584), !dbg !8585
  %53 = load i32, i32* %8, align 4, !dbg !8586
  %54 = load i32, i32* %10, align 4, !dbg !8587
  %55 = sub i32 %53, %54, !dbg !8588
  store i32 %55, i32* %5, align 4, !dbg !8589
  br label %56, !dbg !8589

56:                                               ; preds = %52, %24
  %57 = load i32, i32* %5, align 4, !dbg !8590
  ret i32 %57, !dbg !8590
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @puts(i8* noundef %0) #1 !dbg !8591 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8594, metadata !DIExpression()), !dbg !8595
  %4 = load i8*, i8** %3, align 4, !dbg !8596
  %5 = call i32 @fputs(i8* noundef %4, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8598
  %6 = icmp eq i32 %5, -1, !dbg !8599
  br i1 %6, label %7, label %8, !dbg !8600

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !8601
  br label %13, !dbg !8601

8:                                                ; preds = %1
  %9 = call i32 @fputc(i32 noundef 10, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8603
  %10 = icmp eq i32 %9, -1, !dbg !8604
  %11 = zext i1 %10 to i64, !dbg !8603
  %12 = select i1 %10, i32 -1, i32 0, !dbg !8603
  store i32 %12, i32* %2, align 4, !dbg !8605
  br label %13, !dbg !8605

13:                                               ; preds = %8, %7
  %14 = load i32, i32* %2, align 4, !dbg !8606
  ret i32 %14, !dbg !8606
}

; Function Attrs: noinline nounwind optnone
define internal void @sam0_eic_isr(%struct.device.73* noundef %0) #1 !dbg !8607 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.sam0_eic_data*, align 4
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_thread_stack_element*, align 4
  %7 = alloca %struct.sam0_eic_port_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8610, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %3, metadata !8612, metadata !DIExpression()), !dbg !8615
  %8 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8616
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !8617
  %10 = load i8*, i8** %9, align 4, !dbg !8617
  %11 = bitcast i8* %10 to %struct.sam0_eic_data*, !dbg !8616
  store %struct.sam0_eic_data* %11, %struct.sam0_eic_data** %3, align 4, !dbg !8615
  call void @llvm.dbg.declare(metadata i16* %4, metadata !8618, metadata !DIExpression()), !dbg !8619
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8620
  %13 = trunc i32 %12 to i16, !dbg !8621
  store i16 %13, i16* %4, align 2, !dbg !8619
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8622, metadata !DIExpression()), !dbg !8623
  %14 = load i16, i16* %4, align 2, !dbg !8624
  %15 = zext i16 %14 to i32, !dbg !8624
  store volatile i32 %15, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8625
  %16 = load i16, i16* %4, align 2, !dbg !8626
  %17 = zext i16 %16 to i32, !dbg !8626
  %18 = and i32 %17, 255, !dbg !8628
  %19 = icmp ne i32 %18, 0, !dbg !8628
  br i1 %19, label %20, label %21, !dbg !8629

20:                                               ; preds = %1
  store i32 0, i32* %5, align 4, !dbg !8630
  br label %26, !dbg !8632

21:                                               ; preds = %1
  store i32 8, i32* %5, align 4, !dbg !8633
  %22 = load i16, i16* %4, align 2, !dbg !8635
  %23 = zext i16 %22 to i32, !dbg !8635
  %24 = ashr i32 %23, 8, !dbg !8635
  %25 = trunc i32 %24 to i16, !dbg !8635
  store i16 %25, i16* %4, align 2, !dbg !8635
  br label %26

26:                                               ; preds = %21, %20
  br label %27, !dbg !8636

27:                                               ; preds = %62, %26
  %28 = load i16, i16* %4, align 2, !dbg !8637
  %29 = icmp ne i16 %28, 0, !dbg !8640
  br i1 %29, label %30, label %69, !dbg !8640

30:                                               ; preds = %27
  %31 = load i16, i16* %4, align 2, !dbg !8641
  %32 = zext i16 %31 to i32, !dbg !8641
  %33 = and i32 %32, 1, !dbg !8644
  %34 = icmp ne i32 %33, 0, !dbg !8644
  br i1 %34, label %36, label %35, !dbg !8645

35:                                               ; preds = %30
  br label %62, !dbg !8646

36:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %6, metadata !8648, metadata !DIExpression()), !dbg !8650
  %37 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8651
  %38 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %37, i32 0, i32 1, !dbg !8652
  %39 = load i32, i32* %5, align 4, !dbg !8653
  %40 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %38, i32 0, i32 %39, !dbg !8651
  store %struct.z_thread_stack_element* %40, %struct.z_thread_stack_element** %6, align 4, !dbg !8650
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %7, metadata !8654, metadata !DIExpression()), !dbg !8656
  %41 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8657
  %42 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %41, i32 0, i32 0, !dbg !8658
  %43 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8659
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8660
  %45 = load i8, i8* %44, align 1, !dbg !8660
  %46 = lshr i8 %45, 5, !dbg !8660
  %47 = and i8 %46, 3, !dbg !8660
  %48 = zext i8 %47 to i32, !dbg !8657
  %49 = getelementptr inbounds [2 x %struct.sam0_eic_port_data], [2 x %struct.sam0_eic_port_data]* %42, i32 0, i32 %48, !dbg !8657
  store %struct.sam0_eic_port_data* %49, %struct.sam0_eic_port_data** %7, align 4, !dbg !8656
  %50 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8661
  %51 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %50, i32 0, i32 0, !dbg !8662
  %52 = load void (i32, i8*)*, void (i32, i8*)** %51, align 4, !dbg !8662
  %53 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8663
  %54 = bitcast %struct.z_thread_stack_element* %53 to i8*, !dbg !8663
  %55 = load i8, i8* %54, align 1, !dbg !8663
  %56 = and i8 %55, 31, !dbg !8663
  %57 = zext i8 %56 to i32, !dbg !8663
  %58 = shl i32 1, %57, !dbg !8663
  %59 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8664
  %60 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %59, i32 0, i32 1, !dbg !8665
  %61 = load i8*, i8** %60, align 4, !dbg !8665
  call void %52(i32 noundef %58, i8* noundef %61) #10, !dbg !8661
  br label %62, !dbg !8666

62:                                               ; preds = %36, %35
  %63 = load i16, i16* %4, align 2, !dbg !8667
  %64 = zext i16 %63 to i32, !dbg !8667
  %65 = ashr i32 %64, 1, !dbg !8667
  %66 = trunc i32 %65 to i16, !dbg !8667
  store i16 %66, i16* %4, align 2, !dbg !8667
  %67 = load i32, i32* %5, align 4, !dbg !8668
  %68 = add i32 %67, 1, !dbg !8668
  store i32 %68, i32* %5, align 4, !dbg !8668
  br label %27, !dbg !8669, !llvm.loop !8670

69:                                               ; preds = %27
  ret void, !dbg !8672
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_init(%struct.device.73* noundef %0) #1 !dbg !1605 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8673, metadata !DIExpression()), !dbg !8674
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8675
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8676
  %5 = and i32 %4, -65, !dbg !8676
  %6 = or i32 %5, 64, !dbg !8676
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8676
  store volatile i16 16389, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !8677
  br label %7, !dbg !8678

7:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #10, !dbg !8679
  call void @arch_irq_enable(i32 noundef 4) #10, !dbg !8682
  br label %8, !dbg !8682

8:                                                ; preds = %7
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8683
  call void @wait_synchronization() #10, !dbg !8684
  ret i32 0, !dbg !8685
}

; Function Attrs: noinline nounwind optnone
define internal void @set_eic_enable(i1 noundef zeroext %0) #1 !dbg !8686 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !8689, metadata !DIExpression()), !dbg !8690
  %4 = load i8, i8* %2, align 1, !dbg !8691
  %5 = trunc i8 %4 to i1, !dbg !8691
  %6 = zext i1 %5 to i8, !dbg !8691
  %7 = load volatile i8, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8692
  %8 = and i8 %6, 1, !dbg !8692
  %9 = shl i8 %8, 1, !dbg !8692
  %10 = and i8 %7, -3, !dbg !8692
  %11 = or i8 %10, %9, !dbg !8692
  store volatile i8 %11, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8692
  ret void, !dbg !8693
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization() #1 !dbg !8694 {
  br label %1, !dbg !8695

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !8696
  %3 = lshr i8 %2, 7, !dbg !8696
  %4 = icmp ne i8 %3, 0, !dbg !8695
  br i1 %4, label %5, label %6, !dbg !8695

5:                                                ; preds = %1
  br label %1, !dbg !8695, !llvm.loop !8697

6:                                                ; preds = %1
  ret void, !dbg !8699
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_acquire(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3, void (i32, i8*)* noundef %4, i8* noundef %5) #1 !dbg !8700 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca void (i32, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca %struct.device.73*, align 4
  %18 = alloca %struct.sam0_eic_data*, align 4
  %19 = alloca %struct.sam0_eic_port_data*, align 4
  %20 = alloca %struct.z_thread_stack_element*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8703, metadata !DIExpression()), !dbg !8704
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8705, metadata !DIExpression()), !dbg !8706
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8707, metadata !DIExpression()), !dbg !8708
  %27 = zext i1 %3 to i8
  store i8 %27, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !8709, metadata !DIExpression()), !dbg !8710
  store void (i32, i8*)* %4, void (i32, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i32, i8*)** %15, metadata !8711, metadata !DIExpression()), !dbg !8712
  store i8* %5, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.device.73** %17, metadata !8715, metadata !DIExpression()), !dbg !8717
  store %struct.device.73* @__device_dts_ord_20, %struct.device.73** %17, align 4, !dbg !8717
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %18, metadata !8718, metadata !DIExpression()), !dbg !8719
  %28 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_20, i32 0, i32 4), align 4, !dbg !8720
  %29 = bitcast i8* %28 to %struct.sam0_eic_data*, !dbg !8721
  store %struct.sam0_eic_data* %29, %struct.sam0_eic_data** %18, align 4, !dbg !8719
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %19, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %20, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8732, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8736, metadata !DIExpression()), !dbg !8737
  %30 = load i32, i32* %11, align 4, !dbg !8738
  %31 = load i32, i32* %12, align 4, !dbg !8739
  %32 = call i32 @sam0_eic_map_to_line(i32 noundef %30, i32 noundef %31) #10, !dbg !8740
  store i32 %32, i32* %22, align 4, !dbg !8741
  %33 = load i32, i32* %22, align 4, !dbg !8742
  %34 = icmp slt i32 %33, 0, !dbg !8744
  br i1 %34, label %35, label %37, !dbg !8745

35:                                               ; preds = %6
  %36 = load i32, i32* %22, align 4, !dbg !8746
  store i32 %36, i32* %10, align 4, !dbg !8748
  br label %170, !dbg !8748

37:                                               ; preds = %6
  %38 = load i32, i32* %22, align 4, !dbg !8749
  %39 = shl i32 1, %38, !dbg !8749
  store i32 %39, i32* %21, align 4, !dbg !8750
  %40 = load i32, i32* %22, align 4, !dbg !8751
  %41 = sdiv i32 %40, 8, !dbg !8752
  store i32 %41, i32* %23, align 4, !dbg !8753
  %42 = load i32, i32* %22, align 4, !dbg !8754
  %43 = srem i32 %42, 8, !dbg !8755
  %44 = mul nsw i32 %43, 4, !dbg !8756
  store i32 %44, i32* %24, align 4, !dbg !8757
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8758, metadata !DIExpression()) #9, !dbg !8760
  %45 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8762, !srcloc !8763
  store i32 %45, i32* %9, align 4, !dbg !8762
  %46 = load i32, i32* %9, align 4, !dbg !8764
  store i32 %46, i32* %25, align 4, !dbg !8765
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8766
  %47 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8767
  %48 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %47, i32 0, i32 1, !dbg !8768
  %49 = load i32, i32* %22, align 4, !dbg !8769
  %50 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %48, i32 0, i32 %49, !dbg !8767
  store %struct.z_thread_stack_element* %50, %struct.z_thread_stack_element** %20, align 4, !dbg !8770
  %51 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8771
  %52 = bitcast %struct.z_thread_stack_element* %51 to i8*, !dbg !8773
  %53 = load i8, i8* %52, align 1, !dbg !8773
  %54 = lshr i8 %53, 7, !dbg !8773
  %55 = icmp ne i8 %54, 0, !dbg !8771
  br i1 %55, label %56, label %75, !dbg !8774

56:                                               ; preds = %37
  %57 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8775
  %58 = bitcast %struct.z_thread_stack_element* %57 to i8*, !dbg !8778
  %59 = load i8, i8* %58, align 1, !dbg !8778
  %60 = lshr i8 %59, 5, !dbg !8778
  %61 = and i8 %60, 3, !dbg !8778
  %62 = zext i8 %61 to i32, !dbg !8775
  %63 = load i32, i32* %11, align 4, !dbg !8779
  %64 = icmp ne i32 %62, %63, !dbg !8780
  br i1 %64, label %73, label %65, !dbg !8781

65:                                               ; preds = %56
  %66 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8782
  %67 = bitcast %struct.z_thread_stack_element* %66 to i8*, !dbg !8783
  %68 = load i8, i8* %67, align 1, !dbg !8783
  %69 = and i8 %68, 31, !dbg !8783
  %70 = zext i8 %69 to i32, !dbg !8782
  %71 = load i32, i32* %12, align 4, !dbg !8784
  %72 = icmp ne i32 %70, %71, !dbg !8785
  br i1 %72, label %73, label %74, !dbg !8786

73:                                               ; preds = %65, %56
  br label %163, !dbg !8787

74:                                               ; preds = %65
  br label %75, !dbg !8789

75:                                               ; preds = %74, %37
  %76 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8790
  %77 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %76, i32 0, i32 0, !dbg !8791
  %78 = load i32, i32* %11, align 4, !dbg !8792
  %79 = getelementptr inbounds [2 x %struct.sam0_eic_port_data], [2 x %struct.sam0_eic_port_data]* %77, i32 0, i32 %78, !dbg !8790
  store %struct.sam0_eic_port_data* %79, %struct.sam0_eic_port_data** %19, align 4, !dbg !8793
  %80 = load void (i32, i8*)*, void (i32, i8*)** %15, align 4, !dbg !8794
  %81 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8795
  %82 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %81, i32 0, i32 0, !dbg !8796
  store void (i32, i8*)* %80, void (i32, i8*)** %82, align 4, !dbg !8797
  %83 = load i8*, i8** %16, align 4, !dbg !8798
  %84 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8799
  %85 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %84, i32 0, i32 1, !dbg !8800
  store i8* %83, i8** %85, align 4, !dbg !8801
  %86 = load i32, i32* %12, align 4, !dbg !8802
  %87 = trunc i32 %86 to i8, !dbg !8802
  %88 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8803
  %89 = bitcast %struct.z_thread_stack_element* %88 to i8*, !dbg !8804
  %90 = load i8, i8* %89, align 1, !dbg !8805
  %91 = and i8 %87, 31, !dbg !8805
  %92 = and i8 %90, -32, !dbg !8805
  %93 = or i8 %92, %91, !dbg !8805
  store i8 %93, i8* %89, align 1, !dbg !8805
  %94 = load i32, i32* %11, align 4, !dbg !8806
  %95 = trunc i32 %94 to i8, !dbg !8806
  %96 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8807
  %97 = bitcast %struct.z_thread_stack_element* %96 to i8*, !dbg !8808
  %98 = load i8, i8* %97, align 1, !dbg !8809
  %99 = and i8 %95, 3, !dbg !8809
  %100 = shl i8 %99, 5, !dbg !8809
  %101 = and i8 %98, -97, !dbg !8809
  %102 = or i8 %101, %100, !dbg !8809
  store i8 %102, i8* %97, align 1, !dbg !8809
  %103 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8810
  %104 = bitcast %struct.z_thread_stack_element* %103 to i8*, !dbg !8811
  %105 = load i8, i8* %104, align 1, !dbg !8812
  %106 = and i8 %105, 127, !dbg !8812
  %107 = or i8 %106, -128, !dbg !8812
  store i8 %107, i8* %104, align 1, !dbg !8812
  %108 = load i32, i32* %23, align 4, !dbg !8813
  %109 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %108, !dbg !8814
  %110 = bitcast %union.PORT_DIR_Type* %109 to i32*, !dbg !8815
  %111 = load volatile i32, i32* %110, align 4, !dbg !8815
  store i32 %111, i32* %26, align 4, !dbg !8816
  %112 = load i32, i32* %24, align 4, !dbg !8817
  %113 = shl i32 15, %112, !dbg !8818
  %114 = xor i32 %113, -1, !dbg !8819
  %115 = load i32, i32* %26, align 4, !dbg !8820
  %116 = and i32 %115, %114, !dbg !8820
  store i32 %116, i32* %26, align 4, !dbg !8820
  %117 = load i32, i32* %13, align 4, !dbg !8821
  switch i32 %117, label %143 [
    i32 0, label %118
    i32 1, label %123
    i32 2, label %128
    i32 3, label %133
    i32 4, label %138
  ], !dbg !8822

118:                                              ; preds = %75
  %119 = load i32, i32* %24, align 4, !dbg !8823
  %120 = shl i32 1, %119, !dbg !8825
  %121 = load i32, i32* %26, align 4, !dbg !8826
  %122 = or i32 %121, %120, !dbg !8826
  store i32 %122, i32* %26, align 4, !dbg !8826
  br label %143, !dbg !8827

123:                                              ; preds = %75
  %124 = load i32, i32* %24, align 4, !dbg !8828
  %125 = shl i32 2, %124, !dbg !8829
  %126 = load i32, i32* %26, align 4, !dbg !8830
  %127 = or i32 %126, %125, !dbg !8830
  store i32 %127, i32* %26, align 4, !dbg !8830
  br label %143, !dbg !8831

128:                                              ; preds = %75
  %129 = load i32, i32* %24, align 4, !dbg !8832
  %130 = shl i32 3, %129, !dbg !8833
  %131 = load i32, i32* %26, align 4, !dbg !8834
  %132 = or i32 %131, %130, !dbg !8834
  store i32 %132, i32* %26, align 4, !dbg !8834
  br label %143, !dbg !8835

133:                                              ; preds = %75
  %134 = load i32, i32* %24, align 4, !dbg !8836
  %135 = shl i32 4, %134, !dbg !8837
  %136 = load i32, i32* %26, align 4, !dbg !8838
  %137 = or i32 %136, %135, !dbg !8838
  store i32 %137, i32* %26, align 4, !dbg !8838
  br label %143, !dbg !8839

138:                                              ; preds = %75
  %139 = load i32, i32* %24, align 4, !dbg !8840
  %140 = shl i32 5, %139, !dbg !8841
  %141 = load i32, i32* %26, align 4, !dbg !8842
  %142 = or i32 %141, %140, !dbg !8842
  store i32 %142, i32* %26, align 4, !dbg !8842
  br label %143, !dbg !8843

143:                                              ; preds = %75, %138, %133, %128, %123, %118
  %144 = load i8, i8* %14, align 1, !dbg !8844
  %145 = trunc i8 %144 to i1, !dbg !8844
  br i1 %145, label %146, label %151, !dbg !8846

146:                                              ; preds = %143
  %147 = load i32, i32* %24, align 4, !dbg !8847
  %148 = shl i32 8, %147, !dbg !8849
  %149 = load i32, i32* %26, align 4, !dbg !8850
  %150 = or i32 %149, %148, !dbg !8850
  store i32 %150, i32* %26, align 4, !dbg !8850
  br label %151, !dbg !8851

151:                                              ; preds = %146, %143
  %152 = load i32, i32* %26, align 4, !dbg !8852
  %153 = load i32, i32* %23, align 4, !dbg !8853
  %154 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %153, !dbg !8854
  %155 = bitcast %union.PORT_DIR_Type* %154 to i32*, !dbg !8855
  store volatile i32 %152, i32* %155, align 4, !dbg !8856
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8857
  call void @wait_synchronization() #10, !dbg !8858
  %156 = load i32, i32* %21, align 4, !dbg !8859
  store volatile i32 %156, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8860
  %157 = load i32, i32* %25, align 4, !dbg !8861
  store i32 %157, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8862, metadata !DIExpression()) #9, !dbg !8864
  %158 = load i32, i32* %7, align 4, !dbg !8866
  %159 = icmp ne i32 %158, 0, !dbg !8868
  br i1 %159, label %160, label %161, !dbg !8869

160:                                              ; preds = %151
  br label %162, !dbg !8870

161:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8872, !srcloc !8873
  br label %162, !dbg !8874

162:                                              ; preds = %160, %161
  store i32 0, i32* %10, align 4, !dbg !8875
  br label %170, !dbg !8875

163:                                              ; preds = %73
  call void @llvm.dbg.label(metadata !8876), !dbg !8877
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8878
  call void @wait_synchronization() #10, !dbg !8879
  %164 = load i32, i32* %25, align 4, !dbg !8880
  store i32 %164, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8862, metadata !DIExpression()) #9, !dbg !8881
  %165 = load i32, i32* %8, align 4, !dbg !8883
  %166 = icmp ne i32 %165, 0, !dbg !8884
  br i1 %166, label %167, label %168, !dbg !8885

167:                                              ; preds = %163
  br label %169, !dbg !8886

168:                                              ; preds = %163
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8887, !srcloc !8873
  br label %169, !dbg !8888

169:                                              ; preds = %167, %168
  store i32 -16, i32* %10, align 4, !dbg !8889
  br label %170, !dbg !8889

170:                                              ; preds = %169, %162, %35
  %171 = load i32, i32* %10, align 4, !dbg !8890
  ret i32 %171, !dbg !8890
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #1 !dbg !8891 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8894, metadata !DIExpression()), !dbg !8895
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8896, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.declare(metadata i8* %6, metadata !8898, metadata !DIExpression()), !dbg !8899
  %7 = load i32, i32* %4, align 4, !dbg !8900
  %8 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* @sam0_eic_channels, i32 0, i32 %7, !dbg !8901
  %9 = load i32, i32* %5, align 4, !dbg !8902
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 %9, !dbg !8901
  %11 = load i8, i8* %10, align 1, !dbg !8901
  store i8 %11, i8* %6, align 1, !dbg !8899
  %12 = load i8, i8* %6, align 1, !dbg !8903
  %13 = zext i8 %12 to i32, !dbg !8903
  %14 = icmp eq i32 %13, 255, !dbg !8905
  br i1 %14, label %15, label %16, !dbg !8906

15:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !8907
  br label %19, !dbg !8907

16:                                               ; preds = %2
  %17 = load i8, i8* %6, align 1, !dbg !8909
  %18 = zext i8 %17 to i32, !dbg !8909
  store i32 %18, i32* %3, align 4, !dbg !8910
  br label %19, !dbg !8910

19:                                               ; preds = %16, %15
  %20 = load i32, i32* %3, align 4, !dbg !8911
  ret i32 %20, !dbg !8911
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_release(i32 noundef %0, i32 noundef %1) #1 !dbg !8912 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8913, metadata !DIExpression()), !dbg !8914
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8915, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !8917, metadata !DIExpression()), !dbg !8918
  store %struct.device.73* @__device_dts_ord_20, %struct.device.73** %8, align 4, !dbg !8918
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !8919, metadata !DIExpression()), !dbg !8920
  %15 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_20, i32 0, i32 4), align 4, !dbg !8921
  %16 = bitcast i8* %15 to %struct.sam0_eic_data*, !dbg !8922
  store %struct.sam0_eic_data* %16, %struct.sam0_eic_data** %9, align 4, !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8923, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8929, metadata !DIExpression()), !dbg !8930
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8931, metadata !DIExpression()), !dbg !8932
  %17 = load i32, i32* %6, align 4, !dbg !8933
  %18 = load i32, i32* %7, align 4, !dbg !8934
  %19 = call i32 @sam0_eic_map_to_line(i32 noundef %17, i32 noundef %18) #10, !dbg !8935
  store i32 %19, i32* %11, align 4, !dbg !8936
  %20 = load i32, i32* %11, align 4, !dbg !8937
  %21 = icmp slt i32 %20, 0, !dbg !8939
  br i1 %21, label %22, label %24, !dbg !8940

22:                                               ; preds = %2
  %23 = load i32, i32* %11, align 4, !dbg !8941
  store i32 %23, i32* %5, align 4, !dbg !8943
  br label %65, !dbg !8943

24:                                               ; preds = %2
  %25 = load i32, i32* %11, align 4, !dbg !8944
  %26 = shl i32 1, %25, !dbg !8944
  store i32 %26, i32* %10, align 4, !dbg !8945
  %27 = load i32, i32* %11, align 4, !dbg !8946
  %28 = sdiv i32 %27, 8, !dbg !8947
  store i32 %28, i32* %12, align 4, !dbg !8948
  %29 = load i32, i32* %11, align 4, !dbg !8949
  %30 = srem i32 %29, 8, !dbg !8950
  %31 = mul nsw i32 %30, 4, !dbg !8951
  store i32 %31, i32* %13, align 4, !dbg !8952
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8758, metadata !DIExpression()) #9, !dbg !8953
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8955, !srcloc !8763
  store i32 %32, i32* %4, align 4, !dbg !8955
  %33 = load i32, i32* %4, align 4, !dbg !8956
  store i32 %33, i32* %14, align 4, !dbg !8957
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8958
  call void @wait_synchronization() #10, !dbg !8959
  %34 = load i32, i32* %6, align 4, !dbg !8960
  %35 = load i32, i32* %7, align 4, !dbg !8962
  %36 = load i32, i32* %11, align 4, !dbg !8963
  %37 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %34, i32 noundef %35, i32 noundef %36) #10, !dbg !8964
  br i1 %37, label %39, label %38, !dbg !8965

38:                                               ; preds = %24
  br label %58, !dbg !8966

39:                                               ; preds = %24
  %40 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !8968
  %41 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %40, i32 0, i32 1, !dbg !8969
  %42 = load i32, i32* %11, align 4, !dbg !8970
  %43 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %41, i32 0, i32 %42, !dbg !8968
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8971
  %45 = load i8, i8* %44, align 1, !dbg !8972
  %46 = and i8 %45, 127, !dbg !8972
  %47 = or i8 %46, 0, !dbg !8972
  store i8 %47, i8* %44, align 1, !dbg !8972
  %48 = load i32, i32* %13, align 4, !dbg !8973
  %49 = shl i32 15, %48, !dbg !8974
  %50 = xor i32 %49, -1, !dbg !8975
  %51 = load i32, i32* %12, align 4, !dbg !8976
  %52 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %51, !dbg !8977
  %53 = bitcast %union.PORT_DIR_Type* %52 to i32*, !dbg !8978
  %54 = load volatile i32, i32* %53, align 4, !dbg !8979
  %55 = and i32 %54, %50, !dbg !8979
  store volatile i32 %55, i32* %53, align 4, !dbg !8979
  %56 = load i32, i32* %10, align 4, !dbg !8980
  store volatile i32 %56, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !8981
  %57 = load i32, i32* %10, align 4, !dbg !8982
  store volatile i32 %57, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8983
  br label %58, !dbg !8984

58:                                               ; preds = %39, %38
  call void @llvm.dbg.label(metadata !8985), !dbg !8986
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8987
  call void @wait_synchronization() #10, !dbg !8988
  %59 = load i32, i32* %14, align 4, !dbg !8989
  store i32 %59, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8862, metadata !DIExpression()) #9, !dbg !8990
  %60 = load i32, i32* %3, align 4, !dbg !8992
  %61 = icmp ne i32 %60, 0, !dbg !8993
  br i1 %61, label %62, label %63, !dbg !8994

62:                                               ; preds = %58
  br label %64, !dbg !8995

63:                                               ; preds = %58
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8996, !srcloc !8873
  br label %64, !dbg !8997

64:                                               ; preds = %62, %63
  store i32 0, i32* %5, align 4, !dbg !8998
  br label %65, !dbg !8998

65:                                               ; preds = %64, %22
  %66 = load i32, i32* %5, align 4, !dbg !8999
  ret i32 %66, !dbg !8999
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9000 {
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca %struct.z_thread_stack_element*, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9005, metadata !DIExpression()), !dbg !9006
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !9009, metadata !DIExpression()), !dbg !9010
  store %struct.device.73* @__device_dts_ord_20, %struct.device.73** %8, align 4, !dbg !9010
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !9011, metadata !DIExpression()), !dbg !9012
  %11 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_20, i32 0, i32 4), align 4, !dbg !9013
  %12 = bitcast i8* %11 to %struct.sam0_eic_data*, !dbg !9014
  store %struct.sam0_eic_data* %12, %struct.sam0_eic_data** %9, align 4, !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %10, metadata !9015, metadata !DIExpression()), !dbg !9016
  %13 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !9017
  %14 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %13, i32 0, i32 1, !dbg !9018
  %15 = load i32, i32* %7, align 4, !dbg !9019
  %16 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %14, i32 0, i32 %15, !dbg !9017
  store %struct.z_thread_stack_element* %16, %struct.z_thread_stack_element** %10, align 4, !dbg !9016
  %17 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !9020
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9022
  %19 = load i8, i8* %18, align 1, !dbg !9022
  %20 = lshr i8 %19, 7, !dbg !9022
  %21 = icmp ne i8 %20, 0, !dbg !9020
  br i1 %21, label %23, label %22, !dbg !9023

22:                                               ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !9024
  br label %42, !dbg !9024

23:                                               ; preds = %3
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !9026
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !9028
  %26 = load i8, i8* %25, align 1, !dbg !9028
  %27 = lshr i8 %26, 5, !dbg !9028
  %28 = and i8 %27, 3, !dbg !9028
  %29 = zext i8 %28 to i32, !dbg !9026
  %30 = load i32, i32* %5, align 4, !dbg !9029
  %31 = icmp ne i32 %29, %30, !dbg !9030
  br i1 %31, label %40, label %32, !dbg !9031

32:                                               ; preds = %23
  %33 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !9032
  %34 = bitcast %struct.z_thread_stack_element* %33 to i8*, !dbg !9033
  %35 = load i8, i8* %34, align 1, !dbg !9033
  %36 = and i8 %35, 31, !dbg !9033
  %37 = zext i8 %36 to i32, !dbg !9032
  %38 = load i32, i32* %6, align 4, !dbg !9034
  %39 = icmp ne i32 %37, %38, !dbg !9035
  br i1 %39, label %40, label %41, !dbg !9036

40:                                               ; preds = %32, %23
  store i1 false, i1* %4, align 1, !dbg !9037
  br label %42, !dbg !9037

41:                                               ; preds = %32
  store i1 true, i1* %4, align 1, !dbg !9039
  br label %42, !dbg !9039

42:                                               ; preds = %41, %40, %22
  %43 = load i1, i1* %4, align 1, !dbg !9040
  ret i1 %43, !dbg !9040
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_enable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !9041 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9042, metadata !DIExpression()), !dbg !9043
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9044, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9046, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9048, metadata !DIExpression()), !dbg !9049
  %8 = load i32, i32* %4, align 4, !dbg !9050
  %9 = load i32, i32* %5, align 4, !dbg !9051
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !9052
  store i32 %10, i32* %7, align 4, !dbg !9053
  %11 = load i32, i32* %7, align 4, !dbg !9054
  %12 = icmp slt i32 %11, 0, !dbg !9056
  br i1 %12, label %13, label %15, !dbg !9057

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !9058
  store i32 %14, i32* %3, align 4, !dbg !9060
  br label %26, !dbg !9060

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !9061
  %17 = load i32, i32* %5, align 4, !dbg !9063
  %18 = load i32, i32* %7, align 4, !dbg !9064
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !9065
  br i1 %19, label %21, label %20, !dbg !9066

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !9067
  br label %26, !dbg !9067

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !9069
  %23 = shl i32 1, %22, !dbg !9069
  store i32 %23, i32* %6, align 4, !dbg !9070
  %24 = load i32, i32* %6, align 4, !dbg !9071
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !9072
  %25 = load i32, i32* %6, align 4, !dbg !9073
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !9074
  store i32 0, i32* %3, align 4, !dbg !9075
  br label %26, !dbg !9075

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !9076
  ret i32 %27, !dbg !9076
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_disable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !9077 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9078, metadata !DIExpression()), !dbg !9079
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9080, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9082, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9084, metadata !DIExpression()), !dbg !9085
  %8 = load i32, i32* %4, align 4, !dbg !9086
  %9 = load i32, i32* %5, align 4, !dbg !9087
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !9088
  store i32 %10, i32* %7, align 4, !dbg !9089
  %11 = load i32, i32* %7, align 4, !dbg !9090
  %12 = icmp slt i32 %11, 0, !dbg !9092
  br i1 %12, label %13, label %15, !dbg !9093

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !9094
  store i32 %14, i32* %3, align 4, !dbg !9096
  br label %26, !dbg !9096

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !9097
  %17 = load i32, i32* %5, align 4, !dbg !9099
  %18 = load i32, i32* %7, align 4, !dbg !9100
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !9101
  br i1 %19, label %21, label %20, !dbg !9102

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !9103
  br label %26, !dbg !9103

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !9105
  %23 = shl i32 1, %22, !dbg !9105
  store i32 %23, i32* %6, align 4, !dbg !9106
  %24 = load i32, i32* %6, align 4, !dbg !9107
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !9108
  %25 = load i32, i32* %6, align 4, !dbg !9109
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !9110
  store i32 0, i32* %3, align 4, !dbg !9111
  br label %26, !dbg !9111

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !9112
  ret i32 %27, !dbg !9112
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_interrupt_pending(i32 noundef %0) #1 !dbg !9113 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.sam0_eic_data*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9116, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9118, metadata !DIExpression()), !dbg !9119
  store %struct.device.73* @__device_dts_ord_20, %struct.device.73** %3, align 4, !dbg !9119
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %4, metadata !9120, metadata !DIExpression()), !dbg !9121
  %9 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_20, i32 0, i32 4), align 4, !dbg !9122
  %10 = bitcast i8* %9 to %struct.sam0_eic_data*, !dbg !9123
  store %struct.sam0_eic_data* %10, %struct.sam0_eic_data** %4, align 4, !dbg !9121
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !9124, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9126, metadata !DIExpression()), !dbg !9127
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !9128
  store i32 %11, i32* %6, align 4, !dbg !9127
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9129, metadata !DIExpression()), !dbg !9130
  store i32 0, i32* %7, align 4, !dbg !9130
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9131, metadata !DIExpression()), !dbg !9133
  store i32 0, i32* %8, align 4, !dbg !9133
  br label %12, !dbg !9134

12:                                               ; preds = %52, %1
  %13 = load i32, i32* %8, align 4, !dbg !9135
  %14 = icmp slt i32 %13, 16, !dbg !9137
  br i1 %14, label %15, label %55, !dbg !9138

15:                                               ; preds = %12
  %16 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %4, align 4, !dbg !9139
  %17 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %16, i32 0, i32 1, !dbg !9141
  %18 = load i32, i32* %8, align 4, !dbg !9142
  %19 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %17, i32 0, i32 %18, !dbg !9139
  store %struct.z_thread_stack_element* %19, %struct.z_thread_stack_element** %5, align 4, !dbg !9143
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !9144
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !9146
  %22 = load i8, i8* %21, align 1, !dbg !9146
  %23 = lshr i8 %22, 7, !dbg !9146
  %24 = icmp ne i8 %23, 0, !dbg !9144
  br i1 %24, label %26, label %25, !dbg !9147

25:                                               ; preds = %15
  br label %52, !dbg !9148

26:                                               ; preds = %15
  %27 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !9150
  %28 = bitcast %struct.z_thread_stack_element* %27 to i8*, !dbg !9152
  %29 = load i8, i8* %28, align 1, !dbg !9152
  %30 = lshr i8 %29, 5, !dbg !9152
  %31 = and i8 %30, 3, !dbg !9152
  %32 = zext i8 %31 to i32, !dbg !9150
  %33 = load i32, i32* %2, align 4, !dbg !9153
  %34 = icmp ne i32 %32, %33, !dbg !9154
  br i1 %34, label %35, label %36, !dbg !9155

35:                                               ; preds = %26
  br label %52, !dbg !9156

36:                                               ; preds = %26
  %37 = load i32, i32* %6, align 4, !dbg !9158
  %38 = load i32, i32* %8, align 4, !dbg !9160
  %39 = shl i32 1, %38, !dbg !9160
  %40 = and i32 %37, %39, !dbg !9161
  %41 = icmp ne i32 %40, 0, !dbg !9161
  br i1 %41, label %43, label %42, !dbg !9162

42:                                               ; preds = %36
  br label %52, !dbg !9163

43:                                               ; preds = %36
  %44 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !9165
  %45 = bitcast %struct.z_thread_stack_element* %44 to i8*, !dbg !9165
  %46 = load i8, i8* %45, align 1, !dbg !9165
  %47 = and i8 %46, 31, !dbg !9165
  %48 = zext i8 %47 to i32, !dbg !9165
  %49 = shl i32 1, %48, !dbg !9165
  %50 = load i32, i32* %7, align 4, !dbg !9166
  %51 = or i32 %50, %49, !dbg !9166
  store i32 %51, i32* %7, align 4, !dbg !9166
  br label %52, !dbg !9167

52:                                               ; preds = %43, %42, %35, %25
  %53 = load i32, i32* %8, align 4, !dbg !9168
  %54 = add nsw i32 %53, 1, !dbg !9168
  store i32 %54, i32* %8, align 4, !dbg !9168
  br label %12, !dbg !9169, !llvm.loop !9170

55:                                               ; preds = %12
  %56 = load i32, i32* %7, align 4, !dbg !9172
  ret i32 %56, !dbg !9173
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_console_init(%struct.device.73* noundef %0) #1 !dbg !9174 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9175, metadata !DIExpression()), !dbg !9176
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9177
  %5 = call zeroext i1 @device_is_ready(%struct.device.73* noundef @__device_dts_ord_29) #10, !dbg !9178
  br i1 %5, label %7, label %6, !dbg !9180

6:                                                ; preds = %1
  store i32 -19, i32* %2, align 4, !dbg !9181
  br label %8, !dbg !9181

7:                                                ; preds = %1
  call void @uart_console_hook_install() #10, !dbg !9183
  store i32 0, i32* %2, align 4, !dbg !9184
  br label %8, !dbg !9184

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !9185
  ret i32 %9, !dbg !9185
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @device_is_ready(%struct.device.73* noundef %0) #1 !dbg !9186 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9190, metadata !DIExpression()), !dbg !9191
  br label %3, !dbg !9192

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !9193, !srcloc !9195
  br label %4, !dbg !9193

4:                                                ; preds = %3
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9196
  %6 = call zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %5) #10, !dbg !9197
  ret i1 %6, !dbg !9198
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_console_hook_install() #1 !dbg !9199 {
  call void @__stdout_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !9200
  call void @__printk_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !9201
  ret void, !dbg !9202
}

; Function Attrs: noinline nounwind optnone
define internal i32 @console_out(i32 noundef %0) #1 !dbg !9203 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9204, metadata !DIExpression()), !dbg !9205
  %3 = load i32, i32* %2, align 4, !dbg !9206
  %4 = icmp eq i32 10, %3, !dbg !9208
  br i1 %4, label %5, label %6, !dbg !9209

5:                                                ; preds = %1
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_29, i8 noundef zeroext 13) #10, !dbg !9210
  br label %6, !dbg !9212

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !9213
  %8 = trunc i32 %7 to i8, !dbg !9213
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_29, i8 noundef zeroext %8) #10, !dbg !9214
  %9 = load i32, i32* %2, align 4, !dbg !9215
  ret i32 %9, !dbg !9216
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !9217 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9219, metadata !DIExpression()), !dbg !9220
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9221, metadata !DIExpression()), !dbg !9222
  br label %5, !dbg !9223

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !9224, !srcloc !9226
  br label %6, !dbg !9224

6:                                                ; preds = %5
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9227
  %8 = load i8, i8* %4, align 1, !dbg !9228
  call void @z_impl_uart_poll_out(%struct.device.73* noundef %7, i8 noundef zeroext %8) #10, !dbg !9229
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !9231 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_driver_api*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9232, metadata !DIExpression()), !dbg !9233
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata %struct.uart_driver_api** %5, metadata !9236, metadata !DIExpression()), !dbg !9237
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9238
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 2, !dbg !9239
  %8 = load i8*, i8** %7, align 4, !dbg !9239
  %9 = bitcast i8* %8 to %struct.uart_driver_api*, !dbg !9240
  store %struct.uart_driver_api* %9, %struct.uart_driver_api** %5, align 4, !dbg !9237
  %10 = load %struct.uart_driver_api*, %struct.uart_driver_api** %5, align 4, !dbg !9241
  %11 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %10, i32 0, i32 1, !dbg !9242
  %12 = load void (%struct.device.73*, i8)*, void (%struct.device.73*, i8)** %11, align 4, !dbg !9242
  %13 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9243
  %14 = load i8, i8* %4, align 1, !dbg !9244
  call void %12(%struct.device.73* noundef %13, i8 noundef zeroext %14) #10, !dbg !9241
  ret void, !dbg !9245
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !9246 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9247, metadata !DIExpression()), !dbg !9248
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9249
  %4 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %3) #10, !dbg !9250
  ret i1 %4, !dbg !9251
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) #1 !dbg !9252 {
  %4 = alloca %struct.k_fifo*, align 4
  %5 = alloca %struct.k_fifo*, align 4
  %6 = alloca i8 (i8*, i8)*, align 4
  store %struct.k_fifo* %0, %struct.k_fifo** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %4, metadata !9298, metadata !DIExpression()), !dbg !9299
  store %struct.k_fifo* %1, %struct.k_fifo** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %5, metadata !9300, metadata !DIExpression()), !dbg !9301
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** %6, align 4
  call void @llvm.dbg.declare(metadata i8 (i8*, i8)** %6, metadata !9302, metadata !DIExpression()), !dbg !9303
  %7 = load %struct.k_fifo*, %struct.k_fifo** %4, align 4, !dbg !9304
  %8 = load %struct.k_fifo*, %struct.k_fifo** %5, align 4, !dbg !9305
  %9 = load i8 (i8*, i8)*, i8 (i8*, i8)** %6, align 4, !dbg !9306
  ret void, !dbg !9307
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_config(%struct.device.73* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9308 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca %struct.gpio_sam0_config*, align 4
  %9 = alloca %struct.gpio_sam0_data*, align 4
  %10 = alloca %struct.PortGroup*, align 4
  %11 = alloca %union.PORT_PMUX_Type, align 1
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9309, metadata !DIExpression()), !dbg !9310
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9311, metadata !DIExpression()), !dbg !9312
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9313, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %8, metadata !9315, metadata !DIExpression()), !dbg !9317
  %12 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9318
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 1, !dbg !9319
  %14 = load i8*, i8** %13, align 4, !dbg !9319
  %15 = bitcast i8* %14 to %struct.gpio_sam0_config*, !dbg !9318
  store %struct.gpio_sam0_config* %15, %struct.gpio_sam0_config** %8, align 4, !dbg !9317
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_data** %9, metadata !9320, metadata !DIExpression()), !dbg !9321
  %16 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9322
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 4, !dbg !9323
  %18 = load i8*, i8** %17, align 4, !dbg !9323
  %19 = bitcast i8* %18 to %struct.gpio_sam0_data*, !dbg !9322
  store %struct.gpio_sam0_data* %19, %struct.gpio_sam0_data** %9, align 4, !dbg !9321
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %10, metadata !9324, metadata !DIExpression()), !dbg !9325
  %20 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %8, align 4, !dbg !9326
  %21 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %20, i32 0, i32 1, !dbg !9327
  %22 = load %struct.PortGroup*, %struct.PortGroup** %21, align 4, !dbg !9327
  store %struct.PortGroup* %22, %struct.PortGroup** %10, align 4, !dbg !9325
  call void @llvm.dbg.declare(metadata %union.PORT_PMUX_Type* %11, metadata !9328, metadata !DIExpression()), !dbg !9329
  %23 = bitcast %union.PORT_PMUX_Type* %11 to i8*, !dbg !9329
  call void @llvm.memset.p0i8.i32(i8* align 1 %23, i8 0, i32 1, i1 false), !dbg !9329
  %24 = load i32, i32* %7, align 4, !dbg !9330
  %25 = and i32 %24, 2, !dbg !9332
  %26 = icmp ne i32 %25, 0, !dbg !9333
  br i1 %26, label %27, label %28, !dbg !9334

27:                                               ; preds = %3
  store i32 -134, i32* %4, align 4, !dbg !9335
  br label %152, !dbg !9335

28:                                               ; preds = %3
  %29 = load i32, i32* %7, align 4, !dbg !9337
  %30 = and i32 %29, 65536, !dbg !9339
  %31 = icmp ne i32 %30, 0, !dbg !9340
  br i1 %31, label %32, label %38, !dbg !9341

32:                                               ; preds = %28
  %33 = bitcast %union.PORT_PMUX_Type* %11 to %struct.z_thread_stack_element*, !dbg !9342
  %34 = bitcast %struct.z_thread_stack_element* %33 to i8*, !dbg !9344
  %35 = load i8, i8* %34, align 1, !dbg !9345
  %36 = and i8 %35, -3, !dbg !9345
  %37 = or i8 %36, 2, !dbg !9345
  store i8 %37, i8* %34, align 1, !dbg !9345
  br label %38, !dbg !9346

38:                                               ; preds = %32, %28
  %39 = load i32, i32* %7, align 4, !dbg !9347
  %40 = and i32 %39, 131072, !dbg !9349
  %41 = icmp ne i32 %40, 0, !dbg !9350
  br i1 %41, label %42, label %77, !dbg !9351

42:                                               ; preds = %38
  %43 = load i32, i32* %7, align 4, !dbg !9352
  %44 = and i32 %43, 48, !dbg !9355
  %45 = icmp ne i32 %44, 0, !dbg !9356
  br i1 %45, label %46, label %47, !dbg !9357

46:                                               ; preds = %42
  store i32 -134, i32* %4, align 4, !dbg !9358
  br label %152, !dbg !9358

47:                                               ; preds = %42
  %48 = load i32, i32* %7, align 4, !dbg !9360
  %49 = and i32 %48, 262144, !dbg !9362
  %50 = icmp ne i32 %49, 0, !dbg !9363
  br i1 %50, label %51, label %58, !dbg !9364

51:                                               ; preds = %47
  %52 = load i8, i8* %6, align 1, !dbg !9365
  %53 = zext i8 %52 to i32, !dbg !9365
  %54 = shl i32 1, %53, !dbg !9365
  %55 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9367
  %56 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %55, i32 0, i32 5, !dbg !9368
  %57 = bitcast %union.PORT_DIR_Type* %56 to i32*, !dbg !9369
  store volatile i32 %54, i32* %57, align 4, !dbg !9370
  br label %70, !dbg !9371

58:                                               ; preds = %47
  %59 = load i32, i32* %7, align 4, !dbg !9372
  %60 = and i32 %59, 524288, !dbg !9374
  %61 = icmp ne i32 %60, 0, !dbg !9375
  br i1 %61, label %62, label %69, !dbg !9376

62:                                               ; preds = %58
  %63 = load i8, i8* %6, align 1, !dbg !9377
  %64 = zext i8 %63 to i32, !dbg !9377
  %65 = shl i32 1, %64, !dbg !9377
  %66 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9379
  %67 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %66, i32 0, i32 6, !dbg !9380
  %68 = bitcast %union.PORT_DIR_Type* %67 to i32*, !dbg !9381
  store volatile i32 %65, i32* %68, align 4, !dbg !9382
  br label %69, !dbg !9383

69:                                               ; preds = %62, %58
  br label %70

70:                                               ; preds = %69, %51
  %71 = load i8, i8* %6, align 1, !dbg !9384
  %72 = zext i8 %71 to i32, !dbg !9384
  %73 = shl i32 1, %72, !dbg !9384
  %74 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9385
  %75 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %74, i32 0, i32 2, !dbg !9386
  %76 = bitcast %union.PORT_DIR_Type* %75 to i32*, !dbg !9387
  store volatile i32 %73, i32* %76, align 4, !dbg !9388
  br label %112, !dbg !9389

77:                                               ; preds = %38
  %78 = load i8, i8* %6, align 1, !dbg !9390
  %79 = zext i8 %78 to i32, !dbg !9390
  %80 = shl i32 1, %79, !dbg !9390
  %81 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9392
  %82 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %81, i32 0, i32 1, !dbg !9393
  %83 = bitcast %union.PORT_DIR_Type* %82 to i32*, !dbg !9394
  store volatile i32 %80, i32* %83, align 4, !dbg !9395
  %84 = load i32, i32* %7, align 4, !dbg !9396
  %85 = and i32 %84, 48, !dbg !9398
  %86 = icmp ne i32 %85, 0, !dbg !9399
  br i1 %86, label %87, label %111, !dbg !9400

87:                                               ; preds = %77
  %88 = bitcast %union.PORT_PMUX_Type* %11 to %struct.z_thread_stack_element*, !dbg !9401
  %89 = bitcast %struct.z_thread_stack_element* %88 to i8*, !dbg !9403
  %90 = load i8, i8* %89, align 1, !dbg !9404
  %91 = and i8 %90, -5, !dbg !9404
  %92 = or i8 %91, 4, !dbg !9404
  store i8 %92, i8* %89, align 1, !dbg !9404
  %93 = load i32, i32* %7, align 4, !dbg !9405
  %94 = and i32 %93, 16, !dbg !9407
  %95 = icmp ne i32 %94, 0, !dbg !9408
  br i1 %95, label %96, label %103, !dbg !9409

96:                                               ; preds = %87
  %97 = load i8, i8* %6, align 1, !dbg !9410
  %98 = zext i8 %97 to i32, !dbg !9410
  %99 = shl i32 1, %98, !dbg !9410
  %100 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9412
  %101 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %100, i32 0, i32 6, !dbg !9413
  %102 = bitcast %union.PORT_DIR_Type* %101 to i32*, !dbg !9414
  store volatile i32 %99, i32* %102, align 4, !dbg !9415
  br label %110, !dbg !9416

103:                                              ; preds = %87
  %104 = load i8, i8* %6, align 1, !dbg !9417
  %105 = zext i8 %104 to i32, !dbg !9417
  %106 = shl i32 1, %105, !dbg !9417
  %107 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9419
  %108 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %107, i32 0, i32 5, !dbg !9420
  %109 = bitcast %union.PORT_DIR_Type* %108 to i32*, !dbg !9421
  store volatile i32 %106, i32* %109, align 4, !dbg !9422
  br label %110

110:                                              ; preds = %103, %96
  br label %111, !dbg !9423

111:                                              ; preds = %110, %77
  br label %112

112:                                              ; preds = %111, %70
  %113 = load i32, i32* %7, align 4, !dbg !9424
  %114 = and i32 %113, 256, !dbg !9424
  %115 = icmp ne i32 %114, 0, !dbg !9424
  br i1 %115, label %116, label %132, !dbg !9424

116:                                              ; preds = %112
  %117 = bitcast %union.PORT_PMUX_Type* %11 to %struct.z_thread_stack_element*, !dbg !9424
  %118 = bitcast %struct.z_thread_stack_element* %117 to i8*, !dbg !9424
  %119 = load i8, i8* %118, align 1, !dbg !9424
  %120 = lshr i8 %119, 1, !dbg !9424
  %121 = and i8 %120, 1, !dbg !9424
  %122 = zext i8 %121 to i32, !dbg !9424
  %123 = icmp ne i32 %122, 0, !dbg !9424
  br i1 %123, label %124, label %132, !dbg !9424

124:                                              ; preds = %116
  %125 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %9, align 4, !dbg !9424
  %126 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %125, i32 0, i32 2, !dbg !9424
  %127 = load i32, i32* %126, align 4, !dbg !9424
  %128 = load i8, i8* %6, align 1, !dbg !9424
  %129 = zext i8 %128 to i32, !dbg !9424
  %130 = shl i32 1, %129, !dbg !9424
  %131 = or i32 %127, %130, !dbg !9424
  br label %141, !dbg !9424

132:                                              ; preds = %116, %112
  %133 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %9, align 4, !dbg !9424
  %134 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %133, i32 0, i32 2, !dbg !9424
  %135 = load i32, i32* %134, align 4, !dbg !9424
  %136 = load i8, i8* %6, align 1, !dbg !9424
  %137 = zext i8 %136 to i32, !dbg !9424
  %138 = shl i32 1, %137, !dbg !9424
  %139 = xor i32 %138, -1, !dbg !9424
  %140 = and i32 %135, %139, !dbg !9424
  br label %141, !dbg !9424

141:                                              ; preds = %132, %124
  %142 = phi i32 [ %131, %124 ], [ %140, %132 ], !dbg !9424
  %143 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %9, align 4, !dbg !9424
  %144 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %143, i32 0, i32 2, !dbg !9424
  store i32 %142, i32* %144, align 4, !dbg !9424
  %145 = load %struct.PortGroup*, %struct.PortGroup** %10, align 4, !dbg !9425
  %146 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %145, i32 0, i32 13, !dbg !9426
  %147 = load i8, i8* %6, align 1, !dbg !9427
  %148 = zext i8 %147 to i32, !dbg !9425
  %149 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %146, i32 0, i32 %148, !dbg !9425
  %150 = bitcast %union.PORT_PMUX_Type* %149 to i8*, !dbg !9428
  %151 = bitcast %union.PORT_PMUX_Type* %11 to i8*, !dbg !9428
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %150, i8* align 1 %151, i32 1, i1 true), !dbg !9428
  store i32 0, i32* %4, align 4, !dbg !9429
  br label %152, !dbg !9429

152:                                              ; preds = %141, %46, %27
  %153 = load i32, i32* %4, align 4, !dbg !9430
  ret i32 %153, !dbg !9430
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_port_get_raw(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !9431 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca %struct.gpio_sam0_config*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9432, metadata !DIExpression()), !dbg !9433
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !9434, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %5, metadata !9436, metadata !DIExpression()), !dbg !9437
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9438
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9439
  %8 = load i8*, i8** %7, align 4, !dbg !9439
  %9 = bitcast i8* %8 to %struct.gpio_sam0_config*, !dbg !9438
  store %struct.gpio_sam0_config* %9, %struct.gpio_sam0_config** %5, align 4, !dbg !9437
  %10 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %5, align 4, !dbg !9440
  %11 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %10, i32 0, i32 1, !dbg !9441
  %12 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9441
  %13 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %12, i32 0, i32 8, !dbg !9442
  %14 = bitcast %union.PORT_DIR_Type* %13 to i32*, !dbg !9443
  %15 = load volatile i32, i32* %14, align 4, !dbg !9443
  %16 = load i32*, i32** %4, align 4, !dbg !9444
  store i32 %15, i32* %16, align 4, !dbg !9445
  ret i32 0, !dbg !9446
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_port_set_masked_raw(%struct.device.73* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9447 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.gpio_sam0_config*, align 4
  %8 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9448, metadata !DIExpression()), !dbg !9449
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9450, metadata !DIExpression()), !dbg !9451
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9452, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %7, metadata !9454, metadata !DIExpression()), !dbg !9455
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9456
  %10 = getelementptr inbounds %struct.device.73, %struct.device.73* %9, i32 0, i32 1, !dbg !9457
  %11 = load i8*, i8** %10, align 4, !dbg !9457
  %12 = bitcast i8* %11 to %struct.gpio_sam0_config*, !dbg !9456
  store %struct.gpio_sam0_config* %12, %struct.gpio_sam0_config** %7, align 4, !dbg !9455
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9458, metadata !DIExpression()), !dbg !9459
  %13 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %7, align 4, !dbg !9460
  %14 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %13, i32 0, i32 1, !dbg !9461
  %15 = load %struct.PortGroup*, %struct.PortGroup** %14, align 4, !dbg !9461
  %16 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %15, i32 0, i32 4, !dbg !9462
  %17 = bitcast %union.PORT_DIR_Type* %16 to i32*, !dbg !9463
  %18 = load volatile i32, i32* %17, align 4, !dbg !9463
  store i32 %18, i32* %8, align 4, !dbg !9459
  %19 = load i32, i32* %8, align 4, !dbg !9464
  %20 = load i32, i32* %5, align 4, !dbg !9465
  %21 = xor i32 %20, -1, !dbg !9466
  %22 = and i32 %19, %21, !dbg !9467
  %23 = load i32, i32* %6, align 4, !dbg !9468
  %24 = load i32, i32* %5, align 4, !dbg !9469
  %25 = and i32 %23, %24, !dbg !9470
  %26 = or i32 %22, %25, !dbg !9471
  %27 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %7, align 4, !dbg !9472
  %28 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %27, i32 0, i32 1, !dbg !9473
  %29 = load %struct.PortGroup*, %struct.PortGroup** %28, align 4, !dbg !9473
  %30 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %29, i32 0, i32 4, !dbg !9474
  %31 = bitcast %union.PORT_DIR_Type* %30 to i32*, !dbg !9475
  store volatile i32 %26, i32* %31, align 4, !dbg !9476
  ret i32 0, !dbg !9477
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_port_set_bits_raw(%struct.device.73* noundef %0, i32 noundef %1) #1 !dbg !9478 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.gpio_sam0_config*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9479, metadata !DIExpression()), !dbg !9480
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9481, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %5, metadata !9483, metadata !DIExpression()), !dbg !9484
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9485
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9486
  %8 = load i8*, i8** %7, align 4, !dbg !9486
  %9 = bitcast i8* %8 to %struct.gpio_sam0_config*, !dbg !9485
  store %struct.gpio_sam0_config* %9, %struct.gpio_sam0_config** %5, align 4, !dbg !9484
  %10 = load i32, i32* %4, align 4, !dbg !9487
  %11 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %5, align 4, !dbg !9488
  %12 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %11, i32 0, i32 1, !dbg !9489
  %13 = load %struct.PortGroup*, %struct.PortGroup** %12, align 4, !dbg !9489
  %14 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %13, i32 0, i32 6, !dbg !9490
  %15 = bitcast %union.PORT_DIR_Type* %14 to i32*, !dbg !9491
  store volatile i32 %10, i32* %15, align 4, !dbg !9492
  ret i32 0, !dbg !9493
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_port_clear_bits_raw(%struct.device.73* noundef %0, i32 noundef %1) #1 !dbg !9494 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.gpio_sam0_config*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9495, metadata !DIExpression()), !dbg !9496
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %5, metadata !9499, metadata !DIExpression()), !dbg !9500
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9501
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9502
  %8 = load i8*, i8** %7, align 4, !dbg !9502
  %9 = bitcast i8* %8 to %struct.gpio_sam0_config*, !dbg !9501
  store %struct.gpio_sam0_config* %9, %struct.gpio_sam0_config** %5, align 4, !dbg !9500
  %10 = load i32, i32* %4, align 4, !dbg !9503
  %11 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %5, align 4, !dbg !9504
  %12 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %11, i32 0, i32 1, !dbg !9505
  %13 = load %struct.PortGroup*, %struct.PortGroup** %12, align 4, !dbg !9505
  %14 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %13, i32 0, i32 5, !dbg !9506
  %15 = bitcast %union.PORT_DIR_Type* %14 to i32*, !dbg !9507
  store volatile i32 %10, i32* %15, align 4, !dbg !9508
  ret i32 0, !dbg !9509
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_port_toggle_bits(%struct.device.73* noundef %0, i32 noundef %1) #1 !dbg !9510 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.gpio_sam0_config*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9511, metadata !DIExpression()), !dbg !9512
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %5, metadata !9515, metadata !DIExpression()), !dbg !9516
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9517
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9518
  %8 = load i8*, i8** %7, align 4, !dbg !9518
  %9 = bitcast i8* %8 to %struct.gpio_sam0_config*, !dbg !9517
  store %struct.gpio_sam0_config* %9, %struct.gpio_sam0_config** %5, align 4, !dbg !9516
  %10 = load i32, i32* %4, align 4, !dbg !9519
  %11 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %5, align 4, !dbg !9520
  %12 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %11, i32 0, i32 1, !dbg !9521
  %13 = load %struct.PortGroup*, %struct.PortGroup** %12, align 4, !dbg !9521
  %14 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %13, i32 0, i32 7, !dbg !9522
  %15 = bitcast %union.PORT_DIR_Type* %14 to i32*, !dbg !9523
  store volatile i32 %10, i32* %15, align 4, !dbg !9524
  ret i32 0, !dbg !9525
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_pin_interrupt_configure(%struct.device.73* noundef %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9526 {
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.gpio_sam0_config*, align 4
  %10 = alloca %struct.gpio_sam0_data*, align 4
  %11 = alloca %struct.PortGroup*, align 4
  %12 = alloca %union.PORT_PMUX_Type, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9527, metadata !DIExpression()), !dbg !9528
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9529, metadata !DIExpression()), !dbg !9530
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9531, metadata !DIExpression()), !dbg !9532
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9533, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %9, metadata !9535, metadata !DIExpression()), !dbg !9536
  %15 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9537
  %16 = getelementptr inbounds %struct.device.73, %struct.device.73* %15, i32 0, i32 1, !dbg !9538
  %17 = load i8*, i8** %16, align 4, !dbg !9538
  %18 = bitcast i8* %17 to %struct.gpio_sam0_config*, !dbg !9537
  store %struct.gpio_sam0_config* %18, %struct.gpio_sam0_config** %9, align 4, !dbg !9536
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_data** %10, metadata !9539, metadata !DIExpression()), !dbg !9541
  %19 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9542
  %20 = getelementptr inbounds %struct.device.73, %struct.device.73* %19, i32 0, i32 4, !dbg !9543
  %21 = load i8*, i8** %20, align 4, !dbg !9543
  %22 = bitcast i8* %21 to %struct.gpio_sam0_data*, !dbg !9542
  store %struct.gpio_sam0_data* %22, %struct.gpio_sam0_data** %10, align 4, !dbg !9541
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %11, metadata !9544, metadata !DIExpression()), !dbg !9545
  %23 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %9, align 4, !dbg !9546
  %24 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %23, i32 0, i32 1, !dbg !9547
  %25 = load %struct.PortGroup*, %struct.PortGroup** %24, align 4, !dbg !9547
  store %struct.PortGroup* %25, %struct.PortGroup** %11, align 4, !dbg !9545
  call void @llvm.dbg.declare(metadata %union.PORT_PMUX_Type* %12, metadata !9548, metadata !DIExpression()), !dbg !9549
  %26 = bitcast %union.PORT_PMUX_Type* %12 to i8*, !dbg !9550
  %27 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9551
  %28 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %27, i32 0, i32 13, !dbg !9552
  %29 = load i8, i8* %6, align 1, !dbg !9553
  %30 = zext i8 %29 to i32, !dbg !9551
  %31 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %28, i32 0, i32 %30, !dbg !9551
  %32 = bitcast %union.PORT_PMUX_Type* %31 to i8*, !dbg !9554
  %33 = load volatile i8, i8* %32, align 1, !dbg !9554
  store i8 %33, i8* %26, align 1, !dbg !9550
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9557, metadata !DIExpression()), !dbg !9558
  store i32 0, i32* %14, align 4, !dbg !9558
  %34 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9559
  %35 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %10, align 4, !dbg !9560
  %36 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %35, i32 0, i32 1, !dbg !9561
  store %struct.device.73* %34, %struct.device.73** %36, align 4, !dbg !9562
  %37 = load i32, i32* %7, align 4, !dbg !9563
  switch i32 %37, label %167 [
    i32 2097152, label %38
    i32 4194304, label %66
    i32 20971520, label %66
  ], !dbg !9564

38:                                               ; preds = %4
  %39 = bitcast %union.PORT_PMUX_Type* %12 to %struct.z_thread_stack_element*, !dbg !9565
  %40 = bitcast %struct.z_thread_stack_element* %39 to i8*, !dbg !9567
  %41 = load i8, i8* %40, align 1, !dbg !9568
  %42 = and i8 %41, -2, !dbg !9568
  %43 = or i8 %42, 0, !dbg !9568
  store i8 %43, i8* %40, align 1, !dbg !9568
  %44 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %9, align 4, !dbg !9569
  %45 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %44, i32 0, i32 2, !dbg !9570
  %46 = load i8, i8* %45, align 4, !dbg !9570
  %47 = zext i8 %46 to i32, !dbg !9569
  %48 = load i8, i8* %6, align 1, !dbg !9571
  %49 = zext i8 %48 to i32, !dbg !9571
  %50 = call i32 @sam0_eic_disable_interrupt(i32 noundef %47, i32 noundef %49) #10, !dbg !9572
  store i32 %50, i32* %14, align 4, !dbg !9573
  %51 = load i32, i32* %14, align 4, !dbg !9574
  %52 = icmp eq i32 %51, -16, !dbg !9576
  br i1 %52, label %53, label %54, !dbg !9577

53:                                               ; preds = %38
  store i32 0, i32* %14, align 4, !dbg !9578
  br label %54, !dbg !9580

54:                                               ; preds = %53, %38
  %55 = load i32, i32* %14, align 4, !dbg !9581
  %56 = icmp eq i32 %55, 0, !dbg !9583
  br i1 %56, label %57, label %65, !dbg !9584

57:                                               ; preds = %54
  %58 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %9, align 4, !dbg !9585
  %59 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %58, i32 0, i32 2, !dbg !9587
  %60 = load i8, i8* %59, align 4, !dbg !9587
  %61 = zext i8 %60 to i32, !dbg !9585
  %62 = load i8, i8* %6, align 1, !dbg !9588
  %63 = zext i8 %62 to i32, !dbg !9588
  %64 = call i32 @sam0_eic_release(i32 noundef %61, i32 noundef %63) #10, !dbg !9589
  store i32 %64, i32* %14, align 4, !dbg !9590
  br label %65, !dbg !9591

65:                                               ; preds = %57, %54
  br label %168, !dbg !9592

66:                                               ; preds = %4, %4
  %67 = bitcast %union.PORT_PMUX_Type* %12 to %struct.z_thread_stack_element*, !dbg !9593
  %68 = bitcast %struct.z_thread_stack_element* %67 to i8*, !dbg !9595
  %69 = load i8, i8* %68, align 1, !dbg !9595
  %70 = lshr i8 %69, 1, !dbg !9595
  %71 = and i8 %70, 1, !dbg !9595
  %72 = zext i8 %71 to i32, !dbg !9596
  %73 = icmp eq i32 %72, 0, !dbg !9597
  br i1 %73, label %84, label %74, !dbg !9598

74:                                               ; preds = %66
  %75 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9599
  %76 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %75, i32 0, i32 0, !dbg !9600
  %77 = bitcast %union.PORT_DIR_Type* %76 to i32*, !dbg !9601
  %78 = load volatile i32, i32* %77, align 4, !dbg !9601
  %79 = load i8, i8* %6, align 1, !dbg !9602
  %80 = zext i8 %79 to i32, !dbg !9602
  %81 = shl i32 1, %80, !dbg !9602
  %82 = and i32 %78, %81, !dbg !9603
  %83 = icmp ne i32 %82, 0, !dbg !9604
  br i1 %83, label %84, label %85, !dbg !9605

84:                                               ; preds = %74, %66
  store i32 -134, i32* %14, align 4, !dbg !9606
  br label %168, !dbg !9608

85:                                               ; preds = %74
  %86 = bitcast %union.PORT_PMUX_Type* %12 to %struct.z_thread_stack_element*, !dbg !9609
  %87 = bitcast %struct.z_thread_stack_element* %86 to i8*, !dbg !9610
  %88 = load i8, i8* %87, align 1, !dbg !9611
  %89 = and i8 %88, -2, !dbg !9611
  %90 = or i8 %89, 1, !dbg !9611
  store i8 %90, i8* %87, align 1, !dbg !9611
  %91 = load i8, i8* %6, align 1, !dbg !9612
  %92 = zext i8 %91 to i32, !dbg !9612
  %93 = and i32 %92, 1, !dbg !9614
  %94 = icmp ne i32 %93, 0, !dbg !9615
  br i1 %94, label %95, label %107, !dbg !9616

95:                                               ; preds = %85
  %96 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9617
  %97 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %96, i32 0, i32 12, !dbg !9619
  %98 = load i8, i8* %6, align 1, !dbg !9620
  %99 = zext i8 %98 to i32, !dbg !9620
  %100 = udiv i32 %99, 2, !dbg !9621
  %101 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %97, i32 0, i32 %100, !dbg !9617
  %102 = bitcast %union.PORT_PMUX_Type* %101 to %struct.z_thread_stack_element*, !dbg !9622
  %103 = bitcast %struct.z_thread_stack_element* %102 to i8*, !dbg !9623
  %104 = load volatile i8, i8* %103, align 1, !dbg !9624
  %105 = and i8 %104, 15, !dbg !9624
  %106 = or i8 %105, 0, !dbg !9624
  store volatile i8 %106, i8* %103, align 1, !dbg !9624
  br label %119, !dbg !9625

107:                                              ; preds = %85
  %108 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9626
  %109 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %108, i32 0, i32 12, !dbg !9628
  %110 = load i8, i8* %6, align 1, !dbg !9629
  %111 = zext i8 %110 to i32, !dbg !9629
  %112 = udiv i32 %111, 2, !dbg !9630
  %113 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %109, i32 0, i32 %112, !dbg !9626
  %114 = bitcast %union.PORT_PMUX_Type* %113 to %struct.z_thread_stack_element*, !dbg !9631
  %115 = bitcast %struct.z_thread_stack_element* %114 to i8*, !dbg !9632
  %116 = load volatile i8, i8* %115, align 1, !dbg !9633
  %117 = and i8 %116, -16, !dbg !9633
  %118 = or i8 %117, 0, !dbg !9633
  store volatile i8 %118, i8* %115, align 1, !dbg !9633
  br label %119

119:                                              ; preds = %107, %95
  %120 = load i32, i32* %8, align 4, !dbg !9634
  switch i32 %120, label %132 [
    i32 33554432, label %121
    i32 67108864, label %126
    i32 100663296, label %131
  ], !dbg !9635

121:                                              ; preds = %119
  %122 = load i32, i32* %7, align 4, !dbg !9636
  %123 = icmp eq i32 %122, 4194304, !dbg !9638
  %124 = zext i1 %123 to i64, !dbg !9639
  %125 = select i1 %123, i32 4, i32 1, !dbg !9639
  store i32 %125, i32* %13, align 4, !dbg !9640
  br label %133, !dbg !9641

126:                                              ; preds = %119
  %127 = load i32, i32* %7, align 4, !dbg !9642
  %128 = icmp eq i32 %127, 4194304, !dbg !9643
  %129 = zext i1 %128 to i64, !dbg !9644
  %130 = select i1 %128, i32 3, i32 0, !dbg !9644
  store i32 %130, i32* %13, align 4, !dbg !9645
  br label %133, !dbg !9646

131:                                              ; preds = %119
  store i32 2, i32* %13, align 4, !dbg !9647
  br label %133, !dbg !9648

132:                                              ; preds = %119
  store i32 -22, i32* %14, align 4, !dbg !9649
  br label %133, !dbg !9650

133:                                              ; preds = %132, %131, %126, %121
  %134 = load i32, i32* %14, align 4, !dbg !9651
  %135 = icmp eq i32 %134, 0, !dbg !9653
  br i1 %135, label %136, label %155, !dbg !9654

136:                                              ; preds = %133
  %137 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %9, align 4, !dbg !9655
  %138 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %137, i32 0, i32 2, !dbg !9657
  %139 = load i8, i8* %138, align 4, !dbg !9657
  %140 = zext i8 %139 to i32, !dbg !9655
  %141 = load i8, i8* %6, align 1, !dbg !9658
  %142 = zext i8 %141 to i32, !dbg !9658
  %143 = load i32, i32* %13, align 4, !dbg !9659
  %144 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %10, align 4, !dbg !9660
  %145 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %144, i32 0, i32 2, !dbg !9661
  %146 = load i32, i32* %145, align 4, !dbg !9661
  %147 = load i8, i8* %6, align 1, !dbg !9662
  %148 = zext i8 %147 to i32, !dbg !9662
  %149 = shl i32 1, %148, !dbg !9662
  %150 = and i32 %146, %149, !dbg !9663
  %151 = icmp ne i32 %150, 0, !dbg !9664
  %152 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %10, align 4, !dbg !9665
  %153 = bitcast %struct.gpio_sam0_data* %152 to i8*, !dbg !9665
  %154 = call i32 @sam0_eic_acquire(i32 noundef %140, i32 noundef %142, i32 noundef %143, i1 noundef zeroext %151, void (i32, i8*)* noundef @gpio_sam0_isr, i8* noundef %153) #10, !dbg !9666
  store i32 %154, i32* %14, align 4, !dbg !9667
  br label %155, !dbg !9668

155:                                              ; preds = %136, %133
  %156 = load i32, i32* %14, align 4, !dbg !9669
  %157 = icmp eq i32 %156, 0, !dbg !9671
  br i1 %157, label %158, label %166, !dbg !9672

158:                                              ; preds = %155
  %159 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %9, align 4, !dbg !9673
  %160 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %159, i32 0, i32 2, !dbg !9675
  %161 = load i8, i8* %160, align 4, !dbg !9675
  %162 = zext i8 %161 to i32, !dbg !9673
  %163 = load i8, i8* %6, align 1, !dbg !9676
  %164 = zext i8 %163 to i32, !dbg !9676
  %165 = call i32 @sam0_eic_enable_interrupt(i32 noundef %162, i32 noundef %164) #10, !dbg !9677
  store i32 %165, i32* %14, align 4, !dbg !9678
  br label %166, !dbg !9679

166:                                              ; preds = %158, %155
  br label %168, !dbg !9680

167:                                              ; preds = %4
  store i32 -22, i32* %14, align 4, !dbg !9681
  br label %168, !dbg !9682

168:                                              ; preds = %167, %166, %84, %65
  %169 = load i32, i32* %14, align 4, !dbg !9683
  %170 = icmp eq i32 %169, 0, !dbg !9685
  br i1 %170, label %171, label %179, !dbg !9686

171:                                              ; preds = %168
  %172 = load %struct.PortGroup*, %struct.PortGroup** %11, align 4, !dbg !9687
  %173 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %172, i32 0, i32 13, !dbg !9689
  %174 = load i8, i8* %6, align 1, !dbg !9690
  %175 = zext i8 %174 to i32, !dbg !9687
  %176 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %173, i32 0, i32 %175, !dbg !9687
  %177 = bitcast %union.PORT_PMUX_Type* %176 to i8*, !dbg !9691
  %178 = bitcast %union.PORT_PMUX_Type* %12 to i8*, !dbg !9691
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %177, i8* align 1 %178, i32 1, i1 true), !dbg !9691
  br label %179, !dbg !9692

179:                                              ; preds = %171, %168
  %180 = load i32, i32* %14, align 4, !dbg !9693
  ret i32 %180, !dbg !9694
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_manage_callback(%struct.device.73* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9695 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca %struct.gpio_callback*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.gpio_sam0_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9696, metadata !DIExpression()), !dbg !9697
  store %struct.gpio_callback* %1, %struct.gpio_callback** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %5, metadata !9698, metadata !DIExpression()), !dbg !9699
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9700, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_data** %7, metadata !9702, metadata !DIExpression()), !dbg !9703
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9704
  %10 = getelementptr inbounds %struct.device.73, %struct.device.73* %9, i32 0, i32 4, !dbg !9705
  %11 = load i8*, i8** %10, align 4, !dbg !9705
  %12 = bitcast i8* %11 to %struct.gpio_sam0_data*, !dbg !9704
  store %struct.gpio_sam0_data* %12, %struct.gpio_sam0_data** %7, align 4, !dbg !9703
  %13 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %7, align 4, !dbg !9706
  %14 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %13, i32 0, i32 3, !dbg !9707
  %15 = load %struct.gpio_callback*, %struct.gpio_callback** %5, align 4, !dbg !9708
  %16 = load i8, i8* %6, align 1, !dbg !9709
  %17 = trunc i8 %16 to i1, !dbg !9709
  %18 = call i32 @gpio_manage_callback(%struct._slist* noundef %14, %struct.gpio_callback* noundef %15, i1 noundef zeroext %17) #10, !dbg !9710
  ret i32 %18, !dbg !9711
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_get_pending_int(%struct.device.73* noundef %0) #1 !dbg !9712 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.gpio_sam0_config*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9713, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_config** %3, metadata !9715, metadata !DIExpression()), !dbg !9716
  %4 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9717
  %5 = getelementptr inbounds %struct.device.73, %struct.device.73* %4, i32 0, i32 1, !dbg !9718
  %6 = load i8*, i8** %5, align 4, !dbg !9718
  %7 = bitcast i8* %6 to %struct.gpio_sam0_config*, !dbg !9717
  store %struct.gpio_sam0_config* %7, %struct.gpio_sam0_config** %3, align 4, !dbg !9716
  %8 = load %struct.gpio_sam0_config*, %struct.gpio_sam0_config** %3, align 4, !dbg !9719
  %9 = getelementptr inbounds %struct.gpio_sam0_config, %struct.gpio_sam0_config* %8, i32 0, i32 2, !dbg !9720
  %10 = load i8, i8* %9, align 4, !dbg !9720
  %11 = zext i8 %10 to i32, !dbg !9719
  %12 = call i32 @sam0_eic_interrupt_pending(i32 noundef %11) #10, !dbg !9721
  ret i32 %12, !dbg !9722
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_manage_callback(%struct._slist* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9723 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._slist*, align 4
  %6 = alloca %struct.gpio_callback*, align 4
  %7 = alloca i8, align 1
  store %struct._slist* %0, %struct._slist** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %5, metadata !9728, metadata !DIExpression()), !dbg !9729
  store %struct.gpio_callback* %1, %struct.gpio_callback** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %6, metadata !9730, metadata !DIExpression()), !dbg !9731
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !9732, metadata !DIExpression()), !dbg !9733
  %9 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !9734
  %10 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %9) #10, !dbg !9736
  br i1 %10, label %22, label %11, !dbg !9737

11:                                               ; preds = %3
  %12 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !9738
  %13 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !9741
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %13, i32 0, i32 0, !dbg !9742
  %15 = call zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %12, %struct._snode* noundef %14) #10, !dbg !9743
  br i1 %15, label %21, label %16, !dbg !9744

16:                                               ; preds = %11
  %17 = load i8, i8* %7, align 1, !dbg !9745
  %18 = trunc i8 %17 to i1, !dbg !9745
  br i1 %18, label %20, label %19, !dbg !9748

19:                                               ; preds = %16
  store i32 -22, i32* %4, align 4, !dbg !9749
  br label %35, !dbg !9749

20:                                               ; preds = %16
  br label %21, !dbg !9751

21:                                               ; preds = %20, %11
  br label %27, !dbg !9752

22:                                               ; preds = %3
  %23 = load i8, i8* %7, align 1, !dbg !9753
  %24 = trunc i8 %23 to i1, !dbg !9753
  br i1 %24, label %26, label %25, !dbg !9755

25:                                               ; preds = %22
  store i32 -22, i32* %4, align 4, !dbg !9756
  br label %35, !dbg !9756

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26, %21
  %28 = load i8, i8* %7, align 1, !dbg !9758
  %29 = trunc i8 %28 to i1, !dbg !9758
  br i1 %29, label %30, label %34, !dbg !9760

30:                                               ; preds = %27
  %31 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !9761
  %32 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !9763
  %33 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %32, i32 0, i32 0, !dbg !9764
  call void @sys_slist_prepend(%struct._slist* noundef %31, %struct._snode* noundef %33) #10, !dbg !9765
  br label %34, !dbg !9766

34:                                               ; preds = %30, %27
  store i32 0, i32* %4, align 4, !dbg !9767
  br label %35, !dbg !9767

35:                                               ; preds = %34, %25, %19
  %36 = load i32, i32* %4, align 4, !dbg !9768
  ret i32 %36, !dbg !9768
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #1 !dbg !9769 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !9772, metadata !DIExpression()), !dbg !9773
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !9773
  %4 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %3) #10, !dbg !9773
  %5 = icmp eq %struct._snode* %4, null, !dbg !9773
  ret i1 %5, !dbg !9773
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !9774 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !9777, metadata !DIExpression()), !dbg !9778
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !9779, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !9780, metadata !DIExpression()), !dbg !9778
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !9778
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !9781, metadata !DIExpression()), !dbg !9778
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9782
  %9 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %8) #10, !dbg !9782
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !9782
  br label %10, !dbg !9782

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !9784
  %12 = icmp ne %struct._snode* %11, null, !dbg !9784
  br i1 %12, label %13, label %26, !dbg !9782

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !9786
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !9786
  %16 = icmp eq %struct._snode* %14, %15, !dbg !9786
  br i1 %16, label %17, label %21, !dbg !9789

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9790
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9790
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !9790
  call void @sys_slist_remove(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !9790
  store i1 true, i1* %3, align 1, !dbg !9790
  br label %27, !dbg !9790

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !9789
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !9789
  br label %23, !dbg !9789

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !9784
  %25 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %24) #10, !dbg !9784
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !9784
  br label %10, !dbg !9784, !llvm.loop !9792

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !9778
  br label %27, !dbg !9778

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !9778
  ret i1 %28, !dbg !9778
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !9793 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !9796, metadata !DIExpression()), !dbg !9797
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !9798, metadata !DIExpression()), !dbg !9797
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9797
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9797
  %7 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %6) #10, !dbg !9797
  call void @z_snode_next_set(%struct._snode* noundef %5, %struct._snode* noundef %7) #10, !dbg !9797
  %8 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9797
  %9 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9797
  call void @z_slist_head_set(%struct._slist* noundef %8, %struct._snode* noundef %9) #10, !dbg !9797
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9799
  %11 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %10) #10, !dbg !9799
  %12 = icmp eq %struct._snode* %11, null, !dbg !9799
  br i1 %12, label %13, label %17, !dbg !9797

13:                                               ; preds = %2
  %14 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9801
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9801
  %16 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %15) #10, !dbg !9801
  call void @z_slist_tail_set(%struct._slist* noundef %14, %struct._snode* noundef %16) #10, !dbg !9801
  br label %17, !dbg !9801

17:                                               ; preds = %13, %2
  ret void, !dbg !9797
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #1 !dbg !9803 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !9806, metadata !DIExpression()), !dbg !9807
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !9808
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !9809
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9809
  ret %struct._snode* %5, !dbg !9810
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !9811 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !9814, metadata !DIExpression()), !dbg !9815
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !9816, metadata !DIExpression()), !dbg !9817
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9818
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !9819
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !9820
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !9823 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !9824, metadata !DIExpression()), !dbg !9825
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !9826, metadata !DIExpression()), !dbg !9827
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9828
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9829
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !9830
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !9831
  ret void, !dbg !9832
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #1 !dbg !9833 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !9834, metadata !DIExpression()), !dbg !9835
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !9836
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !9837
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9837
  ret %struct._snode* %5, !dbg !9838
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !9839 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !9840, metadata !DIExpression()), !dbg !9841
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !9842, metadata !DIExpression()), !dbg !9843
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9844
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !9845
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !9846
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !9847
  ret void, !dbg !9848
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !9849 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !9852, metadata !DIExpression()), !dbg !9853
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !9854, metadata !DIExpression()), !dbg !9853
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !9855, metadata !DIExpression()), !dbg !9853
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !9856
  %8 = icmp eq %struct._snode* %7, null, !dbg !9856
  br i1 %8, label %9, label %22, !dbg !9853

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9858
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9858
  %12 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %11) #10, !dbg !9858
  call void @z_slist_head_set(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !9858
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9860
  %14 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %13) #10, !dbg !9860
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9860
  %16 = icmp eq %struct._snode* %14, %15, !dbg !9860
  br i1 %16, label %17, label %21, !dbg !9858

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9862
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9862
  %20 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %19) #10, !dbg !9862
  call void @z_slist_tail_set(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !9862
  br label %21, !dbg !9862

21:                                               ; preds = %17, %9
  br label %34, !dbg !9858

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !9864
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9864
  %25 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %24) #10, !dbg !9864
  call void @z_snode_next_set(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !9864
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9866
  %27 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %26) #10, !dbg !9866
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9866
  %29 = icmp eq %struct._snode* %27, %28, !dbg !9866
  br i1 %29, label %30, label %33, !dbg !9864

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9868
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !9868
  call void @z_slist_tail_set(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !9868
  br label %33, !dbg !9868

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !9853
  call void @z_snode_next_set(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !9853
  ret void, !dbg !9853
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %0) #1 !dbg !9870 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !9873, metadata !DIExpression()), !dbg !9874
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9874
  %4 = icmp ne %struct._snode* %3, null, !dbg !9874
  br i1 %4, label %5, label %8, !dbg !9874

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9874
  %7 = call %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %6) #10, !dbg !9874
  br label %9, !dbg !9874

8:                                                ; preds = %1
  br label %9, !dbg !9874

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !9874
  ret %struct._snode* %10, !dbg !9874
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %0) #1 !dbg !9875 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !9876, metadata !DIExpression()), !dbg !9877
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9877
  %4 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %3) #10, !dbg !9877
  ret %struct._snode* %4, !dbg !9877
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #1 !dbg !9878 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !9879, metadata !DIExpression()), !dbg !9880
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9881
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !9882
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !9882
  ret %struct._snode* %5, !dbg !9883
}

; Function Attrs: noinline nounwind optnone
define internal void @gpio_sam0_isr(i32 noundef %0, i8* noundef %1) #1 !dbg !9884 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.gpio_sam0_data*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9885, metadata !DIExpression()), !dbg !9886
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.declare(metadata %struct.gpio_sam0_data** %5, metadata !9889, metadata !DIExpression()), !dbg !9890
  %6 = load i8*, i8** %4, align 4, !dbg !9891
  %7 = bitcast i8* %6 to %struct.gpio_sam0_data*, !dbg !9892
  store %struct.gpio_sam0_data* %7, %struct.gpio_sam0_data** %5, align 4, !dbg !9890
  %8 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %5, align 4, !dbg !9893
  %9 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %8, i32 0, i32 3, !dbg !9894
  %10 = load %struct.gpio_sam0_data*, %struct.gpio_sam0_data** %5, align 4, !dbg !9895
  %11 = getelementptr inbounds %struct.gpio_sam0_data, %struct.gpio_sam0_data* %10, i32 0, i32 1, !dbg !9896
  %12 = load %struct.device.73*, %struct.device.73** %11, align 4, !dbg !9896
  %13 = load i32, i32* %3, align 4, !dbg !9897
  call void @gpio_fire_callbacks(%struct._slist* noundef %9, %struct.device.73* noundef %12, i32 noundef %13) #10, !dbg !9898
  ret void, !dbg !9899
}

; Function Attrs: noinline nounwind optnone
define internal void @gpio_fire_callbacks(%struct._slist* noundef %0, %struct.device.73* noundef %1, i32 noundef %2) #1 !dbg !9900 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.gpio_callback*, align 4
  %8 = alloca %struct.gpio_callback*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !9903, metadata !DIExpression()), !dbg !9904
  store %struct.device.73* %1, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9905, metadata !DIExpression()), !dbg !9906
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9907, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %7, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %8, metadata !9911, metadata !DIExpression()), !dbg !9912
  %9 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9913
  %10 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %9) #10, !dbg !9913
  %11 = icmp ne %struct._snode* %10, null, !dbg !9913
  br i1 %11, label %12, label %18, !dbg !9913

12:                                               ; preds = %3
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !9913
  %14 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %13) #10, !dbg !9913
  %15 = bitcast %struct._snode* %14 to i8*, !dbg !9913
  %16 = getelementptr inbounds i8, i8* %15, i32 0, !dbg !9913
  %17 = bitcast i8* %16 to %struct.gpio_callback*, !dbg !9913
  br label %19, !dbg !9913

18:                                               ; preds = %3
  br label %19, !dbg !9913

19:                                               ; preds = %18, %12
  %20 = phi %struct.gpio_callback* [ %17, %12 ], [ null, %18 ], !dbg !9913
  store %struct.gpio_callback* %20, %struct.gpio_callback** %7, align 4, !dbg !9913
  %21 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9913
  %22 = icmp ne %struct.gpio_callback* %21, null, !dbg !9913
  br i1 %22, label %23, label %38, !dbg !9913

23:                                               ; preds = %19
  %24 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9913
  %25 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %24, i32 0, i32 0, !dbg !9913
  %26 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %25) #10, !dbg !9913
  %27 = icmp ne %struct._snode* %26, null, !dbg !9913
  br i1 %27, label %28, label %35, !dbg !9913

28:                                               ; preds = %23
  %29 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9913
  %30 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %29, i32 0, i32 0, !dbg !9913
  %31 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %30) #10, !dbg !9913
  %32 = bitcast %struct._snode* %31 to i8*, !dbg !9913
  %33 = getelementptr inbounds i8, i8* %32, i32 0, !dbg !9913
  %34 = bitcast i8* %33 to %struct.gpio_callback*, !dbg !9913
  br label %36, !dbg !9913

35:                                               ; preds = %23
  br label %36, !dbg !9913

36:                                               ; preds = %35, %28
  %37 = phi %struct.gpio_callback* [ %34, %28 ], [ null, %35 ], !dbg !9913
  br label %39, !dbg !9913

38:                                               ; preds = %19
  br label %39, !dbg !9913

39:                                               ; preds = %38, %36
  %40 = phi %struct.gpio_callback* [ %37, %36 ], [ null, %38 ], !dbg !9913
  store %struct.gpio_callback* %40, %struct.gpio_callback** %8, align 4, !dbg !9913
  br label %41, !dbg !9913

41:                                               ; preds = %83, %39
  %42 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9915
  %43 = icmp ne %struct.gpio_callback* %42, null, !dbg !9915
  br i1 %43, label %44, label %85, !dbg !9913

44:                                               ; preds = %41
  %45 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9917
  %46 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %45, i32 0, i32 2, !dbg !9920
  %47 = load i32, i32* %46, align 4, !dbg !9920
  %48 = load i32, i32* %6, align 4, !dbg !9921
  %49 = and i32 %47, %48, !dbg !9922
  %50 = icmp ne i32 %49, 0, !dbg !9922
  br i1 %50, label %51, label %62, !dbg !9923

51:                                               ; preds = %44
  %52 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9924
  %53 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %52, i32 0, i32 1, !dbg !9926
  %54 = load void (%struct.device.73*, %struct.gpio_callback*, i32)*, void (%struct.device.73*, %struct.gpio_callback*, i32)** %53, align 4, !dbg !9926
  %55 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9927
  %56 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9928
  %57 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9929
  %58 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %57, i32 0, i32 2, !dbg !9930
  %59 = load i32, i32* %58, align 4, !dbg !9930
  %60 = load i32, i32* %6, align 4, !dbg !9931
  %61 = and i32 %59, %60, !dbg !9932
  call void %54(%struct.device.73* noundef %55, %struct.gpio_callback* noundef %56, i32 noundef %61) #10, !dbg !9924
  br label %62, !dbg !9933

62:                                               ; preds = %51, %44
  br label %63, !dbg !9934

63:                                               ; preds = %62
  %64 = load %struct.gpio_callback*, %struct.gpio_callback** %8, align 4, !dbg !9915
  store %struct.gpio_callback* %64, %struct.gpio_callback** %7, align 4, !dbg !9915
  %65 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9915
  %66 = icmp ne %struct.gpio_callback* %65, null, !dbg !9915
  br i1 %66, label %67, label %82, !dbg !9915

67:                                               ; preds = %63
  %68 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9915
  %69 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %68, i32 0, i32 0, !dbg !9915
  %70 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %69) #10, !dbg !9915
  %71 = icmp ne %struct._snode* %70, null, !dbg !9915
  br i1 %71, label %72, label %79, !dbg !9915

72:                                               ; preds = %67
  %73 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !9915
  %74 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %73, i32 0, i32 0, !dbg !9915
  %75 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %74) #10, !dbg !9915
  %76 = bitcast %struct._snode* %75 to i8*, !dbg !9915
  %77 = getelementptr inbounds i8, i8* %76, i32 0, !dbg !9915
  %78 = bitcast i8* %77 to %struct.gpio_callback*, !dbg !9915
  br label %80, !dbg !9915

79:                                               ; preds = %67
  br label %80, !dbg !9915

80:                                               ; preds = %79, %72
  %81 = phi %struct.gpio_callback* [ %78, %72 ], [ null, %79 ], !dbg !9915
  br label %83, !dbg !9915

82:                                               ; preds = %63
  br label %83, !dbg !9915

83:                                               ; preds = %82, %80
  %84 = phi %struct.gpio_callback* [ %81, %80 ], [ null, %82 ], !dbg !9915
  store %struct.gpio_callback* %84, %struct.gpio_callback** %8, align 4, !dbg !9915
  br label %41, !dbg !9915, !llvm.loop !9935

85:                                               ; preds = %41
  ret void, !dbg !9937
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_sam0_init(%struct.device.73* noundef %0) #1 !dbg !9938 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9939, metadata !DIExpression()), !dbg !9940
  ret i32 0, !dbg !9941
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_poll_in(%struct.device.73* noundef %0, i8* noundef %1) #1 !dbg !9942 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %6, metadata !9947, metadata !DIExpression()), !dbg !9949
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9950
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !9951
  %10 = load i8*, i8** %9, align 4, !dbg !9951
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !9950
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !9949
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !9952, metadata !DIExpression()), !dbg !9954
  %12 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !9955
  %13 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %12, i32 0, i32 0, !dbg !9956
  %14 = load %struct.SercomUsart*, %struct.SercomUsart** %13, align 4, !dbg !9956
  store %struct.SercomUsart* %14, %struct.SercomUsart** %7, align 4, !dbg !9954
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9957
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9959
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9960
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9961
  %19 = load volatile i8, i8* %18, align 4, !dbg !9961
  %20 = lshr i8 %19, 2, !dbg !9961
  %21 = and i8 %20, 1, !dbg !9961
  %22 = icmp ne i8 %21, 0, !dbg !9957
  br i1 %22, label %24, label %23, !dbg !9962

23:                                               ; preds = %2
  store i32 -16, i32* %3, align 4, !dbg !9963
  br label %31, !dbg !9963

24:                                               ; preds = %2
  %25 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9965
  %26 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %25, i32 0, i32 15, !dbg !9966
  %27 = bitcast %union.GCLK_CLKCTRL_Type* %26 to i16*, !dbg !9967
  %28 = load volatile i16, i16* %27, align 4, !dbg !9967
  %29 = trunc i16 %28 to i8, !dbg !9968
  %30 = load i8*, i8** %5, align 4, !dbg !9969
  store i8 %29, i8* %30, align 1, !dbg !9970
  store i32 0, i32* %3, align 4, !dbg !9971
  br label %31, !dbg !9971

31:                                               ; preds = %24, %23
  %32 = load i32, i32* %3, align 4, !dbg !9972
  ret i32 %32, !dbg !9972
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !9973 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !9978, metadata !DIExpression()), !dbg !9979
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9980
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 1, !dbg !9981
  %9 = load i8*, i8** %8, align 4, !dbg !9981
  %10 = bitcast i8* %9 to %struct.uart_sam0_dev_cfg*, !dbg !9980
  store %struct.uart_sam0_dev_cfg* %10, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9979
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %6, metadata !9982, metadata !DIExpression()), !dbg !9983
  %11 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9984
  %12 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %11, i32 0, i32 0, !dbg !9985
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %12, align 4, !dbg !9985
  store %struct.SercomUsart* %13, %struct.SercomUsart** %6, align 4, !dbg !9983
  br label %14, !dbg !9986

14:                                               ; preds = %23, %2
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9987
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9988
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9989
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9990
  %19 = load volatile i8, i8* %18, align 4, !dbg !9990
  %20 = and i8 %19, 1, !dbg !9990
  %21 = icmp ne i8 %20, 0, !dbg !9991
  %22 = xor i1 %21, true, !dbg !9991
  br i1 %22, label %23, label %24, !dbg !9986

23:                                               ; preds = %14
  br label %14, !dbg !9986, !llvm.loop !9992

24:                                               ; preds = %14
  %25 = load i8, i8* %4, align 1, !dbg !9994
  %26 = zext i8 %25 to i16, !dbg !9994
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9995
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !9996
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !9997
  store volatile i16 %26, i16* %29, align 4, !dbg !9998
  ret void, !dbg !9999
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_err_check(%struct.device.73* noundef %0) #1 !dbg !10000 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10001, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10003, metadata !DIExpression()), !dbg !10004
  %6 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10005
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !10006
  %8 = load i8*, i8** %7, align 4, !dbg !10006
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_cfg*, !dbg !10005
  store %struct.uart_sam0_dev_cfg* %9, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10004
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10007, metadata !DIExpression()), !dbg !10008
  %10 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10009
  %11 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %10, i32 0, i32 0, !dbg !10010
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %11, align 4, !dbg !10010
  store %struct.SercomUsart* %12, %struct.SercomUsart** %4, align 4, !dbg !10008
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10011, metadata !DIExpression()), !dbg !10012
  store i32 0, i32* %5, align 4, !dbg !10012
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10013
  %14 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %13, i32 0, i32 12, !dbg !10015
  %15 = bitcast %union.GCLK_CLKCTRL_Type* %14 to i16*, !dbg !10016
  %16 = load volatile i16, i16* %15, align 2, !dbg !10016
  %17 = zext i16 %16 to i32, !dbg !10013
  %18 = and i32 %17, 4, !dbg !10017
  %19 = icmp ne i32 %18, 0, !dbg !10017
  br i1 %19, label %20, label %23, !dbg !10018

20:                                               ; preds = %1
  %21 = load i32, i32* %5, align 4, !dbg !10019
  %22 = or i32 %21, 1, !dbg !10019
  store i32 %22, i32* %5, align 4, !dbg !10019
  br label %23, !dbg !10021

23:                                               ; preds = %20, %1
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10022
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 12, !dbg !10024
  %26 = bitcast %union.GCLK_CLKCTRL_Type* %25 to i16*, !dbg !10025
  %27 = load volatile i16, i16* %26, align 2, !dbg !10025
  %28 = zext i16 %27 to i32, !dbg !10022
  %29 = and i32 %28, 2, !dbg !10026
  %30 = icmp ne i32 %29, 0, !dbg !10026
  br i1 %30, label %31, label %34, !dbg !10027

31:                                               ; preds = %23
  %32 = load i32, i32* %5, align 4, !dbg !10028
  %33 = or i32 %32, 2, !dbg !10028
  store i32 %33, i32* %5, align 4, !dbg !10028
  br label %34, !dbg !10030

34:                                               ; preds = %31, %23
  %35 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10031
  %36 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %35, i32 0, i32 12, !dbg !10033
  %37 = bitcast %union.GCLK_CLKCTRL_Type* %36 to i16*, !dbg !10034
  %38 = load volatile i16, i16* %37, align 2, !dbg !10034
  %39 = zext i16 %38 to i32, !dbg !10031
  %40 = and i32 %39, 1, !dbg !10035
  %41 = icmp ne i32 %40, 0, !dbg !10035
  br i1 %41, label %42, label %45, !dbg !10036

42:                                               ; preds = %34
  %43 = load i32, i32* %5, align 4, !dbg !10037
  %44 = or i32 %43, 4, !dbg !10037
  store i32 %44, i32* %5, align 4, !dbg !10037
  br label %45, !dbg !10039

45:                                               ; preds = %42, %34
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10040
  %47 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %46, i32 0, i32 12, !dbg !10041
  %48 = bitcast %union.GCLK_CLKCTRL_Type* %47 to i16*, !dbg !10042
  %49 = load volatile i16, i16* %48, align 2, !dbg !10043
  %50 = zext i16 %49 to i32, !dbg !10043
  %51 = or i32 %50, 7, !dbg !10043
  %52 = trunc i32 %51 to i16, !dbg !10043
  store volatile i16 %52, i16* %48, align 2, !dbg !10043
  %53 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10044
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %53) #10, !dbg !10045
  %54 = load i32, i32* %5, align 4, !dbg !10046
  ret i32 %54, !dbg !10047
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_configure(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !10048 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca %struct.uart_config*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %8 = alloca %struct.uart_sam0_dev_data*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca %union.PORT_DIR_Type, align 4
  %11 = alloca %union.PORT_DIR_Type, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10049, metadata !DIExpression()), !dbg !10050
  store %struct.uart_config* %1, %struct.uart_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %5, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %7, metadata !10055, metadata !DIExpression()), !dbg !10057
  %12 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10058
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 1, !dbg !10059
  %14 = load i8*, i8** %13, align 4, !dbg !10059
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_cfg*, !dbg !10058
  store %struct.uart_sam0_dev_cfg* %15, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !10057
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %8, metadata !10060, metadata !DIExpression()), !dbg !10063
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10064
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 4, !dbg !10065
  %18 = load i8*, i8** %17, align 4, !dbg !10065
  %19 = bitcast i8* %18 to %struct.uart_sam0_dev_data*, !dbg !10064
  store %struct.uart_sam0_dev_data* %19, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10063
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !10066, metadata !DIExpression()), !dbg !10067
  %20 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !10068
  %21 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %20, i32 0, i32 0, !dbg !10069
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %21, align 4, !dbg !10069
  store %struct.SercomUsart* %22, %struct.SercomUsart** %9, align 4, !dbg !10067
  %23 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10070
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %23) #10, !dbg !10071
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10072
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 0, !dbg !10073
  %26 = bitcast %union.PORT_DIR_Type* %25 to %union.anon.68*, !dbg !10074
  %27 = bitcast %union.anon.68* %26 to i32*, !dbg !10075
  %28 = load volatile i32, i32* %27, align 4, !dbg !10076
  %29 = and i32 %28, -3, !dbg !10076
  %30 = or i32 %29, 0, !dbg !10076
  store volatile i32 %30, i32* %27, align 4, !dbg !10076
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10077
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %31) #10, !dbg !10078
  %32 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10079
  %33 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %32, i32 0, i32 4, !dbg !10081
  %34 = load i8, i8* %33, align 1, !dbg !10081
  %35 = zext i8 %34 to i32, !dbg !10079
  %36 = icmp ne i32 %35, 0, !dbg !10082
  br i1 %36, label %37, label %38, !dbg !10083

37:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !10084
  br label %193, !dbg !10084

38:                                               ; preds = %2
  %39 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10086
  %40 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %39, i32 0, i32 4, !dbg !10087
  %41 = load i8, i8* %40, align 1, !dbg !10087
  %42 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10088
  %43 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %42, i32 0, i32 0, !dbg !10089
  %44 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %43, i32 0, i32 4, !dbg !10090
  store i8 %41, i8* %44, align 1, !dbg !10091
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %10, metadata !10092, metadata !DIExpression()), !dbg !10093
  %45 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10094
  %46 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %45, i32 0, i32 0, !dbg !10095
  %47 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !10095
  %48 = bitcast %union.PORT_DIR_Type* %46 to i8*, !dbg !10095
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %47, i8* align 4 %48, i32 4, i1 true), !dbg !10095
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %11, metadata !10096, metadata !DIExpression()), !dbg !10097
  %49 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10098
  %50 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %49, i32 0, i32 1, !dbg !10099
  %51 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !10099
  %52 = bitcast %union.PORT_DIR_Type* %50 to i8*, !dbg !10099
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %51, i8* align 4 %52, i32 4, i1 true), !dbg !10099
  %53 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10100
  %54 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %53, i32 0, i32 1, !dbg !10101
  %55 = load i8, i8* %54, align 4, !dbg !10101
  %56 = zext i8 %55 to i32, !dbg !10100
  switch i32 %56, label %85 [
    i32 0, label %57
    i32 1, label %63
    i32 2, label %74
  ], !dbg !10102

57:                                               ; preds = %38
  %58 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !10103
  %59 = bitcast %union.anon.68* %58 to i32*, !dbg !10105
  %60 = load i32, i32* %59, align 4, !dbg !10106
  %61 = and i32 %60, -251658241, !dbg !10106
  %62 = or i32 %61, 0, !dbg !10106
  store i32 %62, i32* %59, align 4, !dbg !10106
  br label %86, !dbg !10107

63:                                               ; preds = %38
  %64 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !10108
  %65 = bitcast %union.anon.68* %64 to i32*, !dbg !10109
  %66 = load i32, i32* %65, align 4, !dbg !10110
  %67 = and i32 %66, -251658241, !dbg !10110
  %68 = or i32 %67, 16777216, !dbg !10110
  store i32 %68, i32* %65, align 4, !dbg !10110
  %69 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10111
  %70 = bitcast %union.anon.68* %69 to i32*, !dbg !10112
  %71 = load i32, i32* %70, align 4, !dbg !10113
  %72 = and i32 %71, -8193, !dbg !10113
  %73 = or i32 %72, 8192, !dbg !10113
  store i32 %73, i32* %70, align 4, !dbg !10113
  br label %86, !dbg !10114

74:                                               ; preds = %38
  %75 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !10115
  %76 = bitcast %union.anon.68* %75 to i32*, !dbg !10116
  %77 = load i32, i32* %76, align 4, !dbg !10117
  %78 = and i32 %77, -251658241, !dbg !10117
  %79 = or i32 %78, 16777216, !dbg !10117
  store i32 %79, i32* %76, align 4, !dbg !10117
  %80 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10118
  %81 = bitcast %union.anon.68* %80 to i32*, !dbg !10119
  %82 = load i32, i32* %81, align 4, !dbg !10120
  %83 = and i32 %82, -8193, !dbg !10120
  %84 = or i32 %83, 0, !dbg !10120
  store i32 %84, i32* %81, align 4, !dbg !10120
  br label %86, !dbg !10121

85:                                               ; preds = %38
  store i32 -134, i32* %3, align 4, !dbg !10122
  br label %193, !dbg !10122

86:                                               ; preds = %74, %63, %57
  %87 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10123
  %88 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %87, i32 0, i32 1, !dbg !10124
  %89 = load i8, i8* %88, align 4, !dbg !10124
  %90 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10125
  %91 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %90, i32 0, i32 0, !dbg !10126
  %92 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %91, i32 0, i32 1, !dbg !10127
  store i8 %89, i8* %92, align 4, !dbg !10128
  %93 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10129
  %94 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %93, i32 0, i32 2, !dbg !10130
  %95 = load i8, i8* %94, align 1, !dbg !10130
  %96 = zext i8 %95 to i32, !dbg !10129
  switch i32 %96, label %109 [
    i32 1, label %97
    i32 3, label %103
  ], !dbg !10131

97:                                               ; preds = %86
  %98 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10132
  %99 = bitcast %union.anon.68* %98 to i32*, !dbg !10134
  %100 = load i32, i32* %99, align 4, !dbg !10135
  %101 = and i32 %100, -65, !dbg !10135
  %102 = or i32 %101, 0, !dbg !10135
  store i32 %102, i32* %99, align 4, !dbg !10135
  br label %110, !dbg !10136

103:                                              ; preds = %86
  %104 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10137
  %105 = bitcast %union.anon.68* %104 to i32*, !dbg !10138
  %106 = load i32, i32* %105, align 4, !dbg !10139
  %107 = and i32 %106, -65, !dbg !10139
  %108 = or i32 %107, 64, !dbg !10139
  store i32 %108, i32* %105, align 4, !dbg !10139
  br label %110, !dbg !10140

109:                                              ; preds = %86
  store i32 -134, i32* %3, align 4, !dbg !10141
  br label %193, !dbg !10141

110:                                              ; preds = %103, %97
  %111 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10142
  %112 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %111, i32 0, i32 2, !dbg !10143
  %113 = load i8, i8* %112, align 1, !dbg !10143
  %114 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10144
  %115 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %114, i32 0, i32 0, !dbg !10145
  %116 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %115, i32 0, i32 2, !dbg !10146
  store i8 %113, i8* %116, align 1, !dbg !10147
  %117 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10148
  %118 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %117, i32 0, i32 3, !dbg !10149
  %119 = load i8, i8* %118, align 2, !dbg !10149
  %120 = zext i8 %119 to i32, !dbg !10148
  switch i32 %120, label %151 [
    i32 0, label %121
    i32 1, label %127
    i32 2, label %133
    i32 3, label %139
    i32 4, label %145
  ], !dbg !10150

121:                                              ; preds = %110
  %122 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10151
  %123 = bitcast %union.anon.68* %122 to i32*, !dbg !10153
  %124 = load i32, i32* %123, align 4, !dbg !10154
  %125 = and i32 %124, -8, !dbg !10154
  %126 = or i32 %125, 5, !dbg !10154
  store i32 %126, i32* %123, align 4, !dbg !10154
  br label %152, !dbg !10155

127:                                              ; preds = %110
  %128 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10156
  %129 = bitcast %union.anon.68* %128 to i32*, !dbg !10157
  %130 = load i32, i32* %129, align 4, !dbg !10158
  %131 = and i32 %130, -8, !dbg !10158
  %132 = or i32 %131, 6, !dbg !10158
  store i32 %132, i32* %129, align 4, !dbg !10158
  br label %152, !dbg !10159

133:                                              ; preds = %110
  %134 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10160
  %135 = bitcast %union.anon.68* %134 to i32*, !dbg !10161
  %136 = load i32, i32* %135, align 4, !dbg !10162
  %137 = and i32 %136, -8, !dbg !10162
  %138 = or i32 %137, 7, !dbg !10162
  store i32 %138, i32* %135, align 4, !dbg !10162
  br label %152, !dbg !10163

139:                                              ; preds = %110
  %140 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10164
  %141 = bitcast %union.anon.68* %140 to i32*, !dbg !10165
  %142 = load i32, i32* %141, align 4, !dbg !10166
  %143 = and i32 %142, -8, !dbg !10166
  %144 = or i32 %143, 0, !dbg !10166
  store i32 %144, i32* %141, align 4, !dbg !10166
  br label %152, !dbg !10167

145:                                              ; preds = %110
  %146 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !10168
  %147 = bitcast %union.anon.68* %146 to i32*, !dbg !10169
  %148 = load i32, i32* %147, align 4, !dbg !10170
  %149 = and i32 %148, -8, !dbg !10170
  %150 = or i32 %149, 1, !dbg !10170
  store i32 %150, i32* %147, align 4, !dbg !10170
  br label %152, !dbg !10171

151:                                              ; preds = %110
  store i32 -134, i32* %3, align 4, !dbg !10172
  br label %193, !dbg !10172

152:                                              ; preds = %145, %139, %133, %127, %121
  %153 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10173
  %154 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %153, i32 0, i32 3, !dbg !10174
  %155 = load i8, i8* %154, align 2, !dbg !10174
  %156 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10175
  %157 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %156, i32 0, i32 0, !dbg !10176
  %158 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %157, i32 0, i32 3, !dbg !10177
  store i8 %155, i8* %158, align 2, !dbg !10178
  %159 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10179
  %160 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %159, i32 0, i32 0, !dbg !10180
  %161 = bitcast %union.PORT_DIR_Type* %160 to i8*, !dbg !10181
  %162 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !10181
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %161, i8* align 4 %162, i32 4, i1 true), !dbg !10181
  %163 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10182
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %163) #10, !dbg !10183
  %164 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10184
  %165 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %164, i32 0, i32 1, !dbg !10185
  %166 = bitcast %union.PORT_DIR_Type* %165 to i8*, !dbg !10186
  %167 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !10186
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %166, i8* align 4 %167, i32 4, i1 true), !dbg !10186
  %168 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10187
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %168) #10, !dbg !10188
  %169 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10189
  %170 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10190
  %171 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %170, i32 0, i32 0, !dbg !10191
  %172 = load i32, i32* %171, align 4, !dbg !10191
  %173 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %169, i32 noundef %172, i32 noundef 48000000) #10, !dbg !10192
  store i32 %173, i32* %6, align 4, !dbg !10193
  %174 = load i32, i32* %6, align 4, !dbg !10194
  %175 = icmp ne i32 %174, 0, !dbg !10196
  br i1 %175, label %176, label %178, !dbg !10197

176:                                              ; preds = %152
  %177 = load i32, i32* %6, align 4, !dbg !10198
  store i32 %177, i32* %3, align 4, !dbg !10200
  br label %193, !dbg !10200

178:                                              ; preds = %152
  %179 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !10201
  %180 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %179, i32 0, i32 0, !dbg !10202
  %181 = load i32, i32* %180, align 4, !dbg !10202
  %182 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !10203
  %183 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %182, i32 0, i32 0, !dbg !10204
  %184 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %183, i32 0, i32 0, !dbg !10205
  store i32 %181, i32* %184, align 4, !dbg !10206
  %185 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10207
  %186 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %185, i32 0, i32 0, !dbg !10208
  %187 = bitcast %union.PORT_DIR_Type* %186 to %union.anon.68*, !dbg !10209
  %188 = bitcast %union.anon.68* %187 to i32*, !dbg !10210
  %189 = load volatile i32, i32* %188, align 4, !dbg !10211
  %190 = and i32 %189, -3, !dbg !10211
  %191 = or i32 %190, 2, !dbg !10211
  store volatile i32 %191, i32* %188, align 4, !dbg !10211
  %192 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10212
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %192) #10, !dbg !10213
  store i32 0, i32* %3, align 4, !dbg !10214
  br label %193, !dbg !10214

193:                                              ; preds = %178, %176, %151, %109, %85, %37
  %194 = load i32, i32* %3, align 4, !dbg !10215
  ret i32 %194, !dbg !10215
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_config_get(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !10216 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.uart_config*, align 4
  %5 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10217, metadata !DIExpression()), !dbg !10218
  store %struct.uart_config* %1, %struct.uart_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %4, metadata !10219, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %5, metadata !10221, metadata !DIExpression()), !dbg !10222
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10223
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 4, !dbg !10224
  %8 = load i8*, i8** %7, align 4, !dbg !10224
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_data*, !dbg !10223
  store %struct.uart_sam0_dev_data* %9, %struct.uart_sam0_dev_data** %5, align 4, !dbg !10222
  %10 = load %struct.uart_config*, %struct.uart_config** %4, align 4, !dbg !10225
  %11 = bitcast %struct.uart_config* %10 to i8*, !dbg !10225
  %12 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %5, align 4, !dbg !10226
  %13 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %12, i32 0, i32 0, !dbg !10227
  %14 = bitcast %struct.uart_config* %13 to i8*, !dbg !10228
  %15 = call i8* @memcpy(i8* noundef %11, i8* noundef %14, i32 noundef 8) #10, !dbg !10229
  ret i32 0, !dbg !10230
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_fill(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10231 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10234, metadata !DIExpression()), !dbg !10235
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !10238, metadata !DIExpression()), !dbg !10239
  %10 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !10240
  %11 = getelementptr inbounds %struct.device.73, %struct.device.73* %10, i32 0, i32 1, !dbg !10241
  %12 = load i8*, i8** %11, align 4, !dbg !10241
  %13 = bitcast i8* %12 to %struct.uart_sam0_dev_cfg*, !dbg !10240
  store %struct.uart_sam0_dev_cfg* %13, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !10239
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !10242, metadata !DIExpression()), !dbg !10243
  %14 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !10244
  %15 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %14, i32 0, i32 0, !dbg !10245
  %16 = load %struct.SercomUsart*, %struct.SercomUsart** %15, align 4, !dbg !10245
  store %struct.SercomUsart* %16, %struct.SercomUsart** %9, align 4, !dbg !10243
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10246
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !10248
  %19 = bitcast %union.PORT_PMUX_Type* %18 to %struct.z_thread_stack_element*, !dbg !10249
  %20 = bitcast %struct.z_thread_stack_element* %19 to i8*, !dbg !10250
  %21 = load volatile i8, i8* %20, align 4, !dbg !10250
  %22 = and i8 %21, 1, !dbg !10250
  %23 = zext i8 %22 to i32, !dbg !10246
  %24 = icmp ne i32 %23, 0, !dbg !10246
  br i1 %24, label %25, label %36, !dbg !10251

25:                                               ; preds = %3
  %26 = load i32, i32* %7, align 4, !dbg !10252
  %27 = icmp sge i32 %26, 1, !dbg !10253
  br i1 %27, label %28, label %36, !dbg !10254

28:                                               ; preds = %25
  %29 = load i8*, i8** %6, align 4, !dbg !10255
  %30 = getelementptr inbounds i8, i8* %29, i32 0, !dbg !10255
  %31 = load i8, i8* %30, align 1, !dbg !10255
  %32 = zext i8 %31 to i16, !dbg !10255
  %33 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10257
  %34 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %33, i32 0, i32 15, !dbg !10258
  %35 = bitcast %union.GCLK_CLKCTRL_Type* %34 to i16*, !dbg !10259
  store volatile i16 %32, i16* %35, align 4, !dbg !10260
  store i32 1, i32* %4, align 4, !dbg !10261
  br label %37, !dbg !10261

36:                                               ; preds = %25, %3
  store i32 0, i32* %4, align 4, !dbg !10262
  br label %37, !dbg !10262

37:                                               ; preds = %36, %28
  %38 = load i32, i32* %4, align 4, !dbg !10264
  ret i32 %38, !dbg !10264
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_read(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10265 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !10266, metadata !DIExpression()), !dbg !10267
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10268, metadata !DIExpression()), !dbg !10269
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10270, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !10272, metadata !DIExpression()), !dbg !10273
  %11 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !10274
  %12 = getelementptr inbounds %struct.device.73, %struct.device.73* %11, i32 0, i32 1, !dbg !10275
  %13 = load i8*, i8** %12, align 4, !dbg !10275
  %14 = bitcast i8* %13 to %struct.uart_sam0_dev_cfg*, !dbg !10274
  store %struct.uart_sam0_dev_cfg* %14, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !10273
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !10276, metadata !DIExpression()), !dbg !10277
  %15 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !10278
  %16 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %15, i32 0, i32 0, !dbg !10279
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %16, align 4, !dbg !10279
  store %struct.SercomUsart* %17, %struct.SercomUsart** %9, align 4, !dbg !10277
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10280
  %19 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %18, i32 0, i32 10, !dbg !10282
  %20 = bitcast %union.PORT_PMUX_Type* %19 to %struct.z_thread_stack_element*, !dbg !10283
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !10284
  %22 = load volatile i8, i8* %21, align 4, !dbg !10284
  %23 = lshr i8 %22, 2, !dbg !10284
  %24 = and i8 %23, 1, !dbg !10284
  %25 = icmp ne i8 %24, 0, !dbg !10280
  br i1 %25, label %26, label %38, !dbg !10285

26:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8* %10, metadata !10286, metadata !DIExpression()), !dbg !10288
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !10289
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !10290
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !10291
  %30 = load volatile i16, i16* %29, align 4, !dbg !10291
  %31 = trunc i16 %30 to i8, !dbg !10289
  store i8 %31, i8* %10, align 1, !dbg !10288
  %32 = load i32, i32* %7, align 4, !dbg !10292
  %33 = icmp sge i32 %32, 1, !dbg !10294
  br i1 %33, label %34, label %37, !dbg !10295

34:                                               ; preds = %26
  %35 = load i8, i8* %10, align 1, !dbg !10296
  %36 = load i8*, i8** %6, align 4, !dbg !10298
  store i8 %35, i8* %36, align 1, !dbg !10299
  store i32 1, i32* %4, align 4, !dbg !10300
  br label %39, !dbg !10300

37:                                               ; preds = %26
  store i32 -22, i32* %4, align 4, !dbg !10301
  br label %39, !dbg !10301

38:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !10303
  br label %39, !dbg !10303

39:                                               ; preds = %38, %37, %34
  %40 = load i32, i32* %4, align 4, !dbg !10304
  ret i32 %40, !dbg !10304
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_enable(%struct.device.73* noundef %0) #1 !dbg !10305 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10306, metadata !DIExpression()), !dbg !10307
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10308, metadata !DIExpression()), !dbg !10309
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10310
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10311
  %7 = load i8*, i8** %6, align 4, !dbg !10311
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10310
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10309
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10312, metadata !DIExpression()), !dbg !10313
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10314
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10315
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10315
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10313
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10316
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !10317
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10318
  store volatile i8 3, i8* %14, align 2, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_disable(%struct.device.73* noundef %0) #1 !dbg !10321 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10322, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10324, metadata !DIExpression()), !dbg !10325
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10326
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10327
  %7 = load i8*, i8** %6, align 4, !dbg !10327
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10326
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10325
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10328, metadata !DIExpression()), !dbg !10329
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10330
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10331
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10331
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10329
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10332
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !10333
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10334
  store volatile i8 3, i8* %14, align 4, !dbg !10335
  ret void, !dbg !10336
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_ready(%struct.device.73* noundef %0) #1 !dbg !10337 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10338, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10340, metadata !DIExpression()), !dbg !10341
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10342
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10343
  %7 = load i8*, i8** %6, align 4, !dbg !10343
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10342
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10341
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10344, metadata !DIExpression()), !dbg !10345
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10346
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10347
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10347
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10345
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10348
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !10349
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !10350
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !10351
  %16 = load volatile i8, i8* %15, align 4, !dbg !10351
  %17 = and i8 %16, 1, !dbg !10351
  %18 = zext i8 %17 to i32, !dbg !10348
  %19 = icmp ne i32 %18, 0, !dbg !10352
  br i1 %19, label %20, label %29, !dbg !10353

20:                                               ; preds = %1
  %21 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10354
  %22 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %21, i32 0, i32 8, !dbg !10355
  %23 = bitcast %union.PORT_PMUX_Type* %22 to %struct.z_thread_stack_element*, !dbg !10356
  %24 = bitcast %struct.z_thread_stack_element* %23 to i8*, !dbg !10357
  %25 = load volatile i8, i8* %24, align 2, !dbg !10357
  %26 = and i8 %25, 1, !dbg !10357
  %27 = zext i8 %26 to i32, !dbg !10354
  %28 = icmp ne i32 %27, 0, !dbg !10358
  br label %29

29:                                               ; preds = %20, %1
  %30 = phi i1 [ false, %1 ], [ %28, %20 ], !dbg !10359
  %31 = zext i1 %30 to i32, !dbg !10353
  ret i32 %31, !dbg !10360
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_enable(%struct.device.73* noundef %0) #1 !dbg !10361 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10362, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10364, metadata !DIExpression()), !dbg !10365
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10366
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10367
  %7 = load i8*, i8** %6, align 4, !dbg !10367
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10366
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10365
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10368, metadata !DIExpression()), !dbg !10369
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10370
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10371
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10371
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10369
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10372
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !10373
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10374
  store volatile i8 4, i8* %14, align 2, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_disable(%struct.device.73* noundef %0) #1 !dbg !10377 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10378, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10380, metadata !DIExpression()), !dbg !10381
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10382
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10383
  %7 = load i8*, i8** %6, align 4, !dbg !10383
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10382
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10381
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10384, metadata !DIExpression()), !dbg !10385
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10386
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10387
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10387
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10385
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10388
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !10389
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10390
  store volatile i8 4, i8* %14, align 4, !dbg !10391
  ret void, !dbg !10392
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_complete(%struct.device.73* noundef %0) #1 !dbg !10393 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10396, metadata !DIExpression()), !dbg !10397
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10398
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10399
  %7 = load i8*, i8** %6, align 4, !dbg !10399
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10398
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10397
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10400, metadata !DIExpression()), !dbg !10401
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10402
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10403
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10403
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10401
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10404
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !10405
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !10406
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !10407
  %16 = load volatile i8, i8* %15, align 4, !dbg !10407
  %17 = lshr i8 %16, 1, !dbg !10407
  %18 = and i8 %17, 1, !dbg !10407
  %19 = zext i8 %18 to i32, !dbg !10404
  %20 = icmp ne i32 %19, 0, !dbg !10408
  br i1 %20, label %21, label %31, !dbg !10409

21:                                               ; preds = %1
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10410
  %23 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %22, i32 0, i32 8, !dbg !10411
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !10412
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !10413
  %26 = load volatile i8, i8* %25, align 2, !dbg !10413
  %27 = lshr i8 %26, 1, !dbg !10413
  %28 = and i8 %27, 1, !dbg !10413
  %29 = zext i8 %28 to i32, !dbg !10410
  %30 = icmp ne i32 %29, 0, !dbg !10414
  br label %31

31:                                               ; preds = %21, %1
  %32 = phi i1 [ false, %1 ], [ %30, %21 ], !dbg !10415
  %33 = zext i1 %32 to i32, !dbg !10409
  ret i32 %33, !dbg !10416
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_rx_ready(%struct.device.73* noundef %0) #1 !dbg !10417 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10420, metadata !DIExpression()), !dbg !10421
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10422
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10423
  %7 = load i8*, i8** %6, align 4, !dbg !10423
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10422
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10421
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10424, metadata !DIExpression()), !dbg !10425
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10426
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10427
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10427
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10425
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10428
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !10429
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !10430
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !10431
  %16 = load volatile i8, i8* %15, align 4, !dbg !10431
  %17 = lshr i8 %16, 2, !dbg !10431
  %18 = and i8 %17, 1, !dbg !10431
  %19 = zext i8 %18 to i32, !dbg !10428
  %20 = icmp ne i32 %19, 0, !dbg !10432
  %21 = zext i1 %20 to i32, !dbg !10432
  ret i32 %21, !dbg !10433
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_is_pending(%struct.device.73* noundef %0) #1 !dbg !10434 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10435, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10437, metadata !DIExpression()), !dbg !10438
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10439
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10440
  %7 = load i8*, i8** %6, align 4, !dbg !10440
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10439
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10438
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10441, metadata !DIExpression()), !dbg !10442
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10443
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10444
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10444
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10442
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10445
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !10446
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10447
  %15 = load volatile i8, i8* %14, align 2, !dbg !10447
  %16 = zext i8 %15 to i32, !dbg !10445
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10448
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !10449
  %19 = bitcast %union.PORT_PMUX_Type* %18 to i8*, !dbg !10450
  %20 = load volatile i8, i8* %19, align 4, !dbg !10450
  %21 = zext i8 %20 to i32, !dbg !10448
  %22 = and i32 %16, %21, !dbg !10451
  %23 = icmp ne i32 %22, 0, !dbg !10452
  %24 = zext i1 %23 to i32, !dbg !10452
  ret i32 %24, !dbg !10453
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_update(%struct.device.73* noundef %0) #1 !dbg !10454 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !10457, metadata !DIExpression()), !dbg !10458
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10459
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !10460
  %7 = load i8*, i8** %6, align 4, !dbg !10460
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !10459
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !10461, metadata !DIExpression()), !dbg !10462
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !10463
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !10464
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !10464
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !10462
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !10465
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !10466
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !10467
  store volatile i8 8, i8* %14, align 4, !dbg !10468
  ret i32 1, !dbg !10469
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_callback_set(%struct.device.73* noundef %0, void (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10470 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca void (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10471, metadata !DIExpression()), !dbg !10472
  store void (%struct.device.73*, i8*)* %1, void (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.73*, i8*)** %5, metadata !10473, metadata !DIExpression()), !dbg !10474
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %7, metadata !10477, metadata !DIExpression()), !dbg !10478
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10479
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !10480
  %10 = load i8*, i8** %9, align 4, !dbg !10480
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_data*, !dbg !10479
  store %struct.uart_sam0_dev_data* %11, %struct.uart_sam0_dev_data** %7, align 4, !dbg !10478
  %12 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %5, align 4, !dbg !10481
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !10482
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !10483
  store void (%struct.device.73*, i8*)* %12, void (%struct.device.73*, i8*)** %14, align 4, !dbg !10484
  %15 = load i8*, i8** %6, align 4, !dbg !10485
  %16 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !10486
  %17 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %16, i32 0, i32 2, !dbg !10487
  store i8* %15, i8** %17, align 4, !dbg !10488
  ret void, !dbg !10489
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization.29(%struct.SercomUsart* noundef %0) #1 !dbg !10490 {
  %2 = alloca %struct.SercomUsart*, align 4
  store %struct.SercomUsart* %0, %struct.SercomUsart** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %2, metadata !10493, metadata !DIExpression()), !dbg !10494
  br label %3, !dbg !10495

3:                                                ; preds = %10, %1
  %4 = load %struct.SercomUsart*, %struct.SercomUsart** %2, align 4, !dbg !10496
  %5 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %4, i32 0, i32 13, !dbg !10497
  %6 = bitcast %union.PORT_DIR_Type* %5 to i32*, !dbg !10498
  %7 = load volatile i32, i32* %6, align 4, !dbg !10498
  %8 = and i32 %7, 7, !dbg !10499
  %9 = icmp ne i32 %8, 0, !dbg !10500
  br i1 %9, label %10, label %11, !dbg !10495

10:                                               ; preds = %3
  br label %3, !dbg !10495, !llvm.loop !10501

11:                                               ; preds = %3
  ret void, !dbg !10503
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !10504 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SercomUsart*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i16, align 2
  store %struct.SercomUsart* %0, %struct.SercomUsart** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %5, metadata !10507, metadata !DIExpression()), !dbg !10508
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10509, metadata !DIExpression()), !dbg !10510
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10511, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.declare(metadata i64* %8, metadata !10513, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.declare(metadata i16* %9, metadata !10515, metadata !DIExpression()), !dbg !10516
  %10 = load i32, i32* %6, align 4, !dbg !10517
  %11 = zext i32 %10 to i64, !dbg !10518
  %12 = shl i64 %11, 20, !dbg !10519
  store i64 %12, i64* %8, align 8, !dbg !10520
  %13 = load i64, i64* %8, align 8, !dbg !10521
  %14 = load i32, i32* %7, align 4, !dbg !10522
  %15 = lshr i32 %14, 1, !dbg !10523
  %16 = zext i32 %15 to i64, !dbg !10524
  %17 = add i64 %13, %16, !dbg !10525
  %18 = load i32, i32* %7, align 4, !dbg !10526
  %19 = zext i32 %18 to i64, !dbg !10526
  %20 = udiv i64 %17, %19, !dbg !10527
  store i64 %20, i64* %8, align 8, !dbg !10528
  %21 = load i64, i64* %8, align 8, !dbg !10529
  %22 = icmp ult i64 %21, 1, !dbg !10531
  br i1 %22, label %26, label %23, !dbg !10532

23:                                               ; preds = %3
  %24 = load i64, i64* %8, align 8, !dbg !10533
  %25 = icmp ugt i64 %24, 65535, !dbg !10534
  br i1 %25, label %26, label %27, !dbg !10535

26:                                               ; preds = %23, %3
  store i32 -34, i32* %4, align 4, !dbg !10536
  br label %38, !dbg !10536

27:                                               ; preds = %23
  %28 = load i64, i64* %8, align 8, !dbg !10538
  %29 = trunc i64 %28 to i16, !dbg !10539
  %30 = zext i16 %29 to i32, !dbg !10539
  %31 = sub nsw i32 65536, %30, !dbg !10540
  %32 = trunc i32 %31 to i16, !dbg !10541
  store i16 %32, i16* %9, align 2, !dbg !10542
  %33 = load i16, i16* %9, align 2, !dbg !10543
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !10544
  %35 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %34, i32 0, i32 3, !dbg !10545
  %36 = bitcast %union.GCLK_CLKCTRL_Type* %35 to i16*, !dbg !10546
  store volatile i16 %33, i16* %36, align 4, !dbg !10547
  %37 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !10548
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %37) #10, !dbg !10549
  store i32 0, i32* %4, align 4, !dbg !10550
  br label %38, !dbg !10550

38:                                               ; preds = %27, %26
  %39 = load i32, i32* %4, align 4, !dbg !10551
  ret i32 %39, !dbg !10551
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_config_0(%struct.device.73* noundef %0) #1 !dbg !2547 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10552, metadata !DIExpression()), !dbg !10553
  br label %3, !dbg !10553

3:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 14, i32 noundef 0, i32 noundef 0) #10, !dbg !10554
  call void @arch_irq_enable(i32 noundef 14) #10, !dbg !10557
  br label %4, !dbg !10557

4:                                                ; preds = %3
  ret void, !dbg !10553
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_isr(%struct.device.73* noundef %0) #1 !dbg !10558 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10559, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %3, metadata !10561, metadata !DIExpression()), !dbg !10562
  %4 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10563
  %5 = getelementptr inbounds %struct.device.73, %struct.device.73* %4, i32 0, i32 4, !dbg !10564
  %6 = load i8*, i8** %5, align 4, !dbg !10564
  %7 = bitcast i8* %6 to %struct.uart_sam0_dev_data*, !dbg !10563
  store %struct.uart_sam0_dev_data* %7, %struct.uart_sam0_dev_data** %3, align 4, !dbg !10562
  %8 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !10565
  %9 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %8, i32 0, i32 1, !dbg !10567
  %10 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %9, align 4, !dbg !10567
  %11 = icmp ne void (%struct.device.73*, i8*)* %10, null, !dbg !10565
  br i1 %11, label %12, label %20, !dbg !10568

12:                                               ; preds = %1
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !10569
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !10571
  %15 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %14, align 4, !dbg !10571
  %16 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10572
  %17 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !10573
  %18 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %17, i32 0, i32 2, !dbg !10574
  %19 = load i8*, i8** %18, align 4, !dbg !10574
  call void %15(%struct.device.73* noundef %16, i8* noundef %19) #10, !dbg !10569
  br label %20, !dbg !10575

20:                                               ; preds = %12, %1
  ret void, !dbg !10576
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_init(%struct.device.73* noundef %0) #1 !dbg !10577 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.uart_sam0_dev_data*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !10582, metadata !DIExpression()), !dbg !10583
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10584
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !10585
  %10 = load i8*, i8** %9, align 4, !dbg !10585
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !10584
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10583
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %6, metadata !10586, metadata !DIExpression()), !dbg !10587
  %12 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10588
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 4, !dbg !10589
  %14 = load i8*, i8** %13, align 4, !dbg !10589
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_data*, !dbg !10588
  store %struct.uart_sam0_dev_data* %15, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10587
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !10590, metadata !DIExpression()), !dbg !10591
  %16 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10592
  %17 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %16, i32 0, i32 0, !dbg !10593
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %17, align 4, !dbg !10593
  store %struct.SercomUsart* %18, %struct.SercomUsart** %7, align 4, !dbg !10591
  %19 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10594
  %20 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %19, i32 0, i32 5, !dbg !10595
  %21 = load i16, i16* %20, align 4, !dbg !10595
  %22 = zext i16 %21 to i32, !dbg !10594
  %23 = or i32 %22, 0, !dbg !10596
  %24 = or i32 %23, 16384, !dbg !10597
  %25 = trunc i32 %24 to i16, !dbg !10594
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !10598
  %26 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10599
  %27 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %26, i32 0, i32 4, !dbg !10600
  %28 = load i32, i32* %27, align 4, !dbg !10600
  %29 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !10601
  %30 = or i32 %29, %28, !dbg !10601
  store volatile i32 %30, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !10601
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10602
  %32 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %31, i32 0, i32 6, !dbg !10603
  %33 = bitcast %union.PORT_PMUX_Type* %32 to i8*, !dbg !10604
  store volatile i8 -65, i8* %33, align 4, !dbg !10605
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10606
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %34) #10, !dbg !10607
  %35 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10608
  %36 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %35, i32 0, i32 2, !dbg !10609
  %37 = load i32, i32* %36, align 4, !dbg !10609
  %38 = or i32 %37, 4, !dbg !10610
  %39 = or i32 %38, 0, !dbg !10611
  %40 = or i32 %39, 0, !dbg !10612
  %41 = or i32 %40, 536870912, !dbg !10613
  %42 = or i32 %41, 1073741824, !dbg !10614
  %43 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10615
  %44 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %43, i32 0, i32 0, !dbg !10616
  %45 = bitcast %union.PORT_DIR_Type* %44 to i32*, !dbg !10617
  store volatile i32 %42, i32* %45, align 4, !dbg !10618
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10619
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %46) #10, !dbg !10620
  %47 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10621
  %48 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %47, i32 0, i32 7, !dbg !10622
  %49 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %48, align 4, !dbg !10622
  %50 = call i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %49, i8 noundef zeroext 0) #10, !dbg !10623
  store i32 %50, i32* %4, align 4, !dbg !10624
  %51 = load i32, i32* %4, align 4, !dbg !10625
  %52 = icmp slt i32 %51, 0, !dbg !10627
  br i1 %52, label %53, label %55, !dbg !10628

53:                                               ; preds = %1
  %54 = load i32, i32* %4, align 4, !dbg !10629
  store i32 %54, i32* %2, align 4, !dbg !10631
  br label %100, !dbg !10631

55:                                               ; preds = %1
  %56 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10632
  %57 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %56, i32 0, i32 0, !dbg !10633
  %58 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %57, i32 0, i32 4, !dbg !10634
  store i8 0, i8* %58, align 1, !dbg !10635
  %59 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10636
  %60 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %59, i32 0, i32 0, !dbg !10637
  %61 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %60, i32 0, i32 1, !dbg !10638
  store i8 0, i8* %61, align 4, !dbg !10639
  %62 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10640
  %63 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %62, i32 0, i32 0, !dbg !10641
  %64 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %63, i32 0, i32 2, !dbg !10642
  store i8 1, i8* %64, align 1, !dbg !10643
  %65 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10644
  %66 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %65, i32 0, i32 0, !dbg !10645
  %67 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %66, i32 0, i32 3, !dbg !10646
  store i8 3, i8* %67, align 2, !dbg !10647
  %68 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10648
  %69 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %68, i32 0, i32 1, !dbg !10649
  %70 = bitcast %union.PORT_DIR_Type* %69 to i32*, !dbg !10650
  store volatile i32 196608, i32* %70, align 4, !dbg !10651
  %71 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10652
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %71) #10, !dbg !10653
  %72 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10654
  %73 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10655
  %74 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %73, i32 0, i32 1, !dbg !10656
  %75 = load i32, i32* %74, align 4, !dbg !10656
  %76 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %72, i32 noundef %75, i32 noundef 48000000) #10, !dbg !10657
  store i32 %76, i32* %4, align 4, !dbg !10658
  %77 = load i32, i32* %4, align 4, !dbg !10659
  %78 = icmp ne i32 %77, 0, !dbg !10661
  br i1 %78, label %79, label %81, !dbg !10662

79:                                               ; preds = %55
  %80 = load i32, i32* %4, align 4, !dbg !10663
  store i32 %80, i32* %2, align 4, !dbg !10665
  br label %100, !dbg !10665

81:                                               ; preds = %55
  %82 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10666
  %83 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %82, i32 0, i32 1, !dbg !10667
  %84 = load i32, i32* %83, align 4, !dbg !10667
  %85 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !10668
  %86 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %85, i32 0, i32 0, !dbg !10669
  %87 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %86, i32 0, i32 0, !dbg !10670
  store i32 %84, i32* %87, align 4, !dbg !10671
  %88 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !10672
  %89 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %88, i32 0, i32 6, !dbg !10673
  %90 = load void (%struct.device.73*)*, void (%struct.device.73*)** %89, align 4, !dbg !10673
  %91 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10674
  call void %90(%struct.device.73* noundef %91) #10, !dbg !10672
  %92 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10675
  %93 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %92, i32 0, i32 0, !dbg !10676
  %94 = bitcast %union.PORT_DIR_Type* %93 to %union.anon.68*, !dbg !10677
  %95 = bitcast %union.anon.68* %94 to i32*, !dbg !10678
  %96 = load volatile i32, i32* %95, align 4, !dbg !10679
  %97 = and i32 %96, -3, !dbg !10679
  %98 = or i32 %97, 2, !dbg !10679
  store volatile i32 %98, i32* %95, align 4, !dbg !10679
  %99 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !10680
  call void @wait_synchronization.29(%struct.SercomUsart* noundef %99) #10, !dbg !10681
  store i32 0, i32* %2, align 4, !dbg !10682
  br label %100, !dbg !10682

100:                                              ; preds = %81, %79, %53
  %101 = load i32, i32* %2, align 4, !dbg !10683
  ret i32 %101, !dbg !10683
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1) #1 !dbg !10684 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pinctrl_dev_config*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.pinctrl_state*, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %4, metadata !10687, metadata !DIExpression()), !dbg !10688
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %7, metadata !10693, metadata !DIExpression()), !dbg !10694
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !10695
  %9 = load i8, i8* %5, align 1, !dbg !10696
  %10 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %8, i8 noundef zeroext %9, %struct.pinctrl_state** noundef %7) #10, !dbg !10697
  store i32 %10, i32* %6, align 4, !dbg !10698
  %11 = load i32, i32* %6, align 4, !dbg !10699
  %12 = icmp slt i32 %11, 0, !dbg !10701
  br i1 %12, label %13, label %15, !dbg !10702

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4, !dbg !10703
  store i32 %14, i32* %3, align 4, !dbg !10705
  br label %19, !dbg !10705

15:                                               ; preds = %2
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !10706
  %17 = load %struct.pinctrl_state*, %struct.pinctrl_state** %7, align 4, !dbg !10707
  %18 = call i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %16, %struct.pinctrl_state* noundef %17) #10, !dbg !10708
  store i32 %18, i32* %3, align 4, !dbg !10709
  br label %19, !dbg !10709

19:                                               ; preds = %15, %13
  %20 = load i32, i32* %3, align 4, !dbg !10710
  ret i32 %20, !dbg !10710
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %0, %struct.pinctrl_state* noundef %1) #1 !dbg !10711 {
  %3 = alloca %struct.pinctrl_dev_config*, align 4
  %4 = alloca %struct.pinctrl_state*, align 4
  %5 = alloca i32, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %3, metadata !10714, metadata !DIExpression()), !dbg !10715
  store %struct.pinctrl_state* %1, %struct.pinctrl_state** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %4, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10718, metadata !DIExpression()), !dbg !10719
  %6 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %3, align 4, !dbg !10720
  store i32 0, i32* %5, align 4, !dbg !10721
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10722
  %8 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 0, i32 0, !dbg !10723
  %9 = load i32*, i32** %8, align 4, !dbg !10723
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10724
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, i32 1, !dbg !10725
  %12 = load i8, i8* %11, align 4, !dbg !10725
  %13 = load i32, i32* %5, align 4, !dbg !10726
  %14 = call i32 @pinctrl_configure_pins(i32* noundef %9, i8 noundef zeroext %12, i32 noundef %13) #10, !dbg !10727
  ret i32 %14, !dbg !10728
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_driver_init(%struct.device.73* noundef %0) #1 !dbg !10729 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !10730, metadata !DIExpression()), !dbg !10731
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10732
  call void @__NVIC_SetPriority.32(i32 noundef -1, i32 noundef 0) #10, !dbg !10733
  %4 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10734
  %5 = sdiv i32 %4, 10000, !dbg !10734
  %6 = sub nsw i32 %5, 1, !dbg !10735
  store i32 %6, i32* @last_load, align 4, !dbg !10736
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10737
  %7 = load i32, i32* @last_load, align 4, !dbg !10738
  store volatile i32 %7, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !10739
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10740
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10741
  %9 = or i32 %8, 7, !dbg !10741
  store volatile i32 %9, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10741
  ret i32 0, !dbg !10742
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.32(i32 noundef %0, i32 noundef %1) #1 !dbg !10743 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10744, metadata !DIExpression()), !dbg !10745
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10746, metadata !DIExpression()), !dbg !10747
  %5 = load i32, i32* %3, align 4, !dbg !10748
  %6 = icmp sge i32 %5, 0, !dbg !10750
  br i1 %6, label %7, label %29, !dbg !10751

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !10752
  %9 = lshr i32 %8, 2, !dbg !10752
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !10754
  %11 = load volatile i32, i32* %10, align 4, !dbg !10754
  %12 = load i32, i32* %3, align 4, !dbg !10755
  %13 = and i32 %12, 3, !dbg !10755
  %14 = mul i32 %13, 8, !dbg !10755
  %15 = shl i32 255, %14, !dbg !10756
  %16 = xor i32 %15, -1, !dbg !10757
  %17 = and i32 %11, %16, !dbg !10758
  %18 = load i32, i32* %4, align 4, !dbg !10759
  %19 = shl i32 %18, 6, !dbg !10760
  %20 = and i32 %19, 255, !dbg !10761
  %21 = load i32, i32* %3, align 4, !dbg !10762
  %22 = and i32 %21, 3, !dbg !10762
  %23 = mul i32 %22, 8, !dbg !10762
  %24 = shl i32 %20, %23, !dbg !10763
  %25 = or i32 %17, %24, !dbg !10764
  %26 = load i32, i32* %3, align 4, !dbg !10765
  %27 = lshr i32 %26, 2, !dbg !10765
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !10766
  store volatile i32 %25, i32* %28, align 4, !dbg !10767
  br label %55, !dbg !10768

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !10769
  %31 = and i32 %30, 15, !dbg !10769
  %32 = sub i32 %31, 8, !dbg !10769
  %33 = lshr i32 %32, 2, !dbg !10769
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !10771
  %35 = load volatile i32, i32* %34, align 4, !dbg !10771
  %36 = load i32, i32* %3, align 4, !dbg !10772
  %37 = and i32 %36, 3, !dbg !10772
  %38 = mul i32 %37, 8, !dbg !10772
  %39 = shl i32 255, %38, !dbg !10773
  %40 = xor i32 %39, -1, !dbg !10774
  %41 = and i32 %35, %40, !dbg !10775
  %42 = load i32, i32* %4, align 4, !dbg !10776
  %43 = shl i32 %42, 6, !dbg !10777
  %44 = and i32 %43, 255, !dbg !10778
  %45 = load i32, i32* %3, align 4, !dbg !10779
  %46 = and i32 %45, 3, !dbg !10779
  %47 = mul i32 %46, 8, !dbg !10779
  %48 = shl i32 %44, %47, !dbg !10780
  %49 = or i32 %41, %48, !dbg !10781
  %50 = load i32, i32* %3, align 4, !dbg !10782
  %51 = and i32 %50, 15, !dbg !10782
  %52 = sub i32 %51, 8, !dbg !10782
  %53 = lshr i32 %52, 2, !dbg !10782
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !10783
  store volatile i32 %49, i32* %54, align 4, !dbg !10784
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !10785
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #1 !dbg !10786 {
  ret i32 48000000, !dbg !10788
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_isr(i8* noundef %0) #1 !dbg !10789 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10790, metadata !DIExpression()), !dbg !10791
  %4 = load i8*, i8** %2, align 4, !dbg !10792
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10793, metadata !DIExpression()), !dbg !10794
  %5 = call i32 @elapsed() #10, !dbg !10795
  %6 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10796
  %7 = load i32, i32* @cycle_count, align 4, !dbg !10797
  %8 = add i32 %7, %6, !dbg !10797
  store i32 %8, i32* @cycle_count, align 4, !dbg !10797
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10798
  %9 = load i32, i32* @cycle_count, align 4, !dbg !10799
  %10 = load i32, i32* @announced_cycles, align 4, !dbg !10802
  %11 = sub i32 %9, %10, !dbg !10803
  %12 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10804
  %13 = sdiv i32 %12, 10000, !dbg !10804
  %14 = udiv i32 %11, %13, !dbg !10805
  store i32 %14, i32* %3, align 4, !dbg !10806
  %15 = load i32, i32* %3, align 4, !dbg !10807
  %16 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10808
  %17 = sdiv i32 %16, 10000, !dbg !10808
  %18 = mul i32 %15, %17, !dbg !10809
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !10810
  %20 = add i32 %19, %18, !dbg !10810
  store i32 %20, i32* @announced_cycles, align 4, !dbg !10810
  %21 = load i32, i32* %3, align 4, !dbg !10811
  call void @sys_clock_announce(i32 noundef %21) #10, !dbg !10812
  call void @z_arm_int_exit() #10, !dbg !10813
  ret void, !dbg !10814
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed() #1 !dbg !10815 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10816, metadata !DIExpression()), !dbg !10817
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10818
  store i32 %4, i32* %1, align 4, !dbg !10817
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10819, metadata !DIExpression()), !dbg !10820
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10821
  store i32 %5, i32* %2, align 4, !dbg !10820
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10822, metadata !DIExpression()), !dbg !10823
  %6 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10824
  store i32 %6, i32* %3, align 4, !dbg !10823
  %7 = load i32, i32* %2, align 4, !dbg !10825
  %8 = and i32 %7, 65536, !dbg !10827
  %9 = icmp ne i32 %8, 0, !dbg !10827
  br i1 %9, label %14, label %10, !dbg !10828

10:                                               ; preds = %0
  %11 = load i32, i32* %1, align 4, !dbg !10829
  %12 = load i32, i32* %3, align 4, !dbg !10830
  %13 = icmp ult i32 %11, %12, !dbg !10831
  br i1 %13, label %14, label %19, !dbg !10832

14:                                               ; preds = %10, %0
  %15 = load i32, i32* @last_load, align 4, !dbg !10833
  %16 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10835
  %17 = add i32 %16, %15, !dbg !10835
  store volatile i32 %17, i32* @overflow_cyc, align 4, !dbg !10835
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10836
  br label %19, !dbg !10837

19:                                               ; preds = %14, %10
  %20 = load i32, i32* @last_load, align 4, !dbg !10838
  %21 = load i32, i32* %3, align 4, !dbg !10839
  %22 = sub i32 %20, %21, !dbg !10840
  %23 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10841
  %24 = add i32 %22, %23, !dbg !10842
  ret i32 %24, !dbg !10843
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !10844 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10847, metadata !DIExpression()), !dbg !10848
  %18 = zext i1 %1 to i8
  store i8 %18, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !10849, metadata !DIExpression()), !dbg !10850
  %19 = load i8, i8* %10, align 1, !dbg !10851
  %20 = trunc i8 %19 to i1, !dbg !10851
  br i1 %20, label %21, label %28, !dbg !10853

21:                                               ; preds = %2
  %22 = load i32, i32* %9, align 4, !dbg !10854
  %23 = sext i32 %22 to i64, !dbg !10854
  %24 = icmp eq i64 %23, -1, !dbg !10855
  br i1 %24, label %25, label %28, !dbg !10856

25:                                               ; preds = %21
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10857
  %27 = and i32 %26, -2, !dbg !10857
  store volatile i32 %27, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10857
  store i32 -16777216, i32* @last_load, align 4, !dbg !10859
  br label %201, !dbg !10860

28:                                               ; preds = %21, %2
  call void @llvm.dbg.declare(metadata i32* %11, metadata !10861, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10863, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10865, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10867, metadata !DIExpression()), !dbg !10868
  %29 = load i32, i32* @last_load, align 4, !dbg !10869
  store i32 %29, i32* %14, align 4, !dbg !10868
  %30 = load i32, i32* %9, align 4, !dbg !10870
  %31 = sext i32 %30 to i64, !dbg !10870
  %32 = icmp eq i64 %31, -1, !dbg !10871
  br i1 %32, label %33, label %38, !dbg !10872

33:                                               ; preds = %28
  %34 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10873
  %35 = sdiv i32 %34, 10000, !dbg !10873
  %36 = sdiv i32 16777215, %35, !dbg !10873
  %37 = sub nsw i32 %36, 1, !dbg !10873
  br label %40, !dbg !10872

38:                                               ; preds = %28
  %39 = load i32, i32* %9, align 4, !dbg !10874
  br label %40, !dbg !10872

40:                                               ; preds = %38, %33
  %41 = phi i32 [ %37, %33 ], [ %39, %38 ], !dbg !10872
  store i32 %41, i32* %9, align 4, !dbg !10875
  %42 = load i32, i32* %9, align 4, !dbg !10876
  %43 = sub nsw i32 %42, 1, !dbg !10876
  %44 = icmp sle i32 %43, 0, !dbg !10876
  br i1 %44, label %45, label %46, !dbg !10876

45:                                               ; preds = %40
  br label %64, !dbg !10876

46:                                               ; preds = %40
  %47 = load i32, i32* %9, align 4, !dbg !10876
  %48 = sub nsw i32 %47, 1, !dbg !10876
  %49 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10876
  %50 = sdiv i32 %49, 10000, !dbg !10876
  %51 = sdiv i32 16777215, %50, !dbg !10876
  %52 = sub nsw i32 %51, 1, !dbg !10876
  %53 = icmp slt i32 %48, %52, !dbg !10876
  br i1 %53, label %54, label %57, !dbg !10876

54:                                               ; preds = %46
  %55 = load i32, i32* %9, align 4, !dbg !10876
  %56 = sub nsw i32 %55, 1, !dbg !10876
  br label %62, !dbg !10876

57:                                               ; preds = %46
  %58 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10876
  %59 = sdiv i32 %58, 10000, !dbg !10876
  %60 = sdiv i32 16777215, %59, !dbg !10876
  %61 = sub nsw i32 %60, 1, !dbg !10876
  br label %62, !dbg !10876

62:                                               ; preds = %57, %54
  %63 = phi i32 [ %56, %54 ], [ %61, %57 ], !dbg !10876
  br label %64, !dbg !10876

64:                                               ; preds = %62, %45
  %65 = phi i32 [ 0, %45 ], [ %63, %62 ], !dbg !10876
  store i32 %65, i32* %9, align 4, !dbg !10877
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !10878, metadata !DIExpression()), !dbg !10883
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !10884, metadata !DIExpression()) #9, !dbg !10889
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !10891
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !10892, metadata !DIExpression()) #9, !dbg !10893
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10894, metadata !DIExpression()) #9, !dbg !10896
  %67 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10898, !srcloc !10899
  store i32 %67, i32* %4, align 4, !dbg !10898
  %68 = load i32, i32* %4, align 4, !dbg !10900
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10901
  store i32 %68, i32* %69, align 4, !dbg !10902
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10903
  %71 = load i32, i32* %70, align 4, !dbg !10903
  %72 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !10904
  store i32 %71, i32* %72, align 4, !dbg !10904
  call void @llvm.dbg.declare(metadata i32* %16, metadata !10905, metadata !DIExpression()), !dbg !10906
  %73 = call i32 @elapsed() #10, !dbg !10907
  store i32 %73, i32* %16, align 4, !dbg !10906
  %74 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10908
  store i32 %74, i32* %12, align 4, !dbg !10909
  %75 = load i32, i32* %16, align 4, !dbg !10910
  %76 = load i32, i32* @cycle_count, align 4, !dbg !10911
  %77 = add i32 %76, %75, !dbg !10911
  store i32 %77, i32* @cycle_count, align 4, !dbg !10911
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10912
  call void @llvm.dbg.declare(metadata i32* %17, metadata !10913, metadata !DIExpression()), !dbg !10914
  %78 = load i32, i32* @cycle_count, align 4, !dbg !10915
  %79 = load i32, i32* @announced_cycles, align 4, !dbg !10916
  %80 = sub i32 %78, %79, !dbg !10917
  store i32 %80, i32* %17, align 4, !dbg !10914
  %81 = load i32, i32* %17, align 4, !dbg !10918
  %82 = icmp slt i32 %81, 0, !dbg !10920
  br i1 %82, label %83, label %95, !dbg !10921

83:                                               ; preds = %64
  %84 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10922
  %85 = sdiv i32 %84, 10000, !dbg !10922
  %86 = sdiv i32 %85, 16, !dbg !10922
  %87 = icmp sgt i32 1024, %86, !dbg !10922
  br i1 %87, label %88, label %89, !dbg !10922

88:                                               ; preds = %83
  br label %93, !dbg !10922

89:                                               ; preds = %83
  %90 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10922
  %91 = sdiv i32 %90, 10000, !dbg !10922
  %92 = sdiv i32 %91, 16, !dbg !10922
  br label %93, !dbg !10922

93:                                               ; preds = %89, %88
  %94 = phi i32 [ 1024, %88 ], [ %92, %89 ], !dbg !10922
  store i32 %94, i32* @last_load, align 4, !dbg !10924
  br label %166, !dbg !10925

95:                                               ; preds = %64
  %96 = load i32, i32* %9, align 4, !dbg !10926
  %97 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10928
  %98 = sdiv i32 %97, 10000, !dbg !10928
  %99 = mul nsw i32 %96, %98, !dbg !10929
  store i32 %99, i32* %11, align 4, !dbg !10930
  %100 = load i32, i32* %17, align 4, !dbg !10931
  %101 = load i32, i32* %11, align 4, !dbg !10932
  %102 = add i32 %101, %100, !dbg !10932
  store i32 %102, i32* %11, align 4, !dbg !10932
  %103 = load i32, i32* %11, align 4, !dbg !10933
  %104 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10934
  %105 = sdiv i32 %104, 10000, !dbg !10934
  %106 = add i32 %103, %105, !dbg !10935
  %107 = sub i32 %106, 1, !dbg !10936
  %108 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10937
  %109 = sdiv i32 %108, 10000, !dbg !10937
  %110 = udiv i32 %107, %109, !dbg !10938
  %111 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10939
  %112 = sdiv i32 %111, 10000, !dbg !10939
  %113 = mul i32 %110, %112, !dbg !10940
  store i32 %113, i32* %11, align 4, !dbg !10941
  %114 = load i32, i32* %17, align 4, !dbg !10942
  %115 = load i32, i32* %11, align 4, !dbg !10943
  %116 = sub i32 %115, %114, !dbg !10943
  store i32 %116, i32* %11, align 4, !dbg !10943
  %117 = load i32, i32* %11, align 4, !dbg !10944
  %118 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10944
  %119 = sdiv i32 %118, 10000, !dbg !10944
  %120 = sdiv i32 %119, 16, !dbg !10944
  %121 = icmp sgt i32 1024, %120, !dbg !10944
  br i1 %121, label %122, label %123, !dbg !10944

122:                                              ; preds = %95
  br label %127, !dbg !10944

123:                                              ; preds = %95
  %124 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10944
  %125 = sdiv i32 %124, 10000, !dbg !10944
  %126 = sdiv i32 %125, 16, !dbg !10944
  br label %127, !dbg !10944

127:                                              ; preds = %123, %122
  %128 = phi i32 [ 1024, %122 ], [ %126, %123 ], !dbg !10944
  %129 = icmp ugt i32 %117, %128, !dbg !10944
  br i1 %129, label %130, label %132, !dbg !10944

130:                                              ; preds = %127
  %131 = load i32, i32* %11, align 4, !dbg !10944
  br label %144, !dbg !10944

132:                                              ; preds = %127
  %133 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10944
  %134 = sdiv i32 %133, 10000, !dbg !10944
  %135 = sdiv i32 %134, 16, !dbg !10944
  %136 = icmp sgt i32 1024, %135, !dbg !10944
  br i1 %136, label %137, label %138, !dbg !10944

137:                                              ; preds = %132
  br label %142, !dbg !10944

138:                                              ; preds = %132
  %139 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10944
  %140 = sdiv i32 %139, 10000, !dbg !10944
  %141 = sdiv i32 %140, 16, !dbg !10944
  br label %142, !dbg !10944

142:                                              ; preds = %138, %137
  %143 = phi i32 [ 1024, %137 ], [ %141, %138 ], !dbg !10944
  br label %144, !dbg !10944

144:                                              ; preds = %142, %130
  %145 = phi i32 [ %131, %130 ], [ %143, %142 ], !dbg !10944
  store i32 %145, i32* %11, align 4, !dbg !10945
  %146 = load i32, i32* %11, align 4, !dbg !10946
  %147 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10948
  %148 = sdiv i32 %147, 10000, !dbg !10948
  %149 = sdiv i32 16777215, %148, !dbg !10948
  %150 = sub nsw i32 %149, 1, !dbg !10948
  %151 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10948
  %152 = sdiv i32 %151, 10000, !dbg !10948
  %153 = mul nsw i32 %150, %152, !dbg !10948
  %154 = icmp ugt i32 %146, %153, !dbg !10949
  br i1 %154, label %155, label %163, !dbg !10950

155:                                              ; preds = %144
  %156 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10951
  %157 = sdiv i32 %156, 10000, !dbg !10951
  %158 = sdiv i32 16777215, %157, !dbg !10951
  %159 = sub nsw i32 %158, 1, !dbg !10951
  %160 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10951
  %161 = sdiv i32 %160, 10000, !dbg !10951
  %162 = mul nsw i32 %159, %161, !dbg !10951
  store i32 %162, i32* @last_load, align 4, !dbg !10953
  br label %165, !dbg !10954

163:                                              ; preds = %144
  %164 = load i32, i32* %11, align 4, !dbg !10955
  store i32 %164, i32* @last_load, align 4, !dbg !10957
  br label %165

165:                                              ; preds = %163, %155
  br label %166

166:                                              ; preds = %165, %93
  %167 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10958
  store i32 %167, i32* %13, align 4, !dbg !10959
  %168 = load i32, i32* @last_load, align 4, !dbg !10960
  %169 = sub i32 %168, 1, !dbg !10961
  store volatile i32 %169, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !10962
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10963
  %170 = load i32, i32* %12, align 4, !dbg !10964
  %171 = load i32, i32* %13, align 4, !dbg !10966
  %172 = icmp ult i32 %170, %171, !dbg !10967
  br i1 %172, label %173, label %181, !dbg !10968

173:                                              ; preds = %166
  %174 = load i32, i32* %12, align 4, !dbg !10969
  %175 = load i32, i32* %14, align 4, !dbg !10971
  %176 = load i32, i32* %13, align 4, !dbg !10972
  %177 = sub i32 %175, %176, !dbg !10973
  %178 = add i32 %174, %177, !dbg !10974
  %179 = load i32, i32* @cycle_count, align 4, !dbg !10975
  %180 = add i32 %179, %178, !dbg !10975
  store i32 %180, i32* @cycle_count, align 4, !dbg !10975
  br label %187, !dbg !10976

181:                                              ; preds = %166
  %182 = load i32, i32* %12, align 4, !dbg !10977
  %183 = load i32, i32* %13, align 4, !dbg !10979
  %184 = sub i32 %182, %183, !dbg !10980
  %185 = load i32, i32* @cycle_count, align 4, !dbg !10981
  %186 = add i32 %185, %184, !dbg !10981
  store i32 %186, i32* @cycle_count, align 4, !dbg !10981
  br label %187

187:                                              ; preds = %181, %173
  %188 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !10982
  %189 = bitcast i32* %188 to [1 x i32]*, !dbg !10982
  %190 = load [1 x i32], [1 x i32]* %189, align 4, !dbg !10982
  %191 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %192 = bitcast i32* %191 to [1 x i32]*
  store [1 x i32] %190, [1 x i32]* %192, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !10983, metadata !DIExpression()) #9, !dbg !10987
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !10989, metadata !DIExpression()) #9, !dbg !10990
  %193 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10991
  %194 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10992
  %195 = load i32, i32* %194, align 4, !dbg !10992
  store i32 %195, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10993, metadata !DIExpression()) #9, !dbg !10995
  %196 = load i32, i32* %3, align 4, !dbg !10997
  %197 = icmp ne i32 %196, 0, !dbg !10999
  br i1 %197, label %198, label %199, !dbg !11000

198:                                              ; preds = %187
  br label %200, !dbg !11001

199:                                              ; preds = %187
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11003, !srcloc !11004
  br label %200, !dbg !11005

200:                                              ; preds = %198, %199
  br label %201, !dbg !11006

201:                                              ; preds = %200, %25
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_elapsed() #1 !dbg !11007 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !11008, metadata !DIExpression()), !dbg !11009
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !10884, metadata !DIExpression()) #9, !dbg !11010
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !11012
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !10892, metadata !DIExpression()) #9, !dbg !11013
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10894, metadata !DIExpression()) #9, !dbg !11014
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11016, !srcloc !10899
  store i32 %10, i32* %2, align 4, !dbg !11016
  %11 = load i32, i32* %2, align 4, !dbg !11017
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !11018
  store i32 %11, i32* %12, align 4, !dbg !11019
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !11020
  %14 = load i32, i32* %13, align 4, !dbg !11020
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !11021
  store i32 %14, i32* %15, align 4, !dbg !11021
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11022, metadata !DIExpression()), !dbg !11023
  %16 = call i32 @elapsed() #10, !dbg !11024
  %17 = load i32, i32* @cycle_count, align 4, !dbg !11025
  %18 = add i32 %16, %17, !dbg !11026
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !11027
  %20 = sub i32 %18, %19, !dbg !11028
  store i32 %20, i32* %8, align 4, !dbg !11023
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !11029
  %22 = bitcast i32* %21 to [1 x i32]*, !dbg !11029
  %23 = load [1 x i32], [1 x i32]* %22, align 4, !dbg !11029
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %25 = bitcast i32* %24 to [1 x i32]*
  store [1 x i32] %23, [1 x i32]* %25, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10983, metadata !DIExpression()) #9, !dbg !11030
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10989, metadata !DIExpression()) #9, !dbg !11032
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !11033
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !11034
  %28 = load i32, i32* %27, align 4, !dbg !11034
  store i32 %28, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10993, metadata !DIExpression()) #9, !dbg !11035
  %29 = load i32, i32* %1, align 4, !dbg !11037
  %30 = icmp ne i32 %29, 0, !dbg !11038
  br i1 %30, label %31, label %32, !dbg !11039

31:                                               ; preds = %0
  br label %33, !dbg !11040

32:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11041, !srcloc !11004
  br label %33, !dbg !11042

33:                                               ; preds = %31, %32
  %34 = load i32, i32* %8, align 4, !dbg !11043
  %35 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !11044
  %36 = sdiv i32 %35, 10000, !dbg !11044
  %37 = udiv i32 %34, %36, !dbg !11045
  ret i32 %37, !dbg !11046
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_cycle_get_32() #1 !dbg !11047 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !11048, metadata !DIExpression()), !dbg !11049
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !10884, metadata !DIExpression()) #9, !dbg !11050
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !11052
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !10892, metadata !DIExpression()) #9, !dbg !11053
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10894, metadata !DIExpression()) #9, !dbg !11054
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11056, !srcloc !10899
  store i32 %10, i32* %2, align 4, !dbg !11056
  %11 = load i32, i32* %2, align 4, !dbg !11057
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !11058
  store i32 %11, i32* %12, align 4, !dbg !11059
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !11060
  %14 = load i32, i32* %13, align 4, !dbg !11060
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !11061
  store i32 %14, i32* %15, align 4, !dbg !11061
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11062, metadata !DIExpression()), !dbg !11063
  %16 = call i32 @elapsed() #10, !dbg !11064
  %17 = load i32, i32* @cycle_count, align 4, !dbg !11065
  %18 = add i32 %16, %17, !dbg !11066
  store i32 %18, i32* %8, align 4, !dbg !11063
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !11067
  %20 = bitcast i32* %19 to [1 x i32]*, !dbg !11067
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !11067
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %23 = bitcast i32* %22 to [1 x i32]*
  store [1 x i32] %21, [1 x i32]* %23, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10983, metadata !DIExpression()) #9, !dbg !11068
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10989, metadata !DIExpression()) #9, !dbg !11070
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !11071
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !11072
  %26 = load i32, i32* %25, align 4, !dbg !11072
  store i32 %26, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10993, metadata !DIExpression()) #9, !dbg !11073
  %27 = load i32, i32* %1, align 4, !dbg !11075
  %28 = icmp ne i32 %27, 0, !dbg !11076
  br i1 %28, label %29, label %30, !dbg !11077

29:                                               ; preds = %0
  br label %31, !dbg !11078

30:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11079, !srcloc !11004
  br label %31, !dbg !11080

31:                                               ; preds = %29, %30
  %32 = load i32, i32* %8, align 4, !dbg !11081
  ret i32 %32, !dbg !11082
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_idle_exit() #1 !dbg !11083 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11084
  %2 = icmp eq i32 %1, -16777216, !dbg !11086
  br i1 %2, label %3, label %6, !dbg !11087

3:                                                ; preds = %0
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !11088
  %5 = or i32 %4, 1, !dbg !11088
  store volatile i32 %5, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !11088
  br label %6, !dbg !11090

6:                                                ; preds = %3, %0
  ret void, !dbg !11091
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_disable() #1 !dbg !11092 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !11093
  %2 = and i32 %1, -2, !dbg !11093
  store volatile i32 %2, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !11093
  ret void, !dbg !11094
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1, %struct.pinctrl_state** noundef %2) #1 !dbg !11095 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pinctrl_dev_config*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pinctrl_state**, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %5, metadata !11113, metadata !DIExpression()), !dbg !11114
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11115, metadata !DIExpression()), !dbg !11116
  store %struct.pinctrl_state** %2, %struct.pinctrl_state*** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state*** %7, metadata !11117, metadata !DIExpression()), !dbg !11118
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !11119
  %9 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %8, i32 0, i32 0, !dbg !11120
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %9, align 4, !dbg !11120
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, !dbg !11119
  %12 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !11121
  store %struct.pinctrl_state* %11, %struct.pinctrl_state** %12, align 4, !dbg !11122
  br label %13, !dbg !11123

13:                                               ; preds = %35, %3
  %14 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !11124
  %15 = load %struct.pinctrl_state*, %struct.pinctrl_state** %14, align 4, !dbg !11125
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !11126
  %17 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %16, i32 0, i32 0, !dbg !11127
  %18 = load %struct.pinctrl_state*, %struct.pinctrl_state** %17, align 4, !dbg !11127
  %19 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !11128
  %20 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %19, i32 0, i32 1, !dbg !11129
  %21 = load i8, i8* %20, align 4, !dbg !11129
  %22 = zext i8 %21 to i32, !dbg !11126
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %18, i32 %22, !dbg !11126
  %24 = icmp ult %struct.pinctrl_state* %15, %23, !dbg !11130
  br i1 %24, label %25, label %39, !dbg !11123

25:                                               ; preds = %13
  %26 = load i8, i8* %6, align 1, !dbg !11131
  %27 = zext i8 %26 to i32, !dbg !11131
  %28 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !11134
  %29 = load %struct.pinctrl_state*, %struct.pinctrl_state** %28, align 4, !dbg !11135
  %30 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %29, i32 0, i32 2, !dbg !11136
  %31 = load i8, i8* %30, align 1, !dbg !11136
  %32 = zext i8 %31 to i32, !dbg !11137
  %33 = icmp eq i32 %27, %32, !dbg !11138
  br i1 %33, label %34, label %35, !dbg !11139

34:                                               ; preds = %25
  store i32 0, i32* %4, align 4, !dbg !11140
  br label %40, !dbg !11140

35:                                               ; preds = %25
  %36 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !11142
  %37 = load %struct.pinctrl_state*, %struct.pinctrl_state** %36, align 4, !dbg !11143
  %38 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %37, i32 1, !dbg !11143
  store %struct.pinctrl_state* %38, %struct.pinctrl_state** %36, align 4, !dbg !11143
  br label %13, !dbg !11123, !llvm.loop !11144

39:                                               ; preds = %13
  store i32 -2, i32* %4, align 4, !dbg !11146
  br label %40, !dbg !11146

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4, !dbg !11147
  ret i32 %41, !dbg !11147
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_configure_pins(i32* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11148 {
  %4 = alloca i32*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11151, metadata !DIExpression()), !dbg !11152
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !11153, metadata !DIExpression()), !dbg !11154
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11155, metadata !DIExpression()), !dbg !11156
  %8 = load i32, i32* %6, align 4, !dbg !11157
  call void @llvm.dbg.declare(metadata i8* %7, metadata !11158, metadata !DIExpression()), !dbg !11160
  store i8 0, i8* %7, align 1, !dbg !11160
  br label %9, !dbg !11161

9:                                                ; preds = %19, %3
  %10 = load i8, i8* %7, align 1, !dbg !11162
  %11 = zext i8 %10 to i32, !dbg !11162
  %12 = load i8, i8* %5, align 1, !dbg !11164
  %13 = zext i8 %12 to i32, !dbg !11164
  %14 = icmp slt i32 %11, %13, !dbg !11165
  br i1 %14, label %15, label %22, !dbg !11166

15:                                               ; preds = %9
  %16 = load i32*, i32** %4, align 4, !dbg !11167
  %17 = getelementptr inbounds i32, i32* %16, i32 1, !dbg !11167
  store i32* %17, i32** %4, align 4, !dbg !11167
  %18 = load i32, i32* %16, align 4, !dbg !11169
  call void @pinctrl_configure_pin(i32 noundef %18) #10, !dbg !11170
  br label %19, !dbg !11171

19:                                               ; preds = %15
  %20 = load i8, i8* %7, align 1, !dbg !11172
  %21 = add i8 %20, 1, !dbg !11172
  store i8 %21, i8* %7, align 1, !dbg !11172
  br label %9, !dbg !11173, !llvm.loop !11174

22:                                               ; preds = %9
  ret i32 0, !dbg !11176
}

; Function Attrs: noinline nounwind optnone
define internal void @pinctrl_configure_pin(i32 noundef %0) #1 !dbg !11177 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.soc_port_pin, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11180, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin* %3, metadata !11182, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.declare(metadata i8* %4, metadata !11189, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.declare(metadata i8* %5, metadata !11191, metadata !DIExpression()), !dbg !11192
  %6 = load i32, i32* %2, align 4, !dbg !11193
  %7 = lshr i32 %6, 16, !dbg !11193
  %8 = and i32 %7, 65535, !dbg !11193
  %9 = lshr i32 %8, 0, !dbg !11193
  %10 = and i32 %9, 15, !dbg !11193
  %11 = trunc i32 %10 to i8, !dbg !11193
  store i8 %11, i8* %4, align 1, !dbg !11194
  %12 = load i32, i32* %2, align 4, !dbg !11195
  %13 = lshr i32 %12, 16, !dbg !11195
  %14 = and i32 %13, 65535, !dbg !11195
  %15 = lshr i32 %14, 9, !dbg !11195
  %16 = and i32 %15, 7, !dbg !11195
  %17 = trunc i32 %16 to i8, !dbg !11195
  store i8 %17, i8* %5, align 1, !dbg !11196
  %18 = load i8, i8* %4, align 1, !dbg !11197
  %19 = zext i8 %18 to i32, !dbg !11198
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* @sam_port_addrs, i32 0, i32 %19, !dbg !11198
  %21 = load i32, i32* %20, align 4, !dbg !11198
  %22 = inttoptr i32 %21 to %struct.PortGroup*, !dbg !11199
  %23 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 0, !dbg !11200
  store %struct.PortGroup* %22, %struct.PortGroup** %23, align 4, !dbg !11201
  %24 = load i32, i32* %2, align 4, !dbg !11202
  %25 = lshr i32 %24, 16, !dbg !11202
  %26 = and i32 %25, 65535, !dbg !11202
  %27 = lshr i32 %26, 4, !dbg !11202
  %28 = and i32 %27, 31, !dbg !11202
  %29 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 1, !dbg !11203
  store i32 %28, i32* %29, align 4, !dbg !11204
  %30 = load i32, i32* %2, align 4, !dbg !11205
  %31 = lshr i32 %30, 0, !dbg !11205
  %32 = and i32 %31, 63, !dbg !11205
  %33 = shl i32 %32, 0, !dbg !11206
  %34 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !11207
  store i32 %33, i32* %34, align 4, !dbg !11208
  %35 = load i8, i8* %5, align 1, !dbg !11209
  %36 = zext i8 %35 to i32, !dbg !11209
  %37 = icmp eq i32 %36, 1, !dbg !11211
  br i1 %37, label %38, label %49, !dbg !11212

38:                                               ; preds = %1
  %39 = load i32, i32* %2, align 4, !dbg !11213
  %40 = lshr i32 %39, 16, !dbg !11213
  %41 = and i32 %40, 65535, !dbg !11213
  %42 = lshr i32 %41, 12, !dbg !11213
  %43 = and i32 %42, 15, !dbg !11213
  %44 = shl i32 %43, 16, !dbg !11215
  %45 = or i32 %44, 64, !dbg !11216
  %46 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !11217
  %47 = load i32, i32* %46, align 4, !dbg !11218
  %48 = or i32 %47, %45, !dbg !11218
  store i32 %48, i32* %46, align 4, !dbg !11218
  br label %49, !dbg !11219

49:                                               ; preds = %38, %1
  call void @soc_port_configure(%struct.soc_port_pin* noundef %3) #10, !dbg !11220
  ret void, !dbg !11221
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_device_state_init() #1 !dbg !11222 {
  %1 = alloca %struct.device.73*, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %1, metadata !11224, metadata !DIExpression()), !dbg !11240
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %1, align 4, !dbg !11240
  br label %2, !dbg !11241

2:                                                ; preds = %5, %0
  %3 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !11242
  %4 = icmp ult %struct.device.73* %3, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !11243
  br i1 %4, label %5, label %10, !dbg !11241

5:                                                ; preds = %2
  %6 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !11244
  %7 = bitcast %struct.device.73* %6 to i8*, !dbg !11244
  call void @z_object_init(i8* noundef %7) #10, !dbg !11246
  %8 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !11247
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 1, !dbg !11247
  store %struct.device.73* %9, %struct.device.73** %1, align 4, !dbg !11247
  br label %2, !dbg !11241, !llvm.loop !11248

10:                                               ; preds = %2
  ret void, !dbg !11250
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init(i8* noundef %0) #1 !dbg !11251 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11252, metadata !DIExpression()), !dbg !11253
  %3 = load i8*, i8** %2, align 4, !dbg !11254
  ret void, !dbg !11255
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.device.73* @z_impl_device_get_binding(i8* noundef %0) #1 !dbg !11256 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca i8*, align 4
  %4 = alloca %struct.device.73*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11259, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !11261, metadata !DIExpression()), !dbg !11262
  %5 = load i8*, i8** %3, align 4, !dbg !11263
  %6 = icmp eq i8* %5, null, !dbg !11265
  br i1 %6, label %13, label %7, !dbg !11266

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 4, !dbg !11267
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !11267
  %10 = load i8, i8* %9, align 1, !dbg !11267
  %11 = zext i8 %10 to i32, !dbg !11267
  %12 = icmp eq i32 %11, 0, !dbg !11268
  br i1 %12, label %13, label %14, !dbg !11269

13:                                               ; preds = %7, %1
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !11270
  br label %54, !dbg !11270

14:                                               ; preds = %7
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !11272
  br label %15, !dbg !11274

15:                                               ; preds = %30, %14
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11275
  %17 = icmp ne %struct.device.73* %16, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !11277
  br i1 %17, label %18, label %33, !dbg !11278

18:                                               ; preds = %15
  %19 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11279
  %20 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %19) #10, !dbg !11282
  br i1 %20, label %21, label %29, !dbg !11283

21:                                               ; preds = %18
  %22 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11284
  %23 = getelementptr inbounds %struct.device.73, %struct.device.73* %22, i32 0, i32 0, !dbg !11285
  %24 = load i8*, i8** %23, align 4, !dbg !11285
  %25 = load i8*, i8** %3, align 4, !dbg !11286
  %26 = icmp eq i8* %24, %25, !dbg !11287
  br i1 %26, label %27, label %29, !dbg !11288

27:                                               ; preds = %21
  %28 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11289
  store %struct.device.73* %28, %struct.device.73** %2, align 4, !dbg !11291
  br label %54, !dbg !11291

29:                                               ; preds = %21, %18
  br label %30, !dbg !11292

30:                                               ; preds = %29
  %31 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11293
  %32 = getelementptr inbounds %struct.device.73, %struct.device.73* %31, i32 1, !dbg !11293
  store %struct.device.73* %32, %struct.device.73** %4, align 4, !dbg !11293
  br label %15, !dbg !11294, !llvm.loop !11295

33:                                               ; preds = %15
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !11297
  br label %34, !dbg !11299

34:                                               ; preds = %50, %33
  %35 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11300
  %36 = icmp ne %struct.device.73* %35, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !11302
  br i1 %36, label %37, label %53, !dbg !11303

37:                                               ; preds = %34
  %38 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11304
  %39 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %38) #10, !dbg !11307
  br i1 %39, label %40, label %49, !dbg !11308

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 4, !dbg !11309
  %42 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11310
  %43 = getelementptr inbounds %struct.device.73, %struct.device.73* %42, i32 0, i32 0, !dbg !11311
  %44 = load i8*, i8** %43, align 4, !dbg !11311
  %45 = call i32 @strcmp(i8* noundef %41, i8* noundef %44) #10, !dbg !11312
  %46 = icmp eq i32 %45, 0, !dbg !11313
  br i1 %46, label %47, label %49, !dbg !11314

47:                                               ; preds = %40
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11315
  store %struct.device.73* %48, %struct.device.73** %2, align 4, !dbg !11317
  br label %54, !dbg !11317

49:                                               ; preds = %40, %37
  br label %50, !dbg !11318

50:                                               ; preds = %49
  %51 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11319
  %52 = getelementptr inbounds %struct.device.73, %struct.device.73* %51, i32 1, !dbg !11319
  store %struct.device.73* %52, %struct.device.73** %4, align 4, !dbg !11319
  br label %34, !dbg !11320, !llvm.loop !11321

53:                                               ; preds = %34
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !11323
  br label %54, !dbg !11323

54:                                               ; preds = %53, %47, %27, %13
  %55 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !11324
  ret %struct.device.73* %55, !dbg !11324
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !11325 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !11328, metadata !DIExpression()), !dbg !11329
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11330
  %5 = icmp eq %struct.device.73* %4, null, !dbg !11332
  br i1 %5, label %6, label %7, !dbg !11333

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !11334
  br label %25, !dbg !11334

7:                                                ; preds = %1
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11336
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 3, !dbg !11337
  %10 = load %struct.device_state.72*, %struct.device_state.72** %9, align 4, !dbg !11337
  %11 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %10, i32 0, i32 1, !dbg !11338
  %12 = load i8, i8* %11, align 1, !dbg !11338
  %13 = and i8 %12, 1, !dbg !11338
  %14 = trunc i8 %13 to i1, !dbg !11338
  br i1 %14, label %15, label %23, !dbg !11339

15:                                               ; preds = %7
  %16 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11340
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 3, !dbg !11341
  %18 = load %struct.device_state.72*, %struct.device_state.72** %17, align 4, !dbg !11341
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !11342
  %20 = load i8, i8* %19, align 1, !dbg !11342
  %21 = zext i8 %20 to i32, !dbg !11340
  %22 = icmp eq i32 %21, 0, !dbg !11343
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi i1 [ false, %7 ], [ %22, %15 ], !dbg !11344
  store i1 %24, i1* %2, align 1, !dbg !11345
  br label %25, !dbg !11345

25:                                               ; preds = %23, %6
  %26 = load i1, i1* %2, align 1, !dbg !11346
  ret i1 %26, !dbg !11346
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_device_get_all_static(%struct.device.73** noundef %0) #1 !dbg !11347 {
  %2 = alloca %struct.device.73**, align 4
  store %struct.device.73** %0, %struct.device.73*** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73*** %2, metadata !11351, metadata !DIExpression()), !dbg !11352
  %3 = load %struct.device.73**, %struct.device.73*** %2, align 4, !dbg !11353
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %3, align 4, !dbg !11354
  ret i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), !dbg !11355
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_required_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !11356 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !11363, metadata !DIExpression()), !dbg !11364
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !11365, metadata !DIExpression()), !dbg !11366
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11367, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11369, metadata !DIExpression()), !dbg !11370
  store i32 0, i32* %7, align 4, !dbg !11370
  call void @llvm.dbg.declare(metadata i16** %8, metadata !11371, metadata !DIExpression()), !dbg !11372
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11373
  %10 = call i16* @device_required_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !11374
  store i16* %10, i16** %8, align 4, !dbg !11372
  %11 = load i16*, i16** %8, align 4, !dbg !11375
  %12 = load i32, i32* %7, align 4, !dbg !11376
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !11377
  %14 = load i8*, i8** %6, align 4, !dbg !11378
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !11379
  ret i32 %15, !dbg !11380
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_required_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !11381 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !11384, metadata !DIExpression()), !dbg !11385
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11386, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.declare(metadata i16** %5, metadata !11388, metadata !DIExpression()), !dbg !11389
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11390
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 5, !dbg !11391
  %9 = load i16*, i16** %8, align 4, !dbg !11391
  store i16* %9, i16** %5, align 4, !dbg !11389
  %10 = load i16*, i16** %5, align 4, !dbg !11392
  %11 = icmp ne i16* %10, null, !dbg !11394
  br i1 %11, label %12, label %35, !dbg !11395

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11396, metadata !DIExpression()), !dbg !11398
  store i32 0, i32* %6, align 4, !dbg !11398
  br label %13, !dbg !11399

13:                                               ; preds = %29, %12
  %14 = load i16*, i16** %5, align 4, !dbg !11400
  %15 = load i32, i32* %6, align 4, !dbg !11401
  %16 = getelementptr inbounds i16, i16* %14, i32 %15, !dbg !11400
  %17 = load i16, i16* %16, align 2, !dbg !11400
  %18 = sext i16 %17 to i32, !dbg !11400
  %19 = icmp ne i32 %18, 32767, !dbg !11402
  br i1 %19, label %20, label %27, !dbg !11403

20:                                               ; preds = %13
  %21 = load i16*, i16** %5, align 4, !dbg !11404
  %22 = load i32, i32* %6, align 4, !dbg !11405
  %23 = getelementptr inbounds i16, i16* %21, i32 %22, !dbg !11404
  %24 = load i16, i16* %23, align 2, !dbg !11404
  %25 = sext i16 %24 to i32, !dbg !11404
  %26 = icmp ne i32 %25, -32768, !dbg !11406
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ false, %13 ], [ %26, %20 ], !dbg !11407
  br i1 %28, label %29, label %32, !dbg !11399

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4, !dbg !11408
  %31 = add i32 %30, 1, !dbg !11408
  store i32 %31, i32* %6, align 4, !dbg !11408
  br label %13, !dbg !11399, !llvm.loop !11410

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4, !dbg !11412
  %34 = load i32*, i32** %4, align 4, !dbg !11413
  store i32 %33, i32* %34, align 4, !dbg !11414
  br label %35, !dbg !11415

35:                                               ; preds = %32, %2
  %36 = load i16*, i16** %5, align 4, !dbg !11416
  ret i16* %36, !dbg !11417
}

; Function Attrs: noinline nounwind optnone
define internal i32 @device_visitor(i16* noundef %0, i32 noundef %1, i32 (%struct.device.73*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !11418 {
  %5 = alloca i32, align 4
  %6 = alloca i16*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.device.73*, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 4
  call void @llvm.dbg.declare(metadata i16** %6, metadata !11421, metadata !DIExpression()), !dbg !11422
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11423, metadata !DIExpression()), !dbg !11424
  store i32 (%struct.device.73*, i8*)* %2, i32 (%struct.device.73*, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %8, metadata !11425, metadata !DIExpression()), !dbg !11426
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11429, metadata !DIExpression()), !dbg !11431
  store i32 0, i32* %10, align 4, !dbg !11431
  br label %14, !dbg !11432

14:                                               ; preds = %34, %4
  %15 = load i32, i32* %10, align 4, !dbg !11433
  %16 = load i32, i32* %7, align 4, !dbg !11435
  %17 = icmp ult i32 %15, %16, !dbg !11436
  br i1 %17, label %18, label %37, !dbg !11437

18:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i16* %11, metadata !11438, metadata !DIExpression()), !dbg !11440
  %19 = load i16*, i16** %6, align 4, !dbg !11441
  %20 = load i32, i32* %10, align 4, !dbg !11442
  %21 = getelementptr inbounds i16, i16* %19, i32 %20, !dbg !11441
  %22 = load i16, i16* %21, align 2, !dbg !11441
  store i16 %22, i16* %11, align 2, !dbg !11440
  call void @llvm.dbg.declare(metadata %struct.device.73** %12, metadata !11443, metadata !DIExpression()), !dbg !11444
  %23 = load i16, i16* %11, align 2, !dbg !11445
  %24 = call %struct.device.73* @device_from_handle(i16 noundef signext %23) #10, !dbg !11446
  store %struct.device.73* %24, %struct.device.73** %12, align 4, !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11447, metadata !DIExpression()), !dbg !11448
  %25 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %8, align 4, !dbg !11449
  %26 = load %struct.device.73*, %struct.device.73** %12, align 4, !dbg !11450
  %27 = load i8*, i8** %9, align 4, !dbg !11451
  %28 = call i32 %25(%struct.device.73* noundef %26, i8* noundef %27) #10, !dbg !11449
  store i32 %28, i32* %13, align 4, !dbg !11448
  %29 = load i32, i32* %13, align 4, !dbg !11452
  %30 = icmp slt i32 %29, 0, !dbg !11454
  br i1 %30, label %31, label %33, !dbg !11455

31:                                               ; preds = %18
  %32 = load i32, i32* %13, align 4, !dbg !11456
  store i32 %32, i32* %5, align 4, !dbg !11458
  br label %39, !dbg !11458

33:                                               ; preds = %18
  br label %34, !dbg !11459

34:                                               ; preds = %33
  %35 = load i32, i32* %10, align 4, !dbg !11460
  %36 = add i32 %35, 1, !dbg !11460
  store i32 %36, i32* %10, align 4, !dbg !11460
  br label %14, !dbg !11461, !llvm.loop !11462

37:                                               ; preds = %14
  %38 = load i32, i32* %7, align 4, !dbg !11464
  store i32 %38, i32* %5, align 4, !dbg !11465
  br label %39, !dbg !11465

39:                                               ; preds = %37, %31
  %40 = load i32, i32* %5, align 4, !dbg !11466
  ret i32 %40, !dbg !11466
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.73* @device_from_handle(i16 noundef signext %0) #1 !dbg !11467 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  store i16 %0, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !11470, metadata !DIExpression()), !dbg !11471
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !11472, metadata !DIExpression()), !dbg !11473
  store %struct.device.73* null, %struct.device.73** %3, align 4, !dbg !11473
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), i32* %4, align 4, !dbg !11475
  %5 = load i16, i16* %2, align 2, !dbg !11476
  %6 = sext i16 %5 to i32, !dbg !11476
  %7 = icmp sgt i32 %6, 0, !dbg !11478
  br i1 %7, label %8, label %18, !dbg !11479

8:                                                ; preds = %1
  %9 = load i16, i16* %2, align 2, !dbg !11480
  %10 = sext i16 %9 to i32, !dbg !11481
  %11 = load i32, i32* %4, align 4, !dbg !11482
  %12 = icmp ule i32 %10, %11, !dbg !11483
  br i1 %12, label %13, label %18, !dbg !11484

13:                                               ; preds = %8
  %14 = load i16, i16* %2, align 2, !dbg !11485
  %15 = sext i16 %14 to i32, !dbg !11485
  %16 = sub nsw i32 %15, 1, !dbg !11487
  %17 = getelementptr inbounds [0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 %16, !dbg !11488
  store %struct.device.73* %17, %struct.device.73** %3, align 4, !dbg !11489
  br label %18, !dbg !11490

18:                                               ; preds = %13, %8, %1
  %19 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11491
  ret %struct.device.73* %19, !dbg !11492
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_supported_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !11493 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !11494, metadata !DIExpression()), !dbg !11495
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !11496, metadata !DIExpression()), !dbg !11497
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11500, metadata !DIExpression()), !dbg !11501
  store i32 0, i32* %7, align 4, !dbg !11501
  call void @llvm.dbg.declare(metadata i16** %8, metadata !11502, metadata !DIExpression()), !dbg !11503
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11504
  %10 = call i16* @device_supported_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !11505
  store i16* %10, i16** %8, align 4, !dbg !11503
  %11 = load i16*, i16** %8, align 4, !dbg !11506
  %12 = load i32, i32* %7, align 4, !dbg !11507
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !11508
  %14 = load i8*, i8** %6, align 4, !dbg !11509
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !11510
  ret i32 %15, !dbg !11511
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_supported_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !11512 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !11513, metadata !DIExpression()), !dbg !11514
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11515, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.declare(metadata i16** %5, metadata !11517, metadata !DIExpression()), !dbg !11518
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !11519
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 5, !dbg !11520
  %10 = load i16*, i16** %9, align 4, !dbg !11520
  store i16* %10, i16** %5, align 4, !dbg !11518
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i32 0, i32* %6, align 4, !dbg !11522
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11523, metadata !DIExpression()), !dbg !11524
  store i32 0, i32* %7, align 4, !dbg !11524
  %11 = load i16*, i16** %5, align 4, !dbg !11525
  %12 = icmp ne i16* %11, null, !dbg !11527
  br i1 %12, label %13, label %42, !dbg !11528

13:                                               ; preds = %2
  br label %14, !dbg !11529

14:                                               ; preds = %25, %13
  %15 = load i32, i32* %6, align 4, !dbg !11531
  %16 = icmp ne i32 %15, 2, !dbg !11532
  br i1 %16, label %17, label %28, !dbg !11529

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 4, !dbg !11533
  %19 = load i16, i16* %18, align 2, !dbg !11536
  %20 = sext i16 %19 to i32, !dbg !11536
  %21 = icmp eq i32 %20, -32768, !dbg !11537
  br i1 %21, label %22, label %25, !dbg !11538

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4, !dbg !11539
  %24 = add i32 %23, 1, !dbg !11539
  store i32 %24, i32* %6, align 4, !dbg !11539
  br label %25, !dbg !11541

25:                                               ; preds = %22, %17
  %26 = load i16*, i16** %5, align 4, !dbg !11542
  %27 = getelementptr inbounds i16, i16* %26, i32 1, !dbg !11542
  store i16* %27, i16** %5, align 4, !dbg !11542
  br label %14, !dbg !11529, !llvm.loop !11543

28:                                               ; preds = %14
  br label %29, !dbg !11545

29:                                               ; preds = %36, %28
  %30 = load i16*, i16** %5, align 4, !dbg !11546
  %31 = load i32, i32* %7, align 4, !dbg !11547
  %32 = getelementptr inbounds i16, i16* %30, i32 %31, !dbg !11546
  %33 = load i16, i16* %32, align 2, !dbg !11546
  %34 = sext i16 %33 to i32, !dbg !11546
  %35 = icmp ne i32 %34, 32767, !dbg !11548
  br i1 %35, label %36, label %39, !dbg !11545

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4, !dbg !11549
  %38 = add i32 %37, 1, !dbg !11549
  store i32 %38, i32* %7, align 4, !dbg !11549
  br label %29, !dbg !11545, !llvm.loop !11551

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4, !dbg !11553
  %41 = load i32*, i32** %4, align 4, !dbg !11554
  store i32 %40, i32* %41, align 4, !dbg !11555
  br label %42, !dbg !11556

42:                                               ; preds = %39, %2
  %43 = load i16*, i16** %5, align 4, !dbg !11557
  ret i16* %43, !dbg !11558
}

; Function Attrs: noinline nounwind optnone
define dso_local i32* @z_impl_z_errno() #1 !dbg !11559 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11562
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 4, !dbg !11563
  ret i32* %2, !dbg !11564
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump(i32 noundef %0, %struct.__esf* noundef %1, %struct.k_thread.60* noundef %2) #1 !dbg !11565 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca %struct.k_thread.60*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11706, metadata !DIExpression()), !dbg !11707
  store %struct.__esf* %1, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !11708, metadata !DIExpression()), !dbg !11709
  store %struct.k_thread.60* %2, %struct.k_thread.60** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %6, metadata !11710, metadata !DIExpression()), !dbg !11711
  ret void, !dbg !11712
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) #1 !dbg !11713 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11716, metadata !DIExpression()), !dbg !11717
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11718, metadata !DIExpression()), !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_buffer_output(i8* noundef %0, i32 noundef %1) #1 !dbg !11721 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11724, metadata !DIExpression()), !dbg !11725
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11726, metadata !DIExpression()), !dbg !11727
  ret void, !dbg !11728
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_query(i32 noundef %0, i8* noundef %1) #1 !dbg !11729 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11732, metadata !DIExpression()), !dbg !11733
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11734, metadata !DIExpression()), !dbg !11735
  ret i32 -134, !dbg !11736
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* noundef %1) #1 !dbg !11737 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11740, metadata !DIExpression()), !dbg !11741
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11742, metadata !DIExpression()), !dbg !11743
  ret i32 -134, !dbg !11744
}

; Function Attrs: noinline noreturn nounwind optnone
define weak dso_local void @arch_system_halt(i32 noundef %0) #5 !dbg !11745 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11747, metadata !DIExpression()), !dbg !11748
  %4 = load i32, i32* %3, align 4, !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11750, metadata !DIExpression()) #9, !dbg !11752
  %5 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11754, !srcloc !11755
  store i32 %5, i32* %2, align 4, !dbg !11754
  %6 = load i32, i32* %2, align 4, !dbg !11756
  br label %7, !dbg !11757

7:                                                ; preds = %7, %1
  br label %7, !dbg !11758, !llvm.loop !11761
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !11764 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11767, metadata !DIExpression()), !dbg !11768
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !11769, metadata !DIExpression()), !dbg !11770
  %9 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !11771
  br label %10, !dbg !11772

10:                                               ; preds = %2
  br label %11, !dbg !11773

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4, !dbg !11777
  call void @arch_system_halt(i32 noundef %12) #12, !dbg !11778
  unreachable, !dbg !11778
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_fatal_halt(i32 noundef %0) #5 !dbg !11779 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11780, metadata !DIExpression()), !dbg !11781
  %3 = load i32, i32* %2, align 4, !dbg !11782
  call void @arch_system_halt(i32 noundef %3) #12, !dbg !11783
  unreachable, !dbg !11783
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !11784 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.__esf*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.k_thread.60*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11785, metadata !DIExpression()), !dbg !11786
  store %struct.__esf* %1, %struct.__esf** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %8, metadata !11787, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11789, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11750, metadata !DIExpression()) #9, !dbg !11791
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !11793, !srcloc !11755
  store i32 %23, i32* %6, align 4, !dbg !11793
  %24 = load i32, i32* %6, align 4, !dbg !11794
  store i32 %24, i32* %9, align 4, !dbg !11790
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %10, metadata !11795, metadata !DIExpression()), !dbg !11796
  %25 = call %struct.k_thread.60* @k_current_get.43() #11, !dbg !11797
  store %struct.k_thread.60* %25, %struct.k_thread.60** %10, align 4, !dbg !11796
  br label %26, !dbg !11798

26:                                               ; preds = %2
  br label %27, !dbg !11799

27:                                               ; preds = %26
  %28 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11803
  %29 = icmp ne %struct.__esf* %28, null, !dbg !11805
  br i1 %29, label %30, label %43, !dbg !11806

30:                                               ; preds = %27
  %31 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11807
  store %struct.__esf* %31, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !11808, metadata !DIExpression()), !dbg !11812
  %32 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !11814
  %33 = getelementptr inbounds %struct.__esf, %struct.__esf* %32, i32 0, i32 0, !dbg !11815
  %34 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %33, i32 0, i32 7, !dbg !11816
  %35 = load i32, i32* %34, align 4, !dbg !11816
  %36 = and i32 %35, 511, !dbg !11817
  %37 = icmp ne i32 %36, 0, !dbg !11818
  %38 = zext i1 %37 to i64, !dbg !11818
  %39 = select i1 %37, i32 1, i32 0, !dbg !11818
  br i1 %37, label %40, label %43, !dbg !11819

40:                                               ; preds = %30
  br label %41, !dbg !11820

41:                                               ; preds = %40
  br label %42, !dbg !11822

42:                                               ; preds = %41
  br label %43, !dbg !11826

43:                                               ; preds = %42, %30, %27
  br label %44, !dbg !11827

44:                                               ; preds = %43
  br label %45, !dbg !11828

45:                                               ; preds = %44
  %46 = load i32, i32* %7, align 4, !dbg !11832
  %47 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11833
  %48 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !11834
  call void @coredump(i32 noundef %46, %struct.__esf* noundef %47, %struct.k_thread.60* noundef %48) #10, !dbg !11835
  %49 = load i32, i32* %7, align 4, !dbg !11836
  %50 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11837
  call void @k_sys_fatal_error_handler(i32 noundef %49, %struct.__esf* noundef %50) #10, !dbg !11838
  %51 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11839
  %52 = icmp ne %struct.__esf* %51, null, !dbg !11843
  br i1 %52, label %53, label %64, !dbg !11844

53:                                               ; preds = %45
  %54 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !11845
  store %struct.__esf* %54, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !11808, metadata !DIExpression()), !dbg !11846
  %55 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !11848
  %56 = getelementptr inbounds %struct.__esf, %struct.__esf* %55, i32 0, i32 0, !dbg !11849
  %57 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %56, i32 0, i32 7, !dbg !11850
  %58 = load i32, i32* %57, align 4, !dbg !11850
  %59 = and i32 %58, 511, !dbg !11851
  %60 = icmp ne i32 %59, 0, !dbg !11852
  %61 = zext i1 %60 to i64, !dbg !11852
  %62 = select i1 %60, i32 1, i32 0, !dbg !11852
  br i1 %60, label %63, label %64, !dbg !11853

63:                                               ; preds = %53
  br label %64, !dbg !11854

64:                                               ; preds = %63, %53, %45
  %65 = load i32, i32* %9, align 4, !dbg !11856
  store i32 %65, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11857, metadata !DIExpression()) #9, !dbg !11859
  %66 = load i32, i32* %3, align 4, !dbg !11861
  %67 = icmp ne i32 %66, 0, !dbg !11863
  br i1 %67, label %68, label %69, !dbg !11864

68:                                               ; preds = %64
  br label %70, !dbg !11865

69:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !11867, !srcloc !11868
  br label %70, !dbg !11869

70:                                               ; preds = %68, %69
  %71 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !11870
  call void @k_thread_abort.44(%struct.k_thread.60* noundef %71) #10, !dbg !11873
  ret void, !dbg !11874
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get.43() #6 !dbg !11875 {
  %1 = call %struct.k_thread.60* @z_current_get.45() #11, !dbg !11879
  ret %struct.k_thread.60* %1, !dbg !11880
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort.44(%struct.k_thread.60* noundef %0) #1 !dbg !11881 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !11884, metadata !DIExpression()), !dbg !11885
  br label %3, !dbg !11886

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11887, !srcloc !11889
  br label %4, !dbg !11887

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !11890
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !11891
  ret void, !dbg !11892
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get.45() #6 !dbg !11893 {
  br label %1, !dbg !11894

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11895, !srcloc !11897
  br label %2, !dbg !11895

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !11898
  ret %struct.k_thread.60* %3, !dbg !11899
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !11900 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11903, metadata !DIExpression()), !dbg !11904
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11905, metadata !DIExpression()), !dbg !11906
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11907, metadata !DIExpression()), !dbg !11908
  %7 = load i8*, i8** %4, align 4, !dbg !11909
  %8 = load i32, i32* %5, align 4, !dbg !11910
  %9 = load i32, i32* %6, align 4, !dbg !11911
  %10 = call i8* @memset(i8* noundef %7, i32 noundef %8, i32 noundef %9) #10, !dbg !11912
  ret void, !dbg !11913
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !11914 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11919, metadata !DIExpression()), !dbg !11920
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11921, metadata !DIExpression()), !dbg !11922
  %7 = load i8*, i8** %4, align 4, !dbg !11923
  %8 = load i8*, i8** %5, align 4, !dbg !11924
  %9 = load i32, i32* %6, align 4, !dbg !11925
  %10 = call i8* @memcpy(i8* noundef %7, i8* noundef %8, i32 noundef %9) #10, !dbg !11926
  ret void, !dbg !11927
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_bss_zero() #1 !dbg !11928 {
  call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #10, !dbg !11929
  ret void, !dbg !11930
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_cpu(i32 noundef %0) #1 !dbg !11931 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11934, metadata !DIExpression()), !dbg !11935
  %3 = load i32, i32* %2, align 4, !dbg !11936
  call void @init_idle_thread(i32 noundef %3) #10, !dbg !11937
  %4 = load i32, i32* %2, align 4, !dbg !11938
  %5 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %4, !dbg !11939
  %6 = load i32, i32* %2, align 4, !dbg !11940
  %7 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %6, !dbg !11941
  %8 = getelementptr inbounds %struct._cpu, %struct._cpu* %7, i32 0, i32 3, !dbg !11942
  store %struct.k_thread.203* %5, %struct.k_thread.203** %8, align 4, !dbg !11943
  %9 = load i32, i32* %2, align 4, !dbg !11944
  %10 = trunc i32 %9 to i8, !dbg !11944
  %11 = load i32, i32* %2, align 4, !dbg !11945
  %12 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %11, !dbg !11946
  %13 = getelementptr inbounds %struct._cpu, %struct._cpu* %12, i32 0, i32 5, !dbg !11947
  store i8 %10, i8* %13, align 4, !dbg !11948
  %14 = load i32, i32* %2, align 4, !dbg !11949
  %15 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %14, !dbg !11950
  %16 = getelementptr inbounds [2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* %15, i32 0, i32 0, !dbg !11950
  %17 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %16) #10, !dbg !11951
  %18 = getelementptr inbounds i8, i8* %17, i32 2048, !dbg !11952
  %19 = load i32, i32* %2, align 4, !dbg !11953
  %20 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %19, !dbg !11954
  %21 = getelementptr inbounds %struct._cpu, %struct._cpu* %20, i32 0, i32 1, !dbg !11955
  store i8* %18, i8** %21, align 4, !dbg !11956
  ret void, !dbg !11957
}

; Function Attrs: noinline nounwind optnone
define internal void @init_idle_thread(i32 noundef %0) #1 !dbg !11958 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.z_thread_stack_element*, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11959, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !11961, metadata !DIExpression()), !dbg !11962
  %6 = load i32, i32* %2, align 4, !dbg !11963
  %7 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %6, !dbg !11964
  store %struct.k_thread.203* %7, %struct.k_thread.203** %3, align 4, !dbg !11962
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %4, metadata !11965, metadata !DIExpression()), !dbg !11968
  %8 = load i32, i32* %2, align 4, !dbg !11969
  %9 = getelementptr inbounds [1 x [256 x %struct.z_thread_stack_element]], [1 x [256 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %8, !dbg !11970
  %10 = getelementptr inbounds [256 x %struct.z_thread_stack_element], [256 x %struct.z_thread_stack_element]* %9, i32 0, i32 0, !dbg !11970
  store %struct.z_thread_stack_element* %10, %struct.z_thread_stack_element** %4, align 4, !dbg !11968
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11971, metadata !DIExpression()), !dbg !11972
  store i8* null, i8** %5, align 4, !dbg !11972
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11973
  %12 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %4, align 4, !dbg !11974
  %13 = load i32, i32* %2, align 4, !dbg !11975
  %14 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %13, !dbg !11976
  %15 = bitcast %struct._cpu* %14 to i8*, !dbg !11977
  %16 = load i8*, i8** %5, align 4, !dbg !11978
  %17 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %11, %struct.z_thread_stack_element* noundef %12, i32 noundef 256, void (i8*, i8*, i8*)* noundef @idle, i8* noundef %15, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef %16) #10, !dbg !11979
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11980
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef %18) #10, !dbg !11981
  ret void, !dbg !11982
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11983 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11986, metadata !DIExpression()), !dbg !11987
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11988
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11989
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11990
  ret i8* %5, !dbg !11991
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started(%struct.k_thread.203* noundef %0) #1 !dbg !11992 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11996, metadata !DIExpression()), !dbg !11997
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11998
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !11999
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !12000
  %6 = load i8, i8* %5, align 1, !dbg !12001
  %7 = zext i8 %6 to i32, !dbg !12001
  %8 = and i32 %7, -5, !dbg !12001
  %9 = trunc i32 %8 to i8, !dbg !12001
  store i8 %9, i8* %5, align 1, !dbg !12001
  ret void, !dbg !12002
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_cstart() #5 !dbg !12003 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203, align 8
  call void @gcov_static_init() #10, !dbg !12004
  call void @z_sys_init_run_level(i32 noundef 0) #10, !dbg !12005
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12006, metadata !DIExpression()) #9, !dbg !12009
  %4 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #13, !dbg !12014
  %5 = ptrtoint i8* %4 to i32, !dbg !12015
  %6 = add i32 %5, 2048, !dbg !12016
  store i32 %6, i32* %2, align 4, !dbg !12009
  %7 = load i32, i32* %2, align 4, !dbg !12017
  store i32 %7, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12018, metadata !DIExpression()) #9, !dbg !12022
  %8 = load i32, i32* %1, align 4, !dbg !12024
  call void asm sideeffect "MSR msp, $0", "r"(i32 %8) #9, !dbg !12025, !srcloc !12026
  call void @__NVIC_SetPriority.52(i32 noundef -2, i32 noundef 255) #13, !dbg !12027
  call void @z_arm_fault_init() #13, !dbg !12030
  call void @z_arm_cpu_idle_init() #13, !dbg !12031
  br label %9, !dbg !12032

9:                                                ; preds = %0
  br label %10, !dbg !12033

10:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.k_thread.203* %3, metadata !12035, metadata !DIExpression()), !dbg !12036
  call void @z_dummy_thread_init(%struct.k_thread.203* noundef %3) #10, !dbg !12037
  call void @z_device_state_init() #10, !dbg !12038
  call void @z_sys_init_run_level(i32 noundef 1) #10, !dbg !12039
  call void @z_sys_init_run_level(i32 noundef 2) #10, !dbg !12040
  %11 = call i8* @prepare_multithreading() #10, !dbg !12041
  call void @switch_to_main_thread(i8* noundef %11) #12, !dbg !12042
  unreachable, !dbg !12042
}

; Function Attrs: noinline nounwind optnone
define internal void @gcov_static_init() #1 !dbg !12043 {
  ret void, !dbg !12045
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sys_init_run_level(i32 noundef %0) #1 !dbg !3274 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.init_entry*, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12046, metadata !DIExpression()), !dbg !12047
  call void @llvm.dbg.declare(metadata %struct.init_entry** %3, metadata !12048, metadata !DIExpression()), !dbg !12049
  %6 = load i32, i32* %2, align 4, !dbg !12050
  %7 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %6, !dbg !12052
  %8 = load %struct.init_entry*, %struct.init_entry** %7, align 4, !dbg !12052
  store %struct.init_entry* %8, %struct.init_entry** %3, align 4, !dbg !12053
  br label %9, !dbg !12054

9:                                                ; preds = %56, %1
  %10 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !12055
  %11 = load i32, i32* %2, align 4, !dbg !12057
  %12 = add i32 %11, 1, !dbg !12058
  %13 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %12, !dbg !12059
  %14 = load %struct.init_entry*, %struct.init_entry** %13, align 4, !dbg !12059
  %15 = icmp ult %struct.init_entry* %10, %14, !dbg !12060
  br i1 %15, label %16, label %59, !dbg !12061

16:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !12062, metadata !DIExpression()), !dbg !12064
  %17 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !12065
  %18 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %17, i32 0, i32 1, !dbg !12066
  %19 = load %struct.device.73*, %struct.device.73** %18, align 4, !dbg !12066
  store %struct.device.73* %19, %struct.device.73** %4, align 4, !dbg !12064
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12067, metadata !DIExpression()), !dbg !12068
  %20 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !12069
  %21 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %20, i32 0, i32 0, !dbg !12070
  %22 = load i32 (%struct.device.73*)*, i32 (%struct.device.73*)** %21, align 4, !dbg !12070
  %23 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !12071
  %24 = call i32 %22(%struct.device.73* noundef %23) #10, !dbg !12069
  store i32 %24, i32* %5, align 4, !dbg !12068
  %25 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !12072
  %26 = icmp ne %struct.device.73* %25, null, !dbg !12074
  br i1 %26, label %27, label %55, !dbg !12075

27:                                               ; preds = %16
  %28 = load i32, i32* %5, align 4, !dbg !12076
  %29 = icmp ne i32 %28, 0, !dbg !12079
  br i1 %29, label %30, label %47, !dbg !12080

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4, !dbg !12081
  %32 = icmp slt i32 %31, 0, !dbg !12084
  br i1 %32, label %33, label %36, !dbg !12085

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !12086
  %35 = sub nsw i32 0, %34, !dbg !12088
  store i32 %35, i32* %5, align 4, !dbg !12089
  br label %36, !dbg !12090

36:                                               ; preds = %33, %30
  %37 = load i32, i32* %5, align 4, !dbg !12091
  %38 = icmp sgt i32 %37, 255, !dbg !12093
  br i1 %38, label %39, label %40, !dbg !12094

39:                                               ; preds = %36
  store i32 255, i32* %5, align 4, !dbg !12095
  br label %40, !dbg !12097

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %5, align 4, !dbg !12098
  %42 = trunc i32 %41 to i8, !dbg !12098
  %43 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !12099
  %44 = getelementptr inbounds %struct.device.73, %struct.device.73* %43, i32 0, i32 3, !dbg !12100
  %45 = load %struct.device_state.72*, %struct.device_state.72** %44, align 4, !dbg !12100
  %46 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %45, i32 0, i32 0, !dbg !12101
  store i8 %42, i8* %46, align 1, !dbg !12102
  br label %47, !dbg !12103

47:                                               ; preds = %40, %27
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !12104
  %49 = getelementptr inbounds %struct.device.73, %struct.device.73* %48, i32 0, i32 3, !dbg !12105
  %50 = load %struct.device_state.72*, %struct.device_state.72** %49, align 4, !dbg !12105
  %51 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %50, i32 0, i32 1, !dbg !12106
  %52 = load i8, i8* %51, align 1, !dbg !12107
  %53 = and i8 %52, -2, !dbg !12107
  %54 = or i8 %53, 1, !dbg !12107
  store i8 %54, i8* %51, align 1, !dbg !12107
  br label %55, !dbg !12108

55:                                               ; preds = %47, %16
  br label %56, !dbg !12109

56:                                               ; preds = %55
  %57 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !12110
  %58 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %57, i32 1, !dbg !12110
  store %struct.init_entry* %58, %struct.init_entry** %3, align 4, !dbg !12110
  br label %9, !dbg !12111, !llvm.loop !12112

59:                                               ; preds = %9
  ret void, !dbg !12114
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.52(i32 noundef %0, i32 noundef %1) #1 !dbg !12115 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12116, metadata !DIExpression()), !dbg !12117
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12118, metadata !DIExpression()), !dbg !12119
  %5 = load i32, i32* %3, align 4, !dbg !12120
  %6 = icmp sge i32 %5, 0, !dbg !12122
  br i1 %6, label %7, label %29, !dbg !12123

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !12124
  %9 = lshr i32 %8, 2, !dbg !12124
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !12126
  %11 = load volatile i32, i32* %10, align 4, !dbg !12126
  %12 = load i32, i32* %3, align 4, !dbg !12127
  %13 = and i32 %12, 3, !dbg !12127
  %14 = mul i32 %13, 8, !dbg !12127
  %15 = shl i32 255, %14, !dbg !12128
  %16 = xor i32 %15, -1, !dbg !12129
  %17 = and i32 %11, %16, !dbg !12130
  %18 = load i32, i32* %4, align 4, !dbg !12131
  %19 = shl i32 %18, 6, !dbg !12132
  %20 = and i32 %19, 255, !dbg !12133
  %21 = load i32, i32* %3, align 4, !dbg !12134
  %22 = and i32 %21, 3, !dbg !12134
  %23 = mul i32 %22, 8, !dbg !12134
  %24 = shl i32 %20, %23, !dbg !12135
  %25 = or i32 %17, %24, !dbg !12136
  %26 = load i32, i32* %3, align 4, !dbg !12137
  %27 = lshr i32 %26, 2, !dbg !12137
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !12138
  store volatile i32 %25, i32* %28, align 4, !dbg !12139
  br label %55, !dbg !12140

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !12141
  %31 = and i32 %30, 15, !dbg !12141
  %32 = sub i32 %31, 8, !dbg !12141
  %33 = lshr i32 %32, 2, !dbg !12141
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !12143
  %35 = load volatile i32, i32* %34, align 4, !dbg !12143
  %36 = load i32, i32* %3, align 4, !dbg !12144
  %37 = and i32 %36, 3, !dbg !12144
  %38 = mul i32 %37, 8, !dbg !12144
  %39 = shl i32 255, %38, !dbg !12145
  %40 = xor i32 %39, -1, !dbg !12146
  %41 = and i32 %35, %40, !dbg !12147
  %42 = load i32, i32* %4, align 4, !dbg !12148
  %43 = shl i32 %42, 6, !dbg !12149
  %44 = and i32 %43, 255, !dbg !12150
  %45 = load i32, i32* %3, align 4, !dbg !12151
  %46 = and i32 %45, 3, !dbg !12151
  %47 = mul i32 %46, 8, !dbg !12151
  %48 = shl i32 %44, %47, !dbg !12152
  %49 = or i32 %41, %48, !dbg !12153
  %50 = load i32, i32* %3, align 4, !dbg !12154
  %51 = and i32 %50, 15, !dbg !12154
  %52 = sub i32 %51, 8, !dbg !12154
  %53 = lshr i32 %52, 2, !dbg !12154
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !12155
  store volatile i32 %49, i32* %54, align 4, !dbg !12156
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !12157
}

declare dso_local void @z_arm_cpu_idle_init() #0

; Function Attrs: noinline nounwind optnone
define internal void @z_dummy_thread_init(%struct.k_thread.203* noundef %0) #1 !dbg !12158 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12160, metadata !DIExpression()), !dbg !12161
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12162
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !12163
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !12164
  store i8 1, i8* %5, align 1, !dbg !12165
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12166
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !12167
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 2, !dbg !12168
  store i8 1, i8* %8, align 4, !dbg !12169
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12170
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 5, !dbg !12171
  store %struct.k_heap.201* null, %struct.k_heap.201** %10, align 4, !dbg !12172
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12173
  store %struct.k_thread.203* %11, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12174
  ret void, !dbg !12175
}

; Function Attrs: noinline nounwind optnone
define internal i8* @prepare_multithreading() #1 !dbg !12176 {
  %1 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i8** %1, metadata !12179, metadata !DIExpression()), !dbg !12180
  call void @z_sched_init() #10, !dbg !12181
  store %struct.k_thread.203* @z_main_thread, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12182
  %2 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0)) #10, !dbg !12183
  store i8* %2, i8** %1, align 4, !dbg !12184
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !12185
  call void @z_ready_thread(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !12186
  call void @z_init_cpu(i32 noundef 0) #10, !dbg !12187
  %3 = load i8*, i8** %1, align 4, !dbg !12188
  ret i8* %3, !dbg !12189
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @switch_to_main_thread(i8* noundef %0) #5 !dbg !12190 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !12193, metadata !DIExpression()), !dbg !12194
  %3 = load i8*, i8** %2, align 4, !dbg !12195
  call void @arch_switch_to_main_thread(%struct.k_thread.203* noundef @z_main_thread, i8* noundef %3, void (i8*, i8*, i8*)* noundef @bg_thread_main) #10, !dbg !12196
  unreachable, !dbg !12197
}

; Function Attrs: noinline nounwind optnone
define internal void @bg_thread_main(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !12198 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12199, metadata !DIExpression()), !dbg !12200
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12201, metadata !DIExpression()), !dbg !12202
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12203, metadata !DIExpression()), !dbg !12204
  %7 = load i8*, i8** %4, align 4, !dbg !12205
  %8 = load i8*, i8** %5, align 4, !dbg !12206
  %9 = load i8*, i8** %6, align 4, !dbg !12207
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12208
  call void @z_sys_init_run_level(i32 noundef 3) #10, !dbg !12209
  call void @boot_banner() #10, !dbg !12210
  call void @z_sys_init_run_level(i32 noundef 4) #10, !dbg !12211
  call void @z_init_static_threads() #10, !dbg !12212
  call void @main() #10, !dbg !12213
  %10 = load i8, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12214
  %11 = zext i8 %10 to i32, !dbg !12214
  %12 = and i32 %11, -2, !dbg !12214
  %13 = trunc i32 %12 to i8, !dbg !12214
  store i8 %13, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12214
  ret void, !dbg !12215
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !12216 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !12225, metadata !DIExpression()), !dbg !12226
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12227, metadata !DIExpression()), !dbg !12228
  ret void, !dbg !12229
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !12230 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !12231, metadata !DIExpression()), !dbg !12232
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12233, metadata !DIExpression()), !dbg !12234
  ret void, !dbg !12235
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_is_in_isr() #1 !dbg !12236 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12237, metadata !DIExpression()) #9, !dbg !12239
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !12243, !srcloc !12244
  store i32 %2, i32* %1, align 4, !dbg !12243
  %3 = load i32, i32* %1, align 4, !dbg !12245
  %4 = icmp ne i32 %3, 0, !dbg !12246
  %5 = zext i1 %4 to i64, !dbg !12246
  %6 = select i1 %4, i32 1, i32 0, !dbg !12246
  ret i1 %4, !dbg !12247
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_set() #1 !dbg !12248 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12249
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !12250
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !12251
  %4 = load i8, i8* %3, align 4, !dbg !12252
  %5 = zext i8 %4 to i32, !dbg !12252
  %6 = or i32 %5, 1, !dbg !12252
  %7 = trunc i32 %6 to i8, !dbg !12252
  store i8 %7, i8* %3, align 4, !dbg !12252
  ret void, !dbg !12253
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_clear() #1 !dbg !12254 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12255
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !12256
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !12257
  %4 = load i8, i8* %3, align 4, !dbg !12258
  %5 = zext i8 %4 to i32, !dbg !12258
  %6 = and i32 %5, -2, !dbg !12258
  %7 = trunc i32 %6 to i8, !dbg !12258
  store i8 %7, i8* %3, align 4, !dbg !12258
  ret void, !dbg !12259
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_is_thread_essential() #1 !dbg !12260 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12261
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !12262
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !12263
  %4 = load i8, i8* %3, align 4, !dbg !12263
  %5 = zext i8 %4 to i32, !dbg !12261
  %6 = and i32 %5, 1, !dbg !12264
  %7 = icmp eq i32 %6, 1, !dbg !12265
  ret i1 %7, !dbg !12266
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread.203* noundef %0, i8* noundef %1) #1 !dbg !12267 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12270, metadata !DIExpression()), !dbg !12271
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12272, metadata !DIExpression()), !dbg !12273
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12274
  %6 = load i8*, i8** %4, align 4, !dbg !12275
  br label %7, !dbg !12276

7:                                                ; preds = %2
  br label %8, !dbg !12277

8:                                                ; preds = %7
  ret i32 -88, !dbg !12279
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_name_get(%struct.k_thread.203* noundef %0) #1 !dbg !12280 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12283, metadata !DIExpression()), !dbg !12284
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12285
  ret i8* null, !dbg !12286
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !12287 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12290, metadata !DIExpression()), !dbg !12291
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12292, metadata !DIExpression()), !dbg !12293
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12294, metadata !DIExpression()), !dbg !12295
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12296
  %8 = load i8*, i8** %5, align 4, !dbg !12297
  %9 = load i32, i32* %6, align 4, !dbg !12298
  ret i32 -88, !dbg !12299
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_state_str(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !3292 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12300, metadata !DIExpression()), !dbg !12301
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12302, metadata !DIExpression()), !dbg !12303
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12304, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12306, metadata !DIExpression()), !dbg !12307
  store i32 0, i32* %8, align 4, !dbg !12307
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12308, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12310, metadata !DIExpression()), !dbg !12311
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12312
  %13 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %12, i32 0, i32 0, !dbg !12313
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 3, !dbg !12314
  %15 = load i8, i8* %14, align 1, !dbg !12314
  store i8 %15, i8* %10, align 1, !dbg !12311
  %16 = load i8*, i8** %6, align 4, !dbg !12315
  %17 = icmp eq i8* %16, null, !dbg !12317
  br i1 %17, label %21, label %18, !dbg !12318

18:                                               ; preds = %3
  %19 = load i32, i32* %7, align 4, !dbg !12319
  %20 = icmp eq i32 %19, 0, !dbg !12320
  br i1 %20, label %21, label %22, !dbg !12321

21:                                               ; preds = %18, %3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8** %4, align 4, !dbg !12322
  br label %88, !dbg !12322

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !12324
  %24 = add i32 %23, -1, !dbg !12324
  store i32 %24, i32* %7, align 4, !dbg !12324
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12325, metadata !DIExpression()), !dbg !12327
  store i8 0, i8* %11, align 1, !dbg !12327
  br label %25, !dbg !12328

25:                                               ; preds = %80, %22
  %26 = load i8, i8* %10, align 1, !dbg !12329
  %27 = zext i8 %26 to i32, !dbg !12329
  %28 = icmp ne i32 %27, 0, !dbg !12331
  br i1 %28, label %29, label %83, !dbg !12332

29:                                               ; preds = %25
  %30 = load i8, i8* %11, align 1, !dbg !12333
  %31 = zext i8 %30 to i32, !dbg !12333
  %32 = shl i32 1, %31, !dbg !12333
  %33 = trunc i32 %32 to i8, !dbg !12333
  store i8 %33, i8* %9, align 1, !dbg !12335
  %34 = load i8, i8* %10, align 1, !dbg !12336
  %35 = zext i8 %34 to i32, !dbg !12336
  %36 = load i8, i8* %9, align 1, !dbg !12338
  %37 = zext i8 %36 to i32, !dbg !12338
  %38 = and i32 %35, %37, !dbg !12339
  %39 = icmp eq i32 %38, 0, !dbg !12340
  br i1 %39, label %40, label %41, !dbg !12341

40:                                               ; preds = %29
  br label %80, !dbg !12342

41:                                               ; preds = %29
  %42 = load i8*, i8** %6, align 4, !dbg !12344
  %43 = load i32, i32* %8, align 4, !dbg !12345
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !12346
  %45 = load i32, i32* %7, align 4, !dbg !12347
  %46 = load i32, i32* %8, align 4, !dbg !12348
  %47 = sub i32 %45, %46, !dbg !12349
  %48 = load i8, i8* %11, align 1, !dbg !12350
  %49 = zext i8 %48 to i32, !dbg !12351
  %50 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %49, !dbg !12351
  %51 = load i8*, i8** %50, align 4, !dbg !12351
  %52 = load i8, i8* %11, align 1, !dbg !12352
  %53 = zext i8 %52 to i32, !dbg !12353
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %53, !dbg !12353
  %55 = load i32, i32* %54, align 4, !dbg !12353
  %56 = call i32 @copy_bytes(i8* noundef %44, i32 noundef %47, i8* noundef %51, i32 noundef %55) #10, !dbg !12354
  %57 = load i32, i32* %8, align 4, !dbg !12355
  %58 = add i32 %57, %56, !dbg !12355
  store i32 %58, i32* %8, align 4, !dbg !12355
  %59 = load i8, i8* %9, align 1, !dbg !12356
  %60 = zext i8 %59 to i32, !dbg !12356
  %61 = xor i32 %60, -1, !dbg !12357
  %62 = load i8, i8* %10, align 1, !dbg !12358
  %63 = zext i8 %62 to i32, !dbg !12358
  %64 = and i32 %63, %61, !dbg !12358
  %65 = trunc i32 %64 to i8, !dbg !12358
  store i8 %65, i8* %10, align 1, !dbg !12358
  %66 = load i8, i8* %10, align 1, !dbg !12359
  %67 = zext i8 %66 to i32, !dbg !12359
  %68 = icmp ne i32 %67, 0, !dbg !12361
  br i1 %68, label %69, label %79, !dbg !12362

69:                                               ; preds = %41
  %70 = load i8*, i8** %6, align 4, !dbg !12363
  %71 = load i32, i32* %8, align 4, !dbg !12365
  %72 = getelementptr inbounds i8, i8* %70, i32 %71, !dbg !12366
  %73 = load i32, i32* %7, align 4, !dbg !12367
  %74 = load i32, i32* %8, align 4, !dbg !12368
  %75 = sub i32 %73, %74, !dbg !12369
  %76 = call i32 @copy_bytes(i8* noundef %72, i32 noundef %75, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #10, !dbg !12370
  %77 = load i32, i32* %8, align 4, !dbg !12371
  %78 = add i32 %77, %76, !dbg !12371
  store i32 %78, i32* %8, align 4, !dbg !12371
  br label %79, !dbg !12372

79:                                               ; preds = %69, %41
  br label %80, !dbg !12373

80:                                               ; preds = %79, %40
  %81 = load i8, i8* %11, align 1, !dbg !12374
  %82 = add i8 %81, 1, !dbg !12374
  store i8 %82, i8* %11, align 1, !dbg !12374
  br label %25, !dbg !12375, !llvm.loop !12376

83:                                               ; preds = %25
  %84 = load i8*, i8** %6, align 4, !dbg !12378
  %85 = load i32, i32* %8, align 4, !dbg !12379
  %86 = getelementptr inbounds i8, i8* %84, i32 %85, !dbg !12378
  store i8 0, i8* %86, align 1, !dbg !12380
  %87 = load i8*, i8** %6, align 4, !dbg !12381
  store i8* %87, i8** %4, align 4, !dbg !12382
  br label %88, !dbg !12382

88:                                               ; preds = %83, %21
  %89 = load i8*, i8** %4, align 4, !dbg !12383
  ret i8* %89, !dbg !12383
}

; Function Attrs: noinline nounwind optnone
define internal i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #1 !dbg !12384 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12387, metadata !DIExpression()), !dbg !12388
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12389, metadata !DIExpression()), !dbg !12390
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12391, metadata !DIExpression()), !dbg !12392
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12393, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12395, metadata !DIExpression()), !dbg !12396
  %10 = load i32, i32* %6, align 4, !dbg !12397
  %11 = load i32, i32* %8, align 4, !dbg !12397
  %12 = icmp ult i32 %10, %11, !dbg !12397
  br i1 %12, label %13, label %15, !dbg !12397

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !12397
  br label %17, !dbg !12397

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 4, !dbg !12397
  br label %17, !dbg !12397

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ], !dbg !12397
  store i32 %18, i32* %9, align 4, !dbg !12398
  %19 = load i8*, i8** %5, align 4, !dbg !12399
  %20 = load i8*, i8** %7, align 4, !dbg !12400
  %21 = load i32, i32* %9, align 4, !dbg !12401
  %22 = call i8* @memcpy(i8* noundef %19, i8* noundef %20, i32 noundef %21) #10, !dbg !12402
  %23 = load i32, i32* %9, align 4, !dbg !12403
  ret i32 %23, !dbg !12404
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !12405 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12408, metadata !DIExpression()), !dbg !12409
  br label %3, !dbg !12410

3:                                                ; preds = %1
  br label %4, !dbg !12411

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12413
  call void @z_sched_start(%struct.k_thread.203* noundef %5) #10, !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_setup_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) #1 !dbg !12416 {
  %11 = alloca i8*, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !12424, metadata !DIExpression()), !dbg !12425
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !12426, metadata !DIExpression()), !dbg !12427
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12428, metadata !DIExpression()), !dbg !12429
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !12430, metadata !DIExpression()), !dbg !12431
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12432, metadata !DIExpression()), !dbg !12433
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12434, metadata !DIExpression()), !dbg !12435
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !12436, metadata !DIExpression()), !dbg !12437
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12438, metadata !DIExpression()), !dbg !12439
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12440, metadata !DIExpression()), !dbg !12441
  store i8* %9, i8** %21, align 4
  call void @llvm.dbg.declare(metadata i8** %21, metadata !12442, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.declare(metadata i8** %22, metadata !12444, metadata !DIExpression()), !dbg !12445
  br label %23, !dbg !12446

23:                                               ; preds = %10
  br label %24, !dbg !12447

24:                                               ; preds = %23
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12449
  %26 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %25, i32 0, i32 3, !dbg !12450
  call void @z_waitq_init(%union.anon.192* noundef %26) #10, !dbg !12451
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12452
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !12453
  %29 = load i32, i32* %19, align 4, !dbg !12454
  %30 = load i32, i32* %20, align 4, !dbg !12455
  call void @z_init_thread_base(%struct._thread_base.196* noundef %28, i32 noundef %29, i32 noundef 4, i32 noundef %30) #10, !dbg !12456
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12457
  %32 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12458
  %33 = load i32, i32* %14, align 4, !dbg !12459
  %34 = call i8* @setup_thread_stack(%struct.k_thread.203* noundef %31, %struct.z_thread_stack_element* noundef %32, i32 noundef %33) #10, !dbg !12460
  store i8* %34, i8** %22, align 4, !dbg !12461
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12462
  %36 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12463
  %37 = load i8*, i8** %22, align 4, !dbg !12464
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !12465
  %39 = load i8*, i8** %16, align 4, !dbg !12466
  %40 = load i8*, i8** %17, align 4, !dbg !12467
  %41 = load i8*, i8** %18, align 4, !dbg !12468
  call void @arch_new_thread(%struct.k_thread.203* noundef %35, %struct.z_thread_stack_element* noundef %36, i8* noundef %37, void (i8*, i8*, i8*)* noundef %38, i8* noundef %39, i8* noundef %40, i8* noundef %41) #10, !dbg !12469
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12470
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 2, !dbg !12471
  store i8* null, i8** %43, align 4, !dbg !12472
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12473
  %45 = icmp ne %struct.k_thread.203* %44, null, !dbg !12473
  br i1 %45, label %50, label %46, !dbg !12475

46:                                               ; preds = %24
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12476
  %48 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %47, i32 0, i32 5, !dbg !12478
  store %struct.k_heap.201* null, %struct.k_heap.201** %48, align 4, !dbg !12479
  %49 = load i8*, i8** %22, align 4, !dbg !12480
  store i8* %49, i8** %11, align 4, !dbg !12481
  br label %59, !dbg !12481

50:                                               ; preds = %24
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12482
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 5, !dbg !12483
  %53 = load %struct.k_heap.201*, %struct.k_heap.201** %52, align 4, !dbg !12483
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12484
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 5, !dbg !12485
  store %struct.k_heap.201* %53, %struct.k_heap.201** %55, align 4, !dbg !12486
  br label %56, !dbg !12487

56:                                               ; preds = %50
  br label %57, !dbg !12488

57:                                               ; preds = %56
  %58 = load i8*, i8** %22, align 4, !dbg !12490
  store i8* %58, i8** %11, align 4, !dbg !12491
  br label %59, !dbg !12491

59:                                               ; preds = %57, %46
  %60 = load i8*, i8** %11, align 4, !dbg !12492
  ret i8* %60, !dbg !12492
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init(%union.anon.192* noundef %0) #1 !dbg !12493 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !12497, metadata !DIExpression()), !dbg !12498
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !12499
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !12500
  call void @sys_dlist_init(%struct._dnode.191* noundef %4) #10, !dbg !12501
  ret void, !dbg !12502
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_thread_base(%struct._thread_base.196* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !12503 {
  %5 = alloca %struct._thread_base.196*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %5, metadata !12507, metadata !DIExpression()), !dbg !12508
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12509, metadata !DIExpression()), !dbg !12510
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12511, metadata !DIExpression()), !dbg !12512
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12513, metadata !DIExpression()), !dbg !12514
  %9 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12515
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !12516
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !12517
  %11 = load i32, i32* %8, align 4, !dbg !12518
  %12 = trunc i32 %11 to i8, !dbg !12519
  %13 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12520
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 2, !dbg !12521
  store i8 %12, i8* %14, align 4, !dbg !12522
  %15 = load i32, i32* %7, align 4, !dbg !12523
  %16 = trunc i32 %15 to i8, !dbg !12524
  %17 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12525
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !12526
  store i8 %16, i8* %18, align 1, !dbg !12527
  %19 = load i32, i32* %6, align 4, !dbg !12528
  %20 = trunc i32 %19 to i8, !dbg !12528
  %21 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12529
  %22 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %21, i32 0, i32 4, !dbg !12530
  %23 = bitcast %union.anon.2.7* %22 to %struct.device_state.72*, !dbg !12530
  %24 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %23, i32 0, i32 0, !dbg !12530
  store i8 %20, i8* %24, align 2, !dbg !12531
  %25 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12532
  %26 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %25, i32 0, i32 4, !dbg !12533
  %27 = bitcast %union.anon.2.7* %26 to %struct.device_state.72*, !dbg !12533
  %28 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %27, i32 0, i32 1, !dbg !12533
  store i8 0, i8* %28, align 1, !dbg !12534
  %29 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !12535
  call void @z_init_thread_timeout(%struct._thread_base.196* noundef %29) #10, !dbg !12536
  ret void, !dbg !12537
}

; Function Attrs: noinline nounwind optnone
define internal i8* @setup_thread_stack(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #1 !dbg !12538 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12541, metadata !DIExpression()), !dbg !12542
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !12543, metadata !DIExpression()), !dbg !12544
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12545, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12547, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12549, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.declare(metadata i8** %9, metadata !12551, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12555, metadata !DIExpression()), !dbg !12556
  store i32 0, i32* %11, align 4, !dbg !12556
  %16 = load i32, i32* %6, align 4, !dbg !12557
  %17 = add i32 %16, 7, !dbg !12557
  %18 = and i32 %17, -8, !dbg !12557
  %19 = add i32 %18, 0, !dbg !12557
  store i32 %19, i32* %7, align 4, !dbg !12559
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !12560
  %21 = call i8* @Z_KERNEL_STACK_BUFFER.60(%struct.z_thread_stack_element* noundef %20) #10, !dbg !12561
  store i8* %21, i8** %10, align 4, !dbg !12562
  %22 = load i32, i32* %7, align 4, !dbg !12563
  %23 = sub i32 %22, 0, !dbg !12564
  store i32 %23, i32* %8, align 4, !dbg !12565
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !12566
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !12567
  %26 = load i32, i32* %7, align 4, !dbg !12568
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !12569
  store i8* %27, i8** %9, align 4, !dbg !12570
  br label %28, !dbg !12571

28:                                               ; preds = %3
  br label %29, !dbg !12572

29:                                               ; preds = %28
  %30 = load i32, i32* %11, align 4, !dbg !12576
  %31 = add i32 %30, 7, !dbg !12576
  %32 = and i32 %31, -8, !dbg !12576
  store i32 %32, i32* %11, align 4, !dbg !12577
  %33 = load i32, i32* %11, align 4, !dbg !12578
  %34 = load i8*, i8** %9, align 4, !dbg !12579
  %35 = sub i32 0, %33, !dbg !12579
  %36 = getelementptr inbounds i8, i8* %34, i32 %35, !dbg !12579
  store i8* %36, i8** %9, align 4, !dbg !12579
  %37 = load i8*, i8** %9, align 4, !dbg !12580
  ret i8* %37, !dbg !12581
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER.60(%struct.z_thread_stack_element* noundef %0) #1 !dbg !12582 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !12585, metadata !DIExpression()), !dbg !12586
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !12587
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !12588
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !12589
  ret i8* %5, !dbg !12590
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_thread_timeout(%struct._thread_base.196* noundef %0) #1 !dbg !12591 {
  %2 = alloca %struct._thread_base.196*, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %2, metadata !12595, metadata !DIExpression()), !dbg !12596
  %3 = load %struct._thread_base.196*, %struct._thread_base.196** %2, align 4, !dbg !12597
  %4 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %3, i32 0, i32 7, !dbg !12598
  call void @z_init_timeout(%struct._timeout.195* noundef %4) #10, !dbg !12599
  ret void, !dbg !12600
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_timeout(%struct._timeout.195* noundef %0) #1 !dbg !12601 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !12602, metadata !DIExpression()), !dbg !12603
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !12604
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !12605
  call void @sys_dnode_init(%struct._dnode.191* noundef %4) #10, !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init(%struct._dnode.191* noundef %0) #1 !dbg !12608 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12611, metadata !DIExpression()), !dbg !12612
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12613
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !12614
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !12614
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !12615
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12616
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12617
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12617
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !12618
  ret void, !dbg !12619
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init(%struct._dnode.191* noundef %0) #1 !dbg !12620 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12624, metadata !DIExpression()), !dbg !12625
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12626
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12627
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !12628
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !12628
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !12629
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12630
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12631
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !12632
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !12632
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !12633
  ret void, !dbg !12634
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_k_thread_create(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) #1 !dbg !12635 {
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %union.argument_value, align 8
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %23 = bitcast i64* %22 to [1 x i64]*
  store [1 x i64] %9, [1 x i64]* %23, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !12642, metadata !DIExpression()), !dbg !12643
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !12644, metadata !DIExpression()), !dbg !12645
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12646, metadata !DIExpression()), !dbg !12647
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !12648, metadata !DIExpression()), !dbg !12649
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12650, metadata !DIExpression()), !dbg !12651
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12652, metadata !DIExpression()), !dbg !12653
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !12654, metadata !DIExpression()), !dbg !12655
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12656, metadata !DIExpression()), !dbg !12657
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12658, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !12660, metadata !DIExpression()), !dbg !12661
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12662
  %25 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12663
  %26 = load i32, i32* %14, align 4, !dbg !12664
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !12665
  %28 = load i8*, i8** %16, align 4, !dbg !12666
  %29 = load i8*, i8** %17, align 4, !dbg !12667
  %30 = load i8*, i8** %18, align 4, !dbg !12668
  %31 = load i32, i32* %19, align 4, !dbg !12669
  %32 = load i32, i32* %20, align 4, !dbg !12670
  %33 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %24, %struct.z_thread_stack_element* noundef %25, i32 noundef %26, void (i8*, i8*, i8*)* noundef %27, i8* noundef %28, i8* noundef %29, i8* noundef %30, i32 noundef %31, i32 noundef %32, i8* noundef null) #10, !dbg !12671
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !12672
  %35 = load i64, i64* %34, align 8, !dbg !12672
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %21, i32 0, i32 0, !dbg !12672
  store i64 -1, i64* %36, align 8, !dbg !12672
  %37 = icmp eq i64 %35, -1, !dbg !12672
  br i1 %37, label %43, label %38, !dbg !12674

38:                                               ; preds = %10
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12675
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !12677
  %41 = bitcast i64* %40 to [1 x i64]*, !dbg !12677
  %42 = load [1 x i64], [1 x i64]* %41, align 8, !dbg !12677
  call void @schedule_new_thread(%struct.k_thread.203* noundef %39, [1 x i64] %42) #10, !dbg !12677
  br label %43, !dbg !12678

43:                                               ; preds = %38, %10
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !12679
  ret %struct.k_thread.203* %44, !dbg !12680
}

; Function Attrs: noinline nounwind optnone
define internal void @schedule_new_thread(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !12681 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12684, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !12686, metadata !DIExpression()), !dbg !12687
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12688
  %9 = load i64, i64* %8, align 8, !dbg !12688
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12688
  store i64 0, i64* %10, align 8, !dbg !12688
  %11 = icmp eq i64 %9, 0, !dbg !12688
  br i1 %11, label %12, label %14, !dbg !12690

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12691
  call void @k_thread_start(%struct.k_thread.203* noundef %13) #10, !dbg !12693
  br label %19, !dbg !12694

14:                                               ; preds = %2
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12695
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12697
  %17 = bitcast i64* %16 to [1 x i64]*, !dbg !12697
  %18 = load [1 x i64], [1 x i64]* %17, align 8, !dbg !12697
  call void @z_add_thread_timeout(%struct.k_thread.203* noundef %15, [1 x i64] %18) #10, !dbg !12697
  br label %19

19:                                               ; preds = %14, %12
  ret void, !dbg !12698
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !12699 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12702, metadata !DIExpression()), !dbg !12703
  br label %3, !dbg !12704

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !12705, !srcloc !12707
  br label %4, !dbg !12705

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12708
  call void @z_impl_k_thread_start(%struct.k_thread.203* noundef %5) #10, !dbg !12709
  ret void, !dbg !12710
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !12711 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !12714, metadata !DIExpression()), !dbg !12715
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12716
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !12717
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !12718
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12719
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !12719
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !12719
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !12719
  ret void, !dbg !12720
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_static_threads() #1 !dbg !12721 {
  %1 = alloca %struct._static_thread_data.506*, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._static_thread_data.506*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.506** %1, metadata !12722, metadata !DIExpression()), !dbg !12739
  store %struct._static_thread_data.506* getelementptr inbounds ([0 x %struct._static_thread_data.506], [0 x %struct._static_thread_data.506]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.506** %1, align 4, !dbg !12739
  br label %6, !dbg !12739

6:                                                ; preds = %50, %0
  %7 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12740
  %8 = icmp ult %struct._static_thread_data.506* %7, getelementptr inbounds ([0 x %struct._static_thread_data.506], [0 x %struct._static_thread_data.506]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12740
  %9 = zext i1 %8 to i32, !dbg !12740
  store i32 %9, i32* %2, align 4, !dbg !12743
  %10 = load i32, i32* %2, align 4, !dbg !12740
  %11 = icmp ne i32 %10, 0, !dbg !12739
  br i1 %11, label %12, label %53, !dbg !12739

12:                                               ; preds = %6
  %13 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12745
  %14 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %13, i32 0, i32 0, !dbg !12747
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !12747
  %16 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12748
  %17 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %16, i32 0, i32 1, !dbg !12749
  %18 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %17, align 4, !dbg !12749
  %19 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12750
  %20 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %19, i32 0, i32 2, !dbg !12751
  %21 = load i32, i32* %20, align 4, !dbg !12751
  %22 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12752
  %23 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %22, i32 0, i32 3, !dbg !12753
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %23, align 4, !dbg !12753
  %25 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12754
  %26 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %25, i32 0, i32 4, !dbg !12755
  %27 = load i8*, i8** %26, align 4, !dbg !12755
  %28 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12756
  %29 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %28, i32 0, i32 5, !dbg !12757
  %30 = load i8*, i8** %29, align 4, !dbg !12757
  %31 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12758
  %32 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %31, i32 0, i32 6, !dbg !12759
  %33 = load i8*, i8** %32, align 4, !dbg !12759
  %34 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12760
  %35 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %34, i32 0, i32 7, !dbg !12761
  %36 = load i32, i32* %35, align 4, !dbg !12761
  %37 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12762
  %38 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %37, i32 0, i32 8, !dbg !12763
  %39 = load i32, i32* %38, align 4, !dbg !12763
  %40 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12764
  %41 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %40, i32 0, i32 11, !dbg !12765
  %42 = load i8*, i8** %41, align 4, !dbg !12765
  %43 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %15, %struct.z_thread_stack_element* noundef %18, i32 noundef %21, void (i8*, i8*, i8*)* noundef %24, i8* noundef %27, i8* noundef %30, i8* noundef %33, i32 noundef %36, i32 noundef %39, i8* noundef %42) #10, !dbg !12766
  %44 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12767
  %45 = bitcast %struct._static_thread_data.506* %44 to i8*, !dbg !12767
  %46 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12768
  %47 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %46, i32 0, i32 0, !dbg !12769
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %47, align 4, !dbg !12769
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 2, !dbg !12770
  store i8* %45, i8** %49, align 4, !dbg !12771
  br label %50, !dbg !12772

50:                                               ; preds = %12
  %51 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %1, align 4, !dbg !12773
  %52 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %51, i32 1, !dbg !12773
  store %struct._static_thread_data.506* %52, %struct._static_thread_data.506** %1, align 4, !dbg !12773
  br label %6, !dbg !12773, !llvm.loop !12774

53:                                               ; preds = %6
  call void @k_sched_lock() #10, !dbg !12776
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.506** %3, metadata !12777, metadata !DIExpression()), !dbg !12779
  store %struct._static_thread_data.506* getelementptr inbounds ([0 x %struct._static_thread_data.506], [0 x %struct._static_thread_data.506]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.506** %3, align 4, !dbg !12779
  br label %54, !dbg !12779

54:                                               ; preds = %88, %53
  %55 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12780
  %56 = icmp ult %struct._static_thread_data.506* %55, getelementptr inbounds ([0 x %struct._static_thread_data.506], [0 x %struct._static_thread_data.506]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12780
  %57 = zext i1 %56 to i32, !dbg !12780
  store i32 %57, i32* %4, align 4, !dbg !12783
  %58 = load i32, i32* %4, align 4, !dbg !12780
  %59 = icmp ne i32 %58, 0, !dbg !12779
  br i1 %59, label %60, label %91, !dbg !12779

60:                                               ; preds = %54
  %61 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12785
  %62 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %61, i32 0, i32 9, !dbg !12788
  %63 = load i32, i32* %62, align 4, !dbg !12788
  %64 = sext i32 %63 to i64, !dbg !12785
  %65 = icmp ne i64 %64, -1, !dbg !12789
  br i1 %65, label %66, label %87, !dbg !12790

66:                                               ; preds = %60
  %67 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12791
  %68 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %67, i32 0, i32 0, !dbg !12793
  %69 = load %struct.k_thread.203*, %struct.k_thread.203** %68, align 4, !dbg !12793
  %70 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12794
  %71 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12794
  %72 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %71, i32 0, i32 9, !dbg !12794
  %73 = load i32, i32* %72, align 4, !dbg !12794
  %74 = icmp sgt i32 %73, 0, !dbg !12794
  br i1 %74, label %75, label %79, !dbg !12794

75:                                               ; preds = %66
  %76 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12794
  %77 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %76, i32 0, i32 9, !dbg !12794
  %78 = load i32, i32* %77, align 4, !dbg !12794
  br label %80, !dbg !12794

79:                                               ; preds = %66
  br label %80, !dbg !12794

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 0, %79 ], !dbg !12794
  %82 = sext i32 %81 to i64, !dbg !12794
  %83 = call i64 @k_ms_to_ticks_ceil64(i64 noundef %82) #10, !dbg !12794
  store i64 %83, i64* %70, align 8, !dbg !12794
  %84 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12795
  %85 = bitcast i64* %84 to [1 x i64]*, !dbg !12795
  %86 = load [1 x i64], [1 x i64]* %85, align 8, !dbg !12795
  call void @schedule_new_thread(%struct.k_thread.203* noundef %69, [1 x i64] %86) #10, !dbg !12795
  br label %87, !dbg !12796

87:                                               ; preds = %80, %60
  br label %88, !dbg !12797

88:                                               ; preds = %87
  %89 = load %struct._static_thread_data.506*, %struct._static_thread_data.506** %3, align 4, !dbg !12798
  %90 = getelementptr inbounds %struct._static_thread_data.506, %struct._static_thread_data.506* %89, i32 1, !dbg !12798
  store %struct._static_thread_data.506* %90, %struct._static_thread_data.506** %3, align 4, !dbg !12798
  br label %54, !dbg !12798, !llvm.loop !12799

91:                                               ; preds = %54
  call void @k_sched_unlock() #10, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64 noundef %0) #1 !dbg !12803 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !12806, metadata !DIExpression()), !dbg !12807
  %15 = load i64, i64* %14, align 8, !dbg !12808
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12809, metadata !DIExpression()), !dbg !12813
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12815, metadata !DIExpression()), !dbg !12816
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12817, metadata !DIExpression()), !dbg !12818
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12819, metadata !DIExpression()), !dbg !12820
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12821, metadata !DIExpression()), !dbg !12822
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12823, metadata !DIExpression()), !dbg !12824
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12825, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12827, metadata !DIExpression()), !dbg !12828
  %16 = load i8, i8* %6, align 1, !dbg !12829
  %17 = trunc i8 %16 to i1, !dbg !12829
  br i1 %17, label %18, label %27, !dbg !12830

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !12831
  %20 = load i32, i32* %4, align 4, !dbg !12832
  %21 = icmp ugt i32 %19, %20, !dbg !12833
  br i1 %21, label %22, label %27, !dbg !12834

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !12835
  %24 = load i32, i32* %4, align 4, !dbg !12836
  %25 = urem i32 %23, %24, !dbg !12837
  %26 = icmp eq i32 %25, 0, !dbg !12838
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !12839
  %29 = zext i1 %28 to i8, !dbg !12828
  store i8 %29, i8* %10, align 1, !dbg !12828
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12840, metadata !DIExpression()), !dbg !12841
  %30 = load i8, i8* %6, align 1, !dbg !12842
  %31 = trunc i8 %30 to i1, !dbg !12842
  br i1 %31, label %32, label %41, !dbg !12843

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !12844
  %34 = load i32, i32* %5, align 4, !dbg !12845
  %35 = icmp ugt i32 %33, %34, !dbg !12846
  br i1 %35, label %36, label %41, !dbg !12847

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !12848
  %38 = load i32, i32* %5, align 4, !dbg !12849
  %39 = urem i32 %37, %38, !dbg !12850
  %40 = icmp eq i32 %39, 0, !dbg !12851
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !12839
  %43 = zext i1 %42 to i8, !dbg !12841
  store i8 %43, i8* %11, align 1, !dbg !12841
  %44 = load i32, i32* %4, align 4, !dbg !12852
  %45 = load i32, i32* %5, align 4, !dbg !12854
  %46 = icmp eq i32 %44, %45, !dbg !12855
  br i1 %46, label %47, label %58, !dbg !12856

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !12857
  %49 = trunc i8 %48 to i1, !dbg !12857
  br i1 %49, label %50, label %54, !dbg !12857

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !12859
  %52 = trunc i64 %51 to i32, !dbg !12860
  %53 = zext i32 %52 to i64, !dbg !12861
  br label %56, !dbg !12857

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !12862
  br label %56, !dbg !12857

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !12857
  store i64 %57, i64* %2, align 8, !dbg !12863
  br label %195, !dbg !12863

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12864, metadata !DIExpression()), !dbg !12865
  store i64 0, i64* %12, align 8, !dbg !12865
  %59 = load i8, i8* %10, align 1, !dbg !12866
  %60 = trunc i8 %59 to i1, !dbg !12866
  br i1 %60, label %86, label %61, !dbg !12868

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12869, metadata !DIExpression()), !dbg !12871
  %62 = load i8, i8* %11, align 1, !dbg !12872
  %63 = trunc i8 %62 to i1, !dbg !12872
  br i1 %63, label %64, label %68, !dbg !12872

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !12873
  %66 = load i32, i32* %5, align 4, !dbg !12874
  %67 = udiv i32 %65, %66, !dbg !12875
  br label %70, !dbg !12872

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !12876
  br label %70, !dbg !12872

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !12872
  store i32 %71, i32* %13, align 4, !dbg !12871
  %72 = load i8, i8* %8, align 1, !dbg !12877
  %73 = trunc i8 %72 to i1, !dbg !12877
  br i1 %73, label %74, label %78, !dbg !12879

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !12880
  %76 = sub i32 %75, 1, !dbg !12882
  %77 = zext i32 %76 to i64, !dbg !12880
  store i64 %77, i64* %12, align 8, !dbg !12883
  br label %78, !dbg !12884

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !12885
  %80 = trunc i8 %79 to i1, !dbg !12885
  br i1 %80, label %81, label %85, !dbg !12887

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !12888
  %83 = udiv i32 %82, 2, !dbg !12890
  %84 = zext i32 %83 to i64, !dbg !12888
  store i64 %84, i64* %12, align 8, !dbg !12891
  br label %85, !dbg !12892

85:                                               ; preds = %81, %78
  br label %86, !dbg !12893

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !12894
  %88 = trunc i8 %87 to i1, !dbg !12894
  br i1 %88, label %89, label %114, !dbg !12896

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !12897
  %91 = load i64, i64* %3, align 8, !dbg !12899
  %92 = add i64 %91, %90, !dbg !12899
  store i64 %92, i64* %3, align 8, !dbg !12899
  %93 = load i8, i8* %7, align 1, !dbg !12900
  %94 = trunc i8 %93 to i1, !dbg !12900
  br i1 %94, label %95, label %106, !dbg !12902

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !12903
  %97 = icmp ult i64 %96, 4294967296, !dbg !12904
  br i1 %97, label %98, label %106, !dbg !12905

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !12906
  %100 = trunc i64 %99 to i32, !dbg !12908
  %101 = load i32, i32* %4, align 4, !dbg !12909
  %102 = load i32, i32* %5, align 4, !dbg !12910
  %103 = udiv i32 %101, %102, !dbg !12911
  %104 = udiv i32 %100, %103, !dbg !12912
  %105 = zext i32 %104 to i64, !dbg !12913
  store i64 %105, i64* %2, align 8, !dbg !12914
  br label %195, !dbg !12914

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !12915
  %108 = load i32, i32* %4, align 4, !dbg !12917
  %109 = zext i32 %108 to i64, !dbg !12918
  %110 = load i32, i32* %5, align 4, !dbg !12919
  %111 = zext i32 %110 to i64, !dbg !12919
  %112 = udiv i64 %109, %111, !dbg !12920
  %113 = udiv i64 %107, %112, !dbg !12921
  store i64 %113, i64* %2, align 8, !dbg !12922
  br label %195, !dbg !12922

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !12923
  %116 = trunc i8 %115 to i1, !dbg !12923
  br i1 %116, label %117, label %136, !dbg !12925

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !12926
  %119 = trunc i8 %118 to i1, !dbg !12926
  br i1 %119, label %120, label %128, !dbg !12929

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !12930
  %122 = trunc i64 %121 to i32, !dbg !12932
  %123 = load i32, i32* %5, align 4, !dbg !12933
  %124 = load i32, i32* %4, align 4, !dbg !12934
  %125 = udiv i32 %123, %124, !dbg !12935
  %126 = mul i32 %122, %125, !dbg !12936
  %127 = zext i32 %126 to i64, !dbg !12937
  store i64 %127, i64* %2, align 8, !dbg !12938
  br label %195, !dbg !12938

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !12939
  %130 = load i32, i32* %5, align 4, !dbg !12941
  %131 = zext i32 %130 to i64, !dbg !12942
  %132 = load i32, i32* %4, align 4, !dbg !12943
  %133 = zext i32 %132 to i64, !dbg !12943
  %134 = udiv i64 %131, %133, !dbg !12944
  %135 = mul i64 %129, %134, !dbg !12945
  store i64 %135, i64* %2, align 8, !dbg !12946
  br label %195, !dbg !12946

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !12947
  %138 = trunc i8 %137 to i1, !dbg !12947
  br i1 %138, label %139, label %151, !dbg !12950

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !12951
  %141 = load i32, i32* %5, align 4, !dbg !12953
  %142 = zext i32 %141 to i64, !dbg !12953
  %143 = mul i64 %140, %142, !dbg !12954
  %144 = load i64, i64* %12, align 8, !dbg !12955
  %145 = add i64 %143, %144, !dbg !12956
  %146 = load i32, i32* %4, align 4, !dbg !12957
  %147 = zext i32 %146 to i64, !dbg !12957
  %148 = udiv i64 %145, %147, !dbg !12958
  %149 = trunc i64 %148 to i32, !dbg !12959
  %150 = zext i32 %149 to i64, !dbg !12959
  store i64 %150, i64* %2, align 8, !dbg !12960
  br label %195, !dbg !12960

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !12961
  %153 = trunc i8 %152 to i1, !dbg !12961
  br i1 %153, label %154, label %174, !dbg !12963

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !12964
  %156 = zext i32 %155 to i64, !dbg !12964
  %157 = mul i64 31536000, %156, !dbg !12964
  %158 = add i64 %157, 4294967294, !dbg !12964
  %159 = udiv i64 %158, 4294967295, !dbg !12964
  %160 = load i32, i32* %5, align 4, !dbg !12964
  %161 = zext i32 %160 to i64, !dbg !12964
  %162 = mul i64 %159, %161, !dbg !12964
  %163 = icmp ule i64 %162, 4294967295, !dbg !12964
  br i1 %163, label %164, label %174, !dbg !12965

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !12966
  %166 = load i32, i32* %5, align 4, !dbg !12968
  %167 = zext i32 %166 to i64, !dbg !12968
  %168 = mul i64 %165, %167, !dbg !12969
  %169 = load i64, i64* %12, align 8, !dbg !12970
  %170 = add i64 %168, %169, !dbg !12971
  %171 = load i32, i32* %4, align 4, !dbg !12972
  %172 = zext i32 %171 to i64, !dbg !12972
  %173 = udiv i64 %170, %172, !dbg !12973
  store i64 %173, i64* %2, align 8, !dbg !12974
  br label %195, !dbg !12974

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !12975
  %176 = load i32, i32* %4, align 4, !dbg !12977
  %177 = zext i32 %176 to i64, !dbg !12977
  %178 = udiv i64 %175, %177, !dbg !12978
  %179 = load i32, i32* %5, align 4, !dbg !12979
  %180 = zext i32 %179 to i64, !dbg !12979
  %181 = mul i64 %178, %180, !dbg !12980
  %182 = load i64, i64* %3, align 8, !dbg !12981
  %183 = load i32, i32* %4, align 4, !dbg !12982
  %184 = zext i32 %183 to i64, !dbg !12982
  %185 = urem i64 %182, %184, !dbg !12983
  %186 = load i32, i32* %5, align 4, !dbg !12984
  %187 = zext i32 %186 to i64, !dbg !12984
  %188 = mul i64 %185, %187, !dbg !12985
  %189 = load i64, i64* %12, align 8, !dbg !12986
  %190 = add i64 %188, %189, !dbg !12987
  %191 = load i32, i32* %4, align 4, !dbg !12988
  %192 = zext i32 %191 to i64, !dbg !12988
  %193 = udiv i64 %190, %192, !dbg !12989
  %194 = add i64 %181, %193, !dbg !12990
  store i64 %194, i64* %2, align 8, !dbg !12991
  br label %195, !dbg !12991

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !12992
  ret i64 %196, !dbg !12993
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !12994 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !12995, metadata !DIExpression()), !dbg !12996
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12997, metadata !DIExpression()), !dbg !12998
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12999, metadata !DIExpression()), !dbg !13000
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !13001, metadata !DIExpression()), !dbg !13002
  br label %9, !dbg !13003

9:                                                ; preds = %4
  br label %10, !dbg !13004

10:                                               ; preds = %9
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13006
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !13007
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 2, !dbg !13008
  %14 = load i8, i8* %13, align 4, !dbg !13009
  %15 = zext i8 %14 to i32, !dbg !13009
  %16 = or i32 %15, 4, !dbg !13009
  %17 = trunc i32 %16 to i8, !dbg !13009
  store i8 %17, i8* %13, align 4, !dbg !13009
  call void @z_thread_essential_clear() #10, !dbg !13010
  %18 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !13011
  %19 = load i8*, i8** %6, align 4, !dbg !13012
  %20 = load i8*, i8** %7, align 4, !dbg !13013
  %21 = load i8*, i8** %8, align 4, !dbg !13014
  call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %18, i8* noundef %19, i8* noundef %20, i8* noundef %21) #12, !dbg !13015
  unreachable, !dbg !13015
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread.203* noundef %0) #1 !dbg !13016 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13019, metadata !DIExpression()), !dbg !13020
  ret i32 -134, !dbg !13021
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !13022 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13025, metadata !DIExpression()), !dbg !13026
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13027, metadata !DIExpression()), !dbg !13028
  ret i32 -134, !dbg !13029
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread.203* noundef %0, %struct.k_spinlock.13* noundef %1) #1 !dbg !13030 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13036, metadata !DIExpression()), !dbg !13037
  store %struct.k_spinlock.13* %1, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13038, metadata !DIExpression()), !dbg !13039
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13040
  %8 = icmp eq %struct.k_thread.203* %7, null, !dbg !13042
  br i1 %8, label %12, label %9, !dbg !13043

9:                                                ; preds = %2
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13044
  %11 = icmp eq %struct.k_spinlock.13* %10, null, !dbg !13045
  br i1 %11, label %12, label %13, !dbg !13046

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !13047
  br label %17, !dbg !13047

13:                                               ; preds = %9
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13049
  %15 = bitcast %struct.k_spinlock.13* %14 to i8*, !dbg !13050
  %16 = bitcast %struct.k_spinlock.13* %6 to i8*, !dbg !13050
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %15, i8* align 1 %16, i32 0, i1 false), !dbg !13050
  store i32 0, i32* %3, align 4, !dbg !13051
  br label %17, !dbg !13051

17:                                               ; preds = %13, %12
  %18 = load i32, i32* %3, align 4, !dbg !13052
  ret i32 %18, !dbg !13052
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock.13* noundef %0) #1 !dbg !13053 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !13056, metadata !DIExpression()), !dbg !13057
  %5 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !13058
  %6 = icmp eq %struct.k_spinlock.13* %5, null, !dbg !13060
  br i1 %6, label %7, label %8, !dbg !13061

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !13062
  br label %12, !dbg !13062

8:                                                ; preds = %1
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !13064
  %10 = bitcast %struct.k_spinlock.13* %9 to i8*, !dbg !13065
  %11 = bitcast %struct.k_spinlock.13* %4 to i8*, !dbg !13065
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %11, i32 0, i1 false), !dbg !13065
  store i32 0, i32* %2, align 4, !dbg !13066
  br label %12, !dbg !13066

12:                                               ; preds = %8, %7
  %13 = load i32, i32* %2, align 4, !dbg !13067
  ret i32 %13, !dbg !13067
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pm_save_idle_exit() #1 !dbg !13068 {
  call void @sys_clock_idle_exit() #10, !dbg !13070
  ret void, !dbg !13071
}

; Function Attrs: noinline nounwind optnone
define dso_local void @idle(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !13072 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13073, metadata !DIExpression()), !dbg !13074
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13075, metadata !DIExpression()), !dbg !13076
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !13077, metadata !DIExpression()), !dbg !13078
  %8 = load i8*, i8** %5, align 4, !dbg !13079
  %9 = load i8*, i8** %6, align 4, !dbg !13080
  %10 = load i8*, i8** %7, align 4, !dbg !13081
  br label %11, !dbg !13082

11:                                               ; preds = %3, %11
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13083, metadata !DIExpression()) #9, !dbg !13085
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13088, !srcloc !13089
  store i32 %12, i32* %4, align 4, !dbg !13088
  %13 = load i32, i32* %4, align 4, !dbg !13090
  call void @k_cpu_idle() #10, !dbg !13091
  br label %11, !dbg !13082, !llvm.loop !13092
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_idle() #1 !dbg !13094 {
  call void @arch_cpu_idle() #10, !dbg !13095
  ret void, !dbg !13096
}

declare dso_local void @arch_cpu_idle() #0

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !13097 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13100, metadata !DIExpression()), !dbg !13101
  store %struct.k_thread.203* %1, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13102, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13104, metadata !DIExpression()), !dbg !13105
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13106
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !13107
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 4, !dbg !13108
  %11 = bitcast %union.anon.2.7* %10 to %struct.device_state.72*, !dbg !13108
  %12 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %11, i32 0, i32 0, !dbg !13108
  %13 = load i8, i8* %12, align 2, !dbg !13108
  %14 = sext i8 %13 to i32, !dbg !13106
  store i32 %14, i32* %6, align 4, !dbg !13105
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13109, metadata !DIExpression()), !dbg !13110
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13111
  %16 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %15, i32 0, i32 0, !dbg !13112
  %17 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %16, i32 0, i32 4, !dbg !13113
  %18 = bitcast %union.anon.2.7* %17 to %struct.device_state.72*, !dbg !13113
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !13113
  %20 = load i8, i8* %19, align 2, !dbg !13113
  %21 = sext i8 %20 to i32, !dbg !13111
  store i32 %21, i32* %7, align 4, !dbg !13110
  %22 = load i32, i32* %6, align 4, !dbg !13114
  %23 = load i32, i32* %7, align 4, !dbg !13116
  %24 = icmp ne i32 %22, %23, !dbg !13117
  br i1 %24, label %25, label %29, !dbg !13118

25:                                               ; preds = %2
  %26 = load i32, i32* %7, align 4, !dbg !13119
  %27 = load i32, i32* %6, align 4, !dbg !13121
  %28 = sub nsw i32 %26, %27, !dbg !13122
  store i32 %28, i32* %3, align 4, !dbg !13123
  br label %30, !dbg !13123

29:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !13124
  br label %30, !dbg !13124

30:                                               ; preds = %29, %25
  %31 = load i32, i32* %3, align 4, !dbg !13125
  ret i32 %31, !dbg !13125
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reset_time_slice(%struct.k_thread.203* noundef %0) #1 !dbg !13126 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13129, metadata !DIExpression()), !dbg !13130
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13131
  %4 = call i32 @slice_time(%struct.k_thread.203* noundef %3) #10, !dbg !13133
  %5 = icmp ne i32 %4, 0, !dbg !13134
  br i1 %5, label %6, label %13, !dbg !13135

6:                                                ; preds = %1
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13136
  %8 = call i32 @slice_time(%struct.k_thread.203* noundef %7) #10, !dbg !13138
  %9 = call i32 @sys_clock_elapsed() #10, !dbg !13139
  %10 = add i32 %8, %9, !dbg !13140
  store i32 %10, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13141
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13142
  %12 = call i32 @slice_time(%struct.k_thread.203* noundef %11) #10, !dbg !13143
  call void @z_set_timeout_expiry(i32 noundef %12, i1 noundef zeroext false) #10, !dbg !13144
  br label %13, !dbg !13145

13:                                               ; preds = %6, %1
  ret void, !dbg !13146
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_time(%struct.k_thread.203* noundef %0) #1 !dbg !13147 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13150, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13152, metadata !DIExpression()), !dbg !13153
  %4 = load i32, i32* @slice_ticks, align 4, !dbg !13154
  store i32 %4, i32* %3, align 4, !dbg !13153
  %5 = load i32, i32* %3, align 4, !dbg !13155
  ret i32 %5, !dbg !13156
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) #1 !dbg !13157 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !13160, metadata !DIExpression()), !dbg !13161
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13162, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13164, metadata !DIExpression()), !dbg !13170
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !13170
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !13170
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13171, metadata !DIExpression()), !dbg !13170
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13172, metadata !DIExpression()) #9, !dbg !13177
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13179
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13180, metadata !DIExpression()) #9, !dbg !13181
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13182, metadata !DIExpression()) #9, !dbg !13184
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13186, !srcloc !13187
  store i32 %15, i32* %3, align 4, !dbg !13186
  %16 = load i32, i32* %3, align 4, !dbg !13188
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13189
  store i32 %16, i32* %17, align 4, !dbg !13190
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13191
  %19 = load i32, i32* %18, align 4, !dbg !13191
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13170
  store i32 %19, i32* %20, align 4, !dbg !13170
  br label %21, !dbg !13170

21:                                               ; preds = %55, %2
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13192
  %23 = load i32, i32* %22, align 4, !dbg !13192
  %24 = icmp ne i32 %23, 0, !dbg !13192
  %25 = xor i1 %24, true, !dbg !13192
  br i1 %25, label %26, label %57, !dbg !13170

26:                                               ; preds = %21
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13194
  %27 = load i32, i32* %9, align 4, !dbg !13196
  %28 = call i32 @k_ms_to_ticks_ceil32(i32 noundef %27) #10, !dbg !13197
  store i32 %28, i32* @slice_ticks, align 4, !dbg !13198
  %29 = load i32, i32* %9, align 4, !dbg !13199
  %30 = icmp sgt i32 %29, 0, !dbg !13201
  br i1 %30, label %31, label %39, !dbg !13202

31:                                               ; preds = %26
  %32 = load i32, i32* @slice_ticks, align 4, !dbg !13203
  %33 = icmp sgt i32 2, %32, !dbg !13203
  br i1 %33, label %34, label %35, !dbg !13203

34:                                               ; preds = %31
  br label %37, !dbg !13203

35:                                               ; preds = %31
  %36 = load i32, i32* @slice_ticks, align 4, !dbg !13203
  br label %37, !dbg !13203

37:                                               ; preds = %35, %34
  %38 = phi i32 [ 2, %34 ], [ %36, %35 ], !dbg !13203
  store i32 %38, i32* @slice_ticks, align 4, !dbg !13205
  br label %39, !dbg !13206

39:                                               ; preds = %37, %26
  %40 = load i32, i32* %10, align 4, !dbg !13207
  store i32 %40, i32* @slice_max_prio, align 4, !dbg !13208
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13209
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %41) #10, !dbg !13210
  br label %42, !dbg !13211

42:                                               ; preds = %39
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13192
  %44 = bitcast i32* %43 to [1 x i32]*, !dbg !13192
  %45 = load [1 x i32], [1 x i32]* %44, align 4, !dbg !13192
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %47 = bitcast i32* %46 to [1 x i32]*
  store [1 x i32] %45, [1 x i32]* %47, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13212, metadata !DIExpression()) #9, !dbg !13216
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13218, metadata !DIExpression()) #9, !dbg !13219
  %48 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13220
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13221
  %50 = load i32, i32* %49, align 4, !dbg !13221
  store i32 %50, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13222, metadata !DIExpression()) #9, !dbg !13224
  %51 = load i32, i32* %4, align 4, !dbg !13226
  %52 = icmp ne i32 %51, 0, !dbg !13228
  br i1 %52, label %53, label %54, !dbg !13229

53:                                               ; preds = %42
  br label %55, !dbg !13230

54:                                               ; preds = %42
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13232, !srcloc !13233
  br label %55, !dbg !13234

55:                                               ; preds = %53, %54
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13192
  store i32 1, i32* %56, align 4, !dbg !13192
  br label %21, !dbg !13192, !llvm.loop !13235

57:                                               ; preds = %21
  ret void, !dbg !13237
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #1 !dbg !13238 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !13241, metadata !DIExpression()), !dbg !13242
  %15 = load i32, i32* %14, align 4, !dbg !13243
  %16 = zext i32 %15 to i64, !dbg !13243
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !13244, metadata !DIExpression()), !dbg !13246
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13248, metadata !DIExpression()), !dbg !13249
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13250, metadata !DIExpression()), !dbg !13251
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13252, metadata !DIExpression()), !dbg !13253
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !13254, metadata !DIExpression()), !dbg !13255
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !13256, metadata !DIExpression()), !dbg !13257
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13258, metadata !DIExpression()), !dbg !13259
  call void @llvm.dbg.declare(metadata i8* %10, metadata !13260, metadata !DIExpression()), !dbg !13261
  %17 = load i8, i8* %6, align 1, !dbg !13262
  %18 = trunc i8 %17 to i1, !dbg !13262
  br i1 %18, label %19, label %28, !dbg !13263

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !13264
  %21 = load i32, i32* %4, align 4, !dbg !13265
  %22 = icmp ugt i32 %20, %21, !dbg !13266
  br i1 %22, label %23, label %28, !dbg !13267

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !13268
  %25 = load i32, i32* %4, align 4, !dbg !13269
  %26 = urem i32 %24, %25, !dbg !13270
  %27 = icmp eq i32 %26, 0, !dbg !13271
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !13272
  %30 = zext i1 %29 to i8, !dbg !13261
  store i8 %30, i8* %10, align 1, !dbg !13261
  call void @llvm.dbg.declare(metadata i8* %11, metadata !13273, metadata !DIExpression()), !dbg !13274
  %31 = load i8, i8* %6, align 1, !dbg !13275
  %32 = trunc i8 %31 to i1, !dbg !13275
  br i1 %32, label %33, label %42, !dbg !13276

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !13277
  %35 = load i32, i32* %5, align 4, !dbg !13278
  %36 = icmp ugt i32 %34, %35, !dbg !13279
  br i1 %36, label %37, label %42, !dbg !13280

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !13281
  %39 = load i32, i32* %5, align 4, !dbg !13282
  %40 = urem i32 %38, %39, !dbg !13283
  %41 = icmp eq i32 %40, 0, !dbg !13284
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !13272
  %44 = zext i1 %43 to i8, !dbg !13274
  store i8 %44, i8* %11, align 1, !dbg !13274
  %45 = load i32, i32* %4, align 4, !dbg !13285
  %46 = load i32, i32* %5, align 4, !dbg !13287
  %47 = icmp eq i32 %45, %46, !dbg !13288
  br i1 %47, label %48, label %59, !dbg !13289

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !13290
  %50 = trunc i8 %49 to i1, !dbg !13290
  br i1 %50, label %51, label %55, !dbg !13290

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !13292
  %53 = trunc i64 %52 to i32, !dbg !13293
  %54 = zext i32 %53 to i64, !dbg !13294
  br label %57, !dbg !13290

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !13295
  br label %57, !dbg !13290

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !13290
  store i64 %58, i64* %2, align 8, !dbg !13296
  br label %196, !dbg !13296

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !13297, metadata !DIExpression()), !dbg !13298
  store i64 0, i64* %12, align 8, !dbg !13298
  %60 = load i8, i8* %10, align 1, !dbg !13299
  %61 = trunc i8 %60 to i1, !dbg !13299
  br i1 %61, label %87, label %62, !dbg !13301

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13302, metadata !DIExpression()), !dbg !13304
  %63 = load i8, i8* %11, align 1, !dbg !13305
  %64 = trunc i8 %63 to i1, !dbg !13305
  br i1 %64, label %65, label %69, !dbg !13305

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !13306
  %67 = load i32, i32* %5, align 4, !dbg !13307
  %68 = udiv i32 %66, %67, !dbg !13308
  br label %71, !dbg !13305

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !13309
  br label %71, !dbg !13305

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !13305
  store i32 %72, i32* %13, align 4, !dbg !13304
  %73 = load i8, i8* %8, align 1, !dbg !13310
  %74 = trunc i8 %73 to i1, !dbg !13310
  br i1 %74, label %75, label %79, !dbg !13312

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !13313
  %77 = sub i32 %76, 1, !dbg !13315
  %78 = zext i32 %77 to i64, !dbg !13313
  store i64 %78, i64* %12, align 8, !dbg !13316
  br label %79, !dbg !13317

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !13318
  %81 = trunc i8 %80 to i1, !dbg !13318
  br i1 %81, label %82, label %86, !dbg !13320

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !13321
  %84 = udiv i32 %83, 2, !dbg !13323
  %85 = zext i32 %84 to i64, !dbg !13321
  store i64 %85, i64* %12, align 8, !dbg !13324
  br label %86, !dbg !13325

86:                                               ; preds = %82, %79
  br label %87, !dbg !13326

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !13327
  %89 = trunc i8 %88 to i1, !dbg !13327
  br i1 %89, label %90, label %115, !dbg !13329

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !13330
  %92 = load i64, i64* %3, align 8, !dbg !13332
  %93 = add i64 %92, %91, !dbg !13332
  store i64 %93, i64* %3, align 8, !dbg !13332
  %94 = load i8, i8* %7, align 1, !dbg !13333
  %95 = trunc i8 %94 to i1, !dbg !13333
  br i1 %95, label %96, label %107, !dbg !13335

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !13336
  %98 = icmp ult i64 %97, 4294967296, !dbg !13337
  br i1 %98, label %99, label %107, !dbg !13338

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !13339
  %101 = trunc i64 %100 to i32, !dbg !13341
  %102 = load i32, i32* %4, align 4, !dbg !13342
  %103 = load i32, i32* %5, align 4, !dbg !13343
  %104 = udiv i32 %102, %103, !dbg !13344
  %105 = udiv i32 %101, %104, !dbg !13345
  %106 = zext i32 %105 to i64, !dbg !13346
  store i64 %106, i64* %2, align 8, !dbg !13347
  br label %196, !dbg !13347

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !13348
  %109 = load i32, i32* %4, align 4, !dbg !13350
  %110 = zext i32 %109 to i64, !dbg !13351
  %111 = load i32, i32* %5, align 4, !dbg !13352
  %112 = zext i32 %111 to i64, !dbg !13352
  %113 = udiv i64 %110, %112, !dbg !13353
  %114 = udiv i64 %108, %113, !dbg !13354
  store i64 %114, i64* %2, align 8, !dbg !13355
  br label %196, !dbg !13355

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !13356
  %117 = trunc i8 %116 to i1, !dbg !13356
  br i1 %117, label %118, label %137, !dbg !13358

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !13359
  %120 = trunc i8 %119 to i1, !dbg !13359
  br i1 %120, label %121, label %129, !dbg !13362

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !13363
  %123 = trunc i64 %122 to i32, !dbg !13365
  %124 = load i32, i32* %5, align 4, !dbg !13366
  %125 = load i32, i32* %4, align 4, !dbg !13367
  %126 = udiv i32 %124, %125, !dbg !13368
  %127 = mul i32 %123, %126, !dbg !13369
  %128 = zext i32 %127 to i64, !dbg !13370
  store i64 %128, i64* %2, align 8, !dbg !13371
  br label %196, !dbg !13371

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !13372
  %131 = load i32, i32* %5, align 4, !dbg !13374
  %132 = zext i32 %131 to i64, !dbg !13375
  %133 = load i32, i32* %4, align 4, !dbg !13376
  %134 = zext i32 %133 to i64, !dbg !13376
  %135 = udiv i64 %132, %134, !dbg !13377
  %136 = mul i64 %130, %135, !dbg !13378
  store i64 %136, i64* %2, align 8, !dbg !13379
  br label %196, !dbg !13379

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !13380
  %139 = trunc i8 %138 to i1, !dbg !13380
  br i1 %139, label %140, label %152, !dbg !13383

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !13384
  %142 = load i32, i32* %5, align 4, !dbg !13386
  %143 = zext i32 %142 to i64, !dbg !13386
  %144 = mul i64 %141, %143, !dbg !13387
  %145 = load i64, i64* %12, align 8, !dbg !13388
  %146 = add i64 %144, %145, !dbg !13389
  %147 = load i32, i32* %4, align 4, !dbg !13390
  %148 = zext i32 %147 to i64, !dbg !13390
  %149 = udiv i64 %146, %148, !dbg !13391
  %150 = trunc i64 %149 to i32, !dbg !13392
  %151 = zext i32 %150 to i64, !dbg !13392
  store i64 %151, i64* %2, align 8, !dbg !13393
  br label %196, !dbg !13393

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !13394
  %154 = trunc i8 %153 to i1, !dbg !13394
  br i1 %154, label %155, label %175, !dbg !13396

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !13397
  %157 = zext i32 %156 to i64, !dbg !13397
  %158 = mul i64 31536000, %157, !dbg !13397
  %159 = add i64 %158, 4294967294, !dbg !13397
  %160 = udiv i64 %159, 4294967295, !dbg !13397
  %161 = load i32, i32* %5, align 4, !dbg !13397
  %162 = zext i32 %161 to i64, !dbg !13397
  %163 = mul i64 %160, %162, !dbg !13397
  %164 = icmp ule i64 %163, 4294967295, !dbg !13397
  br i1 %164, label %165, label %175, !dbg !13398

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !13399
  %167 = load i32, i32* %5, align 4, !dbg !13401
  %168 = zext i32 %167 to i64, !dbg !13401
  %169 = mul i64 %166, %168, !dbg !13402
  %170 = load i64, i64* %12, align 8, !dbg !13403
  %171 = add i64 %169, %170, !dbg !13404
  %172 = load i32, i32* %4, align 4, !dbg !13405
  %173 = zext i32 %172 to i64, !dbg !13405
  %174 = udiv i64 %171, %173, !dbg !13406
  store i64 %174, i64* %2, align 8, !dbg !13407
  br label %196, !dbg !13407

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !13408
  %177 = load i32, i32* %4, align 4, !dbg !13410
  %178 = zext i32 %177 to i64, !dbg !13410
  %179 = udiv i64 %176, %178, !dbg !13411
  %180 = load i32, i32* %5, align 4, !dbg !13412
  %181 = zext i32 %180 to i64, !dbg !13412
  %182 = mul i64 %179, %181, !dbg !13413
  %183 = load i64, i64* %3, align 8, !dbg !13414
  %184 = load i32, i32* %4, align 4, !dbg !13415
  %185 = zext i32 %184 to i64, !dbg !13415
  %186 = urem i64 %183, %185, !dbg !13416
  %187 = load i32, i32* %5, align 4, !dbg !13417
  %188 = zext i32 %187 to i64, !dbg !13417
  %189 = mul i64 %186, %188, !dbg !13418
  %190 = load i64, i64* %12, align 8, !dbg !13419
  %191 = add i64 %189, %190, !dbg !13420
  %192 = load i32, i32* %4, align 4, !dbg !13421
  %193 = zext i32 %192 to i64, !dbg !13421
  %194 = udiv i64 %191, %193, !dbg !13422
  %195 = add i64 %182, %194, !dbg !13423
  store i64 %195, i64* %2, align 8, !dbg !13424
  br label %196, !dbg !13424

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !13425
  %198 = trunc i64 %197 to i32, !dbg !13426
  ret i32 %198, !dbg !13427
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_time_slice(i32 noundef %0) #1 !dbg !13428 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13429, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13431, metadata !DIExpression()), !dbg !13432
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13172, metadata !DIExpression()) #9, !dbg !13433
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13435
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13180, metadata !DIExpression()) #9, !dbg !13436
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !13437
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13439, !srcloc !13187
  store i32 %15, i32* %2, align 4, !dbg !13439
  %16 = load i32, i32* %2, align 4, !dbg !13440
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13441
  store i32 %16, i32* %17, align 4, !dbg !13442
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13443
  %19 = load i32, i32* %18, align 4, !dbg !13443
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13444
  store i32 %19, i32* %20, align 4, !dbg !13444
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !13445
  %22 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13447
  %23 = icmp eq %struct.k_thread.203* %21, %22, !dbg !13448
  br i1 %23, label %24, label %39, !dbg !13449

24:                                               ; preds = %1
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13450
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %25) #10, !dbg !13452
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13453
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !13453
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !13453
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13212, metadata !DIExpression()) #9, !dbg !13454
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13218, metadata !DIExpression()) #9, !dbg !13456
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13457
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13458
  %33 = load i32, i32* %32, align 4, !dbg !13458
  store i32 %33, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13222, metadata !DIExpression()) #9, !dbg !13459
  %34 = load i32, i32* %4, align 4, !dbg !13461
  %35 = icmp ne i32 %34, 0, !dbg !13462
  br i1 %35, label %36, label %37, !dbg !13463

36:                                               ; preds = %24
  br label %38, !dbg !13464

37:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13465, !srcloc !13233
  br label %38, !dbg !13466

38:                                               ; preds = %36, %37
  br label %78, !dbg !13467

39:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !13468
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13469
  %41 = call i32 @slice_time(%struct.k_thread.203* noundef %40) #10, !dbg !13471
  %42 = icmp ne i32 %41, 0, !dbg !13471
  br i1 %42, label %43, label %63, !dbg !13472

43:                                               ; preds = %39
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13473
  %45 = call zeroext i1 @sliceable(%struct.k_thread.203* noundef %44) #10, !dbg !13474
  br i1 %45, label %46, label %63, !dbg !13475

46:                                               ; preds = %43
  %47 = load i32, i32* %11, align 4, !dbg !13476
  %48 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13479
  %49 = icmp sge i32 %47, %48, !dbg !13480
  br i1 %49, label %50, label %58, !dbg !13481

50:                                               ; preds = %46
  %51 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13482
  %52 = bitcast i32* %51 to [1 x i32]*, !dbg !13482
  %53 = load [1 x i32], [1 x i32]* %52, align 4, !dbg !13482
  %54 = call i32 @slice_expired_locked([1 x i32] %53) #10, !dbg !13482
  %55 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13482
  store i32 %54, i32* %55, align 4, !dbg !13482
  %56 = bitcast %union.anon.68* %12 to i8*, !dbg !13482
  %57 = bitcast %union.anon.68* %13 to i8*, !dbg !13482
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 4, i1 false), !dbg !13482
  br label %62, !dbg !13484

58:                                               ; preds = %46
  %59 = load i32, i32* %11, align 4, !dbg !13485
  %60 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13487
  %61 = sub nsw i32 %60, %59, !dbg !13487
  store i32 %61, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13487
  br label %62

62:                                               ; preds = %58, %50
  br label %64, !dbg !13488

63:                                               ; preds = %43, %39
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13489
  br label %64

64:                                               ; preds = %63, %62
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13491
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !13491
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !13491
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13212, metadata !DIExpression()) #9, !dbg !13492
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13218, metadata !DIExpression()) #9, !dbg !13494
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13495
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13496
  %72 = load i32, i32* %71, align 4, !dbg !13496
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !13497
  %73 = load i32, i32* %3, align 4, !dbg !13499
  %74 = icmp ne i32 %73, 0, !dbg !13500
  br i1 %74, label %75, label %76, !dbg !13501

75:                                               ; preds = %64
  br label %77, !dbg !13502

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13503, !srcloc !13233
  br label %77, !dbg !13504

77:                                               ; preds = %75, %76
  br label %78, !dbg !13505

78:                                               ; preds = %77, %38
  ret void, !dbg !13505
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sliceable(%struct.k_thread.203* noundef %0) #1 !dbg !13506 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13509, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13511, metadata !DIExpression()), !dbg !13512
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13513
  %5 = call i32 @is_preempt(%struct.k_thread.203* noundef %4) #10, !dbg !13514
  %6 = icmp ne i32 %5, 0, !dbg !13514
  br i1 %6, label %7, label %24, !dbg !13515

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13516
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !13517
  br i1 %9, label %24, label %10, !dbg !13518

10:                                               ; preds = %7
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13519
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !13520
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 4, !dbg !13521
  %14 = bitcast %union.anon.2.7* %13 to %struct.device_state.72*, !dbg !13521
  %15 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %14, i32 0, i32 0, !dbg !13521
  %16 = load i8, i8* %15, align 2, !dbg !13521
  %17 = sext i8 %16 to i32, !dbg !13519
  %18 = load i32, i32* @slice_max_prio, align 4, !dbg !13522
  %19 = call zeroext i1 @z_is_prio_higher(i32 noundef %17, i32 noundef %18) #10, !dbg !13523
  br i1 %19, label %24, label %20, !dbg !13524

20:                                               ; preds = %10
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13525
  %22 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %21) #10, !dbg !13526
  %23 = xor i1 %22, true, !dbg !13527
  br label %24

24:                                               ; preds = %20, %10, %7, %1
  %25 = phi i1 [ false, %10 ], [ false, %7 ], [ false, %1 ], [ %23, %20 ], !dbg !13528
  %26 = zext i1 %25 to i8, !dbg !13512
  store i8 %26, i8* %3, align 1, !dbg !13512
  %27 = load i8, i8* %3, align 1, !dbg !13529
  %28 = trunc i8 %27 to i1, !dbg !13529
  ret i1 %28, !dbg !13530
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_expired_locked([1 x i32] %0) #1 !dbg !13531 {
  %2 = alloca %union.anon.68, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %6 = bitcast i32* %5 to [1 x i32]*
  store [1 x i32] %0, [1 x i32]* %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !13534, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13536, metadata !DIExpression()), !dbg !13537
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13538
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !13537
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13539
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !13541
  br i1 %9, label %12, label %10, !dbg !13542

10:                                               ; preds = %1
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13543
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %11) #10, !dbg !13545
  br label %12, !dbg !13546

12:                                               ; preds = %10, %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13547
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %13) #10, !dbg !13548
  %14 = bitcast %union.anon.68* %2 to i8*, !dbg !13549
  %15 = bitcast %union.anon.68* %3 to i8*, !dbg !13549
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %14, i8* align 4 %15, i32 4, i1 false), !dbg !13549
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %2, i32 0, i32 0, !dbg !13550
  %17 = load i32, i32* %16, align 4, !dbg !13550
  ret i32 %17, !dbg !13550
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %0) #1 !dbg !13551 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13552, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13554, metadata !DIExpression()), !dbg !13555
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13556
  %5 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %4, i32 0, i32 0, !dbg !13557
  %6 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %5, i32 0, i32 3, !dbg !13558
  %7 = load i8, i8* %6, align 1, !dbg !13558
  store i8 %7, i8* %3, align 1, !dbg !13555
  %8 = load i8, i8* %3, align 1, !dbg !13559
  %9 = zext i8 %8 to i32, !dbg !13559
  %10 = and i32 %9, 31, !dbg !13560
  %11 = icmp ne i32 %10, 0, !dbg !13561
  ret i1 %11, !dbg !13562
}

; Function Attrs: noinline nounwind optnone
define internal void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !13563 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_thread.203*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !13564, metadata !DIExpression()), !dbg !13565
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13566
  %13 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %12) #10, !dbg !13568
  br i1 %13, label %14, label %31, !dbg !13569

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13570
  store %struct.k_thread.203* %15, %struct.k_thread.203** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %10, metadata !13572, metadata !DIExpression()) #9, !dbg !13574
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !13576
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !13577
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !13578
  %19 = load i8, i8* %18, align 1, !dbg !13579
  %20 = zext i8 %19 to i32, !dbg !13579
  %21 = and i32 %20, -129, !dbg !13579
  %22 = trunc i32 %21 to i8, !dbg !13579
  store i8 %22, i8* %18, align 1, !dbg !13579
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !13580
  %24 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %23) #13, !dbg !13582
  br i1 %24, label %25, label %30, !dbg !13583

25:                                               ; preds = %14
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !13584
  store %struct.k_thread.203* %26, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13586, metadata !DIExpression()) #9, !dbg !13588
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13590
  store %struct.k_thread.203* %27, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !13591, metadata !DIExpression()), !dbg !13595
  %28 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13597
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13598
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %28, %struct.k_thread.203* noundef %29) #13, !dbg !13599
  br label %30, !dbg !13600

30:                                               ; preds = %14, %25
  br label %31, !dbg !13601

31:                                               ; preds = %30, %1
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13602
  store %struct.k_thread.203* %32, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !13603, metadata !DIExpression()) #9, !dbg !13605
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13607
  %34 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %33, i32 0, i32 0, !dbg !13608
  %35 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %34, i32 0, i32 3, !dbg !13609
  %36 = load i8, i8* %35, align 1, !dbg !13610
  %37 = zext i8 %36 to i32, !dbg !13610
  %38 = or i32 %37, 128, !dbg !13610
  %39 = trunc i32 %38 to i8, !dbg !13610
  store i8 %39, i8* %35, align 1, !dbg !13610
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13611
  %41 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %40) #13, !dbg !13613
  br i1 %41, label %42, label %107, !dbg !13614

42:                                               ; preds = %31
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13615
  store %struct.k_thread.203* %43, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13617, metadata !DIExpression()) #9, !dbg !13619
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13621
  store %struct.k_thread.203* %44, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13591, metadata !DIExpression()) #9, !dbg !13622
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13624
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13625, metadata !DIExpression()) #9, !dbg !13630
  store %struct.k_thread.203* %45, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13632, metadata !DIExpression()) #9, !dbg !13633
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13634, metadata !DIExpression()) #9, !dbg !13635
  %46 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13636
  %47 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %46) #13, !dbg !13636
  %48 = icmp ne %struct._dnode.191* %47, null, !dbg !13636
  br i1 %48, label %49, label %54, !dbg !13636

49:                                               ; preds = %42
  %50 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13636
  %51 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %50) #13, !dbg !13636
  %52 = bitcast %struct._dnode.191* %51 to i8*, !dbg !13636
  %53 = bitcast i8* %52 to %struct.k_thread.203*, !dbg !13636
  br label %55, !dbg !13636

54:                                               ; preds = %42
  br label %55, !dbg !13636

55:                                               ; preds = %54, %49
  %56 = phi %struct.k_thread.203* [ %53, %49 ], [ null, %54 ], !dbg !13636
  store %struct.k_thread.203* %56, %struct.k_thread.203** %4, align 4, !dbg !13636
  br label %57, !dbg !13636

57:                                               ; preds = %98, %55
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13638
  %59 = icmp ne %struct.k_thread.203* %58, null, !dbg !13638
  br i1 %59, label %60, label %100, !dbg !13636

60:                                               ; preds = %57
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13640
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13643
  %63 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %61, %struct.k_thread.203* noundef %62) #13, !dbg !13644
  %64 = icmp sgt i32 %63, 0, !dbg !13645
  br i1 %64, label %65, label %74, !dbg !13646

65:                                               ; preds = %60
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13647
  %67 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %66, i32 0, i32 0, !dbg !13649
  %68 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %67, i32 0, i32 0, !dbg !13650
  %69 = bitcast %union.anon.192* %68 to %struct._dnode.191*, !dbg !13650
  %70 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13651
  %71 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %70, i32 0, i32 0, !dbg !13652
  %72 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %71, i32 0, i32 0, !dbg !13653
  %73 = bitcast %union.anon.192* %72 to %struct._dnode.191*, !dbg !13653
  call void @sys_dlist_insert(%struct._dnode.191* noundef %69, %struct._dnode.191* noundef %73) #13, !dbg !13654
  br label %106, !dbg !13655

74:                                               ; preds = %60
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13638
  %76 = icmp ne %struct.k_thread.203* %75, null, !dbg !13638
  br i1 %76, label %77, label %97, !dbg !13638

77:                                               ; preds = %74
  %78 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13638
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13638
  %80 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %79, i32 0, i32 0, !dbg !13638
  %81 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %80, i32 0, i32 0, !dbg !13638
  %82 = bitcast %union.anon.192* %81 to %struct._dnode.191*, !dbg !13638
  %83 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %78, %struct._dnode.191* noundef %82) #13, !dbg !13638
  %84 = icmp ne %struct._dnode.191* %83, null, !dbg !13638
  br i1 %84, label %85, label %94, !dbg !13638

85:                                               ; preds = %77
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13638
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13638
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !13638
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !13638
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !13638
  %91 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !13638
  %92 = bitcast %struct._dnode.191* %91 to i8*, !dbg !13638
  %93 = bitcast i8* %92 to %struct.k_thread.203*, !dbg !13638
  br label %95, !dbg !13638

94:                                               ; preds = %77
  br label %95, !dbg !13638

95:                                               ; preds = %94, %85
  %96 = phi %struct.k_thread.203* [ %93, %85 ], [ null, %94 ], !dbg !13638
  br label %98, !dbg !13638

97:                                               ; preds = %74
  br label %98, !dbg !13638

98:                                               ; preds = %97, %95
  %99 = phi %struct.k_thread.203* [ %96, %95 ], [ null, %97 ], !dbg !13638
  store %struct.k_thread.203* %99, %struct.k_thread.203** %4, align 4, !dbg !13638
  br label %57, !dbg !13638, !llvm.loop !13656

100:                                              ; preds = %57
  %101 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13658
  %102 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13659
  %103 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %102, i32 0, i32 0, !dbg !13660
  %104 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %103, i32 0, i32 0, !dbg !13661
  %105 = bitcast %union.anon.192* %104 to %struct._dnode.191*, !dbg !13661
  call void @sys_dlist_append(%struct._dnode.191* noundef %101, %struct._dnode.191* noundef %105) #13, !dbg !13662
  br label %106, !dbg !13663

106:                                              ; preds = %65, %100
  br label %107, !dbg !13664

107:                                              ; preds = %31, %106
  %108 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13665
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13666
  %110 = icmp eq %struct.k_thread.203* %108, %109, !dbg !13667
  %111 = zext i1 %110 to i32, !dbg !13667
  call void @update_cache(i32 noundef %111) #10, !dbg !13668
  ret void, !dbg !13669
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %0) #1 !dbg !13670 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13671, metadata !DIExpression()), !dbg !13672
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13673
  %4 = call zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %3, i32 noundef 128) #10, !dbg !13674
  ret i1 %4, !dbg !13675
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13676 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13677, metadata !DIExpression()), !dbg !13678
  ret i1 true, !dbg !13679
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_dumb_remove(%struct._dnode.191* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !13680 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13681, metadata !DIExpression()), !dbg !13682
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13683, metadata !DIExpression()), !dbg !13684
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13685
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !13686
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 0, !dbg !13687
  %8 = bitcast %union.anon.192* %7 to %struct._dnode.191*, !dbg !13687
  call void @sys_dlist_remove(%struct._dnode.191* noundef %8) #10, !dbg !13688
  ret void, !dbg !13689
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %0) #1 !dbg !13690 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13693, metadata !DIExpression()), !dbg !13694
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13695
  %4 = call zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %3) #10, !dbg !13696
  br i1 %4, label %5, label %6, !dbg !13696

5:                                                ; preds = %1
  br label %11, !dbg !13696

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13697
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !13698
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !13698
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !13698
  br label %11, !dbg !13696

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !13696
  ret %struct._dnode.191* %12, !dbg !13699
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !13700 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13703, metadata !DIExpression()), !dbg !13704
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13705, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !13707, metadata !DIExpression()), !dbg !13709
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13710
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13711
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13711
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !13711
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !13709
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13712
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13713
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !13714
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !13714
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !13715
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13716
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13717
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !13718
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !13718
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !13719
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13720
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13721
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !13722
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !13722
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !13723
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13724
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13725
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !13726
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !13726
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !13727
  ret void, !dbg !13728
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !13729 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13732, metadata !DIExpression()), !dbg !13733
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13734, metadata !DIExpression()), !dbg !13735
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13736
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !13737
  br i1 %6, label %7, label %11, !dbg !13738

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13739
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13740
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !13741
  br label %12, !dbg !13738

11:                                               ; preds = %2
  br label %12, !dbg !13738

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !13738
  ret %struct._dnode.191* %13, !dbg !13742
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !13743 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13746, metadata !DIExpression()), !dbg !13747
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13748, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !13750, metadata !DIExpression()), !dbg !13751
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13752
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13753
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13753
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !13753
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !13751
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13754
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13755
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !13756
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !13756
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !13757
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13758
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13759
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !13760
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !13760
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !13761
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13762
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13763
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !13764
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !13764
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !13765
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13766
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13767
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !13768
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !13768
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !13769
  ret void, !dbg !13770
}

; Function Attrs: noinline nounwind optnone
define internal void @update_cache(i32 noundef %0) #1 !dbg !13771 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13772, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !13774, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13776, metadata !DIExpression()) #9, !dbg !13780
  %8 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13782
  %9 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %8) #13, !dbg !13785
  store %struct.k_thread.203* %9, %struct.k_thread.203** %5, align 4, !dbg !13780
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13786
  %11 = icmp ne %struct.k_thread.203* %10, null, !dbg !13787
  br i1 %11, label %12, label %14, !dbg !13788

12:                                               ; preds = %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13789
  br label %16, !dbg !13788

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13790
  br label %16, !dbg !13788

16:                                               ; preds = %12, %14
  %17 = phi %struct.k_thread.203* [ %13, %12 ], [ %15, %14 ], !dbg !13788
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4, !dbg !13775
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13791
  %19 = load i32, i32* %6, align 4, !dbg !13793
  store %struct.k_thread.203* %18, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13794, metadata !DIExpression()) #9, !dbg !13798
  store i32 %19, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13800, metadata !DIExpression()) #9, !dbg !13801
  %20 = load i32, i32* %4, align 4, !dbg !13802
  %21 = icmp ne i32 %20, 0, !dbg !13804
  br i1 %21, label %22, label %23, !dbg !13805

22:                                               ; preds = %16
  store i1 true, i1* %2, align 1, !dbg !13806
  br label %41, !dbg !13806

23:                                               ; preds = %16
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13808
  %25 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %24) #13, !dbg !13810
  br i1 %25, label %26, label %27, !dbg !13811

26:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !13812
  br label %41, !dbg !13812

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13814
  %29 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %28) #13, !dbg !13816
  br i1 %29, label %30, label %31, !dbg !13817

30:                                               ; preds = %27
  store i1 true, i1* %2, align 1, !dbg !13818
  br label %41, !dbg !13818

31:                                               ; preds = %27
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13820
  %33 = call i32 @is_preempt(%struct.k_thread.203* noundef %32) #13, !dbg !13822
  %34 = icmp ne i32 %33, 0, !dbg !13822
  br i1 %34, label %39, label %35, !dbg !13823

35:                                               ; preds = %31
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13824
  %37 = call i32 @is_metairq(%struct.k_thread.203* noundef %36) #13, !dbg !13825
  %38 = icmp ne i32 %37, 0, !dbg !13825
  br i1 %38, label %39, label %40, !dbg !13826

39:                                               ; preds = %35, %31
  store i1 true, i1* %2, align 1, !dbg !13827
  br label %41, !dbg !13827

40:                                               ; preds = %35
  store i1 false, i1* %2, align 1, !dbg !13829
  br label %41, !dbg !13829

41:                                               ; preds = %22, %26, %30, %39, %40
  %42 = load i1, i1* %2, align 1, !dbg !13830
  br i1 %42, label %43, label %52, !dbg !13831

43:                                               ; preds = %41
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13832
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13835
  %46 = icmp ne %struct.k_thread.203* %44, %45, !dbg !13836
  br i1 %46, label %47, label %49, !dbg !13837

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13838
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %48) #10, !dbg !13840
  br label %49, !dbg !13841

49:                                               ; preds = %47, %43
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13842
  call void @update_metairq_preempt(%struct.k_thread.203* noundef %50) #10, !dbg !13843
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13844
  store %struct.k_thread.203* %51, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13845
  br label %54, !dbg !13846

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13847
  store %struct.k_thread.203* %53, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13849
  br label %54

54:                                               ; preds = %52, %49
  ret void, !dbg !13850
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %0) #1 !dbg !13851 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13854, metadata !DIExpression()), !dbg !13855
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13856, metadata !DIExpression()), !dbg !13857
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !13857
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13858, metadata !DIExpression()), !dbg !13859
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13860
  %6 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %5) #10, !dbg !13861
  store %struct._dnode.191* %6, %struct._dnode.191** %4, align 4, !dbg !13859
  %7 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13862
  %8 = icmp ne %struct._dnode.191* %7, null, !dbg !13864
  br i1 %8, label %9, label %14, !dbg !13865

9:                                                ; preds = %1
  %10 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13866
  %11 = bitcast %struct._dnode.191* %10 to i8*, !dbg !13866
  %12 = getelementptr inbounds i8, i8* %11, i32 0, !dbg !13866
  %13 = bitcast i8* %12 to %struct.k_thread.203*, !dbg !13866
  store %struct.k_thread.203* %13, %struct.k_thread.203** %3, align 4, !dbg !13868
  br label %14, !dbg !13869

14:                                               ; preds = %9, %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13870
  ret %struct.k_thread.203* %15, !dbg !13871
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %0) #1 !dbg !13872 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13873, metadata !DIExpression()), !dbg !13874
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13875
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13876
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !13877
  %6 = call zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %5) #10, !dbg !13878
  %7 = xor i1 %6, true, !dbg !13879
  ret i1 %7, !dbg !13880
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !13881 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13882, metadata !DIExpression()), !dbg !13883
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13884
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13885
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !13886
  %6 = bitcast %union.anon.2.7* %5 to i16*, !dbg !13886
  %7 = load i16, i16* %6, align 2, !dbg !13886
  %8 = zext i16 %7 to i32, !dbg !13884
  %9 = icmp ule i32 %8, 127, !dbg !13887
  %10 = zext i1 %9 to i32, !dbg !13887
  ret i32 %10, !dbg !13888
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_metairq(%struct.k_thread.203* noundef %0) #1 !dbg !13889 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13890, metadata !DIExpression()), !dbg !13891
  ret i32 0, !dbg !13892
}

; Function Attrs: noinline nounwind optnone
define internal void @update_metairq_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !13893 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13894, metadata !DIExpression()), !dbg !13895
  ret void, !dbg !13896
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %0) #1 !dbg !13897 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !13902, metadata !DIExpression()), !dbg !13903
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !13904
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !13905
  %5 = call zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %4) #10, !dbg !13906
  %6 = xor i1 %5, true, !dbg !13907
  ret i1 %6, !dbg !13908
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %0) #1 !dbg !13909 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13914, metadata !DIExpression()), !dbg !13915
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13916
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13917
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13917
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13917
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !13918
  ret i1 %7, !dbg !13919
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !13920 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13921, metadata !DIExpression()), !dbg !13922
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13923, metadata !DIExpression()), !dbg !13924
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13925
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13926
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13927
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13927
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !13927
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !13928
  br i1 %10, label %11, label %12, !dbg !13929

11:                                               ; preds = %2
  br label %17, !dbg !13929

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13930
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !13931
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !13931
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !13931
  br label %17, !dbg !13929

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !13929
  ret %struct._dnode.191* %18, !dbg !13932
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %0) #1 !dbg !13933 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13936, metadata !DIExpression()), !dbg !13937
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13938
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13939
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13939
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13939
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13940
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !13941
  ret i1 %8, !dbg !13942
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove(%struct._dnode.191* noundef %0) #1 !dbg !13943 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13946, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13948, metadata !DIExpression()), !dbg !13949
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13950
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !13951
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !13951
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !13951
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !13949
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13952, metadata !DIExpression()), !dbg !13953
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13954
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !13955
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !13955
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !13955
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !13953
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13956
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13957
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !13958
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !13958
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !13959
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13960
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13961
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !13962
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !13962
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !13963
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13964
  call void @sys_dnode_init.65(%struct._dnode.191* noundef %21) #10, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.65(%struct._dnode.191* noundef %0) #1 !dbg !13967 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13968, metadata !DIExpression()), !dbg !13969
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13970
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13971
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13971
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !13972
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13973
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13974
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13974
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !13975
  ret void, !dbg !13976
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !13977 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13980, metadata !DIExpression()), !dbg !13981
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13982, metadata !DIExpression()), !dbg !13983
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13984
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !13985
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 3, !dbg !13986
  %8 = load i8, i8* %7, align 1, !dbg !13986
  %9 = zext i8 %8 to i32, !dbg !13984
  %10 = load i32, i32* %4, align 4, !dbg !13987
  %11 = and i32 %9, %10, !dbg !13988
  %12 = icmp ne i32 %11, 0, !dbg !13989
  ret i1 %12, !dbg !13990
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #1 !dbg !13991 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13994, metadata !DIExpression()), !dbg !13995
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13996, metadata !DIExpression()), !dbg !13997
  %5 = load i32, i32* %3, align 4, !dbg !13998
  %6 = load i32, i32* %4, align 4, !dbg !13999
  %7 = call zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %5, i32 noundef %6) #10, !dbg !14000
  ret i1 %7, !dbg !14001
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %0) #1 !dbg !14002 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14003, metadata !DIExpression()), !dbg !14004
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14005
  %4 = icmp eq %struct.k_thread.203* %3, getelementptr inbounds ([1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 0), !dbg !14006
  ret i1 %4, !dbg !14007
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #1 !dbg !14008 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14009, metadata !DIExpression()), !dbg !14010
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14011, metadata !DIExpression()), !dbg !14012
  %5 = load i32, i32* %3, align 4, !dbg !14013
  %6 = load i32, i32* %4, align 4, !dbg !14014
  %7 = icmp slt i32 %5, %6, !dbg !14015
  ret i1 %7, !dbg !14016
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14017 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14018, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14020, metadata !DIExpression()), !dbg !14022
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !14022
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !14022
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14023, metadata !DIExpression()), !dbg !14022
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14024
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14026
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14027
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14028
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14030, !srcloc !13187
  store i32 %13, i32* %2, align 4, !dbg !14030
  %14 = load i32, i32* %2, align 4, !dbg !14031
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14032
  store i32 %14, i32* %15, align 4, !dbg !14033
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14034
  %17 = load i32, i32* %16, align 4, !dbg !14034
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14022
  store i32 %17, i32* %18, align 4, !dbg !14022
  br label %19, !dbg !14022

19:                                               ; preds = %43, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14035
  %21 = load i32, i32* %20, align 4, !dbg !14035
  %22 = icmp ne i32 %21, 0, !dbg !14035
  %23 = xor i1 %22, true, !dbg !14035
  br i1 %23, label %24, label %45, !dbg !14022

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14037
  %26 = call zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %25) #10, !dbg !14040
  br i1 %26, label %29, label %27, !dbg !14041

27:                                               ; preds = %24
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14042
  call void @ready_thread(%struct.k_thread.203* noundef %28) #10, !dbg !14044
  br label %29, !dbg !14045

29:                                               ; preds = %27, %24
  br label %30, !dbg !14046

30:                                               ; preds = %29
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14035
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !14035
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !14035
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14047
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14049
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14050
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14051
  %38 = load i32, i32* %37, align 4, !dbg !14051
  store i32 %38, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14052
  %39 = load i32, i32* %3, align 4, !dbg !14054
  %40 = icmp ne i32 %39, 0, !dbg !14055
  br i1 %40, label %41, label %42, !dbg !14056

41:                                               ; preds = %30
  br label %43, !dbg !14057

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14058, !srcloc !13233
  br label %43, !dbg !14059

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14035
  store i32 1, i32* %44, align 4, !dbg !14035
  br label %19, !dbg !14035, !llvm.loop !14060

45:                                               ; preds = %19
  ret void, !dbg !14062
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %0) #1 !dbg !14063 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14064, metadata !DIExpression()), !dbg !14065
  ret i1 false, !dbg !14066
}

; Function Attrs: noinline nounwind optnone
define internal void @ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14067 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14068, metadata !DIExpression()), !dbg !14069
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14070
  %10 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %9) #10, !dbg !14072
  br i1 %10, label %93, label %11, !dbg !14073

11:                                               ; preds = %1
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14074
  %13 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %12) #10, !dbg !14075
  br i1 %13, label %14, label %93, !dbg !14076

14:                                               ; preds = %11
  br label %15, !dbg !14077

15:                                               ; preds = %14
  br label %16, !dbg !14079

16:                                               ; preds = %15
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14081
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !13603, metadata !DIExpression()) #9, !dbg !14082
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14084
  %19 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %18, i32 0, i32 0, !dbg !14085
  %20 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %19, i32 0, i32 3, !dbg !14086
  %21 = load i8, i8* %20, align 1, !dbg !14087
  %22 = zext i8 %21 to i32, !dbg !14087
  %23 = or i32 %22, 128, !dbg !14087
  %24 = trunc i32 %23 to i8, !dbg !14087
  store i8 %24, i8* %20, align 1, !dbg !14087
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14088
  %26 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %25) #13, !dbg !14089
  br i1 %26, label %27, label %92, !dbg !14090

27:                                               ; preds = %16
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14091
  store %struct.k_thread.203* %28, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13617, metadata !DIExpression()) #9, !dbg !14092
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14094
  store %struct.k_thread.203* %29, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13591, metadata !DIExpression()) #9, !dbg !14095
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14097
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13625, metadata !DIExpression()) #9, !dbg !14098
  store %struct.k_thread.203* %30, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13632, metadata !DIExpression()) #9, !dbg !14100
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13634, metadata !DIExpression()) #9, !dbg !14101
  %31 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14102
  %32 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %31) #13, !dbg !14102
  %33 = icmp ne %struct._dnode.191* %32, null, !dbg !14102
  br i1 %33, label %34, label %39, !dbg !14102

34:                                               ; preds = %27
  %35 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14102
  %36 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %35) #13, !dbg !14102
  %37 = bitcast %struct._dnode.191* %36 to i8*, !dbg !14102
  %38 = bitcast i8* %37 to %struct.k_thread.203*, !dbg !14102
  br label %40, !dbg !14102

39:                                               ; preds = %27
  br label %40, !dbg !14102

40:                                               ; preds = %39, %34
  %41 = phi %struct.k_thread.203* [ %38, %34 ], [ null, %39 ], !dbg !14102
  store %struct.k_thread.203* %41, %struct.k_thread.203** %4, align 4, !dbg !14102
  br label %42, !dbg !14102

42:                                               ; preds = %83, %40
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14103
  %44 = icmp ne %struct.k_thread.203* %43, null, !dbg !14103
  br i1 %44, label %45, label %85, !dbg !14102

45:                                               ; preds = %42
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14104
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14105
  %48 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %46, %struct.k_thread.203* noundef %47) #13, !dbg !14106
  %49 = icmp sgt i32 %48, 0, !dbg !14107
  br i1 %49, label %50, label %59, !dbg !14108

50:                                               ; preds = %45
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14109
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 0, !dbg !14110
  %53 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %52, i32 0, i32 0, !dbg !14111
  %54 = bitcast %union.anon.192* %53 to %struct._dnode.191*, !dbg !14111
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14112
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !14113
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !14114
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !14114
  call void @sys_dlist_insert(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !14115
  br label %91, !dbg !14116

59:                                               ; preds = %45
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14103
  %61 = icmp ne %struct.k_thread.203* %60, null, !dbg !14103
  br i1 %61, label %62, label %82, !dbg !14103

62:                                               ; preds = %59
  %63 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14103
  %64 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14103
  %65 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %64, i32 0, i32 0, !dbg !14103
  %66 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %65, i32 0, i32 0, !dbg !14103
  %67 = bitcast %union.anon.192* %66 to %struct._dnode.191*, !dbg !14103
  %68 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %63, %struct._dnode.191* noundef %67) #13, !dbg !14103
  %69 = icmp ne %struct._dnode.191* %68, null, !dbg !14103
  br i1 %69, label %70, label %79, !dbg !14103

70:                                               ; preds = %62
  %71 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14103
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14103
  %73 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %72, i32 0, i32 0, !dbg !14103
  %74 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %73, i32 0, i32 0, !dbg !14103
  %75 = bitcast %union.anon.192* %74 to %struct._dnode.191*, !dbg !14103
  %76 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %71, %struct._dnode.191* noundef %75) #13, !dbg !14103
  %77 = bitcast %struct._dnode.191* %76 to i8*, !dbg !14103
  %78 = bitcast i8* %77 to %struct.k_thread.203*, !dbg !14103
  br label %80, !dbg !14103

79:                                               ; preds = %62
  br label %80, !dbg !14103

80:                                               ; preds = %79, %70
  %81 = phi %struct.k_thread.203* [ %78, %70 ], [ null, %79 ], !dbg !14103
  br label %83, !dbg !14103

82:                                               ; preds = %59
  br label %83, !dbg !14103

83:                                               ; preds = %82, %80
  %84 = phi %struct.k_thread.203* [ %81, %80 ], [ null, %82 ], !dbg !14103
  store %struct.k_thread.203* %84, %struct.k_thread.203** %4, align 4, !dbg !14103
  br label %42, !dbg !14103, !llvm.loop !14117

85:                                               ; preds = %42
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14119
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14120
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !14121
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !14122
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !14122
  call void @sys_dlist_append(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !14123
  br label %91, !dbg !14124

91:                                               ; preds = %50, %85
  br label %92, !dbg !14125

92:                                               ; preds = %16, %91
  call void @update_cache(i32 noundef 0) #10, !dbg !14126
  call void @flag_ipi() #10, !dbg !14127
  br label %93, !dbg !14128

93:                                               ; preds = %92, %11, %1
  ret void, !dbg !14129
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %0) #1 !dbg !14130 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14131, metadata !DIExpression()), !dbg !14132
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14133
  %4 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %3) #10, !dbg !14134
  %5 = zext i1 %4 to i32, !dbg !14135
  %6 = icmp ne i32 %5, 0, !dbg !14136
  br i1 %6, label %10, label %7, !dbg !14137

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14138
  %9 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %8) #10, !dbg !14139
  br label %10, !dbg !14137

10:                                               ; preds = %7, %1
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  %12 = xor i1 %11, true, !dbg !14140
  ret i1 %12, !dbg !14141
}

; Function Attrs: noinline nounwind optnone
define internal void @flag_ipi() #1 !dbg !14142 {
  ret void, !dbg !14143
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !14144 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14145, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14147, metadata !DIExpression()), !dbg !14149
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !14149
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !14149
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14150, metadata !DIExpression()), !dbg !14149
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14151
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14153
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14154
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14155
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14157, !srcloc !13187
  store i32 %13, i32* %2, align 4, !dbg !14157
  %14 = load i32, i32* %2, align 4, !dbg !14158
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14159
  store i32 %14, i32* %15, align 4, !dbg !14160
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14161
  %17 = load i32, i32* %16, align 4, !dbg !14161
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14149
  store i32 %17, i32* %18, align 4, !dbg !14149
  br label %19, !dbg !14149

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14162
  %21 = load i32, i32* %20, align 4, !dbg !14162
  %22 = icmp ne i32 %21, 0, !dbg !14162
  %23 = xor i1 %22, true, !dbg !14162
  br i1 %23, label %24, label %41, !dbg !14149

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14164
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %25) #10, !dbg !14166
  br label %26, !dbg !14167

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14162
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !14162
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !14162
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14168
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14170
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14171
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14172
  %34 = load i32, i32* %33, align 4, !dbg !14172
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14173
  %35 = load i32, i32* %3, align 4, !dbg !14175
  %36 = icmp ne i32 %35, 0, !dbg !14176
  br i1 %36, label %37, label %38, !dbg !14177

37:                                               ; preds = %26
  br label %39, !dbg !14178

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14179, !srcloc !13233
  br label %39, !dbg !14180

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14162
  store i32 1, i32* %40, align 4, !dbg !14162
  br label %19, !dbg !14162, !llvm.loop !14181

41:                                               ; preds = %19
  ret void, !dbg !14183
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_start(%struct.k_thread.203* noundef %0) #1 !dbg !14184 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14185, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14187, metadata !DIExpression()), !dbg !14188
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14189
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14191
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14193
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14195, !srcloc !13187
  store i32 %11, i32* %2, align 4, !dbg !14195
  %12 = load i32, i32* %2, align 4, !dbg !14196
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14197
  store i32 %12, i32* %13, align 4, !dbg !14198
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14199
  %15 = load i32, i32* %14, align 4, !dbg !14199
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14200
  store i32 %15, i32* %16, align 4, !dbg !14200
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14201
  %18 = call zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %17) #10, !dbg !14203
  br i1 %18, label %19, label %33, !dbg !14204

19:                                               ; preds = %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14205
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !14205
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !14205
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14207
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14209
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14210
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14211
  %27 = load i32, i32* %26, align 4, !dbg !14211
  store i32 %27, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14212
  %28 = load i32, i32* %3, align 4, !dbg !14214
  %29 = icmp ne i32 %28, 0, !dbg !14215
  br i1 %29, label %30, label %31, !dbg !14216

30:                                               ; preds = %19
  br label %32, !dbg !14217

31:                                               ; preds = %19
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14218, !srcloc !13233
  br label %32, !dbg !14219

32:                                               ; preds = %30, %31
  br label %39, !dbg !14220

33:                                               ; preds = %1
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14221
  call void @z_mark_thread_as_started.70(%struct.k_thread.203* noundef %34) #10, !dbg !14222
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14223
  call void @ready_thread(%struct.k_thread.203* noundef %35) #10, !dbg !14224
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14225
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !14225
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !14225
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %38) #10, !dbg !14225
  br label %39, !dbg !14226

39:                                               ; preds = %33, %32
  ret void, !dbg !14226
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %0) #1 !dbg !14227 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14228, metadata !DIExpression()), !dbg !14229
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14230
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14231
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14232
  %6 = load i8, i8* %5, align 1, !dbg !14232
  %7 = zext i8 %6 to i32, !dbg !14230
  %8 = and i32 %7, 4, !dbg !14233
  %9 = icmp eq i32 %8, 0, !dbg !14234
  ret i1 %9, !dbg !14235
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started.70(%struct.k_thread.203* noundef %0) #1 !dbg !14236 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14237, metadata !DIExpression()), !dbg !14238
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14239
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14240
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14241
  %6 = load i8, i8* %5, align 1, !dbg !14242
  %7 = zext i8 %6 to i32, !dbg !14242
  %8 = and i32 %7, -5, !dbg !14242
  %9 = trunc i32 %8 to i8, !dbg !14242
  store i8 %9, i8* %5, align 1, !dbg !14242
  ret void, !dbg !14243
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule(%struct.k_spinlock.13* noundef %0, [1 x i32] %1) #1 !dbg !14244 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %12 = bitcast i32* %11 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %12, align 4
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !14245, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14247, metadata !DIExpression()), !dbg !14248
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14249
  %14 = load i32, i32* %13, align 4, !dbg !14249
  %15 = call zeroext i1 @resched(i32 noundef %14) #10, !dbg !14251
  br i1 %15, label %16, label %30, !dbg !14252

16:                                               ; preds = %2
  %17 = call zeroext i1 @need_swap() #10, !dbg !14253
  br i1 %17, label %18, label %30, !dbg !14254

18:                                               ; preds = %16
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14255
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14257
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !14257
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !14257
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* %19, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !14258, metadata !DIExpression()) #9, !dbg !14262
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !14264, metadata !DIExpression()) #9, !dbg !14265
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14266
  store %struct.k_spinlock.13* %25, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !14267, metadata !DIExpression()) #9, !dbg !14271
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !14273
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14274
  %28 = load i32, i32* %27, align 4, !dbg !14274
  %29 = call i32 @z_swap_irqlock(i32 noundef %28) #13, !dbg !14275
  br label %45, !dbg !14276

30:                                               ; preds = %16, %2
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14277
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14279
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !14279
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !14279
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* %31, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13212, metadata !DIExpression()) #9, !dbg !14280
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13218, metadata !DIExpression()) #9, !dbg !14282
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14283
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14284
  %39 = load i32, i32* %38, align 4, !dbg !14284
  store i32 %39, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14285
  %40 = load i32, i32* %3, align 4, !dbg !14287
  %41 = icmp ne i32 %40, 0, !dbg !14288
  br i1 %41, label %42, label %43, !dbg !14289

42:                                               ; preds = %30
  br label %44, !dbg !14290

43:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14291, !srcloc !13233
  br label %44, !dbg !14292

44:                                               ; preds = %42, %43
  call void @signal_pending_ipi() #10, !dbg !14293
  br label %45

45:                                               ; preds = %44, %18
  ret void, !dbg !14294
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @resched(i32 noundef %0) #1 !dbg !14295 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14298, metadata !DIExpression()), !dbg !14299
  %5 = load i32, i32* %4, align 4, !dbg !14300
  store i32 %5, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14301, metadata !DIExpression()), !dbg !14305
  %6 = load i32, i32* %3, align 4, !dbg !14307
  %7 = icmp eq i32 %6, 0, !dbg !14308
  br i1 %7, label %8, label %15, !dbg !14309

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14310, metadata !DIExpression()) #9, !dbg !14312
  %9 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !14316, !srcloc !14317
  store i32 %9, i32* %2, align 4, !dbg !14316
  %10 = load i32, i32* %2, align 4, !dbg !14318
  %11 = icmp ne i32 %10, 0, !dbg !14319
  %12 = zext i1 %11 to i64, !dbg !14319
  %13 = select i1 %11, i32 1, i32 0, !dbg !14319
  %14 = xor i1 %11, true, !dbg !14320
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i1 [ false, %1 ], [ %14, %8 ], !dbg !14321
  ret i1 %16, !dbg !14322
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @need_swap() #1 !dbg !14323 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14326
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !14327
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !14328
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14329
  %5 = icmp ne %struct.k_thread.203* %3, %4, !dbg !14330
  ret i1 %5, !dbg !14331
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_swap_irqlock(i32 noundef %0) #1 !dbg !14332 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14333, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14335, metadata !DIExpression()), !dbg !14336
  %4 = load i32, i32* %2, align 4, !dbg !14337
  %5 = call i32 @arch_swap(i32 noundef %4) #10, !dbg !14338
  store i32 %5, i32* %3, align 4, !dbg !14339
  %6 = load i32, i32* %3, align 4, !dbg !14340
  ret i32 %6, !dbg !14341
}

; Function Attrs: noinline nounwind optnone
define internal void @signal_pending_ipi() #1 !dbg !14342 {
  ret void, !dbg !14343
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !14344 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !14345, metadata !DIExpression()), !dbg !14346
  br label %14, !dbg !14347

14:                                               ; preds = %1
  br label %15, !dbg !14348

15:                                               ; preds = %14
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14350
  %17 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %16) #10, !dbg !14351
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14352, metadata !DIExpression()), !dbg !14354
  %18 = bitcast %union.anon.68* %12 to i8*, !dbg !14354
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !14354
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !14355, metadata !DIExpression()), !dbg !14354
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13172, metadata !DIExpression()) #9, !dbg !14356
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14358
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13180, metadata !DIExpression()) #9, !dbg !14359
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13182, metadata !DIExpression()) #9, !dbg !14360
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14362, !srcloc !13187
  store i32 %20, i32* %4, align 4, !dbg !14362
  %21 = load i32, i32* %4, align 4, !dbg !14363
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14364
  store i32 %21, i32* %22, align 4, !dbg !14365
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14366
  %24 = load i32, i32* %23, align 4, !dbg !14366
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !14354
  store i32 %24, i32* %25, align 4, !dbg !14354
  br label %26, !dbg !14354

26:                                               ; preds = %70, %15
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14367
  %28 = load i32, i32* %27, align 4, !dbg !14367
  %29 = icmp ne i32 %28, 0, !dbg !14367
  %30 = xor i1 %29, true, !dbg !14367
  br i1 %30, label %31, label %72, !dbg !14354

31:                                               ; preds = %26
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14369
  %33 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %32) #10, !dbg !14372
  br i1 %33, label %34, label %51, !dbg !14373

34:                                               ; preds = %31
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14374
  store %struct.k_thread.203* %35, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13572, metadata !DIExpression()) #9, !dbg !14376
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14378
  %37 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %36, i32 0, i32 0, !dbg !14379
  %38 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %37, i32 0, i32 3, !dbg !14380
  %39 = load i8, i8* %38, align 1, !dbg !14381
  %40 = zext i8 %39 to i32, !dbg !14381
  %41 = and i32 %40, -129, !dbg !14381
  %42 = trunc i32 %41 to i8, !dbg !14381
  store i8 %42, i8* %38, align 1, !dbg !14381
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14382
  %44 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %43) #13, !dbg !14383
  br i1 %44, label %45, label %50, !dbg !14384

45:                                               ; preds = %34
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14385
  store %struct.k_thread.203* %46, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13586, metadata !DIExpression()) #9, !dbg !14386
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14388
  store %struct.k_thread.203* %47, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13591, metadata !DIExpression()), !dbg !14389
  %48 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14391
  %49 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14392
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %48, %struct.k_thread.203* noundef %49) #13, !dbg !14393
  br label %50, !dbg !14394

50:                                               ; preds = %34, %45
  br label %51, !dbg !14395

51:                                               ; preds = %50, %31
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14396
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !14397
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14398
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14399
  %55 = icmp eq %struct.k_thread.203* %53, %54, !dbg !14400
  %56 = zext i1 %55 to i32, !dbg !14400
  call void @update_cache(i32 noundef %56) #10, !dbg !14401
  br label %57, !dbg !14402

57:                                               ; preds = %51
  %58 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !14367
  %59 = bitcast i32* %58 to [1 x i32]*, !dbg !14367
  %60 = load [1 x i32], [1 x i32]* %59, align 4, !dbg !14367
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %62 = bitcast i32* %61 to [1 x i32]*
  store [1 x i32] %60, [1 x i32]* %62, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13212, metadata !DIExpression()) #9, !dbg !14403
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13218, metadata !DIExpression()) #9, !dbg !14405
  %63 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14406
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14407
  %65 = load i32, i32* %64, align 4, !dbg !14407
  store i32 %65, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13222, metadata !DIExpression()) #9, !dbg !14408
  %66 = load i32, i32* %5, align 4, !dbg !14410
  %67 = icmp ne i32 %66, 0, !dbg !14411
  br i1 %67, label %68, label %69, !dbg !14412

68:                                               ; preds = %57
  br label %70, !dbg !14413

69:                                               ; preds = %57
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14414, !srcloc !13233
  br label %70, !dbg !14415

70:                                               ; preds = %68, %69
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14367
  store i32 1, i32* %71, align 4, !dbg !14367
  br label %26, !dbg !14367, !llvm.loop !14416

72:                                               ; preds = %26
  %73 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14418
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14420
  %75 = icmp eq %struct.k_thread.203* %73, %74, !dbg !14421
  br i1 %75, label %76, label %77, !dbg !14422

76:                                               ; preds = %72
  call void @z_reschedule_unlocked() #10, !dbg !14423
  br label %77, !dbg !14425

77:                                               ; preds = %76, %72
  br label %78, !dbg !14426

78:                                               ; preds = %77
  br label %79, !dbg !14427

79:                                               ; preds = %78
  ret void, !dbg !14429
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !14430 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14431, metadata !DIExpression()), !dbg !14432
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14433
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14434
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !14435
  %6 = call i32 @z_abort_timeout(%struct._timeout.195* noundef %5) #10, !dbg !14436
  ret i32 %6, !dbg !14437
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !14438 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14439, metadata !DIExpression()), !dbg !14440
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14441
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14442
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14443
  %6 = load i8, i8* %5, align 1, !dbg !14444
  %7 = zext i8 %6 to i32, !dbg !14444
  %8 = or i32 %7, 16, !dbg !14444
  %9 = trunc i32 %8 to i8, !dbg !14444
  store i8 %9, i8* %5, align 1, !dbg !14444
  br label %10, !dbg !14445

10:                                               ; preds = %1
  br label %11, !dbg !14446

11:                                               ; preds = %10
  ret void, !dbg !14448
}

; Function Attrs: noinline nounwind optnone
define internal void @z_reschedule_unlocked() #1 !dbg !14449 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13182, metadata !DIExpression()) #9, !dbg !14450
  %2 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14452, !srcloc !13187
  store i32 %2, i32* %1, align 4, !dbg !14452
  %3 = load i32, i32* %1, align 4, !dbg !14453
  call void @z_reschedule_irqlock(i32 noundef %3) #10, !dbg !14454
  ret void, !dbg !14455
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule_irqlock(i32 noundef %0) #1 !dbg !14456 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14457, metadata !DIExpression()), !dbg !14458
  %4 = load i32, i32* %3, align 4, !dbg !14459
  %5 = call zeroext i1 @resched(i32 noundef %4) #10, !dbg !14461
  br i1 %5, label %6, label %9, !dbg !14462

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !14463
  %8 = call i32 @z_swap_irqlock(i32 noundef %7) #10, !dbg !14465
  br label %16, !dbg !14466

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !14467
  store i32 %10, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13222, metadata !DIExpression()) #9, !dbg !14469
  %11 = load i32, i32* %2, align 4, !dbg !14471
  %12 = icmp ne i32 %11, 0, !dbg !14472
  br i1 %12, label %13, label %14, !dbg !14473

13:                                               ; preds = %9
  br label %15, !dbg !14474

14:                                               ; preds = %9
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14475, !srcloc !13233
  br label %15, !dbg !14476

15:                                               ; preds = %13, %14
  call void @signal_pending_ipi() #10, !dbg !14477
  br label %16

16:                                               ; preds = %15, %6
  ret void, !dbg !14478
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_resume(%struct.k_thread.203* noundef %0) #1 !dbg !14479 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14480, metadata !DIExpression()), !dbg !14481
  br label %10, !dbg !14482

10:                                               ; preds = %1
  br label %11, !dbg !14483

11:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14485, metadata !DIExpression()), !dbg !14486
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14487
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14489
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14490
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14491
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14493, !srcloc !13187
  store i32 %13, i32* %2, align 4, !dbg !14493
  %14 = load i32, i32* %2, align 4, !dbg !14494
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14495
  store i32 %14, i32* %15, align 4, !dbg !14496
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14497
  %17 = load i32, i32* %16, align 4, !dbg !14497
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14498
  store i32 %17, i32* %18, align 4, !dbg !14498
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14499
  %20 = call zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %19) #10, !dbg !14501
  br i1 %20, label %35, label %21, !dbg !14502

21:                                               ; preds = %11
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14503
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !14503
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !14503
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14505
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14507
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14508
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14509
  %29 = load i32, i32* %28, align 4, !dbg !14509
  store i32 %29, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14510
  %30 = load i32, i32* %3, align 4, !dbg !14512
  %31 = icmp ne i32 %30, 0, !dbg !14513
  br i1 %31, label %32, label %33, !dbg !14514

32:                                               ; preds = %21
  br label %34, !dbg !14515

33:                                               ; preds = %21
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14516, !srcloc !13233
  br label %34, !dbg !14517

34:                                               ; preds = %32, %33
  br label %42, !dbg !14518

35:                                               ; preds = %11
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14519
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %36) #10, !dbg !14520
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14521
  call void @ready_thread(%struct.k_thread.203* noundef %37) #10, !dbg !14522
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14523
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !14523
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !14523
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %40) #10, !dbg !14523
  br label %41, !dbg !14524

41:                                               ; preds = %35
  br label %42, !dbg !14525

42:                                               ; preds = %34, %41
  ret void, !dbg !14527
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !14528 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14529, metadata !DIExpression()), !dbg !14530
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14531
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14532
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14533
  %6 = load i8, i8* %5, align 1, !dbg !14533
  %7 = zext i8 %6 to i32, !dbg !14531
  %8 = and i32 %7, 16, !dbg !14534
  %9 = icmp ne i32 %8, 0, !dbg !14535
  ret i1 %9, !dbg !14536
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !14537 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14538, metadata !DIExpression()), !dbg !14539
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14540
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14541
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14542
  %6 = load i8, i8* %5, align 1, !dbg !14543
  %7 = zext i8 %6 to i32, !dbg !14543
  %8 = and i32 %7, -17, !dbg !14543
  %9 = trunc i32 %8 to i8, !dbg !14543
  store i8 %9, i8* %5, align 1, !dbg !14543
  br label %10, !dbg !14544

10:                                               ; preds = %1
  br label %11, !dbg !14545

11:                                               ; preds = %10
  ret void, !dbg !14547
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pend_thread(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !14548 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %16 = bitcast i64* %15 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %16, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !14555, metadata !DIExpression()), !dbg !14556
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !14557, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !14559, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !14561, metadata !DIExpression()), !dbg !14563
  %17 = bitcast %union.anon.68* %13 to i8*, !dbg !14563
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !14563
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !14564, metadata !DIExpression()), !dbg !14563
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13172, metadata !DIExpression()) #9, !dbg !14565
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14567
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13180, metadata !DIExpression()) #9, !dbg !14568
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13182, metadata !DIExpression()) #9, !dbg !14569
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14571, !srcloc !13187
  store i32 %19, i32* %4, align 4, !dbg !14571
  %20 = load i32, i32* %4, align 4, !dbg !14572
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14573
  store i32 %20, i32* %21, align 4, !dbg !14574
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14575
  %23 = load i32, i32* %22, align 4, !dbg !14575
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14563
  store i32 %23, i32* %24, align 4, !dbg !14563
  br label %25, !dbg !14563

25:                                               ; preds = %49, %3
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !14576
  %27 = load i32, i32* %26, align 4, !dbg !14576
  %28 = icmp ne i32 %27, 0, !dbg !14576
  %29 = xor i1 %28, true, !dbg !14576
  br i1 %29, label %30, label %51, !dbg !14563

30:                                               ; preds = %25
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14578
  %32 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !14580
  %33 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !14581
  %34 = bitcast i64* %33 to [1 x i64]*, !dbg !14581
  %35 = load [1 x i64], [1 x i64]* %34, align 8, !dbg !14581
  call void @pend_locked(%struct.k_thread.203* noundef %31, %union.anon.192* noundef %32, [1 x i64] %35) #10, !dbg !14581
  br label %36, !dbg !14582

36:                                               ; preds = %30
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14576
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !14576
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !14576
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13212, metadata !DIExpression()) #9, !dbg !14583
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13218, metadata !DIExpression()) #9, !dbg !14585
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14586
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14587
  %44 = load i32, i32* %43, align 4, !dbg !14587
  store i32 %44, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13222, metadata !DIExpression()) #9, !dbg !14588
  %45 = load i32, i32* %5, align 4, !dbg !14590
  %46 = icmp ne i32 %45, 0, !dbg !14591
  br i1 %46, label %47, label %48, !dbg !14592

47:                                               ; preds = %36
  br label %49, !dbg !14593

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14594, !srcloc !13233
  br label %49, !dbg !14595

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !14576
  store i32 1, i32* %50, align 4, !dbg !14576
  br label %25, !dbg !14576, !llvm.loop !14596

51:                                               ; preds = %25
  ret void, !dbg !14598
}

; Function Attrs: noinline nounwind optnone
define internal void @pend_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !14599 {
  %4 = alloca %union.argument_value, align 8
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %union.anon.192*, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14600, metadata !DIExpression()), !dbg !14601
  store %union.anon.192* %1, %union.anon.192** %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %6, metadata !14602, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.declare(metadata %union.argument_value* %4, metadata !14604, metadata !DIExpression()), !dbg !14605
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14606
  %10 = load %union.anon.192*, %union.anon.192** %6, align 4, !dbg !14607
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %9, %union.anon.192* noundef %10) #10, !dbg !14608
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14609
  %12 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0, !dbg !14610
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !14610
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !14610
  call void @add_thread_timeout(%struct.k_thread.203* noundef %11, [1 x i64] %14) #10, !dbg !14610
  ret void, !dbg !14611
}

; Function Attrs: noinline nounwind optnone
define internal void @add_to_waitq_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1) #1 !dbg !14612 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.192*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !14615, metadata !DIExpression()), !dbg !14616
  store %union.anon.192* %1, %union.anon.192** %7, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %7, metadata !14617, metadata !DIExpression()), !dbg !14618
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14619
  call void @unready_thread(%struct.k_thread.203* noundef %8) #10, !dbg !14620
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14621
  call void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %9) #10, !dbg !14622
  br label %10, !dbg !14623

10:                                               ; preds = %2
  br label %11, !dbg !14624

11:                                               ; preds = %10
  %12 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !14626
  %13 = icmp ne %union.anon.192* %12, null, !dbg !14628
  br i1 %13, label %14, label %83, !dbg !14629

14:                                               ; preds = %11
  %15 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !14630
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14632
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !14633
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 1, !dbg !14634
  store %union.anon.192* %15, %union.anon.192** %18, align 8, !dbg !14635
  %19 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !14636
  %20 = getelementptr inbounds %union.anon.192, %union.anon.192* %19, i32 0, i32 0, !dbg !14637
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14638
  store %struct._dnode.191* %20, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13625, metadata !DIExpression()) #9, !dbg !14639
  store %struct.k_thread.203* %21, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13632, metadata !DIExpression()) #9, !dbg !14641
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13634, metadata !DIExpression()) #9, !dbg !14642
  %22 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14643
  %23 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %22) #13, !dbg !14643
  %24 = icmp ne %struct._dnode.191* %23, null, !dbg !14643
  br i1 %24, label %25, label %30, !dbg !14643

25:                                               ; preds = %14
  %26 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14643
  %27 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %26) #13, !dbg !14643
  %28 = bitcast %struct._dnode.191* %27 to i8*, !dbg !14643
  %29 = bitcast i8* %28 to %struct.k_thread.203*, !dbg !14643
  br label %31, !dbg !14643

30:                                               ; preds = %14
  br label %31, !dbg !14643

31:                                               ; preds = %30, %25
  %32 = phi %struct.k_thread.203* [ %29, %25 ], [ null, %30 ], !dbg !14643
  store %struct.k_thread.203* %32, %struct.k_thread.203** %5, align 4, !dbg !14643
  br label %33, !dbg !14643

33:                                               ; preds = %74, %31
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14644
  %35 = icmp ne %struct.k_thread.203* %34, null, !dbg !14644
  br i1 %35, label %36, label %76, !dbg !14643

36:                                               ; preds = %33
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14645
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14646
  %39 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %37, %struct.k_thread.203* noundef %38) #13, !dbg !14647
  %40 = icmp sgt i32 %39, 0, !dbg !14648
  br i1 %40, label %41, label %50, !dbg !14649

41:                                               ; preds = %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14650
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 0, !dbg !14651
  %44 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %43, i32 0, i32 0, !dbg !14652
  %45 = bitcast %union.anon.192* %44 to %struct._dnode.191*, !dbg !14652
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14653
  %47 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %46, i32 0, i32 0, !dbg !14654
  %48 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %47, i32 0, i32 0, !dbg !14655
  %49 = bitcast %union.anon.192* %48 to %struct._dnode.191*, !dbg !14655
  call void @sys_dlist_insert(%struct._dnode.191* noundef %45, %struct._dnode.191* noundef %49) #13, !dbg !14656
  br label %82, !dbg !14657

50:                                               ; preds = %36
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14644
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !14644
  br i1 %52, label %53, label %73, !dbg !14644

53:                                               ; preds = %50
  %54 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14644
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14644
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !14644
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !14644
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !14644
  %59 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !14644
  %60 = icmp ne %struct._dnode.191* %59, null, !dbg !14644
  br i1 %60, label %61, label %70, !dbg !14644

61:                                               ; preds = %53
  %62 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14644
  %63 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14644
  %64 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %63, i32 0, i32 0, !dbg !14644
  %65 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %64, i32 0, i32 0, !dbg !14644
  %66 = bitcast %union.anon.192* %65 to %struct._dnode.191*, !dbg !14644
  %67 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %62, %struct._dnode.191* noundef %66) #13, !dbg !14644
  %68 = bitcast %struct._dnode.191* %67 to i8*, !dbg !14644
  %69 = bitcast i8* %68 to %struct.k_thread.203*, !dbg !14644
  br label %71, !dbg !14644

70:                                               ; preds = %53
  br label %71, !dbg !14644

71:                                               ; preds = %70, %61
  %72 = phi %struct.k_thread.203* [ %69, %61 ], [ null, %70 ], !dbg !14644
  br label %74, !dbg !14644

73:                                               ; preds = %50
  br label %74, !dbg !14644

74:                                               ; preds = %73, %71
  %75 = phi %struct.k_thread.203* [ %72, %71 ], [ null, %73 ], !dbg !14644
  store %struct.k_thread.203* %75, %struct.k_thread.203** %5, align 4, !dbg !14644
  br label %33, !dbg !14644, !llvm.loop !14658

76:                                               ; preds = %33
  %77 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14660
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14661
  %79 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %78, i32 0, i32 0, !dbg !14662
  %80 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %79, i32 0, i32 0, !dbg !14663
  %81 = bitcast %union.anon.192* %80 to %struct._dnode.191*, !dbg !14663
  call void @sys_dlist_append(%struct._dnode.191* noundef %77, %struct._dnode.191* noundef %81) #13, !dbg !14664
  br label %82, !dbg !14665

82:                                               ; preds = %41, %76
  br label %83, !dbg !14666

83:                                               ; preds = %82, %11
  ret void, !dbg !14667
}

; Function Attrs: noinline nounwind optnone
define internal void @add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !14668 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14671, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14673, metadata !DIExpression()), !dbg !14674
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14675
  %9 = load i64, i64* %8, align 8, !dbg !14675
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !14675
  store i64 -1, i64* %10, align 8, !dbg !14675
  %11 = icmp eq i64 %9, -1, !dbg !14675
  br i1 %11, label %17, label %12, !dbg !14677

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14678
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14680
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !14680
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !14680
  call void @z_add_thread_timeout.71(%struct.k_thread.203* noundef %13, [1 x i64] %16) #10, !dbg !14680
  br label %17, !dbg !14681

17:                                               ; preds = %12, %2
  ret void, !dbg !14682
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout.71(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !14683 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14686, metadata !DIExpression()), !dbg !14687
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14688
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !14689
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !14690
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14691
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !14691
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !14691
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !14691
  ret void, !dbg !14692
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_timeout(%struct._timeout.195* noundef %0) #1 !dbg !14693 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca i8, align 1
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !14694, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14696, metadata !DIExpression()), !dbg !14697
  %13 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !14698
  %14 = bitcast %struct._timeout.195* %13 to i8*, !dbg !14698
  %15 = getelementptr inbounds i8, i8* %14, i32 -24, !dbg !14698
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !14698
  store %struct.k_thread.203* %16, %struct.k_thread.203** %9, align 4, !dbg !14697
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14699, metadata !DIExpression()), !dbg !14701
  %17 = bitcast %union.anon.68* %10 to i8*, !dbg !14701
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !14701
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14702, metadata !DIExpression()), !dbg !14701
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14703
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14705
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14706
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14707
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14709, !srcloc !13187
  store i32 %19, i32* %2, align 4, !dbg !14709
  %20 = load i32, i32* %2, align 4, !dbg !14710
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14711
  store i32 %20, i32* %21, align 4, !dbg !14712
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14713
  %23 = load i32, i32* %22, align 4, !dbg !14713
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14701
  store i32 %23, i32* %24, align 4, !dbg !14701
  br label %25, !dbg !14701

25:                                               ; preds = %77, %1
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14714
  %27 = load i32, i32* %26, align 4, !dbg !14714
  %28 = icmp ne i32 %27, 0, !dbg !14714
  %29 = xor i1 %28, true, !dbg !14714
  br i1 %29, label %30, label %79, !dbg !14701

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i8* %12, metadata !14716, metadata !DIExpression()), !dbg !14718
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14719
  %32 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %31, i32 0, i32 0, !dbg !14720
  %33 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %32, i32 0, i32 3, !dbg !14721
  %34 = load i8, i8* %33, align 1, !dbg !14721
  %35 = zext i8 %34 to i32, !dbg !14719
  %36 = and i32 %35, 8, !dbg !14722
  %37 = icmp ne i32 %36, 0, !dbg !14722
  br i1 %37, label %46, label %38, !dbg !14723

38:                                               ; preds = %30
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14724
  %40 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %39, i32 0, i32 0, !dbg !14725
  %41 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %40, i32 0, i32 3, !dbg !14726
  %42 = load i8, i8* %41, align 1, !dbg !14726
  %43 = zext i8 %42 to i32, !dbg !14724
  %44 = and i32 %43, 32, !dbg !14727
  %45 = icmp ne i32 %44, 0, !dbg !14723
  br label %46, !dbg !14723

46:                                               ; preds = %38, %30
  %47 = phi i1 [ true, %30 ], [ %45, %38 ]
  %48 = zext i1 %47 to i8, !dbg !14718
  store i8 %48, i8* %12, align 1, !dbg !14718
  %49 = load i8, i8* %12, align 1, !dbg !14728
  %50 = trunc i8 %49 to i1, !dbg !14728
  br i1 %50, label %63, label %51, !dbg !14730

51:                                               ; preds = %46
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14731
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !14734
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 1, !dbg !14735
  %55 = load %union.anon.192*, %union.anon.192** %54, align 8, !dbg !14735
  %56 = icmp ne %union.anon.192* %55, null, !dbg !14736
  br i1 %56, label %57, label %59, !dbg !14737

57:                                               ; preds = %51
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14738
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %58) #10, !dbg !14740
  br label %59, !dbg !14741

59:                                               ; preds = %57, %51
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14742
  call void @z_mark_thread_as_started.70(%struct.k_thread.203* noundef %60) #10, !dbg !14743
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14744
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %61) #10, !dbg !14745
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14746
  call void @ready_thread(%struct.k_thread.203* noundef %62) #10, !dbg !14747
  br label %63, !dbg !14748

63:                                               ; preds = %59, %46
  br label %64, !dbg !14749

64:                                               ; preds = %63
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14714
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !14714
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !14714
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14750
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14752
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14753
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14754
  %72 = load i32, i32* %71, align 4, !dbg !14754
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14755
  %73 = load i32, i32* %3, align 4, !dbg !14757
  %74 = icmp ne i32 %73, 0, !dbg !14758
  br i1 %74, label %75, label %76, !dbg !14759

75:                                               ; preds = %64
  br label %77, !dbg !14760

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14761, !srcloc !13233
  br label %77, !dbg !14762

77:                                               ; preds = %75, %76
  %78 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14714
  store i32 1, i32* %78, align 4, !dbg !14714
  br label %25, !dbg !14714, !llvm.loop !14763

79:                                               ; preds = %25
  ret void, !dbg !14765
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !14766 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14767, metadata !DIExpression()), !dbg !14768
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14769
  %4 = call %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %3) #10, !dbg !14770
  %5 = getelementptr inbounds %union.anon.192, %union.anon.192* %4, i32 0, i32 0, !dbg !14771
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14772
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %5, %struct.k_thread.203* noundef %6) #10, !dbg !14773
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14774
  call void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %7) #10, !dbg !14775
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14776
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !14777
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !14778
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !14779
  ret void, !dbg !14780
}

; Function Attrs: noinline nounwind optnone
define internal %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14781 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14784, metadata !DIExpression()), !dbg !14785
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14786
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14787
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 1, !dbg !14788
  %6 = load %union.anon.192*, %union.anon.192** %5, align 8, !dbg !14788
  ret %union.anon.192* %6, !dbg !14789
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %0) #1 !dbg !14790 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14791, metadata !DIExpression()), !dbg !14792
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14793
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14794
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14795
  %6 = load i8, i8* %5, align 1, !dbg !14796
  %7 = zext i8 %6 to i32, !dbg !14796
  %8 = and i32 %7, -3, !dbg !14796
  %9 = trunc i32 %8 to i8, !dbg !14796
  store i8 %9, i8* %5, align 1, !dbg !14796
  ret void, !dbg !14797
}

; Function Attrs: noinline nounwind optnone
define internal void @unready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14798 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14799, metadata !DIExpression()), !dbg !14800
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14801
  %7 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %6) #10, !dbg !14803
  br i1 %7, label %8, label %25, !dbg !14804

8:                                                ; preds = %1
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14805
  store %struct.k_thread.203* %9, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13572, metadata !DIExpression()) #9, !dbg !14807
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14809
  %11 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %10, i32 0, i32 0, !dbg !14810
  %12 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %11, i32 0, i32 3, !dbg !14811
  %13 = load i8, i8* %12, align 1, !dbg !14812
  %14 = zext i8 %13 to i32, !dbg !14812
  %15 = and i32 %14, -129, !dbg !14812
  %16 = trunc i32 %15 to i8, !dbg !14812
  store i8 %16, i8* %12, align 1, !dbg !14812
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14813
  %18 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %17) #13, !dbg !14814
  br i1 %18, label %19, label %24, !dbg !14815

19:                                               ; preds = %8
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14816
  store %struct.k_thread.203* %20, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13586, metadata !DIExpression()) #9, !dbg !14817
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14819
  store %struct.k_thread.203* %21, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13591, metadata !DIExpression()), !dbg !14820
  %22 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14822
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14823
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %22, %struct.k_thread.203* noundef %23) #13, !dbg !14824
  br label %24, !dbg !14825

24:                                               ; preds = %8, %19
  br label %25, !dbg !14826

25:                                               ; preds = %24, %1
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14827
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14828
  %28 = icmp eq %struct.k_thread.203* %26, %27, !dbg !14829
  %29 = zext i1 %28 to i32, !dbg !14829
  call void @update_cache(i32 noundef %29) #10, !dbg !14830
  ret void, !dbg !14831
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %0) #1 !dbg !14832 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14833, metadata !DIExpression()), !dbg !14834
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14835
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14836
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !14837
  %6 = load i8, i8* %5, align 1, !dbg !14838
  %7 = zext i8 %6 to i32, !dbg !14838
  %8 = or i32 %7, 2, !dbg !14838
  %9 = trunc i32 %8 to i8, !dbg !14838
  store i8 %9, i8* %5, align 1, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: alwaysinline nounwind
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #8 !dbg !14840 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14841, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14843, metadata !DIExpression()), !dbg !14845
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !14845
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !14845
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14846, metadata !DIExpression()), !dbg !14845
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14847
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14849
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14850
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !14851
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14853, !srcloc !13187
  store i32 %13, i32* %2, align 4, !dbg !14853
  %14 = load i32, i32* %2, align 4, !dbg !14854
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14855
  store i32 %14, i32* %15, align 4, !dbg !14856
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14857
  %17 = load i32, i32* %16, align 4, !dbg !14857
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14845
  store i32 %17, i32* %18, align 4, !dbg !14845
  br label %19, !dbg !14845

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14858
  %21 = load i32, i32* %20, align 4, !dbg !14858
  %22 = icmp ne i32 %21, 0, !dbg !14858
  %23 = xor i1 %22, true, !dbg !14858
  br i1 %23, label %24, label %41, !dbg !14845

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14860
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %25) #10, !dbg !14862
  br label %26, !dbg !14863

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14858
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !14858
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !14858
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !14864
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !14866
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14867
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14868
  %34 = load i32, i32* %33, align 4, !dbg !14868
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !14869
  %35 = load i32, i32* %3, align 4, !dbg !14871
  %36 = icmp ne i32 %35, 0, !dbg !14872
  br i1 %36, label %37, label %38, !dbg !14873

37:                                               ; preds = %26
  br label %39, !dbg !14874

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14875, !srcloc !13233
  br label %39, !dbg !14876

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14858
  store i32 1, i32* %40, align 4, !dbg !14858
  br label %19, !dbg !14858, !llvm.loop !14877

41:                                               ; preds = %19
  ret void, !dbg !14879
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !14880 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca i32, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %17 = bitcast i64* %16 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %17, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !14883, metadata !DIExpression()), !dbg !14884
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !14885, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !14887, metadata !DIExpression()), !dbg !14888
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14889
  %19 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !14890
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !14891
  %21 = bitcast i64* %20 to [1 x i64]*, !dbg !14891
  %22 = load [1 x i64], [1 x i64]* %21, align 8, !dbg !14891
  call void @pend_locked(%struct.k_thread.203* noundef %18, %union.anon.192* noundef %19, [1 x i64] %22) #10, !dbg !14891
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14892
  store %struct.k_thread.203* %23, %struct.k_thread.203** @pending_current, align 4, !dbg !14893
  call void @llvm.dbg.declare(metadata i32* %13, metadata !14894, metadata !DIExpression()), !dbg !14895
  %24 = load i32, i32* %11, align 4, !dbg !14896
  %25 = call i32 @z_swap_irqlock(i32 noundef %24) #10, !dbg !14897
  store i32 %25, i32* %13, align 4, !dbg !14895
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !14898, metadata !DIExpression()), !dbg !14900
  %26 = bitcast %union.anon.68* %14 to i8*, !dbg !14900
  call void @llvm.memset.p0i8.i32(i8* align 4 %26, i8 0, i32 4, i1 false), !dbg !14900
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !14901, metadata !DIExpression()), !dbg !14900
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13172, metadata !DIExpression()) #9, !dbg !14902
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14904
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13180, metadata !DIExpression()) #9, !dbg !14905
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13182, metadata !DIExpression()) #9, !dbg !14906
  %28 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14908, !srcloc !13187
  store i32 %28, i32* %4, align 4, !dbg !14908
  %29 = load i32, i32* %4, align 4, !dbg !14909
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14910
  store i32 %29, i32* %30, align 4, !dbg !14911
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14912
  %32 = load i32, i32* %31, align 4, !dbg !14912
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14900
  store i32 %32, i32* %33, align 4, !dbg !14900
  br label %34, !dbg !14900

34:                                               ; preds = %58, %3
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14913
  %36 = load i32, i32* %35, align 4, !dbg !14913
  %37 = icmp ne i32 %36, 0, !dbg !14913
  %38 = xor i1 %37, true, !dbg !14913
  br i1 %38, label %39, label %60, !dbg !14900

39:                                               ; preds = %34
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !14915
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14918
  %42 = icmp eq %struct.k_thread.203* %40, %41, !dbg !14919
  br i1 %42, label %43, label %44, !dbg !14920

43:                                               ; preds = %39
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !14921
  br label %44, !dbg !14923

44:                                               ; preds = %43, %39
  br label %45, !dbg !14924

45:                                               ; preds = %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14913
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !14913
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !14913
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13212, metadata !DIExpression()) #9, !dbg !14925
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13218, metadata !DIExpression()) #9, !dbg !14927
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14928
  %52 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14929
  %53 = load i32, i32* %52, align 4, !dbg !14929
  store i32 %53, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13222, metadata !DIExpression()) #9, !dbg !14930
  %54 = load i32, i32* %5, align 4, !dbg !14932
  %55 = icmp ne i32 %54, 0, !dbg !14933
  br i1 %55, label %56, label %57, !dbg !14934

56:                                               ; preds = %45
  br label %58, !dbg !14935

57:                                               ; preds = %45
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14936, !srcloc !13233
  br label %58, !dbg !14937

58:                                               ; preds = %56, %57
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14913
  store i32 1, i32* %59, align 4, !dbg !14913
  br label %34, !dbg !14913, !llvm.loop !14938

60:                                               ; preds = %34
  %61 = load i32, i32* %13, align 4, !dbg !14940
  ret i32 %61, !dbg !14941
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3) #1 !dbg !14942 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %18 = bitcast i32* %17 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %18, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %20, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !14945, metadata !DIExpression()), !dbg !14946
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14947, metadata !DIExpression()), !dbg !14948
  store %union.anon.192* %2, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !14949, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !14951, metadata !DIExpression()), !dbg !14952
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14953
  store %struct.k_thread.203* %21, %struct.k_thread.203** @pending_current, align 4, !dbg !14954
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !13172, metadata !DIExpression()) #9, !dbg !14955
  %22 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !14957
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13180, metadata !DIExpression()) #9, !dbg !14958
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13182, metadata !DIExpression()) #9, !dbg !14959
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14961, !srcloc !13187
  store i32 %23, i32* %5, align 4, !dbg !14961
  %24 = load i32, i32* %5, align 4, !dbg !14962
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14963
  store i32 %24, i32* %25, align 4, !dbg !14964
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14965
  %27 = load i32, i32* %26, align 4, !dbg !14965
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14966
  store i32 %27, i32* %28, align 4, !dbg !14966
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14967
  %30 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !14968
  %31 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !14969
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !14969
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !14969
  call void @pend_locked(%struct.k_thread.203* noundef %29, %union.anon.192* noundef %30, [1 x i64] %33) #10, !dbg !14969
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !14970
  store %struct.k_spinlock.13* %34, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !14267, metadata !DIExpression()), !dbg !14971
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14973
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14974
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !14974
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !14974
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !14258, metadata !DIExpression()) #9, !dbg !14975
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !14264, metadata !DIExpression()) #9, !dbg !14977
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14978
  store %struct.k_spinlock.13* %41, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !14267, metadata !DIExpression()) #9, !dbg !14979
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14981
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14982
  %44 = load i32, i32* %43, align 4, !dbg !14982
  %45 = call i32 @z_swap_irqlock(i32 noundef %44) #13, !dbg !14983
  ret i32 %45, !dbg !14984
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend1_no_timeout(%union.anon.192* noundef %0) #1 !dbg !14985 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14990, metadata !DIExpression()), !dbg !14991
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !14991
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14992, metadata !DIExpression()), !dbg !14994
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14994
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14994
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14995, metadata !DIExpression()), !dbg !14994
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !14996
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14998
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !14999
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !15000
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15002, !srcloc !13187
  store i32 %14, i32* %2, align 4, !dbg !15002
  %15 = load i32, i32* %2, align 4, !dbg !15003
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15004
  store i32 %15, i32* %16, align 4, !dbg !15005
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15006
  %18 = load i32, i32* %17, align 4, !dbg !15006
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14994
  store i32 %18, i32* %19, align 4, !dbg !14994
  br label %20, !dbg !14994

20:                                               ; preds = %47, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15007
  %22 = load i32, i32* %21, align 4, !dbg !15007
  %23 = icmp ne i32 %22, 0, !dbg !15007
  %24 = xor i1 %23, true, !dbg !15007
  br i1 %24, label %25, label %49, !dbg !14994

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !15009
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !15011
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !15012
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !15013
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15014
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !15016
  br i1 %30, label %31, label %33, !dbg !15017

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15018
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !15020
  br label %33, !dbg !15021

33:                                               ; preds = %31, %25
  br label %34, !dbg !15022

34:                                               ; preds = %33
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15007
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !15007
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !15007
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !15023
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !15025
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15026
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !15027
  %42 = load i32, i32* %41, align 4, !dbg !15027
  store i32 %42, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !15028
  %43 = load i32, i32* %3, align 4, !dbg !15030
  %44 = icmp ne i32 %43, 0, !dbg !15031
  br i1 %44, label %45, label %46, !dbg !15032

45:                                               ; preds = %34
  br label %47, !dbg !15033

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15034, !srcloc !13233
  br label %47, !dbg !15035

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15007
  store i32 1, i32* %48, align 4, !dbg !15007
  br label %20, !dbg !15007, !llvm.loop !15036

49:                                               ; preds = %20
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15038
  ret %struct.k_thread.203* %50, !dbg !15039
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend_first_thread(%union.anon.192* noundef %0) #1 !dbg !15040 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !15043, metadata !DIExpression()), !dbg !15044
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !15044
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !15045, metadata !DIExpression()), !dbg !15047
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !15047
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !15047
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !15048, metadata !DIExpression()), !dbg !15047
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !15049
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15051
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !15052
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !15053
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15055, !srcloc !13187
  store i32 %14, i32* %2, align 4, !dbg !15055
  %15 = load i32, i32* %2, align 4, !dbg !15056
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15057
  store i32 %15, i32* %16, align 4, !dbg !15058
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15059
  %18 = load i32, i32* %17, align 4, !dbg !15059
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15047
  store i32 %18, i32* %19, align 4, !dbg !15047
  br label %20, !dbg !15047

20:                                               ; preds = %49, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15060
  %22 = load i32, i32* %21, align 4, !dbg !15060
  %23 = icmp ne i32 %22, 0, !dbg !15060
  %24 = xor i1 %23, true, !dbg !15060
  br i1 %24, label %25, label %51, !dbg !15047

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !15062
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !15064
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !15065
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !15066
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15067
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !15069
  br i1 %30, label %31, label %35, !dbg !15070

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15071
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !15073
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15074
  %34 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %33) #10, !dbg !15075
  br label %35, !dbg !15076

35:                                               ; preds = %31, %25
  br label %36, !dbg !15077

36:                                               ; preds = %35
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15060
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !15060
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !15060
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !15078
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !15080
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15081
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !15082
  %44 = load i32, i32* %43, align 4, !dbg !15082
  store i32 %44, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !15083
  %45 = load i32, i32* %3, align 4, !dbg !15085
  %46 = icmp ne i32 %45, 0, !dbg !15086
  br i1 %46, label %47, label %48, !dbg !15087

47:                                               ; preds = %36
  br label %49, !dbg !15088

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15089, !srcloc !13233
  br label %49, !dbg !15090

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15060
  store i32 1, i32* %50, align 4, !dbg !15060
  br label %20, !dbg !15060, !llvm.loop !15091

51:                                               ; preds = %20
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15093
  ret %struct.k_thread.203* %52, !dbg !15094
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_unpend_thread(%struct.k_thread.203* noundef %0) #1 !dbg !15095 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !15096, metadata !DIExpression()), !dbg !15097
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !15098
  store %struct.k_thread.203* %12, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !14841, metadata !DIExpression()) #9, !dbg !15099
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14843, metadata !DIExpression()) #9, !dbg !15101
  %13 = bitcast %union.anon.68* %9 to i8*, !dbg !15101
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false) #9, !dbg !15101
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14846, metadata !DIExpression()) #9, !dbg !15101
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !15102
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15104
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !15105
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !15106
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15108, !srcloc !13187
  store i32 %15, i32* %2, align 4, !dbg !15108
  %16 = load i32, i32* %2, align 4, !dbg !15109
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15110
  store i32 %16, i32* %17, align 4, !dbg !15111
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15112
  %19 = load i32, i32* %18, align 4, !dbg !15112
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15101
  store i32 %19, i32* %20, align 4, !dbg !15101
  br label %21, !dbg !15101

21:                                               ; preds = %40, %1
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !15113
  %23 = load i32, i32* %22, align 4, !dbg !15113
  %24 = icmp ne i32 %23, 0, !dbg !15113
  %25 = xor i1 %24, true, !dbg !15113
  br i1 %25, label %26, label %42, !dbg !15101

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !15114
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %27) #13, !dbg !15115
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15113
  %29 = bitcast i32* %28 to [1 x i32]*, !dbg !15113
  %30 = load [1 x i32], [1 x i32]* %29, align 4, !dbg !15113
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %32 = bitcast i32* %31 to [1 x i32]*
  store [1 x i32] %30, [1 x i32]* %32, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !15116
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13218, metadata !DIExpression()) #9, !dbg !15118
  %33 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15119
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !15120
  %35 = load i32, i32* %34, align 4, !dbg !15120
  store i32 %35, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13222, metadata !DIExpression()) #9, !dbg !15121
  %36 = load i32, i32* %3, align 4, !dbg !15123
  %37 = icmp ne i32 %36, 0, !dbg !15124
  br i1 %37, label %38, label %39, !dbg !15125

38:                                               ; preds = %26
  br label %40, !dbg !15126

39:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15127, !srcloc !13233
  br label %40, !dbg !15128

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !15113
  store i32 1, i32* %41, align 4, !dbg !15113
  br label %21, !dbg !15113, !llvm.loop !15129

42:                                               ; preds = %21
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !15131
  %44 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %43) #10, !dbg !15132
  ret void, !dbg !15133
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !15134 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca %union.anon.68, align 4
  %22 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !15135, metadata !DIExpression()), !dbg !15136
  store i32 %1, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !15137, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.declare(metadata i8* %20, metadata !15139, metadata !DIExpression()), !dbg !15140
  store i8 0, i8* %20, align 1, !dbg !15140
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !15141, metadata !DIExpression()), !dbg !15143
  %23 = bitcast %union.anon.68* %21 to i8*, !dbg !15143
  call void @llvm.memset.p0i8.i32(i8* align 4 %23, i8 0, i32 4, i1 false), !dbg !15143
  call void @llvm.dbg.declare(metadata %union.anon.68* %22, metadata !15144, metadata !DIExpression()), !dbg !15143
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !13172, metadata !DIExpression()) #9, !dbg !15145
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !15147
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !13180, metadata !DIExpression()) #9, !dbg !15148
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13182, metadata !DIExpression()) #9, !dbg !15149
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15151, !srcloc !13187
  store i32 %25, i32* %10, align 4, !dbg !15151
  %26 = load i32, i32* %10, align 4, !dbg !15152
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15153
  store i32 %26, i32* %27, align 4, !dbg !15154
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15155
  %29 = load i32, i32* %28, align 4, !dbg !15155
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !15143
  store i32 %29, i32* %30, align 4, !dbg !15143
  br label %31, !dbg !15143

31:                                               ; preds = %164, %2
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15156
  %33 = load i32, i32* %32, align 4, !dbg !15156
  %34 = icmp ne i32 %33, 0, !dbg !15156
  %35 = xor i1 %34, true, !dbg !15156
  br i1 %35, label %36, label %166, !dbg !15143

36:                                               ; preds = %31
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15158
  %38 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %37) #10, !dbg !15160
  %39 = zext i1 %38 to i8, !dbg !15161
  store i8 %39, i8* %20, align 1, !dbg !15161
  %40 = load i8, i8* %20, align 1, !dbg !15162
  %41 = trunc i8 %40 to i1, !dbg !15162
  br i1 %41, label %42, label %142, !dbg !15164

42:                                               ; preds = %36
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15165
  store %struct.k_thread.203* %43, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !13572, metadata !DIExpression()) #9, !dbg !15169
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15171
  %45 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %44, i32 0, i32 0, !dbg !15172
  %46 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %45, i32 0, i32 3, !dbg !15173
  %47 = load i8, i8* %46, align 1, !dbg !15174
  %48 = zext i8 %47 to i32, !dbg !15174
  %49 = and i32 %48, -129, !dbg !15174
  %50 = trunc i32 %49 to i8, !dbg !15174
  store i8 %50, i8* %46, align 1, !dbg !15174
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15175
  %52 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %51) #13, !dbg !15176
  br i1 %52, label %53, label %58, !dbg !15177

53:                                               ; preds = %42
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15178
  store %struct.k_thread.203* %54, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !13586, metadata !DIExpression()) #9, !dbg !15179
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15181
  store %struct.k_thread.203* %55, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13591, metadata !DIExpression()), !dbg !15182
  %56 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !15184
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15185
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %56, %struct.k_thread.203* noundef %57) #13, !dbg !15186
  br label %58, !dbg !15187

58:                                               ; preds = %42, %53
  %59 = load i32, i32* %19, align 4, !dbg !15188
  %60 = trunc i32 %59 to i8, !dbg !15188
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15189
  %62 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %61, i32 0, i32 0, !dbg !15190
  %63 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %62, i32 0, i32 4, !dbg !15191
  %64 = bitcast %union.anon.2.7* %63 to %struct.device_state.72*, !dbg !15191
  %65 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %64, i32 0, i32 0, !dbg !15191
  store i8 %60, i8* %65, align 2, !dbg !15192
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15193
  store %struct.k_thread.203* %66, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !13603, metadata !DIExpression()) #9, !dbg !15194
  %67 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !15196
  %68 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %67, i32 0, i32 0, !dbg !15197
  %69 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %68, i32 0, i32 3, !dbg !15198
  %70 = load i8, i8* %69, align 1, !dbg !15199
  %71 = zext i8 %70 to i32, !dbg !15199
  %72 = or i32 %71, 128, !dbg !15199
  %73 = trunc i32 %72 to i8, !dbg !15199
  store i8 %73, i8* %69, align 1, !dbg !15199
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !15200
  %75 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %74) #13, !dbg !15201
  br i1 %75, label %76, label %141, !dbg !15202

76:                                               ; preds = %58
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !15203
  store %struct.k_thread.203* %77, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !13617, metadata !DIExpression()) #9, !dbg !15204
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15206
  store %struct.k_thread.203* %78, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13591, metadata !DIExpression()) #9, !dbg !15207
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15209
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13625, metadata !DIExpression()) #9, !dbg !15210
  store %struct.k_thread.203* %79, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13632, metadata !DIExpression()) #9, !dbg !15212
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13634, metadata !DIExpression()) #9, !dbg !15213
  %80 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !15214
  %81 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %80) #13, !dbg !15214
  %82 = icmp ne %struct._dnode.191* %81, null, !dbg !15214
  br i1 %82, label %83, label %88, !dbg !15214

83:                                               ; preds = %76
  %84 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !15214
  %85 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %84) #13, !dbg !15214
  %86 = bitcast %struct._dnode.191* %85 to i8*, !dbg !15214
  %87 = bitcast i8* %86 to %struct.k_thread.203*, !dbg !15214
  br label %89, !dbg !15214

88:                                               ; preds = %76
  br label %89, !dbg !15214

89:                                               ; preds = %88, %83
  %90 = phi %struct.k_thread.203* [ %87, %83 ], [ null, %88 ], !dbg !15214
  store %struct.k_thread.203* %90, %struct.k_thread.203** %5, align 4, !dbg !15214
  br label %91, !dbg !15214

91:                                               ; preds = %132, %89
  %92 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15215
  %93 = icmp ne %struct.k_thread.203* %92, null, !dbg !15215
  br i1 %93, label %94, label %134, !dbg !15214

94:                                               ; preds = %91
  %95 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15216
  %96 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15217
  %97 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %95, %struct.k_thread.203* noundef %96) #13, !dbg !15218
  %98 = icmp sgt i32 %97, 0, !dbg !15219
  br i1 %98, label %99, label %108, !dbg !15220

99:                                               ; preds = %94
  %100 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15221
  %101 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %100, i32 0, i32 0, !dbg !15222
  %102 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %101, i32 0, i32 0, !dbg !15223
  %103 = bitcast %union.anon.192* %102 to %struct._dnode.191*, !dbg !15223
  %104 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15224
  %105 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %104, i32 0, i32 0, !dbg !15225
  %106 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %105, i32 0, i32 0, !dbg !15226
  %107 = bitcast %union.anon.192* %106 to %struct._dnode.191*, !dbg !15226
  call void @sys_dlist_insert(%struct._dnode.191* noundef %103, %struct._dnode.191* noundef %107) #13, !dbg !15227
  br label %140, !dbg !15228

108:                                              ; preds = %94
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15215
  %110 = icmp ne %struct.k_thread.203* %109, null, !dbg !15215
  br i1 %110, label %111, label %131, !dbg !15215

111:                                              ; preds = %108
  %112 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !15215
  %113 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15215
  %114 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %113, i32 0, i32 0, !dbg !15215
  %115 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %114, i32 0, i32 0, !dbg !15215
  %116 = bitcast %union.anon.192* %115 to %struct._dnode.191*, !dbg !15215
  %117 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %112, %struct._dnode.191* noundef %116) #13, !dbg !15215
  %118 = icmp ne %struct._dnode.191* %117, null, !dbg !15215
  br i1 %118, label %119, label %128, !dbg !15215

119:                                              ; preds = %111
  %120 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !15215
  %121 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15215
  %122 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %121, i32 0, i32 0, !dbg !15215
  %123 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %122, i32 0, i32 0, !dbg !15215
  %124 = bitcast %union.anon.192* %123 to %struct._dnode.191*, !dbg !15215
  %125 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %120, %struct._dnode.191* noundef %124) #13, !dbg !15215
  %126 = bitcast %struct._dnode.191* %125 to i8*, !dbg !15215
  %127 = bitcast i8* %126 to %struct.k_thread.203*, !dbg !15215
  br label %129, !dbg !15215

128:                                              ; preds = %111
  br label %129, !dbg !15215

129:                                              ; preds = %128, %119
  %130 = phi %struct.k_thread.203* [ %127, %119 ], [ null, %128 ], !dbg !15215
  br label %132, !dbg !15215

131:                                              ; preds = %108
  br label %132, !dbg !15215

132:                                              ; preds = %131, %129
  %133 = phi %struct.k_thread.203* [ %130, %129 ], [ null, %131 ], !dbg !15215
  store %struct.k_thread.203* %133, %struct.k_thread.203** %5, align 4, !dbg !15215
  br label %91, !dbg !15215, !llvm.loop !15229

134:                                              ; preds = %91
  %135 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !15231
  %136 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15232
  %137 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %136, i32 0, i32 0, !dbg !15233
  %138 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %137, i32 0, i32 0, !dbg !15234
  %139 = bitcast %union.anon.192* %138 to %struct._dnode.191*, !dbg !15234
  call void @sys_dlist_append(%struct._dnode.191* noundef %135, %struct._dnode.191* noundef %139) #13, !dbg !15235
  br label %140, !dbg !15236

140:                                              ; preds = %99, %134
  br label %141, !dbg !15237

141:                                              ; preds = %58, %140
  call void @update_cache(i32 noundef 1) #10, !dbg !15238
  br label %150, !dbg !15239

142:                                              ; preds = %36
  %143 = load i32, i32* %19, align 4, !dbg !15240
  %144 = trunc i32 %143 to i8, !dbg !15240
  %145 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15242
  %146 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %145, i32 0, i32 0, !dbg !15243
  %147 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %146, i32 0, i32 4, !dbg !15244
  %148 = bitcast %union.anon.2.7* %147 to %struct.device_state.72*, !dbg !15244
  %149 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %148, i32 0, i32 0, !dbg !15244
  store i8 %144, i8* %149, align 2, !dbg !15245
  br label %150

150:                                              ; preds = %142, %141
  br label %151, !dbg !15246

151:                                              ; preds = %150
  %152 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !15156
  %153 = bitcast i32* %152 to [1 x i32]*, !dbg !15156
  %154 = load [1 x i32], [1 x i32]* %153, align 4, !dbg !15156
  %155 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %156 = bitcast i32* %155 to [1 x i32]*
  store [1 x i32] %154, [1 x i32]* %156, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !13212, metadata !DIExpression()) #9, !dbg !15247
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13218, metadata !DIExpression()) #9, !dbg !15249
  %157 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !15250
  %158 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !15251
  %159 = load i32, i32* %158, align 4, !dbg !15251
  store i32 %159, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13222, metadata !DIExpression()) #9, !dbg !15252
  %160 = load i32, i32* %11, align 4, !dbg !15254
  %161 = icmp ne i32 %160, 0, !dbg !15255
  br i1 %161, label %162, label %163, !dbg !15256

162:                                              ; preds = %151
  br label %164, !dbg !15257

163:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15258, !srcloc !13233
  br label %164, !dbg !15259

164:                                              ; preds = %162, %163
  %165 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15156
  store i32 1, i32* %165, align 4, !dbg !15156
  br label %31, !dbg !15156, !llvm.loop !15260

166:                                              ; preds = %31
  br label %167, !dbg !15262

167:                                              ; preds = %166
  br label %168, !dbg !15263

168:                                              ; preds = %167
  %169 = load i8, i8* %20, align 1, !dbg !15265
  %170 = trunc i8 %169 to i1, !dbg !15265
  ret i1 %170, !dbg !15266
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !15267 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !15270, metadata !DIExpression()), !dbg !15271
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15272, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.declare(metadata i8* %5, metadata !15274, metadata !DIExpression()), !dbg !15275
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15276
  %7 = load i32, i32* %4, align 4, !dbg !15277
  %8 = call zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %6, i32 noundef %7) #10, !dbg !15278
  %9 = zext i1 %8 to i8, !dbg !15275
  store i8 %9, i8* %5, align 1, !dbg !15275
  call void @flag_ipi() #10, !dbg !15279
  %10 = load i8, i8* %5, align 1, !dbg !15280
  %11 = trunc i8 %10 to i1, !dbg !15280
  br i1 %11, label %12, label %22, !dbg !15282

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15283
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !15284
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 4, !dbg !15285
  %16 = bitcast %union.anon.2.7* %15 to %struct.device_state.72*, !dbg !15285
  %17 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %16, i32 0, i32 1, !dbg !15285
  %18 = load i8, i8* %17, align 1, !dbg !15285
  %19 = zext i8 %18 to i32, !dbg !15283
  %20 = icmp eq i32 %19, 0, !dbg !15286
  br i1 %20, label %21, label %22, !dbg !15287

21:                                               ; preds = %12
  call void @z_reschedule_unlocked() #10, !dbg !15288
  br label %22, !dbg !15290

22:                                               ; preds = %21, %12, %2
  ret void, !dbg !15291
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_lock() #1 !dbg !15292 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !15293, metadata !DIExpression()), !dbg !15295
  %9 = bitcast %union.anon.68* %7 to i8*, !dbg !15295
  call void @llvm.memset.p0i8.i32(i8* align 4 %9, i8 0, i32 4, i1 false), !dbg !15295
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !15296, metadata !DIExpression()), !dbg !15295
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13172, metadata !DIExpression()) #9, !dbg !15297
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !15299
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13180, metadata !DIExpression()) #9, !dbg !15300
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13182, metadata !DIExpression()) #9, !dbg !15301
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15303, !srcloc !13187
  store i32 %11, i32* %1, align 4, !dbg !15303
  %12 = load i32, i32* %1, align 4, !dbg !15304
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !15305
  store i32 %12, i32* %13, align 4, !dbg !15306
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !15307
  %15 = load i32, i32* %14, align 4, !dbg !15307
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15295
  store i32 %15, i32* %16, align 4, !dbg !15295
  br label %17, !dbg !15295

17:                                               ; preds = %38, %0
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15308
  %19 = load i32, i32* %18, align 4, !dbg !15308
  %20 = icmp ne i32 %19, 0, !dbg !15308
  %21 = xor i1 %20, true, !dbg !15308
  br i1 %21, label %22, label %40, !dbg !15295

22:                                               ; preds = %17
  br label %23, !dbg !15310

23:                                               ; preds = %22
  br label %24, !dbg !15312

24:                                               ; preds = %23
  call void @z_sched_lock() #10, !dbg !15314
  br label %25, !dbg !15315

25:                                               ; preds = %24
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15308
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !15308
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !15308
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13212, metadata !DIExpression()) #9, !dbg !15316
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !13218, metadata !DIExpression()) #9, !dbg !15318
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !15319
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !15320
  %33 = load i32, i32* %32, align 4, !dbg !15320
  store i32 %33, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13222, metadata !DIExpression()) #9, !dbg !15321
  %34 = load i32, i32* %2, align 4, !dbg !15323
  %35 = icmp ne i32 %34, 0, !dbg !15324
  br i1 %35, label %36, label %37, !dbg !15325

36:                                               ; preds = %25
  br label %38, !dbg !15326

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15327, !srcloc !13233
  br label %38, !dbg !15328

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15308
  store i32 1, i32* %39, align 4, !dbg !15308
  br label %17, !dbg !15308, !llvm.loop !15329

40:                                               ; preds = %17
  ret void, !dbg !15331
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sched_lock() #1 !dbg !15332 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15333
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !15334
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 4, !dbg !15335
  %4 = bitcast %union.anon.2.7* %3 to %struct.device_state.72*, !dbg !15335
  %5 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %4, i32 0, i32 1, !dbg !15335
  %6 = load i8, i8* %5, align 1, !dbg !15336
  %7 = add i8 %6, -1, !dbg !15336
  store i8 %7, i8* %5, align 1, !dbg !15336
  br label %8, !dbg !15337

8:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15338, !srcloc !15340
  br label %9, !dbg !15338

9:                                                ; preds = %8
  ret void, !dbg !15341
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_unlock() #1 !dbg !15342 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !15343, metadata !DIExpression()), !dbg !15345
  %13 = bitcast %union.anon.68* %7 to i8*, !dbg !15345
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !15345
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !15346, metadata !DIExpression()), !dbg !15345
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13172, metadata !DIExpression()) #9, !dbg !15347
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !15349
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13180, metadata !DIExpression()) #9, !dbg !15350
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13182, metadata !DIExpression()) #9, !dbg !15351
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15353, !srcloc !13187
  store i32 %15, i32* %1, align 4, !dbg !15353
  %16 = load i32, i32* %1, align 4, !dbg !15354
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !15355
  store i32 %16, i32* %17, align 4, !dbg !15356
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !15357
  %19 = load i32, i32* %18, align 4, !dbg !15357
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15345
  store i32 %19, i32* %20, align 4, !dbg !15345
  br label %21, !dbg !15345

21:                                               ; preds = %47, %0
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15358
  %23 = load i32, i32* %22, align 4, !dbg !15358
  %24 = icmp ne i32 %23, 0, !dbg !15358
  %25 = xor i1 %24, true, !dbg !15358
  br i1 %25, label %26, label %49, !dbg !15345

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15360
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !15362
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 4, !dbg !15363
  %30 = bitcast %union.anon.2.7* %29 to %struct.device_state.72*, !dbg !15363
  %31 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %30, i32 0, i32 1, !dbg !15363
  %32 = load i8, i8* %31, align 1, !dbg !15364
  %33 = add i8 %32, 1, !dbg !15364
  store i8 %33, i8* %31, align 1, !dbg !15364
  call void @update_cache(i32 noundef 0) #10, !dbg !15365
  br label %34, !dbg !15366

34:                                               ; preds = %26
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15358
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !15358
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !15358
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13212, metadata !DIExpression()) #9, !dbg !15367
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !13218, metadata !DIExpression()) #9, !dbg !15369
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !15370
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !15371
  %42 = load i32, i32* %41, align 4, !dbg !15371
  store i32 %42, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13222, metadata !DIExpression()) #9, !dbg !15372
  %43 = load i32, i32* %2, align 4, !dbg !15374
  %44 = icmp ne i32 %43, 0, !dbg !15375
  br i1 %44, label %45, label %46, !dbg !15376

45:                                               ; preds = %34
  br label %47, !dbg !15377

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15378, !srcloc !13233
  br label %47, !dbg !15379

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15358
  store i32 1, i32* %48, align 4, !dbg !15358
  br label %21, !dbg !15358, !llvm.loop !15380

49:                                               ; preds = %21
  br label %50, !dbg !15382

50:                                               ; preds = %49
  br label %51, !dbg !15383

51:                                               ; preds = %50
  br label %52, !dbg !15387

52:                                               ; preds = %51
  br label %53, !dbg !15388

53:                                               ; preds = %52
  call void @z_reschedule_unlocked() #10, !dbg !15390
  ret void, !dbg !15391
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_swap_next_thread() #1 !dbg !15392 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15393
  ret %struct.k_thread.203* %1, !dbg !15394
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* noundef %0, %struct.rbnode* noundef %1) #1 !dbg !15395 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.rbnode*, align 4
  %5 = alloca %struct.rbnode*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  store %struct.rbnode* %0, %struct.rbnode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !15398, metadata !DIExpression()), !dbg !15399
  store %struct.rbnode* %1, %struct.rbnode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %5, metadata !15400, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !15402, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !15404, metadata !DIExpression()), !dbg !15405
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15406, metadata !DIExpression()), !dbg !15407
  %9 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !15408
  %10 = bitcast %struct.rbnode* %9 to i8*, !dbg !15408
  %11 = getelementptr inbounds i8, i8* %10, i32 0, !dbg !15408
  %12 = bitcast i8* %11 to %struct.k_thread.203*, !dbg !15408
  store %struct.k_thread.203* %12, %struct.k_thread.203** %6, align 4, !dbg !15409
  %13 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15410
  %14 = bitcast %struct.rbnode* %13 to i8*, !dbg !15410
  %15 = getelementptr inbounds i8, i8* %14, i32 0, !dbg !15410
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !15410
  store %struct.k_thread.203* %16, %struct.k_thread.203** %7, align 4, !dbg !15411
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !15412
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15413
  %19 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %17, %struct.k_thread.203* noundef %18) #10, !dbg !15414
  store i32 %19, i32* %8, align 4, !dbg !15415
  %20 = load i32, i32* %8, align 4, !dbg !15416
  %21 = icmp sgt i32 %20, 0, !dbg !15418
  br i1 %21, label %22, label %23, !dbg !15419

22:                                               ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !15420
  br label %40, !dbg !15420

23:                                               ; preds = %2
  %24 = load i32, i32* %8, align 4, !dbg !15422
  %25 = icmp slt i32 %24, 0, !dbg !15424
  br i1 %25, label %26, label %27, !dbg !15425

26:                                               ; preds = %23
  store i1 false, i1* %3, align 1, !dbg !15426
  br label %40, !dbg !15426

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !15428
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !15430
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 5, !dbg !15431
  %31 = load i32, i32* %30, align 8, !dbg !15431
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15432
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !15433
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 5, !dbg !15434
  %35 = load i32, i32* %34, align 8, !dbg !15434
  %36 = icmp ult i32 %31, %35, !dbg !15435
  %37 = zext i1 %36 to i64, !dbg !15428
  %38 = select i1 %36, i32 1, i32 0, !dbg !15428
  %39 = icmp ne i32 %38, 0, !dbg !15428
  store i1 %39, i1* %3, align 1, !dbg !15436
  br label %40, !dbg !15436

40:                                               ; preds = %27, %26, %22
  %41 = load i1, i1* %3, align 1, !dbg !15437
  ret i1 %41, !dbg !15437
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !15438 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct._rb_foreach, align 4
  %7 = alloca %struct.rbnode*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !15454, metadata !DIExpression()), !dbg !15455
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15456, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15458, metadata !DIExpression()), !dbg !15459
  %9 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15460
  %10 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %9, i32 0, i32 1, !dbg !15461
  %11 = load i32, i32* %10, align 4, !dbg !15462
  %12 = add nsw i32 %11, 1, !dbg !15462
  store i32 %12, i32* %10, align 4, !dbg !15462
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15463
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !15464
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 5, !dbg !15465
  store i32 %11, i32* %15, align 8, !dbg !15466
  %16 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15467
  %17 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %16, i32 0, i32 1, !dbg !15469
  %18 = load i32, i32* %17, align 4, !dbg !15469
  %19 = icmp ne i32 %18, 0, !dbg !15467
  br i1 %19, label %62, label %20, !dbg !15470

20:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %6, metadata !15471, metadata !DIExpression()), !dbg !15479
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 0, !dbg !15479
  %22 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15479
  %23 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %22, i32 0, i32 0, !dbg !15479
  %24 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %23, i32 0, i32 2, !dbg !15479
  %25 = load i32, i32* %24, align 4, !dbg !15479
  %26 = mul i32 %25, 4, !dbg !15479
  %27 = alloca i8, i32 %26, align 8, !dbg !15479
  %28 = bitcast i8* %27 to %struct.rbnode**, !dbg !15479
  store %struct.rbnode** %28, %struct.rbnode*** %21, align 4, !dbg !15479
  %29 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 1, !dbg !15479
  %30 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15479
  %31 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %30, i32 0, i32 0, !dbg !15479
  %32 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %31, i32 0, i32 2, !dbg !15479
  %33 = load i32, i32* %32, align 4, !dbg !15479
  %34 = mul i32 %33, 1, !dbg !15479
  %35 = alloca i8, i32 %34, align 8, !dbg !15479
  store i8* %35, i8** %29, align 4, !dbg !15479
  %36 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 2, !dbg !15479
  store i32 -1, i32* %36, align 4, !dbg !15479
  br label %37, !dbg !15479

37:                                               ; preds = %53, %20
  call void @llvm.dbg.declare(metadata %struct.rbnode** %7, metadata !15480, metadata !DIExpression()), !dbg !15483
  %38 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15483
  %39 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %38, i32 0, i32 0, !dbg !15483
  %40 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef %39, %struct._rb_foreach* noundef %6) #10, !dbg !15483
  store %struct.rbnode* %40, %struct.rbnode** %7, align 4, !dbg !15483
  %41 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !15483
  %42 = icmp ne %struct.rbnode* %41, null, !dbg !15483
  br i1 %42, label %43, label %48, !dbg !15483

43:                                               ; preds = %37
  %44 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !15483
  %45 = bitcast %struct.rbnode* %44 to i8*, !dbg !15483
  %46 = getelementptr inbounds i8, i8* %45, i32 0, !dbg !15483
  %47 = bitcast i8* %46 to %struct.k_thread.203*, !dbg !15483
  br label %49, !dbg !15483

48:                                               ; preds = %37
  br label %49, !dbg !15483

49:                                               ; preds = %48, %43
  %50 = phi %struct.k_thread.203* [ %47, %43 ], [ null, %48 ], !dbg !15483
  store %struct.k_thread.203* %50, %struct.k_thread.203** %5, align 4, !dbg !15483
  store %struct.k_thread.203* %50, %struct.k_thread.203** %8, align 4, !dbg !15483
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !15483
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !15484
  br i1 %52, label %53, label %61, !dbg !15479

53:                                               ; preds = %49
  %54 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15485
  %55 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %54, i32 0, i32 1, !dbg !15487
  %56 = load i32, i32* %55, align 4, !dbg !15488
  %57 = add nsw i32 %56, 1, !dbg !15488
  store i32 %57, i32* %55, align 4, !dbg !15488
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15489
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 0, !dbg !15490
  %60 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %59, i32 0, i32 5, !dbg !15491
  store i32 %56, i32* %60, align 8, !dbg !15492
  br label %37, !dbg !15484, !llvm.loop !15493

61:                                               ; preds = %49
  br label %62, !dbg !15495

62:                                               ; preds = %61, %2
  %63 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15496
  %64 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %63, i32 0, i32 0, !dbg !15497
  %65 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15498
  %66 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %65, i32 0, i32 0, !dbg !15499
  %67 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %66, i32 0, i32 0, !dbg !15500
  %68 = bitcast %union.anon.192* %67 to %struct.rbnode*, !dbg !15500
  call void @rb_insert(%struct.rbtree* noundef %64, %struct.rbnode* noundef %68) #10, !dbg !15501
  ret void, !dbg !15502
}

declare dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) #0

declare dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !15503 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !15504, metadata !DIExpression()), !dbg !15505
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15506, metadata !DIExpression()), !dbg !15507
  %5 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15508
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !15509
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15510
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !15511
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 0, !dbg !15512
  %10 = bitcast %union.anon.192* %9 to %struct.rbnode*, !dbg !15512
  call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %10) #10, !dbg !15513
  %11 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15514
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %11, i32 0, i32 0, !dbg !15516
  %13 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %12, i32 0, i32 0, !dbg !15517
  %14 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !15517
  %15 = icmp ne %struct.rbnode* %14, null, !dbg !15514
  br i1 %15, label %19, label %16, !dbg !15518

16:                                               ; preds = %2
  %17 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15519
  %18 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %17, i32 0, i32 1, !dbg !15521
  store i32 0, i32* %18, align 4, !dbg !15522
  br label %19, !dbg !15523

19:                                               ; preds = %16, %2
  ret void, !dbg !15524
}

declare dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_rb_best(%struct._priq_rb* noundef %0) #1 !dbg !15525 {
  %2 = alloca %struct._priq_rb*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.rbnode*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %2, metadata !15528, metadata !DIExpression()), !dbg !15529
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !15530, metadata !DIExpression()), !dbg !15531
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !15531
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !15532, metadata !DIExpression()), !dbg !15533
  %5 = load %struct._priq_rb*, %struct._priq_rb** %2, align 4, !dbg !15534
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !15535
  %7 = call %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %6) #10, !dbg !15536
  store %struct.rbnode* %7, %struct.rbnode** %4, align 4, !dbg !15533
  %8 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !15537
  %9 = icmp ne %struct.rbnode* %8, null, !dbg !15539
  br i1 %9, label %10, label %15, !dbg !15540

10:                                               ; preds = %1
  %11 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !15541
  %12 = bitcast %struct.rbnode* %11 to i8*, !dbg !15541
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !15541
  %14 = bitcast i8* %13 to %struct.k_thread.203*, !dbg !15541
  store %struct.k_thread.203* %14, %struct.k_thread.203** %3, align 4, !dbg !15543
  br label %15, !dbg !15544

15:                                               ; preds = %10, %1
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15545
  ret %struct.k_thread.203* %16, !dbg !15546
}

; Function Attrs: noinline nounwind optnone
define internal %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) #1 !dbg !15547 {
  %2 = alloca %struct.rbtree*, align 4
  store %struct.rbtree* %0, %struct.rbtree** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.rbtree** %2, metadata !15551, metadata !DIExpression()), !dbg !15552
  %3 = load %struct.rbtree*, %struct.rbtree** %2, align 4, !dbg !15553
  %4 = call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %3, i8 noundef zeroext 0) #10, !dbg !15554
  ret %struct.rbnode* %4, !dbg !15555
}

declare dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_mq_best(%struct._priq_mq* noundef %0) #1 !dbg !15556 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct._priq_mq*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  %6 = alloca %struct._dnode.191*, align 4
  store %struct._priq_mq* %0, %struct._priq_mq** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_mq** %3, metadata !15565, metadata !DIExpression()), !dbg !15566
  %7 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15567
  %8 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %7, i32 0, i32 1, !dbg !15569
  %9 = load i32, i32* %8, align 4, !dbg !15569
  %10 = icmp ne i32 %9, 0, !dbg !15567
  br i1 %10, label %12, label %11, !dbg !15570

11:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** %2, align 4, !dbg !15571
  br label %31, !dbg !15571

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15573, metadata !DIExpression()), !dbg !15574
  store %struct.k_thread.203* null, %struct.k_thread.203** %4, align 4, !dbg !15574
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !15575, metadata !DIExpression()), !dbg !15576
  %13 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15577
  %14 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %13, i32 0, i32 0, !dbg !15578
  %15 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15579
  %16 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %15, i32 0, i32 1, !dbg !15580
  %17 = load i32, i32* %16, align 4, !dbg !15580
  %18 = call i32 @llvm.cttz.i32(i32 %17, i1 false), !dbg !15581
  %19 = getelementptr inbounds [32 x %struct._dnode.191], [32 x %struct._dnode.191]* %14, i32 0, i32 %18, !dbg !15577
  store %struct._dnode.191* %19, %struct._dnode.191** %5, align 4, !dbg !15576
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %6, metadata !15582, metadata !DIExpression()), !dbg !15583
  %20 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !15584
  %21 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %20) #10, !dbg !15585
  store %struct._dnode.191* %21, %struct._dnode.191** %6, align 4, !dbg !15583
  %22 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !15586
  %23 = icmp ne %struct._dnode.191* %22, null, !dbg !15588
  br i1 %23, label %24, label %29, !dbg !15589

24:                                               ; preds = %12
  %25 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !15590
  %26 = bitcast %struct._dnode.191* %25 to i8*, !dbg !15590
  %27 = getelementptr inbounds i8, i8* %26, i32 0, !dbg !15590
  %28 = bitcast i8* %27 to %struct.k_thread.203*, !dbg !15590
  store %struct.k_thread.203* %28, %struct.k_thread.203** %4, align 4, !dbg !15592
  br label %29, !dbg !15593

29:                                               ; preds = %24, %12
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15594
  store %struct.k_thread.203* %30, %struct.k_thread.203** %2, align 4, !dbg !15595
  br label %31, !dbg !15595

31:                                               ; preds = %29, %11
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15596
  ret %struct.k_thread.203* %32, !dbg !15596
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_unpend_all(%union.anon.192* noundef %0) #1 !dbg !15597 {
  %2 = alloca %union.anon.192*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !15600, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15602, metadata !DIExpression()), !dbg !15603
  store i32 0, i32* %3, align 4, !dbg !15603
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15604, metadata !DIExpression()), !dbg !15605
  br label %5, !dbg !15606

5:                                                ; preds = %9, %1
  %6 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !15607
  %7 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %6) #10, !dbg !15608
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !15609
  %8 = icmp ne %struct.k_thread.203* %7, null, !dbg !15610
  br i1 %8, label %9, label %12, !dbg !15606

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15611
  call void @z_unpend_thread(%struct.k_thread.203* noundef %10) #10, !dbg !15613
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15614
  call void @z_ready_thread(%struct.k_thread.203* noundef %11) #10, !dbg !15615
  store i32 1, i32* %3, align 4, !dbg !15616
  br label %5, !dbg !15606, !llvm.loop !15617

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4, !dbg !15619
  ret i32 %13, !dbg !15620
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %0) #1 !dbg !15621 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !15622, metadata !DIExpression()), !dbg !15623
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !15624
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !15625
  %5 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %4) #10, !dbg !15626
  %6 = bitcast %struct._dnode.191* %5 to %struct.k_thread.203*, !dbg !15627
  ret %struct.k_thread.203* %6, !dbg !15628
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) #1 !dbg !15629 {
  %2 = alloca %struct._ready_q*, align 4
  store %struct._ready_q* %0, %struct._ready_q** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._ready_q** %2, metadata !15637, metadata !DIExpression()), !dbg !15638
  %3 = load %struct._ready_q*, %struct._ready_q** %2, align 4, !dbg !15639
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %3, i32 0, i32 1, !dbg !15640
  call void @sys_dlist_init.78(%struct._dnode.191* noundef %4) #10, !dbg !15641
  ret void, !dbg !15642
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.78(%struct._dnode.191* noundef %0) #1 !dbg !15643 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !15646, metadata !DIExpression()), !dbg !15647
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !15648
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !15649
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !15650
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !15650
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !15651
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !15652
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !15653
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !15654
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !15654
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !15655
  ret void, !dbg !15656
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_init() #1 !dbg !15657 {
  call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #10, !dbg !15658
  call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #10, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.203* noundef %0) #1 !dbg !15661 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15665, metadata !DIExpression()), !dbg !15666
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15667
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !15668
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !15669
  %6 = bitcast %union.anon.2.7* %5 to %struct.device_state.72*, !dbg !15669
  %7 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %6, i32 0, i32 0, !dbg !15669
  %8 = load i8, i8* %7, align 2, !dbg !15669
  %9 = sext i8 %8 to i32, !dbg !15667
  ret i32 %9, !dbg !15670
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !15671 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15676, metadata !DIExpression()), !dbg !15677
  br label %6, !dbg !15678

6:                                                ; preds = %2
  br label %7, !dbg !15679

7:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15681, metadata !DIExpression()), !dbg !15682
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15683
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !15682
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15684
  %10 = load i32, i32* %4, align 4, !dbg !15685
  call void @z_thread_priority_set(%struct.k_thread.203* noundef %9, i32 noundef %10) #10, !dbg !15686
  ret void, !dbg !15687
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_can_yield() #1 !dbg !15688 {
  %1 = call zeroext i1 @k_is_pre_kernel() #10, !dbg !15689
  br i1 %1, label %7, label %2, !dbg !15690

2:                                                ; preds = %0
  %3 = call zeroext i1 @k_is_in_isr() #10, !dbg !15691
  br i1 %3, label %7, label %4, !dbg !15692

4:                                                ; preds = %2
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15693
  %6 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %5) #10, !dbg !15694
  br label %7, !dbg !15692

7:                                                ; preds = %4, %2, %0
  %8 = phi i1 [ true, %2 ], [ true, %0 ], [ %6, %4 ]
  %9 = xor i1 %8, true, !dbg !15695
  ret i1 %9, !dbg !15696
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel() #1 !dbg !15697 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15698
  %2 = trunc i8 %1 to i1, !dbg !15698
  %3 = xor i1 %2, true, !dbg !15699
  ret i1 %3, !dbg !15700
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_yield() #1 !dbg !15701 {
  %1 = alloca %struct._dnode.191*, align 4
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  br label %17, !dbg !15702

17:                                               ; preds = %0
  br label %18, !dbg !15703

18:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !15705, metadata !DIExpression()), !dbg !15706
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !13172, metadata !DIExpression()) #9, !dbg !15707
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !15709
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13180, metadata !DIExpression()) #9, !dbg !15710
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13182, metadata !DIExpression()) #9, !dbg !15711
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15713, !srcloc !13187
  store i32 %20, i32* %8, align 4, !dbg !15713
  %21 = load i32, i32* %8, align 4, !dbg !15714
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !15715
  store i32 %21, i32* %22, align 4, !dbg !15716
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !15717
  %24 = load i32, i32* %23, align 4, !dbg !15717
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15718
  store i32 %24, i32* %25, align 4, !dbg !15718
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15719
  store %struct.k_thread.203* %26, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !13572, metadata !DIExpression()) #9, !dbg !15722
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15724
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !15725
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 3, !dbg !15726
  %30 = load i8, i8* %29, align 1, !dbg !15727
  %31 = zext i8 %30 to i32, !dbg !15727
  %32 = and i32 %31, -129, !dbg !15727
  %33 = trunc i32 %32 to i8, !dbg !15727
  store i8 %33, i8* %29, align 1, !dbg !15727
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15728
  %35 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %34) #13, !dbg !15729
  br i1 %35, label %36, label %41, !dbg !15730

36:                                               ; preds = %18
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !15731
  store %struct.k_thread.203* %37, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !13586, metadata !DIExpression()) #9, !dbg !15732
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15734
  store %struct.k_thread.203* %38, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13591, metadata !DIExpression()), !dbg !15735
  %39 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !15737
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15738
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %39, %struct.k_thread.203* noundef %40) #13, !dbg !15739
  br label %41, !dbg !15740

41:                                               ; preds = %18, %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15741
  store %struct.k_thread.203* %42, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !13603, metadata !DIExpression()) #9, !dbg !15742
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15744
  %44 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %43, i32 0, i32 0, !dbg !15745
  %45 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %44, i32 0, i32 3, !dbg !15746
  %46 = load i8, i8* %45, align 1, !dbg !15747
  %47 = zext i8 %46 to i32, !dbg !15747
  %48 = or i32 %47, 128, !dbg !15747
  %49 = trunc i32 %48 to i8, !dbg !15747
  store i8 %49, i8* %45, align 1, !dbg !15747
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15748
  %51 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %50) #13, !dbg !15749
  br i1 %51, label %52, label %117, !dbg !15750

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !15751
  store %struct.k_thread.203* %53, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13617, metadata !DIExpression()) #9, !dbg !15752
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15754
  store %struct.k_thread.203* %54, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13591, metadata !DIExpression()) #9, !dbg !15755
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15757
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %1, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !13625, metadata !DIExpression()) #9, !dbg !15758
  store %struct.k_thread.203* %55, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13632, metadata !DIExpression()) #9, !dbg !15760
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13634, metadata !DIExpression()) #9, !dbg !15761
  %56 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !15762
  %57 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %56) #13, !dbg !15762
  %58 = icmp ne %struct._dnode.191* %57, null, !dbg !15762
  br i1 %58, label %59, label %64, !dbg !15762

59:                                               ; preds = %52
  %60 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !15762
  %61 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %60) #13, !dbg !15762
  %62 = bitcast %struct._dnode.191* %61 to i8*, !dbg !15762
  %63 = bitcast i8* %62 to %struct.k_thread.203*, !dbg !15762
  br label %65, !dbg !15762

64:                                               ; preds = %52
  br label %65, !dbg !15762

65:                                               ; preds = %64, %59
  %66 = phi %struct.k_thread.203* [ %63, %59 ], [ null, %64 ], !dbg !15762
  store %struct.k_thread.203* %66, %struct.k_thread.203** %3, align 4, !dbg !15762
  br label %67, !dbg !15762

67:                                               ; preds = %108, %65
  %68 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15763
  %69 = icmp ne %struct.k_thread.203* %68, null, !dbg !15763
  br i1 %69, label %70, label %110, !dbg !15762

70:                                               ; preds = %67
  %71 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15764
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15765
  %73 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %71, %struct.k_thread.203* noundef %72) #13, !dbg !15766
  %74 = icmp sgt i32 %73, 0, !dbg !15767
  br i1 %74, label %75, label %84, !dbg !15768

75:                                               ; preds = %70
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15769
  %77 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %76, i32 0, i32 0, !dbg !15770
  %78 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %77, i32 0, i32 0, !dbg !15771
  %79 = bitcast %union.anon.192* %78 to %struct._dnode.191*, !dbg !15771
  %80 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15772
  %81 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %80, i32 0, i32 0, !dbg !15773
  %82 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %81, i32 0, i32 0, !dbg !15774
  %83 = bitcast %union.anon.192* %82 to %struct._dnode.191*, !dbg !15774
  call void @sys_dlist_insert(%struct._dnode.191* noundef %79, %struct._dnode.191* noundef %83) #13, !dbg !15775
  br label %116, !dbg !15776

84:                                               ; preds = %70
  %85 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15763
  %86 = icmp ne %struct.k_thread.203* %85, null, !dbg !15763
  br i1 %86, label %87, label %107, !dbg !15763

87:                                               ; preds = %84
  %88 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !15763
  %89 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15763
  %90 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %89, i32 0, i32 0, !dbg !15763
  %91 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %90, i32 0, i32 0, !dbg !15763
  %92 = bitcast %union.anon.192* %91 to %struct._dnode.191*, !dbg !15763
  %93 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %88, %struct._dnode.191* noundef %92) #13, !dbg !15763
  %94 = icmp ne %struct._dnode.191* %93, null, !dbg !15763
  br i1 %94, label %95, label %104, !dbg !15763

95:                                               ; preds = %87
  %96 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !15763
  %97 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15763
  %98 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %97, i32 0, i32 0, !dbg !15763
  %99 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %98, i32 0, i32 0, !dbg !15763
  %100 = bitcast %union.anon.192* %99 to %struct._dnode.191*, !dbg !15763
  %101 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %96, %struct._dnode.191* noundef %100) #13, !dbg !15763
  %102 = bitcast %struct._dnode.191* %101 to i8*, !dbg !15763
  %103 = bitcast i8* %102 to %struct.k_thread.203*, !dbg !15763
  br label %105, !dbg !15763

104:                                              ; preds = %87
  br label %105, !dbg !15763

105:                                              ; preds = %104, %95
  %106 = phi %struct.k_thread.203* [ %103, %95 ], [ null, %104 ], !dbg !15763
  br label %108, !dbg !15763

107:                                              ; preds = %84
  br label %108, !dbg !15763

108:                                              ; preds = %107, %105
  %109 = phi %struct.k_thread.203* [ %106, %105 ], [ null, %107 ], !dbg !15763
  store %struct.k_thread.203* %109, %struct.k_thread.203** %3, align 4, !dbg !15763
  br label %67, !dbg !15763, !llvm.loop !15777

110:                                              ; preds = %67
  %111 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !15779
  %112 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15780
  %113 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %112, i32 0, i32 0, !dbg !15781
  %114 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %113, i32 0, i32 0, !dbg !15782
  %115 = bitcast %union.anon.192* %114 to %struct._dnode.191*, !dbg !15782
  call void @sys_dlist_append(%struct._dnode.191* noundef %111, %struct._dnode.191* noundef %115) #13, !dbg !15783
  br label %116, !dbg !15784

116:                                              ; preds = %75, %110
  br label %117, !dbg !15785

117:                                              ; preds = %41, %116
  call void @update_cache(i32 noundef 1) #10, !dbg !15786
  %118 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15787
  %119 = bitcast i32* %118 to [1 x i32]*, !dbg !15787
  %120 = load [1 x i32], [1 x i32]* %119, align 4, !dbg !15787
  %121 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %122 = bitcast i32* %121 to [1 x i32]*
  store [1 x i32] %120, [1 x i32]* %122, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !14258, metadata !DIExpression()) #9, !dbg !15788
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14264, metadata !DIExpression()) #9, !dbg !15790
  %123 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !15791
  store %struct.k_spinlock.13* %123, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !14267, metadata !DIExpression()) #9, !dbg !15792
  %124 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !15794
  %125 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15795
  %126 = load i32, i32* %125, align 4, !dbg !15795
  %127 = call i32 @z_swap_irqlock(i32 noundef %126) #13, !dbg !15796
  ret void, !dbg !15797
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) #1 !dbg !15798 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !15801, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.declare(metadata i64* %4, metadata !15803, metadata !DIExpression()), !dbg !15804
  br label %9, !dbg !15805

9:                                                ; preds = %1
  br label %10, !dbg !15806

10:                                               ; preds = %9
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !15808
  %12 = load i64, i64* %11, align 8, !dbg !15808
  %13 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !15808
  store i64 -1, i64* %13, align 8, !dbg !15808
  %14 = icmp eq i64 %12, -1, !dbg !15808
  br i1 %14, label %15, label %19, !dbg !15810

15:                                               ; preds = %10
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15811
  call void @k_thread_suspend(%struct.k_thread.203* noundef %16) #10, !dbg !15813
  br label %17, !dbg !15814

17:                                               ; preds = %15
  br label %18, !dbg !15815

18:                                               ; preds = %17
  store i32 -1, i32* %2, align 4, !dbg !15817
  br label %31, !dbg !15817

19:                                               ; preds = %10
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !15818
  %21 = load i64, i64* %20, align 8, !dbg !15818
  store i64 %21, i64* %4, align 8, !dbg !15819
  %22 = load i64, i64* %4, align 8, !dbg !15820
  %23 = call i32 @z_tick_sleep(i64 noundef %22) #10, !dbg !15821
  %24 = sext i32 %23 to i64, !dbg !15821
  store i64 %24, i64* %4, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15823, metadata !DIExpression()), !dbg !15824
  %25 = load i64, i64* %4, align 8, !dbg !15825
  %26 = call i64 @k_ticks_to_ms_floor64(i64 noundef %25) #10, !dbg !15826
  %27 = trunc i64 %26 to i32, !dbg !15826
  store i32 %27, i32* %6, align 4, !dbg !15824
  br label %28, !dbg !15827

28:                                               ; preds = %19
  br label %29, !dbg !15828

29:                                               ; preds = %28
  %30 = load i32, i32* %6, align 4, !dbg !15830
  store i32 %30, i32* %2, align 4, !dbg !15831
  br label %31, !dbg !15831

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %2, align 4, !dbg !15832
  ret i32 %32, !dbg !15832
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !15833 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15836, metadata !DIExpression()), !dbg !15837
  br label %3, !dbg !15838

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15839, !srcloc !15841
  br label %4, !dbg !15839

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15842
  call void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %5) #10, !dbg !15843
  ret void, !dbg !15844
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_tick_sleep(i64 noundef %0) #1 !dbg !15845 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %union.argument_value, align 8
  %16 = alloca %union.anon.68, align 4
  store i64 %0, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata i32* %10, metadata !15850, metadata !DIExpression()), !dbg !15851
  br label %17, !dbg !15852

17:                                               ; preds = %1
  br label %18, !dbg !15853

18:                                               ; preds = %17
  %19 = load i64, i64* %9, align 8, !dbg !15857
  %20 = icmp eq i64 %19, 0, !dbg !15859
  br i1 %20, label %21, label %22, !dbg !15860

21:                                               ; preds = %18
  call void @k_yield() #10, !dbg !15861
  store i32 0, i32* %8, align 4, !dbg !15863
  br label %74, !dbg !15863

22:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %union.argument_value* %15, metadata !15864, metadata !DIExpression()), !dbg !15865
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !15866
  %24 = load i64, i64* %9, align 8, !dbg !15866
  store i64 %24, i64* %23, align 8, !dbg !15866
  %25 = load i64, i64* %9, align 8, !dbg !15867
  %26 = sub nsw i64 -2, %25, !dbg !15867
  %27 = icmp sle i64 %26, 0, !dbg !15869
  br i1 %27, label %28, label %34, !dbg !15870

28:                                               ; preds = %22
  %29 = load i64, i64* %9, align 8, !dbg !15871
  %30 = call i32 @sys_clock_tick_get_32() #10, !dbg !15873
  %31 = zext i32 %30 to i64, !dbg !15873
  %32 = add nsw i64 %29, %31, !dbg !15874
  %33 = trunc i64 %32 to i32, !dbg !15871
  store i32 %33, i32* %10, align 4, !dbg !15875
  br label %38, !dbg !15876

34:                                               ; preds = %22
  %35 = load i64, i64* %9, align 8, !dbg !15877
  %36 = sub nsw i64 -2, %35, !dbg !15877
  %37 = trunc i64 %36 to i32, !dbg !15877
  store i32 %37, i32* %10, align 4, !dbg !15879
  br label %38

38:                                               ; preds = %34, %28
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !15880, metadata !DIExpression()), !dbg !15881
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13172, metadata !DIExpression()) #9, !dbg !15882
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15884
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13180, metadata !DIExpression()) #9, !dbg !15885
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13182, metadata !DIExpression()) #9, !dbg !15886
  %40 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15888, !srcloc !13187
  store i32 %40, i32* %2, align 4, !dbg !15888
  %41 = load i32, i32* %2, align 4, !dbg !15889
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15890
  store i32 %41, i32* %42, align 4, !dbg !15891
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15892
  %44 = load i32, i32* %43, align 4, !dbg !15892
  %45 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15893
  store i32 %44, i32* %45, align 4, !dbg !15893
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15894
  store %struct.k_thread.203* %46, %struct.k_thread.203** @pending_current, align 4, !dbg !15895
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15896
  call void @unready_thread(%struct.k_thread.203* noundef %47) #10, !dbg !15897
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15898
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !15899
  %50 = bitcast i64* %49 to [1 x i64]*, !dbg !15899
  %51 = load [1 x i64], [1 x i64]* %50, align 8, !dbg !15899
  call void @z_add_thread_timeout.71(%struct.k_thread.203* noundef %48, [1 x i64] %51) #10, !dbg !15899
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15900
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !15901
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15902
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !15902
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !15902
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !14258, metadata !DIExpression()) #9, !dbg !15903
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !14264, metadata !DIExpression()) #9, !dbg !15905
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15906
  store %struct.k_spinlock.13* %58, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !14267, metadata !DIExpression()) #9, !dbg !15907
  %59 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !15909
  %60 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !15910
  %61 = load i32, i32* %60, align 4, !dbg !15910
  %62 = call i32 @z_swap_irqlock(i32 noundef %61) #13, !dbg !15911
  %63 = load i32, i32* %10, align 4, !dbg !15912
  %64 = zext i32 %63 to i64, !dbg !15913
  %65 = call i32 @sys_clock_tick_get_32() #10, !dbg !15914
  %66 = zext i32 %65 to i64, !dbg !15914
  %67 = sub nsw i64 %64, %66, !dbg !15915
  store i64 %67, i64* %9, align 8, !dbg !15916
  %68 = load i64, i64* %9, align 8, !dbg !15917
  %69 = icmp sgt i64 %68, 0, !dbg !15919
  br i1 %69, label %70, label %73, !dbg !15920

70:                                               ; preds = %38
  %71 = load i64, i64* %9, align 8, !dbg !15921
  %72 = trunc i64 %71 to i32, !dbg !15921
  store i32 %72, i32* %8, align 4, !dbg !15923
  br label %74, !dbg !15923

73:                                               ; preds = %38
  store i32 0, i32* %8, align 4, !dbg !15924
  br label %74, !dbg !15924

74:                                               ; preds = %73, %70, %21
  %75 = load i32, i32* %8, align 4, !dbg !15925
  ret i32 %75, !dbg !15925
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64 noundef %0) #1 !dbg !15926 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15927, metadata !DIExpression()), !dbg !15928
  %15 = load i64, i64* %14, align 8, !dbg !15929
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !13244, metadata !DIExpression()), !dbg !15930
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13248, metadata !DIExpression()), !dbg !15932
  store i32 1000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13250, metadata !DIExpression()), !dbg !15933
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13252, metadata !DIExpression()), !dbg !15934
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !13254, metadata !DIExpression()), !dbg !15935
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !13256, metadata !DIExpression()), !dbg !15936
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13258, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.declare(metadata i8* %10, metadata !13260, metadata !DIExpression()), !dbg !15938
  %16 = load i8, i8* %6, align 1, !dbg !15939
  %17 = trunc i8 %16 to i1, !dbg !15939
  br i1 %17, label %18, label %27, !dbg !15940

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15941
  %20 = load i32, i32* %4, align 4, !dbg !15942
  %21 = icmp ugt i32 %19, %20, !dbg !15943
  br i1 %21, label %22, label %27, !dbg !15944

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15945
  %24 = load i32, i32* %4, align 4, !dbg !15946
  %25 = urem i32 %23, %24, !dbg !15947
  %26 = icmp eq i32 %25, 0, !dbg !15948
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15949
  %29 = zext i1 %28 to i8, !dbg !15938
  store i8 %29, i8* %10, align 1, !dbg !15938
  call void @llvm.dbg.declare(metadata i8* %11, metadata !13273, metadata !DIExpression()), !dbg !15950
  %30 = load i8, i8* %6, align 1, !dbg !15951
  %31 = trunc i8 %30 to i1, !dbg !15951
  br i1 %31, label %32, label %41, !dbg !15952

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15953
  %34 = load i32, i32* %5, align 4, !dbg !15954
  %35 = icmp ugt i32 %33, %34, !dbg !15955
  br i1 %35, label %36, label %41, !dbg !15956

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15957
  %38 = load i32, i32* %5, align 4, !dbg !15958
  %39 = urem i32 %37, %38, !dbg !15959
  %40 = icmp eq i32 %39, 0, !dbg !15960
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15949
  %43 = zext i1 %42 to i8, !dbg !15950
  store i8 %43, i8* %11, align 1, !dbg !15950
  %44 = load i32, i32* %4, align 4, !dbg !15961
  %45 = load i32, i32* %5, align 4, !dbg !15962
  %46 = icmp eq i32 %44, %45, !dbg !15963
  br i1 %46, label %47, label %58, !dbg !15964

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15965
  %49 = trunc i8 %48 to i1, !dbg !15965
  br i1 %49, label %50, label %54, !dbg !15965

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15966
  %52 = trunc i64 %51 to i32, !dbg !15967
  %53 = zext i32 %52 to i64, !dbg !15968
  br label %56, !dbg !15965

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15969
  br label %56, !dbg !15965

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15965
  store i64 %57, i64* %2, align 8, !dbg !15970
  br label %195, !dbg !15970

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !13297, metadata !DIExpression()), !dbg !15971
  store i64 0, i64* %12, align 8, !dbg !15971
  %59 = load i8, i8* %10, align 1, !dbg !15972
  %60 = trunc i8 %59 to i1, !dbg !15972
  br i1 %60, label %86, label %61, !dbg !15973

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13302, metadata !DIExpression()), !dbg !15974
  %62 = load i8, i8* %11, align 1, !dbg !15975
  %63 = trunc i8 %62 to i1, !dbg !15975
  br i1 %63, label %64, label %68, !dbg !15975

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15976
  %66 = load i32, i32* %5, align 4, !dbg !15977
  %67 = udiv i32 %65, %66, !dbg !15978
  br label %70, !dbg !15975

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15979
  br label %70, !dbg !15975

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15975
  store i32 %71, i32* %13, align 4, !dbg !15974
  %72 = load i8, i8* %8, align 1, !dbg !15980
  %73 = trunc i8 %72 to i1, !dbg !15980
  br i1 %73, label %74, label %78, !dbg !15981

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15982
  %76 = sub i32 %75, 1, !dbg !15983
  %77 = zext i32 %76 to i64, !dbg !15982
  store i64 %77, i64* %12, align 8, !dbg !15984
  br label %78, !dbg !15985

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15986
  %80 = trunc i8 %79 to i1, !dbg !15986
  br i1 %80, label %81, label %85, !dbg !15987

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15988
  %83 = udiv i32 %82, 2, !dbg !15989
  %84 = zext i32 %83 to i64, !dbg !15988
  store i64 %84, i64* %12, align 8, !dbg !15990
  br label %85, !dbg !15991

85:                                               ; preds = %81, %78
  br label %86, !dbg !15992

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15993
  %88 = trunc i8 %87 to i1, !dbg !15993
  br i1 %88, label %89, label %114, !dbg !15994

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15995
  %91 = load i64, i64* %3, align 8, !dbg !15996
  %92 = add i64 %91, %90, !dbg !15996
  store i64 %92, i64* %3, align 8, !dbg !15996
  %93 = load i8, i8* %7, align 1, !dbg !15997
  %94 = trunc i8 %93 to i1, !dbg !15997
  br i1 %94, label %95, label %106, !dbg !15998

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15999
  %97 = icmp ult i64 %96, 4294967296, !dbg !16000
  br i1 %97, label %98, label %106, !dbg !16001

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !16002
  %100 = trunc i64 %99 to i32, !dbg !16003
  %101 = load i32, i32* %4, align 4, !dbg !16004
  %102 = load i32, i32* %5, align 4, !dbg !16005
  %103 = udiv i32 %101, %102, !dbg !16006
  %104 = udiv i32 %100, %103, !dbg !16007
  %105 = zext i32 %104 to i64, !dbg !16008
  store i64 %105, i64* %2, align 8, !dbg !16009
  br label %195, !dbg !16009

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !16010
  %108 = load i32, i32* %4, align 4, !dbg !16011
  %109 = zext i32 %108 to i64, !dbg !16012
  %110 = load i32, i32* %5, align 4, !dbg !16013
  %111 = zext i32 %110 to i64, !dbg !16013
  %112 = udiv i64 %109, %111, !dbg !16014
  %113 = udiv i64 %107, %112, !dbg !16015
  store i64 %113, i64* %2, align 8, !dbg !16016
  br label %195, !dbg !16016

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !16017
  %116 = trunc i8 %115 to i1, !dbg !16017
  br i1 %116, label %117, label %136, !dbg !16018

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !16019
  %119 = trunc i8 %118 to i1, !dbg !16019
  br i1 %119, label %120, label %128, !dbg !16020

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !16021
  %122 = trunc i64 %121 to i32, !dbg !16022
  %123 = load i32, i32* %5, align 4, !dbg !16023
  %124 = load i32, i32* %4, align 4, !dbg !16024
  %125 = udiv i32 %123, %124, !dbg !16025
  %126 = mul i32 %122, %125, !dbg !16026
  %127 = zext i32 %126 to i64, !dbg !16027
  store i64 %127, i64* %2, align 8, !dbg !16028
  br label %195, !dbg !16028

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !16029
  %130 = load i32, i32* %5, align 4, !dbg !16030
  %131 = zext i32 %130 to i64, !dbg !16031
  %132 = load i32, i32* %4, align 4, !dbg !16032
  %133 = zext i32 %132 to i64, !dbg !16032
  %134 = udiv i64 %131, %133, !dbg !16033
  %135 = mul i64 %129, %134, !dbg !16034
  store i64 %135, i64* %2, align 8, !dbg !16035
  br label %195, !dbg !16035

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !16036
  %138 = trunc i8 %137 to i1, !dbg !16036
  br i1 %138, label %139, label %151, !dbg !16037

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !16038
  %141 = load i32, i32* %5, align 4, !dbg !16039
  %142 = zext i32 %141 to i64, !dbg !16039
  %143 = mul i64 %140, %142, !dbg !16040
  %144 = load i64, i64* %12, align 8, !dbg !16041
  %145 = add i64 %143, %144, !dbg !16042
  %146 = load i32, i32* %4, align 4, !dbg !16043
  %147 = zext i32 %146 to i64, !dbg !16043
  %148 = udiv i64 %145, %147, !dbg !16044
  %149 = trunc i64 %148 to i32, !dbg !16045
  %150 = zext i32 %149 to i64, !dbg !16045
  store i64 %150, i64* %2, align 8, !dbg !16046
  br label %195, !dbg !16046

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !16047
  %153 = trunc i8 %152 to i1, !dbg !16047
  br i1 %153, label %154, label %174, !dbg !16048

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !16049
  %156 = zext i32 %155 to i64, !dbg !16049
  %157 = mul i64 31536000, %156, !dbg !16049
  %158 = add i64 %157, 4294967294, !dbg !16049
  %159 = udiv i64 %158, 4294967295, !dbg !16049
  %160 = load i32, i32* %5, align 4, !dbg !16049
  %161 = zext i32 %160 to i64, !dbg !16049
  %162 = mul i64 %159, %161, !dbg !16049
  %163 = icmp ule i64 %162, 4294967295, !dbg !16049
  br i1 %163, label %164, label %174, !dbg !16050

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !16051
  %166 = load i32, i32* %5, align 4, !dbg !16052
  %167 = zext i32 %166 to i64, !dbg !16052
  %168 = mul i64 %165, %167, !dbg !16053
  %169 = load i64, i64* %12, align 8, !dbg !16054
  %170 = add i64 %168, %169, !dbg !16055
  %171 = load i32, i32* %4, align 4, !dbg !16056
  %172 = zext i32 %171 to i64, !dbg !16056
  %173 = udiv i64 %170, %172, !dbg !16057
  store i64 %173, i64* %2, align 8, !dbg !16058
  br label %195, !dbg !16058

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !16059
  %176 = load i32, i32* %4, align 4, !dbg !16060
  %177 = zext i32 %176 to i64, !dbg !16060
  %178 = udiv i64 %175, %177, !dbg !16061
  %179 = load i32, i32* %5, align 4, !dbg !16062
  %180 = zext i32 %179 to i64, !dbg !16062
  %181 = mul i64 %178, %180, !dbg !16063
  %182 = load i64, i64* %3, align 8, !dbg !16064
  %183 = load i32, i32* %4, align 4, !dbg !16065
  %184 = zext i32 %183 to i64, !dbg !16065
  %185 = urem i64 %182, %184, !dbg !16066
  %186 = load i32, i32* %5, align 4, !dbg !16067
  %187 = zext i32 %186 to i64, !dbg !16067
  %188 = mul i64 %185, %187, !dbg !16068
  %189 = load i64, i64* %12, align 8, !dbg !16069
  %190 = add i64 %188, %189, !dbg !16070
  %191 = load i32, i32* %4, align 4, !dbg !16071
  %192 = zext i32 %191 to i64, !dbg !16071
  %193 = udiv i64 %190, %192, !dbg !16072
  %194 = add i64 %181, %193, !dbg !16073
  store i64 %194, i64* %2, align 8, !dbg !16074
  br label %195, !dbg !16074

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !16075
  ret i64 %196, !dbg !16076
}

; Function Attrs: noinline nounwind optnone
define internal void @k_yield() #1 !dbg !16077 {
  br label %1, !dbg !16078

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !16079, !srcloc !16081
  br label %2, !dbg !16079

2:                                                ; preds = %1
  call void @z_impl_k_yield() #10, !dbg !16082
  ret void, !dbg !16083
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) #1 !dbg !16084 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16087, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16089, metadata !DIExpression()), !dbg !16090
  br label %4, !dbg !16091

4:                                                ; preds = %1
  br label %5, !dbg !16092

5:                                                ; preds = %4
  %6 = load i32, i32* %2, align 4, !dbg !16094
  %7 = sext i32 %6 to i64, !dbg !16094
  %8 = call i64 @k_us_to_ticks_ceil64(i64 noundef %7) #10, !dbg !16095
  %9 = trunc i64 %8 to i32, !dbg !16095
  store i32 %9, i32* %3, align 4, !dbg !16096
  %10 = load i32, i32* %3, align 4, !dbg !16097
  %11 = sext i32 %10 to i64, !dbg !16097
  %12 = call i32 @z_tick_sleep(i64 noundef %11) #10, !dbg !16098
  store i32 %12, i32* %3, align 4, !dbg !16099
  br label %13, !dbg !16100

13:                                               ; preds = %5
  br label %14, !dbg !16101

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4, !dbg !16103
  %16 = sext i32 %15 to i64, !dbg !16103
  %17 = call i64 @k_ticks_to_us_floor64(i64 noundef %16) #10, !dbg !16104
  %18 = trunc i64 %17 to i32, !dbg !16104
  ret i32 %18, !dbg !16105
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_us_to_ticks_ceil64(i64 noundef %0) #1 !dbg !16106 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !16107, metadata !DIExpression()), !dbg !16108
  %15 = load i64, i64* %14, align 8, !dbg !16109
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !13244, metadata !DIExpression()), !dbg !16110
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13248, metadata !DIExpression()), !dbg !16112
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13250, metadata !DIExpression()), !dbg !16113
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13252, metadata !DIExpression()), !dbg !16114
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !13254, metadata !DIExpression()), !dbg !16115
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !13256, metadata !DIExpression()), !dbg !16116
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13258, metadata !DIExpression()), !dbg !16117
  call void @llvm.dbg.declare(metadata i8* %10, metadata !13260, metadata !DIExpression()), !dbg !16118
  %16 = load i8, i8* %6, align 1, !dbg !16119
  %17 = trunc i8 %16 to i1, !dbg !16119
  br i1 %17, label %18, label %27, !dbg !16120

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !16121
  %20 = load i32, i32* %4, align 4, !dbg !16122
  %21 = icmp ugt i32 %19, %20, !dbg !16123
  br i1 %21, label %22, label %27, !dbg !16124

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !16125
  %24 = load i32, i32* %4, align 4, !dbg !16126
  %25 = urem i32 %23, %24, !dbg !16127
  %26 = icmp eq i32 %25, 0, !dbg !16128
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !16129
  %29 = zext i1 %28 to i8, !dbg !16118
  store i8 %29, i8* %10, align 1, !dbg !16118
  call void @llvm.dbg.declare(metadata i8* %11, metadata !13273, metadata !DIExpression()), !dbg !16130
  %30 = load i8, i8* %6, align 1, !dbg !16131
  %31 = trunc i8 %30 to i1, !dbg !16131
  br i1 %31, label %32, label %41, !dbg !16132

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !16133
  %34 = load i32, i32* %5, align 4, !dbg !16134
  %35 = icmp ugt i32 %33, %34, !dbg !16135
  br i1 %35, label %36, label %41, !dbg !16136

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !16137
  %38 = load i32, i32* %5, align 4, !dbg !16138
  %39 = urem i32 %37, %38, !dbg !16139
  %40 = icmp eq i32 %39, 0, !dbg !16140
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !16129
  %43 = zext i1 %42 to i8, !dbg !16130
  store i8 %43, i8* %11, align 1, !dbg !16130
  %44 = load i32, i32* %4, align 4, !dbg !16141
  %45 = load i32, i32* %5, align 4, !dbg !16142
  %46 = icmp eq i32 %44, %45, !dbg !16143
  br i1 %46, label %47, label %58, !dbg !16144

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !16145
  %49 = trunc i8 %48 to i1, !dbg !16145
  br i1 %49, label %50, label %54, !dbg !16145

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !16146
  %52 = trunc i64 %51 to i32, !dbg !16147
  %53 = zext i32 %52 to i64, !dbg !16148
  br label %56, !dbg !16145

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !16149
  br label %56, !dbg !16145

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !16145
  store i64 %57, i64* %2, align 8, !dbg !16150
  br label %195, !dbg !16150

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !13297, metadata !DIExpression()), !dbg !16151
  store i64 0, i64* %12, align 8, !dbg !16151
  %59 = load i8, i8* %10, align 1, !dbg !16152
  %60 = trunc i8 %59 to i1, !dbg !16152
  br i1 %60, label %86, label %61, !dbg !16153

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13302, metadata !DIExpression()), !dbg !16154
  %62 = load i8, i8* %11, align 1, !dbg !16155
  %63 = trunc i8 %62 to i1, !dbg !16155
  br i1 %63, label %64, label %68, !dbg !16155

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !16156
  %66 = load i32, i32* %5, align 4, !dbg !16157
  %67 = udiv i32 %65, %66, !dbg !16158
  br label %70, !dbg !16155

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !16159
  br label %70, !dbg !16155

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !16155
  store i32 %71, i32* %13, align 4, !dbg !16154
  %72 = load i8, i8* %8, align 1, !dbg !16160
  %73 = trunc i8 %72 to i1, !dbg !16160
  br i1 %73, label %74, label %78, !dbg !16161

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !16162
  %76 = sub i32 %75, 1, !dbg !16163
  %77 = zext i32 %76 to i64, !dbg !16162
  store i64 %77, i64* %12, align 8, !dbg !16164
  br label %78, !dbg !16165

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !16166
  %80 = trunc i8 %79 to i1, !dbg !16166
  br i1 %80, label %81, label %85, !dbg !16167

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !16168
  %83 = udiv i32 %82, 2, !dbg !16169
  %84 = zext i32 %83 to i64, !dbg !16168
  store i64 %84, i64* %12, align 8, !dbg !16170
  br label %85, !dbg !16171

85:                                               ; preds = %81, %78
  br label %86, !dbg !16172

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !16173
  %88 = trunc i8 %87 to i1, !dbg !16173
  br i1 %88, label %89, label %114, !dbg !16174

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !16175
  %91 = load i64, i64* %3, align 8, !dbg !16176
  %92 = add i64 %91, %90, !dbg !16176
  store i64 %92, i64* %3, align 8, !dbg !16176
  %93 = load i8, i8* %7, align 1, !dbg !16177
  %94 = trunc i8 %93 to i1, !dbg !16177
  br i1 %94, label %95, label %106, !dbg !16178

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !16179
  %97 = icmp ult i64 %96, 4294967296, !dbg !16180
  br i1 %97, label %98, label %106, !dbg !16181

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !16182
  %100 = trunc i64 %99 to i32, !dbg !16183
  %101 = load i32, i32* %4, align 4, !dbg !16184
  %102 = load i32, i32* %5, align 4, !dbg !16185
  %103 = udiv i32 %101, %102, !dbg !16186
  %104 = udiv i32 %100, %103, !dbg !16187
  %105 = zext i32 %104 to i64, !dbg !16188
  store i64 %105, i64* %2, align 8, !dbg !16189
  br label %195, !dbg !16189

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !16190
  %108 = load i32, i32* %4, align 4, !dbg !16191
  %109 = zext i32 %108 to i64, !dbg !16192
  %110 = load i32, i32* %5, align 4, !dbg !16193
  %111 = zext i32 %110 to i64, !dbg !16193
  %112 = udiv i64 %109, %111, !dbg !16194
  %113 = udiv i64 %107, %112, !dbg !16195
  store i64 %113, i64* %2, align 8, !dbg !16196
  br label %195, !dbg !16196

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !16197
  %116 = trunc i8 %115 to i1, !dbg !16197
  br i1 %116, label %117, label %136, !dbg !16198

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !16199
  %119 = trunc i8 %118 to i1, !dbg !16199
  br i1 %119, label %120, label %128, !dbg !16200

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !16201
  %122 = trunc i64 %121 to i32, !dbg !16202
  %123 = load i32, i32* %5, align 4, !dbg !16203
  %124 = load i32, i32* %4, align 4, !dbg !16204
  %125 = udiv i32 %123, %124, !dbg !16205
  %126 = mul i32 %122, %125, !dbg !16206
  %127 = zext i32 %126 to i64, !dbg !16207
  store i64 %127, i64* %2, align 8, !dbg !16208
  br label %195, !dbg !16208

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !16209
  %130 = load i32, i32* %5, align 4, !dbg !16210
  %131 = zext i32 %130 to i64, !dbg !16211
  %132 = load i32, i32* %4, align 4, !dbg !16212
  %133 = zext i32 %132 to i64, !dbg !16212
  %134 = udiv i64 %131, %133, !dbg !16213
  %135 = mul i64 %129, %134, !dbg !16214
  store i64 %135, i64* %2, align 8, !dbg !16215
  br label %195, !dbg !16215

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !16216
  %138 = trunc i8 %137 to i1, !dbg !16216
  br i1 %138, label %139, label %151, !dbg !16217

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !16218
  %141 = load i32, i32* %5, align 4, !dbg !16219
  %142 = zext i32 %141 to i64, !dbg !16219
  %143 = mul i64 %140, %142, !dbg !16220
  %144 = load i64, i64* %12, align 8, !dbg !16221
  %145 = add i64 %143, %144, !dbg !16222
  %146 = load i32, i32* %4, align 4, !dbg !16223
  %147 = zext i32 %146 to i64, !dbg !16223
  %148 = udiv i64 %145, %147, !dbg !16224
  %149 = trunc i64 %148 to i32, !dbg !16225
  %150 = zext i32 %149 to i64, !dbg !16225
  store i64 %150, i64* %2, align 8, !dbg !16226
  br label %195, !dbg !16226

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !16227
  %153 = trunc i8 %152 to i1, !dbg !16227
  br i1 %153, label %154, label %174, !dbg !16228

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !16229
  %156 = zext i32 %155 to i64, !dbg !16229
  %157 = mul i64 31536000, %156, !dbg !16229
  %158 = add i64 %157, 4294967294, !dbg !16229
  %159 = udiv i64 %158, 4294967295, !dbg !16229
  %160 = load i32, i32* %5, align 4, !dbg !16229
  %161 = zext i32 %160 to i64, !dbg !16229
  %162 = mul i64 %159, %161, !dbg !16229
  %163 = icmp ule i64 %162, 4294967295, !dbg !16229
  br i1 %163, label %164, label %174, !dbg !16230

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !16231
  %166 = load i32, i32* %5, align 4, !dbg !16232
  %167 = zext i32 %166 to i64, !dbg !16232
  %168 = mul i64 %165, %167, !dbg !16233
  %169 = load i64, i64* %12, align 8, !dbg !16234
  %170 = add i64 %168, %169, !dbg !16235
  %171 = load i32, i32* %4, align 4, !dbg !16236
  %172 = zext i32 %171 to i64, !dbg !16236
  %173 = udiv i64 %170, %172, !dbg !16237
  store i64 %173, i64* %2, align 8, !dbg !16238
  br label %195, !dbg !16238

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !16239
  %176 = load i32, i32* %4, align 4, !dbg !16240
  %177 = zext i32 %176 to i64, !dbg !16240
  %178 = udiv i64 %175, %177, !dbg !16241
  %179 = load i32, i32* %5, align 4, !dbg !16242
  %180 = zext i32 %179 to i64, !dbg !16242
  %181 = mul i64 %178, %180, !dbg !16243
  %182 = load i64, i64* %3, align 8, !dbg !16244
  %183 = load i32, i32* %4, align 4, !dbg !16245
  %184 = zext i32 %183 to i64, !dbg !16245
  %185 = urem i64 %182, %184, !dbg !16246
  %186 = load i32, i32* %5, align 4, !dbg !16247
  %187 = zext i32 %186 to i64, !dbg !16247
  %188 = mul i64 %185, %187, !dbg !16248
  %189 = load i64, i64* %12, align 8, !dbg !16249
  %190 = add i64 %188, %189, !dbg !16250
  %191 = load i32, i32* %4, align 4, !dbg !16251
  %192 = zext i32 %191 to i64, !dbg !16251
  %193 = udiv i64 %190, %192, !dbg !16252
  %194 = add i64 %181, %193, !dbg !16253
  store i64 %194, i64* %2, align 8, !dbg !16254
  br label %195, !dbg !16254

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !16255
  ret i64 %196, !dbg !16256
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_us_floor64(i64 noundef %0) #1 !dbg !16257 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !16258, metadata !DIExpression()), !dbg !16259
  %15 = load i64, i64* %14, align 8, !dbg !16260
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !13244, metadata !DIExpression()), !dbg !16261
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13248, metadata !DIExpression()), !dbg !16263
  store i32 1000000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13250, metadata !DIExpression()), !dbg !16264
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !13252, metadata !DIExpression()), !dbg !16265
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !13254, metadata !DIExpression()), !dbg !16266
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !13256, metadata !DIExpression()), !dbg !16267
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !13258, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.declare(metadata i8* %10, metadata !13260, metadata !DIExpression()), !dbg !16269
  %16 = load i8, i8* %6, align 1, !dbg !16270
  %17 = trunc i8 %16 to i1, !dbg !16270
  br i1 %17, label %18, label %27, !dbg !16271

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !16272
  %20 = load i32, i32* %4, align 4, !dbg !16273
  %21 = icmp ugt i32 %19, %20, !dbg !16274
  br i1 %21, label %22, label %27, !dbg !16275

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !16276
  %24 = load i32, i32* %4, align 4, !dbg !16277
  %25 = urem i32 %23, %24, !dbg !16278
  %26 = icmp eq i32 %25, 0, !dbg !16279
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !16280
  %29 = zext i1 %28 to i8, !dbg !16269
  store i8 %29, i8* %10, align 1, !dbg !16269
  call void @llvm.dbg.declare(metadata i8* %11, metadata !13273, metadata !DIExpression()), !dbg !16281
  %30 = load i8, i8* %6, align 1, !dbg !16282
  %31 = trunc i8 %30 to i1, !dbg !16282
  br i1 %31, label %32, label %41, !dbg !16283

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !16284
  %34 = load i32, i32* %5, align 4, !dbg !16285
  %35 = icmp ugt i32 %33, %34, !dbg !16286
  br i1 %35, label %36, label %41, !dbg !16287

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !16288
  %38 = load i32, i32* %5, align 4, !dbg !16289
  %39 = urem i32 %37, %38, !dbg !16290
  %40 = icmp eq i32 %39, 0, !dbg !16291
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !16280
  %43 = zext i1 %42 to i8, !dbg !16281
  store i8 %43, i8* %11, align 1, !dbg !16281
  %44 = load i32, i32* %4, align 4, !dbg !16292
  %45 = load i32, i32* %5, align 4, !dbg !16293
  %46 = icmp eq i32 %44, %45, !dbg !16294
  br i1 %46, label %47, label %58, !dbg !16295

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !16296
  %49 = trunc i8 %48 to i1, !dbg !16296
  br i1 %49, label %50, label %54, !dbg !16296

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !16297
  %52 = trunc i64 %51 to i32, !dbg !16298
  %53 = zext i32 %52 to i64, !dbg !16299
  br label %56, !dbg !16296

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !16300
  br label %56, !dbg !16296

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !16296
  store i64 %57, i64* %2, align 8, !dbg !16301
  br label %195, !dbg !16301

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !13297, metadata !DIExpression()), !dbg !16302
  store i64 0, i64* %12, align 8, !dbg !16302
  %59 = load i8, i8* %10, align 1, !dbg !16303
  %60 = trunc i8 %59 to i1, !dbg !16303
  br i1 %60, label %86, label %61, !dbg !16304

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13302, metadata !DIExpression()), !dbg !16305
  %62 = load i8, i8* %11, align 1, !dbg !16306
  %63 = trunc i8 %62 to i1, !dbg !16306
  br i1 %63, label %64, label %68, !dbg !16306

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !16307
  %66 = load i32, i32* %5, align 4, !dbg !16308
  %67 = udiv i32 %65, %66, !dbg !16309
  br label %70, !dbg !16306

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !16310
  br label %70, !dbg !16306

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !16306
  store i32 %71, i32* %13, align 4, !dbg !16305
  %72 = load i8, i8* %8, align 1, !dbg !16311
  %73 = trunc i8 %72 to i1, !dbg !16311
  br i1 %73, label %74, label %78, !dbg !16312

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !16313
  %76 = sub i32 %75, 1, !dbg !16314
  %77 = zext i32 %76 to i64, !dbg !16313
  store i64 %77, i64* %12, align 8, !dbg !16315
  br label %78, !dbg !16316

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !16317
  %80 = trunc i8 %79 to i1, !dbg !16317
  br i1 %80, label %81, label %85, !dbg !16318

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !16319
  %83 = udiv i32 %82, 2, !dbg !16320
  %84 = zext i32 %83 to i64, !dbg !16319
  store i64 %84, i64* %12, align 8, !dbg !16321
  br label %85, !dbg !16322

85:                                               ; preds = %81, %78
  br label %86, !dbg !16323

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !16324
  %88 = trunc i8 %87 to i1, !dbg !16324
  br i1 %88, label %89, label %114, !dbg !16325

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !16326
  %91 = load i64, i64* %3, align 8, !dbg !16327
  %92 = add i64 %91, %90, !dbg !16327
  store i64 %92, i64* %3, align 8, !dbg !16327
  %93 = load i8, i8* %7, align 1, !dbg !16328
  %94 = trunc i8 %93 to i1, !dbg !16328
  br i1 %94, label %95, label %106, !dbg !16329

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !16330
  %97 = icmp ult i64 %96, 4294967296, !dbg !16331
  br i1 %97, label %98, label %106, !dbg !16332

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !16333
  %100 = trunc i64 %99 to i32, !dbg !16334
  %101 = load i32, i32* %4, align 4, !dbg !16335
  %102 = load i32, i32* %5, align 4, !dbg !16336
  %103 = udiv i32 %101, %102, !dbg !16337
  %104 = udiv i32 %100, %103, !dbg !16338
  %105 = zext i32 %104 to i64, !dbg !16339
  store i64 %105, i64* %2, align 8, !dbg !16340
  br label %195, !dbg !16340

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !16341
  %108 = load i32, i32* %4, align 4, !dbg !16342
  %109 = zext i32 %108 to i64, !dbg !16343
  %110 = load i32, i32* %5, align 4, !dbg !16344
  %111 = zext i32 %110 to i64, !dbg !16344
  %112 = udiv i64 %109, %111, !dbg !16345
  %113 = udiv i64 %107, %112, !dbg !16346
  store i64 %113, i64* %2, align 8, !dbg !16347
  br label %195, !dbg !16347

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !16348
  %116 = trunc i8 %115 to i1, !dbg !16348
  br i1 %116, label %117, label %136, !dbg !16349

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !16350
  %119 = trunc i8 %118 to i1, !dbg !16350
  br i1 %119, label %120, label %128, !dbg !16351

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !16352
  %122 = trunc i64 %121 to i32, !dbg !16353
  %123 = load i32, i32* %5, align 4, !dbg !16354
  %124 = load i32, i32* %4, align 4, !dbg !16355
  %125 = udiv i32 %123, %124, !dbg !16356
  %126 = mul i32 %122, %125, !dbg !16357
  %127 = zext i32 %126 to i64, !dbg !16358
  store i64 %127, i64* %2, align 8, !dbg !16359
  br label %195, !dbg !16359

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !16360
  %130 = load i32, i32* %5, align 4, !dbg !16361
  %131 = zext i32 %130 to i64, !dbg !16362
  %132 = load i32, i32* %4, align 4, !dbg !16363
  %133 = zext i32 %132 to i64, !dbg !16363
  %134 = udiv i64 %131, %133, !dbg !16364
  %135 = mul i64 %129, %134, !dbg !16365
  store i64 %135, i64* %2, align 8, !dbg !16366
  br label %195, !dbg !16366

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !16367
  %138 = trunc i8 %137 to i1, !dbg !16367
  br i1 %138, label %139, label %151, !dbg !16368

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !16369
  %141 = load i32, i32* %5, align 4, !dbg !16370
  %142 = zext i32 %141 to i64, !dbg !16370
  %143 = mul i64 %140, %142, !dbg !16371
  %144 = load i64, i64* %12, align 8, !dbg !16372
  %145 = add i64 %143, %144, !dbg !16373
  %146 = load i32, i32* %4, align 4, !dbg !16374
  %147 = zext i32 %146 to i64, !dbg !16374
  %148 = udiv i64 %145, %147, !dbg !16375
  %149 = trunc i64 %148 to i32, !dbg !16376
  %150 = zext i32 %149 to i64, !dbg !16376
  store i64 %150, i64* %2, align 8, !dbg !16377
  br label %195, !dbg !16377

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !16378
  %153 = trunc i8 %152 to i1, !dbg !16378
  br i1 %153, label %154, label %174, !dbg !16379

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !16380
  %156 = zext i32 %155 to i64, !dbg !16380
  %157 = mul i64 31536000, %156, !dbg !16380
  %158 = add i64 %157, 4294967294, !dbg !16380
  %159 = udiv i64 %158, 4294967295, !dbg !16380
  %160 = load i32, i32* %5, align 4, !dbg !16380
  %161 = zext i32 %160 to i64, !dbg !16380
  %162 = mul i64 %159, %161, !dbg !16380
  %163 = icmp ule i64 %162, 4294967295, !dbg !16380
  br i1 %163, label %164, label %174, !dbg !16381

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !16382
  %166 = load i32, i32* %5, align 4, !dbg !16383
  %167 = zext i32 %166 to i64, !dbg !16383
  %168 = mul i64 %165, %167, !dbg !16384
  %169 = load i64, i64* %12, align 8, !dbg !16385
  %170 = add i64 %168, %169, !dbg !16386
  %171 = load i32, i32* %4, align 4, !dbg !16387
  %172 = zext i32 %171 to i64, !dbg !16387
  %173 = udiv i64 %170, %172, !dbg !16388
  store i64 %173, i64* %2, align 8, !dbg !16389
  br label %195, !dbg !16389

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !16390
  %176 = load i32, i32* %4, align 4, !dbg !16391
  %177 = zext i32 %176 to i64, !dbg !16391
  %178 = udiv i64 %175, %177, !dbg !16392
  %179 = load i32, i32* %5, align 4, !dbg !16393
  %180 = zext i32 %179 to i64, !dbg !16393
  %181 = mul i64 %178, %180, !dbg !16394
  %182 = load i64, i64* %3, align 8, !dbg !16395
  %183 = load i32, i32* %4, align 4, !dbg !16396
  %184 = zext i32 %183 to i64, !dbg !16396
  %185 = urem i64 %182, %184, !dbg !16397
  %186 = load i32, i32* %5, align 4, !dbg !16398
  %187 = zext i32 %186 to i64, !dbg !16398
  %188 = mul i64 %185, %187, !dbg !16399
  %189 = load i64, i64* %12, align 8, !dbg !16400
  %190 = add i64 %188, %189, !dbg !16401
  %191 = load i32, i32* %4, align 4, !dbg !16402
  %192 = zext i32 %191 to i64, !dbg !16402
  %193 = udiv i64 %190, %192, !dbg !16403
  %194 = add i64 %181, %193, !dbg !16404
  store i64 %194, i64* %2, align 8, !dbg !16405
  br label %195, !dbg !16405

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !16406
  ret i64 %196, !dbg !16407
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_wakeup(%struct.k_thread.203* noundef %0) #1 !dbg !16408 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !16409, metadata !DIExpression()), !dbg !16410
  br label %4, !dbg !16411

4:                                                ; preds = %1
  br label %5, !dbg !16412

5:                                                ; preds = %4
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16414
  %7 = call zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %6) #10, !dbg !16416
  br i1 %7, label %8, label %9, !dbg !16417

8:                                                ; preds = %5
  br label %31, !dbg !16418

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16420
  %11 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %10) #10, !dbg !16422
  %12 = icmp slt i32 %11, 0, !dbg !16423
  br i1 %12, label %13, label %22, !dbg !16424

13:                                               ; preds = %9
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16425
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !16428
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !16429
  %17 = load i8, i8* %16, align 1, !dbg !16429
  %18 = zext i8 %17 to i32, !dbg !16425
  %19 = icmp ne i32 %18, 16, !dbg !16430
  br i1 %19, label %20, label %21, !dbg !16431

20:                                               ; preds = %13
  br label %31, !dbg !16432

21:                                               ; preds = %13
  br label %22, !dbg !16434

22:                                               ; preds = %21, %9
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16435
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %23) #10, !dbg !16436
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16437
  call void @z_ready_thread(%struct.k_thread.203* noundef %24) #10, !dbg !16438
  call void @flag_ipi() #10, !dbg !16439
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14310, metadata !DIExpression()) #9, !dbg !16440
  %25 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16444, !srcloc !14317
  store i32 %25, i32* %2, align 4, !dbg !16444
  %26 = load i32, i32* %2, align 4, !dbg !16445
  %27 = icmp ne i32 %26, 0, !dbg !16446
  %28 = zext i1 %27 to i64, !dbg !16446
  %29 = select i1 %27, i32 1, i32 0, !dbg !16446
  br i1 %27, label %31, label %30, !dbg !16447

30:                                               ; preds = %22
  call void @z_reschedule_unlocked() #10, !dbg !16448
  br label %31, !dbg !16450

31:                                               ; preds = %8, %20, %30, %22
  ret void, !dbg !16451
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %0) #1 !dbg !16452 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !16453, metadata !DIExpression()), !dbg !16454
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !16455
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !16456
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !16457
  %6 = load i8, i8* %5, align 1, !dbg !16457
  %7 = zext i8 %6 to i32, !dbg !16455
  %8 = and i32 %7, 2, !dbg !16458
  %9 = icmp ne i32 %8, 0, !dbg !16459
  ret i1 %9, !dbg !16460
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_z_current_get() #1 !dbg !16461 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !16464, metadata !DIExpression()), !dbg !16465
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16466
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !16465
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !16467
  ret %struct.k_thread.203* %3, !dbg !16468
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_is_preempt_thread() #1 !dbg !16469 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !14310, metadata !DIExpression()) #9, !dbg !16470
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16473, !srcloc !14317
  store i32 %2, i32* %1, align 4, !dbg !16473
  %3 = load i32, i32* %1, align 4, !dbg !16474
  %4 = icmp ne i32 %3, 0, !dbg !16475
  %5 = zext i1 %4 to i64, !dbg !16475
  %6 = select i1 %4, i32 1, i32 0, !dbg !16475
  br i1 %4, label %11, label %7, !dbg !16476

7:                                                ; preds = %0
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16477
  %9 = call i32 @is_preempt(%struct.k_thread.203* noundef %8) #10, !dbg !16478
  %10 = icmp ne i32 %9, 0, !dbg !16476
  br label %11

11:                                               ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ], !dbg !16479
  %13 = zext i1 %12 to i32, !dbg !16476
  ret i32 %13, !dbg !16480
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !16481 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca %union.anon.68, align 4
  %20 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !16482, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.declare(metadata %union.anon.68* %19, metadata !16484, metadata !DIExpression()), !dbg !16485
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !13172, metadata !DIExpression()) #9, !dbg !16486
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !16488
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !13180, metadata !DIExpression()) #9, !dbg !16489
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13182, metadata !DIExpression()) #9, !dbg !16490
  %22 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16492, !srcloc !13187
  store i32 %22, i32* %3, align 4, !dbg !16492
  %23 = load i32, i32* %3, align 4, !dbg !16493
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16494
  store i32 %23, i32* %24, align 4, !dbg !16495
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16496
  %26 = load i32, i32* %25, align 4, !dbg !16496
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !16497
  store i32 %26, i32* %27, align 4, !dbg !16497
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16498
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !16500
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 2, !dbg !16501
  %31 = load i8, i8* %30, align 4, !dbg !16501
  %32 = zext i8 %31 to i32, !dbg !16498
  %33 = and i32 %32, 1, !dbg !16502
  %34 = icmp ne i32 %33, 0, !dbg !16503
  br i1 %34, label %35, label %52, !dbg !16504

35:                                               ; preds = %1
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !16505
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !16505
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !16505
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !13212, metadata !DIExpression()) #9, !dbg !16507
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13218, metadata !DIExpression()) #9, !dbg !16509
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !16510
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16511
  %43 = load i32, i32* %42, align 4, !dbg !16511
  store i32 %43, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13222, metadata !DIExpression()) #9, !dbg !16512
  %44 = load i32, i32* %6, align 4, !dbg !16514
  %45 = icmp ne i32 %44, 0, !dbg !16515
  br i1 %45, label %46, label %47, !dbg !16516

46:                                               ; preds = %35
  br label %48, !dbg !16517

47:                                               ; preds = %35
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16518, !srcloc !13233
  br label %48, !dbg !16519

48:                                               ; preds = %46, %47
  call void @llvm.dbg.declare(metadata i32* %20, metadata !16520, metadata !DIExpression()), !dbg !16521
  store i32 4, i32* %20, align 4, !dbg !16521
  br label %49, !dbg !16521

49:                                               ; preds = %48
  %50 = load i32, i32* %20, align 4, !dbg !16522
  call void asm sideeffect "cpsie i\0A\09svc $1\0A\09", "{r0},i,~{memory}"(i32 %50, i32 2) #9, !dbg !16522, !srcloc !16524
  br label %51, !dbg !16522

51:                                               ; preds = %49
  br label %110, !dbg !16525

52:                                               ; preds = %1
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16526
  %54 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %53, i32 0, i32 0, !dbg !16528
  %55 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %54, i32 0, i32 3, !dbg !16529
  %56 = load i8, i8* %55, align 1, !dbg !16529
  %57 = zext i8 %56 to i32, !dbg !16526
  %58 = and i32 %57, 8, !dbg !16530
  %59 = icmp ne i32 %58, 0, !dbg !16531
  br i1 %59, label %60, label %74, !dbg !16532

60:                                               ; preds = %52
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !16533
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !16533
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !16533
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !13212, metadata !DIExpression()) #9, !dbg !16535
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13218, metadata !DIExpression()) #9, !dbg !16537
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !16538
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16539
  %68 = load i32, i32* %67, align 4, !dbg !16539
  store i32 %68, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13222, metadata !DIExpression()) #9, !dbg !16540
  %69 = load i32, i32* %5, align 4, !dbg !16542
  %70 = icmp ne i32 %69, 0, !dbg !16543
  br i1 %70, label %71, label %72, !dbg !16544

71:                                               ; preds = %60
  br label %73, !dbg !16545

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16546, !srcloc !13233
  br label %73, !dbg !16547

73:                                               ; preds = %71, %72
  br label %110, !dbg !16548

74:                                               ; preds = %52
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16549
  call void @end_thread(%struct.k_thread.203* noundef %75) #10, !dbg !16550
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16551
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16553
  %78 = icmp eq %struct.k_thread.203* %76, %77, !dbg !16554
  br i1 %78, label %79, label %96, !dbg !16555

79:                                               ; preds = %74
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14310, metadata !DIExpression()) #9, !dbg !16556
  %80 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16559, !srcloc !14317
  store i32 %80, i32* %2, align 4, !dbg !16559
  %81 = load i32, i32* %2, align 4, !dbg !16560
  %82 = icmp ne i32 %81, 0, !dbg !16561
  %83 = zext i1 %82 to i64, !dbg !16561
  %84 = select i1 %82, i32 1, i32 0, !dbg !16561
  br i1 %82, label %96, label %85, !dbg !16562

85:                                               ; preds = %79
  %86 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !16563
  %87 = bitcast i32* %86 to [1 x i32]*, !dbg !16563
  %88 = load [1 x i32], [1 x i32]* %87, align 4, !dbg !16563
  %89 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %90 = bitcast i32* %89 to [1 x i32]*
  store [1 x i32] %88, [1 x i32]* %90, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !14258, metadata !DIExpression()) #9, !dbg !16565
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14264, metadata !DIExpression()) #9, !dbg !16567
  %91 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16568
  store %struct.k_spinlock.13* %91, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !14267, metadata !DIExpression()) #9, !dbg !16569
  %92 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16571
  %93 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16572
  %94 = load i32, i32* %93, align 4, !dbg !16572
  %95 = call i32 @z_swap_irqlock(i32 noundef %94) #13, !dbg !16573
  br label %96, !dbg !16574

96:                                               ; preds = %85, %79, %74
  %97 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !16575
  %98 = bitcast i32* %97 to [1 x i32]*, !dbg !16575
  %99 = load [1 x i32], [1 x i32]* %98, align 4, !dbg !16575
  %100 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %101 = bitcast i32* %100 to [1 x i32]*
  store [1 x i32] %99, [1 x i32]* %101, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !13212, metadata !DIExpression()) #9, !dbg !16576
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13218, metadata !DIExpression()) #9, !dbg !16578
  %102 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !16579
  %103 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16580
  %104 = load i32, i32* %103, align 4, !dbg !16580
  store i32 %104, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13222, metadata !DIExpression()) #9, !dbg !16581
  %105 = load i32, i32* %4, align 4, !dbg !16583
  %106 = icmp ne i32 %105, 0, !dbg !16584
  br i1 %106, label %107, label %108, !dbg !16585

107:                                              ; preds = %96
  br label %109, !dbg !16586

108:                                              ; preds = %96
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16587, !srcloc !13233
  br label %109, !dbg !16588

109:                                              ; preds = %107, %108
  br label %110, !dbg !16589

110:                                              ; preds = %109, %73, %51
  ret void, !dbg !16589
}

; Function Attrs: noinline nounwind optnone
define internal void @end_thread(%struct.k_thread.203* noundef %0) #1 !dbg !16590 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !16591, metadata !DIExpression()), !dbg !16592
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16593
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !16595
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 3, !dbg !16596
  %9 = load i8, i8* %8, align 1, !dbg !16596
  %10 = zext i8 %9 to i32, !dbg !16593
  %11 = and i32 %10, 8, !dbg !16597
  %12 = icmp eq i32 %11, 0, !dbg !16598
  br i1 %12, label %13, label %64, !dbg !16599

13:                                               ; preds = %1
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16600
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !16602
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !16603
  %17 = load i8, i8* %16, align 1, !dbg !16604
  %18 = zext i8 %17 to i32, !dbg !16604
  %19 = or i32 %18, 8, !dbg !16604
  %20 = trunc i32 %19 to i8, !dbg !16604
  store i8 %20, i8* %16, align 1, !dbg !16604
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16605
  %22 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %21, i32 0, i32 0, !dbg !16606
  %23 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %22, i32 0, i32 3, !dbg !16607
  %24 = load i8, i8* %23, align 1, !dbg !16608
  %25 = zext i8 %24 to i32, !dbg !16608
  %26 = and i32 %25, -33, !dbg !16608
  %27 = trunc i32 %26 to i8, !dbg !16608
  store i8 %27, i8* %23, align 1, !dbg !16608
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16609
  %29 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %28) #10, !dbg !16611
  br i1 %29, label %30, label %47, !dbg !16612

30:                                               ; preds = %13
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16613
  store %struct.k_thread.203* %31, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13572, metadata !DIExpression()) #9, !dbg !16615
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !16617
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !16618
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 3, !dbg !16619
  %35 = load i8, i8* %34, align 1, !dbg !16620
  %36 = zext i8 %35 to i32, !dbg !16620
  %37 = and i32 %36, -129, !dbg !16620
  %38 = trunc i32 %37 to i8, !dbg !16620
  store i8 %38, i8* %34, align 1, !dbg !16620
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !16621
  %40 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %39) #13, !dbg !16622
  br i1 %40, label %41, label %46, !dbg !16623

41:                                               ; preds = %30
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !16624
  store %struct.k_thread.203* %42, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13586, metadata !DIExpression()) #9, !dbg !16625
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16627
  store %struct.k_thread.203* %43, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13591, metadata !DIExpression()), !dbg !16628
  %44 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !16630
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !16631
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %44, %struct.k_thread.203* noundef %45) #13, !dbg !16632
  br label %46, !dbg !16633

46:                                               ; preds = %30, %41
  br label %47, !dbg !16634

47:                                               ; preds = %46, %13
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16635
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !16637
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !16638
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !16638
  %52 = icmp ne %union.anon.192* %51, null, !dbg !16639
  br i1 %52, label %53, label %55, !dbg !16640

53:                                               ; preds = %47
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16641
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %54) #10, !dbg !16643
  br label %55, !dbg !16644

55:                                               ; preds = %53, %47
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16645
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !16646
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16647
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !16648
  call void @unpend_all(%union.anon.192* noundef %59) #10, !dbg !16649
  call void @update_cache(i32 noundef 1) #10, !dbg !16650
  br label %60, !dbg !16651

60:                                               ; preds = %55
  br label %61, !dbg !16652

61:                                               ; preds = %60
  br label %62, !dbg !16654

62:                                               ; preds = %61
  br label %63, !dbg !16655

63:                                               ; preds = %62
  br label %64, !dbg !16657

64:                                               ; preds = %63, %1
  ret void, !dbg !16658
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_all(%union.anon.192* noundef %0) #1 !dbg !16659 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.192*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %4, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %4, metadata !16662, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !16664, metadata !DIExpression()), !dbg !16665
  br label %6, !dbg !16666

6:                                                ; preds = %10, %1
  %7 = load %union.anon.192*, %union.anon.192** %4, align 4, !dbg !16667
  %8 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %7) #10, !dbg !16668
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !16669
  %9 = icmp ne %struct.k_thread.203* %8, null, !dbg !16670
  br i1 %9, label %10, label %20, !dbg !16666

10:                                               ; preds = %6
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16671
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %11) #10, !dbg !16673
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16674
  %13 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %12) #10, !dbg !16675
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16676
  store %struct.k_thread.203* %14, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !16677, metadata !DIExpression()), !dbg !16681
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16683, metadata !DIExpression()), !dbg !16684
  %15 = load i32, i32* %3, align 4, !dbg !16685
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !16686
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 6, !dbg !16687
  %18 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %17, i32 0, i32 1, !dbg !16688
  store i32 %15, i32* %18, align 4, !dbg !16689
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !16690
  call void @ready_thread(%struct.k_thread.203* noundef %19) #10, !dbg !16691
  br label %6, !dbg !16666, !llvm.loop !16692

20:                                               ; preds = %6
  ret void, !dbg !16694
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !16695 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_thread.203*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca %union.argument_value, align 8
  %18 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %19 = bitcast i64* %18 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %19, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %14, metadata !16698, metadata !DIExpression()), !dbg !16699
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !16700, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16702, metadata !DIExpression()), !dbg !16703
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !13172, metadata !DIExpression()) #9, !dbg !16704
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !16706
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13180, metadata !DIExpression()) #9, !dbg !16707
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13182, metadata !DIExpression()) #9, !dbg !16708
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16710, !srcloc !13187
  store i32 %21, i32* %3, align 4, !dbg !16710
  %22 = load i32, i32* %3, align 4, !dbg !16711
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16712
  store i32 %22, i32* %23, align 4, !dbg !16713
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16714
  %25 = load i32, i32* %24, align 4, !dbg !16714
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16715
  store i32 %25, i32* %26, align 4, !dbg !16715
  call void @llvm.dbg.declare(metadata i32* %16, metadata !16716, metadata !DIExpression()), !dbg !16717
  store i32 0, i32* %16, align 4, !dbg !16717
  br label %27, !dbg !16718

27:                                               ; preds = %2
  br label %28, !dbg !16719

28:                                               ; preds = %27
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !16721
  %30 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %29, i32 0, i32 0, !dbg !16723
  %31 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %30, i32 0, i32 3, !dbg !16724
  %32 = load i8, i8* %31, align 1, !dbg !16724
  %33 = zext i8 %32 to i32, !dbg !16721
  %34 = and i32 %33, 8, !dbg !16725
  %35 = icmp ne i32 %34, 0, !dbg !16726
  br i1 %35, label %36, label %37, !dbg !16727

36:                                               ; preds = %28
  store i32 0, i32* %16, align 4, !dbg !16728
  br label %81, !dbg !16730

37:                                               ; preds = %28
  %38 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !16731
  %39 = load i64, i64* %38, align 8, !dbg !16731
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %17, i32 0, i32 0, !dbg !16731
  store i64 0, i64* %40, align 8, !dbg !16731
  %41 = icmp eq i64 %39, 0, !dbg !16731
  br i1 %41, label %42, label %43, !dbg !16733

42:                                               ; preds = %37
  store i32 -16, i32* %16, align 4, !dbg !16734
  br label %80, !dbg !16736

43:                                               ; preds = %37
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !16737
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16739
  %46 = icmp eq %struct.k_thread.203* %44, %45, !dbg !16740
  br i1 %46, label %55, label %47, !dbg !16741

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !16742
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !16743
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !16744
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !16744
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16745
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 3, !dbg !16746
  %54 = icmp eq %union.anon.192* %51, %53, !dbg !16747
  br i1 %54, label %55, label %56, !dbg !16748

55:                                               ; preds = %47, %43
  store i32 -45, i32* %16, align 4, !dbg !16749
  br label %79, !dbg !16751

56:                                               ; preds = %47
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16752
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !16754
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !16755
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %57, %union.anon.192* noundef %59) #10, !dbg !16756
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16757
  %61 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !16758
  %62 = bitcast i64* %61 to [1 x i64]*, !dbg !16758
  %63 = load [1 x i64], [1 x i64]* %62, align 8, !dbg !16758
  call void @add_thread_timeout(%struct.k_thread.203* noundef %60, [1 x i64] %63) #10, !dbg !16758
  br label %64, !dbg !16759

64:                                               ; preds = %56
  br label %65, !dbg !16760

65:                                               ; preds = %64
  %66 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16762
  %67 = bitcast i32* %66 to [1 x i32]*, !dbg !16762
  %68 = load [1 x i32], [1 x i32]* %67, align 4, !dbg !16762
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %70 = bitcast i32* %69 to [1 x i32]*
  store [1 x i32] %68, [1 x i32]* %70, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !14258, metadata !DIExpression()) #9, !dbg !16763
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !14264, metadata !DIExpression()) #9, !dbg !16765
  %71 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16766
  store %struct.k_spinlock.13* %71, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !14267, metadata !DIExpression()) #9, !dbg !16767
  %72 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16769
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16770
  %74 = load i32, i32* %73, align 4, !dbg !16770
  %75 = call i32 @z_swap_irqlock(i32 noundef %74) #13, !dbg !16771
  store i32 %75, i32* %16, align 4, !dbg !16772
  br label %76, !dbg !16773

76:                                               ; preds = %65
  br label %77, !dbg !16774

77:                                               ; preds = %76
  %78 = load i32, i32* %16, align 4, !dbg !16776
  store i32 %78, i32* %12, align 4, !dbg !16777
  br label %98, !dbg !16777

79:                                               ; preds = %55
  br label %80

80:                                               ; preds = %79, %42
  br label %81

81:                                               ; preds = %80, %36
  br label %82, !dbg !16778

82:                                               ; preds = %81
  br label %83, !dbg !16779

83:                                               ; preds = %82
  %84 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16781
  %85 = bitcast i32* %84 to [1 x i32]*, !dbg !16781
  %86 = load [1 x i32], [1 x i32]* %85, align 4, !dbg !16781
  %87 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %88 = bitcast i32* %87 to [1 x i32]*
  store [1 x i32] %86, [1 x i32]* %88, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13212, metadata !DIExpression()) #9, !dbg !16782
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13218, metadata !DIExpression()) #9, !dbg !16784
  %89 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16785
  %90 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16786
  %91 = load i32, i32* %90, align 4, !dbg !16786
  store i32 %91, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13222, metadata !DIExpression()) #9, !dbg !16787
  %92 = load i32, i32* %4, align 4, !dbg !16789
  %93 = icmp ne i32 %92, 0, !dbg !16790
  br i1 %93, label %94, label %95, !dbg !16791

94:                                               ; preds = %83
  br label %96, !dbg !16792

95:                                               ; preds = %83
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16793, !srcloc !13233
  br label %96, !dbg !16794

96:                                               ; preds = %94, %95
  %97 = load i32, i32* %16, align 4, !dbg !16795
  store i32 %97, i32* %12, align 4, !dbg !16796
  br label %98, !dbg !16796

98:                                               ; preds = %96, %77
  %99 = load i32, i32* %12, align 4, !dbg !16797
  ret i32 %99, !dbg !16797
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_sched_wake(%union.anon.192* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !16798 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i8, align 1
  %20 = alloca %union.anon.68, align 4
  %21 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !16801, metadata !DIExpression()), !dbg !16802
  store i32 %1, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !16803, metadata !DIExpression()), !dbg !16804
  store i8* %2, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !16805, metadata !DIExpression()), !dbg !16806
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !16807, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.declare(metadata i8* %19, metadata !16809, metadata !DIExpression()), !dbg !16810
  store i8 0, i8* %19, align 1, !dbg !16810
  call void @llvm.dbg.declare(metadata %union.anon.68* %20, metadata !16811, metadata !DIExpression()), !dbg !16813
  %22 = bitcast %union.anon.68* %20 to i8*, !dbg !16813
  call void @llvm.memset.p0i8.i32(i8* align 4 %22, i8 0, i32 4, i1 false), !dbg !16813
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !16814, metadata !DIExpression()), !dbg !16813
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !13172, metadata !DIExpression()) #9, !dbg !16815
  %23 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !16817
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13180, metadata !DIExpression()) #9, !dbg !16818
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13182, metadata !DIExpression()) #9, !dbg !16819
  %24 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16821, !srcloc !13187
  store i32 %24, i32* %6, align 4, !dbg !16821
  %25 = load i32, i32* %6, align 4, !dbg !16822
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !16823
  store i32 %25, i32* %26, align 4, !dbg !16824
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !16825
  %28 = load i32, i32* %27, align 4, !dbg !16825
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !16813
  store i32 %28, i32* %29, align 4, !dbg !16813
  br label %30, !dbg !16813

30:                                               ; preds = %73, %3
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16826
  %32 = load i32, i32* %31, align 4, !dbg !16826
  %33 = icmp ne i32 %32, 0, !dbg !16826
  %34 = xor i1 %33, true, !dbg !16826
  br i1 %34, label %35, label %75, !dbg !16813

35:                                               ; preds = %30
  %36 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !16828
  %37 = getelementptr inbounds %union.anon.192, %union.anon.192* %36, i32 0, i32 0, !dbg !16830
  %38 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %37) #10, !dbg !16831
  store %struct.k_thread.203* %38, %struct.k_thread.203** %18, align 4, !dbg !16832
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16833
  %40 = icmp ne %struct.k_thread.203* %39, null, !dbg !16835
  br i1 %40, label %41, label %59, !dbg !16836

41:                                               ; preds = %35
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16837
  %43 = load i32, i32* %16, align 4, !dbg !16839
  %44 = load i8*, i8** %17, align 4, !dbg !16840
  store %struct.k_thread.203* %42, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !16841, metadata !DIExpression()) #9, !dbg !16846
  store i32 %43, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !16848, metadata !DIExpression()) #9, !dbg !16849
  store i8* %44, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !16850, metadata !DIExpression()) #9, !dbg !16851
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !16852
  %46 = load i32, i32* %8, align 4, !dbg !16853
  store %struct.k_thread.203* %45, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !16677, metadata !DIExpression()), !dbg !16854
  store i32 %46, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16683, metadata !DIExpression()), !dbg !16856
  %47 = load i32, i32* %5, align 4, !dbg !16857
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !16858
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 6, !dbg !16859
  %50 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %49, i32 0, i32 1, !dbg !16860
  store i32 %47, i32* %50, align 4, !dbg !16861
  %51 = load i8*, i8** %9, align 4, !dbg !16862
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !16863
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !16864
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 6, !dbg !16865
  store i8* %51, i8** %54, align 4, !dbg !16866
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16867
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %55) #10, !dbg !16868
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16869
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !16870
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !16871
  call void @ready_thread(%struct.k_thread.203* noundef %58) #10, !dbg !16872
  store i8 1, i8* %19, align 1, !dbg !16873
  br label %59, !dbg !16874

59:                                               ; preds = %41, %35
  br label %60, !dbg !16875

60:                                               ; preds = %59
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !16826
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !16826
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !16826
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !13212, metadata !DIExpression()) #9, !dbg !16876
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13218, metadata !DIExpression()) #9, !dbg !16878
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !16879
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16880
  %68 = load i32, i32* %67, align 4, !dbg !16880
  store i32 %68, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !13222, metadata !DIExpression()) #9, !dbg !16881
  %69 = load i32, i32* %10, align 4, !dbg !16883
  %70 = icmp ne i32 %69, 0, !dbg !16884
  br i1 %70, label %71, label %72, !dbg !16885

71:                                               ; preds = %60
  br label %73, !dbg !16886

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16887, !srcloc !13233
  br label %73, !dbg !16888

73:                                               ; preds = %71, %72
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16826
  store i32 1, i32* %74, align 4, !dbg !16826
  br label %30, !dbg !16826, !llvm.loop !16889

75:                                               ; preds = %30
  %76 = load i8, i8* %19, align 1, !dbg !16891
  %77 = trunc i8 %76 to i1, !dbg !16891
  ret i1 %77, !dbg !16892
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_wait(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3, i8** noundef %4) #1 !dbg !16893 {
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %union.argument_value, align 8
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.192*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %13 = bitcast i32* %12 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %13, align 4
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0
  %15 = bitcast i64* %14 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %15, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16897, metadata !DIExpression()), !dbg !16898
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16899, metadata !DIExpression()), !dbg !16900
  store %union.anon.192* %2, %union.anon.192** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %9, metadata !16901, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.declare(metadata %union.argument_value* %7, metadata !16903, metadata !DIExpression()), !dbg !16904
  store i8** %4, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !16905, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16907, metadata !DIExpression()), !dbg !16908
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16909
  %17 = load %union.anon.192*, %union.anon.192** %9, align 4, !dbg !16910
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16911
  %19 = bitcast i32* %18 to [1 x i32]*, !dbg !16911
  %20 = load [1 x i32], [1 x i32]* %19, align 4, !dbg !16911
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0, !dbg !16911
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !16911
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !16911
  %24 = call i32 @z_pend_curr(%struct.k_spinlock.13* noundef %16, [1 x i32] %20, %union.anon.192* noundef %17, [1 x i64] %23) #10, !dbg !16911
  store i32 %24, i32* %11, align 4, !dbg !16908
  %25 = load i8**, i8*** %10, align 4, !dbg !16912
  %26 = icmp ne i8** %25, null, !dbg !16914
  br i1 %26, label %27, label %33, !dbg !16915

27:                                               ; preds = %5
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16916
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !16918
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 6, !dbg !16919
  %31 = load i8*, i8** %30, align 4, !dbg !16919
  %32 = load i8**, i8*** %10, align 4, !dbg !16920
  store i8* %31, i8** %32, align 4, !dbg !16921
  br label %33, !dbg !16922

33:                                               ; preds = %27, %5
  %34 = load i32, i32* %11, align 4, !dbg !16923
  ret i32 %34, !dbg !16924
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_data_copy() #1 !dbg !16925 {
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #10, !dbg !16927
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #10, !dbg !16928
  ret void, !dbg !16929
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_add_timeout(%struct._timeout.195* noundef %0, void (%struct._timeout.195*)* noundef %1, [1 x i64] %2) #1 !dbg !16930 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct._timeout.195*, align 4
  %12 = alloca void (%struct._timeout.195*)*, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %20, align 8
  store %struct._timeout.195* %0, %struct._timeout.195** %11, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %11, metadata !16937, metadata !DIExpression()), !dbg !16938
  store void (%struct._timeout.195*)* %1, void (%struct._timeout.195*)** %12, align 4
  call void @llvm.dbg.declare(metadata void (%struct._timeout.195*)** %12, metadata !16939, metadata !DIExpression()), !dbg !16940
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !16941, metadata !DIExpression()), !dbg !16942
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16943
  %22 = load i64, i64* %21, align 8, !dbg !16943
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !16943
  store i64 -1, i64* %23, align 8, !dbg !16943
  %24 = icmp eq i64 %22, -1, !dbg !16943
  br i1 %24, label %25, label %26, !dbg !16945

25:                                               ; preds = %3
  br label %145, !dbg !16946

26:                                               ; preds = %3
  %27 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %12, align 4, !dbg !16948
  %28 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16949
  %29 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %28, i32 0, i32 1, !dbg !16950
  store void (%struct._timeout.195*)* %27, void (%struct._timeout.195*)** %29, align 8, !dbg !16951
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !16952, metadata !DIExpression()), !dbg !16958
  %30 = bitcast %union.anon.68* %14 to i8*, !dbg !16958
  call void @llvm.memset.p0i8.i32(i8* align 4 %30, i8 0, i32 4, i1 false), !dbg !16958
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16959, metadata !DIExpression()), !dbg !16958
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16960, metadata !DIExpression()) #9, !dbg !16965
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16967
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16968, metadata !DIExpression()) #9, !dbg !16969
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16970, metadata !DIExpression()) #9, !dbg !16972
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16974, !srcloc !16975
  store i32 %32, i32* %5, align 4, !dbg !16974
  %33 = load i32, i32* %5, align 4, !dbg !16976
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16977
  store i32 %33, i32* %34, align 4, !dbg !16978
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16979
  %36 = load i32, i32* %35, align 4, !dbg !16979
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16958
  store i32 %36, i32* %37, align 4, !dbg !16958
  br label %38, !dbg !16958

38:                                               ; preds = %143, %26
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16980
  %40 = load i32, i32* %39, align 4, !dbg !16980
  %41 = icmp ne i32 %40, 0, !dbg !16980
  %42 = xor i1 %41, true, !dbg !16980
  br i1 %42, label %43, label %145, !dbg !16958

43:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !16982, metadata !DIExpression()), !dbg !16984
  %44 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16985
  %45 = load i64, i64* %44, align 8, !dbg !16985
  %46 = sub nsw i64 -2, %45, !dbg !16985
  %47 = icmp sge i64 %46, 0, !dbg !16987
  br i1 %47, label %48, label %63, !dbg !16988

48:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i64* %17, metadata !16989, metadata !DIExpression()), !dbg !16991
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16992
  %50 = load i64, i64* %49, align 8, !dbg !16992
  %51 = sub nsw i64 -2, %50, !dbg !16992
  %52 = load i64, i64* @curr_tick, align 8, !dbg !16993
  %53 = sub i64 %51, %52, !dbg !16994
  store i64 %53, i64* %17, align 8, !dbg !16991
  %54 = load i64, i64* %17, align 8, !dbg !16995
  %55 = icmp sgt i64 1, %54, !dbg !16995
  br i1 %55, label %56, label %57, !dbg !16995

56:                                               ; preds = %48
  br label %59, !dbg !16995

57:                                               ; preds = %48
  %58 = load i64, i64* %17, align 8, !dbg !16995
  br label %59, !dbg !16995

59:                                               ; preds = %57, %56
  %60 = phi i64 [ 1, %56 ], [ %58, %57 ], !dbg !16995
  %61 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16996
  %62 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %61, i32 0, i32 2, !dbg !16997
  store i64 %60, i64* %62, align 8, !dbg !16998
  br label %72, !dbg !16999

63:                                               ; preds = %43
  %64 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !17000
  %65 = load i64, i64* %64, align 8, !dbg !17000
  %66 = add nsw i64 %65, 1, !dbg !17002
  %67 = call i32 @elapsed.89() #10, !dbg !17003
  %68 = sext i32 %67 to i64, !dbg !17003
  %69 = add nsw i64 %66, %68, !dbg !17004
  %70 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17005
  %71 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %70, i32 0, i32 2, !dbg !17006
  store i64 %69, i64* %71, align 8, !dbg !17007
  br label %72

72:                                               ; preds = %63, %59
  %73 = call %struct._timeout.195* @first() #10, !dbg !17008
  store %struct._timeout.195* %73, %struct._timeout.195** %16, align 4, !dbg !17010
  br label %74, !dbg !17011

74:                                               ; preds = %105, %72
  %75 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17012
  %76 = icmp ne %struct._timeout.195* %75, null, !dbg !17014
  br i1 %76, label %77, label %108, !dbg !17015

77:                                               ; preds = %74
  %78 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17016
  %79 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %78, i32 0, i32 2, !dbg !17019
  %80 = load i64, i64* %79, align 8, !dbg !17019
  %81 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17020
  %82 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %81, i32 0, i32 2, !dbg !17021
  %83 = load i64, i64* %82, align 8, !dbg !17021
  %84 = icmp sgt i64 %80, %83, !dbg !17022
  br i1 %84, label %85, label %97, !dbg !17023

85:                                               ; preds = %77
  %86 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17024
  %87 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %86, i32 0, i32 2, !dbg !17026
  %88 = load i64, i64* %87, align 8, !dbg !17026
  %89 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17027
  %90 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %89, i32 0, i32 2, !dbg !17028
  %91 = load i64, i64* %90, align 8, !dbg !17029
  %92 = sub nsw i64 %91, %88, !dbg !17029
  store i64 %92, i64* %90, align 8, !dbg !17029
  %93 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17030
  %94 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %93, i32 0, i32 0, !dbg !17031
  %95 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17032
  %96 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %95, i32 0, i32 0, !dbg !17033
  call void @sys_dlist_insert.90(%struct._dnode.191* noundef %94, %struct._dnode.191* noundef %96) #10, !dbg !17034
  br label %108, !dbg !17035

97:                                               ; preds = %77
  %98 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17036
  %99 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %98, i32 0, i32 2, !dbg !17037
  %100 = load i64, i64* %99, align 8, !dbg !17037
  %101 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17038
  %102 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %101, i32 0, i32 2, !dbg !17039
  %103 = load i64, i64* %102, align 8, !dbg !17040
  %104 = sub nsw i64 %103, %100, !dbg !17040
  store i64 %104, i64* %102, align 8, !dbg !17040
  br label %105, !dbg !17041

105:                                              ; preds = %97
  %106 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17042
  %107 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %106) #10, !dbg !17043
  store %struct._timeout.195* %107, %struct._timeout.195** %16, align 4, !dbg !17044
  br label %74, !dbg !17045, !llvm.loop !17046

108:                                              ; preds = %85, %74
  %109 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17048
  %110 = icmp eq %struct._timeout.195* %109, null, !dbg !17050
  br i1 %110, label %111, label %114, !dbg !17051

111:                                              ; preds = %108
  %112 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17052
  %113 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %112, i32 0, i32 0, !dbg !17054
  call void @sys_dlist_append.91(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %113) #10, !dbg !17055
  br label %114, !dbg !17056

114:                                              ; preds = %111, %108
  %115 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !17057
  %116 = call %struct._timeout.195* @first() #10, !dbg !17059
  %117 = icmp eq %struct._timeout.195* %115, %116, !dbg !17060
  br i1 %117, label %118, label %129, !dbg !17061

118:                                              ; preds = %114
  call void @llvm.dbg.declare(metadata i32* %18, metadata !17062, metadata !DIExpression()), !dbg !17064
  %119 = call i32 @next_timeout() #10, !dbg !17065
  store i32 %119, i32* %18, align 4, !dbg !17064
  %120 = load i32, i32* %18, align 4, !dbg !17066
  %121 = icmp eq i32 %120, 0, !dbg !17068
  br i1 %121, label %126, label %122, !dbg !17069

122:                                              ; preds = %118
  %123 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17070
  %124 = load i32, i32* %18, align 4, !dbg !17071
  %125 = icmp ne i32 %123, %124, !dbg !17072
  br i1 %125, label %126, label %128, !dbg !17073

126:                                              ; preds = %122, %118
  %127 = load i32, i32* %18, align 4, !dbg !17074
  call void @sys_clock_set_timeout(i32 noundef %127, i1 noundef zeroext false) #10, !dbg !17076
  br label %128, !dbg !17077

128:                                              ; preds = %126, %122
  br label %129, !dbg !17078

129:                                              ; preds = %128, %114
  br label %130, !dbg !17079

130:                                              ; preds = %129
  %131 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16980
  %132 = bitcast i32* %131 to [1 x i32]*, !dbg !16980
  %133 = load [1 x i32], [1 x i32]* %132, align 4, !dbg !16980
  %134 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %135 = bitcast i32* %134 to [1 x i32]*
  store [1 x i32] %133, [1 x i32]* %135, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !17080, metadata !DIExpression()) #9, !dbg !17084
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !17086, metadata !DIExpression()) #9, !dbg !17087
  %136 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17088
  %137 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17089
  %138 = load i32, i32* %137, align 4, !dbg !17089
  store i32 %138, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17090, metadata !DIExpression()) #9, !dbg !17092
  %139 = load i32, i32* %4, align 4, !dbg !17094
  %140 = icmp ne i32 %139, 0, !dbg !17096
  br i1 %140, label %141, label %142, !dbg !17097

141:                                              ; preds = %130
  br label %143, !dbg !17098

142:                                              ; preds = %130
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17100, !srcloc !17101
  br label %143, !dbg !17102

143:                                              ; preds = %141, %142
  %144 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16980
  store i32 1, i32* %144, align 4, !dbg !16980
  br label %38, !dbg !16980, !llvm.loop !17103

145:                                              ; preds = %25, %38
  ret void, !dbg !17105
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed.89() #1 !dbg !17106 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17109
  %2 = icmp eq i32 %1, 0, !dbg !17110
  br i1 %2, label %3, label %5, !dbg !17109

3:                                                ; preds = %0
  %4 = call i32 @sys_clock_elapsed() #10, !dbg !17111
  br label %6, !dbg !17109

5:                                                ; preds = %0
  br label %6, !dbg !17109

6:                                                ; preds = %5, %3
  %7 = phi i32 [ %4, %3 ], [ 0, %5 ], !dbg !17109
  ret i32 %7, !dbg !17112
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @first() #1 !dbg !17113 {
  %1 = alloca %struct._dnode.191*, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !17116, metadata !DIExpression()), !dbg !17118
  %2 = call %struct._dnode.191* @sys_dlist_peek_head.94(%struct._dnode.191* noundef @timeout_list) #10, !dbg !17119
  store %struct._dnode.191* %2, %struct._dnode.191** %1, align 4, !dbg !17118
  %3 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !17120
  %4 = icmp eq %struct._dnode.191* %3, null, !dbg !17121
  br i1 %4, label %5, label %6, !dbg !17120

5:                                                ; preds = %0
  br label %11, !dbg !17120

6:                                                ; preds = %0
  %7 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !17122
  %8 = bitcast %struct._dnode.191* %7 to i8*, !dbg !17122
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !17122
  %10 = bitcast i8* %9 to %struct._timeout.195*, !dbg !17122
  br label %11, !dbg !17120

11:                                               ; preds = %6, %5
  %12 = phi %struct._timeout.195* [ null, %5 ], [ %10, %6 ], !dbg !17120
  ret %struct._timeout.195* %12, !dbg !17123
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert.90(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !17124 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17127, metadata !DIExpression()), !dbg !17128
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !17129, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !17131, metadata !DIExpression()), !dbg !17133
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17134
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !17135
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !17135
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !17135
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !17133
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17136
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17137
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !17138
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !17138
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !17139
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17140
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17141
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !17142
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !17142
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !17143
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17144
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17145
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !17146
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !17146
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !17147
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17148
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17149
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !17150
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !17150
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !17151
  ret void, !dbg !17152
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @next(%struct._timeout.195* noundef %0) #1 !dbg !17153 {
  %2 = alloca %struct._timeout.195*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !17156, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17158, metadata !DIExpression()), !dbg !17159
  %4 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17160
  %5 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %4, i32 0, i32 0, !dbg !17161
  %6 = call %struct._dnode.191* @sys_dlist_peek_next.92(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %5) #10, !dbg !17162
  store %struct._dnode.191* %6, %struct._dnode.191** %3, align 4, !dbg !17159
  %7 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17163
  %8 = icmp eq %struct._dnode.191* %7, null, !dbg !17164
  br i1 %8, label %9, label %10, !dbg !17163

9:                                                ; preds = %1
  br label %15, !dbg !17163

10:                                               ; preds = %1
  %11 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17165
  %12 = bitcast %struct._dnode.191* %11 to i8*, !dbg !17165
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !17165
  %14 = bitcast i8* %13 to %struct._timeout.195*, !dbg !17165
  br label %15, !dbg !17163

15:                                               ; preds = %10, %9
  %16 = phi %struct._timeout.195* [ null, %9 ], [ %14, %10 ], !dbg !17163
  ret %struct._timeout.195* %16, !dbg !17166
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append.91(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !17167 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17171, metadata !DIExpression()), !dbg !17172
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !17173, metadata !DIExpression()), !dbg !17174
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !17175, metadata !DIExpression()), !dbg !17176
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17177
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !17178
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !17178
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !17178
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !17176
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17179
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17180
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !17181
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !17181
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !17182
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17183
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17184
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !17185
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !17185
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !17186
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17187
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17188
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !17189
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !17189
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !17190
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17191
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17192
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !17193
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !17193
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !17194
  ret void, !dbg !17195
}

; Function Attrs: noinline nounwind optnone
define internal i32 @next_timeout() #1 !dbg !17196 {
  %1 = alloca %struct._timeout.195*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %1, metadata !17197, metadata !DIExpression()), !dbg !17198
  %4 = call %struct._timeout.195* @first() #10, !dbg !17199
  store %struct._timeout.195* %4, %struct._timeout.195** %1, align 4, !dbg !17198
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17200, metadata !DIExpression()), !dbg !17201
  %5 = call i32 @elapsed.89() #10, !dbg !17202
  store i32 %5, i32* %2, align 4, !dbg !17201
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17203, metadata !DIExpression()), !dbg !17204
  %6 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !17205
  %7 = icmp eq %struct._timeout.195* %6, null, !dbg !17207
  br i1 %7, label %16, label %8, !dbg !17208

8:                                                ; preds = %0
  %9 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !17209
  %10 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %9, i32 0, i32 2, !dbg !17210
  %11 = load i64, i64* %10, align 8, !dbg !17210
  %12 = load i32, i32* %2, align 4, !dbg !17211
  %13 = sext i32 %12 to i64, !dbg !17211
  %14 = sub nsw i64 %11, %13, !dbg !17212
  %15 = icmp sgt i64 %14, 2147483647, !dbg !17213
  br i1 %15, label %16, label %17, !dbg !17214

16:                                               ; preds = %8, %0
  store i32 2147483647, i32* %3, align 4, !dbg !17215
  br label %36, !dbg !17217

17:                                               ; preds = %8
  %18 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !17218
  %19 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %18, i32 0, i32 2, !dbg !17218
  %20 = load i64, i64* %19, align 8, !dbg !17218
  %21 = load i32, i32* %2, align 4, !dbg !17218
  %22 = sext i32 %21 to i64, !dbg !17218
  %23 = sub nsw i64 %20, %22, !dbg !17218
  %24 = icmp sgt i64 0, %23, !dbg !17218
  br i1 %24, label %25, label %26, !dbg !17218

25:                                               ; preds = %17
  br label %33, !dbg !17218

26:                                               ; preds = %17
  %27 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !17218
  %28 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %27, i32 0, i32 2, !dbg !17218
  %29 = load i64, i64* %28, align 8, !dbg !17218
  %30 = load i32, i32* %2, align 4, !dbg !17218
  %31 = sext i32 %30 to i64, !dbg !17218
  %32 = sub nsw i64 %29, %31, !dbg !17218
  br label %33, !dbg !17218

33:                                               ; preds = %26, %25
  %34 = phi i64 [ 0, %25 ], [ %32, %26 ], !dbg !17218
  %35 = trunc i64 %34 to i32, !dbg !17218
  store i32 %35, i32* %3, align 4, !dbg !17220
  br label %36

36:                                               ; preds = %33, %16
  %37 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17221
  %38 = icmp ne i32 %37, 0, !dbg !17223
  br i1 %38, label %39, label %45, !dbg !17224

39:                                               ; preds = %36
  %40 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17225
  %41 = load i32, i32* %3, align 4, !dbg !17226
  %42 = icmp slt i32 %40, %41, !dbg !17227
  br i1 %42, label %43, label %45, !dbg !17228

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17229
  store i32 %44, i32* %3, align 4, !dbg !17231
  br label %45, !dbg !17232

45:                                               ; preds = %43, %39, %36
  %46 = load i32, i32* %3, align 4, !dbg !17233
  ret i32 %46, !dbg !17234
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next.92(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !17235 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17238, metadata !DIExpression()), !dbg !17239
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !17240, metadata !DIExpression()), !dbg !17241
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17242
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !17243
  br i1 %6, label %7, label %11, !dbg !17244

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17245
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17246
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check.93(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !17247
  br label %12, !dbg !17244

11:                                               ; preds = %2
  br label %12, !dbg !17244

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !17244
  ret %struct._dnode.191* %13, !dbg !17248
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check.93(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !17249 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17250, metadata !DIExpression()), !dbg !17251
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !17252, metadata !DIExpression()), !dbg !17253
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17254
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17255
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !17256
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !17256
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !17256
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !17257
  br i1 %10, label %11, label %12, !dbg !17258

11:                                               ; preds = %2
  br label %17, !dbg !17258

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17259
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !17260
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !17260
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !17260
  br label %17, !dbg !17258

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !17258
  ret %struct._dnode.191* %18, !dbg !17261
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head.94(%struct._dnode.191* noundef %0) #1 !dbg !17262 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !17265, metadata !DIExpression()), !dbg !17266
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17267
  %4 = call zeroext i1 @sys_dlist_is_empty.95(%struct._dnode.191* noundef %3) #10, !dbg !17268
  br i1 %4, label %5, label %6, !dbg !17268

5:                                                ; preds = %1
  br label %11, !dbg !17268

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17269
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !17270
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !17270
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !17270
  br label %11, !dbg !17268

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !17268
  ret %struct._dnode.191* %12, !dbg !17271
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty.95(%struct._dnode.191* noundef %0) #1 !dbg !17272 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !17275, metadata !DIExpression()), !dbg !17276
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17277
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !17278
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !17278
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17278
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17279
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !17280
  ret i1 %8, !dbg !17281
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_abort_timeout(%struct._timeout.195* noundef %0) #1 !dbg !17282 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !17285, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17287, metadata !DIExpression()), !dbg !17288
  store i32 -22, i32* %9, align 4, !dbg !17288
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !17289, metadata !DIExpression()), !dbg !17291
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !17291
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !17291
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !17292, metadata !DIExpression()), !dbg !17291
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16960, metadata !DIExpression()) #9, !dbg !17293
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17295
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16968, metadata !DIExpression()) #9, !dbg !17296
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16970, metadata !DIExpression()) #9, !dbg !17297
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17299, !srcloc !16975
  store i32 %14, i32* %3, align 4, !dbg !17299
  %15 = load i32, i32* %3, align 4, !dbg !17300
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17301
  store i32 %15, i32* %16, align 4, !dbg !17302
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17303
  %18 = load i32, i32* %17, align 4, !dbg !17303
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17291
  store i32 %18, i32* %19, align 4, !dbg !17291
  br label %20, !dbg !17291

20:                                               ; preds = %45, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17304
  %22 = load i32, i32* %21, align 4, !dbg !17304
  %23 = icmp ne i32 %22, 0, !dbg !17304
  %24 = xor i1 %23, true, !dbg !17304
  br i1 %24, label %25, label %47, !dbg !17291

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !17306
  %27 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %26, i32 0, i32 0, !dbg !17309
  %28 = call zeroext i1 @sys_dnode_is_linked.98(%struct._dnode.191* noundef %27) #10, !dbg !17310
  br i1 %28, label %29, label %31, !dbg !17311

29:                                               ; preds = %25
  %30 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !17312
  call void @remove_timeout(%struct._timeout.195* noundef %30) #10, !dbg !17314
  store i32 0, i32* %9, align 4, !dbg !17315
  br label %31, !dbg !17316

31:                                               ; preds = %29, %25
  br label %32, !dbg !17317

32:                                               ; preds = %31
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17304
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !17304
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !17304
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !17080, metadata !DIExpression()) #9, !dbg !17318
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !17086, metadata !DIExpression()) #9, !dbg !17320
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !17321
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !17322
  %40 = load i32, i32* %39, align 4, !dbg !17322
  store i32 %40, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17090, metadata !DIExpression()) #9, !dbg !17323
  %41 = load i32, i32* %2, align 4, !dbg !17325
  %42 = icmp ne i32 %41, 0, !dbg !17326
  br i1 %42, label %43, label %44, !dbg !17327

43:                                               ; preds = %32
  br label %45, !dbg !17328

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17329, !srcloc !17101
  br label %45, !dbg !17330

45:                                               ; preds = %43, %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17304
  store i32 1, i32* %46, align 4, !dbg !17304
  br label %20, !dbg !17304, !llvm.loop !17331

47:                                               ; preds = %20
  %48 = load i32, i32* %9, align 4, !dbg !17333
  ret i32 %48, !dbg !17334
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked.98(%struct._dnode.191* noundef %0) #1 !dbg !17335 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !17340, metadata !DIExpression()), !dbg !17341
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17342
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !17343
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !17343
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !17343
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !17344
  ret i1 %7, !dbg !17345
}

; Function Attrs: noinline nounwind optnone
define internal void @remove_timeout(%struct._timeout.195* noundef %0) #1 !dbg !17346 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !17347, metadata !DIExpression()), !dbg !17348
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17349
  %4 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %3) #10, !dbg !17351
  %5 = icmp ne %struct._timeout.195* %4, null, !dbg !17352
  br i1 %5, label %6, label %15, !dbg !17353

6:                                                ; preds = %1
  %7 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17354
  %8 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %7, i32 0, i32 2, !dbg !17356
  %9 = load i64, i64* %8, align 8, !dbg !17356
  %10 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17357
  %11 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %10) #10, !dbg !17358
  %12 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %11, i32 0, i32 2, !dbg !17359
  %13 = load i64, i64* %12, align 8, !dbg !17360
  %14 = add nsw i64 %13, %9, !dbg !17360
  store i64 %14, i64* %12, align 8, !dbg !17360
  br label %15, !dbg !17361

15:                                               ; preds = %6, %1
  %16 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17362
  %17 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %16, i32 0, i32 0, !dbg !17363
  call void @sys_dlist_remove.99(%struct._dnode.191* noundef %17) #10, !dbg !17364
  ret void, !dbg !17365
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove.99(%struct._dnode.191* noundef %0) #1 !dbg !17366 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !17369, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !17371, metadata !DIExpression()), !dbg !17372
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17373
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !17374
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !17374
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !17374
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !17372
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !17375, metadata !DIExpression()), !dbg !17376
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17377
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !17378
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !17378
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !17378
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !17376
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17379
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17380
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !17381
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !17381
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !17382
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !17383
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !17384
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !17385
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !17385
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !17386
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17387
  call void @sys_dnode_init.100(%struct._dnode.191* noundef %21) #10, !dbg !17388
  ret void, !dbg !17389
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.100(%struct._dnode.191* noundef %0) #1 !dbg !17390 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !17391, metadata !DIExpression()), !dbg !17392
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17393
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !17394
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !17394
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !17395
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !17396
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !17397
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !17397
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !17398
  ret void, !dbg !17399
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_remaining(%struct._timeout.195* noundef %0) #1 !dbg !17400 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !17405, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.declare(metadata i64* %9, metadata !17407, metadata !DIExpression()), !dbg !17408
  store i64 0, i64* %9, align 8, !dbg !17408
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !17409, metadata !DIExpression()), !dbg !17411
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !17411
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !17411
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !17412, metadata !DIExpression()), !dbg !17411
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16960, metadata !DIExpression()) #9, !dbg !17413
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17415
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16968, metadata !DIExpression()) #9, !dbg !17416
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16970, metadata !DIExpression()) #9, !dbg !17417
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17419, !srcloc !16975
  store i32 %14, i32* %3, align 4, !dbg !17419
  %15 = load i32, i32* %3, align 4, !dbg !17420
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17421
  store i32 %15, i32* %16, align 4, !dbg !17422
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17423
  %18 = load i32, i32* %17, align 4, !dbg !17423
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17411
  store i32 %18, i32* %19, align 4, !dbg !17411
  br label %20, !dbg !17411

20:                                               ; preds = %41, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17424
  %22 = load i32, i32* %21, align 4, !dbg !17424
  %23 = icmp ne i32 %22, 0, !dbg !17424
  %24 = xor i1 %23, true, !dbg !17424
  br i1 %24, label %25, label %43, !dbg !17411

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !17426
  %27 = call i64 @timeout_rem(%struct._timeout.195* noundef %26) #10, !dbg !17428
  store i64 %27, i64* %9, align 8, !dbg !17429
  br label %28, !dbg !17430

28:                                               ; preds = %25
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17424
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !17424
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !17424
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !17080, metadata !DIExpression()) #9, !dbg !17431
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !17086, metadata !DIExpression()) #9, !dbg !17433
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !17434
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !17435
  %36 = load i32, i32* %35, align 4, !dbg !17435
  store i32 %36, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17090, metadata !DIExpression()) #9, !dbg !17436
  %37 = load i32, i32* %2, align 4, !dbg !17438
  %38 = icmp ne i32 %37, 0, !dbg !17439
  br i1 %38, label %39, label %40, !dbg !17440

39:                                               ; preds = %28
  br label %41, !dbg !17441

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17442, !srcloc !17101
  br label %41, !dbg !17443

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17424
  store i32 1, i32* %42, align 4, !dbg !17424
  br label %20, !dbg !17424, !llvm.loop !17444

43:                                               ; preds = %20
  %44 = load i64, i64* %9, align 8, !dbg !17446
  ret i64 %44, !dbg !17447
}

; Function Attrs: noinline nounwind optnone
define internal i64 @timeout_rem(%struct._timeout.195* noundef %0) #1 !dbg !17448 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._timeout.195*, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %3, metadata !17449, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %4, metadata !17451, metadata !DIExpression()), !dbg !17452
  store i64 0, i64* %4, align 8, !dbg !17452
  %6 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !17453
  %7 = call zeroext i1 @z_is_inactive_timeout.101(%struct._timeout.195* noundef %6) #10, !dbg !17455
  br i1 %7, label %8, label %9, !dbg !17456

8:                                                ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !17457
  br label %33, !dbg !17457

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %5, metadata !17459, metadata !DIExpression()), !dbg !17461
  %10 = call %struct._timeout.195* @first() #10, !dbg !17462
  store %struct._timeout.195* %10, %struct._timeout.195** %5, align 4, !dbg !17461
  br label %11, !dbg !17463

11:                                               ; preds = %25, %9
  %12 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !17464
  %13 = icmp ne %struct._timeout.195* %12, null, !dbg !17466
  br i1 %13, label %14, label %28, !dbg !17467

14:                                               ; preds = %11
  %15 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !17468
  %16 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %15, i32 0, i32 2, !dbg !17470
  %17 = load i64, i64* %16, align 8, !dbg !17470
  %18 = load i64, i64* %4, align 8, !dbg !17471
  %19 = add nsw i64 %18, %17, !dbg !17471
  store i64 %19, i64* %4, align 8, !dbg !17471
  %20 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !17472
  %21 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !17474
  %22 = icmp eq %struct._timeout.195* %20, %21, !dbg !17475
  br i1 %22, label %23, label %24, !dbg !17476

23:                                               ; preds = %14
  br label %28, !dbg !17477

24:                                               ; preds = %14
  br label %25, !dbg !17479

25:                                               ; preds = %24
  %26 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !17480
  %27 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %26) #10, !dbg !17481
  store %struct._timeout.195* %27, %struct._timeout.195** %5, align 4, !dbg !17482
  br label %11, !dbg !17483, !llvm.loop !17484

28:                                               ; preds = %23, %11
  %29 = load i64, i64* %4, align 8, !dbg !17486
  %30 = call i32 @elapsed.89() #10, !dbg !17487
  %31 = sext i32 %30 to i64, !dbg !17487
  %32 = sub nsw i64 %29, %31, !dbg !17488
  store i64 %32, i64* %2, align 8, !dbg !17489
  br label %33, !dbg !17489

33:                                               ; preds = %28, %8
  %34 = load i64, i64* %2, align 8, !dbg !17490
  ret i64 %34, !dbg !17490
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout.101(%struct._timeout.195* noundef %0) #1 !dbg !17491 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !17494, metadata !DIExpression()), !dbg !17495
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !17496
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !17497
  %5 = call zeroext i1 @sys_dnode_is_linked.98(%struct._dnode.191* noundef %4) #10, !dbg !17498
  %6 = xor i1 %5, true, !dbg !17499
  ret i1 %6, !dbg !17500
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_expires(%struct._timeout.195* noundef %0) #1 !dbg !17501 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !17502, metadata !DIExpression()), !dbg !17503
  call void @llvm.dbg.declare(metadata i64* %9, metadata !17504, metadata !DIExpression()), !dbg !17505
  store i64 0, i64* %9, align 8, !dbg !17505
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !17506, metadata !DIExpression()), !dbg !17508
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !17508
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !17508
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !17509, metadata !DIExpression()), !dbg !17508
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16960, metadata !DIExpression()) #9, !dbg !17510
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17512
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16968, metadata !DIExpression()) #9, !dbg !17513
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16970, metadata !DIExpression()) #9, !dbg !17514
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17516, !srcloc !16975
  store i32 %14, i32* %3, align 4, !dbg !17516
  %15 = load i32, i32* %3, align 4, !dbg !17517
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17518
  store i32 %15, i32* %16, align 4, !dbg !17519
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17520
  %18 = load i32, i32* %17, align 4, !dbg !17520
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17508
  store i32 %18, i32* %19, align 4, !dbg !17508
  br label %20, !dbg !17508

20:                                               ; preds = %43, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17521
  %22 = load i32, i32* %21, align 4, !dbg !17521
  %23 = icmp ne i32 %22, 0, !dbg !17521
  %24 = xor i1 %23, true, !dbg !17521
  br i1 %24, label %25, label %45, !dbg !17508

25:                                               ; preds = %20
  %26 = load i64, i64* @curr_tick, align 8, !dbg !17523
  %27 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !17525
  %28 = call i64 @timeout_rem(%struct._timeout.195* noundef %27) #10, !dbg !17526
  %29 = add i64 %26, %28, !dbg !17527
  store i64 %29, i64* %9, align 8, !dbg !17528
  br label %30, !dbg !17529

30:                                               ; preds = %25
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17521
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !17521
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !17521
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !17080, metadata !DIExpression()) #9, !dbg !17530
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !17086, metadata !DIExpression()) #9, !dbg !17532
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !17533
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !17534
  %38 = load i32, i32* %37, align 4, !dbg !17534
  store i32 %38, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17090, metadata !DIExpression()) #9, !dbg !17535
  %39 = load i32, i32* %2, align 4, !dbg !17537
  %40 = icmp ne i32 %39, 0, !dbg !17538
  br i1 %40, label %41, label %42, !dbg !17539

41:                                               ; preds = %30
  br label %43, !dbg !17540

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17541, !srcloc !17101
  br label %43, !dbg !17542

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17521
  store i32 1, i32* %44, align 4, !dbg !17521
  br label %20, !dbg !17521, !llvm.loop !17543

45:                                               ; preds = %20
  %46 = load i64, i64* %9, align 8, !dbg !17545
  ret i64 %46, !dbg !17546
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_get_next_timeout_expiry() #1 !dbg !17547 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !17548, metadata !DIExpression()), !dbg !17549
  store i32 -1, i32* %7, align 4, !dbg !17549
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !17550, metadata !DIExpression()), !dbg !17552
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !17552
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !17552
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !17553, metadata !DIExpression()), !dbg !17552
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16960, metadata !DIExpression()) #9, !dbg !17554
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !17556
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16968, metadata !DIExpression()) #9, !dbg !17557
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16970, metadata !DIExpression()) #9, !dbg !17558
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17560, !srcloc !16975
  store i32 %12, i32* %2, align 4, !dbg !17560
  %13 = load i32, i32* %2, align 4, !dbg !17561
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17562
  store i32 %13, i32* %14, align 4, !dbg !17563
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17564
  %16 = load i32, i32* %15, align 4, !dbg !17564
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17552
  store i32 %16, i32* %17, align 4, !dbg !17552
  br label %18, !dbg !17552

18:                                               ; preds = %38, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17565
  %20 = load i32, i32* %19, align 4, !dbg !17565
  %21 = icmp ne i32 %20, 0, !dbg !17565
  %22 = xor i1 %21, true, !dbg !17565
  br i1 %22, label %23, label %40, !dbg !17552

23:                                               ; preds = %18
  %24 = call i32 @next_timeout() #10, !dbg !17567
  store i32 %24, i32* %7, align 4, !dbg !17569
  br label %25, !dbg !17570

25:                                               ; preds = %23
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17565
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !17565
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !17565
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !17080, metadata !DIExpression()) #9, !dbg !17571
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !17086, metadata !DIExpression()) #9, !dbg !17573
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !17574
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !17575
  %33 = load i32, i32* %32, align 4, !dbg !17575
  store i32 %33, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !17090, metadata !DIExpression()) #9, !dbg !17576
  %34 = load i32, i32* %1, align 4, !dbg !17578
  %35 = icmp ne i32 %34, 0, !dbg !17579
  br i1 %35, label %36, label %37, !dbg !17580

36:                                               ; preds = %25
  br label %38, !dbg !17581

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17582, !srcloc !17101
  br label %38, !dbg !17583

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17565
  store i32 1, i32* %39, align 4, !dbg !17565
  br label %18, !dbg !17565, !llvm.loop !17584

40:                                               ; preds = %18
  %41 = load i32, i32* %7, align 4, !dbg !17586
  ret i32 %41, !dbg !17587
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !17588 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !17589, metadata !DIExpression()), !dbg !17590
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !17593, metadata !DIExpression()), !dbg !17595
  %17 = bitcast %union.anon.68* %11 to i8*, !dbg !17595
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !17595
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !17596, metadata !DIExpression()), !dbg !17595
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16960, metadata !DIExpression()) #9, !dbg !17597
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !17599
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16968, metadata !DIExpression()) #9, !dbg !17600
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16970, metadata !DIExpression()) #9, !dbg !17601
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17603, !srcloc !16975
  store i32 %19, i32* %4, align 4, !dbg !17603
  %20 = load i32, i32* %4, align 4, !dbg !17604
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !17605
  store i32 %20, i32* %21, align 4, !dbg !17606
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !17607
  %23 = load i32, i32* %22, align 4, !dbg !17607
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17595
  store i32 %23, i32* %24, align 4, !dbg !17595
  br label %25, !dbg !17595

25:                                               ; preds = %76, %2
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17608
  %27 = load i32, i32* %26, align 4, !dbg !17608
  %28 = icmp ne i32 %27, 0, !dbg !17608
  %29 = xor i1 %28, true, !dbg !17608
  br i1 %29, label %30, label %78, !dbg !17595

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %13, metadata !17610, metadata !DIExpression()), !dbg !17612
  %31 = call i32 @next_timeout() #10, !dbg !17613
  store i32 %31, i32* %13, align 4, !dbg !17612
  call void @llvm.dbg.declare(metadata i8* %14, metadata !17614, metadata !DIExpression()), !dbg !17615
  %32 = load i32, i32* %13, align 4, !dbg !17616
  %33 = sext i32 %32 to i64, !dbg !17616
  %34 = icmp eq i64 %33, -1, !dbg !17617
  br i1 %34, label %39, label %35, !dbg !17618

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !17619
  %37 = load i32, i32* %13, align 4, !dbg !17620
  %38 = icmp sle i32 %36, %37, !dbg !17621
  br label %39, !dbg !17618

39:                                               ; preds = %35, %30
  %40 = phi i1 [ true, %30 ], [ %38, %35 ]
  %41 = zext i1 %40 to i8, !dbg !17615
  store i8 %41, i8* %14, align 1, !dbg !17615
  call void @llvm.dbg.declare(metadata i8* %15, metadata !17622, metadata !DIExpression()), !dbg !17623
  %42 = load i32, i32* %13, align 4, !dbg !17624
  %43 = icmp sle i32 %42, 1, !dbg !17625
  %44 = zext i1 %43 to i8, !dbg !17623
  store i8 %44, i8* %15, align 1, !dbg !17623
  %45 = load i8, i8* %15, align 1, !dbg !17626
  %46 = trunc i8 %45 to i1, !dbg !17626
  br i1 %46, label %62, label %47, !dbg !17628

47:                                               ; preds = %39
  %48 = load i8, i8* %14, align 1, !dbg !17629
  %49 = trunc i8 %48 to i1, !dbg !17629
  br i1 %49, label %50, label %62, !dbg !17630

50:                                               ; preds = %47
  %51 = load i32, i32* %9, align 4, !dbg !17631
  %52 = load i32, i32* %13, align 4, !dbg !17631
  %53 = icmp slt i32 %51, %52, !dbg !17631
  br i1 %53, label %54, label %56, !dbg !17631

54:                                               ; preds = %50
  %55 = load i32, i32* %9, align 4, !dbg !17631
  br label %58, !dbg !17631

56:                                               ; preds = %50
  %57 = load i32, i32* %13, align 4, !dbg !17631
  br label %58, !dbg !17631

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ], !dbg !17631
  %60 = load i8, i8* %10, align 1, !dbg !17633
  %61 = trunc i8 %60 to i1, !dbg !17633
  call void @sys_clock_set_timeout(i32 noundef %59, i1 noundef zeroext %61) #10, !dbg !17634
  br label %62, !dbg !17635

62:                                               ; preds = %58, %47, %39
  br label %63, !dbg !17636

63:                                               ; preds = %62
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17608
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !17608
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !17608
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !17080, metadata !DIExpression()) #9, !dbg !17637
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !17086, metadata !DIExpression()) #9, !dbg !17639
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !17640
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17641
  %71 = load i32, i32* %70, align 4, !dbg !17641
  store i32 %71, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17090, metadata !DIExpression()) #9, !dbg !17642
  %72 = load i32, i32* %3, align 4, !dbg !17644
  %73 = icmp ne i32 %72, 0, !dbg !17645
  br i1 %73, label %74, label %75, !dbg !17646

74:                                               ; preds = %63
  br label %76, !dbg !17647

75:                                               ; preds = %63
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17648, !srcloc !17101
  br label %76, !dbg !17649

76:                                               ; preds = %74, %75
  %77 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17608
  store i32 1, i32* %77, align 4, !dbg !17608
  br label %25, !dbg !17608, !llvm.loop !17650

78:                                               ; preds = %25
  ret void, !dbg !17652
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_announce(i32 noundef %0) #1 !dbg !17653 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i32, align 4
  %18 = alloca %union.anon.68, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !17656, metadata !DIExpression()), !dbg !17657
  %19 = load i32, i32* %14, align 4, !dbg !17658
  call void @z_time_slice(i32 noundef %19) #10, !dbg !17659
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !17660, metadata !DIExpression()), !dbg !17661
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !16960, metadata !DIExpression()) #9, !dbg !17662
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !17664
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16968, metadata !DIExpression()) #9, !dbg !17665
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16970, metadata !DIExpression()) #9, !dbg !17666
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17668, !srcloc !16975
  store i32 %21, i32* %5, align 4, !dbg !17668
  %22 = load i32, i32* %5, align 4, !dbg !17669
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17670
  store i32 %22, i32* %23, align 4, !dbg !17671
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17672
  %25 = load i32, i32* %24, align 4, !dbg !17672
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !17673
  store i32 %25, i32* %26, align 4, !dbg !17673
  %27 = load i32, i32* %14, align 4, !dbg !17674
  store i32 %27, i32* @announce_remaining, align 4, !dbg !17675
  br label %28, !dbg !17676

28:                                               ; preds = %65, %1
  %29 = call %struct._timeout.195* @first() #10, !dbg !17677
  %30 = icmp ne %struct._timeout.195* %29, null, !dbg !17678
  br i1 %30, label %31, label %38, !dbg !17679

31:                                               ; preds = %28
  %32 = call %struct._timeout.195* @first() #10, !dbg !17680
  %33 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %32, i32 0, i32 2, !dbg !17681
  %34 = load i64, i64* %33, align 8, !dbg !17681
  %35 = load i32, i32* @announce_remaining, align 4, !dbg !17682
  %36 = sext i32 %35 to i64, !dbg !17682
  %37 = icmp sle i64 %34, %36, !dbg !17683
  br label %38

38:                                               ; preds = %31, %28
  %39 = phi i1 [ false, %28 ], [ %37, %31 ], !dbg !17684
  br i1 %39, label %40, label %82, !dbg !17676

40:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !17685, metadata !DIExpression()), !dbg !17687
  %41 = call %struct._timeout.195* @first() #10, !dbg !17688
  store %struct._timeout.195* %41, %struct._timeout.195** %16, align 4, !dbg !17687
  call void @llvm.dbg.declare(metadata i32* %17, metadata !17689, metadata !DIExpression()), !dbg !17690
  %42 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17691
  %43 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %42, i32 0, i32 2, !dbg !17692
  %44 = load i64, i64* %43, align 8, !dbg !17692
  %45 = trunc i64 %44 to i32, !dbg !17691
  store i32 %45, i32* %17, align 4, !dbg !17690
  %46 = load i32, i32* %17, align 4, !dbg !17693
  %47 = sext i32 %46 to i64, !dbg !17693
  %48 = load i64, i64* @curr_tick, align 8, !dbg !17694
  %49 = add i64 %48, %47, !dbg !17694
  store i64 %49, i64* @curr_tick, align 8, !dbg !17694
  %50 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17695
  %51 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %50, i32 0, i32 2, !dbg !17696
  store i64 0, i64* %51, align 8, !dbg !17697
  %52 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17698
  call void @remove_timeout(%struct._timeout.195* noundef %52) #10, !dbg !17699
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !17700
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !17700
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !17700
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !17080, metadata !DIExpression()) #9, !dbg !17701
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !17086, metadata !DIExpression()) #9, !dbg !17703
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17704
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17705
  %60 = load i32, i32* %59, align 4, !dbg !17705
  store i32 %60, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17090, metadata !DIExpression()) #9, !dbg !17706
  %61 = load i32, i32* %3, align 4, !dbg !17708
  %62 = icmp ne i32 %61, 0, !dbg !17709
  br i1 %62, label %63, label %64, !dbg !17710

63:                                               ; preds = %40
  br label %65, !dbg !17711

64:                                               ; preds = %40
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17712, !srcloc !17101
  br label %65, !dbg !17713

65:                                               ; preds = %63, %64
  %66 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17714
  %67 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %66, i32 0, i32 1, !dbg !17715
  %68 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %67, align 8, !dbg !17715
  %69 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !17716
  call void %68(%struct._timeout.195* noundef %69) #10, !dbg !17714
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !16960, metadata !DIExpression()) #9, !dbg !17717
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !17719
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16968, metadata !DIExpression()) #9, !dbg !17720
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16970, metadata !DIExpression()) #9, !dbg !17721
  %71 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17723, !srcloc !16975
  store i32 %71, i32* %4, align 4, !dbg !17723
  %72 = load i32, i32* %4, align 4, !dbg !17724
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17725
  store i32 %72, i32* %73, align 4, !dbg !17726
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17727
  %75 = load i32, i32* %74, align 4, !dbg !17727
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %18, i32 0, i32 0, !dbg !17728
  store i32 %75, i32* %76, align 4, !dbg !17728
  %77 = bitcast %union.anon.68* %15 to i8*, !dbg !17728
  %78 = bitcast %union.anon.68* %18 to i8*, !dbg !17728
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %77, i8* align 4 %78, i32 4, i1 false), !dbg !17728
  %79 = load i32, i32* %17, align 4, !dbg !17729
  %80 = load i32, i32* @announce_remaining, align 4, !dbg !17730
  %81 = sub nsw i32 %80, %79, !dbg !17730
  store i32 %81, i32* @announce_remaining, align 4, !dbg !17730
  br label %28, !dbg !17676, !llvm.loop !17731

82:                                               ; preds = %38
  %83 = call %struct._timeout.195* @first() #10, !dbg !17733
  %84 = icmp ne %struct._timeout.195* %83, null, !dbg !17735
  br i1 %84, label %85, label %92, !dbg !17736

85:                                               ; preds = %82
  %86 = load i32, i32* @announce_remaining, align 4, !dbg !17737
  %87 = sext i32 %86 to i64, !dbg !17737
  %88 = call %struct._timeout.195* @first() #10, !dbg !17739
  %89 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %88, i32 0, i32 2, !dbg !17740
  %90 = load i64, i64* %89, align 8, !dbg !17741
  %91 = sub nsw i64 %90, %87, !dbg !17741
  store i64 %91, i64* %89, align 8, !dbg !17741
  br label %92, !dbg !17742

92:                                               ; preds = %85, %82
  %93 = load i32, i32* @announce_remaining, align 4, !dbg !17743
  %94 = sext i32 %93 to i64, !dbg !17743
  %95 = load i64, i64* @curr_tick, align 8, !dbg !17744
  %96 = add i64 %95, %94, !dbg !17744
  store i64 %96, i64* @curr_tick, align 8, !dbg !17744
  store i32 0, i32* @announce_remaining, align 4, !dbg !17745
  %97 = call i32 @next_timeout() #10, !dbg !17746
  call void @sys_clock_set_timeout(i32 noundef %97, i1 noundef zeroext false) #10, !dbg !17747
  %98 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !17748
  %99 = bitcast i32* %98 to [1 x i32]*, !dbg !17748
  %100 = load [1 x i32], [1 x i32]* %99, align 4, !dbg !17748
  %101 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %102 = bitcast i32* %101 to [1 x i32]*
  store [1 x i32] %100, [1 x i32]* %102, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !17080, metadata !DIExpression()) #9, !dbg !17749
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !17086, metadata !DIExpression()) #9, !dbg !17751
  %103 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !17752
  %104 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17753
  %105 = load i32, i32* %104, align 4, !dbg !17753
  store i32 %105, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17090, metadata !DIExpression()) #9, !dbg !17754
  %106 = load i32, i32* %2, align 4, !dbg !17756
  %107 = icmp ne i32 %106, 0, !dbg !17757
  br i1 %107, label %108, label %109, !dbg !17758

108:                                              ; preds = %92
  br label %110, !dbg !17759

109:                                              ; preds = %92
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17760, !srcloc !17101
  br label %110, !dbg !17761

110:                                              ; preds = %108, %109
  ret void, !dbg !17762
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_tick_get() #1 !dbg !17763 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i64, align 8
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i64* %7, metadata !17766, metadata !DIExpression()), !dbg !17767
  store i64 0, i64* %7, align 8, !dbg !17767
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !17768, metadata !DIExpression()), !dbg !17770
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !17770
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !17770
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !17771, metadata !DIExpression()), !dbg !17770
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16960, metadata !DIExpression()) #9, !dbg !17772
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !17774
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16968, metadata !DIExpression()) #9, !dbg !17775
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16970, metadata !DIExpression()) #9, !dbg !17776
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !17778, !srcloc !16975
  store i32 %12, i32* %2, align 4, !dbg !17778
  %13 = load i32, i32* %2, align 4, !dbg !17779
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17780
  store i32 %13, i32* %14, align 4, !dbg !17781
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17782
  %16 = load i32, i32* %15, align 4, !dbg !17782
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17770
  store i32 %16, i32* %17, align 4, !dbg !17770
  br label %18, !dbg !17770

18:                                               ; preds = %41, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17783
  %20 = load i32, i32* %19, align 4, !dbg !17783
  %21 = icmp ne i32 %20, 0, !dbg !17783
  %22 = xor i1 %21, true, !dbg !17783
  br i1 %22, label %23, label %43, !dbg !17770

23:                                               ; preds = %18
  %24 = load i64, i64* @curr_tick, align 8, !dbg !17785
  %25 = call i32 @elapsed.89() #10, !dbg !17787
  %26 = sext i32 %25 to i64, !dbg !17787
  %27 = add i64 %24, %26, !dbg !17788
  store i64 %27, i64* %7, align 8, !dbg !17789
  br label %28, !dbg !17790

28:                                               ; preds = %23
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17783
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !17783
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !17783
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !17080, metadata !DIExpression()) #9, !dbg !17791
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !17086, metadata !DIExpression()) #9, !dbg !17793
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !17794
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !17795
  %36 = load i32, i32* %35, align 4, !dbg !17795
  store i32 %36, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !17090, metadata !DIExpression()) #9, !dbg !17796
  %37 = load i32, i32* %1, align 4, !dbg !17798
  %38 = icmp ne i32 %37, 0, !dbg !17799
  br i1 %38, label %39, label %40, !dbg !17800

39:                                               ; preds = %28
  br label %41, !dbg !17801

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !17802, !srcloc !17101
  br label %41, !dbg !17803

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17783
  store i32 1, i32* %42, align 4, !dbg !17783
  br label %18, !dbg !17783, !llvm.loop !17804

43:                                               ; preds = %18
  %44 = load i64, i64* %7, align 8, !dbg !17806
  ret i64 %44, !dbg !17807
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_tick_get_32() #1 !dbg !17808 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !17809
  %2 = trunc i64 %1 to i32, !dbg !17810
  ret i32 %2, !dbg !17811
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_impl_k_uptime_ticks() #1 !dbg !17812 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !17813
  ret i64 %1, !dbg !17814
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) #1 !dbg !17815 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17816, metadata !DIExpression()), !dbg !17817
  br label %6, !dbg !17818

6:                                                ; preds = %1
  br label %7, !dbg !17819

7:                                                ; preds = %6
  %8 = load i32, i32* %2, align 4, !dbg !17821
  %9 = icmp eq i32 %8, 0, !dbg !17823
  br i1 %9, label %10, label %13, !dbg !17824

10:                                               ; preds = %7
  br label %11, !dbg !17825

11:                                               ; preds = %10
  br label %12, !dbg !17827

12:                                               ; preds = %11
  br label %33, !dbg !17829

13:                                               ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17830, metadata !DIExpression()), !dbg !17831
  %14 = call i32 @k_cycle_get_32() #10, !dbg !17832
  store i32 %14, i32* %3, align 4, !dbg !17831
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17833, metadata !DIExpression()), !dbg !17834
  %15 = load i32, i32* %2, align 4, !dbg !17835
  %16 = zext i32 %15 to i64, !dbg !17836
  %17 = call i32 @sys_clock_hw_cycles_per_sec.108() #10, !dbg !17837
  %18 = sext i32 %17 to i64, !dbg !17838
  %19 = mul i64 %16, %18, !dbg !17839
  %20 = udiv i64 %19, 1000000, !dbg !17840
  %21 = trunc i64 %20 to i32, !dbg !17841
  store i32 %21, i32* %4, align 4, !dbg !17834
  br label %22, !dbg !17842

22:                                               ; preds = %30, %13
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17843, metadata !DIExpression()), !dbg !17847
  %23 = call i32 @k_cycle_get_32() #10, !dbg !17848
  store i32 %23, i32* %5, align 4, !dbg !17847
  %24 = load i32, i32* %5, align 4, !dbg !17849
  %25 = load i32, i32* %3, align 4, !dbg !17851
  %26 = sub i32 %24, %25, !dbg !17852
  %27 = load i32, i32* %4, align 4, !dbg !17853
  %28 = icmp uge i32 %26, %27, !dbg !17854
  br i1 %28, label %29, label %30, !dbg !17855

29:                                               ; preds = %22
  br label %31, !dbg !17856

30:                                               ; preds = %22
  br label %22, !dbg !17858, !llvm.loop !17859

31:                                               ; preds = %29
  br label %32, !dbg !17862

32:                                               ; preds = %31
  br label %33, !dbg !17863

33:                                               ; preds = %12, %32
  ret void, !dbg !17865
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32() #1 !dbg !17866 {
  %1 = call i32 @arch_k_cycle_get_32() #10, !dbg !17867
  ret i32 %1, !dbg !17868
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.108() #1 !dbg !17869 {
  ret i32 48000000, !dbg !17870
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32() #1 !dbg !17871 {
  %1 = call i32 @sys_clock_cycle_get_32() #10, !dbg !17873
  ret i32 %1, !dbg !17874
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) #1 !dbg !17875 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca %union.argument_value, align 8
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !17878, metadata !DIExpression()), !dbg !17879
  call void @llvm.dbg.declare(metadata i64* %4, metadata !17880, metadata !DIExpression()), !dbg !17881
  %9 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17882
  %10 = load i64, i64* %9, align 8, !dbg !17882
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !17882
  store i64 -1, i64* %11, align 8, !dbg !17882
  %12 = icmp eq i64 %10, -1, !dbg !17882
  br i1 %12, label %13, label %14, !dbg !17884

13:                                               ; preds = %1
  store i64 -1, i64* %2, align 8, !dbg !17885
  br label %40, !dbg !17885

14:                                               ; preds = %1
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17887
  %16 = load i64, i64* %15, align 8, !dbg !17887
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %6, i32 0, i32 0, !dbg !17887
  store i64 0, i64* %17, align 8, !dbg !17887
  %18 = icmp eq i64 %16, 0, !dbg !17887
  br i1 %18, label %19, label %21, !dbg !17889

19:                                               ; preds = %14
  %20 = call i64 @sys_clock_tick_get() #10, !dbg !17890
  store i64 %20, i64* %2, align 8, !dbg !17892
  br label %40, !dbg !17892

21:                                               ; preds = %14
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17893
  %23 = load i64, i64* %22, align 8, !dbg !17893
  store i64 %23, i64* %4, align 8, !dbg !17895
  %24 = load i64, i64* %4, align 8, !dbg !17896
  %25 = sub nsw i64 -2, %24, !dbg !17896
  %26 = icmp sge i64 %25, 0, !dbg !17898
  br i1 %26, label %27, label %30, !dbg !17899

27:                                               ; preds = %21
  %28 = load i64, i64* %4, align 8, !dbg !17900
  %29 = sub nsw i64 -2, %28, !dbg !17900
  store i64 %29, i64* %2, align 8, !dbg !17902
  br label %40, !dbg !17902

30:                                               ; preds = %21
  %31 = call i64 @sys_clock_tick_get() #10, !dbg !17903
  %32 = load i64, i64* %4, align 8, !dbg !17904
  %33 = icmp sgt i64 1, %32, !dbg !17904
  br i1 %33, label %34, label %35, !dbg !17904

34:                                               ; preds = %30
  br label %37, !dbg !17904

35:                                               ; preds = %30
  %36 = load i64, i64* %4, align 8, !dbg !17904
  br label %37, !dbg !17904

37:                                               ; preds = %35, %34
  %38 = phi i64 [ 1, %34 ], [ %36, %35 ], !dbg !17904
  %39 = add nsw i64 %31, %38, !dbg !17905
  store i64 %39, i64* %2, align 8, !dbg !17906
  br label %40, !dbg !17906

40:                                               ; preds = %37, %27, %19, %13
  %41 = load i64, i64* %2, align 8, !dbg !17907
  ret i64 %41, !dbg !17907
}

; Function Attrs: noinline nounwind optnone
define dso_local void @boot_banner() #1 !dbg !17908 {
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.111, i32 0, i32 0)) #10, !dbg !17910
  ret void, !dbg !17911
}

attributes #0 = { "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { noinline noreturn nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { noinline nounwind optnone readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { alwaysinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin "no-builtins" }
attributes #11 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #12 = { nobuiltin noreturn "no-builtins" }
attributes #13 = { nobuiltin nounwind "no-builtins" }

!llvm.dbg.cu = !{!1614, !2, !3558, !27, !269, !3560, !3562, !3599, !3601, !278, !3603, !3605, !3637, !3639, !3655, !3671, !3714, !3774, !3804, !3820, !1046, !1056, !1627, !1726, !2032, !2777, !3830, !2900, !3832, !3060, !3835, !3066, !3391, !3853, !3403, !3855, !3521, !3858}
!llvm.ident = !{!3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860, !3860}
!llvm.module.flags = !{!3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 40, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1792, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 28)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 896, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread", scope: !27, file: !107, line: 36, type: !113, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !258, !262, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "_k_thread_data_thread", scope: !27, file: !107, line: 36, type: !108, isLocal: false, isDefinition: true, align: 32)
!107 = !DIFile(filename: "zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !{!111, !229, !238, !239, !244, !245, !246, !247, !248, !249, !251, !255}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !108, file: !109, line: 621, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !188, !201, !202, !203, !204, !224}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !113, file: !114, line: 247, baseType: !117, size: 384)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !118)
!118 = !{!119, !147, !155, !158, !159, !172, !174, !175}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 60, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 60, size: 64, elements: !121)
!121 = !{!122, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !120, file: !114, line: 61, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !126)
!126 = !{!127, !133}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 38, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 38, size: 32, elements: !129)
!129 = !{!130, !132}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !128, file: !124, line: 39, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !128, file: !124, line: 40, baseType: !131, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 42, baseType: !134, size: 32, offset: 32)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 42, size: 32, elements: !135)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !134, file: !124, line: 43, baseType: !131, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !134, file: !124, line: 44, baseType: !131, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !120, file: !114, line: 62, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !141)
!140 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !139, file: !140, line: 50, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!145 = !{!146}
!146 = !DISubrange(count: 2)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !117, file: !114, line: 68, baseType: !148, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !151)
!150 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !152)
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !151, file: !150, line: 232, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !125)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !117, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !117, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 90, baseType: !160, size: 16, offset: 112)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 90, size: 16, elements: !161)
!161 = !{!162, !169}
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !114, line: 91, baseType: !163, size: 16)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !160, file: !114, line: 91, size: 16, elements: !164)
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !163, file: !114, line: 96, baseType: !166, size: 8)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !167)
!167 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !163, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !160, file: !114, line: 100, baseType: !170, size: 16)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !171)
!171 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !117, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !117, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !117, file: !114, line: 131, baseType: !176, size: 192, offset: 192)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !177)
!177 = !{!178, !179, !185}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !176, file: !150, line: 245, baseType: !123, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !176, file: !150, line: 246, baseType: !180, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !176, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !187)
!187 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !113, file: !114, line: 250, baseType: !189, size: 288, offset: 384)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !191)
!190 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !189, file: !190, line: 26, baseType: !173, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !189, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !189, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !189, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !189, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !189, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !189, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !189, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !189, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !113, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !113, file: !114, line: 256, baseType: !149, size: 64, offset: 704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !113, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !113, file: !114, line: 325, baseType: !205, size: 32, offset: 800)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !207)
!207 = !{!208, !219, !220}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !206, file: !109, line: 5074, baseType: !209, size: 96)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !209, file: !210, line: 57, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !210, line: 57, flags: DIFlagFwdDecl)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !209, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !209, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !206, file: !109, line: 5075, baseType: !149, size: 64, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !206, file: !109, line: 5076, baseType: !221, offset: 160)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !113, file: !114, line: 343, baseType: !225, size: 64, offset: 832)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !225, file: !190, line: 63, baseType: !173, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !225, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !108, file: !109, line: 622, baseType: !230, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !234, line: 48, baseType: !237, size: 8)
!237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !108, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !108, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !232, line: 46, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !102, !102, !102}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !108, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !108, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !108, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !108, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !108, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !108, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !108, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{null}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !108, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "thread", scope: !27, file: !107, line: 36, type: !260, isLocal: false, isDefinition: true)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !112)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread", scope: !27, file: !107, line: 36, type: !264, isLocal: false, isDefinition: true, align: 64)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 4096, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 512)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "_char_out", scope: !269, file: !272, line: 54, type: !273, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !271, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!271 = !{!267}
!272 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !103}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "__init_atmel_samd_init", scope: !278, file: !1012, line: 202, type: !1013, isLocal: true, isDefinition: true, align: 32)
!278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !279, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !280, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!280 = !{!102, !103, !281, !403, !742, !743, !810}
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nvmctrl", file: !283, line: 335, baseType: !284)
!283 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/nvmctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 320, size: 288, elements: !285)
!285 = !{!286, !297, !303, !317, !328, !339, !343, !354, !355, !366, !367, !382, !383, !393}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !284, file: !283, line: 321, baseType: !287, size: 16)
!287 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLA_Type", file: !283, line: 50, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 43, size: 16, elements: !290)
!290 = !{!291, !296}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !289, file: !283, line: 48, baseType: !292, size: 16)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !289, file: !283, line: 44, size: 16, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !292, file: !283, line: 45, baseType: !170, size: 7, flags: DIFlagBitField, extraData: i64 0)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "CMDEX", scope: !292, file: !283, line: 47, baseType: !170, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !289, file: !283, line: 49, baseType: !170, size: 16)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !284, file: !283, line: 322, baseType: !298, size: 16, offset: 16)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 16, elements: !145)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "RoReg8", file: !300, line: 52, baseType: !301)
!300 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/samd21g18a.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !284, file: !283, line: 323, baseType: !304, size: 32, offset: 32)
!304 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLB_Type", file: !283, line: 107, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 94, size: 32, elements: !307)
!307 = !{!308, !316}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !306, file: !283, line: 105, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !306, file: !283, line: 95, size: 32, elements: !310)
!310 = !{!311, !312, !313, !314, !315}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "RWS", scope: !309, file: !283, line: 97, baseType: !173, size: 4, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "MANW", scope: !309, file: !283, line: 99, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPPRM", scope: !309, file: !283, line: 100, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "READMODE", scope: !309, file: !283, line: 102, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "CACHEDIS", scope: !309, file: !283, line: 103, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !306, file: !283, line: 106, baseType: !173, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "PARAM", scope: !284, file: !283, line: 324, baseType: !318, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_PARAM_Type", file: !283, line: 155, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 148, size: 32, elements: !321)
!321 = !{!322, !327}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !320, file: !283, line: 153, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !320, file: !283, line: 149, size: 32, elements: !324)
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "NVMP", scope: !323, file: !283, line: 150, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "PSZ", scope: !323, file: !283, line: 151, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !320, file: !283, line: 154, baseType: !173, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !284, file: !283, line: 325, baseType: !329, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENCLR_Type", file: !283, line: 194, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 187, size: 8, elements: !332)
!332 = !{!333, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !331, file: !283, line: 192, baseType: !334, size: 8)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !331, file: !283, line: 188, size: 8, elements: !335)
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !334, file: !283, line: 189, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !334, file: !283, line: 190, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !331, file: !283, line: 193, baseType: !156, size: 8)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !284, file: !283, line: 326, baseType: !340, size: 24, offset: 104)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 24, elements: !341)
!341 = !{!342}
!342 = !DISubrange(count: 3)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !284, file: !283, line: 327, baseType: !344, size: 8, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENSET_Type", file: !283, line: 215, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 208, size: 8, elements: !347)
!347 = !{!348, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !346, file: !283, line: 213, baseType: !349, size: 8)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !283, line: 209, size: 8, elements: !350)
!350 = !{!351, !352}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !349, file: !283, line: 210, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !349, file: !283, line: 211, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !346, file: !283, line: 214, baseType: !156, size: 8)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !284, file: !283, line: 328, baseType: !340, size: 24, offset: 136)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !284, file: !283, line: 329, baseType: !356, size: 8, offset: 160)
!356 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTFLAG_Type", file: !283, line: 236, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 229, size: 8, elements: !359)
!359 = !{!360, !365}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !358, file: !283, line: 234, baseType: !361, size: 8)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !358, file: !283, line: 230, size: 8, elements: !362)
!362 = !{!363, !364}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !361, file: !283, line: 231, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !361, file: !283, line: 232, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !358, file: !283, line: 235, baseType: !156, size: 8)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !284, file: !283, line: 330, baseType: !340, size: 24, offset: 168)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !284, file: !283, line: 331, baseType: !368, size: 16, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_STATUS_Type", file: !283, line: 262, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 250, size: 16, elements: !371)
!371 = !{!372, !381}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !370, file: !283, line: 260, baseType: !373, size: 16)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !283, line: 251, size: 16, elements: !374)
!374 = !{!375, !376, !377, !378, !379, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "PRM", scope: !373, file: !283, line: 252, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !373, file: !283, line: 253, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "PROGE", scope: !373, file: !283, line: 254, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "LOCKE", scope: !373, file: !283, line: 255, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "NVME", scope: !373, file: !283, line: 256, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "SB", scope: !373, file: !283, line: 258, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !370, file: !283, line: 261, baseType: !170, size: 16)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !284, file: !283, line: 332, baseType: !298, size: 16, offset: 208)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !284, file: !283, line: 333, baseType: !384, size: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_ADDR_Type", file: !283, line: 290, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 284, size: 32, elements: !387)
!387 = !{!388, !392}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !386, file: !283, line: 288, baseType: !389, size: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !386, file: !283, line: 285, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !389, file: !283, line: 286, baseType: !173, size: 22, flags: DIFlagBitField, extraData: i64 0)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !386, file: !283, line: 289, baseType: !173, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !284, file: !283, line: 334, baseType: !394, size: 16, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_LOCK_Type", file: !283, line: 308, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 303, size: 16, elements: !397)
!397 = !{!398, !402}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !396, file: !283, line: 306, baseType: !399, size: 16)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !283, line: 304, size: 16, elements: !400)
!400 = !{!401}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !399, file: !283, line: 305, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !396, file: !283, line: 307, baseType: !170, size: 16)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sysctrl", file: !405, line: 928, baseType: !406)
!405 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sysctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 899, size: 672, elements: !407)
!407 = !{!408, !432, !456, !482, !507, !523, !524, !542, !543, !560, !571, !572, !587, !607, !608, !620, !632, !642, !643, !660, !664, !675, !676, !688, !700, !701, !712, !728}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !406, file: !405, line: 900, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENCLR_Type", file: !405, line: 64, baseType: !411)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 43, size: 32, elements: !412)
!412 = !{!413, !431}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !411, file: !405, line: 62, baseType: !414, size: 32)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !405, line: 44, size: 32, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !414, file: !405, line: 45, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !414, file: !405, line: 46, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !414, file: !405, line: 47, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !414, file: !405, line: 48, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !414, file: !405, line: 49, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !414, file: !405, line: 50, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !414, file: !405, line: 51, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !414, file: !405, line: 52, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !414, file: !405, line: 53, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !414, file: !405, line: 54, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !414, file: !405, line: 55, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !414, file: !405, line: 56, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !414, file: !405, line: 58, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !414, file: !405, line: 59, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !414, file: !405, line: 60, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !411, file: !405, line: 63, baseType: !173, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !406, file: !405, line: 901, baseType: !433, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENSET_Type", file: !405, line: 125, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 104, size: 32, elements: !436)
!436 = !{!437, !455}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !435, file: !405, line: 123, baseType: !438, size: 32)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !405, line: 105, size: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !438, file: !405, line: 106, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !438, file: !405, line: 107, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !438, file: !405, line: 108, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !438, file: !405, line: 109, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !438, file: !405, line: 110, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !438, file: !405, line: 111, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !438, file: !405, line: 112, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !438, file: !405, line: 113, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !438, file: !405, line: 114, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !438, file: !405, line: 115, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !438, file: !405, line: 116, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !438, file: !405, line: 117, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !438, file: !405, line: 119, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !438, file: !405, line: 120, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !438, file: !405, line: 121, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !435, file: !405, line: 124, baseType: !173, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !406, file: !405, line: 902, baseType: !457, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTFLAG_Type", file: !405, line: 186, baseType: !459)
!459 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 165, size: 32, elements: !460)
!460 = !{!461, !481}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !459, file: !405, line: 184, baseType: !462, size: 32)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !459, file: !405, line: 166, size: 32, elements: !463)
!463 = !{!464, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !462, file: !405, line: 167, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !462, file: !405, line: 168, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !462, file: !405, line: 169, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !462, file: !405, line: 170, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !462, file: !405, line: 171, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !462, file: !405, line: 172, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !462, file: !405, line: 173, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !462, file: !405, line: 174, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !462, file: !405, line: 175, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !462, file: !405, line: 176, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !462, file: !405, line: 177, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !462, file: !405, line: 178, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !462, file: !405, line: 180, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !462, file: !405, line: 181, baseType: !465, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !462, file: !405, line: 182, baseType: !465, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !459, file: !405, line: 185, baseType: !173, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "PCLKSR", scope: !406, file: !405, line: 903, baseType: !483, size: 32, offset: 96)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_PCLKSR_Type", file: !405, line: 247, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 226, size: 32, elements: !487)
!487 = !{!488, !506}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !486, file: !405, line: 245, baseType: !489, size: 32)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !486, file: !405, line: 227, size: 32, elements: !490)
!490 = !{!491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !489, file: !405, line: 228, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !489, file: !405, line: 229, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !489, file: !405, line: 230, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !489, file: !405, line: 231, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !489, file: !405, line: 232, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !489, file: !405, line: 233, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !489, file: !405, line: 234, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !489, file: !405, line: 235, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !489, file: !405, line: 236, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !489, file: !405, line: 237, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !489, file: !405, line: 238, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !489, file: !405, line: 239, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !489, file: !405, line: 241, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !489, file: !405, line: 242, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !489, file: !405, line: 243, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !486, file: !405, line: 246, baseType: !173, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC", scope: !406, file: !405, line: 904, baseType: !508, size: 16, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC_Type", file: !405, line: 300, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 287, size: 16, elements: !511)
!511 = !{!512, !522}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !510, file: !405, line: 298, baseType: !513, size: 16)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !510, file: !405, line: 288, size: 16, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !521}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !513, file: !405, line: 290, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !513, file: !405, line: 291, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !513, file: !405, line: 293, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !513, file: !405, line: 294, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GAIN", scope: !513, file: !405, line: 295, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "AMPGC", scope: !513, file: !405, line: 296, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !513, file: !405, line: 297, baseType: !170, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !510, file: !405, line: 299, baseType: !170, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !406, file: !405, line: 905, baseType: !298, size: 16, offset: 144)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32K", scope: !406, file: !405, line: 906, baseType: !525, size: 16, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC32K_Type", file: !405, line: 352, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 336, size: 16, elements: !528)
!528 = !{!529, !541}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !527, file: !405, line: 350, baseType: !530, size: 16)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !405, line: 337, size: 16, elements: !531)
!531 = !{!532, !533, !534, !535, !536, !537, !538, !539, !540}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !530, file: !405, line: 339, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !530, file: !405, line: 340, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !530, file: !405, line: 341, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !530, file: !405, line: 342, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "AAMPEN", scope: !530, file: !405, line: 343, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !530, file: !405, line: 344, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !530, file: !405, line: 345, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !530, file: !405, line: 346, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !530, file: !405, line: 348, baseType: !170, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !527, file: !405, line: 351, baseType: !170, size: 16)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !406, file: !405, line: 907, baseType: !298, size: 16, offset: 176)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32K", scope: !406, file: !405, line: 908, baseType: !544, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC32K_Type", file: !405, line: 398, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 381, size: 32, elements: !547)
!547 = !{!548, !559}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !546, file: !405, line: 396, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !546, file: !405, line: 382, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !549, file: !405, line: 384, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !549, file: !405, line: 385, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !549, file: !405, line: 386, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !549, file: !405, line: 388, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !549, file: !405, line: 389, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !549, file: !405, line: 390, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !549, file: !405, line: 392, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !549, file: !405, line: 394, baseType: !173, size: 7, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !546, file: !405, line: 397, baseType: !173, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "OSCULP32K", scope: !406, file: !405, line: 909, baseType: !561, size: 8, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !562)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSCULP32K_Type", file: !405, line: 433, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 426, size: 8, elements: !564)
!564 = !{!565, !570}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !563, file: !405, line: 431, baseType: !566, size: 8)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !563, file: !405, line: 427, size: 8, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !566, file: !405, line: 428, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !566, file: !405, line: 430, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !563, file: !405, line: 432, baseType: !156, size: 8)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !406, file: !405, line: 910, baseType: !340, size: 24, offset: 232)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8M", scope: !406, file: !405, line: 911, baseType: !573, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC8M_Type", file: !405, line: 462, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 448, size: 32, elements: !576)
!576 = !{!577, !586}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !575, file: !405, line: 460, baseType: !578, size: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !405, line: 449, size: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !578, file: !405, line: 451, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !578, file: !405, line: 453, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !578, file: !405, line: 454, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "PRESC", scope: !578, file: !405, line: 455, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !578, file: !405, line: 457, baseType: !173, size: 12, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "FRANGE", scope: !578, file: !405, line: 459, baseType: !173, size: 2, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !575, file: !405, line: 461, baseType: !173, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRL", scope: !406, file: !405, line: 912, baseType: !588, size: 16, offset: 288)
!588 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLCTRL_Type", file: !405, line: 520, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 503, size: 16, elements: !591)
!591 = !{!592, !606}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !590, file: !405, line: 518, baseType: !593, size: 16)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !590, file: !405, line: 504, size: 16, elements: !594)
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !593, file: !405, line: 506, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !593, file: !405, line: 507, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "STABLE", scope: !593, file: !405, line: 508, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "LLAW", scope: !593, file: !405, line: 509, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "USBCRM", scope: !593, file: !405, line: 510, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !593, file: !405, line: 511, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !593, file: !405, line: 512, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "CCDIS", scope: !593, file: !405, line: 513, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "QLDIS", scope: !593, file: !405, line: 514, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "BPLCKC", scope: !593, file: !405, line: 515, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "WAITLOCK", scope: !593, file: !405, line: 516, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !590, file: !405, line: 519, baseType: !170, size: 16)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !406, file: !405, line: 913, baseType: !298, size: 16, offset: 304)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !406, file: !405, line: 914, baseType: !609, size: 32, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !610)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLVAL_Type", file: !405, line: 559, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 552, size: 32, elements: !612)
!612 = !{!613, !619}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !611, file: !405, line: 557, baseType: !614, size: 32)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !405, line: 553, size: 32, elements: !615)
!615 = !{!616, !617, !618}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "FINE", scope: !614, file: !405, line: 554, baseType: !173, size: 10, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "COARSE", scope: !614, file: !405, line: 555, baseType: !173, size: 6, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "DIFF", scope: !614, file: !405, line: 556, baseType: !173, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !611, file: !405, line: 558, baseType: !173, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !406, file: !405, line: 915, baseType: !621, size: 32, offset: 352)
!621 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !622)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLMUL_Type", file: !405, line: 585, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 578, size: 32, elements: !624)
!624 = !{!625, !631}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !623, file: !405, line: 583, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !623, file: !405, line: 579, size: 32, elements: !627)
!627 = !{!628, !629, !630}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "MUL", scope: !626, file: !405, line: 580, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "FSTEP", scope: !626, file: !405, line: 581, baseType: !173, size: 10, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "CSTEP", scope: !626, file: !405, line: 582, baseType: !173, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !623, file: !405, line: 584, baseType: !173, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLSYNC", scope: !406, file: !405, line: 916, baseType: !633, size: 8, offset: 384)
!633 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLSYNC_Type", file: !405, line: 610, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 604, size: 8, elements: !636)
!636 = !{!637, !641}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !635, file: !405, line: 608, baseType: !638, size: 8)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !635, file: !405, line: 605, size: 8, elements: !639)
!639 = !{!640}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "READREQ", scope: !638, file: !405, line: 607, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !635, file: !405, line: 609, baseType: !156, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !406, file: !405, line: 917, baseType: !340, size: 24, offset: 392)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !406, file: !405, line: 918, baseType: !644, size: 32, offset: 416)
!644 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_BOD33_Type", file: !405, line: 639, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 622, size: 32, elements: !647)
!647 = !{!648, !659}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !646, file: !405, line: 637, baseType: !649, size: 32)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !405, line: 623, size: 32, elements: !650)
!650 = !{!651, !652, !653, !654, !655, !656, !657, !658}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !649, file: !405, line: 625, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "HYST", scope: !649, file: !405, line: 626, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ACTION", scope: !649, file: !405, line: 627, baseType: !173, size: 2, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !649, file: !405, line: 629, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !649, file: !405, line: 631, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "CEN", scope: !649, file: !405, line: 632, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "PSEL", scope: !649, file: !405, line: 634, baseType: !173, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "LEVEL", scope: !649, file: !405, line: 635, baseType: !173, size: 6, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !646, file: !405, line: 638, baseType: !173, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !406, file: !405, line: 919, baseType: !661, size: 32, offset: 448)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 32, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 4)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "VREG", scope: !406, file: !405, line: 920, baseType: !665, size: 16, offset: 480)
!665 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREG_Type", file: !405, line: 715, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 706, size: 16, elements: !668)
!668 = !{!669, !674}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !667, file: !405, line: 713, baseType: !670, size: 16)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !667, file: !405, line: 707, size: 16, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !670, file: !405, line: 709, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "FORCELDO", scope: !670, file: !405, line: 711, baseType: !170, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !667, file: !405, line: 714, baseType: !170, size: 16)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !406, file: !405, line: 921, baseType: !298, size: 16, offset: 496)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "VREF", scope: !406, file: !405, line: 922, baseType: !677, size: 32, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREF_Type", file: !405, line: 739, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 729, size: 32, elements: !680)
!680 = !{!681, !687}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !679, file: !405, line: 737, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !679, file: !405, line: 730, size: 32, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "TSEN", scope: !682, file: !405, line: 732, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "BGOUTEN", scope: !682, file: !405, line: 733, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !682, file: !405, line: 735, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !679, file: !405, line: 738, baseType: !173, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLA", scope: !406, file: !405, line: 923, baseType: !689, size: 8, offset: 544)
!689 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !690)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLA_Type", file: !405, line: 765, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 756, size: 8, elements: !692)
!692 = !{!693, !699}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !691, file: !405, line: 763, baseType: !694, size: 8)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !405, line: 757, size: 8, elements: !695)
!695 = !{!696, !697, !698}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !694, file: !405, line: 759, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !694, file: !405, line: 761, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !694, file: !405, line: 762, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !691, file: !405, line: 764, baseType: !156, size: 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !406, file: !405, line: 924, baseType: !340, size: 24, offset: 552)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !406, file: !405, line: 925, baseType: !702, size: 32, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !703)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLRATIO_Type", file: !405, line: 789, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 781, size: 32, elements: !705)
!705 = !{!706, !711}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !704, file: !405, line: 787, baseType: !707, size: 32)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !704, file: !405, line: 782, size: 32, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "LDR", scope: !707, file: !405, line: 783, baseType: !173, size: 12, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "LDRFRAC", scope: !707, file: !405, line: 785, baseType: !173, size: 4, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !704, file: !405, line: 788, baseType: !173, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLB", scope: !406, file: !405, line: 926, baseType: !713, size: 32, offset: 608)
!713 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !714)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLB_Type", file: !405, line: 820, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 805, size: 32, elements: !716)
!716 = !{!717, !727}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !715, file: !405, line: 818, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !405, line: 806, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724, !725, !726}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "FILTER", scope: !718, file: !405, line: 807, baseType: !173, size: 2, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "LPEN", scope: !718, file: !405, line: 808, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "WUF", scope: !718, file: !405, line: 809, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "REFCLK", scope: !718, file: !405, line: 810, baseType: !173, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "LTIME", scope: !718, file: !405, line: 812, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "LBYPASS", scope: !718, file: !405, line: 814, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !718, file: !405, line: 816, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !715, file: !405, line: 819, baseType: !173, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSTATUS", scope: !406, file: !405, line: 927, baseType: !729, size: 8, offset: 640)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !731)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLSTATUS_Type", file: !405, line: 881, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 872, size: 8, elements: !733)
!733 = !{!734, !741}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !732, file: !405, line: 879, baseType: !735, size: 8)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !732, file: !405, line: 873, size: 8, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !735, file: !405, line: 874, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "CLKRDY", scope: !735, file: !405, line: 875, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !735, file: !405, line: 876, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !735, file: !405, line: 877, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !732, file: !405, line: 880, baseType: !156, size: 8)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !746)
!745 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/gclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !747)
!747 = !{!748, !758, !769, !782, !799}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !746, file: !745, line: 285, baseType: !749, size: 8)
!749 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !752)
!752 = !{!753, !757}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !751, file: !745, line: 47, baseType: !754, size: 8)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !751, file: !745, line: 44, size: 8, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !754, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !751, file: !745, line: 48, baseType: !156, size: 8)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !746, file: !745, line: 286, baseType: !759, size: 8, offset: 8)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !763)
!763 = !{!764, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !762, file: !745, line: 65, baseType: !765, size: 8)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !762, file: !745, line: 62, size: 8, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !765, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !762, file: !745, line: 66, baseType: !156, size: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !746, file: !745, line: 287, baseType: !770, size: 16, offset: 16)
!770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !773)
!773 = !{!774, !781}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !772, file: !745, line: 87, baseType: !775, size: 16)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !772, file: !745, line: 80, size: 16, elements: !776)
!776 = !{!777, !778, !779, !780}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !775, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !775, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !775, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !775, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !772, file: !745, line: 88, baseType: !170, size: 16)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !746, file: !745, line: 288, baseType: !783, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !786)
!786 = !{!787, !798}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !785, file: !745, line: 212, baseType: !788, size: 32)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !785, file: !745, line: 200, size: 32, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796, !797}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !788, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !788, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !788, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !788, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !788, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !788, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !788, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !788, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !785, file: !745, line: 213, baseType: !173, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !746, file: !745, line: 289, baseType: !800, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !803)
!803 = !{!804, !809}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !802, file: !745, line: 266, baseType: !805, size: 32)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !745, line: 261, size: 32, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !805, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !805, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !802, file: !745, line: 267, baseType: !173, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !813)
!812 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/pm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !814)
!814 = !{!815, !821, !831, !835, !845, !855, !865, !875, !879, !895, !911, !927, !957, !961, !971, !981, !991, !995}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !813, file: !812, line: 495, baseType: !816, size: 8)
!816 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !818, file: !812, line: 44, baseType: !156, size: 8)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !813, file: !812, line: 496, baseType: !822, size: 8, offset: 8)
!822 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !825)
!825 = !{!826, !830}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !824, file: !812, line: 59, baseType: !827, size: 8)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !812, line: 56, size: 8, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !827, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !824, file: !812, line: 60, baseType: !156, size: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !813, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 48, elements: !833)
!833 = !{!834}
!834 = !DISubrange(count: 6)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !813, file: !812, line: 498, baseType: !836, size: 8, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !837)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !839)
!839 = !{!840, !844}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !838, file: !812, line: 84, baseType: !841, size: 8)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !838, file: !812, line: 81, size: 8, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !841, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !838, file: !812, line: 85, baseType: !156, size: 8)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !813, file: !812, line: 499, baseType: !846, size: 8, offset: 72)
!846 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !849)
!849 = !{!850, !854}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !848, file: !812, line: 119, baseType: !851, size: 8)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !848, file: !812, line: 116, size: 8, elements: !852)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !851, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !848, file: !812, line: 120, baseType: !156, size: 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !813, file: !812, line: 500, baseType: !856, size: 8, offset: 80)
!856 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !859)
!859 = !{!860, !864}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !858, file: !812, line: 154, baseType: !861, size: 8)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !812, line: 151, size: 8, elements: !862)
!862 = !{!863}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !861, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !858, file: !812, line: 155, baseType: !156, size: 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !813, file: !812, line: 501, baseType: !866, size: 8, offset: 88)
!866 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !869)
!869 = !{!870, !874}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !868, file: !812, line: 189, baseType: !871, size: 8)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !868, file: !812, line: 186, size: 8, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !871, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !868, file: !812, line: 190, baseType: !156, size: 8)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !813, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 64, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !813, file: !812, line: 503, baseType: !880, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !883)
!883 = !{!884, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !882, file: !812, line: 230, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !882, file: !812, line: 221, size: 32, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !885, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !885, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !885, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !885, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !885, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !885, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !885, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !882, file: !812, line: 231, baseType: !173, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !813, file: !812, line: 504, baseType: !896, size: 32, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !899)
!899 = !{!900, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !898, file: !812, line: 266, baseType: !901, size: 32)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !898, file: !812, line: 257, size: 32, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !901, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !901, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !901, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !901, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !901, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !901, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !901, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !898, file: !812, line: 267, baseType: !173, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !813, file: !812, line: 505, baseType: !912, size: 32, offset: 224)
!912 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !915)
!915 = !{!916, !926}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !914, file: !812, line: 302, baseType: !917, size: 32)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !914, file: !812, line: 293, size: 32, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !917, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !917, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !917, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !917, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !917, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !917, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !917, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !914, file: !812, line: 303, baseType: !173, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !813, file: !812, line: 506, baseType: !928, size: 32, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !931)
!931 = !{!932, !956}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !930, file: !812, line: 352, baseType: !933, size: 32)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !812, line: 329, size: 32, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !933, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !933, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !933, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !933, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !933, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !933, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !933, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !933, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !933, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !933, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !933, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !933, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !933, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !933, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !933, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !933, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !933, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !933, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !933, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !933, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !933, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !930, file: !812, line: 353, baseType: !173, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !813, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 128, elements: !959)
!959 = !{!960}
!960 = !DISubrange(count: 16)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !813, file: !812, line: 508, baseType: !962, size: 8, offset: 416)
!962 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !965)
!965 = !{!966, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !964, file: !812, line: 410, baseType: !967, size: 8)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !964, file: !812, line: 407, size: 8, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !967, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !964, file: !812, line: 411, baseType: !156, size: 8)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !813, file: !812, line: 509, baseType: !972, size: 8, offset: 424)
!972 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !975)
!975 = !{!976, !980}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !974, file: !812, line: 428, baseType: !977, size: 8)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !974, file: !812, line: 425, size: 8, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !977, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !974, file: !812, line: 429, baseType: !156, size: 8)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !813, file: !812, line: 510, baseType: !982, size: 8, offset: 432)
!982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !983)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !985)
!985 = !{!986, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !984, file: !812, line: 446, baseType: !987, size: 8)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !984, file: !812, line: 443, size: 8, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !987, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !984, file: !812, line: 447, baseType: !156, size: 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !813, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 8, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 1)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !813, file: !812, line: 512, baseType: !996, size: 8, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1000)
!1000 = !{!1001, !1010}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !999, file: !812, line: 470, baseType: !1002, size: 8)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !999, file: !812, line: 461, size: 8, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1002, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1002, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1002, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1002, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1002, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1002, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !999, file: !812, line: 471, baseType: !156, size: 8)
!1011 = !{!276}
!1012 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1016)
!1015 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1043}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1014, file: !1015, line: 60, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1025)
!1024 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = !{!1026, !1027, !1028, !1029, !1036, !1037}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !1024, line: 380, baseType: !256, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1023, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1023, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1023, file: !1024, line: 386, baseType: !1030, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1031, file: !1024, line: 359, baseType: !156, size: 8)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1031, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1035 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1023, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1023, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1024, line: 43, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1042)
!1042 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1014, file: !1015, line: 65, baseType: !1021, size: 32, offset: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1046, file: !1053, line: 21, type: !273, isLocal: true, isDefinition: true)
!1046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1047, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1048, globals: !1052, splitDebugInlining: false, nameTableKind: None)
!1047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1048 = !{!1049, !103, !102}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1051, line: 22, baseType: !103)
!1051 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !{!1044}
!1053 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1056, file: !1544, line: 411, type: !1558, isLocal: false, isDefinition: true, align: 32)
!1056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1057, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1058, retainedTypes: !1067, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1057 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1058 = !{!1059}
!1059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sam0_eic_trigger", file: !1060, line: 19, baseType: !32, size: 32, elements: !1061)
!1060 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/sam0_eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1061 = !{!1062, !1063, !1064, !1065, !1066}
!1062 = !DIEnumerator(name: "SAM0_EIC_RISING", value: 0)
!1063 = !DIEnumerator(name: "SAM0_EIC_FALLING", value: 1)
!1064 = !DIEnumerator(name: "SAM0_EIC_BOTH", value: 2)
!1065 = !DIEnumerator(name: "SAM0_EIC_HIGH", value: 3)
!1066 = !DIEnumerator(name: "SAM0_EIC_LOW", value: 4)
!1067 = !{!1068, !1287, !1475}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eic", file: !1070, line: 661, baseType: !1071)
!1070 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1070, line: 650, size: 256, elements: !1072)
!1072 = !{!1073, !1084, !1095, !1106, !1116, !1145, !1174, !1203, !1232, !1261}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1071, file: !1070, line: 651, baseType: !1074, size: 8)
!1074 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CTRL_Type", file: !1070, line: 50, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 43, size: 8, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1076, file: !1070, line: 48, baseType: !1079, size: 8)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1076, file: !1070, line: 44, size: 8, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1079, file: !1070, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1079, file: !1070, line: 46, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1076, file: !1070, line: 49, baseType: !156, size: 8)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1071, file: !1070, line: 652, baseType: !1085, size: 8, offset: 8)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_STATUS_Type", file: !1070, line: 70, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 64, size: 8, elements: !1089)
!1089 = !{!1090, !1094}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1088, file: !1070, line: 68, baseType: !1091, size: 8)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1088, file: !1070, line: 65, size: 8, elements: !1092)
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1091, file: !1070, line: 67, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1088, file: !1070, line: 69, baseType: !156, size: 8)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "NMICTRL", scope: !1071, file: !1070, line: 653, baseType: !1096, size: 8, offset: 16)
!1096 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMICTRL_Type", file: !1070, line: 89, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 82, size: 8, elements: !1099)
!1099 = !{!1100, !1105}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1098, file: !1070, line: 87, baseType: !1101, size: 8)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1098, file: !1070, line: 83, size: 8, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "NMISENSE", scope: !1101, file: !1070, line: 84, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFILTEN", scope: !1101, file: !1070, line: 85, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1098, file: !1070, line: 88, baseType: !156, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFLAG", scope: !1071, file: !1070, line: 654, baseType: !1107, size: 8, offset: 24)
!1107 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMIFLAG_Type", file: !1070, line: 122, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 116, size: 8, elements: !1110)
!1110 = !{!1111, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1109, file: !1070, line: 120, baseType: !1112, size: 8)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1109, file: !1070, line: 117, size: 8, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "NMI", scope: !1112, file: !1070, line: 118, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1109, file: !1070, line: 121, baseType: !156, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !1071, file: !1070, line: 655, baseType: !1117, size: 32, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_EVCTRL_Type", file: !1070, line: 159, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 134, size: 32, elements: !1120)
!1120 = !{!1121, !1140, !1144}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1119, file: !1070, line: 153, baseType: !1122, size: 32)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 135, size: 32, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO0", scope: !1122, file: !1070, line: 136, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO1", scope: !1122, file: !1070, line: 137, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO2", scope: !1122, file: !1070, line: 138, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO3", scope: !1122, file: !1070, line: 139, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO4", scope: !1122, file: !1070, line: 140, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO5", scope: !1122, file: !1070, line: 141, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO6", scope: !1122, file: !1070, line: 142, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO7", scope: !1122, file: !1070, line: 143, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO8", scope: !1122, file: !1070, line: 144, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO9", scope: !1122, file: !1070, line: 145, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO10", scope: !1122, file: !1070, line: 146, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO11", scope: !1122, file: !1070, line: 147, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO12", scope: !1122, file: !1070, line: 148, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO13", scope: !1122, file: !1070, line: 149, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO14", scope: !1122, file: !1070, line: 150, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO15", scope: !1122, file: !1070, line: 151, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1119, file: !1070, line: 157, baseType: !1141, size: 32)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 154, size: 32, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO", scope: !1141, file: !1070, line: 155, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1119, file: !1070, line: 158, baseType: !173, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1071, file: !1070, line: 656, baseType: !1146, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENCLR_Type", file: !1070, line: 229, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 204, size: 32, elements: !1149)
!1149 = !{!1150, !1169, !1173}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1148, file: !1070, line: 223, baseType: !1151, size: 32)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 205, size: 32, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1151, file: !1070, line: 206, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1151, file: !1070, line: 207, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1151, file: !1070, line: 208, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1151, file: !1070, line: 209, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1151, file: !1070, line: 210, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1151, file: !1070, line: 211, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1151, file: !1070, line: 212, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1151, file: !1070, line: 213, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1151, file: !1070, line: 214, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1151, file: !1070, line: 215, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1151, file: !1070, line: 216, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1151, file: !1070, line: 217, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1151, file: !1070, line: 218, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1151, file: !1070, line: 219, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1151, file: !1070, line: 220, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1151, file: !1070, line: 221, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1148, file: !1070, line: 227, baseType: !1170, size: 32)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 224, size: 32, elements: !1171)
!1171 = !{!1172}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1170, file: !1070, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1148, file: !1070, line: 228, baseType: !173, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1071, file: !1070, line: 657, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENSET_Type", file: !1070, line: 299, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 274, size: 32, elements: !1178)
!1178 = !{!1179, !1198, !1202}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1177, file: !1070, line: 293, baseType: !1180, size: 32)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 275, size: 32, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1180, file: !1070, line: 276, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1180, file: !1070, line: 277, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1180, file: !1070, line: 278, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1180, file: !1070, line: 279, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1180, file: !1070, line: 280, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1180, file: !1070, line: 281, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1180, file: !1070, line: 282, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1180, file: !1070, line: 283, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1180, file: !1070, line: 284, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1180, file: !1070, line: 285, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1180, file: !1070, line: 286, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1180, file: !1070, line: 287, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1180, file: !1070, line: 288, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1180, file: !1070, line: 289, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1180, file: !1070, line: 290, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1180, file: !1070, line: 291, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1177, file: !1070, line: 297, baseType: !1199, size: 32)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 294, size: 32, elements: !1200)
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1199, file: !1070, line: 295, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1177, file: !1070, line: 298, baseType: !173, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1071, file: !1070, line: 658, baseType: !1204, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTFLAG_Type", file: !1070, line: 369, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 344, size: 32, elements: !1207)
!1207 = !{!1208, !1227, !1231}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1206, file: !1070, line: 363, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 345, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1209, file: !1070, line: 346, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1209, file: !1070, line: 347, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1209, file: !1070, line: 348, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1209, file: !1070, line: 349, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1209, file: !1070, line: 350, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1209, file: !1070, line: 351, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1209, file: !1070, line: 352, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1209, file: !1070, line: 353, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1209, file: !1070, line: 354, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1209, file: !1070, line: 355, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1209, file: !1070, line: 356, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1209, file: !1070, line: 357, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1209, file: !1070, line: 358, baseType: !465, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1209, file: !1070, line: 359, baseType: !465, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1209, file: !1070, line: 360, baseType: !465, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1209, file: !1070, line: 361, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1206, file: !1070, line: 367, baseType: !1228, size: 32)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 364, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1228, file: !1070, line: 365, baseType: !465, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1206, file: !1070, line: 368, baseType: !173, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUP", scope: !1071, file: !1070, line: 659, baseType: !1233, size: 32, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_WAKEUP_Type", file: !1070, line: 439, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 414, size: 32, elements: !1236)
!1236 = !{!1237, !1256, !1260}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1235, file: !1070, line: 433, baseType: !1238, size: 32)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 415, size: 32, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN0", scope: !1238, file: !1070, line: 416, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN1", scope: !1238, file: !1070, line: 417, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN2", scope: !1238, file: !1070, line: 418, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN3", scope: !1238, file: !1070, line: 419, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN4", scope: !1238, file: !1070, line: 420, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN5", scope: !1238, file: !1070, line: 421, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN6", scope: !1238, file: !1070, line: 422, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN7", scope: !1238, file: !1070, line: 423, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN8", scope: !1238, file: !1070, line: 424, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN9", scope: !1238, file: !1070, line: 425, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN10", scope: !1238, file: !1070, line: 426, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN11", scope: !1238, file: !1070, line: 427, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN12", scope: !1238, file: !1070, line: 428, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN13", scope: !1238, file: !1070, line: 429, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN14", scope: !1238, file: !1070, line: 430, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN15", scope: !1238, file: !1070, line: 431, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1235, file: !1070, line: 437, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 434, size: 32, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN", scope: !1257, file: !1070, line: 435, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1235, file: !1070, line: 438, baseType: !173, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1071, file: !1070, line: 660, baseType: !1262, size: 64, offset: 192)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 64, elements: !145)
!1263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CONFIG_Type", file: !1070, line: 504, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 484, size: 32, elements: !1266)
!1266 = !{!1267, !1286}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1265, file: !1070, line: 502, baseType: !1268, size: 32)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !1070, line: 485, size: 32, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE0", scope: !1268, file: !1070, line: 486, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN0", scope: !1268, file: !1070, line: 487, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE1", scope: !1268, file: !1070, line: 488, baseType: !173, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN1", scope: !1268, file: !1070, line: 489, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE2", scope: !1268, file: !1070, line: 490, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN2", scope: !1268, file: !1070, line: 491, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE3", scope: !1268, file: !1070, line: 492, baseType: !173, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN3", scope: !1268, file: !1070, line: 493, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE4", scope: !1268, file: !1070, line: 494, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN4", scope: !1268, file: !1070, line: 495, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE5", scope: !1268, file: !1070, line: 496, baseType: !173, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN5", scope: !1268, file: !1070, line: 497, baseType: !173, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE6", scope: !1268, file: !1070, line: 498, baseType: !173, size: 3, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN6", scope: !1268, file: !1070, line: 499, baseType: !173, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE7", scope: !1268, file: !1070, line: 500, baseType: !173, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN7", scope: !1268, file: !1070, line: 501, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1265, file: !1070, line: 503, baseType: !173, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !1290)
!1290 = !{!1291, !1297, !1307, !1308, !1318, !1328, !1338, !1348, !1349, !1365, !1381, !1397, !1427, !1428, !1438, !1448, !1458, !1459}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1289, file: !812, line: 495, baseType: !1292, size: 8)
!1292 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !1295)
!1295 = !{!1296}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1294, file: !812, line: 44, baseType: !156, size: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !1289, file: !812, line: 496, baseType: !1298, size: 8, offset: 8)
!1298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !1301)
!1301 = !{!1302, !1306}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1300, file: !812, line: 59, baseType: !1303, size: 8)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1300, file: !812, line: 56, size: 8, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !1303, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1300, file: !812, line: 60, baseType: !156, size: 8)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1289, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !1289, file: !812, line: 498, baseType: !1309, size: 8, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !1312)
!1312 = !{!1313, !1317}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1311, file: !812, line: 84, baseType: !1314, size: 8)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1311, file: !812, line: 81, size: 8, elements: !1315)
!1315 = !{!1316}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !1314, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1311, file: !812, line: 85, baseType: !156, size: 8)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !1289, file: !812, line: 499, baseType: !1319, size: 8, offset: 72)
!1319 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1321, file: !812, line: 119, baseType: !1324, size: 8)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1321, file: !812, line: 116, size: 8, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !1324, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1321, file: !812, line: 120, baseType: !156, size: 8)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !1289, file: !812, line: 500, baseType: !1329, size: 8, offset: 80)
!1329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !1332)
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1331, file: !812, line: 154, baseType: !1334, size: 8)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1331, file: !812, line: 151, size: 8, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !1334, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1331, file: !812, line: 155, baseType: !156, size: 8)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !1289, file: !812, line: 501, baseType: !1339, size: 8, offset: 88)
!1339 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !1342)
!1342 = !{!1343, !1347}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1341, file: !812, line: 189, baseType: !1344, size: 8)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1341, file: !812, line: 186, size: 8, elements: !1345)
!1345 = !{!1346}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !1344, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1341, file: !812, line: 190, baseType: !156, size: 8)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1289, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !1289, file: !812, line: 503, baseType: !1350, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !1353)
!1353 = !{!1354, !1364}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1352, file: !812, line: 230, baseType: !1355, size: 32)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1352, file: !812, line: 221, size: 32, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !1355, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !1355, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !1355, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1355, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1355, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1355, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1355, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1352, file: !812, line: 231, baseType: !173, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !1289, file: !812, line: 504, baseType: !1366, size: 32, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !1369)
!1369 = !{!1370, !1380}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1368, file: !812, line: 266, baseType: !1371, size: 32)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1368, file: !812, line: 257, size: 32, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !1371, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !1371, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !1371, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !1371, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !1371, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !1371, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !1371, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1368, file: !812, line: 267, baseType: !173, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !1289, file: !812, line: 505, baseType: !1382, size: 32, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !1385)
!1385 = !{!1386, !1396}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1384, file: !812, line: 302, baseType: !1387, size: 32)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1384, file: !812, line: 293, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !1387, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1387, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1387, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !1387, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1387, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1387, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1387, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1384, file: !812, line: 303, baseType: !173, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !1289, file: !812, line: 506, baseType: !1398, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !1401)
!1401 = !{!1402, !1426}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1400, file: !812, line: 352, baseType: !1403, size: 32)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !812, line: 329, size: 32, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !1403, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !1403, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !1403, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !1403, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !1403, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !1403, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !1403, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !1403, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !1403, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !1403, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !1403, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !1403, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !1403, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !1403, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !1403, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !1403, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !1403, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !1403, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !1403, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !1403, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !1403, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1400, file: !812, line: 353, baseType: !173, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1289, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1289, file: !812, line: 508, baseType: !1429, size: 8, offset: 416)
!1429 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !1432)
!1432 = !{!1433, !1437}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1431, file: !812, line: 410, baseType: !1434, size: 8)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !812, line: 407, size: 8, elements: !1435)
!1435 = !{!1436}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1434, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1431, file: !812, line: 411, baseType: !156, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1289, file: !812, line: 509, baseType: !1439, size: 8, offset: 424)
!1439 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !1442)
!1442 = !{!1443, !1447}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1441, file: !812, line: 428, baseType: !1444, size: 8)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1441, file: !812, line: 425, size: 8, elements: !1445)
!1445 = !{!1446}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1444, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1441, file: !812, line: 429, baseType: !156, size: 8)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1289, file: !812, line: 510, baseType: !1449, size: 8, offset: 432)
!1449 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !1452)
!1452 = !{!1453, !1457}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1451, file: !812, line: 446, baseType: !1454, size: 8)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1451, file: !812, line: 443, size: 8, elements: !1455)
!1455 = !{!1456}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1454, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1451, file: !812, line: 447, baseType: !156, size: 8)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1289, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !1289, file: !812, line: 512, baseType: !1460, size: 8, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1464)
!1464 = !{!1465, !1474}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1463, file: !812, line: 470, baseType: !1466, size: 8)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1463, file: !812, line: 461, size: 8, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1466, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1466, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1466, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1466, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1466, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1466, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1463, file: !812, line: 471, baseType: !156, size: 8)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !1478)
!1478 = !{!1479, !1489, !1500, !1513, !1530}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1477, file: !745, line: 285, baseType: !1480, size: 8)
!1480 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !1483)
!1483 = !{!1484, !1488}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1482, file: !745, line: 47, baseType: !1485, size: 8)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1482, file: !745, line: 44, size: 8, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1485, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1482, file: !745, line: 48, baseType: !156, size: 8)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1477, file: !745, line: 286, baseType: !1490, size: 8, offset: 8)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !1494)
!1494 = !{!1495, !1499}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1493, file: !745, line: 65, baseType: !1496, size: 8)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !745, line: 62, size: 8, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1496, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1493, file: !745, line: 66, baseType: !156, size: 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !1477, file: !745, line: 287, baseType: !1501, size: 16, offset: 16)
!1501 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !1504)
!1504 = !{!1505, !1512}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1503, file: !745, line: 87, baseType: !1506, size: 16)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !745, line: 80, size: 16, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1506, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1506, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !1506, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1506, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1503, file: !745, line: 88, baseType: !170, size: 16)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1477, file: !745, line: 288, baseType: !1514, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !1517)
!1517 = !{!1518, !1529}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1516, file: !745, line: 212, baseType: !1519, size: 32)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1516, file: !745, line: 200, size: 32, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1519, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1519, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1519, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1519, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1519, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1519, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1519, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1519, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1516, file: !745, line: 213, baseType: !173, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !1477, file: !745, line: 289, baseType: !1531, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !1534)
!1534 = !{!1535, !1540}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1533, file: !745, line: 266, baseType: !1536, size: 32)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1533, file: !745, line: 261, size: 32, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1536, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1536, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1533, file: !745, line: 267, baseType: !173, size: 32)
!1541 = !{!1542, !1054, !1548, !1573, !1594, !1596, !1603}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1056, file: !1544, line: 411, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 80, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 5)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1056, file: !1544, line: 411, type: !1550, isLocal: true, isDefinition: true, align: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1552)
!1552 = !{!1553, !1572}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1551, file: !1015, line: 60, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!103, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1570, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !1024, line: 380, baseType: !256, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1559, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1559, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1559, file: !1024, line: 386, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1566, file: !1024, line: 359, baseType: !156, size: 8)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1566, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1559, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1559, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1551, file: !1015, line: 65, baseType: !1557, size: 32, offset: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "eic_data", scope: !1056, file: !1544, line: 410, type: !1575, isLocal: true, isDefinition: true)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_data", file: !1544, line: 26, size: 256, elements: !1576)
!1576 = !{!1577, !1587}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1575, file: !1544, line: 27, baseType: !1578, size: 128)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 128, elements: !145)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_port_data", file: !1544, line: 21, size: 64, elements: !1580)
!1580 = !{!1581, !1586}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1579, file: !1544, line: 22, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sam0_eic_callback_t", file: !1060, line: 14, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !173, !102}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1579, file: !1544, line: 23, baseType: !102, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1575, file: !1544, line: 28, baseType: !1588, size: 128, offset: 128)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 128, elements: !959)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_line_assignment", file: !1544, line: 15, size: 8, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1589, file: !1544, line: 16, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1589, file: !1544, line: 17, baseType: !156, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1589, file: !1544, line: 18, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1056, file: !1544, line: 411, type: !1566, isLocal: true, isDefinition: true, align: 8)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "sam0_eic_channels", scope: !1056, file: !1598, line: 29, type: !1599, isLocal: true, isDefinition: true)
!1598 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1600, size: 512, elements: !1601)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!1601 = !{!146, !1602}
!1602 = !DISubrange(count: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_0", scope: !1605, file: !1544, line: 356, type: !1606, isLocal: true, isDefinition: true, align: 32)
!1605 = distinct !DISubprogram(name: "sam0_eic_init", scope: !1544, file: !1544, line: 335, type: !1555, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1606, file: !10, line: 55, baseType: !250, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1606, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1606, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1606, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1614, file: !1619, line: 7, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !1616, splitDebugInlining: false, nameTableKind: None)
!1615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1616 = !{!1612, !1617, !1621, !1623}
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1614, file: !1619, line: 12, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 48, elements: !341)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_11", scope: !1614, file: !1619, line: 17, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_29", scope: !1614, file: !1619, line: 22, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1627, file: !1717, line: 603, type: !1719, isLocal: true, isDefinition: true, align: 32)
!1627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1628, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1629, globals: !1714, splitDebugInlining: false, nameTableKind: None)
!1628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1629 = !{!102, !103, !1630}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1633, line: 336, size: 608, elements: !1634)
!1633 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !{!1635, !1655, !1659, !1663, !1676, !1681, !1686, !1692, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1632, file: !1633, line: 365, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!103, !1639, !1654}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646, !1652, !1653}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1641, file: !1024, line: 380, baseType: !256, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1641, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1641, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1641, file: !1024, line: 386, baseType: !1647, size: 32, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1648, file: !1024, line: 359, baseType: !156, size: 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1648, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1641, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1641, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1632, file: !1633, line: 366, baseType: !1656, size: 32, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{null, !1639, !157}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1632, file: !1633, line: 374, baseType: !1660, size: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!103, !1639}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1632, file: !1633, line: 377, baseType: !1664, size: 32, offset: 96)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!103, !1639, !1667}
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1633, line: 122, size: 64, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1675}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1669, file: !1633, line: 123, baseType: !173, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1669, file: !1633, line: 124, baseType: !156, size: 8, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1669, file: !1633, line: 125, baseType: !156, size: 8, offset: 40)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1669, file: !1633, line: 126, baseType: !156, size: 8, offset: 48)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1669, file: !1633, line: 127, baseType: !156, size: 8, offset: 56)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1632, file: !1633, line: 379, baseType: !1677, size: 32, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!103, !1639, !1680}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1632, file: !1633, line: 384, baseType: !1682, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!103, !1639, !1685, !103}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1632, file: !1633, line: 393, baseType: !1687, size: 32, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!103, !1639, !1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1632, file: !1633, line: 402, baseType: !1693, size: 32, offset: 224)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1639}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1632, file: !1633, line: 405, baseType: !1693, size: 32, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1632, file: !1633, line: 408, baseType: !1660, size: 32, offset: 288)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1632, file: !1633, line: 411, baseType: !1693, size: 32, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1632, file: !1633, line: 414, baseType: !1693, size: 32, offset: 352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1632, file: !1633, line: 417, baseType: !1660, size: 32, offset: 384)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1632, file: !1633, line: 420, baseType: !1660, size: 32, offset: 416)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1632, file: !1633, line: 423, baseType: !1693, size: 32, offset: 448)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1632, file: !1633, line: 426, baseType: !1693, size: 32, offset: 480)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1632, file: !1633, line: 429, baseType: !1660, size: 32, offset: 512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1632, file: !1633, line: 432, baseType: !1660, size: 32, offset: 544)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1632, file: !1633, line: 435, baseType: !1707, size: 32, offset: 576)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !1639, !1710, !102}
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1633, line: 142, baseType: !1711)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{null, !1639, !102}
!1714 = !{!1625, !1715}
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1627, file: !1717, line: 38, type: !1718, isLocal: true, isDefinition: true)
!1717 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1720, file: !1015, line: 60, baseType: !1660, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1720, file: !1015, line: 65, baseType: !1639, size: 32, offset: 32)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "gpio_sam0_config_0", scope: !1726, file: !1824, line: 291, type: !1870, isLocal: true, isDefinition: true)
!1726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1727, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1728, retainedTypes: !1740, globals: !1837, splitDebugInlining: false, nameTableKind: None)
!1727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!1728 = !{!1729, !1735, !1059}
!1729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1730, line: 506, baseType: !32, size: 32, elements: !1731)
!1730 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1731 = !{!1732, !1733, !1734}
!1732 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1733 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1734 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1730, line: 512, baseType: !32, size: 32, elements: !1736)
!1736 = !{!1737, !1738, !1739}
!1737 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1738 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1739 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1740 = !{!1741, !1811, !1816, !1776, !1735, !1729, !1821, !102, !1822, !1791, !1836}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1730, line: 523, size: 288, elements: !1744)
!1744 = !{!1745, !1766, !1772, !1777, !1781, !1782, !1783, !1787, !1807}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1743, file: !1730, line: 524, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!103, !1749, !1764, !1765}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1762, !1763}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1751, file: !1024, line: 380, baseType: !256, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1751, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1751, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1751, file: !1024, line: 386, baseType: !1757, size: 32, offset: 96)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1758, file: !1024, line: 359, baseType: !156, size: 8)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1758, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1751, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1751, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1730, line: 237, baseType: !156)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1730, line: 257, baseType: !173)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1743, file: !1730, line: 530, baseType: !1767, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!103, !1749, !1770}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1730, line: 229, baseType: !173)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1743, file: !1730, line: 532, baseType: !1773, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!103, !1749, !1776, !1771}
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1730, line: 216, baseType: !173)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1743, file: !1730, line: 535, baseType: !1778, size: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!103, !1749, !1776}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1743, file: !1730, line: 537, baseType: !1778, size: 32, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1743, file: !1730, line: 539, baseType: !1778, size: 32, offset: 160)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1743, file: !1730, line: 541, baseType: !1784, size: 32, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!103, !1749, !1764, !1729, !1735}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1743, file: !1730, line: 544, baseType: !1788, size: 32, offset: 224)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!103, !1749, !1791, !1035}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1730, line: 478, size: 96, elements: !1793)
!1793 = !{!1794, !1801, !1806}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1792, file: !1730, line: 482, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1796, line: 33, baseType: !1797)
!1796 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1796, line: 29, size: 32, elements: !1798)
!1798 = !{!1799}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1797, file: !1796, line: 30, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1792, file: !1730, line: 485, baseType: !1802, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1730, line: 464, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1749, !1791, !1776}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1792, file: !1730, line: 493, baseType: !1776, size: 32, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1743, file: !1730, line: 547, baseType: !1808, size: 32, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!173, !1749}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1730, line: 428, size: 32, elements: !1814)
!1814 = !{!1815}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1813, file: !1730, line: 434, baseType: !1776, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1730, line: 441, size: 32, elements: !1819)
!1819 = !{!1820}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1818, file: !1730, line: 447, baseType: !1776, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_sam0_data", file: !1824, line: 32, size: 160, elements: !1825)
!1824 = !DIFile(filename: "zephyr/drivers/gpio/gpio_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1825 = !{!1826, !1827, !1828, !1829}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1823, file: !1824, line: 34, baseType: !1818, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1823, file: !1824, line: 35, baseType: !1749, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "debounce", scope: !1823, file: !1824, line: 36, baseType: !1776, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1823, file: !1824, line: 38, baseType: !1830, size: 64, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1796, line: 40, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1796, line: 35, size: 64, elements: !1832)
!1832 = !{!1833, !1835}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1831, file: !1796, line: 36, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1831, file: !1796, line: 37, baseType: !1834, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!1837 = !{!1838, !1840, !1842, !1852, !1854, !1856, !1858, !1860, !1862, !1864, !1724, !1866, !1868}
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1726, file: !1824, line: 303, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1726, file: !1824, line: 303, type: !1750, isLocal: false, isDefinition: true, align: 32)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1726, file: !1824, line: 303, type: !1844, isLocal: true, isDefinition: true, align: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1846)
!1846 = !{!1847, !1851}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1845, file: !1015, line: 60, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!103, !1749}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1845, file: !1015, line: 65, baseType: !1749, size: 32, offset: 32)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_11", scope: !1726, file: !1824, line: 325, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__device_dts_ord_11", scope: !1726, file: !1824, line: 325, type: !1750, isLocal: false, isDefinition: true, align: 32)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_11", scope: !1726, file: !1824, line: 325, type: !1844, isLocal: true, isDefinition: true, align: 32)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "gpio_sam0_data_0", scope: !1726, file: !1824, line: 301, type: !1823, isLocal: true, isDefinition: true)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1726, file: !1824, line: 303, type: !1758, isLocal: true, isDefinition: true, align: 8)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "gpio_sam0_data_1", scope: !1726, file: !1824, line: 323, type: !1823, isLocal: true, isDefinition: true)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_11", scope: !1726, file: !1824, line: 325, type: !1758, isLocal: true, isDefinition: true, align: 8)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "gpio_sam0_api", scope: !1726, file: !1824, line: 272, type: !1742, isLocal: true, isDefinition: true)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "gpio_sam0_config_1", scope: !1726, file: !1824, line: 313, type: !1870, isLocal: true, isDefinition: true)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_sam0_config", file: !1824, line: 23, size: 96, elements: !1872)
!1872 = !{!1873, !1874, !2029}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1871, file: !1824, line: 25, baseType: !1813, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1871, file: !1824, line: 26, baseType: !1875, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !1877, line: 367, baseType: !1878)
!1877 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1877, line: 351, size: 1024, elements: !1879)
!1879 = !{!1880, !1890, !1900, !1910, !1920, !1930, !1940, !1950, !1960, !1971, !1981, !1999, !2000, !2012, !2027}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !1878, file: !1877, line: 352, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1882)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !1877, line: 48, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 43, size: 32, elements: !1884)
!1884 = !{!1885, !1889}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1883, file: !1877, line: 46, baseType: !1886, size: 32)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !1877, line: 44, size: 32, elements: !1887)
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !1886, file: !1877, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1883, file: !1877, line: 47, baseType: !173, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !1878, file: !1877, line: 353, baseType: !1891, size: 32, offset: 32)
!1891 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1892)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !1877, line: 66, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 61, size: 32, elements: !1894)
!1894 = !{!1895, !1899}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1893, file: !1877, line: 64, baseType: !1896, size: 32)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1893, file: !1877, line: 62, size: 32, elements: !1897)
!1897 = !{!1898}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !1896, file: !1877, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1893, file: !1877, line: 65, baseType: !173, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !1878, file: !1877, line: 354, baseType: !1901, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !1877, line: 84, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 79, size: 32, elements: !1904)
!1904 = !{!1905, !1909}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1903, file: !1877, line: 82, baseType: !1906, size: 32)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1903, file: !1877, line: 80, size: 32, elements: !1907)
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !1906, file: !1877, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1903, file: !1877, line: 83, baseType: !173, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !1878, file: !1877, line: 355, baseType: !1911, size: 32, offset: 96)
!1911 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !1877, line: 102, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 97, size: 32, elements: !1914)
!1914 = !{!1915, !1919}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1913, file: !1877, line: 100, baseType: !1916, size: 32)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1913, file: !1877, line: 98, size: 32, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !1916, file: !1877, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1913, file: !1877, line: 101, baseType: !173, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !1878, file: !1877, line: 356, baseType: !1921, size: 32, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1922)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !1877, line: 120, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 115, size: 32, elements: !1924)
!1924 = !{!1925, !1929}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1923, file: !1877, line: 118, baseType: !1926, size: 32)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1923, file: !1877, line: 116, size: 32, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !1926, file: !1877, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1923, file: !1877, line: 119, baseType: !173, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !1878, file: !1877, line: 357, baseType: !1931, size: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !1877, line: 138, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 133, size: 32, elements: !1934)
!1934 = !{!1935, !1939}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1933, file: !1877, line: 136, baseType: !1936, size: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1933, file: !1877, line: 134, size: 32, elements: !1937)
!1937 = !{!1938}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !1936, file: !1877, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1933, file: !1877, line: 137, baseType: !173, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !1878, file: !1877, line: 358, baseType: !1941, size: 32, offset: 192)
!1941 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1942)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !1877, line: 156, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 151, size: 32, elements: !1944)
!1944 = !{!1945, !1949}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1943, file: !1877, line: 154, baseType: !1946, size: 32)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1877, line: 152, size: 32, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !1946, file: !1877, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1943, file: !1877, line: 155, baseType: !173, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !1878, file: !1877, line: 359, baseType: !1951, size: 32, offset: 224)
!1951 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !1877, line: 174, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 169, size: 32, elements: !1954)
!1954 = !{!1955, !1959}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1953, file: !1877, line: 172, baseType: !1956, size: 32)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1953, file: !1877, line: 170, size: 32, elements: !1957)
!1957 = !{!1958}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !1956, file: !1877, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1953, file: !1877, line: 173, baseType: !173, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !1878, file: !1877, line: 360, baseType: !1961, size: 32, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1962)
!1962 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !1877, line: 192, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 187, size: 32, elements: !1965)
!1965 = !{!1966, !1970}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1964, file: !1877, line: 190, baseType: !1967, size: 32)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1964, file: !1877, line: 188, size: 32, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !1967, file: !1877, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1964, file: !1877, line: 191, baseType: !173, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1878, file: !1877, line: 361, baseType: !1972, size: 32, offset: 288)
!1972 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1973)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !1877, line: 210, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 205, size: 32, elements: !1975)
!1975 = !{!1976, !1980}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1974, file: !1877, line: 208, baseType: !1977, size: 32)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1974, file: !1877, line: 206, size: 32, elements: !1978)
!1978 = !{!1979}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !1977, file: !1877, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1974, file: !1877, line: 209, baseType: !173, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !1878, file: !1877, line: 362, baseType: !1982, size: 32, offset: 320)
!1982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !1877, line: 239, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 223, size: 32, elements: !1985)
!1985 = !{!1986, !1998}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1984, file: !1877, line: 237, baseType: !1987, size: 32)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1984, file: !1877, line: 224, size: 32, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !1987, file: !1877, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !1987, file: !1877, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !1987, file: !1877, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !1987, file: !1877, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !1987, file: !1877, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !1987, file: !1877, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !1987, file: !1877, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !1987, file: !1877, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !1987, file: !1877, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1984, file: !1877, line: 238, baseType: !173, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1878, file: !1877, line: 363, baseType: !661, size: 32, offset: 352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !1878, file: !1877, line: 364, baseType: !2001, size: 128, offset: 384)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2002, size: 128, elements: !959)
!2002 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2003)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !1877, line: 275, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 269, size: 8, elements: !2005)
!2005 = !{!2006, !2011}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2004, file: !1877, line: 273, baseType: !2007, size: 8)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !1877, line: 270, size: 8, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !2007, file: !1877, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !2007, file: !1877, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2004, file: !1877, line: 274, baseType: !156, size: 8)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !1878, file: !1877, line: 365, baseType: !2013, size: 256, offset: 512)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 256, elements: !2026)
!2014 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !1877, line: 333, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 323, size: 8, elements: !2017)
!2017 = !{!2018, !2025}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2016, file: !1877, line: 331, baseType: !2019, size: 8)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2016, file: !1877, line: 324, size: 8, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2019, file: !1877, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2019, file: !1877, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2019, file: !1877, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2019, file: !1877, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2016, file: !1877, line: 332, baseType: !156, size: 8)
!2026 = !{!1602}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1878, file: !1877, line: 366, baseType: !2028, size: 256, offset: 768)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 256, elements: !2026)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1871, file: !1824, line: 28, baseType: !156, size: 8, offset: 64)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "uart_sam0_config_0", scope: !2032, file: !2525, line: 1293, type: !2581, isLocal: true, isDefinition: true)
!2032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2033, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2034, retainedTypes: !2079, globals: !2522, splitDebugInlining: false, nameTableKind: None)
!2033 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!2034 = !{!30, !2035, !2047, !2054, !2059, !2066, !2072}
!2035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_channel_direction", file: !2036, line: 31, baseType: !32, size: 32, elements: !2037)
!2036 = !DIFile(filename: "zephyr/include/zephyr/drivers/dma.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2037 = !{!2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2038 = !DIEnumerator(name: "MEMORY_TO_MEMORY", value: 0)
!2039 = !DIEnumerator(name: "MEMORY_TO_PERIPHERAL", value: 1)
!2040 = !DIEnumerator(name: "PERIPHERAL_TO_MEMORY", value: 2)
!2041 = !DIEnumerator(name: "PERIPHERAL_TO_PERIPHERAL", value: 3)
!2042 = !DIEnumerator(name: "HOST_TO_MEMORY", value: 4)
!2043 = !DIEnumerator(name: "MEMORY_TO_HOST", value: 5)
!2044 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_COMMON_COUNT", value: 6)
!2045 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_PRIV_START", value: 6)
!2046 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_MAX", value: 7)
!2047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1633, line: 47, baseType: !32, size: 32, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053}
!2049 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!2050 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!2051 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!2052 = !DIEnumerator(name: "UART_BREAK", value: 8)
!2053 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!2054 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1633, line: 107, baseType: !32, size: 32, elements: !2055)
!2055 = !{!2056, !2057, !2058}
!2056 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!2057 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!2058 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!2059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1633, line: 75, baseType: !32, size: 32, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065}
!2061 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!2062 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!2063 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!2064 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!2065 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!2066 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1633, line: 84, baseType: !32, size: 32, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071}
!2068 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!2069 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!2070 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!2071 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!2072 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1633, line: 92, baseType: !32, size: 32, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2077, !2078}
!2074 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!2075 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!2076 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!2077 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!2078 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!2079 = !{!2080, !102, !103, !2159, !2258, !24, !157, !2246, !170, !2268, !2334}
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1633, line: 336, size: 608, elements: !2083)
!2083 = !{!2084, !2103, !2107, !2111, !2124, !2129, !2133, !2137, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2082, file: !1633, line: 365, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!103, !2088, !1654}
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2095, !2101, !2102}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2090, file: !1024, line: 380, baseType: !256, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2090, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2090, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2090, file: !1024, line: 386, baseType: !2096, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2098)
!2098 = !{!2099, !2100}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2097, file: !1024, line: 359, baseType: !156, size: 8)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2097, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2090, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2090, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2082, file: !1633, line: 366, baseType: !2104, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !2088, !157}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2082, file: !1633, line: 374, baseType: !2108, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!103, !2088}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2082, file: !1633, line: 377, baseType: !2112, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!103, !2088, !2115}
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1633, line: 122, size: 64, elements: !2118)
!2118 = !{!2119, !2120, !2121, !2122, !2123}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2117, file: !1633, line: 123, baseType: !173, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2117, file: !1633, line: 124, baseType: !156, size: 8, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2117, file: !1633, line: 125, baseType: !156, size: 8, offset: 40)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2117, file: !1633, line: 126, baseType: !156, size: 8, offset: 48)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2117, file: !1633, line: 127, baseType: !156, size: 8, offset: 56)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2082, file: !1633, line: 379, baseType: !2125, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!103, !2088, !2128}
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2082, file: !1633, line: 384, baseType: !2130, size: 32, offset: 160)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!103, !2088, !1685, !103}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2082, file: !1633, line: 393, baseType: !2134, size: 32, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!103, !2088, !1690, !1691}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2082, file: !1633, line: 402, baseType: !2138, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2088}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2082, file: !1633, line: 405, baseType: !2138, size: 32, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2082, file: !1633, line: 408, baseType: !2108, size: 32, offset: 288)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2082, file: !1633, line: 411, baseType: !2138, size: 32, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2082, file: !1633, line: 414, baseType: !2138, size: 32, offset: 352)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2082, file: !1633, line: 417, baseType: !2108, size: 32, offset: 384)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2082, file: !1633, line: 420, baseType: !2108, size: 32, offset: 416)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2082, file: !1633, line: 423, baseType: !2138, size: 32, offset: 448)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2082, file: !1633, line: 426, baseType: !2138, size: 32, offset: 480)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2082, file: !1633, line: 429, baseType: !2108, size: 32, offset: 512)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2082, file: !1633, line: 432, baseType: !2108, size: 32, offset: 544)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2082, file: !1633, line: 435, baseType: !2152, size: 32, offset: 576)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = !DISubroutineType(types: !2154)
!2154 = !{null, !2088, !2155, !102}
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1633, line: 142, baseType: !2156)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{null, !2088, !102}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_driver_api", file: !2036, line: 304, size: 288, elements: !2162)
!2162 = !{!2163, !2215, !2220, !2225, !2227, !2229, !2231, !2248, !2253}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2161, file: !2036, line: 305, baseType: !2164, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_config", file: !2036, line: 264, baseType: !2165)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!103, !2088, !173, !2168}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_config", file: !2036, line: 194, size: 224, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2209, !2210}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slot", scope: !2169, file: !2036, line: 195, baseType: !173, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "channel_direction", scope: !2169, file: !2036, line: 196, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "complete_callback_en", scope: !2169, file: !2036, line: 197, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_en", scope: !2169, file: !2036, line: 198, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "source_handshake", scope: !2169, file: !2036, line: 199, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "dest_handshake", scope: !2169, file: !2036, line: 200, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "channel_priority", scope: !2169, file: !2036, line: 201, baseType: !173, size: 4, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "source_chaining_en", scope: !2169, file: !2036, line: 202, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chaining_en", scope: !2169, file: !2036, line: 203, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "linked_channel", scope: !2169, file: !2036, line: 204, baseType: !173, size: 7, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !2169, file: !2036, line: 205, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2169, file: !2036, line: 206, baseType: !173, size: 3, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "source_data_size", scope: !2169, file: !2036, line: 207, baseType: !173, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "dest_data_size", scope: !2169, file: !2036, line: 208, baseType: !173, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 0)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "source_burst_length", scope: !2169, file: !2036, line: 209, baseType: !173, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 0)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dest_burst_length", scope: !2169, file: !2036, line: 210, baseType: !173, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 0)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !2169, file: !2036, line: 211, baseType: !173, size: 32, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "head_block", scope: !2169, file: !2036, line: 212, baseType: !2189, size: 32, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_block_config", file: !2036, line: 113, size: 256, elements: !2191)
!2191 = !{!2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "source_address", scope: !2190, file: !2036, line: 118, baseType: !173, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dest_address", scope: !2190, file: !2036, line: 119, baseType: !173, size: 32, offset: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_interval", scope: !2190, file: !2036, line: 121, baseType: !173, size: 32, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_interval", scope: !2190, file: !2036, line: 122, baseType: !173, size: 32, offset: 96)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_count", scope: !2190, file: !2036, line: 123, baseType: !170, size: 16, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_count", scope: !2190, file: !2036, line: 124, baseType: !170, size: 16, offset: 144)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2190, file: !2036, line: 125, baseType: !173, size: 32, offset: 160)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "next_block", scope: !2190, file: !2036, line: 126, baseType: !2189, size: 32, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_en", scope: !2190, file: !2036, line: 127, baseType: !170, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_en", scope: !2190, file: !2036, line: 128, baseType: !170, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "source_addr_adj", scope: !2190, file: !2036, line: 129, baseType: !170, size: 2, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_adj", scope: !2190, file: !2036, line: 130, baseType: !170, size: 2, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "source_reload_en", scope: !2190, file: !2036, line: 131, baseType: !170, size: 1, offset: 230, flags: DIFlagBitField, extraData: i64 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "dest_reload_en", scope: !2190, file: !2036, line: 132, baseType: !170, size: 1, offset: 231, flags: DIFlagBitField, extraData: i64 224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_mode_control", scope: !2190, file: !2036, line: 133, baseType: !170, size: 4, offset: 232, flags: DIFlagBitField, extraData: i64 224)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control_mode", scope: !2190, file: !2036, line: 134, baseType: !170, size: 1, offset: 236, flags: DIFlagBitField, extraData: i64 224)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2190, file: !2036, line: 135, baseType: !170, size: 3, offset: 237, flags: DIFlagBitField, extraData: i64 224)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2169, file: !2036, line: 213, baseType: !102, size: 32, offset: 160)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dma_callback", scope: !2169, file: !2036, line: 214, baseType: !2211, size: 32, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_callback_t", file: !2036, line: 150, baseType: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{null, !2088, !102, !173, !103}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "reload", scope: !2161, file: !2036, line: 306, baseType: !2216, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_reload", file: !2036, line: 271, baseType: !2217)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!103, !2088, !173, !173, !173, !217}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2161, file: !2036, line: 307, baseType: !2221, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_start", file: !2036, line: 275, baseType: !2222)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!103, !2088, !173}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2161, file: !2036, line: 308, baseType: !2226, size: 32, offset: 96)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_stop", file: !2036, line: 277, baseType: !2222)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2161, file: !2036, line: 309, baseType: !2228, size: 32, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_suspend", file: !2036, line: 279, baseType: !2222)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2161, file: !2036, line: 310, baseType: !2230, size: 32, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_resume", file: !2036, line: 281, baseType: !2222)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2161, file: !2036, line: 311, baseType: !2232, size: 32, offset: 192)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_status", file: !2036, line: 283, baseType: !2233)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!103, !2088, !173, !2236}
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_status", file: !2036, line: 229, size: 256, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242, !2243, !2244, !2245}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2237, file: !2036, line: 230, baseType: !1035, size: 8)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2237, file: !2036, line: 231, baseType: !2035, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pending_length", scope: !2237, file: !2036, line: 232, baseType: !173, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2237, file: !2036, line: 233, baseType: !173, size: 32, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "write_position", scope: !2237, file: !2036, line: 234, baseType: !173, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "read_position", scope: !2237, file: !2036, line: 235, baseType: !173, size: 32, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "total_copied", scope: !2237, file: !2036, line: 236, baseType: !2246, size: 64, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2247)
!2247 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "get_attribute", scope: !2161, file: !2036, line: 312, baseType: !2249, size: 32, offset: 224)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_attribute", file: !2036, line: 286, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!103, !2088, !173, !742}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "chan_filter", scope: !2161, file: !2036, line: 313, baseType: !2254, size: 32, offset: 256)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_chan_filter", file: !2036, line: 301, baseType: !2255)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!1035, !2088, !103, !102}
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_context", file: !2036, line: 249, size: 96, elements: !2260)
!2260 = !{!2261, !2262, !2263}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2259, file: !2036, line: 250, baseType: !250, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channels", scope: !2259, file: !2036, line: 251, baseType: !103, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !2259, file: !2036, line: 252, baseType: !2264, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !2266, line: 22, baseType: !2267)
!2266 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2267 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !2271)
!2271 = !{!2272, !2282, !2293, !2306, !2323}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2270, file: !745, line: 285, baseType: !2273, size: 8)
!2273 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2274)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !2276)
!2276 = !{!2277, !2281}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2275, file: !745, line: 47, baseType: !2278, size: 8)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2275, file: !745, line: 44, size: 8, elements: !2279)
!2279 = !{!2280}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2278, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2275, file: !745, line: 48, baseType: !156, size: 8)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2270, file: !745, line: 286, baseType: !2283, size: 8, offset: 8)
!2283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2285)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !2287)
!2287 = !{!2288, !2292}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2286, file: !745, line: 65, baseType: !2289, size: 8)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !745, line: 62, size: 8, elements: !2290)
!2290 = !{!2291}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2289, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2286, file: !745, line: 66, baseType: !156, size: 8)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !2270, file: !745, line: 287, baseType: !2294, size: 16, offset: 16)
!2294 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !2296)
!2296 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !2297)
!2297 = !{!2298, !2305}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2296, file: !745, line: 87, baseType: !2299, size: 16)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2296, file: !745, line: 80, size: 16, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2299, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !2299, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !2299, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !2299, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2296, file: !745, line: 88, baseType: !170, size: 16)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !2270, file: !745, line: 288, baseType: !2307, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !2309)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !2310)
!2310 = !{!2311, !2322}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2309, file: !745, line: 212, baseType: !2312, size: 32)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2309, file: !745, line: 200, size: 32, elements: !2313)
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2312, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !2312, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !2312, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !2312, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !2312, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !2312, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !2312, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2312, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2309, file: !745, line: 213, baseType: !173, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !2270, file: !745, line: 289, baseType: !2324, size: 32, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2325)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !2327)
!2327 = !{!2328, !2333}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2326, file: !745, line: 266, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2326, file: !745, line: 261, size: 32, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2329, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !2329, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2326, file: !745, line: 267, baseType: !173, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !2337)
!2337 = !{!2338, !2344, !2354, !2355, !2365, !2375, !2385, !2395, !2396, !2412, !2428, !2444, !2474, !2475, !2485, !2495, !2505, !2506}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2336, file: !812, line: 495, baseType: !2339, size: 8)
!2339 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !2342)
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2341, file: !812, line: 44, baseType: !156, size: 8)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !2336, file: !812, line: 496, baseType: !2345, size: 8, offset: 8)
!2345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2346)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !2348)
!2348 = !{!2349, !2353}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2347, file: !812, line: 59, baseType: !2350, size: 8)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2347, file: !812, line: 56, size: 8, elements: !2351)
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !2350, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2347, file: !812, line: 60, baseType: !156, size: 8)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2336, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !2336, file: !812, line: 498, baseType: !2356, size: 8, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2357)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !2358)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !2359)
!2359 = !{!2360, !2364}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2358, file: !812, line: 84, baseType: !2361, size: 8)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2358, file: !812, line: 81, size: 8, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !2361, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2358, file: !812, line: 85, baseType: !156, size: 8)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !2336, file: !812, line: 499, baseType: !2366, size: 8, offset: 72)
!2366 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2367)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !2369)
!2369 = !{!2370, !2374}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2368, file: !812, line: 119, baseType: !2371, size: 8)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2368, file: !812, line: 116, size: 8, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !2371, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2368, file: !812, line: 120, baseType: !156, size: 8)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !2336, file: !812, line: 500, baseType: !2376, size: 8, offset: 80)
!2376 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2377)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !2379)
!2379 = !{!2380, !2384}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2378, file: !812, line: 154, baseType: !2381, size: 8)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2378, file: !812, line: 151, size: 8, elements: !2382)
!2382 = !{!2383}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !2381, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2378, file: !812, line: 155, baseType: !156, size: 8)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !2336, file: !812, line: 501, baseType: !2386, size: 8, offset: 88)
!2386 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2387)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !2388)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !2389)
!2389 = !{!2390, !2394}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2388, file: !812, line: 189, baseType: !2391, size: 8)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2388, file: !812, line: 186, size: 8, elements: !2392)
!2392 = !{!2393}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !2391, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2388, file: !812, line: 190, baseType: !156, size: 8)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2336, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !2336, file: !812, line: 503, baseType: !2397, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2398)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !2400)
!2400 = !{!2401, !2411}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2399, file: !812, line: 230, baseType: !2402, size: 32)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2399, file: !812, line: 221, size: 32, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407, !2408, !2409, !2410}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !2402, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !2402, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !2402, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2402, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2402, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2402, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2402, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2399, file: !812, line: 231, baseType: !173, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !2336, file: !812, line: 504, baseType: !2413, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2414)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !2416)
!2416 = !{!2417, !2427}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2415, file: !812, line: 266, baseType: !2418, size: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2415, file: !812, line: 257, size: 32, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !2418, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !2418, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !2418, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !2418, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !2418, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !2418, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !2418, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2415, file: !812, line: 267, baseType: !173, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !2336, file: !812, line: 505, baseType: !2429, size: 32, offset: 224)
!2429 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2430)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !2431)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !2432)
!2432 = !{!2433, !2443}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2431, file: !812, line: 302, baseType: !2434, size: 32)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2431, file: !812, line: 293, size: 32, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !2434, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2434, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2434, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !2434, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2434, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2434, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !2434, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2431, file: !812, line: 303, baseType: !173, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !2336, file: !812, line: 506, baseType: !2445, size: 32, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !2447)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !2448)
!2448 = !{!2449, !2473}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2447, file: !812, line: 352, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2447, file: !812, line: 329, size: 32, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !2450, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !2450, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !2450, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !2450, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !2450, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !2450, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !2450, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !2450, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !2450, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !2450, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !2450, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !2450, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !2450, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !2450, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !2450, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !2450, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !2450, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !2450, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !2450, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !2450, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !2450, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2447, file: !812, line: 353, baseType: !173, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2336, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2336, file: !812, line: 508, baseType: !2476, size: 8, offset: 416)
!2476 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2477)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !2478)
!2478 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !2479)
!2479 = !{!2480, !2484}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2478, file: !812, line: 410, baseType: !2481, size: 8)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2478, file: !812, line: 407, size: 8, elements: !2482)
!2482 = !{!2483}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2481, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2478, file: !812, line: 411, baseType: !156, size: 8)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2336, file: !812, line: 509, baseType: !2486, size: 8, offset: 424)
!2486 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2487)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !2489)
!2489 = !{!2490, !2494}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2488, file: !812, line: 428, baseType: !2491, size: 8)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2488, file: !812, line: 425, size: 8, elements: !2492)
!2492 = !{!2493}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2491, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2488, file: !812, line: 429, baseType: !156, size: 8)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2336, file: !812, line: 510, baseType: !2496, size: 8, offset: 432)
!2496 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2497)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !2499)
!2499 = !{!2500, !2504}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2498, file: !812, line: 446, baseType: !2501, size: 8)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2498, file: !812, line: 443, size: 8, elements: !2502)
!2502 = !{!2503}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2501, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2498, file: !812, line: 447, baseType: !156, size: 8)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2336, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !2336, file: !812, line: 512, baseType: !2507, size: 8, offset: 448)
!2507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2509)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !2511)
!2511 = !{!2512, !2521}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2510, file: !812, line: 470, baseType: !2513, size: 8)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !812, line: 461, size: 8, elements: !2514)
!2514 = !{!2515, !2516, !2517, !2518, !2519, !2520}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !2513, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !2513, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !2513, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !2513, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !2513, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !2513, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2510, file: !812, line: 471, baseType: !156, size: 8)
!2522 = !{!2523, !2527, !2529, !2536, !2543, !2030, !2545, !2554, !2573, !2576, !2579}
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2526, isLocal: false, isDefinition: true, align: 16)
!2525 = !DIFile(filename: "zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, elements: !877)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "__device_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2089, isLocal: false, isDefinition: true, align: 32)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2531, isLocal: true, isDefinition: true, align: 32)
!2531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2532, file: !1015, line: 60, baseType: !2108, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2532, file: !1015, line: 65, baseType: !2088, size: 32, offset: 32)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "uart_sam0_data_0", scope: !2032, file: !2525, line: 1293, type: !2538, isLocal: true, isDefinition: true)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_data", file: !2525, line: 60, size: 128, elements: !2539)
!2539 = !{!2540, !2541, !2542}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "config_cache", scope: !2538, file: !2525, line: 61, baseType: !2117, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2538, file: !2525, line: 63, baseType: !2155, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !2538, file: !2525, line: 64, baseType: !102, size: 32, offset: 96)
!2543 = !DIGlobalVariableExpression(var: !2544, expr: !DIExpression())
!2544 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2097, isLocal: true, isDefinition: true, align: 8)
!2545 = !DIGlobalVariableExpression(var: !2546, expr: !DIExpression())
!2546 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_0", scope: !2547, file: !2525, line: 1293, type: !2548, isLocal: true, isDefinition: true, align: 32)
!2547 = distinct !DISubprogram(name: "uart_sam0_irq_config_0", scope: !2525, file: !2525, line: 1293, type: !2139, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !2549)
!2549 = !{!2550, !2551, !2552, !2553}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2548, file: !10, line: 55, baseType: !250, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2548, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2548, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2548, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!2554 = !DIGlobalVariableExpression(var: !2555, expr: !DIExpression())
!2555 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2556, isLocal: true, isDefinition: true)
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2558, line: 60, size: 64, elements: !2559)
!2558 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2559 = !{!2560, !2572}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2557, file: !2558, line: 69, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2558, line: 50, size: 64, elements: !2564)
!2564 = !{!2565, !2570, !2571}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2563, file: !2558, line: 52, baseType: !2566, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2569, line: 32, baseType: !173)
!2569 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2563, file: !2558, line: 54, baseType: !156, size: 8, offset: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2563, file: !2558, line: 56, baseType: !156, size: 8, offset: 40)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2557, file: !2558, line: 71, baseType: !156, size: 8, offset: 32)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2575, isLocal: true, isDefinition: true)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2562, size: 64, elements: !993)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_29", scope: !2032, file: !2525, line: 1293, type: !2578, isLocal: true, isDefinition: true)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2567, size: 64, elements: !145)
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "uart_sam0_driver_api", scope: !2032, file: !2525, line: 1160, type: !2081, isLocal: true, isDefinition: true)
!2581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_cfg", file: !2525, line: 33, size: 256, elements: !2583)
!2583 = !{!2584, !2767, !2768, !2769, !2770, !2771, !2772, !2773}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2582, file: !2525, line: 34, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "SercomUsart", file: !2587, line: 1479, baseType: !2588)
!2587 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sercom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2587, line: 1460, size: 416, elements: !2589)
!2589 = !{!2590, !2612, !2629, !2630, !2654, !2664, !2666, !2682, !2683, !2699, !2700, !2716, !2717, !2732, !2745, !2746, !2756, !2757}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !2588, file: !2587, line: 1461, baseType: !2591, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2592)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLA_Type", file: !2587, line: 269, baseType: !2593)
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 248, size: 32, elements: !2594)
!2594 = !{!2595, !2611}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2593, file: !2587, line: 267, baseType: !2596, size: 32)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2593, file: !2587, line: 249, size: 32, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2596, file: !2587, line: 250, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2596, file: !2587, line: 251, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !2596, file: !2587, line: 252, baseType: !173, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2596, file: !2587, line: 254, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "IBON", scope: !2596, file: !2587, line: 255, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPR", scope: !2596, file: !2587, line: 257, baseType: !173, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "TXPO", scope: !2596, file: !2587, line: 258, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RXPO", scope: !2596, file: !2587, line: 260, baseType: !173, size: 2, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPA", scope: !2596, file: !2587, line: 261, baseType: !173, size: 2, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "FORM", scope: !2596, file: !2587, line: 262, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CMODE", scope: !2596, file: !2587, line: 263, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CPOL", scope: !2596, file: !2587, line: 264, baseType: !173, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "DORD", scope: !2596, file: !2587, line: 265, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2593, file: !2587, line: 268, baseType: !173, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2588, file: !2587, line: 1462, baseType: !2613, size: 32, offset: 32)
!2613 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2614)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLB_Type", file: !2587, line: 446, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 429, size: 32, elements: !2616)
!2616 = !{!2617, !2628}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2615, file: !2587, line: 444, baseType: !2618, size: 32)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2615, file: !2587, line: 430, size: 32, elements: !2619)
!2619 = !{!2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CHSIZE", scope: !2618, file: !2587, line: 431, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "SBMODE", scope: !2618, file: !2587, line: 433, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "COLDEN", scope: !2618, file: !2587, line: 435, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "SFDE", scope: !2618, file: !2587, line: 436, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ENC", scope: !2618, file: !2587, line: 437, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PMODE", scope: !2618, file: !2587, line: 439, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "TXEN", scope: !2618, file: !2587, line: 441, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "RXEN", scope: !2618, file: !2587, line: 442, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2615, file: !2587, line: 445, baseType: !173, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2588, file: !2587, line: 1463, baseType: !661, size: 32, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2588, file: !2587, line: 1464, baseType: !2631, size: 16, offset: 96)
!2631 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2632)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_BAUD_Type", file: !2587, line: 537, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 521, size: 16, elements: !2634)
!2634 = !{!2635, !2639, !2644, !2649, !2653}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2633, file: !2587, line: 524, baseType: !2636, size: 16)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2633, file: !2587, line: 522, size: 16, elements: !2637)
!2637 = !{!2638}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2636, file: !2587, line: 523, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "FRAC", scope: !2633, file: !2587, line: 528, baseType: !2640, size: 16)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2633, file: !2587, line: 525, size: 16, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2640, file: !2587, line: 526, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2640, file: !2587, line: 527, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "FRACFP", scope: !2633, file: !2587, line: 532, baseType: !2645, size: 16)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2633, file: !2587, line: 529, size: 16, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2645, file: !2587, line: 530, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2645, file: !2587, line: 531, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "USARTFP", scope: !2633, file: !2587, line: 535, baseType: !2650, size: 16)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2633, file: !2587, line: 533, size: 16, elements: !2651)
!2651 = !{!2652}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2650, file: !2587, line: 534, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2633, file: !2587, line: 536, baseType: !170, size: 16)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2588, file: !2587, line: 1465, baseType: !2655, size: 8, offset: 112)
!2655 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2656)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXPL_Type", file: !2587, line: 579, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 574, size: 8, elements: !2658)
!2658 = !{!2659, !2663}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2657, file: !2587, line: 577, baseType: !2660, size: 8)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2657, file: !2587, line: 575, size: 8, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2660, file: !2587, line: 576, baseType: !156, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2657, file: !2587, line: 578, baseType: !156, size: 8)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2588, file: !2587, line: 1466, baseType: !2665, size: 40, offset: 120)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 40, elements: !1546)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2588, file: !2587, line: 1467, baseType: !2667, size: 8, offset: 160)
!2667 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2668)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENCLR_Type", file: !2587, line: 685, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 673, size: 8, elements: !2670)
!2670 = !{!2671, !2681}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2669, file: !2587, line: 683, baseType: !2672, size: 8)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2669, file: !2587, line: 674, size: 8, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2672, file: !2587, line: 675, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2672, file: !2587, line: 676, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2672, file: !2587, line: 677, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2672, file: !2587, line: 678, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2672, file: !2587, line: 679, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2672, file: !2587, line: 680, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2672, file: !2587, line: 682, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2669, file: !2587, line: 684, baseType: !156, size: 8)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2588, file: !2587, line: 1468, baseType: !992, size: 8, offset: 168)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2588, file: !2587, line: 1469, baseType: !2684, size: 8, offset: 176)
!2684 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2685)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENSET_Type", file: !2587, line: 802, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 790, size: 8, elements: !2687)
!2687 = !{!2688, !2698}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2686, file: !2587, line: 800, baseType: !2689, size: 8)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2686, file: !2587, line: 791, size: 8, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2689, file: !2587, line: 792, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2689, file: !2587, line: 793, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2689, file: !2587, line: 794, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2689, file: !2587, line: 795, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2689, file: !2587, line: 796, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2689, file: !2587, line: 797, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2689, file: !2587, line: 799, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2686, file: !2587, line: 801, baseType: !156, size: 8)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2588, file: !2587, line: 1470, baseType: !992, size: 8, offset: 184)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2588, file: !2587, line: 1471, baseType: !2701, size: 8, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTFLAG_Type", file: !2587, line: 919, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 907, size: 8, elements: !2704)
!2704 = !{!2705, !2715}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2703, file: !2587, line: 917, baseType: !2706, size: 8)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2703, file: !2587, line: 908, size: 8, elements: !2707)
!2707 = !{!2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2706, file: !2587, line: 909, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2706, file: !2587, line: 910, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2706, file: !2587, line: 911, baseType: !301, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2706, file: !2587, line: 912, baseType: !301, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2706, file: !2587, line: 913, baseType: !301, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2706, file: !2587, line: 914, baseType: !301, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2706, file: !2587, line: 916, baseType: !301, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2703, file: !2587, line: 918, baseType: !156, size: 8)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2588, file: !2587, line: 1472, baseType: !992, size: 8, offset: 200)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2588, file: !2587, line: 1473, baseType: !2718, size: 16, offset: 208)
!2718 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2719)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_STATUS_Type", file: !2587, line: 1061, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 1050, size: 16, elements: !2721)
!2721 = !{!2722, !2731}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2720, file: !2587, line: 1059, baseType: !2723, size: 16)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2720, file: !2587, line: 1051, size: 16, elements: !2724)
!2724 = !{!2725, !2726, !2727, !2728, !2729, !2730}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "PERR", scope: !2723, file: !2587, line: 1052, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "FERR", scope: !2723, file: !2587, line: 1053, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "BUFOVF", scope: !2723, file: !2587, line: 1054, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CTS", scope: !2723, file: !2587, line: 1055, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ISF", scope: !2723, file: !2587, line: 1056, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "COLL", scope: !2723, file: !2587, line: 1057, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2720, file: !2587, line: 1060, baseType: !170, size: 16)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2588, file: !2587, line: 1474, baseType: !2733, size: 32, offset: 224)
!2733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!2734 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2735)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_SYNCBUSY_Type", file: !2587, line: 1160, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 1152, size: 32, elements: !2737)
!2737 = !{!2738, !2744}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2736, file: !2587, line: 1158, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2736, file: !2587, line: 1153, size: 32, elements: !2740)
!2740 = !{!2741, !2742, !2743}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2739, file: !2587, line: 1154, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2739, file: !2587, line: 1155, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2739, file: !2587, line: 1156, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2736, file: !2587, line: 1159, baseType: !173, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2588, file: !2587, line: 1475, baseType: !876, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2588, file: !2587, line: 1476, baseType: !2747, size: 16, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2748)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DATA_Type", file: !2587, line: 1325, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 1319, size: 16, elements: !2750)
!2750 = !{!2751, !2755}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2749, file: !2587, line: 1323, baseType: !2752, size: 16)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2749, file: !2587, line: 1320, size: 16, elements: !2753)
!2753 = !{!2754}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2752, file: !2587, line: 1321, baseType: !170, size: 9, flags: DIFlagBitField, extraData: i64 0)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2749, file: !2587, line: 1324, baseType: !170, size: 16)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2588, file: !2587, line: 1477, baseType: !832, size: 48, offset: 336)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "DBGCTRL", scope: !2588, file: !2587, line: 1478, baseType: !2758, size: 8, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2759)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DBGCTRL_Type", file: !2587, line: 1380, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2587, line: 1374, size: 8, elements: !2761)
!2761 = !{!2762, !2766}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2760, file: !2587, line: 1378, baseType: !2763, size: 8)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !2587, line: 1375, size: 8, elements: !2764)
!2764 = !{!2765}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "DBGSTOP", scope: !2763, file: !2587, line: 1376, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2760, file: !2587, line: 1379, baseType: !156, size: 8)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2582, file: !2525, line: 35, baseType: !173, size: 32, offset: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !2582, file: !2525, line: 36, baseType: !173, size: 32, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "collision_detect", scope: !2582, file: !2525, line: 37, baseType: !1035, size: 8, offset: 96)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "pm_apbcmask", scope: !2582, file: !2525, line: 43, baseType: !173, size: 32, offset: 128)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "gclk_clkctrl_id", scope: !2582, file: !2525, line: 44, baseType: !170, size: 16, offset: 160)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !2582, file: !2525, line: 47, baseType: !2138, size: 32, offset: 192)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2582, file: !2525, line: 56, baseType: !2774, size: 32, offset: 224)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 32)
!2775 = !DIGlobalVariableExpression(var: !2776, expr: !DIExpression())
!2776 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2777, file: !2865, line: 65, type: !466, isLocal: true, isDefinition: true)
!2777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2778, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2779, retainedTypes: !2814, globals: !2862, splitDebugInlining: false, nameTableKind: None)
!2778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!2779 = !{!2780}
!2780 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !300, line: 90, baseType: !103, size: 32, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2782 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2783 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2784 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2785 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2786 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2787 = !DIEnumerator(name: "PM_IRQn", value: 0)
!2788 = !DIEnumerator(name: "SYSCTRL_IRQn", value: 1)
!2789 = !DIEnumerator(name: "WDT_IRQn", value: 2)
!2790 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!2791 = !DIEnumerator(name: "EIC_IRQn", value: 4)
!2792 = !DIEnumerator(name: "NVMCTRL_IRQn", value: 5)
!2793 = !DIEnumerator(name: "DMAC_IRQn", value: 6)
!2794 = !DIEnumerator(name: "USB_IRQn", value: 7)
!2795 = !DIEnumerator(name: "EVSYS_IRQn", value: 8)
!2796 = !DIEnumerator(name: "SERCOM0_IRQn", value: 9)
!2797 = !DIEnumerator(name: "SERCOM1_IRQn", value: 10)
!2798 = !DIEnumerator(name: "SERCOM2_IRQn", value: 11)
!2799 = !DIEnumerator(name: "SERCOM3_IRQn", value: 12)
!2800 = !DIEnumerator(name: "SERCOM4_IRQn", value: 13)
!2801 = !DIEnumerator(name: "SERCOM5_IRQn", value: 14)
!2802 = !DIEnumerator(name: "TCC0_IRQn", value: 15)
!2803 = !DIEnumerator(name: "TCC1_IRQn", value: 16)
!2804 = !DIEnumerator(name: "TCC2_IRQn", value: 17)
!2805 = !DIEnumerator(name: "TC3_IRQn", value: 18)
!2806 = !DIEnumerator(name: "TC4_IRQn", value: 19)
!2807 = !DIEnumerator(name: "TC5_IRQn", value: 20)
!2808 = !DIEnumerator(name: "ADC_IRQn", value: 23)
!2809 = !DIEnumerator(name: "AC_IRQn", value: 24)
!2810 = !DIEnumerator(name: "DAC_IRQn", value: 25)
!2811 = !DIEnumerator(name: "PTC_IRQn", value: 26)
!2812 = !DIEnumerator(name: "I2S_IRQn", value: 27)
!2813 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 28)
!2814 = !{!2815, !2817, !250, !173, !2826, !2848}
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2816, line: 46, baseType: !186)
!2816 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !2819, line: 478, baseType: !2820)
!2819 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm0plus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 472, size: 128, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2820, file: !2819, line: 474, baseType: !466, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2820, file: !2819, line: 475, baseType: !466, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2820, file: !2819, line: 476, baseType: !466, size: 32, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2820, file: !2819, line: 477, baseType: !465, size: 32, offset: 96)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2819, line: 340, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 328, size: 6400, elements: !2829)
!2829 = !{!2830, !2832, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2846}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2828, file: !2819, line: 330, baseType: !2831, size: 32)
!2831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 32, elements: !993)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2828, file: !2819, line: 331, baseType: !2833, size: 992, offset: 32)
!2833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 992, elements: !2834)
!2834 = !{!2835}
!2835 = !DISubrange(count: 31)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2828, file: !2819, line: 332, baseType: !2831, size: 32, offset: 1024)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2828, file: !2819, line: 333, baseType: !2833, size: 992, offset: 1056)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2828, file: !2819, line: 334, baseType: !2831, size: 32, offset: 2048)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2828, file: !2819, line: 335, baseType: !2833, size: 992, offset: 2080)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2828, file: !2819, line: 336, baseType: !2831, size: 32, offset: 3072)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2828, file: !2819, line: 337, baseType: !2833, size: 992, offset: 3104)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2828, file: !2819, line: 338, baseType: !2843, size: 2048, offset: 4096)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 2048, elements: !2844)
!2844 = !{!2845}
!2845 = !DISubrange(count: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2828, file: !2819, line: 339, baseType: !2847, size: 256, offset: 6144)
!2847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 256, elements: !877)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !2851)
!2851 = !{!2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2861}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2850, file: !2819, line: 357, baseType: !465, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2850, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2850, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2850, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2850, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2850, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2850, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2850, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !145)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2850, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!2862 = !{!2863, !2889, !2892, !2894, !2896, !2775}
!2863 = !DIGlobalVariableExpression(var: !2864, expr: !DIExpression())
!2864 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2777, file: !2865, line: 285, type: !2866, isLocal: true, isDefinition: true, align: 32)
!2865 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2868)
!2868 = !{!2869, !2888}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2867, file: !1015, line: 60, baseType: !2870, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!103, !2873}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2876)
!2876 = !{!2877, !2878, !2879, !2880, !2886, !2887}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2875, file: !1024, line: 380, baseType: !256, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2875, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2875, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2875, file: !1024, line: 386, baseType: !2881, size: 32, offset: 96)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2882, file: !1024, line: 359, baseType: !156, size: 8)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2882, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2875, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2875, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2867, file: !1015, line: 65, baseType: !2873, size: 32, offset: 32)
!2889 = !DIGlobalVariableExpression(var: !2890, expr: !DIExpression())
!2890 = distinct !DIGlobalVariable(name: "lock", scope: !2777, file: !2865, line: 34, type: !2891, isLocal: true, isDefinition: true)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2892 = !DIGlobalVariableExpression(var: !2893, expr: !DIExpression())
!2893 = distinct !DIGlobalVariable(name: "last_load", scope: !2777, file: !2865, line: 36, type: !173, isLocal: true, isDefinition: true)
!2894 = !DIGlobalVariableExpression(var: !2895, expr: !DIExpression())
!2895 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2777, file: !2865, line: 48, type: !173, isLocal: true, isDefinition: true)
!2896 = !DIGlobalVariableExpression(var: !2897, expr: !DIExpression())
!2897 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2777, file: !2865, line: 54, type: !173, isLocal: true, isDefinition: true)
!2898 = !DIGlobalVariableExpression(var: !2899, expr: !DIExpression())
!2899 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !2900, file: !3055, line: 16, type: !3056, isLocal: true, isDefinition: true)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2902, globals: !3054, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!2902 = !{!2903}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !1877, line: 367, baseType: !2905)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1877, line: 351, size: 1024, elements: !2906)
!2906 = !{!2907, !2917, !2927, !2937, !2947, !2957, !2967, !2977, !2987, !2998, !3008, !3026, !3027, !3039, !3053}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2905, file: !1877, line: 352, baseType: !2908, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2909)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !1877, line: 48, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 43, size: 32, elements: !2911)
!2911 = !{!2912, !2916}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2910, file: !1877, line: 46, baseType: !2913, size: 32)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2910, file: !1877, line: 44, size: 32, elements: !2914)
!2914 = !{!2915}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2913, file: !1877, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2910, file: !1877, line: 47, baseType: !173, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2905, file: !1877, line: 353, baseType: !2918, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2919)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !1877, line: 66, baseType: !2920)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 61, size: 32, elements: !2921)
!2921 = !{!2922, !2926}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2920, file: !1877, line: 64, baseType: !2923, size: 32)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2920, file: !1877, line: 62, size: 32, elements: !2924)
!2924 = !{!2925}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2923, file: !1877, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2920, file: !1877, line: 65, baseType: !173, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2905, file: !1877, line: 354, baseType: !2928, size: 32, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2929)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !1877, line: 84, baseType: !2930)
!2930 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 79, size: 32, elements: !2931)
!2931 = !{!2932, !2936}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2930, file: !1877, line: 82, baseType: !2933, size: 32)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2930, file: !1877, line: 80, size: 32, elements: !2934)
!2934 = !{!2935}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2933, file: !1877, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2930, file: !1877, line: 83, baseType: !173, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2905, file: !1877, line: 355, baseType: !2938, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2939)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !1877, line: 102, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 97, size: 32, elements: !2941)
!2941 = !{!2942, !2946}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2940, file: !1877, line: 100, baseType: !2943, size: 32)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2940, file: !1877, line: 98, size: 32, elements: !2944)
!2944 = !{!2945}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2943, file: !1877, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2940, file: !1877, line: 101, baseType: !173, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2905, file: !1877, line: 356, baseType: !2948, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2949)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !1877, line: 120, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 115, size: 32, elements: !2951)
!2951 = !{!2952, !2956}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2950, file: !1877, line: 118, baseType: !2953, size: 32)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2950, file: !1877, line: 116, size: 32, elements: !2954)
!2954 = !{!2955}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2953, file: !1877, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2950, file: !1877, line: 119, baseType: !173, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2905, file: !1877, line: 357, baseType: !2958, size: 32, offset: 160)
!2958 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2959)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !1877, line: 138, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 133, size: 32, elements: !2961)
!2961 = !{!2962, !2966}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2960, file: !1877, line: 136, baseType: !2963, size: 32)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2960, file: !1877, line: 134, size: 32, elements: !2964)
!2964 = !{!2965}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2963, file: !1877, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2960, file: !1877, line: 137, baseType: !173, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2905, file: !1877, line: 358, baseType: !2968, size: 32, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2969)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !1877, line: 156, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 151, size: 32, elements: !2971)
!2971 = !{!2972, !2976}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2970, file: !1877, line: 154, baseType: !2973, size: 32)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2970, file: !1877, line: 152, size: 32, elements: !2974)
!2974 = !{!2975}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2973, file: !1877, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2970, file: !1877, line: 155, baseType: !173, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2905, file: !1877, line: 359, baseType: !2978, size: 32, offset: 224)
!2978 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2979)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !1877, line: 174, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 169, size: 32, elements: !2981)
!2981 = !{!2982, !2986}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2980, file: !1877, line: 172, baseType: !2983, size: 32)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2980, file: !1877, line: 170, size: 32, elements: !2984)
!2984 = !{!2985}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2983, file: !1877, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2980, file: !1877, line: 173, baseType: !173, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2905, file: !1877, line: 360, baseType: !2988, size: 32, offset: 256)
!2988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2989)
!2989 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2990)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !1877, line: 192, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 187, size: 32, elements: !2992)
!2992 = !{!2993, !2997}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2991, file: !1877, line: 190, baseType: !2994, size: 32)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2991, file: !1877, line: 188, size: 32, elements: !2995)
!2995 = !{!2996}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2994, file: !1877, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2991, file: !1877, line: 191, baseType: !173, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2905, file: !1877, line: 361, baseType: !2999, size: 32, offset: 288)
!2999 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3000)
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !1877, line: 210, baseType: !3001)
!3001 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 205, size: 32, elements: !3002)
!3002 = !{!3003, !3007}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3001, file: !1877, line: 208, baseType: !3004, size: 32)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3001, file: !1877, line: 206, size: 32, elements: !3005)
!3005 = !{!3006}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !3004, file: !1877, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3001, file: !1877, line: 209, baseType: !173, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !2905, file: !1877, line: 362, baseType: !3009, size: 32, offset: 320)
!3009 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3010)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !1877, line: 239, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 223, size: 32, elements: !3012)
!3012 = !{!3013, !3025}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3011, file: !1877, line: 237, baseType: !3014, size: 32)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3011, file: !1877, line: 224, size: 32, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !3014, file: !1877, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !3014, file: !1877, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !3014, file: !1877, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !3014, file: !1877, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !3014, file: !1877, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !3014, file: !1877, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !3014, file: !1877, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !3014, file: !1877, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !3014, file: !1877, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3011, file: !1877, line: 238, baseType: !173, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2905, file: !1877, line: 363, baseType: !661, size: 32, offset: 352)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2905, file: !1877, line: 364, baseType: !3028, size: 128, offset: 384)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3029, size: 128, elements: !959)
!3029 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3030)
!3030 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !1877, line: 275, baseType: !3031)
!3031 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 269, size: 8, elements: !3032)
!3032 = !{!3033, !3038}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3031, file: !1877, line: 273, baseType: !3034, size: 8)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3031, file: !1877, line: 270, size: 8, elements: !3035)
!3035 = !{!3036, !3037}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !3034, file: !1877, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !3034, file: !1877, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3031, file: !1877, line: 274, baseType: !156, size: 8)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !2905, file: !1877, line: 365, baseType: !3040, size: 256, offset: 512)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3041, size: 256, elements: !2026)
!3041 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3042)
!3042 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !1877, line: 333, baseType: !3043)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 323, size: 8, elements: !3044)
!3044 = !{!3045, !3052}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !3043, file: !1877, line: 331, baseType: !3046, size: 8)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3043, file: !1877, line: 324, size: 8, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !3046, file: !1877, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !3046, file: !1877, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !3046, file: !1877, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !3046, file: !1877, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3043, file: !1877, line: 332, baseType: !156, size: 8)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2905, file: !1877, line: 366, baseType: !2028, size: 256, offset: 768)
!3054 = !{!2898}
!3055 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3057, size: 64, elements: !145)
!3057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!3058 = !DIGlobalVariableExpression(var: !3059, expr: !DIExpression())
!3059 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !3060, file: !3063, line: 23, type: !1691, isLocal: false, isDefinition: true)
!3060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3061, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !3062, splitDebugInlining: false, nameTableKind: None)
!3061 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3062 = !{!3058}
!3063 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3064 = !DIGlobalVariableExpression(var: !3065, expr: !DIExpression())
!3065 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !3066, file: !3070, line: 86, type: !3287, isLocal: false, isDefinition: true, align: 64)
!3066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3067, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3068, retainedTypes: !3077, globals: !3135, splitDebugInlining: false, nameTableKind: None)
!3067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3068 = !{!3069, !30, !2780}
!3069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !3070, line: 63, baseType: !32, size: 32, elements: !3071)
!3070 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3071 = !{!3072, !3073, !3074, !3075, !3076}
!3072 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!3073 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!3074 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!3075 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!3076 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!3077 = !{!217, !102, !103, !3078, !1836, !173, !250, !3108, !3122}
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3080)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !3081, line: 51, size: 64, elements: !3082)
!3081 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3082 = !{!3083, !3103}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !3080, file: !3081, line: 52, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !3081, line: 38, baseType: !3085)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!103, !3088, !1690, !170}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3101, !3102}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3090, file: !1024, line: 380, baseType: !256, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3090, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3090, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3090, file: !1024, line: 386, baseType: !3096, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 32)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3097, file: !1024, line: 359, baseType: !156, size: 8)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3097, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3090, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3090, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !3080, file: !3081, line: 53, baseType: !3104, size: 32, offset: 32)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !3081, line: 47, baseType: !3105)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 32)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!103, !3088, !1690, !170, !173}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2819, line: 340, baseType: !3110)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 328, size: 6400, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3110, file: !2819, line: 330, baseType: !2831, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3110, file: !2819, line: 331, baseType: !2833, size: 992, offset: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3110, file: !2819, line: 332, baseType: !2831, size: 32, offset: 1024)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3110, file: !2819, line: 333, baseType: !2833, size: 992, offset: 1056)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3110, file: !2819, line: 334, baseType: !2831, size: 32, offset: 2048)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3110, file: !2819, line: 335, baseType: !2833, size: 992, offset: 2080)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3110, file: !2819, line: 336, baseType: !2831, size: 32, offset: 3072)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3110, file: !2819, line: 337, baseType: !2833, size: 992, offset: 3104)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3110, file: !2819, line: 338, baseType: !2843, size: 2048, offset: 4096)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3110, file: !2819, line: 339, baseType: !2847, size: 256, offset: 6144)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3124)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3124, file: !2819, line: 357, baseType: !465, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3124, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3124, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3124, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3124, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3124, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3124, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3124, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3124, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3135 = !{!3136, !3252, !3260, !3262, !3064, !3265, !3267, !3272}
!3136 = !DIGlobalVariableExpression(var: !3137, expr: !DIExpression())
!3137 = distinct !DIGlobalVariable(name: "_kernel", scope: !3066, file: !3070, line: 40, type: !3138, isLocal: false, isDefinition: true)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !150, line: 158, size: 288, elements: !3139)
!3139 = !{!3140, !3247}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !3138, file: !150, line: 159, baseType: !3141, size: 192)
!3141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3142, size: 192, elements: !993)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !150, line: 100, size: 192, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3241, !3242, !3243, !3244}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !3142, file: !150, line: 102, baseType: !173, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !3142, file: !150, line: 105, baseType: !1836, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3142, file: !150, line: 108, baseType: !3147, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 32)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3149)
!3149 = !{!3150, !3208, !3220, !3221, !3222, !3223, !3236}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3148, file: !114, line: 247, baseType: !3151, size: 384)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3152)
!3152 = !{!3153, !3177, !3184, !3185, !3186, !3195, !3196, !3197}
!3153 = !DIDerivedType(tag: DW_TAG_member, scope: !3151, file: !114, line: 60, baseType: !3154, size: 64)
!3154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3151, file: !114, line: 60, size: 64, elements: !3155)
!3155 = !{!3156, !3171}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3154, file: !114, line: 61, baseType: !3157, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3159)
!3159 = !{!3160, !3166}
!3160 = !DIDerivedType(tag: DW_TAG_member, scope: !3158, file: !124, line: 38, baseType: !3161, size: 32)
!3161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3158, file: !124, line: 38, size: 32, elements: !3162)
!3162 = !{!3163, !3165}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3161, file: !124, line: 39, baseType: !3164, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3161, file: !124, line: 40, baseType: !3164, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, scope: !3158, file: !124, line: 42, baseType: !3167, size: 32, offset: 32)
!3167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3158, file: !124, line: 42, size: 32, elements: !3168)
!3168 = !{!3169, !3170}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3167, file: !124, line: 43, baseType: !3164, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3167, file: !124, line: 44, baseType: !3164, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3154, file: !114, line: 62, baseType: !3172, size: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3173)
!3173 = !{!3174}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3172, file: !140, line: 50, baseType: !3175, size: 64)
!3175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3176, size: 64, elements: !145)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3151, file: !114, line: 68, baseType: !3178, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3180)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3181)
!3181 = !{!3182}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3180, file: !150, line: 232, baseType: !3183, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3158)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3151, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3151, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3186 = !DIDerivedType(tag: DW_TAG_member, scope: !3151, file: !114, line: 90, baseType: !3187, size: 16, offset: 112)
!3187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3151, file: !114, line: 90, size: 16, elements: !3188)
!3188 = !{!3189, !3194}
!3189 = !DIDerivedType(tag: DW_TAG_member, scope: !3187, file: !114, line: 91, baseType: !3190, size: 16)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3187, file: !114, line: 91, size: 16, elements: !3191)
!3191 = !{!3192, !3193}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3190, file: !114, line: 96, baseType: !166, size: 8)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3190, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3187, file: !114, line: 100, baseType: !170, size: 16)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3151, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3151, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3151, file: !114, line: 131, baseType: !3198, size: 192, offset: 192)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3199)
!3199 = !{!3200, !3201, !3207}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3198, file: !150, line: 245, baseType: !3157, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3198, file: !150, line: 246, baseType: !3202, size: 32, offset: 64)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3203)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{null, !3206}
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3198, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3148, file: !114, line: 250, baseType: !3209, size: 288, offset: 384)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3209, file: !190, line: 26, baseType: !173, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3209, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3209, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3209, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3209, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3209, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3209, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3209, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3209, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3148, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3148, file: !114, line: 256, baseType: !3179, size: 64, offset: 704)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3148, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3148, file: !114, line: 325, baseType: !3224, size: 32, offset: 800)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3226)
!3226 = !{!3227, !3233, !3234}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3225, file: !109, line: 5074, baseType: !3228, size: 96)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3229)
!3229 = !{!3230, !3231, !3232}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3228, file: !210, line: 57, baseType: !213, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3228, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3228, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3225, file: !109, line: 5075, baseType: !3179, size: 64, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3225, file: !109, line: 5076, baseType: !3235, offset: 160)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3148, file: !114, line: 343, baseType: !3237, size: 64, offset: 832)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3238)
!3238 = !{!3239, !3240}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3237, file: !190, line: 63, baseType: !173, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3237, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !3142, file: !150, line: 111, baseType: !3147, size: 32, offset: 96)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !3142, file: !150, line: 124, baseType: !103, size: 32, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3142, file: !150, line: 127, baseType: !156, size: 8, offset: 160)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3142, file: !150, line: 153, baseType: !3245, offset: 168)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !3246, line: 33, elements: !223)
!3246 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !3138, file: !150, line: 170, baseType: !3248, size: 96, offset: 192)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !3249)
!3249 = !{!3250, !3251}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3248, file: !150, line: 86, baseType: !3147, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !3248, file: !150, line: 90, baseType: !3183, size: 64, offset: 32)
!3252 = !DIGlobalVariableExpression(var: !3253, expr: !DIExpression())
!3253 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !3066, file: !3070, line: 43, type: !3254, isLocal: false, isDefinition: true, align: 64)
!3254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3255, size: 8192, elements: !3258)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !3256)
!3256 = !{!3257}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3255, file: !234, line: 48, baseType: !237, size: 8)
!3258 = !{!3259}
!3259 = !DISubrange(count: 1024)
!3260 = !DIGlobalVariableExpression(var: !3261, expr: !DIExpression())
!3261 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !3066, file: !3070, line: 44, type: !3148, isLocal: false, isDefinition: true)
!3262 = !DIGlobalVariableExpression(var: !3263, expr: !DIExpression())
!3263 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !3066, file: !3070, line: 48, type: !3264, isLocal: false, isDefinition: true)
!3264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3148, size: 896, elements: !993)
!3265 = !DIGlobalVariableExpression(var: !3266, expr: !DIExpression())
!3266 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !3066, file: !3070, line: 217, type: !1035, isLocal: false, isDefinition: true)
!3267 = !DIGlobalVariableExpression(var: !3268, expr: !DIExpression())
!3268 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !3066, file: !3070, line: 50, type: !3269, isLocal: true, isDefinition: true, align: 64)
!3269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3255, size: 2048, elements: !3270)
!3270 = !{!994, !3271}
!3271 = !DISubrange(count: 256)
!3272 = !DIGlobalVariableExpression(var: !3273, expr: !DIExpression())
!3273 = distinct !DIGlobalVariable(name: "levels", scope: !3274, file: !3070, line: 232, type: !3277, isLocal: true, isDefinition: true)
!3274 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !3070, file: !3070, line: 230, type: !3275, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !3069}
!3277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3278, size: 192, elements: !833)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3280)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !3281)
!3281 = !{!3282, !3286}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3280, file: !1015, line: 60, baseType: !3283, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 32)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{!103, !3088}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3280, file: !1015, line: 65, baseType: !3088, size: 32, offset: 32)
!3287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3255, size: 16384, elements: !3288)
!3288 = !{!994, !3289}
!3289 = !DISubrange(count: 2048)
!3290 = !DIGlobalVariableExpression(var: !3291, expr: !DIExpression())
!3291 = distinct !DIGlobalVariable(name: "states_str", scope: !3292, file: !3293, line: 276, type: !3400, isLocal: true, isDefinition: true)
!3292 = distinct !DISubprogram(name: "k_thread_state_str", scope: !3293, file: !3293, line: 271, type: !3294, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!3293 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!256, !3296, !1836, !217}
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3297)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3299)
!3299 = !{!3300, !3358, !3370, !3371, !3372, !3373, !3386}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3298, file: !114, line: 247, baseType: !3301, size: 384)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3302)
!3302 = !{!3303, !3327, !3334, !3335, !3336, !3345, !3346, !3347}
!3303 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !114, line: 60, baseType: !3304, size: 64)
!3304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !114, line: 60, size: 64, elements: !3305)
!3305 = !{!3306, !3321}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3304, file: !114, line: 61, baseType: !3307, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3308)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3309)
!3309 = !{!3310, !3316}
!3310 = !DIDerivedType(tag: DW_TAG_member, scope: !3308, file: !124, line: 38, baseType: !3311, size: 32)
!3311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3308, file: !124, line: 38, size: 32, elements: !3312)
!3312 = !{!3313, !3315}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3311, file: !124, line: 39, baseType: !3314, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3311, file: !124, line: 40, baseType: !3314, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, scope: !3308, file: !124, line: 42, baseType: !3317, size: 32, offset: 32)
!3317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3308, file: !124, line: 42, size: 32, elements: !3318)
!3318 = !{!3319, !3320}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3317, file: !124, line: 43, baseType: !3314, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3317, file: !124, line: 44, baseType: !3314, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3304, file: !114, line: 62, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3323)
!3323 = !{!3324}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3322, file: !140, line: 50, baseType: !3325, size: 64)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3326, size: 64, elements: !145)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3301, file: !114, line: 68, baseType: !3328, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3330)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3331)
!3331 = !{!3332}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3330, file: !150, line: 232, baseType: !3333, size: 64)
!3333 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3308)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3301, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3301, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3336 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !114, line: 90, baseType: !3337, size: 16, offset: 112)
!3337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !114, line: 90, size: 16, elements: !3338)
!3338 = !{!3339, !3344}
!3339 = !DIDerivedType(tag: DW_TAG_member, scope: !3337, file: !114, line: 91, baseType: !3340, size: 16)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3337, file: !114, line: 91, size: 16, elements: !3341)
!3341 = !{!3342, !3343}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3340, file: !114, line: 96, baseType: !166, size: 8)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3340, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3337, file: !114, line: 100, baseType: !170, size: 16)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3301, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3301, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3301, file: !114, line: 131, baseType: !3348, size: 192, offset: 192)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3349)
!3349 = !{!3350, !3351, !3357}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3348, file: !150, line: 245, baseType: !3307, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3348, file: !150, line: 246, baseType: !3352, size: 32, offset: 64)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3353)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 32)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !3356}
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3348, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3298, file: !114, line: 250, baseType: !3359, size: 288, offset: 384)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3360)
!3360 = !{!3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3359, file: !190, line: 26, baseType: !173, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3359, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3359, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3359, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3359, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3359, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3359, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3359, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3359, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3298, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3298, file: !114, line: 256, baseType: !3329, size: 64, offset: 704)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3298, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3298, file: !114, line: 325, baseType: !3374, size: 32, offset: 800)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 32)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3376)
!3376 = !{!3377, !3383, !3384}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3375, file: !109, line: 5074, baseType: !3378, size: 96)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3379)
!3379 = !{!3380, !3381, !3382}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3378, file: !210, line: 57, baseType: !213, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3378, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3378, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3375, file: !109, line: 5075, baseType: !3329, size: 64, offset: 96)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3375, file: !109, line: 5076, baseType: !3385, offset: 160)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3298, file: !114, line: 343, baseType: !3387, size: 64, offset: 832)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3388)
!3388 = !{!3389, !3390}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3387, file: !190, line: 63, baseType: !173, size: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3387, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3392, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3393, globals: !3395, splitDebugInlining: false, nameTableKind: None)
!3392 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3393 = !{!102, !256, !2815, !156, !103, !3394, !24, !217, !1836, !173, !2246}
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3395 = !{!3290, !3396}
!3396 = !DIGlobalVariableExpression(var: !3397, expr: !DIExpression())
!3397 = distinct !DIGlobalVariable(name: "states_sz", scope: !3292, file: !3293, line: 279, type: !3398, isLocal: true, isDefinition: true)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3399, size: 256, elements: !877)
!3399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !877)
!3401 = !DIGlobalVariableExpression(var: !3402, expr: !DIExpression())
!3402 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3403, file: !3514, line: 56, type: !3503, isLocal: false, isDefinition: true)
!3403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3404, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3405, retainedTypes: !3414, globals: !3511, splitDebugInlining: false, nameTableKind: None)
!3404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3405 = !{!3406, !30}
!3406 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3407, line: 27, baseType: !32, size: 32, elements: !3408)
!3407 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = !{!3409, !3410, !3411, !3412, !3413}
!3409 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3410 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3411 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3412 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3413 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3414 = !{!3415, !1836, !102, !3509, !1690, !2815, !250, !103, !173, !2246, !3510}
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 32)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3417)
!3417 = !{!3418, !3476, !3488, !3489, !3490, !3491, !3504}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3416, file: !114, line: 247, baseType: !3419, size: 384)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3420)
!3420 = !{!3421, !3445, !3452, !3453, !3454, !3463, !3464, !3465}
!3421 = !DIDerivedType(tag: DW_TAG_member, scope: !3419, file: !114, line: 60, baseType: !3422, size: 64)
!3422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3419, file: !114, line: 60, size: 64, elements: !3423)
!3423 = !{!3424, !3439}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3422, file: !114, line: 61, baseType: !3425, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3426)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3427)
!3427 = !{!3428, !3434}
!3428 = !DIDerivedType(tag: DW_TAG_member, scope: !3426, file: !124, line: 38, baseType: !3429, size: 32)
!3429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3426, file: !124, line: 38, size: 32, elements: !3430)
!3430 = !{!3431, !3433}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3429, file: !124, line: 39, baseType: !3432, size: 32)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3429, file: !124, line: 40, baseType: !3432, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, scope: !3426, file: !124, line: 42, baseType: !3435, size: 32, offset: 32)
!3435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3426, file: !124, line: 42, size: 32, elements: !3436)
!3436 = !{!3437, !3438}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3435, file: !124, line: 43, baseType: !3432, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3435, file: !124, line: 44, baseType: !3432, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3422, file: !114, line: 62, baseType: !3440, size: 64)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3441)
!3441 = !{!3442}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3440, file: !140, line: 50, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3444, size: 64, elements: !145)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 32)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3419, file: !114, line: 68, baseType: !3446, size: 32, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 32)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3448)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3449)
!3449 = !{!3450}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3448, file: !150, line: 232, baseType: !3451, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3426)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3419, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3419, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3454 = !DIDerivedType(tag: DW_TAG_member, scope: !3419, file: !114, line: 90, baseType: !3455, size: 16, offset: 112)
!3455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3419, file: !114, line: 90, size: 16, elements: !3456)
!3456 = !{!3457, !3462}
!3457 = !DIDerivedType(tag: DW_TAG_member, scope: !3455, file: !114, line: 91, baseType: !3458, size: 16)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3455, file: !114, line: 91, size: 16, elements: !3459)
!3459 = !{!3460, !3461}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3458, file: !114, line: 96, baseType: !166, size: 8)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3458, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3455, file: !114, line: 100, baseType: !170, size: 16)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3419, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3419, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3419, file: !114, line: 131, baseType: !3466, size: 192, offset: 192)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3467)
!3467 = !{!3468, !3469, !3475}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3466, file: !150, line: 245, baseType: !3425, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3466, file: !150, line: 246, baseType: !3470, size: 32, offset: 64)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3471)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 32)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{null, !3474}
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3466, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3416, file: !114, line: 250, baseType: !3477, size: 288, offset: 384)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3477, file: !190, line: 26, baseType: !173, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3477, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3477, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3477, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3477, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3477, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3477, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3477, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3477, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3416, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3416, file: !114, line: 256, baseType: !3447, size: 64, offset: 704)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3416, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3416, file: !114, line: 325, baseType: !3492, size: 32, offset: 800)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 32)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3494)
!3494 = !{!3495, !3501, !3502}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3493, file: !109, line: 5074, baseType: !3496, size: 96)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3497)
!3497 = !{!3498, !3499, !3500}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3496, file: !210, line: 57, baseType: !213, size: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3496, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3496, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3493, file: !109, line: 5075, baseType: !3447, size: 64, offset: 96)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3493, file: !109, line: 5076, baseType: !3503, offset: 160)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3416, file: !114, line: 343, baseType: !3505, size: 64, offset: 832)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3506)
!3506 = !{!3507, !3508}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3505, file: !190, line: 63, baseType: !173, size: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3505, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3511 = !{!3401, !3512, !3515, !3517}
!3512 = !DIGlobalVariableExpression(var: !3513, expr: !DIExpression())
!3513 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3403, file: !3514, line: 404, type: !103, isLocal: true, isDefinition: true)
!3514 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3515 = !DIGlobalVariableExpression(var: !3516, expr: !DIExpression())
!3516 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3403, file: !3514, line: 405, type: !103, isLocal: true, isDefinition: true)
!3517 = !DIGlobalVariableExpression(var: !3518, expr: !DIExpression())
!3518 = distinct !DIGlobalVariable(name: "pending_current", scope: !3403, file: !3514, line: 425, type: !3415, isLocal: true, isDefinition: true)
!3519 = !DIGlobalVariableExpression(var: !3520, expr: !DIExpression())
!3520 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3521, file: !3551, line: 19, type: !3557, isLocal: true, isDefinition: true)
!3521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3522, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3523, globals: !3548, splitDebugInlining: false, nameTableKind: None)
!3522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3523 = !{!2815, !102, !250, !173, !2246, !103, !3524, !1836, !186}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3526)
!3526 = !{!3527, !3542, !3547}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3525, file: !150, line: 245, baseType: !3528, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3529)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3530)
!3530 = !{!3531, !3537}
!3531 = !DIDerivedType(tag: DW_TAG_member, scope: !3529, file: !124, line: 38, baseType: !3532, size: 32)
!3532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3529, file: !124, line: 38, size: 32, elements: !3533)
!3533 = !{!3534, !3536}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3532, file: !124, line: 39, baseType: !3535, size: 32)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3532, file: !124, line: 40, baseType: !3535, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, scope: !3529, file: !124, line: 42, baseType: !3538, size: 32, offset: 32)
!3538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3529, file: !124, line: 42, size: 32, elements: !3539)
!3539 = !{!3540, !3541}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3538, file: !124, line: 43, baseType: !3535, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3538, file: !124, line: 44, baseType: !3535, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3525, file: !150, line: 246, baseType: !3543, size: 32, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3544)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 32)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{null, !3524}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3525, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3548 = !{!3549, !3519, !3552, !3554}
!3549 = !DIGlobalVariableExpression(var: !3550, expr: !DIExpression())
!3550 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3521, file: !3551, line: 15, type: !2246, isLocal: true, isDefinition: true)
!3551 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3552 = !DIGlobalVariableExpression(var: !3553, expr: !DIExpression())
!3553 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3521, file: !3551, line: 25, type: !103, isLocal: true, isDefinition: true)
!3554 = !DIGlobalVariableExpression(var: !3555, expr: !DIExpression())
!3555 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3521, file: !3551, line: 17, type: !3556, isLocal: true, isDefinition: true)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3529)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3559, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3561, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3563, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3564, retainedTypes: !3584, splitDebugInlining: false, nameTableKind: None)
!3563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3564 = !{!3565, !3573}
!3565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3566, line: 69, baseType: !32, size: 32, elements: !3567)
!3566 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3567 = !{!3568, !3569, !3570, !3571, !3572}
!3568 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3569 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3570 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3571 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3572 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3566, line: 56, baseType: !32, size: 32, elements: !3574)
!3574 = !{!3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583}
!3575 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3576 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3577 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3578 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3579 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3580 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3581 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3582 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3583 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3584 = !{!103, !3565, !3573, !3585, !167, !1042, !3587, !3588, !157, !171, !256, !217, !102, !22, !32, !3590, !3591, !3592, !2267, !3593, !187, !3594, !3586, !3595, !3596, !3597, !3598}
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3566, line: 31, baseType: !3586)
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !187)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3566, line: 32, baseType: !3589)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2247)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 32)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 32)
!3599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3600, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3602, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3604, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3405, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3606, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3607, retainedTypes: !3608, splitDebugInlining: false, nameTableKind: None)
!3606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3607 = !{!2780, !3406, !30}
!3608 = !{!3609, !3610, !102, !103, !250, !173, !3624}
!3609 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !300, line: 127, baseType: !2780)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2819, line: 340, baseType: !3612)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 328, size: 6400, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3612, file: !2819, line: 330, baseType: !2831, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3612, file: !2819, line: 331, baseType: !2833, size: 992, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3612, file: !2819, line: 332, baseType: !2831, size: 32, offset: 1024)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3612, file: !2819, line: 333, baseType: !2833, size: 992, offset: 1056)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3612, file: !2819, line: 334, baseType: !2831, size: 32, offset: 2048)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3612, file: !2819, line: 335, baseType: !2833, size: 992, offset: 2080)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3612, file: !2819, line: 336, baseType: !2831, size: 32, offset: 3072)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3612, file: !2819, line: 337, baseType: !2833, size: 992, offset: 3104)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3612, file: !2819, line: 338, baseType: !2843, size: 2048, offset: 4096)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3612, file: !2819, line: 339, baseType: !2847, size: 256, offset: 6144)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 32)
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3627)
!3627 = !{!3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3626, file: !2819, line: 357, baseType: !465, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3626, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3626, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3626, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3626, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3626, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3626, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3626, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3626, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3638, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3640, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3641, splitDebugInlining: false, nameTableKind: None)
!3640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3641 = !{!102, !103, !22, !3642}
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 32)
!3643 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3644)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3645)
!3645 = !{!3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3644, file: !2819, line: 357, baseType: !465, size: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3644, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3644, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3644, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3644, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3644, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3644, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3644, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3644, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3656, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3657, splitDebugInlining: false, nameTableKind: None)
!3656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3657 = !{!3658, !102, !103}
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3661)
!3661 = !{!3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3660, file: !2819, line: 357, baseType: !465, size: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3660, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3660, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3660, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3660, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3660, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3660, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3660, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3660, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3672, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3673, splitDebugInlining: false, nameTableKind: None)
!3672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3673 = !{!3674, !173, !102, !103}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 32)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3676, line: 98, size: 256, elements: !3677)
!3676 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3677 = !{!3678, !3683, !3688, !3693, !3698, !3703, !3708, !3713}
!3678 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 99, baseType: !3679, size: 32)
!3679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 99, size: 32, elements: !3680)
!3680 = !{!3681, !3682}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3679, file: !3676, line: 99, baseType: !173, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3679, file: !3676, line: 99, baseType: !173, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 100, baseType: !3684, size: 32, offset: 32)
!3684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 100, size: 32, elements: !3685)
!3685 = !{!3686, !3687}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3684, file: !3676, line: 100, baseType: !173, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3684, file: !3676, line: 100, baseType: !173, size: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 101, baseType: !3689, size: 32, offset: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 101, size: 32, elements: !3690)
!3690 = !{!3691, !3692}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3689, file: !3676, line: 101, baseType: !173, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3689, file: !3676, line: 101, baseType: !173, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 102, baseType: !3694, size: 32, offset: 96)
!3694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 102, size: 32, elements: !3695)
!3695 = !{!3696, !3697}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3694, file: !3676, line: 102, baseType: !173, size: 32)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3694, file: !3676, line: 102, baseType: !173, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 103, baseType: !3699, size: 32, offset: 128)
!3699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 103, size: 32, elements: !3700)
!3700 = !{!3701, !3702}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3699, file: !3676, line: 103, baseType: !173, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3699, file: !3676, line: 103, baseType: !173, size: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 104, baseType: !3704, size: 32, offset: 160)
!3704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 104, size: 32, elements: !3705)
!3705 = !{!3706, !3707}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3704, file: !3676, line: 104, baseType: !173, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3704, file: !3676, line: 104, baseType: !173, size: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, scope: !3675, file: !3676, line: 105, baseType: !3709, size: 32, offset: 192)
!3709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3675, file: !3676, line: 105, size: 32, elements: !3710)
!3710 = !{!3711, !3712}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3709, file: !3676, line: 105, baseType: !173, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3709, file: !3676, line: 105, baseType: !173, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3675, file: !3676, line: 106, baseType: !173, size: 32, offset: 224)
!3714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3715, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3405, retainedTypes: !3716, splitDebugInlining: false, nameTableKind: None)
!3715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3716 = !{!3717, !102, !103, !3730, !3773}
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 32)
!3718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3719)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3720)
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3719, file: !2819, line: 357, baseType: !465, size: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3719, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3719, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3719, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3719, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3719, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3719, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3719, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3719, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3676, line: 141, baseType: !3732)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3676, line: 97, size: 256, elements: !3733)
!3733 = !{!3734}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3732, file: !3676, line: 107, baseType: !3735, size: 256)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3676, line: 98, size: 256, elements: !3736)
!3736 = !{!3737, !3742, !3747, !3752, !3757, !3762, !3767, !3772}
!3737 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 99, baseType: !3738, size: 32)
!3738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 99, size: 32, elements: !3739)
!3739 = !{!3740, !3741}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3738, file: !3676, line: 99, baseType: !173, size: 32)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3738, file: !3676, line: 99, baseType: !173, size: 32)
!3742 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 100, baseType: !3743, size: 32, offset: 32)
!3743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 100, size: 32, elements: !3744)
!3744 = !{!3745, !3746}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3743, file: !3676, line: 100, baseType: !173, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3743, file: !3676, line: 100, baseType: !173, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 101, baseType: !3748, size: 32, offset: 64)
!3748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 101, size: 32, elements: !3749)
!3749 = !{!3750, !3751}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3748, file: !3676, line: 101, baseType: !173, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3748, file: !3676, line: 101, baseType: !173, size: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 102, baseType: !3753, size: 32, offset: 96)
!3753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 102, size: 32, elements: !3754)
!3754 = !{!3755, !3756}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3753, file: !3676, line: 102, baseType: !173, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3753, file: !3676, line: 102, baseType: !173, size: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 103, baseType: !3758, size: 32, offset: 128)
!3758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 103, size: 32, elements: !3759)
!3759 = !{!3760, !3761}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3758, file: !3676, line: 103, baseType: !173, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3758, file: !3676, line: 103, baseType: !173, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 104, baseType: !3763, size: 32, offset: 160)
!3763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 104, size: 32, elements: !3764)
!3764 = !{!3765, !3766}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3763, file: !3676, line: 104, baseType: !173, size: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3763, file: !3676, line: 104, baseType: !173, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, scope: !3735, file: !3676, line: 105, baseType: !3768, size: 32, offset: 192)
!3768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3735, file: !3676, line: 105, size: 32, elements: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3768, file: !3676, line: 105, baseType: !173, size: 32)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3768, file: !3676, line: 105, baseType: !173, size: 32)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3735, file: !3676, line: 106, baseType: !173, size: 32, offset: 224)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!3774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3775, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2779, retainedTypes: !3776, splitDebugInlining: false, nameTableKind: None)
!3775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3776 = !{!3609, !250, !173, !3777, !3791}
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2819, line: 340, baseType: !3779)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 328, size: 6400, elements: !3780)
!3780 = !{!3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3779, file: !2819, line: 330, baseType: !2831, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3779, file: !2819, line: 331, baseType: !2833, size: 992, offset: 32)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3779, file: !2819, line: 332, baseType: !2831, size: 32, offset: 1024)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3779, file: !2819, line: 333, baseType: !2833, size: 992, offset: 1056)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3779, file: !2819, line: 334, baseType: !2831, size: 32, offset: 2048)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3779, file: !2819, line: 335, baseType: !2833, size: 992, offset: 2080)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3779, file: !2819, line: 336, baseType: !2831, size: 32, offset: 3072)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3779, file: !2819, line: 337, baseType: !2833, size: 992, offset: 3104)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3779, file: !2819, line: 338, baseType: !2843, size: 2048, offset: 4096)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3779, file: !2819, line: 339, baseType: !2847, size: 256, offset: 6144)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 32)
!3792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3793)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3794)
!3794 = !{!3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3793, file: !2819, line: 357, baseType: !465, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3793, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3793, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3793, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3793, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3793, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3793, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3793, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3793, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3805, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3806, splitDebugInlining: false, nameTableKind: None)
!3805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3806 = !{!3807, !102, !103}
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2819, line: 370, baseType: !3809)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2819, line: 355, size: 320, elements: !3810)
!3810 = !{!3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3809, file: !2819, line: 357, baseType: !465, size: 32)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3809, file: !2819, line: 358, baseType: !466, size: 32, offset: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3809, file: !2819, line: 360, baseType: !466, size: 32, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3809, file: !2819, line: 364, baseType: !466, size: 32, offset: 96)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3809, file: !2819, line: 365, baseType: !466, size: 32, offset: 128)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3809, file: !2819, line: 366, baseType: !466, size: 32, offset: 160)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3809, file: !2819, line: 367, baseType: !173, size: 32, offset: 192)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3809, file: !2819, line: 368, baseType: !2860, size: 64, offset: 224)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3809, file: !2819, line: 369, baseType: !466, size: 32, offset: 288)
!3820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3821, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3822, splitDebugInlining: false, nameTableKind: None)
!3821 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3822 = !{!237, !1836, !217, !1654, !3823, !22, !3825, !3828, !157, !3826, !102}
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 32)
!3826 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_word_t", file: !3827, line: 57, baseType: !22)
!3827 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 32)
!3829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3826)
!3830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3831, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3833, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3834, splitDebugInlining: false, nameTableKind: None)
!3833 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3834 = !{!102, !217}
!3835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3836, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3837, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3837 = !{!3838, !3845, !30}
!3838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3839, line: 14, baseType: !32, size: 32, elements: !3840)
!3839 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3840 = !{!3841, !3842, !3843, !3844}
!3841 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3842 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3843 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3844 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3839, line: 42, baseType: !32, size: 32, elements: !3846)
!3846 = !{!3847, !3848, !3849, !3850, !3851, !3852}
!3847 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3848 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3849 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3850 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3851 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3852 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3854, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3856, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3857, splitDebugInlining: false, nameTableKind: None)
!3856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3857 = !{!22, !102, !103}
!3858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3859, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!3860 = !{!"Ubuntu clang version 14.0.6"}
!3861 = !{i32 7, !"Dwarf Version", i32 4}
!3862 = !{i32 2, !"Debug Info Version", i32 3}
!3863 = !{i32 1, !"wchar_size", i32 4}
!3864 = !{i32 1, !"min_enum_size", i32 4}
!3865 = !{i32 1, !"branch-target-enforcement", i32 0}
!3866 = !{i32 1, !"sign-return-address", i32 0}
!3867 = !{i32 1, !"sign-return-address-all", i32 0}
!3868 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3869 = !{i32 7, !"frame-pointer", i32 2}
!3870 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3871, file: !3871, line: 26, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3558, retainedNodes: !223)
!3871 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3872 = !DILocation(line: 28, column: 1, scope: !3870)
!3873 = !{i64 2151607402, i64 2151607422, i64 2151607485}
!3874 = !DILocation(line: 29, column: 1, scope: !3870)
!3875 = !{i64 2151607817, i64 2151607837, i64 2151607900}
!3876 = !DILocation(line: 30, column: 1, scope: !3870)
!3877 = !{i64 2151608236, i64 2151608256, i64 2151608319}
!3878 = !DILocation(line: 31, column: 1, scope: !3870)
!3879 = !{i64 2151608655, i64 2151608675, i64 2151608738}
!3880 = !DILocation(line: 33, column: 1, scope: !3870)
!3881 = !{i64 2151608947, i64 2151608967, i64 2151609030}
!3882 = !DILocation(line: 35, column: 1, scope: !3870)
!3883 = !{i64 2151609272, i64 2151609292, i64 2151609355}
!3884 = !DILocation(line: 50, column: 1, scope: !3870)
!3885 = !{i64 2151609699, i64 2151609719, i64 2151609782}
!3886 = !DILocation(line: 54, column: 1, scope: !3870)
!3887 = !{i64 2151610138, i64 2151610158, i64 2151610221}
!3888 = !DILocation(line: 61, column: 1, scope: !3870)
!3889 = !{i64 2151610455, i64 2151610475, i64 2151610538}
!3890 = !DILocation(line: 63, column: 1, scope: !3870)
!3891 = !{i64 2151610835, i64 2151610855, i64 2151610918}
!3892 = !DILocation(line: 64, column: 1, scope: !3870)
!3893 = !{i64 2151611357, i64 2151611377, i64 2151611440}
!3894 = !DILocation(line: 65, column: 1, scope: !3870)
!3895 = !{i64 2151611855, i64 2151611875, i64 2151611938}
!3896 = !DILocation(line: 66, column: 1, scope: !3870)
!3897 = !{i64 2151612337, i64 2151612357, i64 2151612420}
!3898 = !DILocation(line: 67, column: 1, scope: !3870)
!3899 = !{i64 2151612844, i64 2151612864, i64 2151612927}
!3900 = !DILocation(line: 68, column: 1, scope: !3870)
!3901 = !{i64 2151613332, i64 2151613352, i64 2151613415}
!3902 = !DILocation(line: 70, column: 1, scope: !3870)
!3903 = !{i64 2151613800, i64 2151613820, i64 2151613883}
!3904 = !DILocation(line: 71, column: 1, scope: !3870)
!3905 = !{i64 2151614242, i64 2151614262, i64 2151614325}
!3906 = !DILocation(line: 72, column: 1, scope: !3870)
!3907 = !{i64 2151614700, i64 2151614720, i64 2151614783}
!3908 = !DILocation(line: 97, column: 1, scope: !3870)
!3909 = !{i64 2151615007, i64 2151615027, i64 2151615090}
!3910 = !DILocation(line: 99, column: 1, scope: !3870)
!3911 = !{i64 2151615225, i64 2151615245, i64 2151615308}
!3912 = !DILocation(line: 102, column: 1, scope: !3870)
!3913 = !{i64 2151615482, i64 2151615502, i64 2151615565}
!3914 = !DILocation(line: 105, column: 1, scope: !3870)
!3915 = !{i64 2151615722, i64 2151615742, i64 2151615805}
!3916 = !DILocation(line: 115, column: 1, scope: !3870)
!3917 = !{i64 2151616061, i64 2151616081, i64 2151616144}
!3918 = !DILocation(line: 118, column: 1, scope: !3870)
!3919 = !{i64 2151620466, i64 2151620486, i64 2151620549}
!3920 = !DILocation(line: 32, column: 1, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3870, file: !3922, discriminator: 0)
!3922 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3923 = !{i64 2151620822, i64 2151620842, i64 2151620905}
!3924 = !DILocation(line: 33, column: 1, scope: !3921)
!3925 = !{i64 2151621334, i64 2151621354, i64 2151621417}
!3926 = !DILocation(line: 53, column: 1, scope: !3921)
!3927 = !{i64 2151621842, i64 2151621862, i64 2151621925}
!3928 = !DILocation(line: 54, column: 1, scope: !3921)
!3929 = !{i64 2151622260, i64 2151622280, i64 2151622343}
!3930 = !DILocation(line: 55, column: 1, scope: !3921)
!3931 = !{i64 2151622678, i64 2151622698, i64 2151622761}
!3932 = !DILocation(line: 56, column: 1, scope: !3921)
!3933 = !{i64 2151623096, i64 2151623116, i64 2151623179}
!3934 = !DILocation(line: 57, column: 1, scope: !3921)
!3935 = !{i64 2151623514, i64 2151623534, i64 2151623597}
!3936 = !DILocation(line: 58, column: 1, scope: !3921)
!3937 = !{i64 2151623932, i64 2151623952, i64 2151624015}
!3938 = !DILocation(line: 59, column: 1, scope: !3921)
!3939 = !{i64 2151624350, i64 2151624370, i64 2151624433}
!3940 = !DILocation(line: 60, column: 1, scope: !3921)
!3941 = !{i64 2151624774, i64 2151624794, i64 2151624857}
!3942 = !DILocation(line: 61, column: 1, scope: !3921)
!3943 = !{i64 2151625091, i64 2151625111, i64 2151625174}
!3944 = !DILocation(line: 70, column: 1, scope: !3921)
!3945 = !{i64 2151625320, i64 2151625340, i64 2151625403}
!3946 = !DILocation(line: 72, column: 1, scope: !3921)
!3947 = !{i64 2151625652, i64 2151625672, i64 2151625735}
!3948 = !DILocation(line: 73, column: 1, scope: !3921)
!3949 = !{i64 2151626102, i64 2151626122, i64 2151626185}
!3950 = !DILocation(line: 74, column: 1, scope: !3921)
!3951 = !{i64 2151626552, i64 2151626572, i64 2151626635}
!3952 = !DILocation(line: 75, column: 1, scope: !3921)
!3953 = !{i64 2151627002, i64 2151627022, i64 2151627085}
!3954 = !DILocation(line: 76, column: 1, scope: !3921)
!3955 = !{i64 2151627452, i64 2151627472, i64 2151627535}
!3956 = !DILocation(line: 77, column: 1, scope: !3921)
!3957 = !{i64 2151627902, i64 2151627922, i64 2151627985}
!3958 = !DILocation(line: 78, column: 1, scope: !3921)
!3959 = !{i64 2151628352, i64 2151628372, i64 2151628435}
!3960 = !DILocation(line: 79, column: 1, scope: !3921)
!3961 = !{i64 2151628802, i64 2151628822, i64 2151628885}
!3962 = !DILocation(line: 80, column: 1, scope: !3921)
!3963 = !{i64 2151629255, i64 2151629275, i64 2151629338}
!3964 = !DILocation(line: 84, column: 1, scope: !3921)
!3965 = !{i64 2151629587, i64 2151629607, i64 2151629670}
!3966 = !DILocation(line: 106, column: 1, scope: !3921)
!3967 = !{i64 2151633898, i64 2151633918, i64 2151633981}
!3968 = !DILocation(line: 11, column: 1, scope: !3969)
!3969 = !DILexicalBlockFile(scope: !3870, file: !3970, discriminator: 0)
!3970 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3971 = distinct !DISubprogram(name: "thread_entry", scope: !107, file: !107, line: 23, type: !242, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3972 = !DILocalVariable(name: "p1", arg: 1, scope: !3971, file: !107, line: 23, type: !102)
!3973 = !DILocation(line: 23, column: 32, scope: !3971)
!3974 = !DILocalVariable(name: "p2", arg: 2, scope: !3971, file: !107, line: 23, type: !102)
!3975 = !DILocation(line: 23, column: 42, scope: !3971)
!3976 = !DILocalVariable(name: "p3", arg: 3, scope: !3971, file: !107, line: 23, type: !102)
!3977 = !DILocation(line: 23, column: 52, scope: !3971)
!3978 = !DILocation(line: 25, column: 2, scope: !3971)
!3979 = !DILocation(line: 26, column: 1, scope: !3971)
!3980 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 28, type: !253, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3981 = !DILocalVariable(name: "ret", scope: !3980, file: !107, line: 30, type: !103)
!3982 = !DILocation(line: 30, column: 6, scope: !3980)
!3983 = !DILocation(line: 32, column: 8, scope: !3980)
!3984 = !DILocation(line: 32, column: 6, scope: !3980)
!3985 = !DILocation(line: 33, column: 17, scope: !3980)
!3986 = !DILocation(line: 33, column: 2, scope: !3980)
!3987 = !DILocation(line: 34, column: 1, scope: !3980)
!3988 = distinct !DISubprogram(name: "test", scope: !107, file: !107, line: 12, type: !3989, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!103}
!3991 = !DILocalVariable(name: "a", scope: !3988, file: !107, line: 14, type: !103)
!3992 = !DILocation(line: 14, column: 6, scope: !3988)
!3993 = !DILocalVariable(name: "b", scope: !3988, file: !107, line: 15, type: !103)
!3994 = !DILocation(line: 15, column: 6, scope: !3988)
!3995 = !DILocation(line: 17, column: 4, scope: !3988)
!3996 = !DILocation(line: 18, column: 6, scope: !3988)
!3997 = !DILocation(line: 18, column: 8, scope: !3988)
!3998 = !DILocation(line: 18, column: 4, scope: !3988)
!3999 = !DILocation(line: 20, column: 9, scope: !3988)
!4000 = !DILocation(line: 20, column: 13, scope: !3988)
!4001 = !DILocation(line: 20, column: 11, scope: !3988)
!4002 = !DILocation(line: 20, column: 2, scope: !3988)
!4003 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !272, file: !272, line: 45, type: !274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4004 = !DILocalVariable(name: "c", arg: 1, scope: !4003, file: !272, line: 45, type: !103)
!4005 = !DILocation(line: 45, column: 52, scope: !4003)
!4006 = !DILocation(line: 47, column: 2, scope: !4003)
!4007 = !DILocation(line: 50, column: 2, scope: !4003)
!4008 = distinct !DISubprogram(name: "__printk_hook_install", scope: !272, file: !272, line: 63, type: !4009, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !273}
!4011 = !DILocalVariable(name: "fn", arg: 1, scope: !4008, file: !272, line: 63, type: !273)
!4012 = !DILocation(line: 63, column: 34, scope: !4008)
!4013 = !DILocation(line: 65, column: 14, scope: !4008)
!4014 = !DILocation(line: 65, column: 12, scope: !4008)
!4015 = !DILocation(line: 66, column: 1, scope: !4008)
!4016 = distinct !DISubprogram(name: "__printk_get_hook", scope: !272, file: !272, line: 76, type: !4017, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!102}
!4019 = !DILocation(line: 78, column: 9, scope: !4016)
!4020 = !DILocation(line: 78, column: 2, scope: !4016)
!4021 = distinct !DISubprogram(name: "vprintk", scope: !272, file: !272, line: 113, type: !4022, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{null, !256, !4024}
!4024 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4025, line: 99, baseType: !4026)
!4025 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4026 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4025, line: 40, baseType: !4027)
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !272, baseType: !4028)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4029)
!4029 = !{!4030}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4028, file: !272, line: 79, baseType: !102, size: 32)
!4031 = !DILocalVariable(name: "fmt", arg: 1, scope: !4021, file: !272, line: 113, type: !256)
!4032 = !DILocation(line: 113, column: 26, scope: !4021)
!4033 = !DILocalVariable(name: "ap", arg: 2, scope: !4021, file: !272, line: 113, type: !4024)
!4034 = !DILocation(line: 113, column: 39, scope: !4021)
!4035 = !DILocation(line: 120, column: 6, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4021, file: !272, line: 120, column: 6)
!4037 = !DILocation(line: 120, column: 6, scope: !4021)
!4038 = !DILocalVariable(name: "ctx", scope: !4039, file: !272, line: 121, type: !4040)
!4039 = distinct !DILexicalBlock(scope: !4036, file: !272, line: 120, column: 27)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !272, line: 81, size: 32, elements: !4041)
!4041 = !{!4042, !4043}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4040, file: !272, line: 85, baseType: !32, size: 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4040, file: !272, line: 86, baseType: !4044, offset: 32)
!4044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, elements: !4045)
!4045 = !{!4046}
!4046 = !DISubrange(count: 0)
!4047 = !DILocation(line: 121, column: 26, scope: !4039)
!4048 = !DILocation(line: 133, column: 27, scope: !4039)
!4049 = !DILocation(line: 133, column: 33, scope: !4039)
!4050 = !DILocation(line: 133, column: 3, scope: !4039)
!4051 = !DILocation(line: 135, column: 11, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4039, file: !272, line: 135, column: 7)
!4053 = !DILocation(line: 135, column: 7, scope: !4052)
!4054 = !DILocation(line: 135, column: 7, scope: !4039)
!4055 = !DILocation(line: 136, column: 4, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4052, file: !272, line: 135, column: 22)
!4057 = !DILocation(line: 137, column: 3, scope: !4056)
!4058 = !DILocation(line: 138, column: 2, scope: !4039)
!4059 = !DILocation(line: 148, column: 29, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4036, file: !272, line: 138, column: 9)
!4061 = !DILocation(line: 148, column: 3, scope: !4060)
!4062 = !DILocation(line: 155, column: 1, scope: !4021)
!4063 = distinct !DISubprogram(name: "k_is_user_context", scope: !4064, file: !4064, line: 115, type: !4065, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4064 = !DIFile(filename: "zephyr/include/zephyr/syscall.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!1035}
!4067 = !DILocation(line: 120, column: 2, scope: !4063)
!4068 = distinct !DISubprogram(name: "buf_char_out", scope: !272, file: !272, line: 95, type: !4069, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!103, !103, !102}
!4071 = !DILocalVariable(name: "c", arg: 1, scope: !4068, file: !272, line: 95, type: !103)
!4072 = !DILocation(line: 95, column: 29, scope: !4068)
!4073 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4068, file: !272, line: 95, type: !102)
!4074 = !DILocation(line: 95, column: 38, scope: !4068)
!4075 = !DILocalVariable(name: "ctx", scope: !4068, file: !272, line: 97, type: !4076)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 32)
!4077 = !DILocation(line: 97, column: 26, scope: !4068)
!4078 = !DILocation(line: 97, column: 32, scope: !4068)
!4079 = !DILocation(line: 99, column: 31, scope: !4068)
!4080 = !DILocation(line: 99, column: 2, scope: !4068)
!4081 = !DILocation(line: 99, column: 7, scope: !4068)
!4082 = !DILocation(line: 99, column: 11, scope: !4068)
!4083 = !DILocation(line: 99, column: 16, scope: !4068)
!4084 = !DILocation(line: 99, column: 25, scope: !4068)
!4085 = !DILocation(line: 99, column: 29, scope: !4068)
!4086 = !DILocation(line: 100, column: 6, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4068, file: !272, line: 100, column: 6)
!4088 = !DILocation(line: 100, column: 11, scope: !4087)
!4089 = !DILocation(line: 100, column: 21, scope: !4087)
!4090 = !DILocation(line: 100, column: 6, scope: !4068)
!4091 = !DILocation(line: 101, column: 13, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4087, file: !272, line: 100, column: 51)
!4093 = !DILocation(line: 101, column: 3, scope: !4092)
!4094 = !DILocation(line: 102, column: 2, scope: !4092)
!4095 = !DILocation(line: 104, column: 9, scope: !4068)
!4096 = !DILocation(line: 104, column: 2, scope: !4068)
!4097 = distinct !DISubprogram(name: "cbvprintf", scope: !4098, file: !4098, line: 739, type: !4099, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4098 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!103, !4101, !102, !256, !4024}
!4101 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4098, line: 297, baseType: !4102)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 32)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!103, null}
!4105 = !DILocalVariable(name: "out", arg: 1, scope: !4097, file: !4098, line: 739, type: !4101)
!4106 = !DILocation(line: 739, column: 27, scope: !4097)
!4107 = !DILocalVariable(name: "ctx", arg: 2, scope: !4097, file: !4098, line: 739, type: !102)
!4108 = !DILocation(line: 739, column: 38, scope: !4097)
!4109 = !DILocalVariable(name: "format", arg: 3, scope: !4097, file: !4098, line: 739, type: !256)
!4110 = !DILocation(line: 739, column: 55, scope: !4097)
!4111 = !DILocalVariable(name: "ap", arg: 4, scope: !4097, file: !4098, line: 739, type: !4024)
!4112 = !DILocation(line: 739, column: 71, scope: !4097)
!4113 = !DILocation(line: 741, column: 26, scope: !4097)
!4114 = !DILocation(line: 741, column: 31, scope: !4097)
!4115 = !DILocation(line: 741, column: 36, scope: !4097)
!4116 = !DILocation(line: 741, column: 9, scope: !4097)
!4117 = !DILocation(line: 741, column: 2, scope: !4097)
!4118 = distinct !DISubprogram(name: "buf_flush", scope: !272, file: !272, line: 89, type: !4119, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !4076}
!4121 = !DILocalVariable(name: "ctx", arg: 1, scope: !4118, file: !272, line: 89, type: !4076)
!4122 = !DILocation(line: 89, column: 47, scope: !4118)
!4123 = !DILocation(line: 91, column: 12, scope: !4118)
!4124 = !DILocation(line: 91, column: 17, scope: !4118)
!4125 = !DILocation(line: 91, column: 22, scope: !4118)
!4126 = !DILocation(line: 91, column: 27, scope: !4118)
!4127 = !DILocation(line: 91, column: 2, scope: !4118)
!4128 = !DILocation(line: 92, column: 2, scope: !4118)
!4129 = !DILocation(line: 92, column: 7, scope: !4118)
!4130 = !DILocation(line: 92, column: 17, scope: !4118)
!4131 = !DILocation(line: 93, column: 1, scope: !4118)
!4132 = distinct !DISubprogram(name: "char_out", scope: !272, file: !272, line: 107, type: !4069, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4133 = !DILocalVariable(name: "c", arg: 1, scope: !4132, file: !272, line: 107, type: !103)
!4134 = !DILocation(line: 107, column: 25, scope: !4132)
!4135 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4132, file: !272, line: 107, type: !102)
!4136 = !DILocation(line: 107, column: 34, scope: !4132)
!4137 = !DILocation(line: 109, column: 9, scope: !4132)
!4138 = !DILocation(line: 110, column: 9, scope: !4132)
!4139 = !DILocation(line: 110, column: 19, scope: !4132)
!4140 = !DILocation(line: 110, column: 2, scope: !4132)
!4141 = distinct !DISubprogram(name: "k_str_out", scope: !4142, file: !4142, line: 1470, type: !4143, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4142 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!4143 = !DISubroutineType(types: !4144)
!4144 = !{null, !1836, !217}
!4145 = !DILocalVariable(name: "c", arg: 1, scope: !4141, file: !4142, line: 1470, type: !1836)
!4146 = !DILocation(line: 1470, column: 37, scope: !4141)
!4147 = !DILocalVariable(name: "n", arg: 2, scope: !4141, file: !4142, line: 1470, type: !217)
!4148 = !DILocation(line: 1470, column: 47, scope: !4141)
!4149 = !DILocation(line: 1480, column: 2, scope: !4141)
!4150 = !DILocation(line: 1480, column: 2, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4141, file: !4142, line: 1480, column: 2)
!4152 = !{i64 2149665805}
!4153 = !DILocation(line: 1481, column: 19, scope: !4141)
!4154 = !DILocation(line: 1481, column: 22, scope: !4141)
!4155 = !DILocation(line: 1481, column: 2, scope: !4141)
!4156 = !DILocation(line: 1482, column: 1, scope: !4141)
!4157 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !272, file: !272, line: 157, type: !4143, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4158 = !DILocalVariable(name: "c", arg: 1, scope: !4157, file: !272, line: 157, type: !1836)
!4159 = !DILocation(line: 157, column: 29, scope: !4157)
!4160 = !DILocalVariable(name: "n", arg: 2, scope: !4157, file: !272, line: 157, type: !217)
!4161 = !DILocation(line: 157, column: 39, scope: !4157)
!4162 = !DILocalVariable(name: "i", scope: !4157, file: !272, line: 159, type: !217)
!4163 = !DILocation(line: 159, column: 9, scope: !4157)
!4164 = !DILocation(line: 164, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4157, file: !272, line: 164, column: 2)
!4166 = !DILocation(line: 164, column: 7, scope: !4165)
!4167 = !DILocation(line: 164, column: 14, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4165, file: !272, line: 164, column: 2)
!4169 = !DILocation(line: 164, column: 18, scope: !4168)
!4170 = !DILocation(line: 164, column: 16, scope: !4168)
!4171 = !DILocation(line: 164, column: 2, scope: !4165)
!4172 = !DILocation(line: 165, column: 3, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4168, file: !272, line: 164, column: 26)
!4174 = !DILocation(line: 165, column: 13, scope: !4173)
!4175 = !DILocation(line: 165, column: 15, scope: !4173)
!4176 = !DILocation(line: 166, column: 2, scope: !4173)
!4177 = !DILocation(line: 164, column: 22, scope: !4168)
!4178 = !DILocation(line: 164, column: 2, scope: !4168)
!4179 = distinct !{!4179, !4171, !4180}
!4180 = !DILocation(line: 166, column: 2, scope: !4165)
!4181 = !DILocation(line: 171, column: 1, scope: !4157)
!4182 = distinct !DISubprogram(name: "printk", scope: !272, file: !272, line: 203, type: !4183, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{null, !256, null}
!4185 = !DILocalVariable(name: "fmt", arg: 1, scope: !4182, file: !272, line: 203, type: !256)
!4186 = !DILocation(line: 203, column: 25, scope: !4182)
!4187 = !DILocalVariable(name: "ap", scope: !4182, file: !272, line: 205, type: !4024)
!4188 = !DILocation(line: 205, column: 10, scope: !4182)
!4189 = !DILocation(line: 207, column: 2, scope: !4182)
!4190 = !DILocation(line: 209, column: 10, scope: !4182)
!4191 = !DILocation(line: 209, column: 2, scope: !4182)
!4192 = !DILocation(line: 211, column: 2, scope: !4182)
!4193 = !DILocation(line: 212, column: 1, scope: !4182)
!4194 = distinct !DISubprogram(name: "snprintk", scope: !272, file: !272, line: 239, type: !4195, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!103, !1836, !217, !256, null}
!4197 = !DILocalVariable(name: "str", arg: 1, scope: !4194, file: !272, line: 239, type: !1836)
!4198 = !DILocation(line: 239, column: 20, scope: !4194)
!4199 = !DILocalVariable(name: "size", arg: 2, scope: !4194, file: !272, line: 239, type: !217)
!4200 = !DILocation(line: 239, column: 32, scope: !4194)
!4201 = !DILocalVariable(name: "fmt", arg: 3, scope: !4194, file: !272, line: 239, type: !256)
!4202 = !DILocation(line: 239, column: 50, scope: !4194)
!4203 = !DILocalVariable(name: "ap", scope: !4194, file: !272, line: 241, type: !4024)
!4204 = !DILocation(line: 241, column: 10, scope: !4194)
!4205 = !DILocalVariable(name: "ret", scope: !4194, file: !272, line: 242, type: !103)
!4206 = !DILocation(line: 242, column: 6, scope: !4194)
!4207 = !DILocation(line: 244, column: 2, scope: !4194)
!4208 = !DILocation(line: 245, column: 18, scope: !4194)
!4209 = !DILocation(line: 245, column: 23, scope: !4194)
!4210 = !DILocation(line: 245, column: 29, scope: !4194)
!4211 = !DILocation(line: 245, column: 8, scope: !4194)
!4212 = !DILocation(line: 245, column: 6, scope: !4194)
!4213 = !DILocation(line: 246, column: 2, scope: !4194)
!4214 = !DILocation(line: 248, column: 9, scope: !4194)
!4215 = !DILocation(line: 248, column: 2, scope: !4194)
!4216 = distinct !DISubprogram(name: "vsnprintk", scope: !272, file: !272, line: 251, type: !4217, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!103, !1836, !217, !256, !4024}
!4219 = !DILocalVariable(name: "str", arg: 1, scope: !4216, file: !272, line: 251, type: !1836)
!4220 = !DILocation(line: 251, column: 21, scope: !4216)
!4221 = !DILocalVariable(name: "size", arg: 2, scope: !4216, file: !272, line: 251, type: !217)
!4222 = !DILocation(line: 251, column: 33, scope: !4216)
!4223 = !DILocalVariable(name: "fmt", arg: 3, scope: !4216, file: !272, line: 251, type: !256)
!4224 = !DILocation(line: 251, column: 51, scope: !4216)
!4225 = !DILocalVariable(name: "ap", arg: 4, scope: !4216, file: !272, line: 251, type: !4024)
!4226 = !DILocation(line: 251, column: 64, scope: !4216)
!4227 = !DILocalVariable(name: "ctx", scope: !4216, file: !272, line: 253, type: !4228)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !272, line: 217, size: 96, elements: !4229)
!4229 = !{!4230, !4231, !4232}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4228, file: !272, line: 218, baseType: !1836, size: 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4228, file: !272, line: 219, baseType: !103, size: 32, offset: 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4228, file: !272, line: 220, baseType: !103, size: 32, offset: 64)
!4233 = !DILocation(line: 253, column: 21, scope: !4216)
!4234 = !DILocation(line: 253, column: 27, scope: !4216)
!4235 = !DILocation(line: 253, column: 29, scope: !4216)
!4236 = !DILocation(line: 253, column: 34, scope: !4216)
!4237 = !DILocation(line: 255, column: 21, scope: !4216)
!4238 = !DILocation(line: 255, column: 27, scope: !4216)
!4239 = !DILocation(line: 255, column: 2, scope: !4216)
!4240 = !DILocation(line: 257, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4216, file: !272, line: 257, column: 6)
!4242 = !DILocation(line: 257, column: 22, scope: !4241)
!4243 = !DILocation(line: 257, column: 16, scope: !4241)
!4244 = !DILocation(line: 257, column: 6, scope: !4216)
!4245 = !DILocation(line: 258, column: 3, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !272, line: 257, column: 27)
!4247 = !DILocation(line: 258, column: 11, scope: !4246)
!4248 = !DILocation(line: 258, column: 18, scope: !4246)
!4249 = !DILocation(line: 259, column: 2, scope: !4246)
!4250 = !DILocation(line: 261, column: 13, scope: !4216)
!4251 = !DILocation(line: 261, column: 2, scope: !4216)
!4252 = distinct !DISubprogram(name: "str_out", scope: !272, file: !272, line: 223, type: !4253, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!103, !103, !4255}
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 32)
!4256 = !DILocalVariable(name: "c", arg: 1, scope: !4252, file: !272, line: 223, type: !103)
!4257 = !DILocation(line: 223, column: 24, scope: !4252)
!4258 = !DILocalVariable(name: "ctx", arg: 2, scope: !4252, file: !272, line: 223, type: !4255)
!4259 = !DILocation(line: 223, column: 47, scope: !4252)
!4260 = !DILocation(line: 225, column: 6, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4252, file: !272, line: 225, column: 6)
!4262 = !DILocation(line: 225, column: 11, scope: !4261)
!4263 = !DILocation(line: 225, column: 15, scope: !4261)
!4264 = !DILocation(line: 225, column: 23, scope: !4261)
!4265 = !DILocation(line: 225, column: 26, scope: !4261)
!4266 = !DILocation(line: 225, column: 31, scope: !4261)
!4267 = !DILocation(line: 225, column: 40, scope: !4261)
!4268 = !DILocation(line: 225, column: 45, scope: !4261)
!4269 = !DILocation(line: 225, column: 37, scope: !4261)
!4270 = !DILocation(line: 225, column: 6, scope: !4252)
!4271 = !DILocation(line: 226, column: 3, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4261, file: !272, line: 225, column: 50)
!4273 = !DILocation(line: 226, column: 8, scope: !4272)
!4274 = !DILocation(line: 226, column: 13, scope: !4272)
!4275 = !DILocation(line: 227, column: 10, scope: !4272)
!4276 = !DILocation(line: 227, column: 3, scope: !4272)
!4277 = !DILocation(line: 230, column: 6, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4252, file: !272, line: 230, column: 6)
!4279 = !DILocation(line: 230, column: 11, scope: !4278)
!4280 = !DILocation(line: 230, column: 20, scope: !4278)
!4281 = !DILocation(line: 230, column: 25, scope: !4278)
!4282 = !DILocation(line: 230, column: 29, scope: !4278)
!4283 = !DILocation(line: 230, column: 17, scope: !4278)
!4284 = !DILocation(line: 230, column: 6, scope: !4252)
!4285 = !DILocation(line: 231, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4278, file: !272, line: 230, column: 34)
!4287 = !DILocation(line: 231, column: 8, scope: !4286)
!4288 = !DILocation(line: 231, column: 12, scope: !4286)
!4289 = !DILocation(line: 231, column: 17, scope: !4286)
!4290 = !DILocation(line: 231, column: 22, scope: !4286)
!4291 = !DILocation(line: 231, column: 26, scope: !4286)
!4292 = !DILocation(line: 232, column: 2, scope: !4286)
!4293 = !DILocation(line: 233, column: 28, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4278, file: !272, line: 232, column: 9)
!4295 = !DILocation(line: 233, column: 3, scope: !4294)
!4296 = !DILocation(line: 233, column: 8, scope: !4294)
!4297 = !DILocation(line: 233, column: 12, scope: !4294)
!4298 = !DILocation(line: 233, column: 17, scope: !4294)
!4299 = !DILocation(line: 233, column: 22, scope: !4294)
!4300 = !DILocation(line: 233, column: 26, scope: !4294)
!4301 = !DILocation(line: 236, column: 9, scope: !4252)
!4302 = !DILocation(line: 236, column: 2, scope: !4252)
!4303 = !DILocation(line: 237, column: 1, scope: !4252)
!4304 = distinct !DISubprogram(name: "z_thread_entry", scope: !4305, file: !4305, line: 30, type: !4306, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3560, retainedNodes: !223)
!4305 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4306 = !DISubroutineType(types: !4307)
!4307 = !{null, !240, !102, !102, !102}
!4308 = !DILocalVariable(name: "entry", arg: 1, scope: !4304, file: !4305, line: 30, type: !240)
!4309 = !DILocation(line: 30, column: 52, scope: !4304)
!4310 = !DILocalVariable(name: "p1", arg: 2, scope: !4304, file: !4305, line: 31, type: !102)
!4311 = !DILocation(line: 31, column: 12, scope: !4304)
!4312 = !DILocalVariable(name: "p2", arg: 3, scope: !4304, file: !4305, line: 31, type: !102)
!4313 = !DILocation(line: 31, column: 22, scope: !4304)
!4314 = !DILocalVariable(name: "p3", arg: 4, scope: !4304, file: !4305, line: 31, type: !102)
!4315 = !DILocation(line: 31, column: 32, scope: !4304)
!4316 = !DILocation(line: 36, column: 2, scope: !4304)
!4317 = !DILocation(line: 36, column: 8, scope: !4304)
!4318 = !DILocation(line: 36, column: 12, scope: !4304)
!4319 = !DILocation(line: 36, column: 16, scope: !4304)
!4320 = !DILocation(line: 38, column: 17, scope: !4304)
!4321 = !DILocation(line: 38, column: 2, scope: !4304)
!4322 = !DILocation(line: 45, column: 2, scope: !4304)
!4323 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !4324, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3560, retainedNodes: !223)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!4326}
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !4327)
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 32)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !4329)
!4329 = !{!4330, !4388, !4400, !4401, !4402, !4403, !4416}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4328, file: !114, line: 247, baseType: !4331, size: 384)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !4332)
!4332 = !{!4333, !4357, !4364, !4365, !4366, !4375, !4376, !4377}
!4333 = !DIDerivedType(tag: DW_TAG_member, scope: !4331, file: !114, line: 60, baseType: !4334, size: 64)
!4334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4331, file: !114, line: 60, size: 64, elements: !4335)
!4335 = !{!4336, !4351}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4334, file: !114, line: 61, baseType: !4337, size: 64)
!4337 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !4338)
!4338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !4339)
!4339 = !{!4340, !4346}
!4340 = !DIDerivedType(tag: DW_TAG_member, scope: !4338, file: !124, line: 38, baseType: !4341, size: 32)
!4341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4338, file: !124, line: 38, size: 32, elements: !4342)
!4342 = !{!4343, !4345}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4341, file: !124, line: 39, baseType: !4344, size: 32)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4341, file: !124, line: 40, baseType: !4344, size: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !4338, file: !124, line: 42, baseType: !4347, size: 32, offset: 32)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4338, file: !124, line: 42, size: 32, elements: !4348)
!4348 = !{!4349, !4350}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4347, file: !124, line: 43, baseType: !4344, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4347, file: !124, line: 44, baseType: !4344, size: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4334, file: !114, line: 62, baseType: !4352, size: 64)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !4353)
!4353 = !{!4354}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4352, file: !140, line: 50, baseType: !4355, size: 64)
!4355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4356, size: 64, elements: !145)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 32)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4331, file: !114, line: 68, baseType: !4358, size: 32, offset: 64)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !4360)
!4360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !4361)
!4361 = !{!4362}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4360, file: !150, line: 232, baseType: !4363, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !4338)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4331, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4331, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!4366 = !DIDerivedType(tag: DW_TAG_member, scope: !4331, file: !114, line: 90, baseType: !4367, size: 16, offset: 112)
!4367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4331, file: !114, line: 90, size: 16, elements: !4368)
!4368 = !{!4369, !4374}
!4369 = !DIDerivedType(tag: DW_TAG_member, scope: !4367, file: !114, line: 91, baseType: !4370, size: 16)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4367, file: !114, line: 91, size: 16, elements: !4371)
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4370, file: !114, line: 96, baseType: !166, size: 8)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4370, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4367, file: !114, line: 100, baseType: !170, size: 16)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4331, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4331, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4331, file: !114, line: 131, baseType: !4378, size: 192, offset: 192)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !4379)
!4379 = !{!4380, !4381, !4387}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4378, file: !150, line: 245, baseType: !4337, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4378, file: !150, line: 246, baseType: !4382, size: 32, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !4383)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 32)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !4386}
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4378, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4328, file: !114, line: 250, baseType: !4389, size: 288, offset: 384)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !4390)
!4390 = !{!4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4389, file: !190, line: 26, baseType: !173, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4389, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4389, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4389, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4389, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4389, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4389, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4389, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4389, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4328, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4328, file: !114, line: 256, baseType: !4359, size: 64, offset: 704)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4328, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4328, file: !114, line: 325, baseType: !4404, size: 32, offset: 800)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 32)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !4406)
!4406 = !{!4407, !4413, !4414}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4405, file: !109, line: 5074, baseType: !4408, size: 96)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !4409)
!4409 = !{!4410, !4411, !4412}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4408, file: !210, line: 57, baseType: !213, size: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4408, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4408, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4405, file: !109, line: 5075, baseType: !4359, size: 64, offset: 96)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4405, file: !109, line: 5076, baseType: !4415, offset: 160)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4328, file: !114, line: 343, baseType: !4417, size: 64, offset: 832)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !4418)
!4418 = !{!4419, !4420}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4417, file: !190, line: 63, baseType: !173, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4417, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!4421 = !DILocation(line: 535, column: 9, scope: !4323)
!4422 = !DILocation(line: 535, column: 2, scope: !4323)
!4423 = distinct !DISubprogram(name: "k_thread_abort", scope: !4142, file: !4142, line: 188, type: !4424, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3560, retainedNodes: !223)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{null, !4326}
!4426 = !DILocalVariable(name: "thread", arg: 1, scope: !4423, file: !4142, line: 188, type: !4326)
!4427 = !DILocation(line: 188, column: 43, scope: !4423)
!4428 = !DILocation(line: 197, column: 2, scope: !4423)
!4429 = !DILocation(line: 197, column: 2, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4423, file: !4142, line: 197, column: 2)
!4431 = !{i64 2149656466}
!4432 = !DILocation(line: 198, column: 24, scope: !4423)
!4433 = !DILocation(line: 198, column: 2, scope: !4423)
!4434 = !DILocation(line: 199, column: 1, scope: !4423)
!4435 = distinct !DISubprogram(name: "z_current_get", scope: !4142, file: !4142, line: 173, type: !4324, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3560, retainedNodes: !223)
!4436 = !DILocation(line: 180, column: 2, scope: !4435)
!4437 = !DILocation(line: 180, column: 2, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4435, file: !4142, line: 180, column: 2)
!4439 = !{i64 2149656398}
!4440 = !DILocation(line: 181, column: 9, scope: !4435)
!4441 = !DILocation(line: 181, column: 2, scope: !4435)
!4442 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3566, file: !3566, line: 1338, type: !4443, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{!103, !4101, !102, !256, !4445, !173}
!4445 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4025, line: 99, baseType: !4446)
!4446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4025, line: 40, baseType: !4447)
!4447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3566, baseType: !4448)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4449)
!4449 = !{!4450}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4448, file: !3566, baseType: !102, size: 32)
!4451 = !DILocalVariable(name: "out", arg: 1, scope: !4442, file: !3566, line: 1338, type: !4101)
!4452 = !DILocation(line: 1338, column: 34, scope: !4442)
!4453 = !DILocalVariable(name: "ctx", arg: 2, scope: !4442, file: !3566, line: 1338, type: !102)
!4454 = !DILocation(line: 1338, column: 45, scope: !4442)
!4455 = !DILocalVariable(name: "fp", arg: 3, scope: !4442, file: !3566, line: 1338, type: !256)
!4456 = !DILocation(line: 1338, column: 62, scope: !4442)
!4457 = !DILocalVariable(name: "ap", arg: 4, scope: !4442, file: !3566, line: 1339, type: !4445)
!4458 = !DILocation(line: 1339, column: 16, scope: !4442)
!4459 = !DILocalVariable(name: "flags", arg: 5, scope: !4442, file: !3566, line: 1339, type: !173)
!4460 = !DILocation(line: 1339, column: 29, scope: !4442)
!4461 = !DILocalVariable(name: "buf", scope: !4442, file: !3566, line: 1341, type: !4462)
!4462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 176, elements: !4463)
!4463 = !{!4464}
!4464 = !DISubrange(count: 22)
!4465 = !DILocation(line: 1341, column: 7, scope: !4442)
!4466 = !DILocalVariable(name: "count", scope: !4442, file: !3566, line: 1342, type: !217)
!4467 = !DILocation(line: 1342, column: 9, scope: !4442)
!4468 = !DILocalVariable(name: "sint", scope: !4442, file: !3566, line: 1343, type: !3585)
!4469 = !DILocation(line: 1343, column: 18, scope: !4442)
!4470 = !DILocalVariable(name: "tagged_ap", scope: !4442, file: !3566, line: 1345, type: !4471)
!4471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!4472 = !DILocation(line: 1345, column: 13, scope: !4442)
!4473 = !DILocation(line: 1345, column: 26, scope: !4442)
!4474 = !DILocation(line: 1345, column: 32, scope: !4442)
!4475 = !DILocation(line: 1346, column: 11, scope: !4442)
!4476 = !DILocation(line: 1375, column: 2, scope: !4442)
!4477 = !DILocation(line: 1375, column: 10, scope: !4442)
!4478 = !DILocation(line: 1375, column: 9, scope: !4442)
!4479 = !DILocation(line: 1375, column: 13, scope: !4442)
!4480 = !DILocation(line: 1376, column: 8, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1376, column: 7)
!4482 = distinct !DILexicalBlock(scope: !4442, file: !3566, line: 1375, column: 19)
!4483 = !DILocation(line: 1376, column: 7, scope: !4481)
!4484 = !DILocation(line: 1376, column: 11, scope: !4481)
!4485 = !DILocation(line: 1376, column: 7, scope: !4482)
!4486 = !DILocation(line: 1377, column: 4, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4481, file: !3566, line: 1376, column: 19)
!4488 = !DILocalVariable(name: "rc", scope: !4489, file: !3566, line: 1377, type: !103)
!4489 = distinct !DILexicalBlock(scope: !4487, file: !3566, line: 1377, column: 4)
!4490 = !DILocation(line: 1377, column: 4, scope: !4489)
!4491 = !DILocation(line: 1377, column: 4, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4489, file: !3566, line: 1377, column: 4)
!4493 = !DILocation(line: 1377, column: 4, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4492, file: !3566, line: 1377, column: 4)
!4495 = !DILocation(line: 1378, column: 4, scope: !4487)
!4496 = distinct !{!4496, !4476, !4497}
!4497 = !DILocation(line: 1839, column: 2, scope: !4442)
!4498 = !DILocalVariable(name: "state", scope: !4482, file: !3566, line: 1395, type: !4499)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4442, file: !3566, line: 1392, size: 192, elements: !4500)
!4500 = !{!4501, !4511}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4499, file: !3566, line: 1393, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3566, line: 166, size: 64, elements: !4503)
!4503 = !{!4504, !4505, !4506, !4508, !4510}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4502, file: !3566, line: 168, baseType: !3585, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4502, file: !3566, line: 171, baseType: !3588, size: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4502, file: !3566, line: 174, baseType: !4507, size: 64)
!4507 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4502, file: !3566, line: 177, baseType: !4509, size: 64)
!4509 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4502, file: !3566, line: 180, baseType: !102, size: 32)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4499, file: !3566, line: 1394, baseType: !4512, size: 96, offset: 64)
!4512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3566, line: 189, size: 96, elements: !4513)
!4513 = !{!4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4538}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4512, file: !3566, line: 191, baseType: !1035, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4512, file: !3566, line: 194, baseType: !1035, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4512, file: !3566, line: 197, baseType: !1035, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4512, file: !3566, line: 200, baseType: !1035, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4512, file: !3566, line: 203, baseType: !1035, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4512, file: !3566, line: 206, baseType: !1035, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4512, file: !3566, line: 209, baseType: !1035, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4512, file: !3566, line: 212, baseType: !1035, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4512, file: !3566, line: 219, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4512, file: !3566, line: 222, baseType: !1035, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4512, file: !3566, line: 229, baseType: !1035, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4512, file: !3566, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4512, file: !3566, line: 238, baseType: !1035, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4512, file: !3566, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4512, file: !3566, line: 244, baseType: !1035, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4512, file: !3566, line: 247, baseType: !1035, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4512, file: !3566, line: 252, baseType: !1035, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4512, file: !3566, line: 257, baseType: !1035, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4512, file: !3566, line: 260, baseType: !157, size: 8, offset: 24)
!4533 = !DIDerivedType(tag: DW_TAG_member, scope: !4512, file: !3566, line: 262, baseType: !4534, size: 32, offset: 32)
!4534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4512, file: !3566, line: 262, size: 32, elements: !4535)
!4535 = !{!4536, !4537}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4534, file: !3566, line: 267, baseType: !103, size: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4534, file: !3566, line: 289, baseType: !103, size: 32)
!4538 = !DIDerivedType(tag: DW_TAG_member, scope: !4512, file: !3566, line: 292, baseType: !4539, size: 32, offset: 64)
!4539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4512, file: !3566, line: 292, size: 32, elements: !4540)
!4540 = !{!4541, !4542}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4539, file: !3566, line: 297, baseType: !103, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4539, file: !3566, line: 306, baseType: !103, size: 32)
!4543 = !DILocation(line: 1395, column: 5, scope: !4482)
!4544 = !DILocalVariable(name: "conv", scope: !4482, file: !3566, line: 1400, type: !4545)
!4545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4546)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 32)
!4547 = !DILocation(line: 1400, column: 28, scope: !4482)
!4548 = !DILocation(line: 1400, column: 42, scope: !4482)
!4549 = !DILocalVariable(name: "value", scope: !4482, file: !3566, line: 1401, type: !4550)
!4550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4551)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 32)
!4552 = !DILocation(line: 1401, column: 31, scope: !4482)
!4553 = !DILocation(line: 1401, column: 46, scope: !4482)
!4554 = !DILocalVariable(name: "sp", scope: !4482, file: !3566, line: 1402, type: !256)
!4555 = !DILocation(line: 1402, column: 15, scope: !4482)
!4556 = !DILocation(line: 1402, column: 20, scope: !4482)
!4557 = !DILocalVariable(name: "width", scope: !4482, file: !3566, line: 1403, type: !103)
!4558 = !DILocation(line: 1403, column: 7, scope: !4482)
!4559 = !DILocalVariable(name: "precision", scope: !4482, file: !3566, line: 1404, type: !103)
!4560 = !DILocation(line: 1404, column: 7, scope: !4482)
!4561 = !DILocalVariable(name: "bps", scope: !4482, file: !3566, line: 1405, type: !256)
!4562 = !DILocation(line: 1405, column: 15, scope: !4482)
!4563 = !DILocalVariable(name: "bpe", scope: !4482, file: !3566, line: 1406, type: !256)
!4564 = !DILocation(line: 1406, column: 15, scope: !4482)
!4565 = !DILocation(line: 1406, column: 21, scope: !4482)
!4566 = !DILocation(line: 1406, column: 25, scope: !4482)
!4567 = !DILocalVariable(name: "sign", scope: !4482, file: !3566, line: 1407, type: !237)
!4568 = !DILocation(line: 1407, column: 8, scope: !4482)
!4569 = !DILocation(line: 1409, column: 27, scope: !4482)
!4570 = !DILocation(line: 1409, column: 33, scope: !4482)
!4571 = !DILocation(line: 1409, column: 8, scope: !4482)
!4572 = !DILocation(line: 1409, column: 6, scope: !4482)
!4573 = !DILocation(line: 1414, column: 7, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1414, column: 7)
!4575 = !DILocation(line: 1414, column: 13, scope: !4574)
!4576 = !DILocation(line: 1414, column: 7, scope: !4482)
!4577 = !DILocation(line: 1415, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !3566, line: 1414, column: 25)
!4579 = !DILocation(line: 1415, column: 10, scope: !4578)
!4580 = !DILocation(line: 1417, column: 8, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !3566, line: 1417, column: 8)
!4582 = !DILocation(line: 1417, column: 14, scope: !4581)
!4583 = !DILocation(line: 1417, column: 8, scope: !4578)
!4584 = !DILocation(line: 1418, column: 5, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3566, line: 1417, column: 19)
!4586 = !DILocation(line: 1418, column: 11, scope: !4585)
!4587 = !DILocation(line: 1418, column: 21, scope: !4585)
!4588 = !DILocation(line: 1419, column: 14, scope: !4585)
!4589 = !DILocation(line: 1419, column: 13, scope: !4585)
!4590 = !DILocation(line: 1419, column: 11, scope: !4585)
!4591 = !DILocation(line: 1420, column: 4, scope: !4585)
!4592 = !DILocation(line: 1421, column: 3, scope: !4578)
!4593 = !DILocation(line: 1421, column: 14, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4574, file: !3566, line: 1421, column: 14)
!4595 = !DILocation(line: 1421, column: 20, scope: !4594)
!4596 = !DILocation(line: 1421, column: 14, scope: !4574)
!4597 = !DILocation(line: 1422, column: 12, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3566, line: 1421, column: 35)
!4599 = !DILocation(line: 1422, column: 18, scope: !4598)
!4600 = !DILocation(line: 1422, column: 10, scope: !4598)
!4601 = !DILocation(line: 1423, column: 3, scope: !4598)
!4602 = !DILocation(line: 1431, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1431, column: 7)
!4604 = !DILocation(line: 1431, column: 13, scope: !4603)
!4605 = !DILocation(line: 1431, column: 7, scope: !4482)
!4606 = !DILocalVariable(name: "arg", scope: !4607, file: !3566, line: 1432, type: !103)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !3566, line: 1431, column: 24)
!4608 = !DILocation(line: 1432, column: 8, scope: !4607)
!4609 = !DILocation(line: 1432, column: 14, scope: !4607)
!4610 = !DILocation(line: 1434, column: 8, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !3566, line: 1434, column: 8)
!4612 = !DILocation(line: 1434, column: 12, scope: !4611)
!4613 = !DILocation(line: 1434, column: 8, scope: !4607)
!4614 = !DILocation(line: 1435, column: 5, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4611, file: !3566, line: 1434, column: 17)
!4616 = !DILocation(line: 1435, column: 11, scope: !4615)
!4617 = !DILocation(line: 1435, column: 24, scope: !4615)
!4618 = !DILocation(line: 1436, column: 4, scope: !4615)
!4619 = !DILocation(line: 1437, column: 17, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4611, file: !3566, line: 1436, column: 11)
!4621 = !DILocation(line: 1437, column: 15, scope: !4620)
!4622 = !DILocation(line: 1439, column: 3, scope: !4607)
!4623 = !DILocation(line: 1439, column: 14, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4603, file: !3566, line: 1439, column: 14)
!4625 = !DILocation(line: 1439, column: 20, scope: !4624)
!4626 = !DILocation(line: 1439, column: 14, scope: !4603)
!4627 = !DILocation(line: 1440, column: 16, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4624, file: !3566, line: 1439, column: 34)
!4629 = !DILocation(line: 1440, column: 22, scope: !4628)
!4630 = !DILocation(line: 1440, column: 14, scope: !4628)
!4631 = !DILocation(line: 1441, column: 3, scope: !4628)
!4632 = !DILocation(line: 1448, column: 3, scope: !4482)
!4633 = !DILocation(line: 1448, column: 9, scope: !4482)
!4634 = !DILocation(line: 1448, column: 20, scope: !4482)
!4635 = !DILocation(line: 1449, column: 3, scope: !4482)
!4636 = !DILocation(line: 1449, column: 9, scope: !4482)
!4637 = !DILocation(line: 1449, column: 22, scope: !4482)
!4638 = !DILocalVariable(name: "specifier_cat", scope: !4482, file: !3566, line: 1468, type: !3565)
!4639 = !DILocation(line: 1468, column: 27, scope: !4482)
!4640 = !DILocation(line: 1469, column: 31, scope: !4482)
!4641 = !DILocation(line: 1469, column: 37, scope: !4482)
!4642 = !DILocalVariable(name: "length_mod", scope: !4482, file: !3566, line: 1470, type: !3573)
!4643 = !DILocation(line: 1470, column: 24, scope: !4482)
!4644 = !DILocation(line: 1471, column: 28, scope: !4482)
!4645 = !DILocation(line: 1471, column: 34, scope: !4482)
!4646 = !DILocation(line: 1478, column: 7, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1478, column: 7)
!4648 = !DILocation(line: 1478, column: 21, scope: !4647)
!4649 = !DILocation(line: 1478, column: 7, scope: !4482)
!4650 = !DILocation(line: 1479, column: 12, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4647, file: !3566, line: 1478, column: 40)
!4652 = !DILocation(line: 1479, column: 4, scope: !4651)
!4653 = !DILocation(line: 1479, column: 24, scope: !4651)
!4654 = !DILocation(line: 1484, column: 19, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !3566, line: 1479, column: 24)
!4656 = !DILocation(line: 1484, column: 5, scope: !4655)
!4657 = !DILocation(line: 1484, column: 12, scope: !4655)
!4658 = !DILocation(line: 1484, column: 17, scope: !4655)
!4659 = !DILocation(line: 1485, column: 5, scope: !4655)
!4660 = !DILocation(line: 1492, column: 20, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !3566, line: 1491, column: 12)
!4662 = distinct !DILexicalBlock(scope: !4655, file: !3566, line: 1487, column: 9)
!4663 = !DILocation(line: 1492, column: 6, scope: !4661)
!4664 = !DILocation(line: 1492, column: 13, scope: !4661)
!4665 = !DILocation(line: 1492, column: 18, scope: !4661)
!4666 = !DILocation(line: 1494, column: 5, scope: !4655)
!4667 = !DILocation(line: 1497, column: 23, scope: !4655)
!4668 = !DILocation(line: 1496, column: 5, scope: !4655)
!4669 = !DILocation(line: 1496, column: 12, scope: !4655)
!4670 = !DILocation(line: 1496, column: 17, scope: !4655)
!4671 = !DILocation(line: 1498, column: 5, scope: !4655)
!4672 = !DILocation(line: 1501, column: 23, scope: !4655)
!4673 = !DILocation(line: 1500, column: 5, scope: !4655)
!4674 = !DILocation(line: 1500, column: 12, scope: !4655)
!4675 = !DILocation(line: 1500, column: 17, scope: !4655)
!4676 = !DILocation(line: 1502, column: 5, scope: !4655)
!4677 = !DILocation(line: 1513, column: 23, scope: !4655)
!4678 = !DILocation(line: 1513, column: 6, scope: !4655)
!4679 = !DILocation(line: 1512, column: 5, scope: !4655)
!4680 = !DILocation(line: 1512, column: 12, scope: !4655)
!4681 = !DILocation(line: 1512, column: 17, scope: !4655)
!4682 = !DILocation(line: 1514, column: 5, scope: !4655)
!4683 = !DILocation(line: 1516, column: 8, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4651, file: !3566, line: 1516, column: 8)
!4685 = !DILocation(line: 1516, column: 19, scope: !4684)
!4686 = !DILocation(line: 1516, column: 8, scope: !4651)
!4687 = !DILocation(line: 1517, column: 32, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !3566, line: 1516, column: 33)
!4689 = !DILocation(line: 1517, column: 39, scope: !4688)
!4690 = !DILocation(line: 1517, column: 19, scope: !4688)
!4691 = !DILocation(line: 1517, column: 5, scope: !4688)
!4692 = !DILocation(line: 1517, column: 12, scope: !4688)
!4693 = !DILocation(line: 1517, column: 17, scope: !4688)
!4694 = !DILocation(line: 1518, column: 4, scope: !4688)
!4695 = !DILocation(line: 1518, column: 15, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4684, file: !3566, line: 1518, column: 15)
!4697 = !DILocation(line: 1518, column: 26, scope: !4696)
!4698 = !DILocation(line: 1518, column: 15, scope: !4684)
!4699 = !DILocation(line: 1519, column: 26, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4696, file: !3566, line: 1518, column: 39)
!4701 = !DILocation(line: 1519, column: 33, scope: !4700)
!4702 = !DILocation(line: 1519, column: 19, scope: !4700)
!4703 = !DILocation(line: 1519, column: 5, scope: !4700)
!4704 = !DILocation(line: 1519, column: 12, scope: !4700)
!4705 = !DILocation(line: 1519, column: 17, scope: !4700)
!4706 = !DILocation(line: 1520, column: 4, scope: !4700)
!4707 = !DILocation(line: 1521, column: 3, scope: !4651)
!4708 = !DILocation(line: 1521, column: 14, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4647, file: !3566, line: 1521, column: 14)
!4710 = !DILocation(line: 1521, column: 28, scope: !4709)
!4711 = !DILocation(line: 1521, column: 14, scope: !4647)
!4712 = !DILocation(line: 1522, column: 12, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4709, file: !3566, line: 1521, column: 47)
!4714 = !DILocation(line: 1522, column: 4, scope: !4713)
!4715 = !DILocation(line: 1522, column: 24, scope: !4713)
!4716 = !DILocation(line: 1527, column: 19, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4713, file: !3566, line: 1522, column: 24)
!4718 = !DILocation(line: 1527, column: 5, scope: !4717)
!4719 = !DILocation(line: 1527, column: 12, scope: !4717)
!4720 = !DILocation(line: 1527, column: 17, scope: !4717)
!4721 = !DILocation(line: 1528, column: 5, scope: !4717)
!4722 = !DILocation(line: 1531, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4717, file: !3566, line: 1530, column: 9)
!4724 = !DILocation(line: 1531, column: 19, scope: !4723)
!4725 = !DILocation(line: 1531, column: 29, scope: !4723)
!4726 = !DILocation(line: 1530, column: 9, scope: !4717)
!4727 = !DILocation(line: 1532, column: 29, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4723, file: !3566, line: 1531, column: 38)
!4729 = !DILocation(line: 1532, column: 20, scope: !4728)
!4730 = !DILocation(line: 1532, column: 6, scope: !4728)
!4731 = !DILocation(line: 1532, column: 13, scope: !4728)
!4732 = !DILocation(line: 1532, column: 18, scope: !4728)
!4733 = !DILocation(line: 1534, column: 5, scope: !4728)
!4734 = !DILocation(line: 1535, column: 20, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4723, file: !3566, line: 1534, column: 12)
!4736 = !DILocation(line: 1535, column: 6, scope: !4735)
!4737 = !DILocation(line: 1535, column: 13, scope: !4735)
!4738 = !DILocation(line: 1535, column: 18, scope: !4735)
!4739 = !DILocation(line: 1537, column: 5, scope: !4717)
!4740 = !DILocation(line: 1540, column: 23, scope: !4717)
!4741 = !DILocation(line: 1539, column: 5, scope: !4717)
!4742 = !DILocation(line: 1539, column: 12, scope: !4717)
!4743 = !DILocation(line: 1539, column: 17, scope: !4717)
!4744 = !DILocation(line: 1542, column: 5, scope: !4717)
!4745 = !DILocation(line: 1545, column: 23, scope: !4717)
!4746 = !DILocation(line: 1544, column: 5, scope: !4717)
!4747 = !DILocation(line: 1544, column: 12, scope: !4717)
!4748 = !DILocation(line: 1544, column: 17, scope: !4717)
!4749 = !DILocation(line: 1547, column: 5, scope: !4717)
!4750 = !DILocation(line: 1551, column: 23, scope: !4717)
!4751 = !DILocation(line: 1551, column: 6, scope: !4717)
!4752 = !DILocation(line: 1550, column: 5, scope: !4717)
!4753 = !DILocation(line: 1550, column: 12, scope: !4717)
!4754 = !DILocation(line: 1550, column: 17, scope: !4717)
!4755 = !DILocation(line: 1552, column: 5, scope: !4717)
!4756 = !DILocation(line: 1554, column: 8, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4713, file: !3566, line: 1554, column: 8)
!4758 = !DILocation(line: 1554, column: 19, scope: !4757)
!4759 = !DILocation(line: 1554, column: 8, scope: !4713)
!4760 = !DILocation(line: 1555, column: 34, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4757, file: !3566, line: 1554, column: 33)
!4762 = !DILocation(line: 1555, column: 41, scope: !4761)
!4763 = !DILocation(line: 1555, column: 19, scope: !4761)
!4764 = !DILocation(line: 1555, column: 5, scope: !4761)
!4765 = !DILocation(line: 1555, column: 12, scope: !4761)
!4766 = !DILocation(line: 1555, column: 17, scope: !4761)
!4767 = !DILocation(line: 1556, column: 4, scope: !4761)
!4768 = !DILocation(line: 1556, column: 15, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4757, file: !3566, line: 1556, column: 15)
!4770 = !DILocation(line: 1556, column: 26, scope: !4769)
!4771 = !DILocation(line: 1556, column: 15, scope: !4757)
!4772 = !DILocation(line: 1557, column: 35, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !3566, line: 1556, column: 39)
!4774 = !DILocation(line: 1557, column: 42, scope: !4773)
!4775 = !DILocation(line: 1557, column: 19, scope: !4773)
!4776 = !DILocation(line: 1557, column: 5, scope: !4773)
!4777 = !DILocation(line: 1557, column: 12, scope: !4773)
!4778 = !DILocation(line: 1557, column: 17, scope: !4773)
!4779 = !DILocation(line: 1558, column: 4, scope: !4773)
!4780 = !DILocation(line: 1559, column: 3, scope: !4713)
!4781 = !DILocation(line: 1559, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4709, file: !3566, line: 1559, column: 14)
!4783 = !DILocation(line: 1559, column: 28, scope: !4782)
!4784 = !DILocation(line: 1559, column: 14, scope: !4709)
!4785 = !DILocation(line: 1560, column: 8, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !3566, line: 1560, column: 8)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !3566, line: 1559, column: 45)
!4788 = !DILocation(line: 1560, column: 19, scope: !4786)
!4789 = !DILocation(line: 1560, column: 8, scope: !4787)
!4790 = !DILocation(line: 1561, column: 19, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4786, file: !3566, line: 1560, column: 38)
!4792 = !DILocation(line: 1561, column: 5, scope: !4791)
!4793 = !DILocation(line: 1561, column: 12, scope: !4791)
!4794 = !DILocation(line: 1561, column: 17, scope: !4791)
!4795 = !DILocation(line: 1562, column: 4, scope: !4791)
!4796 = !DILocation(line: 1563, column: 18, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4786, file: !3566, line: 1562, column: 11)
!4798 = !DILocation(line: 1563, column: 5, scope: !4797)
!4799 = !DILocation(line: 1563, column: 12, scope: !4797)
!4800 = !DILocation(line: 1563, column: 16, scope: !4797)
!4801 = !DILocation(line: 1565, column: 3, scope: !4787)
!4802 = !DILocation(line: 1565, column: 14, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4782, file: !3566, line: 1565, column: 14)
!4804 = !DILocation(line: 1565, column: 28, scope: !4803)
!4805 = !DILocation(line: 1565, column: 14, scope: !4782)
!4806 = !DILocation(line: 1566, column: 17, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4803, file: !3566, line: 1565, column: 46)
!4808 = !DILocation(line: 1566, column: 4, scope: !4807)
!4809 = !DILocation(line: 1566, column: 11, scope: !4807)
!4810 = !DILocation(line: 1566, column: 15, scope: !4807)
!4811 = !DILocation(line: 1567, column: 3, scope: !4807)
!4812 = !DILocation(line: 1574, column: 7, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1574, column: 7)
!4814 = !DILocation(line: 1574, column: 13, scope: !4813)
!4815 = !DILocation(line: 1574, column: 21, scope: !4813)
!4816 = !DILocation(line: 1574, column: 24, scope: !4813)
!4817 = !DILocation(line: 1574, column: 30, scope: !4813)
!4818 = !DILocation(line: 1574, column: 7, scope: !4482)
!4819 = !DILocation(line: 1575, column: 4, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4813, file: !3566, line: 1574, column: 43)
!4821 = !DILocalVariable(name: "rc", scope: !4822, file: !3566, line: 1575, type: !103)
!4822 = distinct !DILexicalBlock(scope: !4820, file: !3566, line: 1575, column: 4)
!4823 = !DILocation(line: 1575, column: 4, scope: !4822)
!4824 = !DILocation(line: 1575, column: 4, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !3566, line: 1575, column: 4)
!4826 = !DILocation(line: 1575, column: 4, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4825, file: !3566, line: 1575, column: 4)
!4828 = !DILocation(line: 1576, column: 4, scope: !4820)
!4829 = !DILocation(line: 1582, column: 11, scope: !4482)
!4830 = !DILocation(line: 1582, column: 17, scope: !4482)
!4831 = !DILocation(line: 1582, column: 3, scope: !4482)
!4832 = !DILocation(line: 1584, column: 4, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1582, column: 28)
!4834 = !DILocalVariable(name: "rc", scope: !4835, file: !3566, line: 1584, type: !103)
!4835 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1584, column: 4)
!4836 = !DILocation(line: 1584, column: 4, scope: !4835)
!4837 = !DILocation(line: 1584, column: 4, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !3566, line: 1584, column: 4)
!4839 = !DILocation(line: 1584, column: 4, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4838, file: !3566, line: 1584, column: 4)
!4841 = !DILocation(line: 1585, column: 4, scope: !4833)
!4842 = !DILocation(line: 1587, column: 24, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1586, column: 13)
!4844 = !DILocation(line: 1587, column: 31, scope: !4843)
!4845 = !DILocation(line: 1587, column: 8, scope: !4843)
!4846 = !DILocalVariable(name: "len", scope: !4843, file: !3566, line: 1589, type: !217)
!4847 = !DILocation(line: 1589, column: 11, scope: !4843)
!4848 = !DILocation(line: 1591, column: 8, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4843, file: !3566, line: 1591, column: 8)
!4850 = !DILocation(line: 1591, column: 18, scope: !4849)
!4851 = !DILocation(line: 1591, column: 8, scope: !4843)
!4852 = !DILocation(line: 1592, column: 19, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !3566, line: 1591, column: 24)
!4854 = !DILocation(line: 1592, column: 24, scope: !4853)
!4855 = !DILocation(line: 1592, column: 11, scope: !4853)
!4856 = !DILocation(line: 1592, column: 9, scope: !4853)
!4857 = !DILocation(line: 1593, column: 4, scope: !4853)
!4858 = !DILocation(line: 1594, column: 18, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4849, file: !3566, line: 1593, column: 11)
!4860 = !DILocation(line: 1594, column: 11, scope: !4859)
!4861 = !DILocation(line: 1594, column: 9, scope: !4859)
!4862 = !DILocation(line: 1597, column: 10, scope: !4843)
!4863 = !DILocation(line: 1597, column: 16, scope: !4843)
!4864 = !DILocation(line: 1597, column: 14, scope: !4843)
!4865 = !DILocation(line: 1597, column: 8, scope: !4843)
!4866 = !DILocation(line: 1598, column: 14, scope: !4843)
!4867 = !DILocation(line: 1600, column: 4, scope: !4843)
!4868 = !DILocation(line: 1603, column: 10, scope: !4833)
!4869 = !DILocation(line: 1603, column: 8, scope: !4833)
!4870 = !DILocation(line: 1604, column: 44, scope: !4833)
!4871 = !DILocation(line: 1604, column: 51, scope: !4833)
!4872 = !DILocation(line: 1604, column: 13, scope: !4833)
!4873 = !DILocation(line: 1604, column: 4, scope: !4833)
!4874 = !DILocation(line: 1604, column: 11, scope: !4833)
!4875 = !DILocation(line: 1605, column: 10, scope: !4833)
!4876 = !DILocation(line: 1605, column: 14, scope: !4833)
!4877 = !DILocation(line: 1605, column: 8, scope: !4833)
!4878 = !DILocation(line: 1606, column: 4, scope: !4833)
!4879 = !DILocation(line: 1609, column: 8, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1609, column: 8)
!4881 = !DILocation(line: 1609, column: 14, scope: !4880)
!4882 = !DILocation(line: 1609, column: 8, scope: !4833)
!4883 = !DILocation(line: 1610, column: 10, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4880, file: !3566, line: 1609, column: 25)
!4885 = !DILocation(line: 1611, column: 4, scope: !4884)
!4886 = !DILocation(line: 1611, column: 15, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4880, file: !3566, line: 1611, column: 15)
!4888 = !DILocation(line: 1611, column: 21, scope: !4887)
!4889 = !DILocation(line: 1611, column: 15, scope: !4880)
!4890 = !DILocation(line: 1612, column: 10, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !3566, line: 1611, column: 33)
!4892 = !DILocation(line: 1613, column: 4, scope: !4891)
!4893 = !DILocation(line: 1619, column: 11, scope: !4833)
!4894 = !DILocation(line: 1619, column: 18, scope: !4833)
!4895 = !DILocation(line: 1619, column: 9, scope: !4833)
!4896 = !DILocation(line: 1620, column: 8, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1620, column: 8)
!4898 = !DILocation(line: 1620, column: 13, scope: !4897)
!4899 = !DILocation(line: 1620, column: 8, scope: !4833)
!4900 = !DILocation(line: 1621, column: 10, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !3566, line: 1620, column: 18)
!4902 = !DILocation(line: 1622, column: 37, scope: !4901)
!4903 = !DILocation(line: 1622, column: 36, scope: !4901)
!4904 = !DILocation(line: 1622, column: 5, scope: !4901)
!4905 = !DILocation(line: 1622, column: 12, scope: !4901)
!4906 = !DILocation(line: 1622, column: 17, scope: !4901)
!4907 = !DILocation(line: 1623, column: 4, scope: !4901)
!4908 = !DILocation(line: 1624, column: 36, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4897, file: !3566, line: 1623, column: 11)
!4910 = !DILocation(line: 1624, column: 5, scope: !4909)
!4911 = !DILocation(line: 1624, column: 12, scope: !4909)
!4912 = !DILocation(line: 1624, column: 17, scope: !4909)
!4913 = !DILocation(line: 1620, column: 15, scope: !4897)
!4914 = !DILocation(line: 1632, column: 22, scope: !4833)
!4915 = !DILocation(line: 1632, column: 29, scope: !4833)
!4916 = !DILocation(line: 1632, column: 35, scope: !4833)
!4917 = !DILocation(line: 1632, column: 41, scope: !4833)
!4918 = !DILocation(line: 1632, column: 46, scope: !4833)
!4919 = !DILocation(line: 1632, column: 10, scope: !4833)
!4920 = !DILocation(line: 1632, column: 8, scope: !4833)
!4921 = !DILocation(line: 1632, column: 4, scope: !4833)
!4922 = !DILabel(scope: !4833, name: "prec_int_pad0", file: !3566, line: 1634)
!4923 = !DILocation(line: 1634, column: 3, scope: !4833)
!4924 = !DILocation(line: 1640, column: 8, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1640, column: 8)
!4926 = !DILocation(line: 1640, column: 18, scope: !4925)
!4927 = !DILocation(line: 1640, column: 8, scope: !4833)
!4928 = !DILocalVariable(name: "len", scope: !4929, file: !3566, line: 1641, type: !217)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !3566, line: 1640, column: 24)
!4930 = !DILocation(line: 1641, column: 12, scope: !4929)
!4931 = !DILocation(line: 1641, column: 18, scope: !4929)
!4932 = !DILocation(line: 1641, column: 24, scope: !4929)
!4933 = !DILocation(line: 1641, column: 22, scope: !4929)
!4934 = !DILocation(line: 1646, column: 5, scope: !4929)
!4935 = !DILocation(line: 1646, column: 11, scope: !4929)
!4936 = !DILocation(line: 1646, column: 21, scope: !4929)
!4937 = !DILocation(line: 1649, column: 9, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4929, file: !3566, line: 1649, column: 9)
!4939 = !DILocation(line: 1649, column: 23, scope: !4938)
!4940 = !DILocation(line: 1649, column: 13, scope: !4938)
!4941 = !DILocation(line: 1649, column: 9, scope: !4929)
!4942 = !DILocation(line: 1650, column: 25, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4938, file: !3566, line: 1649, column: 34)
!4944 = !DILocation(line: 1650, column: 42, scope: !4943)
!4945 = !DILocation(line: 1650, column: 35, scope: !4943)
!4946 = !DILocation(line: 1650, column: 6, scope: !4943)
!4947 = !DILocation(line: 1650, column: 12, scope: !4943)
!4948 = !DILocation(line: 1650, column: 23, scope: !4943)
!4949 = !DILocation(line: 1651, column: 5, scope: !4943)
!4950 = !DILocation(line: 1652, column: 4, scope: !4929)
!4951 = !DILocation(line: 1654, column: 4, scope: !4833)
!4952 = !DILocation(line: 1660, column: 8, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1660, column: 8)
!4954 = !DILocation(line: 1660, column: 15, scope: !4953)
!4955 = !DILocation(line: 1660, column: 19, scope: !4953)
!4956 = !DILocation(line: 1660, column: 8, scope: !4833)
!4957 = !DILocation(line: 1661, column: 34, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4953, file: !3566, line: 1660, column: 28)
!4959 = !DILocation(line: 1661, column: 41, scope: !4958)
!4960 = !DILocation(line: 1661, column: 23, scope: !4958)
!4961 = !DILocation(line: 1661, column: 46, scope: !4958)
!4962 = !DILocation(line: 1662, column: 9, scope: !4958)
!4963 = !DILocation(line: 1662, column: 14, scope: !4958)
!4964 = !DILocation(line: 1661, column: 11, scope: !4958)
!4965 = !DILocation(line: 1661, column: 9, scope: !4958)
!4966 = !DILocation(line: 1665, column: 5, scope: !4958)
!4967 = !DILocation(line: 1665, column: 11, scope: !4958)
!4968 = !DILocation(line: 1665, column: 22, scope: !4958)
!4969 = !DILocation(line: 1666, column: 5, scope: !4958)
!4970 = !DILocation(line: 1666, column: 11, scope: !4958)
!4971 = !DILocation(line: 1666, column: 21, scope: !4958)
!4972 = !DILocation(line: 1668, column: 5, scope: !4958)
!4973 = !DILocation(line: 1671, column: 8, scope: !4833)
!4974 = !DILocation(line: 1672, column: 10, scope: !4833)
!4975 = !DILocation(line: 1672, column: 14, scope: !4833)
!4976 = !DILocation(line: 1672, column: 8, scope: !4833)
!4977 = !DILocation(line: 1674, column: 4, scope: !4833)
!4978 = !DILocation(line: 1677, column: 17, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !3566, line: 1676, column: 49)
!4980 = distinct !DILexicalBlock(scope: !4833, file: !3566, line: 1676, column: 8)
!4981 = !DILocation(line: 1677, column: 23, scope: !4979)
!4982 = !DILocation(line: 1677, column: 30, scope: !4979)
!4983 = !DILocation(line: 1677, column: 35, scope: !4979)
!4984 = !DILocation(line: 1677, column: 5, scope: !4979)
!4985 = !DILocation(line: 1680, column: 4, scope: !4833)
!4986 = !DILocation(line: 1687, column: 4, scope: !4833)
!4987 = !DILocation(line: 1693, column: 4, scope: !4833)
!4988 = !DILocation(line: 1699, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1699, column: 7)
!4990 = !DILocation(line: 1699, column: 11, scope: !4989)
!4991 = !DILocation(line: 1699, column: 7, scope: !4482)
!4992 = !DILocation(line: 1700, column: 4, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !3566, line: 1699, column: 20)
!4994 = !DILocalVariable(name: "nj_len", scope: !4482, file: !3566, line: 1722, type: !217)
!4995 = !DILocation(line: 1722, column: 10, scope: !4482)
!4996 = !DILocation(line: 1722, column: 20, scope: !4482)
!4997 = !DILocation(line: 1722, column: 26, scope: !4482)
!4998 = !DILocation(line: 1722, column: 24, scope: !4482)
!4999 = !DILocalVariable(name: "pad_len", scope: !4482, file: !3566, line: 1723, type: !103)
!5000 = !DILocation(line: 1723, column: 7, scope: !4482)
!5001 = !DILocation(line: 1725, column: 7, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1725, column: 7)
!5003 = !DILocation(line: 1725, column: 12, scope: !5002)
!5004 = !DILocation(line: 1725, column: 7, scope: !4482)
!5005 = !DILocation(line: 1726, column: 11, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3566, line: 1725, column: 18)
!5007 = !DILocation(line: 1727, column: 3, scope: !5006)
!5008 = !DILocation(line: 1729, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1729, column: 7)
!5010 = !DILocation(line: 1729, column: 13, scope: !5009)
!5011 = !DILocation(line: 1729, column: 7, scope: !4482)
!5012 = !DILocation(line: 1730, column: 11, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !3566, line: 1729, column: 25)
!5014 = !DILocation(line: 1731, column: 3, scope: !5013)
!5015 = !DILocation(line: 1731, column: 14, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5009, file: !3566, line: 1731, column: 14)
!5017 = !DILocation(line: 1731, column: 20, scope: !5016)
!5018 = !DILocation(line: 1731, column: 14, scope: !5009)
!5019 = !DILocation(line: 1732, column: 11, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5016, file: !3566, line: 1731, column: 31)
!5021 = !DILocation(line: 1733, column: 3, scope: !5020)
!5022 = !DILocation(line: 1735, column: 13, scope: !4482)
!5023 = !DILocation(line: 1735, column: 19, scope: !4482)
!5024 = !DILocation(line: 1735, column: 10, scope: !4482)
!5025 = !DILocation(line: 1736, column: 7, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1736, column: 7)
!5027 = !DILocation(line: 1736, column: 13, scope: !5026)
!5028 = !DILocation(line: 1736, column: 7, scope: !4482)
!5029 = !DILocation(line: 1737, column: 14, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5026, file: !3566, line: 1736, column: 21)
!5031 = !DILocation(line: 1737, column: 20, scope: !5030)
!5032 = !DILocation(line: 1737, column: 11, scope: !5030)
!5033 = !DILocation(line: 1738, column: 3, scope: !5030)
!5034 = !DILocation(line: 1747, column: 7, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1747, column: 7)
!5036 = !DILocation(line: 1747, column: 13, scope: !5035)
!5037 = !DILocation(line: 1747, column: 7, scope: !4482)
!5038 = !DILocation(line: 1748, column: 18, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5035, file: !3566, line: 1747, column: 18)
!5040 = !DILocation(line: 1748, column: 10, scope: !5039)
!5041 = !DILocation(line: 1750, column: 9, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5039, file: !3566, line: 1750, column: 8)
!5043 = !DILocation(line: 1750, column: 15, scope: !5042)
!5044 = !DILocation(line: 1750, column: 8, scope: !5039)
!5045 = !DILocalVariable(name: "pad", scope: !5046, file: !3566, line: 1751, type: !237)
!5046 = distinct !DILexicalBlock(scope: !5042, file: !3566, line: 1750, column: 26)
!5047 = !DILocation(line: 1751, column: 10, scope: !5046)
!5048 = !DILocation(line: 1756, column: 9, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5046, file: !3566, line: 1756, column: 9)
!5050 = !DILocation(line: 1756, column: 15, scope: !5049)
!5051 = !DILocation(line: 1756, column: 9, scope: !5046)
!5052 = !DILocation(line: 1757, column: 10, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !3566, line: 1757, column: 10)
!5054 = distinct !DILexicalBlock(scope: !5049, file: !3566, line: 1756, column: 26)
!5055 = !DILocation(line: 1757, column: 15, scope: !5053)
!5056 = !DILocation(line: 1757, column: 10, scope: !5054)
!5057 = !DILocation(line: 1758, column: 7, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5053, file: !3566, line: 1757, column: 21)
!5059 = !DILocalVariable(name: "rc", scope: !5060, file: !3566, line: 1758, type: !103)
!5060 = distinct !DILexicalBlock(scope: !5058, file: !3566, line: 1758, column: 7)
!5061 = !DILocation(line: 1758, column: 7, scope: !5060)
!5062 = !DILocation(line: 1758, column: 7, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5060, file: !3566, line: 1758, column: 7)
!5064 = !DILocation(line: 1758, column: 7, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5063, file: !3566, line: 1758, column: 7)
!5066 = !DILocation(line: 1759, column: 12, scope: !5058)
!5067 = !DILocation(line: 1760, column: 6, scope: !5058)
!5068 = !DILocation(line: 1761, column: 10, scope: !5054)
!5069 = !DILocation(line: 1762, column: 5, scope: !5054)
!5070 = !DILocation(line: 1764, column: 5, scope: !5046)
!5071 = !DILocation(line: 1764, column: 17, scope: !5046)
!5072 = !DILocation(line: 1764, column: 20, scope: !5046)
!5073 = !DILocation(line: 1765, column: 6, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5046, file: !3566, line: 1764, column: 25)
!5075 = !DILocalVariable(name: "rc", scope: !5076, file: !3566, line: 1765, type: !103)
!5076 = distinct !DILexicalBlock(scope: !5074, file: !3566, line: 1765, column: 6)
!5077 = !DILocation(line: 1765, column: 6, scope: !5076)
!5078 = !DILocation(line: 1765, column: 6, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5076, file: !3566, line: 1765, column: 6)
!5080 = !DILocation(line: 1765, column: 6, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5079, file: !3566, line: 1765, column: 6)
!5082 = distinct !{!5082, !5070, !5083}
!5083 = !DILocation(line: 1766, column: 5, scope: !5046)
!5084 = !DILocation(line: 1767, column: 4, scope: !5046)
!5085 = !DILocation(line: 1768, column: 3, scope: !5039)
!5086 = !DILocation(line: 1773, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1773, column: 7)
!5088 = !DILocation(line: 1773, column: 12, scope: !5087)
!5089 = !DILocation(line: 1773, column: 7, scope: !4482)
!5090 = !DILocation(line: 1774, column: 4, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5087, file: !3566, line: 1773, column: 18)
!5092 = !DILocalVariable(name: "rc", scope: !5093, file: !3566, line: 1774, type: !103)
!5093 = distinct !DILexicalBlock(scope: !5091, file: !3566, line: 1774, column: 4)
!5094 = !DILocation(line: 1774, column: 4, scope: !5093)
!5095 = !DILocation(line: 1774, column: 4, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5093, file: !3566, line: 1774, column: 4)
!5097 = !DILocation(line: 1774, column: 4, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5096, file: !3566, line: 1774, column: 4)
!5099 = !DILocation(line: 1775, column: 3, scope: !5091)
!5100 = !DILocation(line: 1818, column: 8, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !3566, line: 1818, column: 8)
!5102 = distinct !DILexicalBlock(scope: !5103, file: !3566, line: 1817, column: 10)
!5103 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1777, column: 7)
!5104 = !DILocation(line: 1818, column: 14, scope: !5101)
!5105 = !DILocation(line: 1818, column: 27, scope: !5101)
!5106 = !DILocation(line: 1818, column: 33, scope: !5101)
!5107 = !DILocation(line: 1818, column: 25, scope: !5101)
!5108 = !DILocation(line: 1818, column: 8, scope: !5102)
!5109 = !DILocation(line: 1819, column: 5, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5101, file: !3566, line: 1818, column: 44)
!5111 = !DILocalVariable(name: "rc", scope: !5112, file: !3566, line: 1819, type: !103)
!5112 = distinct !DILexicalBlock(scope: !5110, file: !3566, line: 1819, column: 5)
!5113 = !DILocation(line: 1819, column: 5, scope: !5112)
!5114 = !DILocation(line: 1819, column: 5, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5112, file: !3566, line: 1819, column: 5)
!5116 = !DILocation(line: 1819, column: 5, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5115, file: !3566, line: 1819, column: 5)
!5118 = !DILocation(line: 1820, column: 4, scope: !5110)
!5119 = !DILocation(line: 1822, column: 8, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5102, file: !3566, line: 1822, column: 8)
!5121 = !DILocation(line: 1822, column: 14, scope: !5120)
!5122 = !DILocation(line: 1822, column: 8, scope: !5102)
!5123 = !DILocation(line: 1823, column: 5, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3566, line: 1822, column: 26)
!5125 = !DILocalVariable(name: "rc", scope: !5126, file: !3566, line: 1823, type: !103)
!5126 = distinct !DILexicalBlock(scope: !5124, file: !3566, line: 1823, column: 5)
!5127 = !DILocation(line: 1823, column: 5, scope: !5126)
!5128 = !DILocation(line: 1823, column: 5, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5126, file: !3566, line: 1823, column: 5)
!5130 = !DILocation(line: 1823, column: 5, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5129, file: !3566, line: 1823, column: 5)
!5132 = !DILocation(line: 1824, column: 4, scope: !5124)
!5133 = !DILocation(line: 1826, column: 14, scope: !5102)
!5134 = !DILocation(line: 1826, column: 20, scope: !5102)
!5135 = !DILocation(line: 1826, column: 12, scope: !5102)
!5136 = !DILocation(line: 1827, column: 4, scope: !5102)
!5137 = !DILocation(line: 1827, column: 18, scope: !5102)
!5138 = !DILocation(line: 1827, column: 21, scope: !5102)
!5139 = !DILocation(line: 1828, column: 5, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5102, file: !3566, line: 1827, column: 26)
!5141 = !DILocalVariable(name: "rc", scope: !5142, file: !3566, line: 1828, type: !103)
!5142 = distinct !DILexicalBlock(scope: !5140, file: !3566, line: 1828, column: 5)
!5143 = !DILocation(line: 1828, column: 5, scope: !5142)
!5144 = !DILocation(line: 1828, column: 5, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !3566, line: 1828, column: 5)
!5146 = !DILocation(line: 1828, column: 5, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5145, file: !3566, line: 1828, column: 5)
!5148 = distinct !{!5148, !5136, !5149}
!5149 = !DILocation(line: 1829, column: 4, scope: !5102)
!5150 = !DILocation(line: 1831, column: 4, scope: !5102)
!5151 = !DILocalVariable(name: "rc", scope: !5152, file: !3566, line: 1831, type: !103)
!5152 = distinct !DILexicalBlock(scope: !5102, file: !3566, line: 1831, column: 4)
!5153 = !DILocation(line: 1831, column: 4, scope: !5152)
!5154 = !DILocation(line: 1831, column: 4, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5152, file: !3566, line: 1831, column: 4)
!5156 = !DILocation(line: 1831, column: 4, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5155, file: !3566, line: 1831, column: 4)
!5158 = !DILocation(line: 1835, column: 3, scope: !4482)
!5159 = !DILocation(line: 1835, column: 10, scope: !4482)
!5160 = !DILocation(line: 1835, column: 16, scope: !4482)
!5161 = !DILocation(line: 1836, column: 4, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !4482, file: !3566, line: 1835, column: 21)
!5163 = !DILocalVariable(name: "rc", scope: !5164, file: !3566, line: 1836, type: !103)
!5164 = distinct !DILexicalBlock(scope: !5162, file: !3566, line: 1836, column: 4)
!5165 = !DILocation(line: 1836, column: 4, scope: !5164)
!5166 = !DILocation(line: 1836, column: 4, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !3566, line: 1836, column: 4)
!5168 = !DILocation(line: 1836, column: 4, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5167, file: !3566, line: 1836, column: 4)
!5170 = !DILocation(line: 1837, column: 4, scope: !5162)
!5171 = distinct !{!5171, !5158, !5172}
!5172 = !DILocation(line: 1838, column: 3, scope: !4482)
!5173 = !DILocation(line: 1841, column: 9, scope: !4442)
!5174 = !DILocation(line: 1841, column: 2, scope: !4442)
!5175 = !DILocation(line: 1844, column: 1, scope: !4442)
!5176 = distinct !DISubprogram(name: "extract_conversion", scope: !3566, file: !3566, line: 642, type: !5177, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!256, !4546, !256}
!5179 = !DILocalVariable(name: "conv", arg: 1, scope: !5176, file: !3566, line: 642, type: !4546)
!5180 = !DILocation(line: 642, column: 65, scope: !5176)
!5181 = !DILocalVariable(name: "sp", arg: 2, scope: !5176, file: !3566, line: 643, type: !256)
!5182 = !DILocation(line: 643, column: 23, scope: !5176)
!5183 = !DILocation(line: 645, column: 3, scope: !5176)
!5184 = !DILocation(line: 645, column: 30, scope: !5176)
!5185 = !DILocation(line: 645, column: 10, scope: !5176)
!5186 = !DILocation(line: 653, column: 2, scope: !5176)
!5187 = !DILocation(line: 654, column: 7, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5176, file: !3566, line: 654, column: 6)
!5189 = !DILocation(line: 654, column: 6, scope: !5188)
!5190 = !DILocation(line: 654, column: 10, scope: !5188)
!5191 = !DILocation(line: 654, column: 6, scope: !5176)
!5192 = !DILocation(line: 655, column: 24, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5188, file: !3566, line: 654, column: 18)
!5194 = !DILocation(line: 655, column: 21, scope: !5193)
!5195 = !DILocation(line: 655, column: 3, scope: !5193)
!5196 = !DILocation(line: 655, column: 9, scope: !5193)
!5197 = !DILocation(line: 655, column: 19, scope: !5193)
!5198 = !DILocation(line: 656, column: 10, scope: !5193)
!5199 = !DILocation(line: 656, column: 3, scope: !5193)
!5200 = !DILocation(line: 659, column: 21, scope: !5176)
!5201 = !DILocation(line: 659, column: 27, scope: !5176)
!5202 = !DILocation(line: 659, column: 7, scope: !5176)
!5203 = !DILocation(line: 659, column: 5, scope: !5176)
!5204 = !DILocation(line: 660, column: 21, scope: !5176)
!5205 = !DILocation(line: 660, column: 27, scope: !5176)
!5206 = !DILocation(line: 660, column: 7, scope: !5176)
!5207 = !DILocation(line: 660, column: 5, scope: !5176)
!5208 = !DILocation(line: 661, column: 20, scope: !5176)
!5209 = !DILocation(line: 661, column: 26, scope: !5176)
!5210 = !DILocation(line: 661, column: 7, scope: !5176)
!5211 = !DILocation(line: 661, column: 5, scope: !5176)
!5212 = !DILocation(line: 662, column: 22, scope: !5176)
!5213 = !DILocation(line: 662, column: 28, scope: !5176)
!5214 = !DILocation(line: 662, column: 7, scope: !5176)
!5215 = !DILocation(line: 662, column: 5, scope: !5176)
!5216 = !DILocation(line: 663, column: 25, scope: !5176)
!5217 = !DILocation(line: 663, column: 31, scope: !5176)
!5218 = !DILocation(line: 663, column: 7, scope: !5176)
!5219 = !DILocation(line: 663, column: 5, scope: !5176)
!5220 = !DILocation(line: 665, column: 9, scope: !5176)
!5221 = !DILocation(line: 665, column: 2, scope: !5176)
!5222 = !DILocation(line: 666, column: 1, scope: !5176)
!5223 = distinct !DISubprogram(name: "outs", scope: !3566, file: !3566, line: 1319, type: !5224, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!103, !4101, !102, !256, !256}
!5226 = !DILocalVariable(name: "out", arg: 1, scope: !5223, file: !3566, line: 1319, type: !4101)
!5227 = !DILocation(line: 1319, column: 29, scope: !5223)
!5228 = !DILocalVariable(name: "ctx", arg: 2, scope: !5223, file: !3566, line: 1320, type: !102)
!5229 = !DILocation(line: 1320, column: 9, scope: !5223)
!5230 = !DILocalVariable(name: "sp", arg: 3, scope: !5223, file: !3566, line: 1321, type: !256)
!5231 = !DILocation(line: 1321, column: 15, scope: !5223)
!5232 = !DILocalVariable(name: "ep", arg: 4, scope: !5223, file: !3566, line: 1322, type: !256)
!5233 = !DILocation(line: 1322, column: 15, scope: !5223)
!5234 = !DILocalVariable(name: "count", scope: !5223, file: !3566, line: 1324, type: !217)
!5235 = !DILocation(line: 1324, column: 9, scope: !5223)
!5236 = !DILocation(line: 1326, column: 2, scope: !5223)
!5237 = !DILocation(line: 1326, column: 10, scope: !5223)
!5238 = !DILocation(line: 1326, column: 15, scope: !5223)
!5239 = !DILocation(line: 1326, column: 13, scope: !5223)
!5240 = !DILocation(line: 1326, column: 19, scope: !5223)
!5241 = !DILocation(line: 1326, column: 24, scope: !5223)
!5242 = !DILocation(line: 1326, column: 27, scope: !5223)
!5243 = !DILocation(line: 1326, column: 36, scope: !5223)
!5244 = !DILocation(line: 1326, column: 40, scope: !5223)
!5245 = !DILocation(line: 1326, column: 39, scope: !5223)
!5246 = !DILocation(line: 0, scope: !5223)
!5247 = !DILocalVariable(name: "rc", scope: !5248, file: !3566, line: 1327, type: !103)
!5248 = distinct !DILexicalBlock(scope: !5223, file: !3566, line: 1326, column: 45)
!5249 = !DILocation(line: 1327, column: 7, scope: !5248)
!5250 = !DILocation(line: 1327, column: 12, scope: !5248)
!5251 = !DILocation(line: 1327, column: 24, scope: !5248)
!5252 = !DILocation(line: 1327, column: 21, scope: !5248)
!5253 = !DILocation(line: 1327, column: 16, scope: !5248)
!5254 = !DILocation(line: 1327, column: 28, scope: !5248)
!5255 = !DILocation(line: 1329, column: 7, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5248, file: !3566, line: 1329, column: 7)
!5257 = !DILocation(line: 1329, column: 10, scope: !5256)
!5258 = !DILocation(line: 1329, column: 7, scope: !5248)
!5259 = !DILocation(line: 1330, column: 11, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !3566, line: 1329, column: 15)
!5261 = !DILocation(line: 1330, column: 4, scope: !5260)
!5262 = !DILocation(line: 1332, column: 3, scope: !5248)
!5263 = distinct !{!5263, !5236, !5264}
!5264 = !DILocation(line: 1333, column: 2, scope: !5223)
!5265 = !DILocation(line: 1335, column: 14, scope: !5223)
!5266 = !DILocation(line: 1335, column: 2, scope: !5223)
!5267 = !DILocation(line: 1336, column: 1, scope: !5223)
!5268 = distinct !DISubprogram(name: "encode_uint", scope: !3566, file: !3566, line: 788, type: !5269, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!1836, !3588, !4546, !1836, !256}
!5271 = !DILocalVariable(name: "value", arg: 1, scope: !5268, file: !3566, line: 788, type: !3588)
!5272 = !DILocation(line: 788, column: 42, scope: !5268)
!5273 = !DILocalVariable(name: "conv", arg: 2, scope: !5268, file: !3566, line: 789, type: !4546)
!5274 = !DILocation(line: 789, column: 24, scope: !5268)
!5275 = !DILocalVariable(name: "bps", arg: 3, scope: !5268, file: !3566, line: 790, type: !1836)
!5276 = !DILocation(line: 790, column: 11, scope: !5268)
!5277 = !DILocalVariable(name: "bpe", arg: 4, scope: !5268, file: !3566, line: 791, type: !256)
!5278 = !DILocation(line: 791, column: 17, scope: !5268)
!5279 = !DILocalVariable(name: "upcase", scope: !5268, file: !3566, line: 793, type: !1035)
!5280 = !DILocation(line: 793, column: 7, scope: !5268)
!5281 = !DILocation(line: 793, column: 29, scope: !5268)
!5282 = !DILocation(line: 793, column: 35, scope: !5268)
!5283 = !DILocation(line: 793, column: 24, scope: !5268)
!5284 = !DILocation(line: 793, column: 16, scope: !5268)
!5285 = !DILocalVariable(name: "radix", scope: !5268, file: !3566, line: 794, type: !5286)
!5286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5287 = !DILocation(line: 794, column: 21, scope: !5268)
!5288 = !DILocation(line: 794, column: 46, scope: !5268)
!5289 = !DILocation(line: 794, column: 52, scope: !5268)
!5290 = !DILocation(line: 794, column: 29, scope: !5268)
!5291 = !DILocalVariable(name: "bp", scope: !5268, file: !3566, line: 795, type: !1836)
!5292 = !DILocation(line: 795, column: 8, scope: !5268)
!5293 = !DILocation(line: 795, column: 13, scope: !5268)
!5294 = !DILocation(line: 795, column: 20, scope: !5268)
!5295 = !DILocation(line: 795, column: 26, scope: !5268)
!5296 = !DILocation(line: 795, column: 24, scope: !5268)
!5297 = !DILocation(line: 795, column: 17, scope: !5268)
!5298 = !DILocation(line: 797, column: 2, scope: !5268)
!5299 = !DILocalVariable(name: "lsv", scope: !5300, file: !3566, line: 798, type: !32)
!5300 = distinct !DILexicalBlock(scope: !5268, file: !3566, line: 797, column: 5)
!5301 = !DILocation(line: 798, column: 16, scope: !5300)
!5302 = !DILocation(line: 798, column: 37, scope: !5300)
!5303 = !DILocation(line: 798, column: 45, scope: !5300)
!5304 = !DILocation(line: 798, column: 43, scope: !5300)
!5305 = !DILocation(line: 798, column: 22, scope: !5300)
!5306 = !DILocation(line: 800, column: 12, scope: !5300)
!5307 = !DILocation(line: 800, column: 16, scope: !5300)
!5308 = !DILocation(line: 800, column: 11, scope: !5300)
!5309 = !DILocation(line: 800, column: 31, scope: !5300)
!5310 = !DILocation(line: 800, column: 29, scope: !5300)
!5311 = !DILocation(line: 801, column: 6, scope: !5300)
!5312 = !DILocation(line: 801, column: 22, scope: !5300)
!5313 = !DILocation(line: 801, column: 20, scope: !5300)
!5314 = !DILocation(line: 801, column: 26, scope: !5300)
!5315 = !DILocation(line: 801, column: 41, scope: !5300)
!5316 = !DILocation(line: 801, column: 39, scope: !5300)
!5317 = !DILocation(line: 801, column: 45, scope: !5300)
!5318 = !DILocation(line: 800, column: 4, scope: !5300)
!5319 = !DILocation(line: 800, column: 9, scope: !5300)
!5320 = !DILocation(line: 802, column: 12, scope: !5300)
!5321 = !DILocation(line: 802, column: 9, scope: !5300)
!5322 = !DILocation(line: 803, column: 2, scope: !5300)
!5323 = !DILocation(line: 803, column: 12, scope: !5268)
!5324 = !DILocation(line: 803, column: 18, scope: !5268)
!5325 = !DILocation(line: 803, column: 24, scope: !5268)
!5326 = !DILocation(line: 803, column: 28, scope: !5268)
!5327 = !DILocation(line: 803, column: 34, scope: !5268)
!5328 = !DILocation(line: 803, column: 32, scope: !5268)
!5329 = !DILocation(line: 0, scope: !5268)
!5330 = distinct !{!5330, !5298, !5331}
!5331 = !DILocation(line: 803, column: 37, scope: !5268)
!5332 = !DILocation(line: 808, column: 6, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5268, file: !3566, line: 808, column: 6)
!5334 = !DILocation(line: 808, column: 12, scope: !5333)
!5335 = !DILocation(line: 808, column: 6, scope: !5268)
!5336 = !DILocation(line: 809, column: 7, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !3566, line: 809, column: 7)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !3566, line: 808, column: 23)
!5339 = !DILocation(line: 809, column: 13, scope: !5337)
!5340 = !DILocation(line: 809, column: 7, scope: !5338)
!5341 = !DILocation(line: 810, column: 4, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5337, file: !3566, line: 809, column: 19)
!5343 = !DILocation(line: 810, column: 10, scope: !5342)
!5344 = !DILocation(line: 810, column: 20, scope: !5342)
!5345 = !DILocation(line: 811, column: 3, scope: !5342)
!5346 = !DILocation(line: 811, column: 14, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5337, file: !3566, line: 811, column: 14)
!5348 = !DILocation(line: 811, column: 20, scope: !5347)
!5349 = !DILocation(line: 811, column: 14, scope: !5337)
!5350 = !DILocation(line: 812, column: 4, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !3566, line: 811, column: 27)
!5352 = !DILocation(line: 812, column: 10, scope: !5351)
!5353 = !DILocation(line: 812, column: 21, scope: !5351)
!5354 = !DILocation(line: 813, column: 3, scope: !5351)
!5355 = !DILocation(line: 816, column: 2, scope: !5338)
!5356 = !DILocation(line: 818, column: 9, scope: !5268)
!5357 = !DILocation(line: 818, column: 2, scope: !5268)
!5358 = distinct !DISubprogram(name: "store_count", scope: !3566, file: !3566, line: 1280, type: !5359, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{null, !5361, !102, !103}
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 32)
!5362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4512)
!5363 = !DILocalVariable(name: "conv", arg: 1, scope: !5358, file: !3566, line: 1280, type: !5361)
!5364 = !DILocation(line: 1280, column: 57, scope: !5358)
!5365 = !DILocalVariable(name: "dp", arg: 2, scope: !5358, file: !3566, line: 1281, type: !102)
!5366 = !DILocation(line: 1281, column: 17, scope: !5358)
!5367 = !DILocalVariable(name: "count", arg: 3, scope: !5358, file: !3566, line: 1282, type: !103)
!5368 = !DILocation(line: 1282, column: 15, scope: !5358)
!5369 = !DILocation(line: 1284, column: 32, scope: !5358)
!5370 = !DILocation(line: 1284, column: 38, scope: !5358)
!5371 = !DILocation(line: 1284, column: 2, scope: !5358)
!5372 = !DILocation(line: 1286, column: 16, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5358, file: !3566, line: 1284, column: 50)
!5374 = !DILocation(line: 1286, column: 11, scope: !5373)
!5375 = !DILocation(line: 1286, column: 4, scope: !5373)
!5376 = !DILocation(line: 1286, column: 14, scope: !5373)
!5377 = !DILocation(line: 1287, column: 3, scope: !5373)
!5378 = !DILocation(line: 1289, column: 37, scope: !5373)
!5379 = !DILocation(line: 1289, column: 24, scope: !5373)
!5380 = !DILocation(line: 1289, column: 19, scope: !5373)
!5381 = !DILocation(line: 1289, column: 22, scope: !5373)
!5382 = !DILocation(line: 1290, column: 3, scope: !5373)
!5383 = !DILocation(line: 1292, column: 25, scope: !5373)
!5384 = !DILocation(line: 1292, column: 18, scope: !5373)
!5385 = !DILocation(line: 1292, column: 13, scope: !5373)
!5386 = !DILocation(line: 1292, column: 4, scope: !5373)
!5387 = !DILocation(line: 1292, column: 16, scope: !5373)
!5388 = !DILocation(line: 1293, column: 3, scope: !5373)
!5389 = !DILocation(line: 1295, column: 23, scope: !5373)
!5390 = !DILocation(line: 1295, column: 12, scope: !5373)
!5391 = !DILocation(line: 1295, column: 4, scope: !5373)
!5392 = !DILocation(line: 1295, column: 15, scope: !5373)
!5393 = !DILocation(line: 1296, column: 3, scope: !5373)
!5394 = !DILocation(line: 1298, column: 33, scope: !5373)
!5395 = !DILocation(line: 1298, column: 22, scope: !5373)
!5396 = !DILocation(line: 1298, column: 17, scope: !5373)
!5397 = !DILocation(line: 1298, column: 4, scope: !5373)
!5398 = !DILocation(line: 1298, column: 20, scope: !5373)
!5399 = !DILocation(line: 1299, column: 3, scope: !5373)
!5400 = !DILocation(line: 1301, column: 31, scope: !5373)
!5401 = !DILocation(line: 1301, column: 21, scope: !5373)
!5402 = !DILocation(line: 1301, column: 16, scope: !5373)
!5403 = !DILocation(line: 1301, column: 4, scope: !5373)
!5404 = !DILocation(line: 1301, column: 19, scope: !5373)
!5405 = !DILocation(line: 1302, column: 3, scope: !5373)
!5406 = !DILocation(line: 1304, column: 27, scope: !5373)
!5407 = !DILocation(line: 1304, column: 14, scope: !5373)
!5408 = !DILocation(line: 1304, column: 4, scope: !5373)
!5409 = !DILocation(line: 1304, column: 17, scope: !5373)
!5410 = !DILocation(line: 1305, column: 3, scope: !5373)
!5411 = !DILocation(line: 1307, column: 33, scope: !5373)
!5412 = !DILocation(line: 1307, column: 17, scope: !5373)
!5413 = !DILocation(line: 1307, column: 4, scope: !5373)
!5414 = !DILocation(line: 1307, column: 20, scope: !5373)
!5415 = !DILocation(line: 1308, column: 3, scope: !5373)
!5416 = !DILocation(line: 1314, column: 3, scope: !5373)
!5417 = !DILocation(line: 1316, column: 1, scope: !5358)
!5418 = distinct !DISubprogram(name: "isupper", scope: !5419, file: !5419, line: 16, type: !274, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5419 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5420 = !DILocalVariable(name: "a", arg: 1, scope: !5418, file: !5419, line: 16, type: !103)
!5421 = !DILocation(line: 16, column: 31, scope: !5418)
!5422 = !DILocation(line: 18, column: 27, scope: !5418)
!5423 = !DILocation(line: 18, column: 29, scope: !5418)
!5424 = !DILocation(line: 18, column: 45, scope: !5418)
!5425 = !DILocation(line: 18, column: 2, scope: !5418)
!5426 = distinct !DISubprogram(name: "conversion_radix", scope: !3566, file: !3566, line: 761, type: !5427, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!217, !237}
!5429 = !DILocalVariable(name: "specifier", arg: 1, scope: !5426, file: !3566, line: 761, type: !237)
!5430 = !DILocation(line: 761, column: 44, scope: !5426)
!5431 = !DILocation(line: 763, column: 10, scope: !5426)
!5432 = !DILocation(line: 763, column: 2, scope: !5426)
!5433 = !DILocation(line: 763, column: 21, scope: !5426)
!5434 = !DILocation(line: 768, column: 3, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5426, file: !3566, line: 763, column: 21)
!5436 = !DILocation(line: 770, column: 3, scope: !5435)
!5437 = !DILocation(line: 774, column: 3, scope: !5435)
!5438 = !DILocation(line: 776, column: 1, scope: !5426)
!5439 = distinct !DISubprogram(name: "extract_flags", scope: !3566, file: !3566, line: 339, type: !5177, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5440 = !DILocalVariable(name: "conv", arg: 1, scope: !5439, file: !3566, line: 339, type: !4546)
!5441 = !DILocation(line: 339, column: 60, scope: !5439)
!5442 = !DILocalVariable(name: "sp", arg: 2, scope: !5439, file: !3566, line: 340, type: !256)
!5443 = !DILocation(line: 340, column: 18, scope: !5439)
!5444 = !DILocalVariable(name: "loop", scope: !5439, file: !3566, line: 342, type: !1035)
!5445 = !DILocation(line: 342, column: 7, scope: !5439)
!5446 = !DILocation(line: 344, column: 2, scope: !5439)
!5447 = !DILocation(line: 345, column: 12, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5439, file: !3566, line: 344, column: 5)
!5449 = !DILocation(line: 345, column: 11, scope: !5448)
!5450 = !DILocation(line: 345, column: 3, scope: !5448)
!5451 = !DILocation(line: 347, column: 4, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !3566, line: 345, column: 16)
!5453 = !DILocation(line: 347, column: 10, scope: !5452)
!5454 = !DILocation(line: 347, column: 20, scope: !5452)
!5455 = !DILocation(line: 348, column: 4, scope: !5452)
!5456 = !DILocation(line: 350, column: 4, scope: !5452)
!5457 = !DILocation(line: 350, column: 10, scope: !5452)
!5458 = !DILocation(line: 350, column: 20, scope: !5452)
!5459 = !DILocation(line: 351, column: 4, scope: !5452)
!5460 = !DILocation(line: 353, column: 4, scope: !5452)
!5461 = !DILocation(line: 353, column: 10, scope: !5452)
!5462 = !DILocation(line: 353, column: 21, scope: !5452)
!5463 = !DILocation(line: 354, column: 4, scope: !5452)
!5464 = !DILocation(line: 356, column: 4, scope: !5452)
!5465 = !DILocation(line: 356, column: 10, scope: !5452)
!5466 = !DILocation(line: 356, column: 20, scope: !5452)
!5467 = !DILocation(line: 357, column: 4, scope: !5452)
!5468 = !DILocation(line: 359, column: 4, scope: !5452)
!5469 = !DILocation(line: 359, column: 10, scope: !5452)
!5470 = !DILocation(line: 359, column: 20, scope: !5452)
!5471 = !DILocation(line: 360, column: 4, scope: !5452)
!5472 = !DILocation(line: 362, column: 9, scope: !5452)
!5473 = !DILocation(line: 363, column: 3, scope: !5452)
!5474 = !DILocation(line: 364, column: 7, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5448, file: !3566, line: 364, column: 7)
!5476 = !DILocation(line: 364, column: 7, scope: !5448)
!5477 = !DILocation(line: 365, column: 4, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !3566, line: 364, column: 13)
!5479 = !DILocation(line: 366, column: 3, scope: !5478)
!5480 = !DILocation(line: 367, column: 2, scope: !5448)
!5481 = !DILocation(line: 367, column: 11, scope: !5439)
!5482 = distinct !{!5482, !5446, !5483}
!5483 = !DILocation(line: 367, column: 15, scope: !5439)
!5484 = !DILocation(line: 370, column: 6, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5439, file: !3566, line: 370, column: 6)
!5486 = !DILocation(line: 370, column: 12, scope: !5485)
!5487 = !DILocation(line: 370, column: 22, scope: !5485)
!5488 = !DILocation(line: 370, column: 25, scope: !5485)
!5489 = !DILocation(line: 370, column: 31, scope: !5485)
!5490 = !DILocation(line: 370, column: 6, scope: !5439)
!5491 = !DILocation(line: 371, column: 3, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5485, file: !3566, line: 370, column: 42)
!5493 = !DILocation(line: 371, column: 9, scope: !5492)
!5494 = !DILocation(line: 371, column: 19, scope: !5492)
!5495 = !DILocation(line: 372, column: 2, scope: !5492)
!5496 = !DILocation(line: 376, column: 9, scope: !5439)
!5497 = !DILocation(line: 376, column: 2, scope: !5439)
!5498 = distinct !DISubprogram(name: "extract_width", scope: !3566, file: !3566, line: 388, type: !5177, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5499 = !DILocalVariable(name: "conv", arg: 1, scope: !5498, file: !3566, line: 388, type: !4546)
!5500 = !DILocation(line: 388, column: 60, scope: !5498)
!5501 = !DILocalVariable(name: "sp", arg: 2, scope: !5498, file: !3566, line: 389, type: !256)
!5502 = !DILocation(line: 389, column: 18, scope: !5498)
!5503 = !DILocation(line: 391, column: 2, scope: !5498)
!5504 = !DILocation(line: 391, column: 8, scope: !5498)
!5505 = !DILocation(line: 391, column: 22, scope: !5498)
!5506 = !DILocation(line: 393, column: 7, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5498, file: !3566, line: 393, column: 6)
!5508 = !DILocation(line: 393, column: 6, scope: !5507)
!5509 = !DILocation(line: 393, column: 10, scope: !5507)
!5510 = !DILocation(line: 393, column: 6, scope: !5498)
!5511 = !DILocation(line: 394, column: 3, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5507, file: !3566, line: 393, column: 18)
!5513 = !DILocation(line: 394, column: 9, scope: !5512)
!5514 = !DILocation(line: 394, column: 20, scope: !5512)
!5515 = !DILocation(line: 395, column: 10, scope: !5512)
!5516 = !DILocation(line: 395, column: 3, scope: !5512)
!5517 = !DILocalVariable(name: "wp", scope: !5498, file: !3566, line: 398, type: !256)
!5518 = !DILocation(line: 398, column: 14, scope: !5498)
!5519 = !DILocation(line: 398, column: 19, scope: !5498)
!5520 = !DILocalVariable(name: "width", scope: !5498, file: !3566, line: 399, type: !217)
!5521 = !DILocation(line: 399, column: 9, scope: !5498)
!5522 = !DILocation(line: 399, column: 17, scope: !5498)
!5523 = !DILocation(line: 401, column: 6, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5498, file: !3566, line: 401, column: 6)
!5525 = !DILocation(line: 401, column: 12, scope: !5524)
!5526 = !DILocation(line: 401, column: 9, scope: !5524)
!5527 = !DILocation(line: 401, column: 6, scope: !5498)
!5528 = !DILocation(line: 402, column: 3, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5524, file: !3566, line: 401, column: 16)
!5530 = !DILocation(line: 402, column: 9, scope: !5529)
!5531 = !DILocation(line: 402, column: 23, scope: !5529)
!5532 = !DILocation(line: 403, column: 23, scope: !5529)
!5533 = !DILocation(line: 403, column: 3, scope: !5529)
!5534 = !DILocation(line: 403, column: 9, scope: !5529)
!5535 = !DILocation(line: 403, column: 21, scope: !5529)
!5536 = !DILocation(line: 404, column: 26, scope: !5529)
!5537 = !DILocation(line: 404, column: 32, scope: !5529)
!5538 = !DILocation(line: 404, column: 44, scope: !5529)
!5539 = !DILocation(line: 405, column: 11, scope: !5529)
!5540 = !DILocation(line: 405, column: 15, scope: !5529)
!5541 = !DILocation(line: 405, column: 32, scope: !5529)
!5542 = !DILocation(line: 405, column: 38, scope: !5529)
!5543 = !DILocation(line: 405, column: 21, scope: !5529)
!5544 = !DILocation(line: 404, column: 3, scope: !5529)
!5545 = !DILocation(line: 404, column: 9, scope: !5529)
!5546 = !DILocation(line: 404, column: 21, scope: !5529)
!5547 = !DILocation(line: 406, column: 2, scope: !5529)
!5548 = !DILocation(line: 408, column: 9, scope: !5498)
!5549 = !DILocation(line: 408, column: 2, scope: !5498)
!5550 = !DILocation(line: 409, column: 1, scope: !5498)
!5551 = distinct !DISubprogram(name: "extract_prec", scope: !3566, file: !3566, line: 420, type: !5177, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5552 = !DILocalVariable(name: "conv", arg: 1, scope: !5551, file: !3566, line: 420, type: !4546)
!5553 = !DILocation(line: 420, column: 59, scope: !5551)
!5554 = !DILocalVariable(name: "sp", arg: 2, scope: !5551, file: !3566, line: 421, type: !256)
!5555 = !DILocation(line: 421, column: 24, scope: !5551)
!5556 = !DILocation(line: 423, column: 25, scope: !5551)
!5557 = !DILocation(line: 423, column: 24, scope: !5551)
!5558 = !DILocation(line: 423, column: 28, scope: !5551)
!5559 = !DILocation(line: 423, column: 2, scope: !5551)
!5560 = !DILocation(line: 423, column: 8, scope: !5551)
!5561 = !DILocation(line: 423, column: 21, scope: !5551)
!5562 = !DILocation(line: 425, column: 7, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5551, file: !3566, line: 425, column: 6)
!5564 = !DILocation(line: 425, column: 13, scope: !5563)
!5565 = !DILocation(line: 425, column: 6, scope: !5551)
!5566 = !DILocation(line: 426, column: 10, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5563, file: !3566, line: 425, column: 27)
!5568 = !DILocation(line: 426, column: 3, scope: !5567)
!5569 = !DILocation(line: 428, column: 2, scope: !5551)
!5570 = !DILocation(line: 430, column: 7, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5551, file: !3566, line: 430, column: 6)
!5572 = !DILocation(line: 430, column: 6, scope: !5571)
!5573 = !DILocation(line: 430, column: 10, scope: !5571)
!5574 = !DILocation(line: 430, column: 6, scope: !5551)
!5575 = !DILocation(line: 431, column: 3, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5571, file: !3566, line: 430, column: 18)
!5577 = !DILocation(line: 431, column: 9, scope: !5576)
!5578 = !DILocation(line: 431, column: 19, scope: !5576)
!5579 = !DILocation(line: 432, column: 10, scope: !5576)
!5580 = !DILocation(line: 432, column: 3, scope: !5576)
!5581 = !DILocalVariable(name: "prec", scope: !5551, file: !3566, line: 435, type: !217)
!5582 = !DILocation(line: 435, column: 9, scope: !5551)
!5583 = !DILocation(line: 435, column: 16, scope: !5551)
!5584 = !DILocation(line: 437, column: 21, scope: !5551)
!5585 = !DILocation(line: 437, column: 2, scope: !5551)
!5586 = !DILocation(line: 437, column: 8, scope: !5551)
!5587 = !DILocation(line: 437, column: 19, scope: !5551)
!5588 = !DILocation(line: 438, column: 25, scope: !5551)
!5589 = !DILocation(line: 438, column: 31, scope: !5551)
!5590 = !DILocation(line: 438, column: 42, scope: !5551)
!5591 = !DILocation(line: 439, column: 10, scope: !5551)
!5592 = !DILocation(line: 439, column: 14, scope: !5551)
!5593 = !DILocation(line: 439, column: 30, scope: !5551)
!5594 = !DILocation(line: 439, column: 36, scope: !5551)
!5595 = !DILocation(line: 439, column: 19, scope: !5551)
!5596 = !DILocation(line: 438, column: 2, scope: !5551)
!5597 = !DILocation(line: 438, column: 8, scope: !5551)
!5598 = !DILocation(line: 438, column: 20, scope: !5551)
!5599 = !DILocation(line: 441, column: 9, scope: !5551)
!5600 = !DILocation(line: 441, column: 2, scope: !5551)
!5601 = !DILocation(line: 442, column: 1, scope: !5551)
!5602 = distinct !DISubprogram(name: "extract_length", scope: !3566, file: !3566, line: 453, type: !5177, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5603 = !DILocalVariable(name: "conv", arg: 1, scope: !5602, file: !3566, line: 453, type: !4546)
!5604 = !DILocation(line: 453, column: 61, scope: !5602)
!5605 = !DILocalVariable(name: "sp", arg: 2, scope: !5602, file: !3566, line: 454, type: !256)
!5606 = !DILocation(line: 454, column: 19, scope: !5602)
!5607 = !DILocation(line: 456, column: 11, scope: !5602)
!5608 = !DILocation(line: 456, column: 10, scope: !5602)
!5609 = !DILocation(line: 456, column: 2, scope: !5602)
!5610 = !DILocation(line: 458, column: 8, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !3566, line: 458, column: 7)
!5612 = distinct !DILexicalBlock(scope: !5602, file: !3566, line: 456, column: 15)
!5613 = !DILocation(line: 458, column: 7, scope: !5611)
!5614 = !DILocation(line: 458, column: 13, scope: !5611)
!5615 = !DILocation(line: 458, column: 7, scope: !5612)
!5616 = !DILocation(line: 459, column: 4, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5611, file: !3566, line: 458, column: 21)
!5618 = !DILocation(line: 459, column: 10, scope: !5617)
!5619 = !DILocation(line: 459, column: 21, scope: !5617)
!5620 = !DILocation(line: 460, column: 4, scope: !5617)
!5621 = !DILocation(line: 461, column: 3, scope: !5617)
!5622 = !DILocation(line: 462, column: 4, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5611, file: !3566, line: 461, column: 10)
!5624 = !DILocation(line: 462, column: 10, scope: !5623)
!5625 = !DILocation(line: 462, column: 21, scope: !5623)
!5626 = !DILocation(line: 464, column: 3, scope: !5612)
!5627 = !DILocation(line: 466, column: 8, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5612, file: !3566, line: 466, column: 7)
!5629 = !DILocation(line: 466, column: 7, scope: !5628)
!5630 = !DILocation(line: 466, column: 13, scope: !5628)
!5631 = !DILocation(line: 466, column: 7, scope: !5612)
!5632 = !DILocation(line: 467, column: 4, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5628, file: !3566, line: 466, column: 21)
!5634 = !DILocation(line: 467, column: 10, scope: !5633)
!5635 = !DILocation(line: 467, column: 21, scope: !5633)
!5636 = !DILocation(line: 468, column: 4, scope: !5633)
!5637 = !DILocation(line: 469, column: 3, scope: !5633)
!5638 = !DILocation(line: 470, column: 4, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5628, file: !3566, line: 469, column: 10)
!5640 = !DILocation(line: 470, column: 10, scope: !5639)
!5641 = !DILocation(line: 470, column: 21, scope: !5639)
!5642 = !DILocation(line: 472, column: 3, scope: !5612)
!5643 = !DILocation(line: 474, column: 3, scope: !5612)
!5644 = !DILocation(line: 474, column: 9, scope: !5612)
!5645 = !DILocation(line: 474, column: 20, scope: !5612)
!5646 = !DILocation(line: 475, column: 3, scope: !5612)
!5647 = !DILocation(line: 476, column: 3, scope: !5612)
!5648 = !DILocation(line: 478, column: 3, scope: !5612)
!5649 = !DILocation(line: 478, column: 9, scope: !5612)
!5650 = !DILocation(line: 478, column: 20, scope: !5612)
!5651 = !DILocation(line: 479, column: 3, scope: !5612)
!5652 = !DILocation(line: 480, column: 3, scope: !5612)
!5653 = !DILocation(line: 482, column: 3, scope: !5612)
!5654 = !DILocation(line: 482, column: 9, scope: !5612)
!5655 = !DILocation(line: 482, column: 20, scope: !5612)
!5656 = !DILocation(line: 483, column: 3, scope: !5612)
!5657 = !DILocation(line: 484, column: 3, scope: !5612)
!5658 = !DILocation(line: 486, column: 3, scope: !5612)
!5659 = !DILocation(line: 486, column: 9, scope: !5612)
!5660 = !DILocation(line: 486, column: 20, scope: !5612)
!5661 = !DILocation(line: 487, column: 3, scope: !5612)
!5662 = !DILocation(line: 492, column: 3, scope: !5612)
!5663 = !DILocation(line: 492, column: 9, scope: !5612)
!5664 = !DILocation(line: 492, column: 21, scope: !5612)
!5665 = !DILocation(line: 493, column: 3, scope: !5612)
!5666 = !DILocation(line: 495, column: 3, scope: !5612)
!5667 = !DILocation(line: 495, column: 9, scope: !5612)
!5668 = !DILocation(line: 495, column: 20, scope: !5612)
!5669 = !DILocation(line: 496, column: 3, scope: !5612)
!5670 = !DILocation(line: 498, column: 9, scope: !5602)
!5671 = !DILocation(line: 498, column: 2, scope: !5602)
!5672 = distinct !DISubprogram(name: "extract_specifier", scope: !3566, file: !3566, line: 513, type: !5177, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5673 = !DILocalVariable(name: "conv", arg: 1, scope: !5672, file: !3566, line: 513, type: !4546)
!5674 = !DILocation(line: 513, column: 64, scope: !5672)
!5675 = !DILocalVariable(name: "sp", arg: 2, scope: !5672, file: !3566, line: 514, type: !256)
!5676 = !DILocation(line: 514, column: 22, scope: !5672)
!5677 = !DILocalVariable(name: "unsupported", scope: !5672, file: !3566, line: 516, type: !1035)
!5678 = !DILocation(line: 516, column: 7, scope: !5672)
!5679 = !DILocation(line: 518, column: 23, scope: !5672)
!5680 = !DILocation(line: 518, column: 20, scope: !5672)
!5681 = !DILocation(line: 518, column: 2, scope: !5672)
!5682 = !DILocation(line: 518, column: 8, scope: !5672)
!5683 = !DILocation(line: 518, column: 18, scope: !5672)
!5684 = !DILocation(line: 520, column: 10, scope: !5672)
!5685 = !DILocation(line: 520, column: 16, scope: !5672)
!5686 = !DILocation(line: 520, column: 2, scope: !5672)
!5687 = !DILocation(line: 522, column: 3, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5672, file: !3566, line: 520, column: 27)
!5689 = !DILocation(line: 522, column: 9, scope: !5688)
!5690 = !DILocation(line: 522, column: 23, scope: !5688)
!5691 = !DILocation(line: 523, column: 3, scope: !5688)
!5692 = !DILocation(line: 525, column: 3, scope: !5688)
!5693 = !DILocation(line: 525, column: 9, scope: !5688)
!5694 = !DILocation(line: 525, column: 23, scope: !5688)
!5695 = !DILabel(scope: !5688, name: "int_conv", file: !3566, line: 526)
!5696 = !DILocation(line: 526, column: 1, scope: !5688)
!5697 = !DILocation(line: 528, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5688, file: !3566, line: 528, column: 7)
!5699 = !DILocation(line: 528, column: 13, scope: !5698)
!5700 = !DILocation(line: 528, column: 24, scope: !5698)
!5701 = !DILocation(line: 528, column: 7, scope: !5688)
!5702 = !DILocation(line: 529, column: 4, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5698, file: !3566, line: 528, column: 43)
!5704 = !DILocation(line: 529, column: 10, scope: !5703)
!5705 = !DILocation(line: 529, column: 18, scope: !5703)
!5706 = !DILocation(line: 530, column: 3, scope: !5703)
!5707 = !DILocation(line: 535, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5688, file: !3566, line: 535, column: 7)
!5709 = !DILocation(line: 535, column: 13, scope: !5708)
!5710 = !DILocation(line: 535, column: 23, scope: !5708)
!5711 = !DILocation(line: 535, column: 7, scope: !5688)
!5712 = !DILocation(line: 536, column: 19, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5708, file: !3566, line: 535, column: 31)
!5714 = !DILocation(line: 536, column: 25, scope: !5713)
!5715 = !DILocation(line: 536, column: 36, scope: !5713)
!5716 = !DILocation(line: 536, column: 16, scope: !5713)
!5717 = !DILocation(line: 537, column: 3, scope: !5713)
!5718 = !DILocation(line: 567, column: 3, scope: !5688)
!5719 = !DILocation(line: 570, column: 3, scope: !5688)
!5720 = !DILocation(line: 570, column: 9, scope: !5688)
!5721 = !DILocation(line: 570, column: 23, scope: !5688)
!5722 = !DILocation(line: 574, column: 16, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3566, line: 573, column: 48)
!5724 = distinct !DILexicalBlock(scope: !5688, file: !3566, line: 573, column: 7)
!5725 = !DILocation(line: 575, column: 4, scope: !5723)
!5726 = !DILocation(line: 603, column: 3, scope: !5688)
!5727 = !DILocation(line: 603, column: 9, scope: !5688)
!5728 = !DILocation(line: 603, column: 23, scope: !5688)
!5729 = !DILocation(line: 605, column: 7, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5688, file: !3566, line: 605, column: 7)
!5731 = !DILocation(line: 605, column: 13, scope: !5730)
!5732 = !DILocation(line: 605, column: 24, scope: !5730)
!5733 = !DILocation(line: 605, column: 7, scope: !5688)
!5734 = !DILocation(line: 606, column: 16, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !3566, line: 605, column: 43)
!5736 = !DILocation(line: 607, column: 3, scope: !5735)
!5737 = !DILocation(line: 608, column: 3, scope: !5688)
!5738 = !DILocation(line: 612, column: 3, scope: !5688)
!5739 = !DILocation(line: 612, column: 9, scope: !5688)
!5740 = !DILocation(line: 612, column: 23, scope: !5688)
!5741 = !DILocation(line: 619, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5688, file: !3566, line: 619, column: 7)
!5743 = !DILocation(line: 619, column: 13, scope: !5742)
!5744 = !DILocation(line: 619, column: 24, scope: !5742)
!5745 = !DILocation(line: 619, column: 7, scope: !5688)
!5746 = !DILocation(line: 620, column: 16, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5742, file: !3566, line: 619, column: 40)
!5748 = !DILocation(line: 621, column: 3, scope: !5747)
!5749 = !DILocation(line: 622, column: 3, scope: !5688)
!5750 = !DILocation(line: 625, column: 3, scope: !5688)
!5751 = !DILocation(line: 625, column: 9, scope: !5688)
!5752 = !DILocation(line: 625, column: 17, scope: !5688)
!5753 = !DILocation(line: 626, column: 3, scope: !5688)
!5754 = !DILocation(line: 629, column: 23, scope: !5672)
!5755 = !DILocation(line: 629, column: 2, scope: !5672)
!5756 = !DILocation(line: 629, column: 8, scope: !5672)
!5757 = !DILocation(line: 629, column: 20, scope: !5672)
!5758 = !DILocation(line: 631, column: 9, scope: !5672)
!5759 = !DILocation(line: 631, column: 2, scope: !5672)
!5760 = distinct !DISubprogram(name: "extract_decimal", scope: !3566, file: !3566, line: 318, type: !5761, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5761 = !DISubroutineType(types: !5762)
!5762 = !{!217, !5763}
!5763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!5764 = !DILocalVariable(name: "str", arg: 1, scope: !5760, file: !3566, line: 318, type: !5763)
!5765 = !DILocation(line: 318, column: 44, scope: !5760)
!5766 = !DILocalVariable(name: "sp", scope: !5760, file: !3566, line: 320, type: !256)
!5767 = !DILocation(line: 320, column: 14, scope: !5760)
!5768 = !DILocation(line: 320, column: 20, scope: !5760)
!5769 = !DILocation(line: 320, column: 19, scope: !5760)
!5770 = !DILocalVariable(name: "val", scope: !5760, file: !3566, line: 321, type: !217)
!5771 = !DILocation(line: 321, column: 9, scope: !5760)
!5772 = !DILocation(line: 323, column: 2, scope: !5760)
!5773 = !DILocation(line: 323, column: 38, scope: !5760)
!5774 = !DILocation(line: 323, column: 37, scope: !5760)
!5775 = !DILocation(line: 323, column: 17, scope: !5760)
!5776 = !DILocation(line: 323, column: 9, scope: !5760)
!5777 = !DILocation(line: 324, column: 15, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5760, file: !3566, line: 323, column: 43)
!5779 = !DILocation(line: 324, column: 13, scope: !5778)
!5780 = !DILocation(line: 324, column: 24, scope: !5778)
!5781 = !DILocation(line: 324, column: 21, scope: !5778)
!5782 = !DILocation(line: 324, column: 19, scope: !5778)
!5783 = !DILocation(line: 324, column: 27, scope: !5778)
!5784 = !DILocation(line: 324, column: 7, scope: !5778)
!5785 = distinct !{!5785, !5772, !5786}
!5786 = !DILocation(line: 325, column: 2, scope: !5760)
!5787 = !DILocation(line: 326, column: 9, scope: !5760)
!5788 = !DILocation(line: 326, column: 3, scope: !5760)
!5789 = !DILocation(line: 326, column: 7, scope: !5760)
!5790 = !DILocation(line: 327, column: 9, scope: !5760)
!5791 = !DILocation(line: 327, column: 2, scope: !5760)
!5792 = distinct !DISubprogram(name: "isdigit", scope: !5419, file: !5419, line: 43, type: !274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3562, retainedNodes: !223)
!5793 = !DILocalVariable(name: "a", arg: 1, scope: !5792, file: !5419, line: 43, type: !103)
!5794 = !DILocation(line: 43, column: 31, scope: !5792)
!5795 = !DILocation(line: 45, column: 27, scope: !5792)
!5796 = !DILocation(line: 45, column: 29, scope: !5792)
!5797 = !DILocation(line: 45, column: 45, scope: !5792)
!5798 = !DILocation(line: 45, column: 2, scope: !5792)
!5799 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5800, file: !5800, line: 9, type: !253, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3599, retainedNodes: !223)
!5800 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!5801 = !DILocation(line: 11, column: 1, scope: !5799)
!5802 = !{i64 2147556535, i64 2147556578, i64 2147556618}
!5803 = !DILocation(line: 12, column: 1, scope: !5799)
!5804 = !{i64 2147560762, i64 2147560805, i64 2147560845}
!5805 = !DILocation(line: 13, column: 1, scope: !5799)
!5806 = !{i64 2147560971, i64 2147561014, i64 2147561054}
!5807 = !DILocation(line: 14, column: 1, scope: !5799)
!5808 = !{i64 2147561188, i64 2147561231, i64 2147561271}
!5809 = !DILocation(line: 15, column: 1, scope: !5799)
!5810 = !{i64 2147561357, i64 2147561400, i64 2147561440}
!5811 = !DILocation(line: 16, column: 1, scope: !5799)
!5812 = !{i64 2147561541, i64 2147561584, i64 2147561624}
!5813 = !DILocation(line: 17, column: 1, scope: !5799)
!5814 = !{i64 2147561720, i64 2147561763, i64 2147561803}
!5815 = !DILocation(line: 18, column: 1, scope: !5799)
!5816 = !{i64 2147561962, i64 2147562005, i64 2147562045}
!5817 = !DILocation(line: 19, column: 1, scope: !5799)
!5818 = !{i64 2147562148, i64 2147562191, i64 2147562231}
!5819 = !DILocation(line: 20, column: 1, scope: !5799)
!5820 = !{i64 2147562358, i64 2147562401, i64 2147562441}
!5821 = !DILocation(line: 21, column: 1, scope: !5799)
!5822 = !{i64 2147562561, i64 2147562604, i64 2147562644}
!5823 = !DILocation(line: 22, column: 1, scope: !5799)
!5824 = !{i64 2147562764, i64 2147562807, i64 2147562847}
!5825 = !DILocation(line: 23, column: 1, scope: !5799)
!5826 = !{i64 2147562963, i64 2147563006, i64 2147563046}
!5827 = !DILocation(line: 24, column: 1, scope: !5799)
!5828 = !{i64 2147563138, i64 2147563181, i64 2147563221}
!5829 = !DILocation(line: 25, column: 1, scope: !5799)
!5830 = !{i64 2147563346, i64 2147563389, i64 2147563429}
!5831 = !DILocation(line: 26, column: 1, scope: !5799)
!5832 = !{i64 2147563550, i64 2147563593, i64 2147563633}
!5833 = !DILocation(line: 27, column: 1, scope: !5799)
!5834 = !{i64 2147563752, i64 2147563795, i64 2147563835}
!5835 = !DILocation(line: 28, column: 1, scope: !5799)
!5836 = !{i64 2147563979, i64 2147564022, i64 2147564062}
!5837 = !DILocation(line: 29, column: 1, scope: !5799)
!5838 = !{i64 2147564194, i64 2147564237, i64 2147564277}
!5839 = !DILocation(line: 30, column: 1, scope: !5799)
!5840 = !{i64 2147564366, i64 2147564409, i64 2147564449}
!5841 = !DILocation(line: 31, column: 1, scope: !5799)
!5842 = !{i64 2147564568, i64 2147564611, i64 2147564651}
!5843 = !DILocation(line: 32, column: 1, scope: !5799)
!5844 = !{i64 2147564767, i64 2147564810, i64 2147564850}
!5845 = !DILocation(line: 33, column: 1, scope: !5799)
!5846 = !{i64 2147564942, i64 2147564985, i64 2147565025}
!5847 = !DILocation(line: 34, column: 1, scope: !5799)
!5848 = !{i64 2147565195, i64 2147565238, i64 2147565278}
!5849 = !DILocation(line: 35, column: 1, scope: !5799)
!5850 = !{i64 2147565448, i64 2147565491, i64 2147565531}
!5851 = !DILocation(line: 36, column: 1, scope: !5799)
!5852 = !{i64 2147565689, i64 2147565732, i64 2147565772}
!5853 = !DILocation(line: 37, column: 1, scope: !5799)
!5854 = !{i64 2147565924, i64 2147565967, i64 2147566007}
!5855 = !DILocation(line: 38, column: 1, scope: !5799)
!5856 = !{i64 2147566165, i64 2147566208, i64 2147566248}
!5857 = !DILocation(line: 39, column: 1, scope: !5799)
!5858 = !{i64 2147566406, i64 2147566449, i64 2147566489}
!5859 = !DILocation(line: 40, column: 1, scope: !5799)
!5860 = !{i64 2147566650, i64 2147566693, i64 2147566733}
!5861 = !DILocation(line: 41, column: 1, scope: !5799)
!5862 = !{i64 2147566891, i64 2147566934, i64 2147566974}
!5863 = !DILocation(line: 42, column: 1, scope: !5799)
!5864 = !{i64 2147567135, i64 2147567178, i64 2147567218}
!5865 = !DILocation(line: 43, column: 1, scope: !5799)
!5866 = !{i64 2147567376, i64 2147567419, i64 2147567459}
!5867 = !DILocation(line: 44, column: 1, scope: !5799)
!5868 = !{i64 2147567614, i64 2147567657, i64 2147567697}
!5869 = !DILocation(line: 45, column: 1, scope: !5799)
!5870 = !{i64 2147567867, i64 2147567910, i64 2147567950}
!5871 = !DILocation(line: 46, column: 1, scope: !5799)
!5872 = !{i64 2147568120, i64 2147568163, i64 2147568203}
!5873 = !DILocation(line: 47, column: 1, scope: !5799)
!5874 = !{i64 2147568370, i64 2147568413, i64 2147568453}
!5875 = !DILocation(line: 48, column: 1, scope: !5799)
!5876 = !{i64 2147568611, i64 2147568654, i64 2147568694}
!5877 = !DILocation(line: 49, column: 1, scope: !5799)
!5878 = !{i64 2147568855, i64 2147568898, i64 2147568938}
!5879 = !DILocation(line: 50, column: 1, scope: !5799)
!5880 = !{i64 2147569099, i64 2147569142, i64 2147569182}
!5881 = !DILocation(line: 51, column: 1, scope: !5799)
!5882 = !{i64 2147573401, i64 2147573444, i64 2147573484}
!5883 = !DILocation(line: 52, column: 1, scope: !5799)
!5884 = !{i64 2147573657, i64 2147573700, i64 2147573740}
!5885 = !DILocation(line: 53, column: 1, scope: !5799)
!5886 = !{i64 2147573907, i64 2147573950, i64 2147573990}
!5887 = !DILocation(line: 54, column: 1, scope: !5799)
!5888 = !{i64 2147574151, i64 2147574194, i64 2147574234}
!5889 = !DILocation(line: 55, column: 1, scope: !5799)
!5890 = !{i64 2147574398, i64 2147574441, i64 2147574481}
!5891 = !DILocation(line: 56, column: 1, scope: !5799)
!5892 = !{i64 2147574624, i64 2147574667, i64 2147574707}
!5893 = !DILocation(line: 57, column: 1, scope: !5799)
!5894 = !{i64 2147574850, i64 2147574893, i64 2147574933}
!5895 = !DILocation(line: 58, column: 1, scope: !5799)
!5896 = !{i64 2147575085, i64 2147575128, i64 2147575168}
!5897 = !DILocation(line: 59, column: 1, scope: !5799)
!5898 = !{i64 2147575344, i64 2147575387, i64 2147575427}
!5899 = !DILocation(line: 60, column: 1, scope: !5799)
!5900 = !{i64 2147575594, i64 2147575637, i64 2147575677}
!5901 = !DILocation(line: 61, column: 1, scope: !5799)
!5902 = !{i64 2147575823, i64 2147575866, i64 2147575906}
!5903 = !DILocation(line: 62, column: 1, scope: !5799)
!5904 = !{i64 2147576031, i64 2147576074, i64 2147576114}
!5905 = !DILocation(line: 63, column: 1, scope: !5799)
!5906 = !{i64 2147576242, i64 2147576285, i64 2147576325}
!5907 = !DILocation(line: 64, column: 1, scope: !5799)
!5908 = !{i64 2147576477, i64 2147576520, i64 2147576560}
!5909 = !DILocation(line: 65, column: 1, scope: !5799)
!5910 = !{i64 2147576706, i64 2147576749, i64 2147576789}
!5911 = !DILocation(line: 66, column: 1, scope: !5799)
!5912 = !{i64 2147576944, i64 2147576987, i64 2147577027}
!5913 = !DILocation(line: 67, column: 1, scope: !5799)
!5914 = !{i64 2147577176, i64 2147577219, i64 2147577259}
!5915 = !DILocation(line: 68, column: 1, scope: !5799)
!5916 = !{i64 2147577402, i64 2147577445, i64 2147577485}
!5917 = !DILocation(line: 69, column: 1, scope: !5799)
!5918 = !{i64 2147577619, i64 2147577662, i64 2147577702}
!5919 = !DILocation(line: 70, column: 1, scope: !5799)
!5920 = !{i64 2147577851, i64 2147577894, i64 2147577934}
!5921 = !DILocation(line: 71, column: 1, scope: !5799)
!5922 = !{i64 2147578077, i64 2147578120, i64 2147578160}
!5923 = !DILocation(line: 72, column: 1, scope: !5799)
!5924 = !{i64 2147578291, i64 2147578334, i64 2147578374}
!5925 = !DILocation(line: 73, column: 1, scope: !5799)
!5926 = !{i64 2147578511, i64 2147578554, i64 2147578594}
!5927 = !DILocation(line: 74, column: 1, scope: !5799)
!5928 = !{i64 2147578743, i64 2147578786, i64 2147578826}
!5929 = !DILocation(line: 75, column: 1, scope: !5799)
!5930 = !{i64 2147578951, i64 2147578994, i64 2147579034}
!5931 = !DILocation(line: 76, column: 1, scope: !5799)
!5932 = !{i64 2147579156, i64 2147579199, i64 2147579239}
!5933 = !DILocation(line: 77, column: 1, scope: !5799)
!5934 = !{i64 2147579373, i64 2147579416, i64 2147579456}
!5935 = !DILocation(line: 78, column: 1, scope: !5799)
!5936 = !{i64 2147579587, i64 2147579630, i64 2147579670}
!5937 = !DILocation(line: 79, column: 1, scope: !5799)
!5938 = !{i64 2147579813, i64 2147579856, i64 2147579896}
!5939 = !DILocation(line: 80, column: 1, scope: !5799)
!5940 = !{i64 2147580033, i64 2147580076, i64 2147580116}
!5941 = !DILocation(line: 81, column: 1, scope: !5799)
!5942 = !{i64 2147580238, i64 2147580281, i64 2147580321}
!5943 = !DILocation(line: 82, column: 1, scope: !5799)
!5944 = !{i64 2147580470, i64 2147580513, i64 2147580553}
!5945 = !DILocation(line: 83, column: 1, scope: !5799)
!5946 = !{i64 2147580705, i64 2147580748, i64 2147580788}
!5947 = !DILocation(line: 84, column: 1, scope: !5799)
!5948 = !{i64 2147580955, i64 2147580998, i64 2147581038}
!5949 = !DILocation(line: 85, column: 1, scope: !5799)
!5950 = !{i64 2147581205, i64 2147581248, i64 2147581288}
!5951 = !DILocation(line: 86, column: 1, scope: !5799)
!5952 = !{i64 2147581443, i64 2147581486, i64 2147581526}
!5953 = !DILocation(line: 87, column: 1, scope: !5799)
!5954 = !{i64 2147585715, i64 2147585758, i64 2147585798}
!5955 = !DILocation(line: 88, column: 1, scope: !5799)
!5956 = !{i64 2147585932, i64 2147585975, i64 2147586015}
!5957 = !DILocation(line: 89, column: 1, scope: !5799)
!5958 = !{i64 2147586095, i64 2147586138, i64 2147586178}
!5959 = !DILocation(line: 90, column: 1, scope: !5799)
!5960 = !{i64 2147586291, i64 2147586334, i64 2147586374}
!5961 = !DILocation(line: 91, column: 1, scope: !5799)
!5962 = !{i64 2147586493, i64 2147586536, i64 2147586576}
!5963 = !DILocation(line: 92, column: 1, scope: !5799)
!5964 = !{i64 2147586689, i64 2147586732, i64 2147586772}
!5965 = !DILocation(line: 93, column: 1, scope: !5799)
!5966 = !{i64 2147586906, i64 2147586949, i64 2147586989}
!5967 = !DILocation(line: 94, column: 1, scope: !5799)
!5968 = !{i64 2147587111, i64 2147587154, i64 2147587194}
!5969 = !DILocation(line: 95, column: 1, scope: !5799)
!5970 = !{i64 2147587295, i64 2147587338, i64 2147587378}
!5971 = !DILocation(line: 96, column: 1, scope: !5799)
!5972 = !{i64 2147587494, i64 2147587537, i64 2147587577}
!5973 = !DILocation(line: 97, column: 1, scope: !5799)
!5974 = !{i64 2147587714, i64 2147587757, i64 2147587797}
!5975 = !DILocation(line: 98, column: 1, scope: !5799)
!5976 = !{i64 2147587958, i64 2147588001, i64 2147588041}
!5977 = !DILocation(line: 99, column: 1, scope: !5799)
!5978 = !{i64 2147588190, i64 2147588233, i64 2147588273}
!5979 = !DILocation(line: 100, column: 1, scope: !5799)
!5980 = !{i64 2147588401, i64 2147588444, i64 2147588484}
!5981 = !DILocation(line: 101, column: 1, scope: !5799)
!5982 = !{i64 2147588567, i64 2147588610, i64 2147588650}
!5983 = !DILocation(line: 102, column: 1, scope: !5799)
!5984 = !{i64 2147588751, i64 2147588794, i64 2147588834}
!5985 = !DILocation(line: 103, column: 1, scope: !5799)
!5986 = !{i64 2147588941, i64 2147588984, i64 2147589024}
!5987 = !DILocation(line: 104, column: 1, scope: !5799)
!5988 = !{i64 2147589125, i64 2147589168, i64 2147589208}
!5989 = !DILocation(line: 105, column: 1, scope: !5799)
!5990 = !{i64 2147589339, i64 2147589382, i64 2147589422}
!5991 = !DILocation(line: 106, column: 1, scope: !5799)
!5992 = !{i64 2147589550, i64 2147589593, i64 2147589633}
!5993 = !DILocation(line: 107, column: 1, scope: !5799)
!5994 = !{i64 2147589773, i64 2147589816, i64 2147589856}
!5995 = !DILocation(line: 108, column: 1, scope: !5799)
!5996 = !{i64 2147589957, i64 2147590000, i64 2147590040}
!5997 = !DILocation(line: 109, column: 1, scope: !5799)
!5998 = !{i64 2147590123, i64 2147590166, i64 2147590206}
!5999 = !DILocation(line: 110, column: 1, scope: !5799)
!6000 = !{i64 2147590304, i64 2147590347, i64 2147590387}
!6001 = !DILocation(line: 111, column: 1, scope: !5799)
!6002 = !{i64 2147590509, i64 2147590552, i64 2147590592}
!6003 = !DILocation(line: 112, column: 1, scope: !5799)
!6004 = !{i64 2147590735, i64 2147590778, i64 2147590818}
!6005 = !DILocation(line: 113, column: 1, scope: !5799)
!6006 = !{i64 2147590952, i64 2147590995, i64 2147591035}
!6007 = !DILocation(line: 114, column: 1, scope: !5799)
!6008 = !{i64 2147591178, i64 2147591221, i64 2147591261}
!6009 = !DILocation(line: 115, column: 1, scope: !5799)
!6010 = !{i64 2147591374, i64 2147591417, i64 2147591457}
!6011 = !DILocation(line: 116, column: 1, scope: !5799)
!6012 = !{i64 2147591639, i64 2147591682, i64 2147591722}
!6013 = !DILocation(line: 117, column: 1, scope: !5799)
!6014 = !{i64 2147591853, i64 2147591896, i64 2147591936}
!6015 = !DILocation(line: 118, column: 1, scope: !5799)
!6016 = !{i64 2147592016, i64 2147592059, i64 2147592099}
!6017 = !DILocation(line: 119, column: 1, scope: !5799)
!6018 = !{i64 2147592203, i64 2147592246, i64 2147592286}
!6019 = !DILocation(line: 120, column: 1, scope: !5799)
!6020 = !{i64 2147592396, i64 2147592439, i64 2147592479}
!6021 = !DILocation(line: 121, column: 1, scope: !5799)
!6022 = !{i64 2147592578, i64 2147592621, i64 2147592661}
!6023 = !DILocation(line: 122, column: 1, scope: !5799)
!6024 = !{i64 2147592792, i64 2147592835, i64 2147592875}
!6025 = !DILocation(line: 123, column: 1, scope: !5799)
!6026 = !{i64 2147592991, i64 2147593034, i64 2147593074}
!6027 = !DILocation(line: 124, column: 1, scope: !5799)
!6028 = !{i64 2147593226, i64 2147593269, i64 2147593309}
!6029 = !DILocation(line: 125, column: 1, scope: !5799)
!6030 = !{i64 2147593476, i64 2147593519, i64 2147593559}
!6031 = !DILocation(line: 126, column: 1, scope: !5799)
!6032 = !{i64 2147593678, i64 2147593721, i64 2147593761}
!6033 = !DILocation(line: 127, column: 1, scope: !5799)
!6034 = !{i64 2147593901, i64 2147593944, i64 2147593984}
!6035 = !DILocation(line: 128, column: 1, scope: !5799)
!6036 = !{i64 2147594115, i64 2147594158, i64 2147594198}
!6037 = !DILocation(line: 129, column: 1, scope: !5799)
!6038 = !{i64 2147594359, i64 2147594402, i64 2147594442}
!6039 = !DILocation(line: 130, column: 1, scope: !5799)
!6040 = !{i64 2147594585, i64 2147594628, i64 2147594668}
!6041 = !DILocation(line: 131, column: 1, scope: !5799)
!6042 = !{i64 2147598905, i64 2147598948, i64 2147598988}
!6043 = !DILocation(line: 132, column: 1, scope: !5799)
!6044 = !{i64 2147599125, i64 2147599168, i64 2147599208}
!6045 = !DILocation(line: 133, column: 1, scope: !5799)
!6046 = !{i64 2147599357, i64 2147599400, i64 2147599440}
!6047 = !DILocation(line: 134, column: 1, scope: !5799)
!6048 = !{i64 2147599598, i64 2147599641, i64 2147599681}
!6049 = !DILocation(line: 135, column: 1, scope: !5799)
!6050 = !{i64 2147599839, i64 2147599882, i64 2147599922}
!6051 = !DILocation(line: 136, column: 1, scope: !5799)
!6052 = !{i64 2147600062, i64 2147600105, i64 2147600145}
!6053 = !DILocation(line: 137, column: 1, scope: !5799)
!6054 = !{i64 2147600279, i64 2147600322, i64 2147600362}
!6055 = !DILocation(line: 138, column: 1, scope: !5799)
!6056 = !{i64 2147600520, i64 2147600563, i64 2147600603}
!6057 = !DILocation(line: 139, column: 1, scope: !5799)
!6058 = !{i64 2147600749, i64 2147600792, i64 2147600832}
!6059 = !DILocation(line: 140, column: 1, scope: !5799)
!6060 = !{i64 2147600945, i64 2147600988, i64 2147601028}
!6061 = !DILocation(line: 141, column: 1, scope: !5799)
!6062 = !{i64 2147601157, i64 2147601200, i64 2147601240}
!6063 = !DILocation(line: 142, column: 1, scope: !5799)
!6064 = !{i64 2147601378, i64 2147601421, i64 2147601461}
!6065 = !DILocation(line: 143, column: 1, scope: !5799)
!6066 = !{i64 2147601592, i64 2147601635, i64 2147601675}
!6067 = !DILocation(line: 144, column: 1, scope: !5799)
!6068 = !{i64 2147601782, i64 2147601825, i64 2147601865}
!6069 = !DILocation(line: 145, column: 1, scope: !5799)
!6070 = !{i64 2147601981, i64 2147602024, i64 2147602064}
!6071 = !DILocation(line: 146, column: 1, scope: !5799)
!6072 = !{i64 2147602186, i64 2147602229, i64 2147602269}
!6073 = !DILocation(line: 147, column: 1, scope: !5799)
!6074 = !{i64 2147602406, i64 2147602449, i64 2147602489}
!6075 = !DILocation(line: 148, column: 1, scope: !5799)
!6076 = !{i64 2147602607, i64 2147602650, i64 2147602690}
!6077 = !DILocation(line: 149, column: 1, scope: !5799)
!6078 = !{i64 2147602806, i64 2147602849, i64 2147602889}
!6079 = !DILocation(line: 150, column: 1, scope: !5799)
!6080 = !{i64 2147602975, i64 2147603018, i64 2147603058}
!6081 = !DILocation(line: 151, column: 1, scope: !5799)
!6082 = !{i64 2147603159, i64 2147603202, i64 2147603242}
!6083 = !DILocation(line: 152, column: 1, scope: !5799)
!6084 = !{i64 2147603343, i64 2147603386, i64 2147603426}
!6085 = !DILocation(line: 153, column: 1, scope: !5799)
!6086 = !{i64 2147603530, i64 2147603573, i64 2147603613}
!6087 = !DILocation(line: 154, column: 1, scope: !5799)
!6088 = !{i64 2147603714, i64 2147603757, i64 2147603797}
!6089 = !DILocation(line: 155, column: 1, scope: !5799)
!6090 = !{i64 2147603952, i64 2147603995, i64 2147604035}
!6091 = !DILocation(line: 156, column: 1, scope: !5799)
!6092 = !{i64 2147604182, i64 2147604225, i64 2147604265}
!6093 = !DILocation(line: 157, column: 1, scope: !5799)
!6094 = !{i64 2147604393, i64 2147604436, i64 2147604476}
!6095 = !DILocation(line: 158, column: 1, scope: !5799)
!6096 = !{i64 2147604580, i64 2147604623, i64 2147604663}
!6097 = !DILocation(line: 159, column: 1, scope: !5799)
!6098 = !{i64 2147604776, i64 2147604819, i64 2147604859}
!6099 = !DILocation(line: 160, column: 1, scope: !5799)
!6100 = !{i64 2147604984, i64 2147605027, i64 2147605067}
!6101 = !DILocation(line: 161, column: 1, scope: !5799)
!6102 = !{i64 2147605196, i64 2147605239, i64 2147605279}
!6103 = !DILocation(line: 162, column: 1, scope: !5799)
!6104 = !{i64 2147605395, i64 2147605438, i64 2147605478}
!6105 = !DILocation(line: 163, column: 1, scope: !5799)
!6106 = !{i64 2147605633, i64 2147605676, i64 2147605716}
!6107 = !DILocation(line: 164, column: 1, scope: !5799)
!6108 = !{i64 2147605829, i64 2147605872, i64 2147605912}
!6109 = !DILocation(line: 165, column: 1, scope: !5799)
!6110 = !{i64 2147606031, i64 2147606074, i64 2147606114}
!6111 = !DILocation(line: 166, column: 1, scope: !5799)
!6112 = !{i64 2147606224, i64 2147606267, i64 2147606307}
!6113 = !DILocation(line: 167, column: 1, scope: !5799)
!6114 = !{i64 2147606458, i64 2147606501, i64 2147606541}
!6115 = !DILocation(line: 168, column: 1, scope: !5799)
!6116 = !{i64 2147606621, i64 2147606664, i64 2147606704}
!6117 = !DILocation(line: 169, column: 1, scope: !5799)
!6118 = !{i64 2147606860, i64 2147606903, i64 2147606943}
!6119 = !DILocation(line: 170, column: 1, scope: !5799)
!6120 = !{i64 2147607099, i64 2147607142, i64 2147607182}
!6121 = !DILocation(line: 171, column: 1, scope: !5799)
!6122 = !{i64 2147607335, i64 2147607378, i64 2147607418}
!6123 = !DILocation(line: 172, column: 1, scope: !5799)
!6124 = !{i64 2147607565, i64 2147607608, i64 2147607648}
!6125 = !DILocation(line: 173, column: 1, scope: !5799)
!6126 = !{i64 2147607752, i64 2147607795, i64 2147607835}
!6127 = !DILocation(line: 174, column: 1, scope: !5799)
!6128 = !{i64 2147612012, i64 2147612055, i64 2147612095}
!6129 = !DILocation(line: 175, column: 1, scope: !5799)
!6130 = !{i64 2147612283, i64 2147612326, i64 2147612366}
!6131 = !DILocation(line: 176, column: 1, scope: !5799)
!6132 = !{i64 2147612458, i64 2147612501, i64 2147612541}
!6133 = !DILocation(line: 177, column: 1, scope: !5799)
!6134 = !{i64 2147612692, i64 2147612735, i64 2147612775}
!6135 = !DILocation(line: 178, column: 1, scope: !5799)
!6136 = !{i64 2147612900, i64 2147612943, i64 2147612983}
!6137 = !DILocation(line: 179, column: 1, scope: !5799)
!6138 = !{i64 2147613118, i64 2147613161, i64 2147613201}
!6139 = !DILocation(line: 180, column: 1, scope: !5799)
!6140 = !{i64 2147613308, i64 2147613351, i64 2147613391}
!6141 = !DILocation(line: 181, column: 1, scope: !5799)
!6142 = !{i64 2147613504, i64 2147613547, i64 2147613587}
!6143 = !DILocation(line: 182, column: 1, scope: !5799)
!6144 = !{i64 2147613710, i64 2147613753, i64 2147613793}
!6145 = !DILocation(line: 183, column: 1, scope: !5799)
!6146 = !{i64 2147613915, i64 2147613958, i64 2147613998}
!6147 = !DILocation(line: 184, column: 1, scope: !5799)
!6148 = !{i64 2147614129, i64 2147614172, i64 2147614212}
!6149 = !DILocation(line: 185, column: 1, scope: !5799)
!6150 = !{i64 2147614355, i64 2147614398, i64 2147614438}
!6151 = !DILocation(line: 186, column: 1, scope: !5799)
!6152 = !{i64 2147614587, i64 2147614630, i64 2147614670}
!6153 = !DILocation(line: 187, column: 1, scope: !5799)
!6154 = !{i64 2147614768, i64 2147614811, i64 2147614851}
!6155 = !DILocation(line: 188, column: 1, scope: !5799)
!6156 = !{i64 2147614977, i64 2147615020, i64 2147615060}
!6157 = !DILocation(line: 189, column: 1, scope: !5799)
!6158 = !{i64 2147615155, i64 2147615198, i64 2147615238}
!6159 = !DILocation(line: 190, column: 1, scope: !5799)
!6160 = !{i64 2147615387, i64 2147615430, i64 2147615470}
!6161 = !DILocation(line: 191, column: 1, scope: !5799)
!6162 = !{i64 2147615589, i64 2147615632, i64 2147615672}
!6163 = !DILocation(line: 192, column: 1, scope: !5799)
!6164 = !{i64 2147615839, i64 2147615882, i64 2147615922}
!6165 = !DILocation(line: 193, column: 1, scope: !5799)
!6166 = !{i64 2147616077, i64 2147616120, i64 2147616160}
!6167 = !DILocation(line: 194, column: 1, scope: !5799)
!6168 = !{i64 2147616258, i64 2147616301, i64 2147616341}
!6169 = !DILocation(line: 195, column: 1, scope: !5799)
!6170 = !{i64 2147616448, i64 2147616491, i64 2147616531}
!6171 = !DILocation(line: 196, column: 1, scope: !5799)
!6172 = !{i64 2147616662, i64 2147616705, i64 2147616745}
!6173 = !DILocation(line: 197, column: 1, scope: !5799)
!6174 = !{i64 2147616870, i64 2147616913, i64 2147616953}
!6175 = !DILocation(line: 198, column: 1, scope: !5799)
!6176 = !{i64 2147617060, i64 2147617103, i64 2147617143}
!6177 = !DILocation(line: 199, column: 1, scope: !5799)
!6178 = !{i64 2147617274, i64 2147617317, i64 2147617357}
!6179 = !DILocation(line: 200, column: 1, scope: !5799)
!6180 = !{i64 2147617536, i64 2147617579, i64 2147617619}
!6181 = !DILocation(line: 201, column: 1, scope: !5799)
!6182 = !{i64 2147617747, i64 2147617790, i64 2147617830}
!6183 = !DILocation(line: 202, column: 1, scope: !5799)
!6184 = !{i64 2147617991, i64 2147618034, i64 2147618074}
!6185 = !DILocation(line: 203, column: 1, scope: !5799)
!6186 = !{i64 2147618202, i64 2147618245, i64 2147618285}
!6187 = !DILocation(line: 204, column: 1, scope: !5799)
!6188 = !{i64 2147618431, i64 2147618474, i64 2147618514}
!6189 = !DILocation(line: 205, column: 1, scope: !5799)
!6190 = !{i64 2147618636, i64 2147618679, i64 2147618719}
!6191 = !DILocation(line: 206, column: 1, scope: !5799)
!6192 = !{i64 2147618832, i64 2147618875, i64 2147618915}
!6193 = !DILocation(line: 207, column: 1, scope: !5799)
!6194 = !{i64 2147619055, i64 2147619098, i64 2147619138}
!6195 = !DILocation(line: 208, column: 1, scope: !5799)
!6196 = !{i64 2147619218, i64 2147619261, i64 2147619301}
!6197 = !DILocation(line: 209, column: 1, scope: !5799)
!6198 = !{i64 2147619423, i64 2147619466, i64 2147619506}
!6199 = !DILocation(line: 210, column: 1, scope: !5799)
!6200 = !{i64 2147619643, i64 2147619686, i64 2147619726}
!6201 = !DILocation(line: 211, column: 1, scope: !5799)
!6202 = !{i64 2147619857, i64 2147619900, i64 2147619940}
!6203 = !DILocation(line: 212, column: 1, scope: !5799)
!6204 = !{i64 2147620071, i64 2147620114, i64 2147620154}
!6205 = !DILocation(line: 213, column: 1, scope: !5799)
!6206 = !{i64 2147620282, i64 2147620325, i64 2147620365}
!6207 = !DILocation(line: 214, column: 1, scope: !5799)
!6208 = !{i64 2147620475, i64 2147620518, i64 2147620558}
!6209 = !DILocation(line: 215, column: 1, scope: !5799)
!6210 = !{i64 2147620674, i64 2147620717, i64 2147620757}
!6211 = !DILocation(line: 216, column: 1, scope: !5799)
!6212 = !{i64 2147620846, i64 2147620889, i64 2147620929}
!6213 = !DILocation(line: 217, column: 1, scope: !5799)
!6214 = !{i64 2147625100, i64 2147625143, i64 2147625183}
!6215 = !DILocation(line: 218, column: 1, scope: !5799)
!6216 = !{i64 2147625296, i64 2147625339, i64 2147625379}
!6217 = !DILocation(line: 219, column: 1, scope: !5799)
!6218 = !{i64 2147625523, i64 2147625566, i64 2147625606}
!6219 = !DILocation(line: 220, column: 1, scope: !5799)
!6220 = !{i64 2147625740, i64 2147625783, i64 2147625823}
!6221 = !DILocation(line: 221, column: 1, scope: !5799)
!6222 = !{i64 2147626032, i64 2147626075, i64 2147626115}
!6223 = !DILocation(line: 222, column: 1, scope: !5799)
!6224 = !{i64 2147626264, i64 2147626307, i64 2147626347}
!6225 = !DILocation(line: 223, column: 1, scope: !5799)
!6226 = !{i64 2147626481, i64 2147626524, i64 2147626564}
!6227 = !DILocation(line: 224, column: 1, scope: !5799)
!6228 = !{i64 2147626698, i64 2147626741, i64 2147626781}
!6229 = !DILocation(line: 225, column: 1, scope: !5799)
!6230 = !{i64 2147626908, i64 2147626951, i64 2147626991}
!6231 = !DILocation(line: 226, column: 1, scope: !5799)
!6232 = !{i64 2147627113, i64 2147627156, i64 2147627196}
!6233 = !DILocation(line: 227, column: 1, scope: !5799)
!6234 = !{i64 2147627345, i64 2147627388, i64 2147627428}
!6235 = !DILocation(line: 228, column: 1, scope: !5799)
!6236 = !{i64 2147627553, i64 2147627596, i64 2147627636}
!6237 = !DILocation(line: 229, column: 1, scope: !5799)
!6238 = !{i64 2147627743, i64 2147627786, i64 2147627826}
!6239 = !DILocation(line: 230, column: 1, scope: !5799)
!6240 = !{i64 2147627969, i64 2147628012, i64 2147628052}
!6241 = !DILocation(line: 231, column: 1, scope: !5799)
!6242 = !{i64 2147628158, i64 2147628201, i64 2147628241}
!6243 = !DILocation(line: 232, column: 1, scope: !5799)
!6244 = !{i64 2147628429, i64 2147628472, i64 2147628512}
!6245 = !DILocation(line: 233, column: 1, scope: !5799)
!6246 = !{i64 2147628649, i64 2147628692, i64 2147628732}
!6247 = !DILocation(line: 234, column: 1, scope: !5799)
!6248 = !{i64 2147628902, i64 2147628945, i64 2147628985}
!6249 = !DILocation(line: 235, column: 1, scope: !5799)
!6250 = !{i64 2147629104, i64 2147629147, i64 2147629187}
!6251 = !DILocation(line: 236, column: 1, scope: !5799)
!6252 = !{i64 2147629336, i64 2147629379, i64 2147629419}
!6253 = !DILocation(line: 237, column: 1, scope: !5799)
!6254 = !{i64 2147629547, i64 2147629590, i64 2147629630}
!6255 = !DILocation(line: 238, column: 1, scope: !5799)
!6256 = !{i64 2147629737, i64 2147629780, i64 2147629820}
!6257 = !DILocation(line: 239, column: 1, scope: !5799)
!6258 = !{i64 2147629951, i64 2147629994, i64 2147630034}
!6259 = !DILocation(line: 240, column: 1, scope: !5799)
!6260 = !{i64 2147630150, i64 2147630193, i64 2147630233}
!6261 = !DILocation(line: 241, column: 1, scope: !5799)
!6262 = !{i64 2147630337, i64 2147630380, i64 2147630420}
!6263 = !DILocation(line: 242, column: 1, scope: !5799)
!6264 = !{i64 2147630545, i64 2147630588, i64 2147630628}
!6265 = !DILocation(line: 243, column: 1, scope: !5799)
!6266 = !{i64 2147630774, i64 2147630817, i64 2147630857}
!6267 = !DILocation(line: 244, column: 1, scope: !5799)
!6268 = !{i64 2147630976, i64 2147631019, i64 2147631059}
!6269 = !DILocation(line: 245, column: 1, scope: !5799)
!6270 = !{i64 2147631175, i64 2147631218, i64 2147631258}
!6271 = !DILocation(line: 246, column: 1, scope: !5799)
!6272 = !{i64 2147631392, i64 2147631435, i64 2147631475}
!6273 = !DILocation(line: 247, column: 1, scope: !5799)
!6274 = !{i64 2147631594, i64 2147631637, i64 2147631677}
!6275 = !DILocation(line: 248, column: 1, scope: !5799)
!6276 = !{i64 2147631820, i64 2147631863, i64 2147631903}
!6277 = !DILocation(line: 250, column: 1, scope: !5799)
!6278 = distinct !DISubprogram(name: "soc_port_pinmux_set", scope: !6279, file: !6279, line: 16, type: !6280, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3601, retainedNodes: !223)
!6279 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!103, !6282, !173, !173}
!6282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6283, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !1877, line: 367, baseType: !6284)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1877, line: 351, size: 1024, elements: !6285)
!6285 = !{!6286, !6296, !6306, !6316, !6326, !6336, !6346, !6356, !6366, !6377, !6387, !6405, !6406, !6418, !6432}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !6284, file: !1877, line: 352, baseType: !6287, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6288)
!6288 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !1877, line: 48, baseType: !6289)
!6289 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 43, size: 32, elements: !6290)
!6290 = !{!6291, !6295}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6289, file: !1877, line: 46, baseType: !6292, size: 32)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6289, file: !1877, line: 44, size: 32, elements: !6293)
!6293 = !{!6294}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !6292, file: !1877, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6289, file: !1877, line: 47, baseType: !173, size: 32)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !6284, file: !1877, line: 353, baseType: !6297, size: 32, offset: 32)
!6297 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6298)
!6298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !1877, line: 66, baseType: !6299)
!6299 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 61, size: 32, elements: !6300)
!6300 = !{!6301, !6305}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6299, file: !1877, line: 64, baseType: !6302, size: 32)
!6302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6299, file: !1877, line: 62, size: 32, elements: !6303)
!6303 = !{!6304}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !6302, file: !1877, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6299, file: !1877, line: 65, baseType: !173, size: 32)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !6284, file: !1877, line: 354, baseType: !6307, size: 32, offset: 64)
!6307 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6308)
!6308 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !1877, line: 84, baseType: !6309)
!6309 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 79, size: 32, elements: !6310)
!6310 = !{!6311, !6315}
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6309, file: !1877, line: 82, baseType: !6312, size: 32)
!6312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6309, file: !1877, line: 80, size: 32, elements: !6313)
!6313 = !{!6314}
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !6312, file: !1877, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6309, file: !1877, line: 83, baseType: !173, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6284, file: !1877, line: 355, baseType: !6317, size: 32, offset: 96)
!6317 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6318)
!6318 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !1877, line: 102, baseType: !6319)
!6319 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 97, size: 32, elements: !6320)
!6320 = !{!6321, !6325}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6319, file: !1877, line: 100, baseType: !6322, size: 32)
!6322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6319, file: !1877, line: 98, size: 32, elements: !6323)
!6323 = !{!6324}
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6322, file: !1877, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6319, file: !1877, line: 101, baseType: !173, size: 32)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6284, file: !1877, line: 356, baseType: !6327, size: 32, offset: 128)
!6327 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6328)
!6328 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !1877, line: 120, baseType: !6329)
!6329 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 115, size: 32, elements: !6330)
!6330 = !{!6331, !6335}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6329, file: !1877, line: 118, baseType: !6332, size: 32)
!6332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6329, file: !1877, line: 116, size: 32, elements: !6333)
!6333 = !{!6334}
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6332, file: !1877, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6329, file: !1877, line: 119, baseType: !173, size: 32)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6284, file: !1877, line: 357, baseType: !6337, size: 32, offset: 160)
!6337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6338)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !1877, line: 138, baseType: !6339)
!6339 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 133, size: 32, elements: !6340)
!6340 = !{!6341, !6345}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6339, file: !1877, line: 136, baseType: !6342, size: 32)
!6342 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6339, file: !1877, line: 134, size: 32, elements: !6343)
!6343 = !{!6344}
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6342, file: !1877, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6339, file: !1877, line: 137, baseType: !173, size: 32)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6284, file: !1877, line: 358, baseType: !6347, size: 32, offset: 192)
!6347 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6348)
!6348 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !1877, line: 156, baseType: !6349)
!6349 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 151, size: 32, elements: !6350)
!6350 = !{!6351, !6355}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6349, file: !1877, line: 154, baseType: !6352, size: 32)
!6352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6349, file: !1877, line: 152, size: 32, elements: !6353)
!6353 = !{!6354}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6352, file: !1877, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6349, file: !1877, line: 155, baseType: !173, size: 32)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6284, file: !1877, line: 359, baseType: !6357, size: 32, offset: 224)
!6357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6358)
!6358 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !1877, line: 174, baseType: !6359)
!6359 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 169, size: 32, elements: !6360)
!6360 = !{!6361, !6365}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6359, file: !1877, line: 172, baseType: !6362, size: 32)
!6362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6359, file: !1877, line: 170, size: 32, elements: !6363)
!6363 = !{!6364}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6362, file: !1877, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6359, file: !1877, line: 173, baseType: !173, size: 32)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6284, file: !1877, line: 360, baseType: !6367, size: 32, offset: 256)
!6367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6368)
!6368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6369)
!6369 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !1877, line: 192, baseType: !6370)
!6370 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 187, size: 32, elements: !6371)
!6371 = !{!6372, !6376}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6370, file: !1877, line: 190, baseType: !6373, size: 32)
!6373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6370, file: !1877, line: 188, size: 32, elements: !6374)
!6374 = !{!6375}
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6373, file: !1877, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6370, file: !1877, line: 191, baseType: !173, size: 32)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !6284, file: !1877, line: 361, baseType: !6378, size: 32, offset: 288)
!6378 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6379)
!6379 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !1877, line: 210, baseType: !6380)
!6380 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 205, size: 32, elements: !6381)
!6381 = !{!6382, !6386}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6380, file: !1877, line: 208, baseType: !6383, size: 32)
!6383 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6380, file: !1877, line: 206, size: 32, elements: !6384)
!6384 = !{!6385}
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !6383, file: !1877, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6380, file: !1877, line: 209, baseType: !173, size: 32)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !6284, file: !1877, line: 362, baseType: !6388, size: 32, offset: 320)
!6388 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6389)
!6389 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !1877, line: 239, baseType: !6390)
!6390 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 223, size: 32, elements: !6391)
!6391 = !{!6392, !6404}
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6390, file: !1877, line: 237, baseType: !6393, size: 32)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6390, file: !1877, line: 224, size: 32, elements: !6394)
!6394 = !{!6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !6393, file: !1877, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6393, file: !1877, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6393, file: !1877, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6393, file: !1877, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6393, file: !1877, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6393, file: !1877, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !6393, file: !1877, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !6393, file: !1877, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !6393, file: !1877, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6390, file: !1877, line: 238, baseType: !173, size: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !6284, file: !1877, line: 363, baseType: !661, size: 32, offset: 352)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6284, file: !1877, line: 364, baseType: !6407, size: 128, offset: 384)
!6407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6408, size: 128, elements: !959)
!6408 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6409)
!6409 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !1877, line: 275, baseType: !6410)
!6410 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 269, size: 8, elements: !6411)
!6411 = !{!6412, !6417}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6410, file: !1877, line: 273, baseType: !6413, size: 8)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6410, file: !1877, line: 270, size: 8, elements: !6414)
!6414 = !{!6415, !6416}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !6413, file: !1877, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !6413, file: !1877, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6410, file: !1877, line: 274, baseType: !156, size: 8)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !6284, file: !1877, line: 365, baseType: !6419, size: 256, offset: 512)
!6419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6420, size: 256, elements: !2026)
!6420 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6421)
!6421 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !1877, line: 333, baseType: !6422)
!6422 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1877, line: 323, size: 8, elements: !6423)
!6423 = !{!6424, !6431}
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6422, file: !1877, line: 331, baseType: !6425, size: 8)
!6425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6422, file: !1877, line: 324, size: 8, elements: !6426)
!6426 = !{!6427, !6428, !6429, !6430}
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6425, file: !1877, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6425, file: !1877, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6425, file: !1877, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6425, file: !1877, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6422, file: !1877, line: 332, baseType: !156, size: 8)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !6284, file: !1877, line: 366, baseType: !2028, size: 256, offset: 768)
!6433 = !DILocalVariable(name: "pg", arg: 1, scope: !6278, file: !6279, line: 16, type: !6282)
!6434 = !DILocation(line: 16, column: 36, scope: !6278)
!6435 = !DILocalVariable(name: "pin", arg: 2, scope: !6278, file: !6279, line: 16, type: !173)
!6436 = !DILocation(line: 16, column: 49, scope: !6278)
!6437 = !DILocalVariable(name: "func", arg: 3, scope: !6278, file: !6279, line: 16, type: !173)
!6438 = !DILocation(line: 16, column: 63, scope: !6278)
!6439 = !DILocalVariable(name: "is_odd", scope: !6278, file: !6279, line: 18, type: !1035)
!6440 = !DILocation(line: 18, column: 7, scope: !6278)
!6441 = !DILocation(line: 18, column: 16, scope: !6278)
!6442 = !DILocation(line: 18, column: 20, scope: !6278)
!6443 = !DILocalVariable(name: "idx", scope: !6278, file: !6279, line: 19, type: !103)
!6444 = !DILocation(line: 19, column: 6, scope: !6278)
!6445 = !DILocation(line: 19, column: 12, scope: !6278)
!6446 = !DILocation(line: 19, column: 16, scope: !6278)
!6447 = !DILocation(line: 25, column: 6, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6278, file: !6279, line: 25, column: 6)
!6449 = !DILocation(line: 25, column: 6, scope: !6278)
!6450 = !DILocation(line: 26, column: 29, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6448, file: !6279, line: 25, column: 14)
!6452 = !DILocation(line: 26, column: 3, scope: !6451)
!6453 = !DILocation(line: 26, column: 7, scope: !6451)
!6454 = !DILocation(line: 26, column: 12, scope: !6451)
!6455 = !DILocation(line: 26, column: 17, scope: !6451)
!6456 = !DILocation(line: 26, column: 21, scope: !6451)
!6457 = !DILocation(line: 26, column: 27, scope: !6451)
!6458 = !DILocation(line: 27, column: 2, scope: !6451)
!6459 = !DILocation(line: 28, column: 29, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6448, file: !6279, line: 27, column: 9)
!6461 = !DILocation(line: 28, column: 3, scope: !6460)
!6462 = !DILocation(line: 28, column: 7, scope: !6460)
!6463 = !DILocation(line: 28, column: 12, scope: !6460)
!6464 = !DILocation(line: 28, column: 17, scope: !6460)
!6465 = !DILocation(line: 28, column: 21, scope: !6460)
!6466 = !DILocation(line: 28, column: 27, scope: !6460)
!6467 = !DILocation(line: 30, column: 2, scope: !6278)
!6468 = !DILocation(line: 30, column: 6, scope: !6278)
!6469 = !DILocation(line: 30, column: 13, scope: !6278)
!6470 = !DILocation(line: 30, column: 18, scope: !6278)
!6471 = !DILocation(line: 30, column: 22, scope: !6278)
!6472 = !DILocation(line: 30, column: 29, scope: !6278)
!6473 = !DILocation(line: 32, column: 2, scope: !6278)
!6474 = distinct !DISubprogram(name: "soc_port_configure", scope: !6279, file: !6279, line: 35, type: !6475, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3601, retainedNodes: !223)
!6475 = !DISubroutineType(types: !6476)
!6476 = !{null, !6477}
!6477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6478, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6479)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6480, line: 75, size: 96, elements: !6481)
!6480 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/samd21/../common/soc_port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6481 = !{!6482, !6483, !6484}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6479, file: !6480, line: 76, baseType: !6282, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !6479, file: !6480, line: 77, baseType: !173, size: 32, offset: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6479, file: !6480, line: 78, baseType: !173, size: 32, offset: 64)
!6485 = !DILocalVariable(name: "pin", arg: 1, scope: !6474, file: !6279, line: 35, type: !6477)
!6486 = !DILocation(line: 35, column: 52, scope: !6474)
!6487 = !DILocalVariable(name: "pg", scope: !6474, file: !6279, line: 37, type: !6282)
!6488 = !DILocation(line: 37, column: 13, scope: !6474)
!6489 = !DILocation(line: 37, column: 18, scope: !6474)
!6490 = !DILocation(line: 37, column: 23, scope: !6474)
!6491 = !DILocalVariable(name: "flags", scope: !6474, file: !6279, line: 38, type: !173)
!6492 = !DILocation(line: 38, column: 11, scope: !6474)
!6493 = !DILocation(line: 38, column: 19, scope: !6474)
!6494 = !DILocation(line: 38, column: 24, scope: !6474)
!6495 = !DILocalVariable(name: "func", scope: !6474, file: !6279, line: 39, type: !173)
!6496 = !DILocation(line: 39, column: 11, scope: !6474)
!6497 = !DILocation(line: 39, column: 19, scope: !6474)
!6498 = !DILocation(line: 39, column: 24, scope: !6474)
!6499 = !DILocation(line: 39, column: 30, scope: !6474)
!6500 = !DILocation(line: 39, column: 52, scope: !6474)
!6501 = !DILocalVariable(name: "pincfg", scope: !6474, file: !6279, line: 40, type: !6421)
!6502 = !DILocation(line: 40, column: 19, scope: !6474)
!6503 = !DILocation(line: 43, column: 2, scope: !6474)
!6504 = !DILocation(line: 43, column: 6, scope: !6474)
!6505 = !DILocation(line: 43, column: 13, scope: !6474)
!6506 = !DILocation(line: 43, column: 18, scope: !6474)
!6507 = !DILocation(line: 43, column: 27, scope: !6474)
!6508 = !DILocation(line: 44, column: 25, scope: !6474)
!6509 = !DILocation(line: 44, column: 30, scope: !6474)
!6510 = !DILocation(line: 44, column: 22, scope: !6474)
!6511 = !DILocation(line: 44, column: 2, scope: !6474)
!6512 = !DILocation(line: 44, column: 6, scope: !6474)
!6513 = !DILocation(line: 44, column: 13, scope: !6474)
!6514 = !DILocation(line: 44, column: 17, scope: !6474)
!6515 = !DILocation(line: 45, column: 25, scope: !6474)
!6516 = !DILocation(line: 45, column: 30, scope: !6474)
!6517 = !DILocation(line: 45, column: 22, scope: !6474)
!6518 = !DILocation(line: 45, column: 2, scope: !6474)
!6519 = !DILocation(line: 45, column: 6, scope: !6474)
!6520 = !DILocation(line: 45, column: 13, scope: !6474)
!6521 = !DILocation(line: 45, column: 17, scope: !6474)
!6522 = !DILocation(line: 47, column: 6, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6474, file: !6279, line: 47, column: 6)
!6524 = !DILocation(line: 47, column: 12, scope: !6523)
!6525 = !DILocation(line: 47, column: 6, scope: !6474)
!6526 = !DILocation(line: 48, column: 23, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6523, file: !6279, line: 47, column: 38)
!6528 = !DILocation(line: 48, column: 27, scope: !6527)
!6529 = !DILocation(line: 48, column: 32, scope: !6527)
!6530 = !DILocation(line: 48, column: 39, scope: !6527)
!6531 = !DILocation(line: 48, column: 3, scope: !6527)
!6532 = !DILocation(line: 49, column: 3, scope: !6527)
!6533 = !DILocation(line: 52, column: 6, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6474, file: !6279, line: 52, column: 6)
!6535 = !DILocation(line: 52, column: 12, scope: !6534)
!6536 = !DILocation(line: 52, column: 6, scope: !6474)
!6537 = !DILocation(line: 53, column: 7, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !6279, line: 53, column: 7)
!6539 = distinct !DILexicalBlock(scope: !6534, file: !6279, line: 52, column: 53)
!6540 = !DILocation(line: 53, column: 13, scope: !6538)
!6541 = !DILocation(line: 53, column: 7, scope: !6539)
!6542 = !DILocation(line: 54, column: 27, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6538, file: !6279, line: 53, column: 32)
!6544 = !DILocation(line: 54, column: 32, scope: !6543)
!6545 = !DILocation(line: 54, column: 24, scope: !6543)
!6546 = !DILocation(line: 54, column: 4, scope: !6543)
!6547 = !DILocation(line: 54, column: 8, scope: !6543)
!6548 = !DILocation(line: 54, column: 15, scope: !6543)
!6549 = !DILocation(line: 54, column: 19, scope: !6543)
!6550 = !DILocation(line: 55, column: 3, scope: !6543)
!6551 = !DILocation(line: 57, column: 10, scope: !6539)
!6552 = !DILocation(line: 57, column: 14, scope: !6539)
!6553 = !DILocation(line: 57, column: 21, scope: !6539)
!6554 = !DILocation(line: 58, column: 2, scope: !6539)
!6555 = !DILocation(line: 60, column: 6, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6474, file: !6279, line: 60, column: 6)
!6557 = !DILocation(line: 60, column: 12, scope: !6556)
!6558 = !DILocation(line: 60, column: 6, scope: !6474)
!6559 = !DILocation(line: 61, column: 10, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6556, file: !6279, line: 60, column: 37)
!6561 = !DILocation(line: 61, column: 14, scope: !6560)
!6562 = !DILocation(line: 61, column: 19, scope: !6560)
!6563 = !DILocation(line: 62, column: 2, scope: !6560)
!6564 = !DILocation(line: 64, column: 6, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6474, file: !6279, line: 64, column: 6)
!6566 = !DILocation(line: 64, column: 12, scope: !6565)
!6567 = !DILocation(line: 64, column: 6, scope: !6474)
!6568 = !DILocation(line: 65, column: 26, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !6279, line: 64, column: 38)
!6570 = !DILocation(line: 65, column: 31, scope: !6569)
!6571 = !DILocation(line: 65, column: 23, scope: !6569)
!6572 = !DILocation(line: 65, column: 3, scope: !6569)
!6573 = !DILocation(line: 65, column: 7, scope: !6569)
!6574 = !DILocation(line: 65, column: 14, scope: !6569)
!6575 = !DILocation(line: 65, column: 18, scope: !6569)
!6576 = !DILocation(line: 66, column: 2, scope: !6569)
!6577 = !DILocation(line: 68, column: 6, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6474, file: !6279, line: 68, column: 6)
!6579 = !DILocation(line: 68, column: 12, scope: !6578)
!6580 = !DILocation(line: 68, column: 6, scope: !6474)
!6581 = !DILocation(line: 69, column: 10, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !6279, line: 68, column: 42)
!6583 = !DILocation(line: 69, column: 14, scope: !6582)
!6584 = !DILocation(line: 69, column: 21, scope: !6582)
!6585 = !DILocation(line: 70, column: 2, scope: !6582)
!6586 = !DILocation(line: 72, column: 2, scope: !6474)
!6587 = !DILocation(line: 72, column: 6, scope: !6474)
!6588 = !DILocation(line: 72, column: 13, scope: !6474)
!6589 = !DILocation(line: 72, column: 18, scope: !6474)
!6590 = !DILocation(line: 72, column: 27, scope: !6474)
!6591 = !DILocation(line: 73, column: 1, scope: !6474)
!6592 = distinct !DISubprogram(name: "soc_port_list_configure", scope: !6279, file: !6279, line: 75, type: !6593, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3601, retainedNodes: !223)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{null, !6477, !32}
!6595 = !DILocalVariable(name: "pins", arg: 1, scope: !6592, file: !6279, line: 75, type: !6477)
!6596 = !DILocation(line: 75, column: 56, scope: !6592)
!6597 = !DILocalVariable(name: "size", arg: 2, scope: !6592, file: !6279, line: 76, type: !32)
!6598 = !DILocation(line: 76, column: 22, scope: !6592)
!6599 = !DILocalVariable(name: "i", scope: !6600, file: !6279, line: 78, type: !103)
!6600 = distinct !DILexicalBlock(scope: !6592, file: !6279, line: 78, column: 2)
!6601 = !DILocation(line: 78, column: 11, scope: !6600)
!6602 = !DILocation(line: 78, column: 7, scope: !6600)
!6603 = !DILocation(line: 78, column: 18, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6600, file: !6279, line: 78, column: 2)
!6605 = !DILocation(line: 78, column: 22, scope: !6604)
!6606 = !DILocation(line: 78, column: 20, scope: !6604)
!6607 = !DILocation(line: 78, column: 2, scope: !6600)
!6608 = !DILocation(line: 79, column: 23, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6604, file: !6279, line: 78, column: 33)
!6610 = !DILocation(line: 79, column: 28, scope: !6609)
!6611 = !DILocation(line: 79, column: 3, scope: !6609)
!6612 = !DILocation(line: 80, column: 2, scope: !6609)
!6613 = !DILocation(line: 78, column: 29, scope: !6604)
!6614 = !DILocation(line: 78, column: 2, scope: !6604)
!6615 = distinct !{!6615, !6607, !6616}
!6616 = !DILocation(line: 80, column: 2, scope: !6600)
!6617 = !DILocation(line: 81, column: 1, scope: !6592)
!6618 = distinct !DISubprogram(name: "atmel_samd_init", scope: !1012, file: !1012, line: 175, type: !1019, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6619 = !DILocalVariable(name: "arg", arg: 1, scope: !6618, file: !1012, line: 175, type: !1021)
!6620 = !DILocation(line: 175, column: 49, scope: !6618)
!6621 = !DILocalVariable(name: "key", scope: !6618, file: !1012, line: 177, type: !173)
!6622 = !DILocation(line: 177, column: 11, scope: !6618)
!6623 = !DILocation(line: 179, column: 2, scope: !6618)
!6624 = !DILocalVariable(name: "key", scope: !6625, file: !6626, line: 44, type: !32)
!6625 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6626 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6627 = !DISubroutineType(types: !6628)
!6628 = !{!32}
!6629 = !DILocation(line: 44, column: 15, scope: !6625, inlinedAt: !6630)
!6630 = distinct !DILocation(line: 181, column: 8, scope: !6618)
!6631 = !DILocation(line: 47, column: 2, scope: !6625, inlinedAt: !6630)
!6632 = !{i64 1148579}
!6633 = !DILocation(line: 76, column: 9, scope: !6625, inlinedAt: !6630)
!6634 = !DILocation(line: 181, column: 6, scope: !6618)
!6635 = !DILocation(line: 183, column: 2, scope: !6618)
!6636 = !DILocation(line: 184, column: 2, scope: !6618)
!6637 = !DILocation(line: 185, column: 2, scope: !6618)
!6638 = !DILocation(line: 186, column: 2, scope: !6618)
!6639 = !DILocation(line: 187, column: 2, scope: !6618)
!6640 = !DILocation(line: 188, column: 2, scope: !6618)
!6641 = !DILocation(line: 189, column: 2, scope: !6618)
!6642 = !DILocation(line: 190, column: 2, scope: !6618)
!6643 = !DILocation(line: 197, column: 2, scope: !6618)
!6644 = !DILocalVariable(name: "key", arg: 1, scope: !6645, file: !6626, line: 84, type: !32)
!6645 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{null, !32}
!6648 = !DILocation(line: 84, column: 56, scope: !6645, inlinedAt: !6649)
!6649 = distinct !DILocation(line: 197, column: 2, scope: !6618)
!6650 = !DILocation(line: 87, column: 6, scope: !6651, inlinedAt: !6649)
!6651 = distinct !DILexicalBlock(scope: !6645, file: !6626, line: 87, column: 6)
!6652 = !DILocation(line: 87, column: 10, scope: !6651, inlinedAt: !6649)
!6653 = !DILocation(line: 87, column: 6, scope: !6645, inlinedAt: !6649)
!6654 = !DILocation(line: 88, column: 3, scope: !6655, inlinedAt: !6649)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !6626, line: 87, column: 17)
!6656 = !DILocation(line: 90, column: 2, scope: !6645, inlinedAt: !6649)
!6657 = !{i64 1149443}
!6658 = !DILocation(line: 110, column: 1, scope: !6645, inlinedAt: !6649)
!6659 = !DILocation(line: 199, column: 2, scope: !6618)
!6660 = distinct !DISubprogram(name: "flash_waitstates_init", scope: !1012, file: !1012, line: 19, type: !253, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6661 = !DILocation(line: 22, column: 25, scope: !6660)
!6662 = !DILocation(line: 23, column: 1, scope: !6660)
!6663 = distinct !DISubprogram(name: "osc8m_init", scope: !1012, file: !1012, line: 133, type: !253, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6664 = !DILocation(line: 136, column: 27, scope: !6663)
!6665 = !DILocation(line: 137, column: 30, scope: !6663)
!6666 = !DILocation(line: 138, column: 1, scope: !6663)
!6667 = distinct !DISubprogram(name: "osc32k_init", scope: !1012, file: !1012, line: 56, type: !253, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6668 = !DILocalVariable(name: "fuse", scope: !6667, file: !1012, line: 59, type: !173)
!6669 = !DILocation(line: 59, column: 11, scope: !6667)
!6670 = !DILocation(line: 59, column: 18, scope: !6667)
!6671 = !DILocalVariable(name: "calib", scope: !6667, file: !1012, line: 60, type: !173)
!6672 = !DILocation(line: 60, column: 11, scope: !6667)
!6673 = !DILocation(line: 60, column: 20, scope: !6667)
!6674 = !DILocation(line: 60, column: 25, scope: !6667)
!6675 = !DILocation(line: 60, column: 49, scope: !6667)
!6676 = !DILocation(line: 66, column: 24, scope: !6667)
!6677 = !DILocation(line: 66, column: 52, scope: !6667)
!6678 = !DILocation(line: 67, column: 39, scope: !6667)
!6679 = !DILocation(line: 68, column: 31, scope: !6667)
!6680 = !DILocation(line: 66, column: 22, scope: !6667)
!6681 = !DILocation(line: 71, column: 2, scope: !6667)
!6682 = !DILocation(line: 71, column: 30, scope: !6667)
!6683 = !DILocation(line: 71, column: 9, scope: !6667)
!6684 = distinct !{!6684, !6681, !6685}
!6685 = !DILocation(line: 72, column: 2, scope: !6667)
!6686 = !DILocation(line: 73, column: 1, scope: !6667)
!6687 = distinct !DISubprogram(name: "xosc_init", scope: !1012, file: !1012, line: 30, type: !253, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6688 = !DILocation(line: 35, column: 1, scope: !6687)
!6689 = distinct !DISubprogram(name: "xosc32k_init", scope: !1012, file: !1012, line: 43, type: !253, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6690 = !DILocation(line: 46, column: 23, scope: !6689)
!6691 = !DILocation(line: 49, column: 30, scope: !6689)
!6692 = !DILocation(line: 51, column: 2, scope: !6689)
!6693 = !DILocation(line: 51, column: 30, scope: !6689)
!6694 = !DILocation(line: 51, column: 9, scope: !6689)
!6695 = distinct !{!6695, !6692, !6696}
!6696 = !DILocation(line: 52, column: 2, scope: !6689)
!6697 = !DILocation(line: 54, column: 1, scope: !6689)
!6698 = distinct !DISubprogram(name: "dfll_init", scope: !1012, file: !1012, line: 75, type: !253, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6699 = !DILocation(line: 78, column: 19, scope: !6698)
!6700 = !DILocation(line: 79, column: 2, scope: !6698)
!6701 = !DILocation(line: 84, column: 20, scope: !6698)
!6702 = !DILocation(line: 94, column: 2, scope: !6698)
!6703 = !DILocation(line: 97, column: 20, scope: !6698)
!6704 = !DILocation(line: 99, column: 2, scope: !6698)
!6705 = !DILocation(line: 101, column: 24, scope: !6698)
!6706 = !DILocation(line: 102, column: 2, scope: !6698)
!6707 = !DILocation(line: 102, column: 30, scope: !6698)
!6708 = !DILocation(line: 102, column: 9, scope: !6698)
!6709 = distinct !{!6709, !6706, !6710}
!6710 = !DILocation(line: 103, column: 2, scope: !6698)
!6711 = !DILocalVariable(name: "mul", scope: !6698, file: !1012, line: 105, type: !173)
!6712 = !DILocation(line: 105, column: 11, scope: !6698)
!6713 = !DILocation(line: 111, column: 11, scope: !6698)
!6714 = !DILocation(line: 110, column: 38, scope: !6698)
!6715 = !DILocation(line: 109, column: 23, scope: !6698)
!6716 = !DILocation(line: 112, column: 2, scope: !6698)
!6717 = !DILocation(line: 112, column: 30, scope: !6698)
!6718 = !DILocation(line: 112, column: 9, scope: !6698)
!6719 = distinct !{!6719, !6716, !6720}
!6720 = !DILocation(line: 113, column: 2, scope: !6698)
!6721 = !DILocation(line: 115, column: 24, scope: !6698)
!6722 = !DILocation(line: 120, column: 2, scope: !6698)
!6723 = !DILocation(line: 120, column: 30, scope: !6698)
!6724 = !DILocation(line: 120, column: 9, scope: !6698)
!6725 = distinct !{!6725, !6722, !6726}
!6726 = !DILocation(line: 121, column: 2, scope: !6698)
!6727 = !DILocation(line: 124, column: 31, scope: !6698)
!6728 = !DILocation(line: 126, column: 2, scope: !6698)
!6729 = !DILocation(line: 126, column: 30, scope: !6698)
!6730 = !DILocation(line: 126, column: 10, scope: !6698)
!6731 = !DILocation(line: 126, column: 39, scope: !6698)
!6732 = !DILocation(line: 126, column: 63, scope: !6698)
!6733 = !DILocation(line: 126, column: 42, scope: !6698)
!6734 = distinct !{!6734, !6728, !6735}
!6735 = !DILocation(line: 127, column: 2, scope: !6698)
!6736 = !DILocation(line: 129, column: 2, scope: !6698)
!6737 = !DILocation(line: 129, column: 30, scope: !6698)
!6738 = !DILocation(line: 129, column: 9, scope: !6698)
!6739 = distinct !{!6739, !6736, !6740}
!6740 = !DILocation(line: 130, column: 2, scope: !6698)
!6741 = !DILocation(line: 131, column: 1, scope: !6698)
!6742 = distinct !DISubprogram(name: "gclks_init", scope: !1012, file: !1012, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6743 = !DILocation(line: 143, column: 19, scope: !6742)
!6744 = !DILocation(line: 144, column: 2, scope: !6742)
!6745 = !DILocation(line: 146, column: 20, scope: !6742)
!6746 = !DILocation(line: 148, column: 2, scope: !6742)
!6747 = !DILocation(line: 151, column: 20, scope: !6742)
!6748 = !DILocation(line: 153, column: 2, scope: !6742)
!6749 = !DILocation(line: 156, column: 19, scope: !6742)
!6750 = !DILocation(line: 157, column: 2, scope: !6742)
!6751 = !DILocation(line: 159, column: 20, scope: !6742)
!6752 = !DILocation(line: 161, column: 2, scope: !6742)
!6753 = !DILocation(line: 162, column: 1, scope: !6742)
!6754 = distinct !DISubprogram(name: "dividers_init", scope: !1012, file: !1012, line: 164, type: !253, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6755 = !DILocation(line: 167, column: 17, scope: !6754)
!6756 = !DILocation(line: 168, column: 18, scope: !6754)
!6757 = !DILocation(line: 169, column: 18, scope: !6754)
!6758 = !DILocation(line: 170, column: 18, scope: !6754)
!6759 = !DILocation(line: 173, column: 1, scope: !6754)
!6760 = distinct !DISubprogram(name: "wait_gclk_synchronization", scope: !1012, file: !1012, line: 37, type: !253, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6761 = !DILocation(line: 39, column: 2, scope: !6760)
!6762 = !DILocation(line: 39, column: 26, scope: !6760)
!6763 = distinct !{!6763, !6761, !6764}
!6764 = !DILocation(line: 40, column: 2, scope: !6760)
!6765 = !DILocation(line: 41, column: 1, scope: !6760)
!6766 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6767, file: !6767, line: 57, type: !6768, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3603, retainedNodes: !223)
!6767 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6768 = !DISubroutineType(types: !6769)
!6769 = !{null, !32, !6770}
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6771, size: 32)
!6771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6772)
!6772 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3676, line: 141, baseType: !6773)
!6773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3676, line: 97, size: 256, elements: !6774)
!6774 = !{!6775}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6773, file: !3676, line: 107, baseType: !6776, size: 256)
!6776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3676, line: 98, size: 256, elements: !6777)
!6777 = !{!6778, !6783, !6788, !6793, !6798, !6803, !6808, !6813}
!6778 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 99, baseType: !6779, size: 32)
!6779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 99, size: 32, elements: !6780)
!6780 = !{!6781, !6782}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6779, file: !3676, line: 99, baseType: !173, size: 32)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6779, file: !3676, line: 99, baseType: !173, size: 32)
!6783 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 100, baseType: !6784, size: 32, offset: 32)
!6784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 100, size: 32, elements: !6785)
!6785 = !{!6786, !6787}
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6784, file: !3676, line: 100, baseType: !173, size: 32)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6784, file: !3676, line: 100, baseType: !173, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 101, baseType: !6789, size: 32, offset: 64)
!6789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 101, size: 32, elements: !6790)
!6790 = !{!6791, !6792}
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6789, file: !3676, line: 101, baseType: !173, size: 32)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6789, file: !3676, line: 101, baseType: !173, size: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 102, baseType: !6794, size: 32, offset: 96)
!6794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 102, size: 32, elements: !6795)
!6795 = !{!6796, !6797}
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6794, file: !3676, line: 102, baseType: !173, size: 32)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6794, file: !3676, line: 102, baseType: !173, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 103, baseType: !6799, size: 32, offset: 128)
!6799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 103, size: 32, elements: !6800)
!6800 = !{!6801, !6802}
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6799, file: !3676, line: 103, baseType: !173, size: 32)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6799, file: !3676, line: 103, baseType: !173, size: 32)
!6803 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 104, baseType: !6804, size: 32, offset: 160)
!6804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 104, size: 32, elements: !6805)
!6805 = !{!6806, !6807}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6804, file: !3676, line: 104, baseType: !173, size: 32)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6804, file: !3676, line: 104, baseType: !173, size: 32)
!6808 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !3676, line: 105, baseType: !6809, size: 32, offset: 192)
!6809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !3676, line: 105, size: 32, elements: !6810)
!6810 = !{!6811, !6812}
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6809, file: !3676, line: 105, baseType: !173, size: 32)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6809, file: !3676, line: 105, baseType: !173, size: 32)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6776, file: !3676, line: 106, baseType: !173, size: 32, offset: 224)
!6814 = !DILocalVariable(name: "reason", arg: 1, scope: !6766, file: !6767, line: 57, type: !32)
!6815 = !DILocation(line: 57, column: 37, scope: !6766)
!6816 = !DILocalVariable(name: "esf", arg: 2, scope: !6766, file: !6767, line: 57, type: !6770)
!6817 = !DILocation(line: 57, column: 65, scope: !6766)
!6818 = !DILocation(line: 60, column: 6, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6766, file: !6767, line: 60, column: 6)
!6820 = !DILocation(line: 60, column: 10, scope: !6819)
!6821 = !DILocation(line: 60, column: 6, scope: !6766)
!6822 = !DILocation(line: 61, column: 12, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6819, file: !6767, line: 60, column: 19)
!6824 = !DILocation(line: 61, column: 3, scope: !6823)
!6825 = !DILocation(line: 62, column: 2, scope: !6823)
!6826 = !DILocation(line: 63, column: 16, scope: !6766)
!6827 = !DILocation(line: 63, column: 24, scope: !6766)
!6828 = !DILocation(line: 63, column: 2, scope: !6766)
!6829 = !DILocation(line: 64, column: 1, scope: !6766)
!6830 = distinct !DISubprogram(name: "esf_dump", scope: !6767, file: !6767, line: 20, type: !6831, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3603, retainedNodes: !223)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{null, !6770}
!6833 = !DILocalVariable(name: "esf", arg: 1, scope: !6830, file: !6767, line: 20, type: !6770)
!6834 = !DILocation(line: 20, column: 42, scope: !6830)
!6835 = !DILocation(line: 22, column: 2, scope: !6830)
!6836 = !DILocation(line: 22, column: 2, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6767, line: 22, column: 2)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6767, line: 22, column: 2)
!6839 = distinct !DILexicalBlock(scope: !6830, file: !6767, line: 22, column: 2)
!6840 = !DILocation(line: 24, column: 2, scope: !6830)
!6841 = !DILocation(line: 24, column: 2, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6767, line: 24, column: 2)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6767, line: 24, column: 2)
!6844 = distinct !DILexicalBlock(scope: !6830, file: !6767, line: 24, column: 2)
!6845 = !DILocation(line: 26, column: 2, scope: !6830)
!6846 = !DILocation(line: 26, column: 2, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6767, line: 26, column: 2)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6767, line: 26, column: 2)
!6849 = distinct !DILexicalBlock(scope: !6830, file: !6767, line: 26, column: 2)
!6850 = !DILocation(line: 53, column: 2, scope: !6830)
!6851 = !DILocation(line: 53, column: 2, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6767, line: 53, column: 2)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6767, line: 53, column: 2)
!6854 = distinct !DILexicalBlock(scope: !6830, file: !6767, line: 53, column: 2)
!6855 = !DILocation(line: 55, column: 1, scope: !6830)
!6856 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6767, file: !6767, line: 82, type: !6857, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3603, retainedNodes: !223)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{null, !6770, !6859}
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 32)
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !6861)
!6861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6862)
!6862 = !{!6863, !6864, !6865, !6866, !6867, !6868, !6869, !6870, !6871}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6861, file: !190, line: 26, baseType: !173, size: 32)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6861, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6861, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6861, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6861, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6861, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6861, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6861, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6861, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6872 = !DILocalVariable(name: "esf", arg: 1, scope: !6856, file: !6767, line: 82, type: !6770)
!6873 = !DILocation(line: 82, column: 43, scope: !6856)
!6874 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6856, file: !6767, line: 82, type: !6859)
!6875 = !DILocation(line: 82, column: 65, scope: !6856)
!6876 = !DILocation(line: 85, column: 2, scope: !6856)
!6877 = !DILocalVariable(name: "reason", scope: !6856, file: !6767, line: 88, type: !32)
!6878 = !DILocation(line: 88, column: 15, scope: !6856)
!6879 = !DILocation(line: 88, column: 24, scope: !6856)
!6880 = !DILocation(line: 88, column: 29, scope: !6856)
!6881 = !DILocation(line: 88, column: 35, scope: !6856)
!6882 = !DILocation(line: 108, column: 20, scope: !6856)
!6883 = !DILocation(line: 108, column: 28, scope: !6856)
!6884 = !DILocation(line: 108, column: 2, scope: !6856)
!6885 = !DILocation(line: 131, column: 1, scope: !6856)
!6886 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6767, file: !6767, line: 133, type: !6887, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3603, retainedNodes: !223)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{null, !102}
!6889 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6886, file: !6767, line: 133, type: !102)
!6890 = !DILocation(line: 133, column: 44, scope: !6886)
!6891 = !DILocalVariable(name: "ssf_contents", scope: !6886, file: !6767, line: 135, type: !742)
!6892 = !DILocation(line: 135, column: 12, scope: !6886)
!6893 = !DILocation(line: 135, column: 27, scope: !6886)
!6894 = !DILocalVariable(name: "oops_esf", scope: !6886, file: !6767, line: 136, type: !6772)
!6895 = !DILocation(line: 136, column: 15, scope: !6886)
!6896 = !DILocation(line: 139, column: 22, scope: !6886)
!6897 = !DILocation(line: 139, column: 11, scope: !6886)
!6898 = !DILocation(line: 139, column: 17, scope: !6886)
!6899 = !DILocation(line: 139, column: 20, scope: !6886)
!6900 = !DILocation(line: 141, column: 2, scope: !6886)
!6901 = !DILocation(line: 142, column: 2, scope: !6886)
!6902 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6903, file: !6903, line: 40, type: !6646, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6903 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6904 = !DILocalVariable(name: "irq", arg: 1, scope: !6902, file: !6903, line: 40, type: !32)
!6905 = !DILocation(line: 40, column: 35, scope: !6902)
!6906 = !DILocation(line: 42, column: 28, scope: !6902)
!6907 = !DILocation(line: 42, column: 2, scope: !6902)
!6908 = !DILocation(line: 43, column: 1, scope: !6902)
!6909 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !2819, file: !2819, line: 741, type: !6910, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{null, !3609}
!6912 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6909, file: !2819, line: 741, type: !3609)
!6913 = !DILocation(line: 741, column: 49, scope: !6909)
!6914 = !DILocation(line: 743, column: 17, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6909, file: !2819, line: 743, column: 7)
!6916 = !DILocation(line: 743, column: 23, scope: !6915)
!6917 = !DILocation(line: 743, column: 7, scope: !6909)
!6918 = !DILocation(line: 745, column: 5, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6915, file: !2819, line: 744, column: 3)
!6920 = !{i64 2149832370}
!6921 = !DILocation(line: 746, column: 52, scope: !6919)
!6922 = !DILocation(line: 746, column: 58, scope: !6919)
!6923 = !DILocation(line: 746, column: 37, scope: !6919)
!6924 = !DILocation(line: 746, column: 20, scope: !6919)
!6925 = !DILocation(line: 747, column: 5, scope: !6919)
!6926 = !{i64 2149832484}
!6927 = !DILocation(line: 748, column: 3, scope: !6919)
!6928 = !DILocation(line: 749, column: 1, scope: !6909)
!6929 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6903, file: !6903, line: 45, type: !6646, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6930 = !DILocalVariable(name: "irq", arg: 1, scope: !6929, file: !6903, line: 45, type: !32)
!6931 = !DILocation(line: 45, column: 36, scope: !6929)
!6932 = !DILocation(line: 47, column: 29, scope: !6929)
!6933 = !DILocation(line: 47, column: 2, scope: !6929)
!6934 = !DILocation(line: 48, column: 1, scope: !6929)
!6935 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !2819, file: !2819, line: 779, type: !6910, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6936 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6935, file: !2819, line: 779, type: !3609)
!6937 = !DILocation(line: 779, column: 50, scope: !6935)
!6938 = !DILocation(line: 781, column: 17, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6935, file: !2819, line: 781, column: 7)
!6940 = !DILocation(line: 781, column: 23, scope: !6939)
!6941 = !DILocation(line: 781, column: 7, scope: !6935)
!6942 = !DILocation(line: 783, column: 52, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6939, file: !2819, line: 782, column: 3)
!6944 = !DILocation(line: 783, column: 58, scope: !6943)
!6945 = !DILocation(line: 783, column: 37, scope: !6943)
!6946 = !DILocation(line: 783, column: 20, scope: !6943)
!6947 = !DILocation(line: 271, column: 3, scope: !6948, inlinedAt: !6950)
!6948 = distinct !DISubprogram(name: "__DSB", scope: !6949, file: !6949, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6949 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6950 = distinct !DILocation(line: 784, column: 5, scope: !6943)
!6951 = !{i64 2292309}
!6952 = !DILocation(line: 260, column: 3, scope: !6953, inlinedAt: !6954)
!6953 = distinct !DISubprogram(name: "__ISB", scope: !6949, file: !6949, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6954 = distinct !DILocation(line: 785, column: 5, scope: !6943)
!6955 = !{i64 2292026}
!6956 = !DILocation(line: 786, column: 3, scope: !6943)
!6957 = !DILocation(line: 787, column: 1, scope: !6935)
!6958 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6903, file: !6903, line: 50, type: !6959, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{!103, !32}
!6961 = !DILocalVariable(name: "irq", arg: 1, scope: !6958, file: !6903, line: 50, type: !32)
!6962 = !DILocation(line: 50, column: 38, scope: !6958)
!6963 = !DILocation(line: 52, column: 20, scope: !6958)
!6964 = !DILocation(line: 52, column: 9, scope: !6958)
!6965 = !DILocation(line: 52, column: 41, scope: !6958)
!6966 = !DILocation(line: 52, column: 39, scope: !6958)
!6967 = !DILocation(line: 52, column: 2, scope: !6958)
!6968 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6903, file: !6903, line: 64, type: !6969, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !32, !32, !173}
!6971 = !DILocalVariable(name: "irq", arg: 1, scope: !6968, file: !6903, line: 64, type: !32)
!6972 = !DILocation(line: 64, column: 42, scope: !6968)
!6973 = !DILocalVariable(name: "prio", arg: 2, scope: !6968, file: !6903, line: 64, type: !32)
!6974 = !DILocation(line: 64, column: 60, scope: !6968)
!6975 = !DILocalVariable(name: "flags", arg: 3, scope: !6968, file: !6903, line: 64, type: !173)
!6976 = !DILocation(line: 64, column: 75, scope: !6968)
!6977 = !DILocation(line: 83, column: 8, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6903, line: 82, column: 9)
!6979 = distinct !DILexicalBlock(scope: !6968, file: !6903, line: 76, column: 6)
!6980 = !DILocation(line: 95, column: 30, scope: !6968)
!6981 = !DILocation(line: 95, column: 35, scope: !6968)
!6982 = !DILocation(line: 95, column: 2, scope: !6968)
!6983 = !DILocation(line: 96, column: 1, scope: !6968)
!6984 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2819, file: !2819, line: 850, type: !6985, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !3609, !173}
!6987 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6984, file: !2819, line: 850, type: !3609)
!6988 = !DILocation(line: 850, column: 51, scope: !6984)
!6989 = !DILocalVariable(name: "priority", arg: 2, scope: !6984, file: !2819, line: 850, type: !173)
!6990 = !DILocation(line: 850, column: 66, scope: !6984)
!6991 = !DILocation(line: 852, column: 17, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6984, file: !2819, line: 852, column: 7)
!6993 = !DILocation(line: 852, column: 23, scope: !6992)
!6994 = !DILocation(line: 852, column: 7, scope: !6984)
!6995 = !DILocation(line: 854, column: 53, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !2819, line: 853, column: 3)
!6997 = !DILocation(line: 854, column: 44, scope: !6996)
!6998 = !DILocation(line: 854, column: 83, scope: !6996)
!6999 = !DILocation(line: 854, column: 80, scope: !6996)
!7000 = !DILocation(line: 854, column: 71, scope: !6996)
!7001 = !DILocation(line: 854, column: 69, scope: !6996)
!7002 = !DILocation(line: 855, column: 11, scope: !6996)
!7003 = !DILocation(line: 855, column: 20, scope: !6996)
!7004 = !DILocation(line: 855, column: 48, scope: !6996)
!7005 = !DILocation(line: 855, column: 71, scope: !6996)
!7006 = !DILocation(line: 855, column: 68, scope: !6996)
!7007 = !DILocation(line: 854, column: 102, scope: !6996)
!7008 = !DILocation(line: 854, column: 14, scope: !6996)
!7009 = !DILocation(line: 854, column: 5, scope: !6996)
!7010 = !DILocation(line: 854, column: 30, scope: !6996)
!7011 = !DILocation(line: 856, column: 3, scope: !6996)
!7012 = !DILocation(line: 859, column: 53, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6992, file: !2819, line: 858, column: 3)
!7014 = !DILocation(line: 859, column: 44, scope: !7013)
!7015 = !DILocation(line: 859, column: 83, scope: !7013)
!7016 = !DILocation(line: 859, column: 80, scope: !7013)
!7017 = !DILocation(line: 859, column: 71, scope: !7013)
!7018 = !DILocation(line: 859, column: 69, scope: !7013)
!7019 = !DILocation(line: 860, column: 11, scope: !7013)
!7020 = !DILocation(line: 860, column: 20, scope: !7013)
!7021 = !DILocation(line: 860, column: 48, scope: !7013)
!7022 = !DILocation(line: 860, column: 71, scope: !7013)
!7023 = !DILocation(line: 860, column: 68, scope: !7013)
!7024 = !DILocation(line: 859, column: 102, scope: !7013)
!7025 = !DILocation(line: 859, column: 14, scope: !7013)
!7026 = !DILocation(line: 859, column: 5, scope: !7013)
!7027 = !DILocation(line: 859, column: 30, scope: !7013)
!7028 = !DILocation(line: 862, column: 1, scope: !6984)
!7029 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6903, file: !6903, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3605, retainedNodes: !223)
!7030 = !DILocalVariable(name: "unused", arg: 1, scope: !7029, file: !6903, line: 155, type: !13)
!7031 = !DILocation(line: 155, column: 33, scope: !7029)
!7032 = !DILocation(line: 157, column: 2, scope: !7029)
!7033 = !DILocation(line: 159, column: 2, scope: !7029)
!7034 = !DILocation(line: 160, column: 1, scope: !7029)
!7035 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7036, file: !7036, line: 87, type: !253, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3637, retainedNodes: !223)
!7036 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7037 = !DILocation(line: 89, column: 2, scope: !7035)
!7038 = !DILocation(line: 90, column: 2, scope: !7035)
!7039 = !DILocation(line: 91, column: 1, scope: !7035)
!7040 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7041, file: !7041, line: 256, type: !253, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3639, retainedNodes: !223)
!7041 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7042 = !DILocation(line: 258, column: 2, scope: !7040)
!7043 = !DILocation(line: 262, column: 2, scope: !7040)
!7044 = !DILocation(line: 263, column: 2, scope: !7040)
!7045 = !DILocation(line: 267, column: 2, scope: !7040)
!7046 = !DILocation(line: 268, column: 2, scope: !7040)
!7047 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7041, file: !7041, line: 53, type: !253, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3639, retainedNodes: !223)
!7048 = !DILocation(line: 55, column: 12, scope: !7047)
!7049 = !DILocation(line: 271, column: 3, scope: !7050, inlinedAt: !7051)
!7050 = distinct !DISubprogram(name: "__DSB", scope: !6949, file: !6949, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3639, retainedNodes: !223)
!7051 = distinct !DILocation(line: 56, column: 2, scope: !7047)
!7052 = !{i64 2328083}
!7053 = !DILocation(line: 260, column: 3, scope: !7054, inlinedAt: !7055)
!7054 = distinct !DISubprogram(name: "__ISB", scope: !6949, file: !6949, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3639, retainedNodes: !223)
!7055 = distinct !DILocation(line: 57, column: 2, scope: !7047)
!7056 = !{i64 2327800}
!7057 = !DILocation(line: 58, column: 1, scope: !7047)
!7058 = distinct !DISubprogram(name: "arch_swap", scope: !7059, file: !7059, line: 33, type: !6959, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3655, retainedNodes: !223)
!7059 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7060 = !DILocalVariable(name: "key", arg: 1, scope: !7058, file: !7059, line: 33, type: !32)
!7061 = !DILocation(line: 33, column: 28, scope: !7058)
!7062 = !DILocation(line: 36, column: 27, scope: !7058)
!7063 = !DILocation(line: 36, column: 2, scope: !7058)
!7064 = !DILocation(line: 36, column: 12, scope: !7058)
!7065 = !DILocation(line: 36, column: 17, scope: !7058)
!7066 = !DILocation(line: 36, column: 25, scope: !7058)
!7067 = !DILocation(line: 37, column: 37, scope: !7058)
!7068 = !DILocation(line: 37, column: 2, scope: !7058)
!7069 = !DILocation(line: 37, column: 12, scope: !7058)
!7070 = !DILocation(line: 37, column: 17, scope: !7058)
!7071 = !DILocation(line: 37, column: 35, scope: !7058)
!7072 = !DILocation(line: 41, column: 12, scope: !7058)
!7073 = !DILocalVariable(name: "key", arg: 1, scope: !7074, file: !6626, line: 84, type: !32)
!7074 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3655, retainedNodes: !223)
!7075 = !DILocation(line: 84, column: 56, scope: !7074, inlinedAt: !7076)
!7076 = distinct !DILocation(line: 44, column: 2, scope: !7058)
!7077 = !DILocation(line: 87, column: 6, scope: !7078, inlinedAt: !7076)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !6626, line: 87, column: 6)
!7079 = !DILocation(line: 87, column: 10, scope: !7078, inlinedAt: !7076)
!7080 = !DILocation(line: 87, column: 6, scope: !7074, inlinedAt: !7076)
!7081 = !DILocation(line: 88, column: 3, scope: !7082, inlinedAt: !7076)
!7082 = distinct !DILexicalBlock(scope: !7078, file: !6626, line: 87, column: 17)
!7083 = !DILocation(line: 90, column: 2, scope: !7074, inlinedAt: !7076)
!7084 = !{i64 1470894}
!7085 = !DILocation(line: 110, column: 1, scope: !7074, inlinedAt: !7076)
!7086 = !DILocation(line: 53, column: 9, scope: !7058)
!7087 = !DILocation(line: 53, column: 19, scope: !7058)
!7088 = !DILocation(line: 53, column: 24, scope: !7058)
!7089 = !DILocation(line: 53, column: 2, scope: !7058)
!7090 = distinct !DISubprogram(name: "arch_new_thread", scope: !7091, file: !7091, line: 56, type: !7092, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3671, retainedNodes: !223)
!7091 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7092 = !DISubroutineType(types: !7093)
!7093 = !{null, !7094, !7188, !1836, !240, !102, !102, !102}
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7095, size: 32)
!7095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !7096)
!7096 = !{!7097, !7155, !7167, !7168, !7169, !7170, !7183}
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7095, file: !114, line: 247, baseType: !7098, size: 384)
!7098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !7099)
!7099 = !{!7100, !7124, !7131, !7132, !7133, !7142, !7143, !7144}
!7100 = !DIDerivedType(tag: DW_TAG_member, scope: !7098, file: !114, line: 60, baseType: !7101, size: 64)
!7101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7098, file: !114, line: 60, size: 64, elements: !7102)
!7102 = !{!7103, !7118}
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7101, file: !114, line: 61, baseType: !7104, size: 64)
!7104 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !7105)
!7105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !7106)
!7106 = !{!7107, !7113}
!7107 = !DIDerivedType(tag: DW_TAG_member, scope: !7105, file: !124, line: 38, baseType: !7108, size: 32)
!7108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7105, file: !124, line: 38, size: 32, elements: !7109)
!7109 = !{!7110, !7112}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7108, file: !124, line: 39, baseType: !7111, size: 32)
!7111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 32)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7108, file: !124, line: 40, baseType: !7111, size: 32)
!7113 = !DIDerivedType(tag: DW_TAG_member, scope: !7105, file: !124, line: 42, baseType: !7114, size: 32, offset: 32)
!7114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7105, file: !124, line: 42, size: 32, elements: !7115)
!7115 = !{!7116, !7117}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7114, file: !124, line: 43, baseType: !7111, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7114, file: !124, line: 44, baseType: !7111, size: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7101, file: !114, line: 62, baseType: !7119, size: 64)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !7120)
!7120 = !{!7121}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7119, file: !140, line: 50, baseType: !7122, size: 64)
!7122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7123, size: 64, elements: !145)
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 32)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7098, file: !114, line: 68, baseType: !7125, size: 32, offset: 64)
!7125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7126, size: 32)
!7126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !7127)
!7127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !7128)
!7128 = !{!7129}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7127, file: !150, line: 232, baseType: !7130, size: 64)
!7130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !7105)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7098, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7098, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!7133 = !DIDerivedType(tag: DW_TAG_member, scope: !7098, file: !114, line: 90, baseType: !7134, size: 16, offset: 112)
!7134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7098, file: !114, line: 90, size: 16, elements: !7135)
!7135 = !{!7136, !7141}
!7136 = !DIDerivedType(tag: DW_TAG_member, scope: !7134, file: !114, line: 91, baseType: !7137, size: 16)
!7137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7134, file: !114, line: 91, size: 16, elements: !7138)
!7138 = !{!7139, !7140}
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7137, file: !114, line: 96, baseType: !166, size: 8)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7137, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7134, file: !114, line: 100, baseType: !170, size: 16)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7098, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7098, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7098, file: !114, line: 131, baseType: !7145, size: 192, offset: 192)
!7145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !7146)
!7146 = !{!7147, !7148, !7154}
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7145, file: !150, line: 245, baseType: !7104, size: 64)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7145, file: !150, line: 246, baseType: !7149, size: 32, offset: 64)
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !7150)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 32)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{null, !7153}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 32)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7145, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7095, file: !114, line: 250, baseType: !7156, size: 288, offset: 384)
!7156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !7157)
!7157 = !{!7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166}
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7156, file: !190, line: 26, baseType: !173, size: 32)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7156, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7156, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7156, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7156, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7156, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7156, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7156, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7156, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7095, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7095, file: !114, line: 256, baseType: !7126, size: 64, offset: 704)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7095, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7095, file: !114, line: 325, baseType: !7171, size: 32, offset: 800)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 32)
!7172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !7173)
!7173 = !{!7174, !7180, !7181}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7172, file: !109, line: 5074, baseType: !7175, size: 96)
!7175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !7176)
!7176 = !{!7177, !7178, !7179}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7175, file: !210, line: 57, baseType: !213, size: 32)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7175, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7175, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7172, file: !109, line: 5075, baseType: !7126, size: 64, offset: 96)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7172, file: !109, line: 5076, baseType: !7182, offset: 160)
!7182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7095, file: !114, line: 343, baseType: !7184, size: 64, offset: 832)
!7184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !7185)
!7185 = !{!7186, !7187}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7184, file: !190, line: 63, baseType: !173, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7184, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7189, size: 32)
!7189 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !7190)
!7190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !7191)
!7191 = !{!7192}
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7190, file: !234, line: 48, baseType: !237, size: 8)
!7193 = !DILocalVariable(name: "thread", arg: 1, scope: !7090, file: !7091, line: 56, type: !7094)
!7194 = !DILocation(line: 56, column: 39, scope: !7090)
!7195 = !DILocalVariable(name: "stack", arg: 2, scope: !7090, file: !7091, line: 56, type: !7188)
!7196 = !DILocation(line: 56, column: 65, scope: !7090)
!7197 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7090, file: !7091, line: 57, type: !1836)
!7198 = !DILocation(line: 57, column: 14, scope: !7090)
!7199 = !DILocalVariable(name: "entry", arg: 4, scope: !7090, file: !7091, line: 57, type: !240)
!7200 = !DILocation(line: 57, column: 42, scope: !7090)
!7201 = !DILocalVariable(name: "p1", arg: 5, scope: !7090, file: !7091, line: 58, type: !102)
!7202 = !DILocation(line: 58, column: 14, scope: !7090)
!7203 = !DILocalVariable(name: "p2", arg: 6, scope: !7090, file: !7091, line: 58, type: !102)
!7204 = !DILocation(line: 58, column: 24, scope: !7090)
!7205 = !DILocalVariable(name: "p3", arg: 7, scope: !7090, file: !7091, line: 58, type: !102)
!7206 = !DILocation(line: 58, column: 34, scope: !7090)
!7207 = !DILocalVariable(name: "iframe", scope: !7090, file: !7091, line: 60, type: !3674)
!7208 = !DILocation(line: 60, column: 21, scope: !7090)
!7209 = !DILocation(line: 85, column: 11, scope: !7090)
!7210 = !DILocation(line: 85, column: 9, scope: !7090)
!7211 = !DILocation(line: 93, column: 2, scope: !7090)
!7212 = !DILocation(line: 93, column: 10, scope: !7090)
!7213 = !DILocation(line: 93, column: 13, scope: !7090)
!7214 = !DILocation(line: 98, column: 2, scope: !7090)
!7215 = !DILocation(line: 98, column: 10, scope: !7090)
!7216 = !DILocation(line: 98, column: 13, scope: !7090)
!7217 = !DILocation(line: 100, column: 25, scope: !7090)
!7218 = !DILocation(line: 100, column: 15, scope: !7090)
!7219 = !DILocation(line: 100, column: 2, scope: !7090)
!7220 = !DILocation(line: 100, column: 10, scope: !7090)
!7221 = !DILocation(line: 100, column: 13, scope: !7090)
!7222 = !DILocation(line: 101, column: 25, scope: !7090)
!7223 = !DILocation(line: 101, column: 15, scope: !7090)
!7224 = !DILocation(line: 101, column: 2, scope: !7090)
!7225 = !DILocation(line: 101, column: 10, scope: !7090)
!7226 = !DILocation(line: 101, column: 13, scope: !7090)
!7227 = !DILocation(line: 102, column: 25, scope: !7090)
!7228 = !DILocation(line: 102, column: 15, scope: !7090)
!7229 = !DILocation(line: 102, column: 2, scope: !7090)
!7230 = !DILocation(line: 102, column: 10, scope: !7090)
!7231 = !DILocation(line: 102, column: 13, scope: !7090)
!7232 = !DILocation(line: 103, column: 25, scope: !7090)
!7233 = !DILocation(line: 103, column: 15, scope: !7090)
!7234 = !DILocation(line: 103, column: 2, scope: !7090)
!7235 = !DILocation(line: 103, column: 10, scope: !7090)
!7236 = !DILocation(line: 103, column: 13, scope: !7090)
!7237 = !DILocation(line: 106, column: 2, scope: !7090)
!7238 = !DILocation(line: 106, column: 10, scope: !7090)
!7239 = !DILocation(line: 106, column: 15, scope: !7090)
!7240 = !DILocation(line: 122, column: 39, scope: !7090)
!7241 = !DILocation(line: 122, column: 29, scope: !7090)
!7242 = !DILocation(line: 122, column: 2, scope: !7090)
!7243 = !DILocation(line: 122, column: 10, scope: !7090)
!7244 = !DILocation(line: 122, column: 23, scope: !7090)
!7245 = !DILocation(line: 122, column: 27, scope: !7090)
!7246 = !DILocation(line: 123, column: 2, scope: !7090)
!7247 = !DILocation(line: 123, column: 10, scope: !7090)
!7248 = !DILocation(line: 123, column: 15, scope: !7090)
!7249 = !DILocation(line: 123, column: 23, scope: !7090)
!7250 = !DILocation(line: 143, column: 1, scope: !7090)
!7251 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7091, file: !7091, line: 530, type: !7252, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3671, retainedNodes: !223)
!7252 = !DISubroutineType(types: !7253)
!7253 = !{null, !7094, !1836, !240}
!7254 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7251, file: !7091, line: 530, type: !7094)
!7255 = !DILocation(line: 530, column: 50, scope: !7251)
!7256 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7251, file: !7091, line: 530, type: !1836)
!7257 = !DILocation(line: 530, column: 69, scope: !7251)
!7258 = !DILocalVariable(name: "_main", arg: 3, scope: !7251, file: !7091, line: 531, type: !240)
!7259 = !DILocation(line: 531, column: 22, scope: !7251)
!7260 = !DILocation(line: 533, column: 2, scope: !7251)
!7261 = !DILocation(line: 535, column: 13, scope: !7251)
!7262 = !DILocation(line: 535, column: 11, scope: !7251)
!7263 = !DILocation(line: 599, column: 9, scope: !7251)
!7264 = !DILocation(line: 599, column: 22, scope: !7251)
!7265 = !DILocation(line: 576, column: 2, scope: !7251)
!7266 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18355, i64 18626, i64 18645, i64 18664, i64 18689}
!7267 = !DILocation(line: 603, column: 2, scope: !7251)
!7268 = distinct !DISubprogram(name: "z_arm_prepare_switch_to_main", scope: !7091, file: !7091, line: 506, type: !253, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3671, retainedNodes: !223)
!7269 = !DILocation(line: 528, column: 1, scope: !7268)
!7270 = distinct !DISubprogram(name: "z_arm_fault", scope: !7271, file: !7271, line: 1036, type: !7272, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7271 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !173, !173, !173, !7274}
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7275, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !7276)
!7276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !7277)
!7277 = !{!7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286}
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7276, file: !190, line: 26, baseType: !173, size: 32)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7276, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7276, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7276, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7276, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7276, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7276, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7276, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7276, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!7287 = !DILocalVariable(name: "msp", arg: 1, scope: !7270, file: !7271, line: 1036, type: !173)
!7288 = !DILocation(line: 1036, column: 27, scope: !7270)
!7289 = !DILocalVariable(name: "psp", arg: 2, scope: !7270, file: !7271, line: 1036, type: !173)
!7290 = !DILocation(line: 1036, column: 41, scope: !7270)
!7291 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7270, file: !7271, line: 1036, type: !173)
!7292 = !DILocation(line: 1036, column: 55, scope: !7270)
!7293 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7270, file: !7271, line: 1037, type: !7274)
!7294 = !DILocation(line: 1037, column: 19, scope: !7270)
!7295 = !DILocalVariable(name: "reason", scope: !7270, file: !7271, line: 1039, type: !173)
!7296 = !DILocation(line: 1039, column: 11, scope: !7270)
!7297 = !DILocalVariable(name: "fault", scope: !7270, file: !7271, line: 1040, type: !103)
!7298 = !DILocation(line: 1040, column: 6, scope: !7270)
!7299 = !DILocation(line: 1040, column: 19, scope: !7270)
!7300 = !DILocation(line: 1040, column: 24, scope: !7270)
!7301 = !DILocalVariable(name: "recoverable", scope: !7270, file: !7271, line: 1041, type: !1035)
!7302 = !DILocation(line: 1041, column: 7, scope: !7270)
!7303 = !DILocalVariable(name: "nested_exc", scope: !7270, file: !7271, line: 1041, type: !1035)
!7304 = !DILocation(line: 1041, column: 20, scope: !7270)
!7305 = !DILocalVariable(name: "esf", scope: !7270, file: !7271, line: 1042, type: !3730)
!7306 = !DILocation(line: 1042, column: 16, scope: !7270)
!7307 = !DILocalVariable(name: "esf_copy", scope: !7270, file: !7271, line: 1047, type: !3731)
!7308 = !DILocation(line: 1047, column: 15, scope: !7270)
!7309 = !DILocalVariable(name: "key", arg: 1, scope: !7310, file: !6626, line: 84, type: !32)
!7310 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7311 = !DILocation(line: 84, column: 56, scope: !7310, inlinedAt: !7312)
!7312 = distinct !DILocation(line: 1050, column: 2, scope: !7270)
!7313 = !DILocation(line: 87, column: 6, scope: !7314, inlinedAt: !7312)
!7314 = distinct !DILexicalBlock(scope: !7310, file: !6626, line: 87, column: 6)
!7315 = !DILocation(line: 87, column: 10, scope: !7314, inlinedAt: !7312)
!7316 = !DILocation(line: 87, column: 6, scope: !7310, inlinedAt: !7312)
!7317 = !DILocation(line: 88, column: 3, scope: !7318, inlinedAt: !7312)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !6626, line: 87, column: 17)
!7319 = !DILocation(line: 90, column: 2, scope: !7310, inlinedAt: !7312)
!7320 = !{i64 1504138}
!7321 = !DILocation(line: 110, column: 1, scope: !7310, inlinedAt: !7312)
!7322 = !DILocation(line: 1055, column: 17, scope: !7270)
!7323 = !DILocation(line: 1055, column: 22, scope: !7270)
!7324 = !DILocation(line: 1055, column: 27, scope: !7270)
!7325 = !DILocation(line: 1055, column: 9, scope: !7270)
!7326 = !DILocation(line: 1055, column: 7, scope: !7270)
!7327 = !DILocation(line: 1063, column: 24, scope: !7270)
!7328 = !DILocation(line: 1063, column: 29, scope: !7270)
!7329 = !DILocation(line: 1063, column: 11, scope: !7270)
!7330 = !DILocation(line: 1063, column: 9, scope: !7270)
!7331 = !DILocation(line: 1064, column: 6, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7270, file: !7271, line: 1064, column: 6)
!7333 = !DILocation(line: 1064, column: 6, scope: !7270)
!7334 = !DILocation(line: 1065, column: 3, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7332, file: !7271, line: 1064, column: 19)
!7336 = !DILocation(line: 1070, column: 9, scope: !7270)
!7337 = !DILocation(line: 1070, column: 20, scope: !7270)
!7338 = !DILocation(line: 1070, column: 2, scope: !7270)
!7339 = !DILocation(line: 1071, column: 2, scope: !7270)
!7340 = !DILocation(line: 1089, column: 6, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7270, file: !7271, line: 1089, column: 6)
!7342 = !DILocation(line: 1089, column: 6, scope: !7270)
!7343 = !DILocation(line: 1090, column: 17, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !7271, line: 1090, column: 7)
!7345 = distinct !DILexicalBlock(scope: !7341, file: !7271, line: 1089, column: 18)
!7346 = !DILocation(line: 1090, column: 23, scope: !7344)
!7347 = !DILocation(line: 1090, column: 28, scope: !7344)
!7348 = !DILocation(line: 1090, column: 44, scope: !7344)
!7349 = !DILocation(line: 1090, column: 7, scope: !7345)
!7350 = !DILocation(line: 1091, column: 13, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7344, file: !7271, line: 1090, column: 50)
!7352 = !DILocation(line: 1091, column: 19, scope: !7351)
!7353 = !DILocation(line: 1091, column: 24, scope: !7351)
!7354 = !DILocation(line: 1092, column: 3, scope: !7351)
!7355 = !DILocation(line: 1093, column: 2, scope: !7345)
!7356 = !DILocation(line: 1094, column: 12, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7341, file: !7271, line: 1093, column: 9)
!7358 = !DILocation(line: 1094, column: 18, scope: !7357)
!7359 = !DILocation(line: 1094, column: 23, scope: !7357)
!7360 = !DILocation(line: 1097, column: 20, scope: !7270)
!7361 = !DILocation(line: 1097, column: 2, scope: !7270)
!7362 = !DILocation(line: 1098, column: 1, scope: !7270)
!7363 = distinct !DISubprogram(name: "get_esf", scope: !7271, file: !7271, line: 894, type: !7364, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!3730, !173, !173, !173, !7366}
!7366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!7367 = !DILocalVariable(name: "msp", arg: 1, scope: !7363, file: !7271, line: 894, type: !173)
!7368 = !DILocation(line: 894, column: 46, scope: !7363)
!7369 = !DILocalVariable(name: "psp", arg: 2, scope: !7363, file: !7271, line: 894, type: !173)
!7370 = !DILocation(line: 894, column: 60, scope: !7363)
!7371 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7363, file: !7271, line: 894, type: !173)
!7372 = !DILocation(line: 894, column: 74, scope: !7363)
!7373 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7363, file: !7271, line: 895, type: !7366)
!7374 = !DILocation(line: 895, column: 8, scope: !7363)
!7375 = !DILocalVariable(name: "alternative_state_exc", scope: !7363, file: !7271, line: 897, type: !1035)
!7376 = !DILocation(line: 897, column: 7, scope: !7363)
!7377 = !DILocalVariable(name: "ptr_esf", scope: !7363, file: !7271, line: 898, type: !3730)
!7378 = !DILocation(line: 898, column: 16, scope: !7363)
!7379 = !DILocation(line: 900, column: 3, scope: !7363)
!7380 = !DILocation(line: 900, column: 14, scope: !7363)
!7381 = !DILocation(line: 902, column: 7, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7363, file: !7271, line: 902, column: 6)
!7383 = !DILocation(line: 902, column: 18, scope: !7382)
!7384 = !DILocation(line: 902, column: 49, scope: !7382)
!7385 = !DILocation(line: 902, column: 6, scope: !7363)
!7386 = !DILocation(line: 905, column: 3, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7382, file: !7271, line: 903, column: 33)
!7388 = !DILocation(line: 983, column: 7, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7363, file: !7271, line: 983, column: 6)
!7390 = !DILocation(line: 983, column: 18, scope: !7389)
!7391 = !DILocation(line: 983, column: 44, scope: !7389)
!7392 = !DILocation(line: 984, column: 6, scope: !7389)
!7393 = !DILocation(line: 984, column: 17, scope: !7389)
!7394 = !DILocation(line: 983, column: 6, scope: !7363)
!7395 = !DILocation(line: 985, column: 3, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7389, file: !7271, line: 984, column: 47)
!7397 = !DILocation(line: 985, column: 3, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !7271, line: 985, column: 3)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !7271, line: 985, column: 3)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !7271, line: 985, column: 3)
!7401 = !DILocation(line: 986, column: 3, scope: !7396)
!7402 = !DILocation(line: 990, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7363, file: !7271, line: 990, column: 6)
!7404 = !DILocation(line: 990, column: 6, scope: !7363)
!7405 = !DILocation(line: 991, column: 7, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !7271, line: 991, column: 7)
!7407 = distinct !DILexicalBlock(scope: !7403, file: !7271, line: 990, column: 30)
!7408 = !DILocation(line: 991, column: 18, scope: !7406)
!7409 = !DILocation(line: 991, column: 7, scope: !7407)
!7410 = !DILocation(line: 993, column: 31, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7406, file: !7271, line: 991, column: 44)
!7412 = !DILocation(line: 993, column: 15, scope: !7411)
!7413 = !DILocation(line: 993, column: 12, scope: !7411)
!7414 = !DILocation(line: 995, column: 3, scope: !7411)
!7415 = !DILocation(line: 997, column: 30, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7406, file: !7271, line: 995, column: 10)
!7417 = !DILocation(line: 997, column: 14, scope: !7416)
!7418 = !DILocation(line: 997, column: 12, scope: !7416)
!7419 = !DILocation(line: 998, column: 5, scope: !7416)
!7420 = !DILocation(line: 998, column: 16, scope: !7416)
!7421 = !DILocation(line: 1000, column: 2, scope: !7407)
!7422 = !DILocation(line: 1002, column: 9, scope: !7363)
!7423 = !DILocation(line: 1002, column: 2, scope: !7363)
!7424 = !DILocation(line: 1003, column: 1, scope: !7363)
!7425 = distinct !DISubprogram(name: "fault_handle", scope: !7271, file: !7271, line: 786, type: !7426, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!173, !3730, !103, !7366}
!7428 = !DILocalVariable(name: "esf", arg: 1, scope: !7425, file: !7271, line: 786, type: !3730)
!7429 = !DILocation(line: 786, column: 44, scope: !7425)
!7430 = !DILocalVariable(name: "fault", arg: 2, scope: !7425, file: !7271, line: 786, type: !103)
!7431 = !DILocation(line: 786, column: 53, scope: !7425)
!7432 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7425, file: !7271, line: 786, type: !7366)
!7433 = !DILocation(line: 786, column: 66, scope: !7425)
!7434 = !DILocalVariable(name: "reason", scope: !7425, file: !7271, line: 788, type: !173)
!7435 = !DILocation(line: 788, column: 11, scope: !7425)
!7436 = !DILocation(line: 790, column: 3, scope: !7425)
!7437 = !DILocation(line: 790, column: 15, scope: !7425)
!7438 = !DILocation(line: 792, column: 10, scope: !7425)
!7439 = !DILocation(line: 792, column: 2, scope: !7425)
!7440 = !DILocation(line: 794, column: 23, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7425, file: !7271, line: 792, column: 17)
!7442 = !DILocation(line: 794, column: 28, scope: !7441)
!7443 = !DILocation(line: 794, column: 12, scope: !7441)
!7444 = !DILocation(line: 794, column: 10, scope: !7441)
!7445 = !DILocation(line: 795, column: 3, scope: !7441)
!7446 = !DILocation(line: 820, column: 22, scope: !7441)
!7447 = !DILocation(line: 820, column: 27, scope: !7441)
!7448 = !DILocation(line: 820, column: 3, scope: !7441)
!7449 = !DILocation(line: 821, column: 3, scope: !7441)
!7450 = !DILocation(line: 824, column: 8, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7425, file: !7271, line: 824, column: 6)
!7452 = !DILocation(line: 824, column: 7, scope: !7451)
!7453 = !DILocation(line: 824, column: 6, scope: !7451)
!7454 = !DILocation(line: 824, column: 21, scope: !7451)
!7455 = !DILocation(line: 824, column: 6, scope: !7425)
!7456 = !DILocation(line: 826, column: 14, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7451, file: !7271, line: 824, column: 31)
!7458 = !DILocation(line: 826, column: 19, scope: !7457)
!7459 = !DILocation(line: 826, column: 3, scope: !7457)
!7460 = !DILocation(line: 827, column: 2, scope: !7457)
!7461 = !DILocation(line: 829, column: 9, scope: !7425)
!7462 = !DILocation(line: 829, column: 2, scope: !7425)
!7463 = distinct !DISubprogram(name: "hard_fault", scope: !7271, file: !7271, line: 709, type: !7464, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!173, !3730, !7366}
!7466 = !DILocalVariable(name: "esf", arg: 1, scope: !7463, file: !7271, line: 709, type: !3730)
!7467 = !DILocation(line: 709, column: 42, scope: !7463)
!7468 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7463, file: !7271, line: 709, type: !7366)
!7469 = !DILocation(line: 709, column: 53, scope: !7463)
!7470 = !DILocalVariable(name: "reason", scope: !7463, file: !7271, line: 711, type: !173)
!7471 = !DILocation(line: 711, column: 11, scope: !7463)
!7472 = !DILocation(line: 713, column: 2, scope: !7463)
!7473 = !DILocation(line: 713, column: 2, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !7271, line: 713, column: 2)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !7271, line: 713, column: 2)
!7476 = distinct !DILexicalBlock(scope: !7463, file: !7271, line: 713, column: 2)
!7477 = !DILocation(line: 724, column: 31, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7463, file: !7271, line: 724, column: 6)
!7479 = !DILocation(line: 724, column: 6, scope: !7478)
!7480 = !DILocation(line: 724, column: 6, scope: !7463)
!7481 = !DILocation(line: 726, column: 3, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7478, file: !7271, line: 724, column: 37)
!7483 = !DILocation(line: 726, column: 3, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !7271, line: 726, column: 3)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7271, line: 726, column: 3)
!7486 = distinct !DILexicalBlock(scope: !7482, file: !7271, line: 726, column: 3)
!7487 = !DILocation(line: 727, column: 12, scope: !7482)
!7488 = !DILocation(line: 727, column: 17, scope: !7482)
!7489 = !DILocation(line: 727, column: 23, scope: !7482)
!7490 = !DILocation(line: 727, column: 10, scope: !7482)
!7491 = !DILocation(line: 728, column: 2, scope: !7482)
!7492 = !DILocation(line: 730, column: 42, scope: !7463)
!7493 = !DILocation(line: 730, column: 17, scope: !7463)
!7494 = !DILocation(line: 730, column: 3, scope: !7463)
!7495 = !DILocation(line: 730, column: 15, scope: !7463)
!7496 = !DILocation(line: 766, column: 9, scope: !7463)
!7497 = !DILocation(line: 766, column: 2, scope: !7463)
!7498 = distinct !DISubprogram(name: "reserved_exception", scope: !7271, file: !7271, line: 776, type: !7499, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !7501, !103}
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 32)
!7502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3731)
!7503 = !DILocalVariable(name: "esf", arg: 1, scope: !7498, file: !7271, line: 776, type: !7501)
!7504 = !DILocation(line: 776, column: 52, scope: !7498)
!7505 = !DILocalVariable(name: "fault", arg: 2, scope: !7498, file: !7271, line: 776, type: !103)
!7506 = !DILocation(line: 776, column: 61, scope: !7498)
!7507 = !DILocation(line: 778, column: 2, scope: !7498)
!7508 = !DILocation(line: 780, column: 2, scope: !7498)
!7509 = !DILocation(line: 780, column: 2, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !7271, line: 780, column: 2)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !7271, line: 780, column: 2)
!7512 = distinct !DILexicalBlock(scope: !7498, file: !7271, line: 780, column: 2)
!7513 = !DILocation(line: 783, column: 1, scope: !7498)
!7514 = distinct !DISubprogram(name: "fault_show", scope: !7271, file: !7271, line: 166, type: !7499, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7515 = !DILocalVariable(name: "esf", arg: 1, scope: !7514, file: !7271, line: 166, type: !7501)
!7516 = !DILocation(line: 166, column: 44, scope: !7514)
!7517 = !DILocalVariable(name: "fault", arg: 2, scope: !7514, file: !7271, line: 166, type: !103)
!7518 = !DILocation(line: 166, column: 53, scope: !7514)
!7519 = !DILocation(line: 168, column: 8, scope: !7514)
!7520 = !DILocation(line: 169, column: 8, scope: !7514)
!7521 = !DILocation(line: 170, column: 1, scope: !7514)
!7522 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7271, file: !7271, line: 658, type: !7523, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{!1035, !3730}
!7525 = !DILocalVariable(name: "esf", arg: 1, scope: !7522, file: !7271, line: 658, type: !3730)
!7526 = !DILocation(line: 658, column: 59, scope: !7522)
!7527 = !DILocalVariable(name: "ret_addr", scope: !7522, file: !7271, line: 660, type: !3773)
!7528 = !DILocation(line: 660, column: 12, scope: !7522)
!7529 = !DILocation(line: 660, column: 35, scope: !7522)
!7530 = !DILocation(line: 660, column: 40, scope: !7522)
!7531 = !DILocation(line: 660, column: 46, scope: !7522)
!7532 = !DILocation(line: 660, column: 23, scope: !7522)
!7533 = !DILocalVariable(name: "fault_insn", scope: !7522, file: !7271, line: 680, type: !170)
!7534 = !DILocation(line: 680, column: 11, scope: !7522)
!7535 = !DILocation(line: 680, column: 26, scope: !7522)
!7536 = !DILocation(line: 680, column: 35, scope: !7522)
!7537 = !DILocation(line: 680, column: 24, scope: !7522)
!7538 = !DILocation(line: 693, column: 8, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7522, file: !7271, line: 693, column: 6)
!7540 = !DILocation(line: 693, column: 19, scope: !7539)
!7541 = !DILocation(line: 693, column: 29, scope: !7539)
!7542 = !DILocation(line: 693, column: 45, scope: !7539)
!7543 = !DILocation(line: 694, column: 5, scope: !7539)
!7544 = !DILocation(line: 694, column: 16, scope: !7539)
!7545 = !DILocation(line: 694, column: 26, scope: !7539)
!7546 = !DILocation(line: 693, column: 6, scope: !7522)
!7547 = !DILocation(line: 695, column: 3, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7539, file: !7271, line: 694, column: 56)
!7549 = !DILocation(line: 698, column: 2, scope: !7522)
!7550 = !DILocation(line: 699, column: 1, scope: !7522)
!7551 = distinct !DISubprogram(name: "memory_fault_recoverable", scope: !7271, file: !7271, line: 186, type: !7552, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!1035, !3730, !1035}
!7554 = !DILocalVariable(name: "esf", arg: 1, scope: !7551, file: !7271, line: 186, type: !3730)
!7555 = !DILocation(line: 186, column: 52, scope: !7551)
!7556 = !DILocalVariable(name: "synchronous", arg: 2, scope: !7551, file: !7271, line: 186, type: !1035)
!7557 = !DILocation(line: 186, column: 62, scope: !7551)
!7558 = !DILocation(line: 209, column: 2, scope: !7551)
!7559 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7271, file: !7271, line: 1107, type: !253, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3714, retainedNodes: !223)
!7560 = !DILocation(line: 1136, column: 1, scope: !7559)
!7561 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7562, file: !7562, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3774, retainedNodes: !223)
!7562 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7563 = !DILocalVariable(name: "irq", scope: !7561, file: !7562, line: 28, type: !103)
!7564 = !DILocation(line: 28, column: 6, scope: !7561)
!7565 = !DILocation(line: 30, column: 2, scope: !7561)
!7566 = !DILocation(line: 30, column: 9, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !7562, line: 30, column: 2)
!7568 = distinct !DILexicalBlock(scope: !7561, file: !7562, line: 30, column: 2)
!7569 = !DILocation(line: 30, column: 13, scope: !7567)
!7570 = !DILocation(line: 30, column: 2, scope: !7568)
!7571 = !DILocation(line: 31, column: 31, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7567, file: !7562, line: 30, column: 39)
!7573 = !DILocation(line: 31, column: 3, scope: !7572)
!7574 = !DILocation(line: 32, column: 2, scope: !7572)
!7575 = !DILocation(line: 30, column: 35, scope: !7567)
!7576 = !DILocation(line: 30, column: 2, scope: !7567)
!7577 = distinct !{!7577, !7570, !7578}
!7578 = !DILocation(line: 32, column: 2, scope: !7568)
!7579 = !DILocation(line: 33, column: 1, scope: !7561)
!7580 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2819, file: !2819, line: 850, type: !6985, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3774, retainedNodes: !223)
!7581 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7580, file: !2819, line: 850, type: !3609)
!7582 = !DILocation(line: 850, column: 51, scope: !7580)
!7583 = !DILocalVariable(name: "priority", arg: 2, scope: !7580, file: !2819, line: 850, type: !173)
!7584 = !DILocation(line: 850, column: 66, scope: !7580)
!7585 = !DILocation(line: 852, column: 17, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7580, file: !2819, line: 852, column: 7)
!7587 = !DILocation(line: 852, column: 23, scope: !7586)
!7588 = !DILocation(line: 852, column: 7, scope: !7580)
!7589 = !DILocation(line: 854, column: 53, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7586, file: !2819, line: 853, column: 3)
!7591 = !DILocation(line: 854, column: 44, scope: !7590)
!7592 = !DILocation(line: 854, column: 83, scope: !7590)
!7593 = !DILocation(line: 854, column: 80, scope: !7590)
!7594 = !DILocation(line: 854, column: 71, scope: !7590)
!7595 = !DILocation(line: 854, column: 69, scope: !7590)
!7596 = !DILocation(line: 855, column: 11, scope: !7590)
!7597 = !DILocation(line: 855, column: 20, scope: !7590)
!7598 = !DILocation(line: 855, column: 48, scope: !7590)
!7599 = !DILocation(line: 855, column: 71, scope: !7590)
!7600 = !DILocation(line: 855, column: 68, scope: !7590)
!7601 = !DILocation(line: 854, column: 102, scope: !7590)
!7602 = !DILocation(line: 854, column: 14, scope: !7590)
!7603 = !DILocation(line: 854, column: 5, scope: !7590)
!7604 = !DILocation(line: 854, column: 30, scope: !7590)
!7605 = !DILocation(line: 856, column: 3, scope: !7590)
!7606 = !DILocation(line: 859, column: 53, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7586, file: !2819, line: 858, column: 3)
!7608 = !DILocation(line: 859, column: 44, scope: !7607)
!7609 = !DILocation(line: 859, column: 83, scope: !7607)
!7610 = !DILocation(line: 859, column: 80, scope: !7607)
!7611 = !DILocation(line: 859, column: 71, scope: !7607)
!7612 = !DILocation(line: 859, column: 69, scope: !7607)
!7613 = !DILocation(line: 860, column: 11, scope: !7607)
!7614 = !DILocation(line: 860, column: 20, scope: !7607)
!7615 = !DILocation(line: 860, column: 48, scope: !7607)
!7616 = !DILocation(line: 860, column: 71, scope: !7607)
!7617 = !DILocation(line: 860, column: 68, scope: !7607)
!7618 = !DILocation(line: 859, column: 102, scope: !7607)
!7619 = !DILocation(line: 859, column: 14, scope: !7607)
!7620 = !DILocation(line: 859, column: 5, scope: !7607)
!7621 = !DILocation(line: 859, column: 30, scope: !7607)
!7622 = !DILocation(line: 862, column: 1, scope: !7580)
!7623 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7624, file: !7624, line: 27, type: !7625, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3804, retainedNodes: !223)
!7624 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7625 = !DISubroutineType(types: !7626)
!7626 = !{null, !7627}
!7627 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !7628)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 32)
!7629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !7630)
!7630 = !{!7631, !7689, !7701, !7702, !7703, !7704, !7717}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7629, file: !114, line: 247, baseType: !7632, size: 384)
!7632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !7633)
!7633 = !{!7634, !7658, !7665, !7666, !7667, !7676, !7677, !7678}
!7634 = !DIDerivedType(tag: DW_TAG_member, scope: !7632, file: !114, line: 60, baseType: !7635, size: 64)
!7635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7632, file: !114, line: 60, size: 64, elements: !7636)
!7636 = !{!7637, !7652}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7635, file: !114, line: 61, baseType: !7638, size: 64)
!7638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !7639)
!7639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !7640)
!7640 = !{!7641, !7647}
!7641 = !DIDerivedType(tag: DW_TAG_member, scope: !7639, file: !124, line: 38, baseType: !7642, size: 32)
!7642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7639, file: !124, line: 38, size: 32, elements: !7643)
!7643 = !{!7644, !7646}
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7642, file: !124, line: 39, baseType: !7645, size: 32)
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7639, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7642, file: !124, line: 40, baseType: !7645, size: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, scope: !7639, file: !124, line: 42, baseType: !7648, size: 32, offset: 32)
!7648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7639, file: !124, line: 42, size: 32, elements: !7649)
!7649 = !{!7650, !7651}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7648, file: !124, line: 43, baseType: !7645, size: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7648, file: !124, line: 44, baseType: !7645, size: 32)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7635, file: !114, line: 62, baseType: !7653, size: 64)
!7653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !7654)
!7654 = !{!7655}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7653, file: !140, line: 50, baseType: !7656, size: 64)
!7656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7657, size: 64, elements: !145)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7653, size: 32)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7632, file: !114, line: 68, baseType: !7659, size: 32, offset: 64)
!7659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7660, size: 32)
!7660 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !7661)
!7661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !7662)
!7662 = !{!7663}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7661, file: !150, line: 232, baseType: !7664, size: 64)
!7664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !7639)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7632, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7632, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!7667 = !DIDerivedType(tag: DW_TAG_member, scope: !7632, file: !114, line: 90, baseType: !7668, size: 16, offset: 112)
!7668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7632, file: !114, line: 90, size: 16, elements: !7669)
!7669 = !{!7670, !7675}
!7670 = !DIDerivedType(tag: DW_TAG_member, scope: !7668, file: !114, line: 91, baseType: !7671, size: 16)
!7671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7668, file: !114, line: 91, size: 16, elements: !7672)
!7672 = !{!7673, !7674}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7671, file: !114, line: 96, baseType: !166, size: 8)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7671, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7668, file: !114, line: 100, baseType: !170, size: 16)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7632, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7632, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7632, file: !114, line: 131, baseType: !7679, size: 192, offset: 192)
!7679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !7680)
!7680 = !{!7681, !7682, !7688}
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7679, file: !150, line: 245, baseType: !7638, size: 64)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7679, file: !150, line: 246, baseType: !7683, size: 32, offset: 64)
!7683 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !7684)
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7685, size: 32)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{null, !7687}
!7687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 32)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7679, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7629, file: !114, line: 250, baseType: !7690, size: 288, offset: 384)
!7690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !7691)
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700}
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7690, file: !190, line: 26, baseType: !173, size: 32)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7690, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7690, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7690, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7690, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7690, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7690, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7690, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7690, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7629, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7629, file: !114, line: 256, baseType: !7660, size: 64, offset: 704)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7629, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7629, file: !114, line: 325, baseType: !7705, size: 32, offset: 800)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 32)
!7706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !7707)
!7707 = !{!7708, !7714, !7715}
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7706, file: !109, line: 5074, baseType: !7709, size: 96)
!7709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !7710)
!7710 = !{!7711, !7712, !7713}
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7709, file: !210, line: 57, baseType: !213, size: 32)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7709, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7709, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7706, file: !109, line: 5075, baseType: !7660, size: 64, offset: 96)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7706, file: !109, line: 5076, baseType: !7716, offset: 160)
!7716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7629, file: !114, line: 343, baseType: !7718, size: 64, offset: 832)
!7718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !7719)
!7719 = !{!7720, !7721}
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7718, file: !190, line: 63, baseType: !173, size: 32)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7718, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!7722 = !DILocalVariable(name: "thread", arg: 1, scope: !7623, file: !7624, line: 27, type: !7627)
!7723 = !DILocation(line: 27, column: 36, scope: !7623)
!7724 = !DILocation(line: 29, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7623, file: !7624, line: 29, column: 6)
!7726 = !DILocation(line: 29, column: 18, scope: !7725)
!7727 = !DILocation(line: 29, column: 15, scope: !7725)
!7728 = !DILocation(line: 29, column: 6, scope: !7623)
!7729 = !DILocalVariable(name: "result", scope: !7730, file: !6949, line: 1029, type: !173)
!7730 = distinct !DISubprogram(name: "__get_IPSR", scope: !6949, file: !6949, line: 1027, type: !7731, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3804, retainedNodes: !223)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{!173}
!7733 = !DILocation(line: 1029, column: 12, scope: !7730, inlinedAt: !7734)
!7734 = distinct !DILocation(line: 48, column: 10, scope: !7735, inlinedAt: !7737)
!7735 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7736, file: !7736, line: 46, type: !4065, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3804, retainedNodes: !223)
!7736 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7737 = distinct !DILocation(line: 30, column: 7, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7624, line: 30, column: 7)
!7739 = distinct !DILexicalBlock(scope: !7725, file: !7624, line: 29, column: 26)
!7740 = !DILocation(line: 1031, column: 3, scope: !7730, inlinedAt: !7734)
!7741 = !{i64 2356411}
!7742 = !DILocation(line: 1032, column: 10, scope: !7730, inlinedAt: !7734)
!7743 = !DILocation(line: 48, column: 9, scope: !7735, inlinedAt: !7737)
!7744 = !DILocation(line: 30, column: 7, scope: !7739)
!7745 = !DILocation(line: 42, column: 14, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7738, file: !7624, line: 30, column: 25)
!7747 = !DILocation(line: 48, column: 15, scope: !7746)
!7748 = !DILocation(line: 49, column: 3, scope: !7746)
!7749 = !DILocation(line: 50, column: 2, scope: !7739)
!7750 = !DILocation(line: 52, column: 17, scope: !7623)
!7751 = !DILocation(line: 52, column: 2, scope: !7623)
!7752 = !DILocation(line: 53, column: 1, scope: !7623)
!7753 = distinct !DISubprogram(name: "strcpy", scope: !7754, file: !7754, line: 20, type: !7755, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7754 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!1836, !7757, !7758}
!7757 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1836)
!7758 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7759 = !DILocalVariable(name: "d", arg: 1, scope: !7753, file: !7754, line: 20, type: !7757)
!7760 = !DILocation(line: 20, column: 30, scope: !7753)
!7761 = !DILocalVariable(name: "s", arg: 2, scope: !7753, file: !7754, line: 20, type: !7758)
!7762 = !DILocation(line: 20, column: 55, scope: !7753)
!7763 = !DILocalVariable(name: "dest", scope: !7753, file: !7754, line: 22, type: !1836)
!7764 = !DILocation(line: 22, column: 8, scope: !7753)
!7765 = !DILocation(line: 22, column: 15, scope: !7753)
!7766 = !DILocation(line: 24, column: 2, scope: !7753)
!7767 = !DILocation(line: 24, column: 10, scope: !7753)
!7768 = !DILocation(line: 24, column: 9, scope: !7753)
!7769 = !DILocation(line: 24, column: 12, scope: !7753)
!7770 = !DILocation(line: 25, column: 9, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7753, file: !7754, line: 24, column: 21)
!7772 = !DILocation(line: 25, column: 8, scope: !7771)
!7773 = !DILocation(line: 25, column: 4, scope: !7771)
!7774 = !DILocation(line: 25, column: 6, scope: !7771)
!7775 = !DILocation(line: 26, column: 4, scope: !7771)
!7776 = !DILocation(line: 27, column: 4, scope: !7771)
!7777 = distinct !{!7777, !7766, !7778}
!7778 = !DILocation(line: 28, column: 2, scope: !7753)
!7779 = !DILocation(line: 30, column: 3, scope: !7753)
!7780 = !DILocation(line: 30, column: 5, scope: !7753)
!7781 = !DILocation(line: 32, column: 9, scope: !7753)
!7782 = !DILocation(line: 32, column: 2, scope: !7753)
!7783 = distinct !DISubprogram(name: "strncpy", scope: !7754, file: !7754, line: 42, type: !7784, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!1836, !7757, !7758, !217}
!7786 = !DILocalVariable(name: "d", arg: 1, scope: !7783, file: !7754, line: 42, type: !7757)
!7787 = !DILocation(line: 42, column: 31, scope: !7783)
!7788 = !DILocalVariable(name: "s", arg: 2, scope: !7783, file: !7754, line: 42, type: !7758)
!7789 = !DILocation(line: 42, column: 56, scope: !7783)
!7790 = !DILocalVariable(name: "n", arg: 3, scope: !7783, file: !7754, line: 42, type: !217)
!7791 = !DILocation(line: 42, column: 66, scope: !7783)
!7792 = !DILocalVariable(name: "dest", scope: !7783, file: !7754, line: 44, type: !1836)
!7793 = !DILocation(line: 44, column: 8, scope: !7783)
!7794 = !DILocation(line: 44, column: 15, scope: !7783)
!7795 = !DILocation(line: 46, column: 2, scope: !7783)
!7796 = !DILocation(line: 46, column: 10, scope: !7783)
!7797 = !DILocation(line: 46, column: 12, scope: !7783)
!7798 = !DILocation(line: 46, column: 17, scope: !7783)
!7799 = !DILocation(line: 46, column: 21, scope: !7783)
!7800 = !DILocation(line: 46, column: 20, scope: !7783)
!7801 = !DILocation(line: 46, column: 23, scope: !7783)
!7802 = !DILocation(line: 0, scope: !7783)
!7803 = !DILocation(line: 47, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7783, file: !7754, line: 46, column: 32)
!7805 = !DILocation(line: 47, column: 8, scope: !7804)
!7806 = !DILocation(line: 47, column: 4, scope: !7804)
!7807 = !DILocation(line: 47, column: 6, scope: !7804)
!7808 = !DILocation(line: 48, column: 4, scope: !7804)
!7809 = !DILocation(line: 49, column: 4, scope: !7804)
!7810 = !DILocation(line: 50, column: 4, scope: !7804)
!7811 = distinct !{!7811, !7795, !7812}
!7812 = !DILocation(line: 51, column: 2, scope: !7783)
!7813 = !DILocation(line: 53, column: 2, scope: !7783)
!7814 = !DILocation(line: 53, column: 9, scope: !7783)
!7815 = !DILocation(line: 53, column: 11, scope: !7783)
!7816 = !DILocation(line: 54, column: 4, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7783, file: !7754, line: 53, column: 16)
!7818 = !DILocation(line: 54, column: 6, scope: !7817)
!7819 = !DILocation(line: 55, column: 4, scope: !7817)
!7820 = !DILocation(line: 56, column: 4, scope: !7817)
!7821 = distinct !{!7821, !7813, !7822}
!7822 = !DILocation(line: 57, column: 2, scope: !7783)
!7823 = !DILocation(line: 59, column: 9, scope: !7783)
!7824 = !DILocation(line: 59, column: 2, scope: !7783)
!7825 = distinct !DISubprogram(name: "strchr", scope: !7754, file: !7754, line: 69, type: !7826, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{!1836, !256, !103}
!7828 = !DILocalVariable(name: "s", arg: 1, scope: !7825, file: !7754, line: 69, type: !256)
!7829 = !DILocation(line: 69, column: 26, scope: !7825)
!7830 = !DILocalVariable(name: "c", arg: 2, scope: !7825, file: !7754, line: 69, type: !103)
!7831 = !DILocation(line: 69, column: 33, scope: !7825)
!7832 = !DILocalVariable(name: "tmp", scope: !7825, file: !7754, line: 71, type: !237)
!7833 = !DILocation(line: 71, column: 7, scope: !7825)
!7834 = !DILocation(line: 71, column: 20, scope: !7825)
!7835 = !DILocation(line: 71, column: 13, scope: !7825)
!7836 = !DILocation(line: 73, column: 2, scope: !7825)
!7837 = !DILocation(line: 73, column: 11, scope: !7825)
!7838 = !DILocation(line: 73, column: 10, scope: !7825)
!7839 = !DILocation(line: 73, column: 16, scope: !7825)
!7840 = !DILocation(line: 73, column: 13, scope: !7825)
!7841 = !DILocation(line: 73, column: 21, scope: !7825)
!7842 = !DILocation(line: 73, column: 26, scope: !7825)
!7843 = !DILocation(line: 73, column: 25, scope: !7825)
!7844 = !DILocation(line: 73, column: 28, scope: !7825)
!7845 = !DILocation(line: 0, scope: !7825)
!7846 = !DILocation(line: 74, column: 4, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7825, file: !7754, line: 73, column: 38)
!7848 = distinct !{!7848, !7836, !7849}
!7849 = !DILocation(line: 75, column: 2, scope: !7825)
!7850 = !DILocation(line: 77, column: 11, scope: !7825)
!7851 = !DILocation(line: 77, column: 10, scope: !7825)
!7852 = !DILocation(line: 77, column: 16, scope: !7825)
!7853 = !DILocation(line: 77, column: 13, scope: !7825)
!7854 = !DILocation(line: 77, column: 9, scope: !7825)
!7855 = !DILocation(line: 77, column: 32, scope: !7825)
!7856 = !DILocation(line: 77, column: 2, scope: !7825)
!7857 = distinct !DISubprogram(name: "strrchr", scope: !7754, file: !7754, line: 87, type: !7826, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7858 = !DILocalVariable(name: "s", arg: 1, scope: !7857, file: !7754, line: 87, type: !256)
!7859 = !DILocation(line: 87, column: 27, scope: !7857)
!7860 = !DILocalVariable(name: "c", arg: 2, scope: !7857, file: !7754, line: 87, type: !103)
!7861 = !DILocation(line: 87, column: 34, scope: !7857)
!7862 = !DILocalVariable(name: "match", scope: !7857, file: !7754, line: 89, type: !1836)
!7863 = !DILocation(line: 89, column: 8, scope: !7857)
!7864 = !DILocation(line: 91, column: 2, scope: !7857)
!7865 = !DILocation(line: 92, column: 8, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7754, line: 92, column: 7)
!7867 = distinct !DILexicalBlock(scope: !7857, file: !7754, line: 91, column: 5)
!7868 = !DILocation(line: 92, column: 7, scope: !7866)
!7869 = !DILocation(line: 92, column: 19, scope: !7866)
!7870 = !DILocation(line: 92, column: 13, scope: !7866)
!7871 = !DILocation(line: 92, column: 10, scope: !7866)
!7872 = !DILocation(line: 92, column: 7, scope: !7867)
!7873 = !DILocation(line: 93, column: 20, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7866, file: !7754, line: 92, column: 22)
!7875 = !DILocation(line: 93, column: 10, scope: !7874)
!7876 = !DILocation(line: 94, column: 3, scope: !7874)
!7877 = !DILocation(line: 95, column: 2, scope: !7867)
!7878 = !DILocation(line: 95, column: 13, scope: !7857)
!7879 = !DILocation(line: 95, column: 11, scope: !7857)
!7880 = distinct !{!7880, !7864, !7881}
!7881 = !DILocation(line: 95, column: 15, scope: !7857)
!7882 = !DILocation(line: 97, column: 9, scope: !7857)
!7883 = !DILocation(line: 97, column: 2, scope: !7857)
!7884 = distinct !DISubprogram(name: "strlen", scope: !7754, file: !7754, line: 107, type: !7885, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7885 = !DISubroutineType(types: !7886)
!7886 = !{!217, !256}
!7887 = !DILocalVariable(name: "s", arg: 1, scope: !7884, file: !7754, line: 107, type: !256)
!7888 = !DILocation(line: 107, column: 27, scope: !7884)
!7889 = !DILocalVariable(name: "n", scope: !7884, file: !7754, line: 109, type: !217)
!7890 = !DILocation(line: 109, column: 9, scope: !7884)
!7891 = !DILocation(line: 111, column: 2, scope: !7884)
!7892 = !DILocation(line: 111, column: 10, scope: !7884)
!7893 = !DILocation(line: 111, column: 9, scope: !7884)
!7894 = !DILocation(line: 111, column: 12, scope: !7884)
!7895 = !DILocation(line: 112, column: 4, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7884, file: !7754, line: 111, column: 21)
!7897 = !DILocation(line: 113, column: 4, scope: !7896)
!7898 = distinct !{!7898, !7891, !7899}
!7899 = !DILocation(line: 114, column: 2, scope: !7884)
!7900 = !DILocation(line: 116, column: 9, scope: !7884)
!7901 = !DILocation(line: 116, column: 2, scope: !7884)
!7902 = distinct !DISubprogram(name: "strnlen", scope: !7754, file: !7754, line: 126, type: !7903, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!217, !256, !217}
!7905 = !DILocalVariable(name: "s", arg: 1, scope: !7902, file: !7754, line: 126, type: !256)
!7906 = !DILocation(line: 126, column: 28, scope: !7902)
!7907 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7902, file: !7754, line: 126, type: !217)
!7908 = !DILocation(line: 126, column: 38, scope: !7902)
!7909 = !DILocalVariable(name: "n", scope: !7902, file: !7754, line: 128, type: !217)
!7910 = !DILocation(line: 128, column: 9, scope: !7902)
!7911 = !DILocation(line: 130, column: 2, scope: !7902)
!7912 = !DILocation(line: 130, column: 10, scope: !7902)
!7913 = !DILocation(line: 130, column: 9, scope: !7902)
!7914 = !DILocation(line: 130, column: 12, scope: !7902)
!7915 = !DILocation(line: 130, column: 20, scope: !7902)
!7916 = !DILocation(line: 130, column: 23, scope: !7902)
!7917 = !DILocation(line: 130, column: 27, scope: !7902)
!7918 = !DILocation(line: 130, column: 25, scope: !7902)
!7919 = !DILocation(line: 0, scope: !7902)
!7920 = !DILocation(line: 131, column: 4, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7902, file: !7754, line: 130, column: 35)
!7922 = !DILocation(line: 132, column: 4, scope: !7921)
!7923 = distinct !{!7923, !7911, !7924}
!7924 = !DILocation(line: 133, column: 2, scope: !7902)
!7925 = !DILocation(line: 135, column: 9, scope: !7902)
!7926 = !DILocation(line: 135, column: 2, scope: !7902)
!7927 = distinct !DISubprogram(name: "strcmp", scope: !7754, file: !7754, line: 145, type: !7928, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!103, !256, !256}
!7930 = !DILocalVariable(name: "s1", arg: 1, scope: !7927, file: !7754, line: 145, type: !256)
!7931 = !DILocation(line: 145, column: 24, scope: !7927)
!7932 = !DILocalVariable(name: "s2", arg: 2, scope: !7927, file: !7754, line: 145, type: !256)
!7933 = !DILocation(line: 145, column: 40, scope: !7927)
!7934 = !DILocation(line: 147, column: 2, scope: !7927)
!7935 = !DILocation(line: 147, column: 11, scope: !7927)
!7936 = !DILocation(line: 147, column: 10, scope: !7927)
!7937 = !DILocation(line: 147, column: 18, scope: !7927)
!7938 = !DILocation(line: 147, column: 17, scope: !7927)
!7939 = !DILocation(line: 147, column: 14, scope: !7927)
!7940 = !DILocation(line: 147, column: 22, scope: !7927)
!7941 = !DILocation(line: 147, column: 27, scope: !7927)
!7942 = !DILocation(line: 147, column: 26, scope: !7927)
!7943 = !DILocation(line: 147, column: 30, scope: !7927)
!7944 = !DILocation(line: 0, scope: !7927)
!7945 = !DILocation(line: 148, column: 5, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7927, file: !7754, line: 147, column: 40)
!7947 = !DILocation(line: 149, column: 5, scope: !7946)
!7948 = distinct !{!7948, !7934, !7949}
!7949 = !DILocation(line: 150, column: 2, scope: !7927)
!7950 = !DILocation(line: 152, column: 10, scope: !7927)
!7951 = !DILocation(line: 152, column: 9, scope: !7927)
!7952 = !DILocation(line: 152, column: 16, scope: !7927)
!7953 = !DILocation(line: 152, column: 15, scope: !7927)
!7954 = !DILocation(line: 152, column: 13, scope: !7927)
!7955 = !DILocation(line: 152, column: 2, scope: !7927)
!7956 = distinct !DISubprogram(name: "strncmp", scope: !7754, file: !7754, line: 162, type: !7957, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!103, !256, !256, !217}
!7959 = !DILocalVariable(name: "s1", arg: 1, scope: !7956, file: !7754, line: 162, type: !256)
!7960 = !DILocation(line: 162, column: 25, scope: !7956)
!7961 = !DILocalVariable(name: "s2", arg: 2, scope: !7956, file: !7754, line: 162, type: !256)
!7962 = !DILocation(line: 162, column: 41, scope: !7956)
!7963 = !DILocalVariable(name: "n", arg: 3, scope: !7956, file: !7754, line: 162, type: !217)
!7964 = !DILocation(line: 162, column: 52, scope: !7956)
!7965 = !DILocation(line: 164, column: 2, scope: !7956)
!7966 = !DILocation(line: 164, column: 10, scope: !7956)
!7967 = !DILocation(line: 164, column: 12, scope: !7956)
!7968 = !DILocation(line: 164, column: 17, scope: !7956)
!7969 = !DILocation(line: 164, column: 22, scope: !7956)
!7970 = !DILocation(line: 164, column: 21, scope: !7956)
!7971 = !DILocation(line: 164, column: 29, scope: !7956)
!7972 = !DILocation(line: 164, column: 28, scope: !7956)
!7973 = !DILocation(line: 164, column: 25, scope: !7956)
!7974 = !DILocation(line: 164, column: 33, scope: !7956)
!7975 = !DILocation(line: 164, column: 38, scope: !7956)
!7976 = !DILocation(line: 164, column: 37, scope: !7956)
!7977 = !DILocation(line: 164, column: 41, scope: !7956)
!7978 = !DILocation(line: 0, scope: !7956)
!7979 = !DILocation(line: 165, column: 5, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7956, file: !7754, line: 164, column: 51)
!7981 = !DILocation(line: 166, column: 5, scope: !7980)
!7982 = !DILocation(line: 167, column: 4, scope: !7980)
!7983 = distinct !{!7983, !7965, !7984}
!7984 = !DILocation(line: 168, column: 2, scope: !7956)
!7985 = !DILocation(line: 170, column: 10, scope: !7956)
!7986 = !DILocation(line: 170, column: 12, scope: !7956)
!7987 = !DILocation(line: 170, column: 9, scope: !7956)
!7988 = !DILocation(line: 170, column: 26, scope: !7956)
!7989 = !DILocation(line: 170, column: 25, scope: !7956)
!7990 = !DILocation(line: 170, column: 32, scope: !7956)
!7991 = !DILocation(line: 170, column: 31, scope: !7956)
!7992 = !DILocation(line: 170, column: 29, scope: !7956)
!7993 = !DILocation(line: 170, column: 2, scope: !7956)
!7994 = distinct !DISubprogram(name: "strtok_r", scope: !7754, file: !7754, line: 180, type: !7995, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{!1836, !1836, !256, !7997}
!7997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!7998 = !DILocalVariable(name: "str", arg: 1, scope: !7994, file: !7754, line: 180, type: !1836)
!7999 = !DILocation(line: 180, column: 22, scope: !7994)
!8000 = !DILocalVariable(name: "sep", arg: 2, scope: !7994, file: !7754, line: 180, type: !256)
!8001 = !DILocation(line: 180, column: 39, scope: !7994)
!8002 = !DILocalVariable(name: "state", arg: 3, scope: !7994, file: !7754, line: 180, type: !7997)
!8003 = !DILocation(line: 180, column: 51, scope: !7994)
!8004 = !DILocalVariable(name: "start", scope: !7994, file: !7754, line: 182, type: !1836)
!8005 = !DILocation(line: 182, column: 8, scope: !7994)
!8006 = !DILocalVariable(name: "end", scope: !7994, file: !7754, line: 182, type: !1836)
!8007 = !DILocation(line: 182, column: 16, scope: !7994)
!8008 = !DILocation(line: 184, column: 10, scope: !7994)
!8009 = !DILocation(line: 184, column: 16, scope: !7994)
!8010 = !DILocation(line: 184, column: 23, scope: !7994)
!8011 = !DILocation(line: 184, column: 22, scope: !7994)
!8012 = !DILocation(line: 184, column: 8, scope: !7994)
!8013 = !DILocation(line: 187, column: 2, scope: !7994)
!8014 = !DILocation(line: 187, column: 10, scope: !7994)
!8015 = !DILocation(line: 187, column: 9, scope: !7994)
!8016 = !DILocation(line: 187, column: 16, scope: !7994)
!8017 = !DILocation(line: 187, column: 26, scope: !7994)
!8018 = !DILocation(line: 187, column: 32, scope: !7994)
!8019 = !DILocation(line: 187, column: 31, scope: !7994)
!8020 = !DILocation(line: 187, column: 19, scope: !7994)
!8021 = !DILocation(line: 0, scope: !7994)
!8022 = !DILocation(line: 188, column: 8, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !7994, file: !7754, line: 187, column: 40)
!8024 = distinct !{!8024, !8013, !8025}
!8025 = !DILocation(line: 189, column: 2, scope: !7994)
!8026 = !DILocation(line: 191, column: 7, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7994, file: !7754, line: 191, column: 6)
!8028 = !DILocation(line: 191, column: 6, scope: !8027)
!8029 = !DILocation(line: 191, column: 13, scope: !8027)
!8030 = !DILocation(line: 191, column: 6, scope: !7994)
!8031 = !DILocation(line: 192, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8027, file: !7754, line: 191, column: 22)
!8033 = !DILocation(line: 192, column: 4, scope: !8032)
!8034 = !DILocation(line: 192, column: 10, scope: !8032)
!8035 = !DILocation(line: 193, column: 3, scope: !8032)
!8036 = !DILocation(line: 197, column: 8, scope: !7994)
!8037 = !DILocation(line: 197, column: 6, scope: !7994)
!8038 = !DILocation(line: 198, column: 2, scope: !7994)
!8039 = !DILocation(line: 198, column: 10, scope: !7994)
!8040 = !DILocation(line: 198, column: 9, scope: !7994)
!8041 = !DILocation(line: 198, column: 14, scope: !7994)
!8042 = !DILocation(line: 198, column: 25, scope: !7994)
!8043 = !DILocation(line: 198, column: 31, scope: !7994)
!8044 = !DILocation(line: 198, column: 30, scope: !7994)
!8045 = !DILocation(line: 198, column: 18, scope: !7994)
!8046 = !DILocation(line: 198, column: 17, scope: !7994)
!8047 = !DILocation(line: 199, column: 6, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7994, file: !7754, line: 198, column: 37)
!8049 = distinct !{!8049, !8038, !8050}
!8050 = !DILocation(line: 200, column: 2, scope: !7994)
!8051 = !DILocation(line: 202, column: 7, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7994, file: !7754, line: 202, column: 6)
!8053 = !DILocation(line: 202, column: 6, scope: !8052)
!8054 = !DILocation(line: 202, column: 11, scope: !8052)
!8055 = !DILocation(line: 202, column: 6, scope: !7994)
!8056 = !DILocation(line: 203, column: 4, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !7754, line: 202, column: 20)
!8058 = !DILocation(line: 203, column: 8, scope: !8057)
!8059 = !DILocation(line: 204, column: 12, scope: !8057)
!8060 = !DILocation(line: 204, column: 16, scope: !8057)
!8061 = !DILocation(line: 204, column: 4, scope: !8057)
!8062 = !DILocation(line: 204, column: 10, scope: !8057)
!8063 = !DILocation(line: 205, column: 2, scope: !8057)
!8064 = !DILocation(line: 206, column: 12, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8052, file: !7754, line: 205, column: 9)
!8066 = !DILocation(line: 206, column: 4, scope: !8065)
!8067 = !DILocation(line: 206, column: 10, scope: !8065)
!8068 = !DILocation(line: 209, column: 9, scope: !7994)
!8069 = !DILocation(line: 209, column: 2, scope: !7994)
!8070 = !DILocation(line: 210, column: 1, scope: !7994)
!8071 = distinct !DISubprogram(name: "strcat", scope: !7754, file: !7754, line: 212, type: !7755, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8072 = !DILocalVariable(name: "dest", arg: 1, scope: !8071, file: !7754, line: 212, type: !7757)
!8073 = !DILocation(line: 212, column: 30, scope: !8071)
!8074 = !DILocalVariable(name: "src", arg: 2, scope: !8071, file: !7754, line: 212, type: !7758)
!8075 = !DILocation(line: 212, column: 58, scope: !8071)
!8076 = !DILocation(line: 214, column: 9, scope: !8071)
!8077 = !DILocation(line: 214, column: 23, scope: !8071)
!8078 = !DILocation(line: 214, column: 16, scope: !8071)
!8079 = !DILocation(line: 214, column: 14, scope: !8071)
!8080 = !DILocation(line: 214, column: 30, scope: !8071)
!8081 = !DILocation(line: 214, column: 2, scope: !8071)
!8082 = !DILocation(line: 215, column: 9, scope: !8071)
!8083 = !DILocation(line: 215, column: 2, scope: !8071)
!8084 = distinct !DISubprogram(name: "strncat", scope: !7754, file: !7754, line: 218, type: !7784, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8085 = !DILocalVariable(name: "dest", arg: 1, scope: !8084, file: !7754, line: 218, type: !7757)
!8086 = !DILocation(line: 218, column: 31, scope: !8084)
!8087 = !DILocalVariable(name: "src", arg: 2, scope: !8084, file: !7754, line: 218, type: !7758)
!8088 = !DILocation(line: 218, column: 59, scope: !8084)
!8089 = !DILocalVariable(name: "n", arg: 3, scope: !8084, file: !7754, line: 219, type: !217)
!8090 = !DILocation(line: 219, column: 15, scope: !8084)
!8091 = !DILocalVariable(name: "orig_dest", scope: !8084, file: !7754, line: 221, type: !1836)
!8092 = !DILocation(line: 221, column: 8, scope: !8084)
!8093 = !DILocation(line: 221, column: 20, scope: !8084)
!8094 = !DILocalVariable(name: "len", scope: !8084, file: !7754, line: 222, type: !217)
!8095 = !DILocation(line: 222, column: 9, scope: !8084)
!8096 = !DILocation(line: 222, column: 22, scope: !8084)
!8097 = !DILocation(line: 222, column: 15, scope: !8084)
!8098 = !DILocation(line: 224, column: 10, scope: !8084)
!8099 = !DILocation(line: 224, column: 7, scope: !8084)
!8100 = !DILocation(line: 225, column: 2, scope: !8084)
!8101 = !DILocation(line: 225, column: 11, scope: !8084)
!8102 = !DILocation(line: 225, column: 14, scope: !8084)
!8103 = !DILocation(line: 225, column: 19, scope: !8084)
!8104 = !DILocation(line: 225, column: 24, scope: !8084)
!8105 = !DILocation(line: 225, column: 23, scope: !8084)
!8106 = !DILocation(line: 225, column: 28, scope: !8084)
!8107 = !DILocation(line: 0, scope: !8084)
!8108 = !DILocation(line: 226, column: 17, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8084, file: !7754, line: 225, column: 38)
!8110 = !DILocation(line: 226, column: 13, scope: !8109)
!8111 = !DILocation(line: 226, column: 8, scope: !8109)
!8112 = !DILocation(line: 226, column: 11, scope: !8109)
!8113 = distinct !{!8113, !8100, !8114}
!8114 = !DILocation(line: 227, column: 2, scope: !8084)
!8115 = !DILocation(line: 228, column: 3, scope: !8084)
!8116 = !DILocation(line: 228, column: 8, scope: !8084)
!8117 = !DILocation(line: 230, column: 9, scope: !8084)
!8118 = !DILocation(line: 230, column: 2, scope: !8084)
!8119 = distinct !DISubprogram(name: "memcmp", scope: !7754, file: !7754, line: 239, type: !8120, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8120 = !DISubroutineType(types: !8121)
!8121 = !{!103, !13, !13, !217}
!8122 = !DILocalVariable(name: "m1", arg: 1, scope: !8119, file: !7754, line: 239, type: !13)
!8123 = !DILocation(line: 239, column: 24, scope: !8119)
!8124 = !DILocalVariable(name: "m2", arg: 2, scope: !8119, file: !7754, line: 239, type: !13)
!8125 = !DILocation(line: 239, column: 40, scope: !8119)
!8126 = !DILocalVariable(name: "n", arg: 3, scope: !8119, file: !7754, line: 239, type: !217)
!8127 = !DILocation(line: 239, column: 51, scope: !8119)
!8128 = !DILocalVariable(name: "c1", scope: !8119, file: !7754, line: 241, type: !256)
!8129 = !DILocation(line: 241, column: 14, scope: !8119)
!8130 = !DILocation(line: 241, column: 19, scope: !8119)
!8131 = !DILocalVariable(name: "c2", scope: !8119, file: !7754, line: 242, type: !256)
!8132 = !DILocation(line: 242, column: 14, scope: !8119)
!8133 = !DILocation(line: 242, column: 19, scope: !8119)
!8134 = !DILocation(line: 244, column: 7, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8119, file: !7754, line: 244, column: 6)
!8136 = !DILocation(line: 244, column: 6, scope: !8119)
!8137 = !DILocation(line: 245, column: 3, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8135, file: !7754, line: 244, column: 10)
!8139 = !DILocation(line: 248, column: 2, scope: !8119)
!8140 = !DILocation(line: 248, column: 10, scope: !8119)
!8141 = !DILocation(line: 248, column: 14, scope: !8119)
!8142 = !DILocation(line: 248, column: 19, scope: !8119)
!8143 = !DILocation(line: 248, column: 24, scope: !8119)
!8144 = !DILocation(line: 248, column: 23, scope: !8119)
!8145 = !DILocation(line: 248, column: 31, scope: !8119)
!8146 = !DILocation(line: 248, column: 30, scope: !8119)
!8147 = !DILocation(line: 248, column: 27, scope: !8119)
!8148 = !DILocation(line: 0, scope: !8119)
!8149 = !DILocation(line: 249, column: 5, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8119, file: !7754, line: 248, column: 36)
!8151 = !DILocation(line: 250, column: 5, scope: !8150)
!8152 = distinct !{!8152, !8139, !8153}
!8153 = !DILocation(line: 251, column: 2, scope: !8119)
!8154 = !DILocation(line: 253, column: 10, scope: !8119)
!8155 = !DILocation(line: 253, column: 9, scope: !8119)
!8156 = !DILocation(line: 253, column: 16, scope: !8119)
!8157 = !DILocation(line: 253, column: 15, scope: !8119)
!8158 = !DILocation(line: 253, column: 13, scope: !8119)
!8159 = !DILocation(line: 253, column: 2, scope: !8119)
!8160 = !DILocation(line: 254, column: 1, scope: !8119)
!8161 = distinct !DISubprogram(name: "memmove", scope: !7754, file: !7754, line: 263, type: !8162, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!102, !102, !13, !217}
!8164 = !DILocalVariable(name: "d", arg: 1, scope: !8161, file: !7754, line: 263, type: !102)
!8165 = !DILocation(line: 263, column: 21, scope: !8161)
!8166 = !DILocalVariable(name: "s", arg: 2, scope: !8161, file: !7754, line: 263, type: !13)
!8167 = !DILocation(line: 263, column: 36, scope: !8161)
!8168 = !DILocalVariable(name: "n", arg: 3, scope: !8161, file: !7754, line: 263, type: !217)
!8169 = !DILocation(line: 263, column: 46, scope: !8161)
!8170 = !DILocalVariable(name: "dest", scope: !8161, file: !7754, line: 265, type: !1836)
!8171 = !DILocation(line: 265, column: 8, scope: !8161)
!8172 = !DILocation(line: 265, column: 15, scope: !8161)
!8173 = !DILocalVariable(name: "src", scope: !8161, file: !7754, line: 266, type: !256)
!8174 = !DILocation(line: 266, column: 14, scope: !8161)
!8175 = !DILocation(line: 266, column: 21, scope: !8161)
!8176 = !DILocation(line: 268, column: 16, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8161, file: !7754, line: 268, column: 6)
!8178 = !DILocation(line: 268, column: 23, scope: !8177)
!8179 = !DILocation(line: 268, column: 21, scope: !8177)
!8180 = !DILocation(line: 268, column: 30, scope: !8177)
!8181 = !DILocation(line: 268, column: 28, scope: !8177)
!8182 = !DILocation(line: 268, column: 6, scope: !8161)
!8183 = !DILocation(line: 274, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8177, file: !7754, line: 268, column: 33)
!8185 = !DILocation(line: 274, column: 10, scope: !8184)
!8186 = !DILocation(line: 274, column: 12, scope: !8184)
!8187 = !DILocation(line: 275, column: 5, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8184, file: !7754, line: 274, column: 17)
!8189 = !DILocation(line: 276, column: 14, scope: !8188)
!8190 = !DILocation(line: 276, column: 18, scope: !8188)
!8191 = !DILocation(line: 276, column: 4, scope: !8188)
!8192 = !DILocation(line: 276, column: 9, scope: !8188)
!8193 = !DILocation(line: 276, column: 12, scope: !8188)
!8194 = distinct !{!8194, !8183, !8195}
!8195 = !DILocation(line: 277, column: 3, scope: !8184)
!8196 = !DILocation(line: 278, column: 2, scope: !8184)
!8197 = !DILocation(line: 280, column: 3, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8177, file: !7754, line: 278, column: 9)
!8199 = !DILocation(line: 280, column: 10, scope: !8198)
!8200 = !DILocation(line: 280, column: 12, scope: !8198)
!8201 = !DILocation(line: 281, column: 13, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !7754, line: 280, column: 17)
!8203 = !DILocation(line: 281, column: 12, scope: !8202)
!8204 = !DILocation(line: 281, column: 5, scope: !8202)
!8205 = !DILocation(line: 281, column: 10, scope: !8202)
!8206 = !DILocation(line: 282, column: 8, scope: !8202)
!8207 = !DILocation(line: 283, column: 7, scope: !8202)
!8208 = !DILocation(line: 284, column: 5, scope: !8202)
!8209 = distinct !{!8209, !8197, !8210}
!8210 = !DILocation(line: 285, column: 3, scope: !8198)
!8211 = !DILocation(line: 288, column: 9, scope: !8161)
!8212 = !DILocation(line: 288, column: 2, scope: !8161)
!8213 = distinct !DISubprogram(name: "memcpy", scope: !7754, file: !7754, line: 298, type: !8214, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!102, !8216, !8217, !217}
!8216 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8217 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8218 = !DILocalVariable(name: "d", arg: 1, scope: !8213, file: !7754, line: 298, type: !8216)
!8219 = !DILocation(line: 298, column: 30, scope: !8213)
!8220 = !DILocalVariable(name: "s", arg: 2, scope: !8213, file: !7754, line: 298, type: !8217)
!8221 = !DILocation(line: 298, column: 55, scope: !8213)
!8222 = !DILocalVariable(name: "n", arg: 3, scope: !8213, file: !7754, line: 298, type: !217)
!8223 = !DILocation(line: 298, column: 65, scope: !8213)
!8224 = !DILocalVariable(name: "d_byte", scope: !8213, file: !7754, line: 302, type: !1654)
!8225 = !DILocation(line: 302, column: 17, scope: !8213)
!8226 = !DILocation(line: 302, column: 43, scope: !8213)
!8227 = !DILocalVariable(name: "s_byte", scope: !8213, file: !7754, line: 303, type: !3823)
!8228 = !DILocation(line: 303, column: 23, scope: !8213)
!8229 = !DILocation(line: 303, column: 55, scope: !8213)
!8230 = !DILocalVariable(name: "mask", scope: !8213, file: !7754, line: 306, type: !8231)
!8231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!8232 = !DILocation(line: 306, column: 18, scope: !8213)
!8233 = !DILocation(line: 308, column: 19, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8213, file: !7754, line: 308, column: 6)
!8235 = !DILocation(line: 308, column: 8, scope: !8234)
!8236 = !DILocation(line: 308, column: 34, scope: !8234)
!8237 = !DILocation(line: 308, column: 23, scope: !8234)
!8238 = !DILocation(line: 308, column: 21, scope: !8234)
!8239 = !DILocation(line: 308, column: 42, scope: !8234)
!8240 = !DILocation(line: 308, column: 50, scope: !8234)
!8241 = !DILocation(line: 308, column: 6, scope: !8213)
!8242 = !DILocation(line: 312, column: 3, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8234, file: !7754, line: 308, column: 56)
!8244 = !DILocation(line: 312, column: 22, scope: !8243)
!8245 = !DILocation(line: 312, column: 11, scope: !8243)
!8246 = !DILocation(line: 312, column: 30, scope: !8243)
!8247 = !DILocation(line: 313, column: 8, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !7754, line: 313, column: 8)
!8249 = distinct !DILexicalBlock(scope: !8243, file: !7754, line: 312, column: 38)
!8250 = !DILocation(line: 313, column: 10, scope: !8248)
!8251 = !DILocation(line: 313, column: 8, scope: !8249)
!8252 = !DILocation(line: 314, column: 12, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8248, file: !7754, line: 313, column: 16)
!8254 = !DILocation(line: 314, column: 5, scope: !8253)
!8255 = !DILocation(line: 316, column: 26, scope: !8249)
!8256 = !DILocation(line: 316, column: 18, scope: !8249)
!8257 = !DILocation(line: 316, column: 12, scope: !8249)
!8258 = !DILocation(line: 316, column: 16, scope: !8249)
!8259 = !DILocation(line: 317, column: 5, scope: !8249)
!8260 = distinct !{!8260, !8242, !8261}
!8261 = !DILocation(line: 318, column: 3, scope: !8243)
!8262 = !DILocalVariable(name: "d_word", scope: !8243, file: !7754, line: 322, type: !3825)
!8263 = !DILocation(line: 322, column: 15, scope: !8243)
!8264 = !DILocation(line: 322, column: 38, scope: !8243)
!8265 = !DILocation(line: 322, column: 24, scope: !8243)
!8266 = !DILocalVariable(name: "s_word", scope: !8243, file: !7754, line: 323, type: !3828)
!8267 = !DILocation(line: 323, column: 21, scope: !8243)
!8268 = !DILocation(line: 323, column: 50, scope: !8243)
!8269 = !DILocation(line: 323, column: 30, scope: !8243)
!8270 = !DILocation(line: 325, column: 3, scope: !8243)
!8271 = !DILocation(line: 325, column: 10, scope: !8243)
!8272 = !DILocation(line: 325, column: 12, scope: !8243)
!8273 = !DILocation(line: 326, column: 26, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8243, file: !7754, line: 325, column: 35)
!8275 = !DILocation(line: 326, column: 18, scope: !8274)
!8276 = !DILocation(line: 326, column: 12, scope: !8274)
!8277 = !DILocation(line: 326, column: 16, scope: !8274)
!8278 = !DILocation(line: 327, column: 6, scope: !8274)
!8279 = distinct !{!8279, !8270, !8280}
!8280 = !DILocation(line: 328, column: 3, scope: !8243)
!8281 = !DILocation(line: 330, column: 29, scope: !8243)
!8282 = !DILocation(line: 330, column: 12, scope: !8243)
!8283 = !DILocation(line: 330, column: 10, scope: !8243)
!8284 = !DILocation(line: 331, column: 29, scope: !8243)
!8285 = !DILocation(line: 331, column: 12, scope: !8243)
!8286 = !DILocation(line: 331, column: 10, scope: !8243)
!8287 = !DILocation(line: 332, column: 2, scope: !8243)
!8288 = !DILocation(line: 337, column: 2, scope: !8213)
!8289 = !DILocation(line: 337, column: 9, scope: !8213)
!8290 = !DILocation(line: 337, column: 11, scope: !8213)
!8291 = !DILocation(line: 338, column: 25, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8213, file: !7754, line: 337, column: 16)
!8293 = !DILocation(line: 338, column: 17, scope: !8292)
!8294 = !DILocation(line: 338, column: 11, scope: !8292)
!8295 = !DILocation(line: 338, column: 15, scope: !8292)
!8296 = !DILocation(line: 339, column: 4, scope: !8292)
!8297 = distinct !{!8297, !8288, !8298}
!8298 = !DILocation(line: 340, column: 2, scope: !8213)
!8299 = !DILocation(line: 342, column: 9, scope: !8213)
!8300 = !DILocation(line: 342, column: 2, scope: !8213)
!8301 = !DILocation(line: 343, column: 1, scope: !8213)
!8302 = distinct !DISubprogram(name: "memset", scope: !7754, file: !7754, line: 352, type: !8303, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!102, !102, !103, !217}
!8305 = !DILocalVariable(name: "buf", arg: 1, scope: !8302, file: !7754, line: 352, type: !102)
!8306 = !DILocation(line: 352, column: 20, scope: !8302)
!8307 = !DILocalVariable(name: "c", arg: 2, scope: !8302, file: !7754, line: 352, type: !103)
!8308 = !DILocation(line: 352, column: 29, scope: !8302)
!8309 = !DILocalVariable(name: "n", arg: 3, scope: !8302, file: !7754, line: 352, type: !217)
!8310 = !DILocation(line: 352, column: 39, scope: !8302)
!8311 = !DILocalVariable(name: "d_byte", scope: !8302, file: !7754, line: 356, type: !1654)
!8312 = !DILocation(line: 356, column: 17, scope: !8302)
!8313 = !DILocation(line: 356, column: 43, scope: !8302)
!8314 = !DILocalVariable(name: "c_byte", scope: !8302, file: !7754, line: 357, type: !157)
!8315 = !DILocation(line: 357, column: 16, scope: !8302)
!8316 = !DILocation(line: 357, column: 40, scope: !8302)
!8317 = !DILocation(line: 357, column: 25, scope: !8302)
!8318 = !DILocation(line: 360, column: 2, scope: !8302)
!8319 = !DILocation(line: 360, column: 21, scope: !8302)
!8320 = !DILocation(line: 360, column: 10, scope: !8302)
!8321 = !DILocation(line: 360, column: 29, scope: !8302)
!8322 = !DILocation(line: 361, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !7754, line: 361, column: 7)
!8324 = distinct !DILexicalBlock(scope: !8302, file: !7754, line: 360, column: 57)
!8325 = !DILocation(line: 361, column: 9, scope: !8323)
!8326 = !DILocation(line: 361, column: 7, scope: !8324)
!8327 = !DILocation(line: 362, column: 11, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8323, file: !7754, line: 361, column: 15)
!8329 = !DILocation(line: 362, column: 4, scope: !8328)
!8330 = !DILocation(line: 364, column: 17, scope: !8324)
!8331 = !DILocation(line: 364, column: 11, scope: !8324)
!8332 = !DILocation(line: 364, column: 15, scope: !8324)
!8333 = !DILocation(line: 365, column: 4, scope: !8324)
!8334 = distinct !{!8334, !8318, !8335}
!8335 = !DILocation(line: 366, column: 2, scope: !8302)
!8336 = !DILocalVariable(name: "d_word", scope: !8302, file: !7754, line: 370, type: !3825)
!8337 = !DILocation(line: 370, column: 14, scope: !8302)
!8338 = !DILocation(line: 370, column: 37, scope: !8302)
!8339 = !DILocation(line: 370, column: 23, scope: !8302)
!8340 = !DILocalVariable(name: "c_word", scope: !8302, file: !7754, line: 371, type: !3826)
!8341 = !DILocation(line: 371, column: 13, scope: !8302)
!8342 = !DILocation(line: 371, column: 34, scope: !8302)
!8343 = !DILocation(line: 371, column: 22, scope: !8302)
!8344 = !DILocation(line: 373, column: 12, scope: !8302)
!8345 = !DILocation(line: 373, column: 19, scope: !8302)
!8346 = !DILocation(line: 373, column: 9, scope: !8302)
!8347 = !DILocation(line: 374, column: 12, scope: !8302)
!8348 = !DILocation(line: 374, column: 19, scope: !8302)
!8349 = !DILocation(line: 374, column: 9, scope: !8302)
!8350 = !DILocation(line: 379, column: 2, scope: !8302)
!8351 = !DILocation(line: 379, column: 9, scope: !8302)
!8352 = !DILocation(line: 379, column: 11, scope: !8302)
!8353 = !DILocation(line: 380, column: 17, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8302, file: !7754, line: 379, column: 34)
!8355 = !DILocation(line: 380, column: 11, scope: !8354)
!8356 = !DILocation(line: 380, column: 15, scope: !8354)
!8357 = !DILocation(line: 381, column: 5, scope: !8354)
!8358 = distinct !{!8358, !8350, !8359}
!8359 = !DILocation(line: 382, column: 2, scope: !8302)
!8360 = !DILocation(line: 386, column: 28, scope: !8302)
!8361 = !DILocation(line: 386, column: 11, scope: !8302)
!8362 = !DILocation(line: 386, column: 9, scope: !8302)
!8363 = !DILocation(line: 389, column: 2, scope: !8302)
!8364 = !DILocation(line: 389, column: 9, scope: !8302)
!8365 = !DILocation(line: 389, column: 11, scope: !8302)
!8366 = !DILocation(line: 390, column: 17, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8302, file: !7754, line: 389, column: 16)
!8368 = !DILocation(line: 390, column: 11, scope: !8367)
!8369 = !DILocation(line: 390, column: 15, scope: !8367)
!8370 = !DILocation(line: 391, column: 4, scope: !8367)
!8371 = distinct !{!8371, !8363, !8372}
!8372 = !DILocation(line: 392, column: 2, scope: !8302)
!8373 = !DILocation(line: 394, column: 9, scope: !8302)
!8374 = !DILocation(line: 394, column: 2, scope: !8302)
!8375 = !DILocation(line: 395, column: 1, scope: !8302)
!8376 = distinct !DISubprogram(name: "memchr", scope: !7754, file: !7754, line: 404, type: !8377, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3820, retainedNodes: !223)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{!102, !13, !103, !217}
!8379 = !DILocalVariable(name: "s", arg: 1, scope: !8376, file: !7754, line: 404, type: !13)
!8380 = !DILocation(line: 404, column: 26, scope: !8376)
!8381 = !DILocalVariable(name: "c", arg: 2, scope: !8376, file: !7754, line: 404, type: !103)
!8382 = !DILocation(line: 404, column: 33, scope: !8376)
!8383 = !DILocalVariable(name: "n", arg: 3, scope: !8376, file: !7754, line: 404, type: !217)
!8384 = !DILocation(line: 404, column: 43, scope: !8376)
!8385 = !DILocation(line: 406, column: 6, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8376, file: !7754, line: 406, column: 6)
!8387 = !DILocation(line: 406, column: 8, scope: !8386)
!8388 = !DILocation(line: 406, column: 6, scope: !8376)
!8389 = !DILocalVariable(name: "p", scope: !8390, file: !7754, line: 407, type: !3823)
!8390 = distinct !DILexicalBlock(scope: !8386, file: !7754, line: 406, column: 14)
!8391 = !DILocation(line: 407, column: 24, scope: !8390)
!8392 = !DILocation(line: 407, column: 28, scope: !8390)
!8393 = !DILocation(line: 409, column: 3, scope: !8390)
!8394 = !DILocation(line: 410, column: 10, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !7754, line: 410, column: 8)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !7754, line: 409, column: 6)
!8397 = !DILocation(line: 410, column: 8, scope: !8395)
!8398 = !DILocation(line: 410, column: 31, scope: !8395)
!8399 = !DILocation(line: 410, column: 16, scope: !8395)
!8400 = !DILocation(line: 410, column: 13, scope: !8395)
!8401 = !DILocation(line: 410, column: 8, scope: !8396)
!8402 = !DILocation(line: 411, column: 22, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8395, file: !7754, line: 410, column: 34)
!8404 = !DILocation(line: 411, column: 24, scope: !8403)
!8405 = !DILocation(line: 411, column: 5, scope: !8403)
!8406 = !DILocation(line: 414, column: 3, scope: !8396)
!8407 = !DILocation(line: 414, column: 12, scope: !8390)
!8408 = !DILocation(line: 414, column: 16, scope: !8390)
!8409 = distinct !{!8409, !8393, !8410}
!8410 = !DILocation(line: 414, column: 20, scope: !8390)
!8411 = !DILocation(line: 415, column: 2, scope: !8390)
!8412 = !DILocation(line: 417, column: 2, scope: !8376)
!8413 = !DILocation(line: 418, column: 1, scope: !8376)
!8414 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1053, file: !1053, line: 23, type: !4009, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8415 = !DILocalVariable(name: "hook", arg: 1, scope: !8414, file: !1053, line: 23, type: !273)
!8416 = !DILocation(line: 23, column: 34, scope: !8414)
!8417 = !DILocation(line: 25, column: 17, scope: !8414)
!8418 = !DILocation(line: 25, column: 15, scope: !8414)
!8419 = !DILocation(line: 26, column: 1, scope: !8414)
!8420 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1053, file: !1053, line: 14, type: !274, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8421 = !DILocalVariable(name: "c", arg: 1, scope: !8420, file: !1053, line: 14, type: !103)
!8422 = !DILocation(line: 14, column: 37, scope: !8420)
!8423 = !DILocation(line: 16, column: 9, scope: !8420)
!8424 = !DILocation(line: 18, column: 2, scope: !8420)
!8425 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1053, file: !1053, line: 28, type: !8426, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!103, !103, !1049}
!8428 = !DILocalVariable(name: "c", arg: 1, scope: !8425, file: !1053, line: 28, type: !103)
!8429 = !DILocation(line: 28, column: 29, scope: !8425)
!8430 = !DILocalVariable(name: "stream", arg: 2, scope: !8425, file: !1053, line: 28, type: !1049)
!8431 = !DILocation(line: 28, column: 38, scope: !8425)
!8432 = !DILocation(line: 30, column: 10, scope: !8425)
!8433 = !DILocation(line: 30, column: 17, scope: !8425)
!8434 = !DILocation(line: 30, column: 27, scope: !8425)
!8435 = !DILocation(line: 30, column: 30, scope: !8425)
!8436 = !DILocation(line: 30, column: 37, scope: !8425)
!8437 = !DILocation(line: 30, column: 9, scope: !8425)
!8438 = !DILocation(line: 30, column: 50, scope: !8425)
!8439 = !DILocation(line: 30, column: 63, scope: !8425)
!8440 = !DILocation(line: 30, column: 2, scope: !8425)
!8441 = distinct !DISubprogram(name: "fputc", scope: !1053, file: !1053, line: 41, type: !8426, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8442 = !DILocalVariable(name: "c", arg: 1, scope: !8441, file: !1053, line: 41, type: !103)
!8443 = !DILocation(line: 41, column: 15, scope: !8441)
!8444 = !DILocalVariable(name: "stream", arg: 2, scope: !8441, file: !1053, line: 41, type: !1049)
!8445 = !DILocation(line: 41, column: 24, scope: !8441)
!8446 = !DILocation(line: 43, column: 22, scope: !8441)
!8447 = !DILocation(line: 43, column: 25, scope: !8441)
!8448 = !DILocation(line: 43, column: 9, scope: !8441)
!8449 = !DILocation(line: 43, column: 2, scope: !8441)
!8450 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8451, file: !8451, line: 72, type: !8426, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8451 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!8452 = !DILocalVariable(name: "c", arg: 1, scope: !8450, file: !8451, line: 72, type: !103)
!8453 = !DILocation(line: 72, column: 36, scope: !8450)
!8454 = !DILocalVariable(name: "stream", arg: 2, scope: !8450, file: !8451, line: 72, type: !1049)
!8455 = !DILocation(line: 72, column: 46, scope: !8450)
!8456 = !DILocation(line: 81, column: 2, scope: !8450)
!8457 = !DILocation(line: 81, column: 2, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8450, file: !8451, line: 81, column: 2)
!8459 = !{i64 2149725896}
!8460 = !DILocation(line: 82, column: 29, scope: !8450)
!8461 = !DILocation(line: 82, column: 32, scope: !8450)
!8462 = !DILocation(line: 82, column: 9, scope: !8450)
!8463 = !DILocation(line: 82, column: 2, scope: !8450)
!8464 = distinct !DISubprogram(name: "fputs", scope: !1053, file: !1053, line: 46, type: !8465, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{!103, !7758, !8467}
!8467 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1049)
!8468 = !DILocalVariable(name: "s", arg: 1, scope: !8464, file: !1053, line: 46, type: !7758)
!8469 = !DILocation(line: 46, column: 33, scope: !8464)
!8470 = !DILocalVariable(name: "stream", arg: 2, scope: !8464, file: !1053, line: 46, type: !8467)
!8471 = !DILocation(line: 46, column: 52, scope: !8464)
!8472 = !DILocalVariable(name: "len", scope: !8464, file: !1053, line: 48, type: !103)
!8473 = !DILocation(line: 48, column: 6, scope: !8464)
!8474 = !DILocation(line: 48, column: 19, scope: !8464)
!8475 = !DILocation(line: 48, column: 12, scope: !8464)
!8476 = !DILocalVariable(name: "ret", scope: !8464, file: !1053, line: 49, type: !103)
!8477 = !DILocation(line: 49, column: 6, scope: !8464)
!8478 = !DILocation(line: 51, column: 15, scope: !8464)
!8479 = !DILocation(line: 51, column: 21, scope: !8464)
!8480 = !DILocation(line: 51, column: 26, scope: !8464)
!8481 = !DILocation(line: 51, column: 8, scope: !8464)
!8482 = !DILocation(line: 51, column: 6, scope: !8464)
!8483 = !DILocation(line: 53, column: 9, scope: !8464)
!8484 = !DILocation(line: 53, column: 16, scope: !8464)
!8485 = !DILocation(line: 53, column: 13, scope: !8464)
!8486 = !DILocation(line: 53, column: 2, scope: !8464)
!8487 = distinct !DISubprogram(name: "fwrite", scope: !1053, file: !1053, line: 99, type: !8488, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!217, !8217, !217, !217, !8467}
!8490 = !DILocalVariable(name: "ptr", arg: 1, scope: !8487, file: !1053, line: 99, type: !8217)
!8491 = !DILocation(line: 99, column: 37, scope: !8487)
!8492 = !DILocalVariable(name: "size", arg: 2, scope: !8487, file: !1053, line: 99, type: !217)
!8493 = !DILocation(line: 99, column: 49, scope: !8487)
!8494 = !DILocalVariable(name: "nitems", arg: 3, scope: !8487, file: !1053, line: 99, type: !217)
!8495 = !DILocation(line: 99, column: 62, scope: !8487)
!8496 = !DILocalVariable(name: "stream", arg: 4, scope: !8487, file: !1053, line: 100, type: !8467)
!8497 = !DILocation(line: 100, column: 22, scope: !8487)
!8498 = !DILocation(line: 102, column: 23, scope: !8487)
!8499 = !DILocation(line: 102, column: 28, scope: !8487)
!8500 = !DILocation(line: 102, column: 34, scope: !8487)
!8501 = !DILocation(line: 102, column: 42, scope: !8487)
!8502 = !DILocation(line: 102, column: 9, scope: !8487)
!8503 = !DILocation(line: 102, column: 2, scope: !8487)
!8504 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8451, file: !8451, line: 96, type: !8488, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8505 = !DILocalVariable(name: "ptr", arg: 1, scope: !8504, file: !8451, line: 96, type: !8217)
!8506 = !DILocation(line: 96, column: 58, scope: !8504)
!8507 = !DILocalVariable(name: "size", arg: 2, scope: !8504, file: !8451, line: 96, type: !217)
!8508 = !DILocation(line: 96, column: 70, scope: !8504)
!8509 = !DILocalVariable(name: "nitems", arg: 3, scope: !8504, file: !8451, line: 96, type: !217)
!8510 = !DILocation(line: 96, column: 83, scope: !8504)
!8511 = !DILocalVariable(name: "stream", arg: 4, scope: !8504, file: !8451, line: 96, type: !8467)
!8512 = !DILocation(line: 96, column: 107, scope: !8504)
!8513 = !DILocation(line: 107, column: 2, scope: !8504)
!8514 = !DILocation(line: 107, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8504, file: !8451, line: 107, column: 2)
!8516 = !{i64 2149726000}
!8517 = !DILocation(line: 108, column: 30, scope: !8504)
!8518 = !DILocation(line: 108, column: 35, scope: !8504)
!8519 = !DILocation(line: 108, column: 41, scope: !8504)
!8520 = !DILocation(line: 108, column: 49, scope: !8504)
!8521 = !DILocation(line: 108, column: 9, scope: !8504)
!8522 = !DILocation(line: 108, column: 2, scope: !8504)
!8523 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1053, file: !1053, line: 56, type: !8488, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8524 = !DILocalVariable(name: "ptr", arg: 1, scope: !8523, file: !1053, line: 56, type: !8217)
!8525 = !DILocation(line: 56, column: 51, scope: !8523)
!8526 = !DILocalVariable(name: "size", arg: 2, scope: !8523, file: !1053, line: 56, type: !217)
!8527 = !DILocation(line: 56, column: 63, scope: !8523)
!8528 = !DILocalVariable(name: "nitems", arg: 3, scope: !8523, file: !1053, line: 57, type: !217)
!8529 = !DILocation(line: 57, column: 15, scope: !8523)
!8530 = !DILocalVariable(name: "stream", arg: 4, scope: !8523, file: !1053, line: 57, type: !8467)
!8531 = !DILocation(line: 57, column: 39, scope: !8523)
!8532 = !DILocalVariable(name: "i", scope: !8523, file: !1053, line: 59, type: !217)
!8533 = !DILocation(line: 59, column: 9, scope: !8523)
!8534 = !DILocalVariable(name: "j", scope: !8523, file: !1053, line: 60, type: !217)
!8535 = !DILocation(line: 60, column: 9, scope: !8523)
!8536 = !DILocalVariable(name: "p", scope: !8523, file: !1053, line: 61, type: !3823)
!8537 = !DILocation(line: 61, column: 23, scope: !8523)
!8538 = !DILocation(line: 63, column: 7, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8523, file: !1053, line: 63, column: 6)
!8540 = !DILocation(line: 63, column: 14, scope: !8539)
!8541 = !DILocation(line: 63, column: 24, scope: !8539)
!8542 = !DILocation(line: 63, column: 27, scope: !8539)
!8543 = !DILocation(line: 63, column: 34, scope: !8539)
!8544 = !DILocation(line: 63, column: 45, scope: !8539)
!8545 = !DILocation(line: 64, column: 7, scope: !8539)
!8546 = !DILocation(line: 64, column: 14, scope: !8539)
!8547 = !DILocation(line: 64, column: 20, scope: !8539)
!8548 = !DILocation(line: 64, column: 24, scope: !8539)
!8549 = !DILocation(line: 64, column: 29, scope: !8539)
!8550 = !DILocation(line: 63, column: 6, scope: !8523)
!8551 = !DILocation(line: 65, column: 3, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8539, file: !1053, line: 64, column: 36)
!8553 = !DILocation(line: 68, column: 6, scope: !8523)
!8554 = !DILocation(line: 68, column: 4, scope: !8523)
!8555 = !DILocation(line: 69, column: 6, scope: !8523)
!8556 = !DILocation(line: 69, column: 4, scope: !8523)
!8557 = !DILocation(line: 70, column: 2, scope: !8523)
!8558 = !DILocation(line: 71, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8523, file: !1053, line: 70, column: 5)
!8560 = !DILocation(line: 71, column: 5, scope: !8559)
!8561 = !DILocation(line: 72, column: 3, scope: !8559)
!8562 = !DILocation(line: 73, column: 8, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !1053, line: 73, column: 8)
!8564 = distinct !DILexicalBlock(scope: !8559, file: !1053, line: 72, column: 6)
!8565 = !DILocation(line: 73, column: 29, scope: !8563)
!8566 = !DILocation(line: 73, column: 27, scope: !8563)
!8567 = !DILocation(line: 73, column: 21, scope: !8563)
!8568 = !DILocation(line: 73, column: 33, scope: !8563)
!8569 = !DILocation(line: 73, column: 8, scope: !8564)
!8570 = !DILocation(line: 74, column: 5, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8563, file: !1053, line: 73, column: 41)
!8572 = !DILocation(line: 76, column: 5, scope: !8564)
!8573 = !DILocation(line: 77, column: 3, scope: !8564)
!8574 = !DILocation(line: 77, column: 12, scope: !8559)
!8575 = !DILocation(line: 77, column: 14, scope: !8559)
!8576 = distinct !{!8576, !8561, !8577}
!8577 = !DILocation(line: 77, column: 17, scope: !8559)
!8578 = !DILocation(line: 79, column: 4, scope: !8559)
!8579 = !DILocation(line: 80, column: 2, scope: !8559)
!8580 = !DILocation(line: 80, column: 11, scope: !8523)
!8581 = !DILocation(line: 80, column: 13, scope: !8523)
!8582 = distinct !{!8582, !8557, !8583}
!8583 = !DILocation(line: 80, column: 16, scope: !8523)
!8584 = !DILabel(scope: !8523, name: "done", file: !1053, line: 82)
!8585 = !DILocation(line: 82, column: 1, scope: !8523)
!8586 = !DILocation(line: 83, column: 10, scope: !8523)
!8587 = !DILocation(line: 83, column: 19, scope: !8523)
!8588 = !DILocation(line: 83, column: 17, scope: !8523)
!8589 = !DILocation(line: 83, column: 2, scope: !8523)
!8590 = !DILocation(line: 84, column: 1, scope: !8523)
!8591 = distinct !DISubprogram(name: "puts", scope: !1053, file: !1053, line: 106, type: !8592, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8592 = !DISubroutineType(types: !8593)
!8593 = !{!103, !256}
!8594 = !DILocalVariable(name: "s", arg: 1, scope: !8591, file: !1053, line: 106, type: !256)
!8595 = !DILocation(line: 106, column: 22, scope: !8591)
!8596 = !DILocation(line: 108, column: 12, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8591, file: !1053, line: 108, column: 6)
!8598 = !DILocation(line: 108, column: 6, scope: !8597)
!8599 = !DILocation(line: 108, column: 23, scope: !8597)
!8600 = !DILocation(line: 108, column: 6, scope: !8591)
!8601 = !DILocation(line: 109, column: 3, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !1053, line: 108, column: 31)
!8603 = !DILocation(line: 112, column: 9, scope: !8591)
!8604 = !DILocation(line: 112, column: 29, scope: !8591)
!8605 = !DILocation(line: 112, column: 2, scope: !8591)
!8606 = !DILocation(line: 113, column: 1, scope: !8591)
!8607 = distinct !DISubprogram(name: "sam0_eic_isr", scope: !1544, file: !1544, line: 51, type: !8608, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{null, !1557}
!8610 = !DILocalVariable(name: "dev", arg: 1, scope: !8607, file: !1544, line: 51, type: !1557)
!8611 = !DILocation(line: 51, column: 47, scope: !8607)
!8612 = !DILocalVariable(name: "dev_data", scope: !8607, file: !1544, line: 53, type: !8613)
!8613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8614)
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!8615 = !DILocation(line: 53, column: 30, scope: !8607)
!8616 = !DILocation(line: 53, column: 41, scope: !8607)
!8617 = !DILocation(line: 53, column: 46, scope: !8607)
!8618 = !DILocalVariable(name: "bits", scope: !8607, file: !1544, line: 54, type: !170)
!8619 = !DILocation(line: 54, column: 11, scope: !8607)
!8620 = !DILocation(line: 54, column: 31, scope: !8607)
!8621 = !DILocation(line: 54, column: 18, scope: !8607)
!8622 = !DILocalVariable(name: "line_index", scope: !8607, file: !1544, line: 55, type: !173)
!8623 = !DILocation(line: 55, column: 11, scope: !8607)
!8624 = !DILocation(line: 58, column: 21, scope: !8607)
!8625 = !DILocation(line: 58, column: 19, scope: !8607)
!8626 = !DILocation(line: 65, column: 6, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8607, file: !1544, line: 65, column: 6)
!8628 = !DILocation(line: 65, column: 11, scope: !8627)
!8629 = !DILocation(line: 65, column: 6, scope: !8607)
!8630 = !DILocation(line: 66, column: 14, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !1544, line: 65, column: 19)
!8632 = !DILocation(line: 67, column: 2, scope: !8631)
!8633 = !DILocation(line: 68, column: 14, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8627, file: !1544, line: 67, column: 9)
!8635 = !DILocation(line: 69, column: 8, scope: !8634)
!8636 = !DILocation(line: 77, column: 2, scope: !8607)
!8637 = !DILocation(line: 77, column: 9, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !1544, line: 77, column: 2)
!8639 = distinct !DILexicalBlock(scope: !8607, file: !1544, line: 77, column: 2)
!8640 = !DILocation(line: 77, column: 2, scope: !8639)
!8641 = !DILocation(line: 78, column: 9, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !1544, line: 78, column: 7)
!8643 = distinct !DILexicalBlock(scope: !8638, file: !1544, line: 77, column: 41)
!8644 = !DILocation(line: 78, column: 14, scope: !8642)
!8645 = !DILocation(line: 78, column: 7, scope: !8643)
!8646 = !DILocation(line: 79, column: 4, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8642, file: !1544, line: 78, column: 20)
!8648 = !DILocalVariable(name: "line_assignment", scope: !8643, file: !1544, line: 87, type: !8649)
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!8650 = !DILocation(line: 87, column: 36, scope: !8643)
!8651 = !DILocation(line: 88, column: 5, scope: !8643)
!8652 = !DILocation(line: 88, column: 15, scope: !8643)
!8653 = !DILocation(line: 88, column: 21, scope: !8643)
!8654 = !DILocalVariable(name: "port_data", scope: !8643, file: !1544, line: 89, type: !8655)
!8655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!8656 = !DILocation(line: 89, column: 30, scope: !8643)
!8657 = !DILocation(line: 90, column: 5, scope: !8643)
!8658 = !DILocation(line: 90, column: 15, scope: !8643)
!8659 = !DILocation(line: 90, column: 21, scope: !8643)
!8660 = !DILocation(line: 90, column: 38, scope: !8643)
!8661 = !DILocation(line: 92, column: 3, scope: !8643)
!8662 = !DILocation(line: 92, column: 14, scope: !8643)
!8663 = !DILocation(line: 92, column: 17, scope: !8643)
!8664 = !DILocation(line: 92, column: 44, scope: !8643)
!8665 = !DILocation(line: 92, column: 55, scope: !8643)
!8666 = !DILocation(line: 93, column: 2, scope: !8643)
!8667 = !DILocation(line: 77, column: 20, scope: !8638)
!8668 = !DILocation(line: 77, column: 37, scope: !8638)
!8669 = !DILocation(line: 77, column: 2, scope: !8638)
!8670 = distinct !{!8670, !8640, !8671}
!8671 = !DILocation(line: 93, column: 2, scope: !8639)
!8672 = !DILocation(line: 94, column: 1, scope: !8607)
!8673 = !DILocalVariable(name: "dev", arg: 1, scope: !1605, file: !1544, line: 335, type: !1557)
!8674 = !DILocation(line: 335, column: 47, scope: !1605)
!8675 = !DILocation(line: 337, column: 2, scope: !1605)
!8676 = !DILocation(line: 348, column: 24, scope: !1605)
!8677 = !DILocation(line: 351, column: 20, scope: !1605)
!8678 = !DILocation(line: 356, column: 2, scope: !1605)
!8679 = !DILocation(line: 356, column: 2, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !1544, line: 356, column: 2)
!8681 = distinct !DILexicalBlock(scope: !1605, file: !1544, line: 356, column: 2)
!8682 = !DILocation(line: 356, column: 2, scope: !8681)
!8683 = !DILocation(line: 404, column: 2, scope: !1605)
!8684 = !DILocation(line: 405, column: 2, scope: !1605)
!8685 = !DILocation(line: 407, column: 2, scope: !1605)
!8686 = distinct !DISubprogram(name: "set_eic_enable", scope: !1544, file: !1544, line: 42, type: !8687, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{null, !1035}
!8689 = !DILocalVariable(name: "on", arg: 1, scope: !8686, file: !1544, line: 42, type: !1035)
!8690 = !DILocation(line: 42, column: 40, scope: !8686)
!8691 = !DILocation(line: 47, column: 25, scope: !8686)
!8692 = !DILocation(line: 47, column: 23, scope: !8686)
!8693 = !DILocation(line: 49, column: 1, scope: !8686)
!8694 = distinct !DISubprogram(name: "wait_synchronization", scope: !1544, file: !1544, line: 31, type: !253, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8695 = !DILocation(line: 37, column: 2, scope: !8694)
!8696 = !DILocation(line: 37, column: 25, scope: !8694)
!8697 = distinct !{!8697, !8695, !8698}
!8698 = !DILocation(line: 38, column: 2, scope: !8694)
!8699 = !DILocation(line: 40, column: 1, scope: !8694)
!8700 = distinct !DISubprogram(name: "sam0_eic_acquire", scope: !1544, file: !1544, line: 96, type: !8701, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8701 = !DISubroutineType(types: !8702)
!8702 = !{!103, !103, !103, !1059, !1035, !1582, !102}
!8703 = !DILocalVariable(name: "port", arg: 1, scope: !8700, file: !1544, line: 96, type: !103)
!8704 = !DILocation(line: 96, column: 26, scope: !8700)
!8705 = !DILocalVariable(name: "pin", arg: 2, scope: !8700, file: !1544, line: 96, type: !103)
!8706 = !DILocation(line: 96, column: 36, scope: !8700)
!8707 = !DILocalVariable(name: "trigger", arg: 3, scope: !8700, file: !1544, line: 96, type: !1059)
!8708 = !DILocation(line: 96, column: 63, scope: !8700)
!8709 = !DILocalVariable(name: "filter", arg: 4, scope: !8700, file: !1544, line: 97, type: !1035)
!8710 = !DILocation(line: 97, column: 13, scope: !8700)
!8711 = !DILocalVariable(name: "cb", arg: 5, scope: !8700, file: !1544, line: 97, type: !1582)
!8712 = !DILocation(line: 97, column: 41, scope: !8700)
!8713 = !DILocalVariable(name: "data", arg: 6, scope: !8700, file: !1544, line: 97, type: !102)
!8714 = !DILocation(line: 97, column: 51, scope: !8700)
!8715 = !DILocalVariable(name: "dev", scope: !8700, file: !1544, line: 99, type: !8716)
!8716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!8717 = !DILocation(line: 99, column: 29, scope: !8700)
!8718 = !DILocalVariable(name: "dev_data", scope: !8700, file: !1544, line: 100, type: !8614)
!8719 = !DILocation(line: 100, column: 24, scope: !8700)
!8720 = !DILocation(line: 100, column: 40, scope: !8700)
!8721 = !DILocation(line: 100, column: 35, scope: !8700)
!8722 = !DILocalVariable(name: "port_data", scope: !8700, file: !1544, line: 101, type: !8655)
!8723 = !DILocation(line: 101, column: 29, scope: !8700)
!8724 = !DILocalVariable(name: "line_assignment", scope: !8700, file: !1544, line: 102, type: !8649)
!8725 = !DILocation(line: 102, column: 35, scope: !8700)
!8726 = !DILocalVariable(name: "mask", scope: !8700, file: !1544, line: 103, type: !173)
!8727 = !DILocation(line: 103, column: 11, scope: !8700)
!8728 = !DILocalVariable(name: "line_index", scope: !8700, file: !1544, line: 104, type: !103)
!8729 = !DILocation(line: 104, column: 6, scope: !8700)
!8730 = !DILocalVariable(name: "config_index", scope: !8700, file: !1544, line: 105, type: !103)
!8731 = !DILocation(line: 105, column: 6, scope: !8700)
!8732 = !DILocalVariable(name: "config_shift", scope: !8700, file: !1544, line: 106, type: !103)
!8733 = !DILocation(line: 106, column: 6, scope: !8700)
!8734 = !DILocalVariable(name: "key", scope: !8700, file: !1544, line: 107, type: !32)
!8735 = !DILocation(line: 107, column: 15, scope: !8700)
!8736 = !DILocalVariable(name: "config", scope: !8700, file: !1544, line: 108, type: !173)
!8737 = !DILocation(line: 108, column: 11, scope: !8700)
!8738 = !DILocation(line: 110, column: 36, scope: !8700)
!8739 = !DILocation(line: 110, column: 42, scope: !8700)
!8740 = !DILocation(line: 110, column: 15, scope: !8700)
!8741 = !DILocation(line: 110, column: 13, scope: !8700)
!8742 = !DILocation(line: 111, column: 6, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8700, file: !1544, line: 111, column: 6)
!8744 = !DILocation(line: 111, column: 17, scope: !8743)
!8745 = !DILocation(line: 111, column: 6, scope: !8700)
!8746 = !DILocation(line: 112, column: 10, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8743, file: !1544, line: 111, column: 22)
!8748 = !DILocation(line: 112, column: 3, scope: !8747)
!8749 = !DILocation(line: 115, column: 9, scope: !8700)
!8750 = !DILocation(line: 115, column: 7, scope: !8700)
!8751 = !DILocation(line: 116, column: 17, scope: !8700)
!8752 = !DILocation(line: 116, column: 28, scope: !8700)
!8753 = !DILocation(line: 116, column: 15, scope: !8700)
!8754 = !DILocation(line: 117, column: 18, scope: !8700)
!8755 = !DILocation(line: 117, column: 29, scope: !8700)
!8756 = !DILocation(line: 117, column: 34, scope: !8700)
!8757 = !DILocation(line: 117, column: 15, scope: !8700)
!8758 = !DILocalVariable(name: "key", scope: !8759, file: !6626, line: 44, type: !32)
!8759 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8760 = !DILocation(line: 44, column: 15, scope: !8759, inlinedAt: !8761)
!8761 = distinct !DILocation(line: 120, column: 8, scope: !8700)
!8762 = !DILocation(line: 47, column: 2, scope: !8759, inlinedAt: !8761)
!8763 = !{i64 1377344}
!8764 = !DILocation(line: 76, column: 9, scope: !8759, inlinedAt: !8761)
!8765 = !DILocation(line: 120, column: 6, scope: !8700)
!8766 = !DILocation(line: 122, column: 2, scope: !8700)
!8767 = !DILocation(line: 124, column: 21, scope: !8700)
!8768 = !DILocation(line: 124, column: 31, scope: !8700)
!8769 = !DILocation(line: 124, column: 37, scope: !8700)
!8770 = !DILocation(line: 124, column: 18, scope: !8700)
!8771 = !DILocation(line: 127, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8700, file: !1544, line: 127, column: 6)
!8773 = !DILocation(line: 127, column: 23, scope: !8772)
!8774 = !DILocation(line: 127, column: 6, scope: !8700)
!8775 = !DILocation(line: 128, column: 7, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !1544, line: 128, column: 7)
!8777 = distinct !DILexicalBlock(scope: !8772, file: !1544, line: 127, column: 32)
!8778 = !DILocation(line: 128, column: 24, scope: !8776)
!8779 = !DILocation(line: 128, column: 32, scope: !8776)
!8780 = !DILocation(line: 128, column: 29, scope: !8776)
!8781 = !DILocation(line: 128, column: 37, scope: !8776)
!8782 = !DILocation(line: 129, column: 7, scope: !8776)
!8783 = !DILocation(line: 129, column: 24, scope: !8776)
!8784 = !DILocation(line: 129, column: 31, scope: !8776)
!8785 = !DILocation(line: 129, column: 28, scope: !8776)
!8786 = !DILocation(line: 128, column: 7, scope: !8777)
!8787 = !DILocation(line: 130, column: 4, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8776, file: !1544, line: 129, column: 36)
!8789 = !DILocation(line: 132, column: 2, scope: !8777)
!8790 = !DILocation(line: 135, column: 15, scope: !8700)
!8791 = !DILocation(line: 135, column: 25, scope: !8700)
!8792 = !DILocation(line: 135, column: 31, scope: !8700)
!8793 = !DILocation(line: 135, column: 12, scope: !8700)
!8794 = !DILocation(line: 136, column: 18, scope: !8700)
!8795 = !DILocation(line: 136, column: 2, scope: !8700)
!8796 = !DILocation(line: 136, column: 13, scope: !8700)
!8797 = !DILocation(line: 136, column: 16, scope: !8700)
!8798 = !DILocation(line: 137, column: 20, scope: !8700)
!8799 = !DILocation(line: 137, column: 2, scope: !8700)
!8800 = !DILocation(line: 137, column: 13, scope: !8700)
!8801 = !DILocation(line: 137, column: 18, scope: !8700)
!8802 = !DILocation(line: 138, column: 25, scope: !8700)
!8803 = !DILocation(line: 138, column: 2, scope: !8700)
!8804 = !DILocation(line: 138, column: 19, scope: !8700)
!8805 = !DILocation(line: 138, column: 23, scope: !8700)
!8806 = !DILocation(line: 139, column: 26, scope: !8700)
!8807 = !DILocation(line: 139, column: 2, scope: !8700)
!8808 = !DILocation(line: 139, column: 19, scope: !8700)
!8809 = !DILocation(line: 139, column: 24, scope: !8700)
!8810 = !DILocation(line: 140, column: 2, scope: !8700)
!8811 = !DILocation(line: 140, column: 19, scope: !8700)
!8812 = !DILocation(line: 140, column: 27, scope: !8700)
!8813 = !DILocation(line: 142, column: 23, scope: !8700)
!8814 = !DILocation(line: 142, column: 11, scope: !8700)
!8815 = !DILocation(line: 142, column: 37, scope: !8700)
!8816 = !DILocation(line: 142, column: 9, scope: !8700)
!8817 = !DILocation(line: 143, column: 21, scope: !8700)
!8818 = !DILocation(line: 143, column: 18, scope: !8700)
!8819 = !DILocation(line: 143, column: 12, scope: !8700)
!8820 = !DILocation(line: 143, column: 9, scope: !8700)
!8821 = !DILocation(line: 144, column: 10, scope: !8700)
!8822 = !DILocation(line: 144, column: 2, scope: !8700)
!8823 = !DILocation(line: 146, column: 39, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8700, file: !1544, line: 144, column: 19)
!8825 = !DILocation(line: 146, column: 36, scope: !8824)
!8826 = !DILocation(line: 146, column: 10, scope: !8824)
!8827 = !DILocation(line: 147, column: 3, scope: !8824)
!8828 = !DILocation(line: 149, column: 39, scope: !8824)
!8829 = !DILocation(line: 149, column: 36, scope: !8824)
!8830 = !DILocation(line: 149, column: 10, scope: !8824)
!8831 = !DILocation(line: 150, column: 3, scope: !8824)
!8832 = !DILocation(line: 152, column: 39, scope: !8824)
!8833 = !DILocation(line: 152, column: 36, scope: !8824)
!8834 = !DILocation(line: 152, column: 10, scope: !8824)
!8835 = !DILocation(line: 153, column: 3, scope: !8824)
!8836 = !DILocation(line: 155, column: 39, scope: !8824)
!8837 = !DILocation(line: 155, column: 36, scope: !8824)
!8838 = !DILocation(line: 155, column: 10, scope: !8824)
!8839 = !DILocation(line: 156, column: 3, scope: !8824)
!8840 = !DILocation(line: 158, column: 38, scope: !8824)
!8841 = !DILocation(line: 158, column: 35, scope: !8824)
!8842 = !DILocation(line: 158, column: 10, scope: !8824)
!8843 = !DILocation(line: 159, column: 3, scope: !8824)
!8844 = !DILocation(line: 162, column: 6, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8700, file: !1544, line: 162, column: 6)
!8846 = !DILocation(line: 162, column: 6, scope: !8700)
!8847 = !DILocation(line: 163, column: 35, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8845, file: !1544, line: 162, column: 14)
!8849 = !DILocation(line: 163, column: 32, scope: !8848)
!8850 = !DILocation(line: 163, column: 10, scope: !8848)
!8851 = !DILocation(line: 164, column: 2, scope: !8848)
!8852 = !DILocation(line: 167, column: 34, scope: !8700)
!8853 = !DILocation(line: 167, column: 14, scope: !8700)
!8854 = !DILocation(line: 167, column: 2, scope: !8700)
!8855 = !DILocation(line: 167, column: 28, scope: !8700)
!8856 = !DILocation(line: 167, column: 32, scope: !8700)
!8857 = !DILocation(line: 169, column: 2, scope: !8700)
!8858 = !DILocation(line: 170, column: 2, scope: !8700)
!8859 = !DILocation(line: 176, column: 21, scope: !8700)
!8860 = !DILocation(line: 176, column: 19, scope: !8700)
!8861 = !DILocation(line: 177, column: 2, scope: !8700)
!8862 = !DILocalVariable(name: "key", arg: 1, scope: !8863, file: !6626, line: 84, type: !32)
!8863 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8864 = !DILocation(line: 84, column: 56, scope: !8863, inlinedAt: !8865)
!8865 = distinct !DILocation(line: 177, column: 2, scope: !8700)
!8866 = !DILocation(line: 87, column: 6, scope: !8867, inlinedAt: !8865)
!8867 = distinct !DILexicalBlock(scope: !8863, file: !6626, line: 87, column: 6)
!8868 = !DILocation(line: 87, column: 10, scope: !8867, inlinedAt: !8865)
!8869 = !DILocation(line: 87, column: 6, scope: !8863, inlinedAt: !8865)
!8870 = !DILocation(line: 88, column: 3, scope: !8871, inlinedAt: !8865)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !6626, line: 87, column: 17)
!8872 = !DILocation(line: 90, column: 2, scope: !8863, inlinedAt: !8865)
!8873 = !{i64 1378208}
!8874 = !DILocation(line: 110, column: 1, scope: !8863, inlinedAt: !8865)
!8875 = !DILocation(line: 178, column: 2, scope: !8700)
!8876 = !DILabel(scope: !8700, name: "err_in_use", file: !1544, line: 180)
!8877 = !DILocation(line: 180, column: 1, scope: !8700)
!8878 = !DILocation(line: 181, column: 2, scope: !8700)
!8879 = !DILocation(line: 182, column: 2, scope: !8700)
!8880 = !DILocation(line: 183, column: 2, scope: !8700)
!8881 = !DILocation(line: 84, column: 56, scope: !8863, inlinedAt: !8882)
!8882 = distinct !DILocation(line: 183, column: 2, scope: !8700)
!8883 = !DILocation(line: 87, column: 6, scope: !8867, inlinedAt: !8882)
!8884 = !DILocation(line: 87, column: 10, scope: !8867, inlinedAt: !8882)
!8885 = !DILocation(line: 87, column: 6, scope: !8863, inlinedAt: !8882)
!8886 = !DILocation(line: 88, column: 3, scope: !8871, inlinedAt: !8882)
!8887 = !DILocation(line: 90, column: 2, scope: !8863, inlinedAt: !8882)
!8888 = !DILocation(line: 110, column: 1, scope: !8863, inlinedAt: !8882)
!8889 = !DILocation(line: 184, column: 2, scope: !8700)
!8890 = !DILocation(line: 185, column: 1, scope: !8700)
!8891 = distinct !DISubprogram(name: "sam0_eic_map_to_line", scope: !1598, file: !1598, line: 691, type: !8892, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{!103, !103, !103}
!8894 = !DILocalVariable(name: "port", arg: 1, scope: !8891, file: !1598, line: 691, type: !103)
!8895 = !DILocation(line: 691, column: 44, scope: !8891)
!8896 = !DILocalVariable(name: "pin", arg: 2, scope: !8891, file: !1598, line: 691, type: !103)
!8897 = !DILocation(line: 691, column: 54, scope: !8891)
!8898 = !DILocalVariable(name: "ch", scope: !8891, file: !1598, line: 693, type: !156)
!8899 = !DILocation(line: 693, column: 10, scope: !8891)
!8900 = !DILocation(line: 693, column: 33, scope: !8891)
!8901 = !DILocation(line: 693, column: 15, scope: !8891)
!8902 = !DILocation(line: 693, column: 39, scope: !8891)
!8903 = !DILocation(line: 695, column: 6, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8891, file: !1598, line: 695, column: 6)
!8905 = !DILocation(line: 695, column: 9, scope: !8904)
!8906 = !DILocation(line: 695, column: 6, scope: !8891)
!8907 = !DILocation(line: 696, column: 3, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !1598, line: 695, column: 18)
!8909 = !DILocation(line: 698, column: 9, scope: !8891)
!8910 = !DILocation(line: 698, column: 2, scope: !8891)
!8911 = !DILocation(line: 699, column: 1, scope: !8891)
!8912 = distinct !DISubprogram(name: "sam0_eic_release", scope: !1544, file: !1544, line: 206, type: !8892, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8913 = !DILocalVariable(name: "port", arg: 1, scope: !8912, file: !1544, line: 206, type: !103)
!8914 = !DILocation(line: 206, column: 26, scope: !8912)
!8915 = !DILocalVariable(name: "pin", arg: 2, scope: !8912, file: !1544, line: 206, type: !103)
!8916 = !DILocation(line: 206, column: 36, scope: !8912)
!8917 = !DILocalVariable(name: "dev", scope: !8912, file: !1544, line: 208, type: !8716)
!8918 = !DILocation(line: 208, column: 29, scope: !8912)
!8919 = !DILocalVariable(name: "dev_data", scope: !8912, file: !1544, line: 209, type: !8614)
!8920 = !DILocation(line: 209, column: 24, scope: !8912)
!8921 = !DILocation(line: 209, column: 40, scope: !8912)
!8922 = !DILocation(line: 209, column: 35, scope: !8912)
!8923 = !DILocalVariable(name: "mask", scope: !8912, file: !1544, line: 210, type: !173)
!8924 = !DILocation(line: 210, column: 11, scope: !8912)
!8925 = !DILocalVariable(name: "line_index", scope: !8912, file: !1544, line: 211, type: !103)
!8926 = !DILocation(line: 211, column: 6, scope: !8912)
!8927 = !DILocalVariable(name: "config_index", scope: !8912, file: !1544, line: 212, type: !103)
!8928 = !DILocation(line: 212, column: 6, scope: !8912)
!8929 = !DILocalVariable(name: "config_shift", scope: !8912, file: !1544, line: 213, type: !103)
!8930 = !DILocation(line: 213, column: 6, scope: !8912)
!8931 = !DILocalVariable(name: "key", scope: !8912, file: !1544, line: 214, type: !32)
!8932 = !DILocation(line: 214, column: 15, scope: !8912)
!8933 = !DILocation(line: 216, column: 36, scope: !8912)
!8934 = !DILocation(line: 216, column: 42, scope: !8912)
!8935 = !DILocation(line: 216, column: 15, scope: !8912)
!8936 = !DILocation(line: 216, column: 13, scope: !8912)
!8937 = !DILocation(line: 217, column: 6, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8912, file: !1544, line: 217, column: 6)
!8939 = !DILocation(line: 217, column: 17, scope: !8938)
!8940 = !DILocation(line: 217, column: 6, scope: !8912)
!8941 = !DILocation(line: 218, column: 10, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8938, file: !1544, line: 217, column: 22)
!8943 = !DILocation(line: 218, column: 3, scope: !8942)
!8944 = !DILocation(line: 221, column: 9, scope: !8912)
!8945 = !DILocation(line: 221, column: 7, scope: !8912)
!8946 = !DILocation(line: 222, column: 17, scope: !8912)
!8947 = !DILocation(line: 222, column: 28, scope: !8912)
!8948 = !DILocation(line: 222, column: 15, scope: !8912)
!8949 = !DILocation(line: 223, column: 18, scope: !8912)
!8950 = !DILocation(line: 223, column: 29, scope: !8912)
!8951 = !DILocation(line: 223, column: 34, scope: !8912)
!8952 = !DILocation(line: 223, column: 15, scope: !8912)
!8953 = !DILocation(line: 44, column: 15, scope: !8759, inlinedAt: !8954)
!8954 = distinct !DILocation(line: 226, column: 8, scope: !8912)
!8955 = !DILocation(line: 47, column: 2, scope: !8759, inlinedAt: !8954)
!8956 = !DILocation(line: 76, column: 9, scope: !8759, inlinedAt: !8954)
!8957 = !DILocation(line: 226, column: 6, scope: !8912)
!8958 = !DILocation(line: 228, column: 2, scope: !8912)
!8959 = !DILocation(line: 229, column: 2, scope: !8912)
!8960 = !DILocation(line: 235, column: 32, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8912, file: !1544, line: 235, column: 6)
!8962 = !DILocation(line: 235, column: 38, scope: !8961)
!8963 = !DILocation(line: 235, column: 43, scope: !8961)
!8964 = !DILocation(line: 235, column: 7, scope: !8961)
!8965 = !DILocation(line: 235, column: 6, scope: !8912)
!8966 = !DILocation(line: 236, column: 3, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8961, file: !1544, line: 235, column: 56)
!8968 = !DILocation(line: 239, column: 2, scope: !8912)
!8969 = !DILocation(line: 239, column: 12, scope: !8912)
!8970 = !DILocation(line: 239, column: 18, scope: !8912)
!8971 = !DILocation(line: 239, column: 30, scope: !8912)
!8972 = !DILocation(line: 239, column: 38, scope: !8912)
!8973 = !DILocation(line: 242, column: 44, scope: !8912)
!8974 = !DILocation(line: 242, column: 41, scope: !8912)
!8975 = !DILocation(line: 242, column: 35, scope: !8912)
!8976 = !DILocation(line: 242, column: 14, scope: !8912)
!8977 = !DILocation(line: 242, column: 2, scope: !8912)
!8978 = !DILocation(line: 242, column: 28, scope: !8912)
!8979 = !DILocation(line: 242, column: 32, scope: !8912)
!8980 = !DILocation(line: 245, column: 22, scope: !8912)
!8981 = !DILocation(line: 245, column: 20, scope: !8912)
!8982 = !DILocation(line: 246, column: 21, scope: !8912)
!8983 = !DILocation(line: 246, column: 19, scope: !8912)
!8984 = !DILocation(line: 246, column: 2, scope: !8912)
!8985 = !DILabel(scope: !8912, name: "done", file: !1544, line: 248)
!8986 = !DILocation(line: 248, column: 1, scope: !8912)
!8987 = !DILocation(line: 249, column: 2, scope: !8912)
!8988 = !DILocation(line: 250, column: 2, scope: !8912)
!8989 = !DILocation(line: 251, column: 2, scope: !8912)
!8990 = !DILocation(line: 84, column: 56, scope: !8863, inlinedAt: !8991)
!8991 = distinct !DILocation(line: 251, column: 2, scope: !8912)
!8992 = !DILocation(line: 87, column: 6, scope: !8867, inlinedAt: !8991)
!8993 = !DILocation(line: 87, column: 10, scope: !8867, inlinedAt: !8991)
!8994 = !DILocation(line: 87, column: 6, scope: !8863, inlinedAt: !8991)
!8995 = !DILocation(line: 88, column: 3, scope: !8871, inlinedAt: !8991)
!8996 = !DILocation(line: 90, column: 2, scope: !8863, inlinedAt: !8991)
!8997 = !DILocation(line: 110, column: 1, scope: !8863, inlinedAt: !8991)
!8998 = !DILocation(line: 252, column: 2, scope: !8912)
!8999 = !DILocation(line: 253, column: 1, scope: !8912)
!9000 = distinct !DISubprogram(name: "sam0_eic_check_ownership", scope: !1544, file: !1544, line: 187, type: !9001, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!1035, !103, !103, !103}
!9003 = !DILocalVariable(name: "port", arg: 1, scope: !9000, file: !1544, line: 187, type: !103)
!9004 = !DILocation(line: 187, column: 42, scope: !9000)
!9005 = !DILocalVariable(name: "pin", arg: 2, scope: !9000, file: !1544, line: 187, type: !103)
!9006 = !DILocation(line: 187, column: 52, scope: !9000)
!9007 = !DILocalVariable(name: "line_index", arg: 3, scope: !9000, file: !1544, line: 187, type: !103)
!9008 = !DILocation(line: 187, column: 61, scope: !9000)
!9009 = !DILocalVariable(name: "dev", scope: !9000, file: !1544, line: 189, type: !8716)
!9010 = !DILocation(line: 189, column: 29, scope: !9000)
!9011 = !DILocalVariable(name: "dev_data", scope: !9000, file: !1544, line: 190, type: !8614)
!9012 = !DILocation(line: 190, column: 24, scope: !9000)
!9013 = !DILocation(line: 190, column: 40, scope: !9000)
!9014 = !DILocation(line: 190, column: 35, scope: !9000)
!9015 = !DILocalVariable(name: "line_assignment", scope: !9000, file: !1544, line: 191, type: !8649)
!9016 = !DILocation(line: 191, column: 35, scope: !9000)
!9017 = !DILocation(line: 192, column: 4, scope: !9000)
!9018 = !DILocation(line: 192, column: 14, scope: !9000)
!9019 = !DILocation(line: 192, column: 20, scope: !9000)
!9020 = !DILocation(line: 194, column: 7, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9000, file: !1544, line: 194, column: 6)
!9022 = !DILocation(line: 194, column: 24, scope: !9021)
!9023 = !DILocation(line: 194, column: 6, scope: !9000)
!9024 = !DILocation(line: 195, column: 3, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !1544, line: 194, column: 33)
!9026 = !DILocation(line: 198, column: 6, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9000, file: !1544, line: 198, column: 6)
!9028 = !DILocation(line: 198, column: 23, scope: !9027)
!9029 = !DILocation(line: 198, column: 31, scope: !9027)
!9030 = !DILocation(line: 198, column: 28, scope: !9027)
!9031 = !DILocation(line: 198, column: 36, scope: !9027)
!9032 = !DILocation(line: 199, column: 6, scope: !9027)
!9033 = !DILocation(line: 199, column: 23, scope: !9027)
!9034 = !DILocation(line: 199, column: 30, scope: !9027)
!9035 = !DILocation(line: 199, column: 27, scope: !9027)
!9036 = !DILocation(line: 198, column: 6, scope: !9000)
!9037 = !DILocation(line: 200, column: 3, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9027, file: !1544, line: 199, column: 35)
!9039 = !DILocation(line: 203, column: 2, scope: !9000)
!9040 = !DILocation(line: 204, column: 1, scope: !9000)
!9041 = distinct !DISubprogram(name: "sam0_eic_enable_interrupt", scope: !1544, file: !1544, line: 255, type: !8892, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!9042 = !DILocalVariable(name: "port", arg: 1, scope: !9041, file: !1544, line: 255, type: !103)
!9043 = !DILocation(line: 255, column: 35, scope: !9041)
!9044 = !DILocalVariable(name: "pin", arg: 2, scope: !9041, file: !1544, line: 255, type: !103)
!9045 = !DILocation(line: 255, column: 45, scope: !9041)
!9046 = !DILocalVariable(name: "mask", scope: !9041, file: !1544, line: 257, type: !173)
!9047 = !DILocation(line: 257, column: 11, scope: !9041)
!9048 = !DILocalVariable(name: "line_index", scope: !9041, file: !1544, line: 258, type: !103)
!9049 = !DILocation(line: 258, column: 6, scope: !9041)
!9050 = !DILocation(line: 260, column: 36, scope: !9041)
!9051 = !DILocation(line: 260, column: 42, scope: !9041)
!9052 = !DILocation(line: 260, column: 15, scope: !9041)
!9053 = !DILocation(line: 260, column: 13, scope: !9041)
!9054 = !DILocation(line: 261, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9041, file: !1544, line: 261, column: 6)
!9056 = !DILocation(line: 261, column: 17, scope: !9055)
!9057 = !DILocation(line: 261, column: 6, scope: !9041)
!9058 = !DILocation(line: 262, column: 10, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9055, file: !1544, line: 261, column: 22)
!9060 = !DILocation(line: 262, column: 3, scope: !9059)
!9061 = !DILocation(line: 265, column: 32, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9041, file: !1544, line: 265, column: 6)
!9063 = !DILocation(line: 265, column: 38, scope: !9062)
!9064 = !DILocation(line: 265, column: 43, scope: !9062)
!9065 = !DILocation(line: 265, column: 7, scope: !9062)
!9066 = !DILocation(line: 265, column: 6, scope: !9041)
!9067 = !DILocation(line: 266, column: 3, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9062, file: !1544, line: 265, column: 56)
!9069 = !DILocation(line: 269, column: 9, scope: !9041)
!9070 = !DILocation(line: 269, column: 7, scope: !9041)
!9071 = !DILocation(line: 270, column: 21, scope: !9041)
!9072 = !DILocation(line: 270, column: 19, scope: !9041)
!9073 = !DILocation(line: 271, column: 22, scope: !9041)
!9074 = !DILocation(line: 271, column: 20, scope: !9041)
!9075 = !DILocation(line: 273, column: 2, scope: !9041)
!9076 = !DILocation(line: 274, column: 1, scope: !9041)
!9077 = distinct !DISubprogram(name: "sam0_eic_disable_interrupt", scope: !1544, file: !1544, line: 276, type: !8892, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!9078 = !DILocalVariable(name: "port", arg: 1, scope: !9077, file: !1544, line: 276, type: !103)
!9079 = !DILocation(line: 276, column: 36, scope: !9077)
!9080 = !DILocalVariable(name: "pin", arg: 2, scope: !9077, file: !1544, line: 276, type: !103)
!9081 = !DILocation(line: 276, column: 46, scope: !9077)
!9082 = !DILocalVariable(name: "mask", scope: !9077, file: !1544, line: 278, type: !173)
!9083 = !DILocation(line: 278, column: 11, scope: !9077)
!9084 = !DILocalVariable(name: "line_index", scope: !9077, file: !1544, line: 279, type: !103)
!9085 = !DILocation(line: 279, column: 6, scope: !9077)
!9086 = !DILocation(line: 281, column: 36, scope: !9077)
!9087 = !DILocation(line: 281, column: 42, scope: !9077)
!9088 = !DILocation(line: 281, column: 15, scope: !9077)
!9089 = !DILocation(line: 281, column: 13, scope: !9077)
!9090 = !DILocation(line: 282, column: 6, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9077, file: !1544, line: 282, column: 6)
!9092 = !DILocation(line: 282, column: 17, scope: !9091)
!9093 = !DILocation(line: 282, column: 6, scope: !9077)
!9094 = !DILocation(line: 283, column: 10, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9091, file: !1544, line: 282, column: 22)
!9096 = !DILocation(line: 283, column: 3, scope: !9095)
!9097 = !DILocation(line: 286, column: 32, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9077, file: !1544, line: 286, column: 6)
!9099 = !DILocation(line: 286, column: 38, scope: !9098)
!9100 = !DILocation(line: 286, column: 43, scope: !9098)
!9101 = !DILocation(line: 286, column: 7, scope: !9098)
!9102 = !DILocation(line: 286, column: 6, scope: !9077)
!9103 = !DILocation(line: 287, column: 3, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9098, file: !1544, line: 286, column: 56)
!9105 = !DILocation(line: 290, column: 9, scope: !9077)
!9106 = !DILocation(line: 290, column: 7, scope: !9077)
!9107 = !DILocation(line: 291, column: 22, scope: !9077)
!9108 = !DILocation(line: 291, column: 20, scope: !9077)
!9109 = !DILocation(line: 292, column: 21, scope: !9077)
!9110 = !DILocation(line: 292, column: 19, scope: !9077)
!9111 = !DILocation(line: 294, column: 2, scope: !9077)
!9112 = !DILocation(line: 295, column: 1, scope: !9077)
!9113 = distinct !DISubprogram(name: "sam0_eic_interrupt_pending", scope: !1544, file: !1544, line: 297, type: !9114, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!173, !103}
!9116 = !DILocalVariable(name: "port", arg: 1, scope: !9113, file: !1544, line: 297, type: !103)
!9117 = !DILocation(line: 297, column: 41, scope: !9113)
!9118 = !DILocalVariable(name: "dev", scope: !9113, file: !1544, line: 299, type: !8716)
!9119 = !DILocation(line: 299, column: 29, scope: !9113)
!9120 = !DILocalVariable(name: "dev_data", scope: !9113, file: !1544, line: 300, type: !8614)
!9121 = !DILocation(line: 300, column: 24, scope: !9113)
!9122 = !DILocation(line: 300, column: 40, scope: !9113)
!9123 = !DILocation(line: 300, column: 35, scope: !9113)
!9124 = !DILocalVariable(name: "line_assignment", scope: !9113, file: !1544, line: 301, type: !8649)
!9125 = !DILocation(line: 301, column: 35, scope: !9113)
!9126 = !DILocalVariable(name: "set", scope: !9113, file: !1544, line: 302, type: !173)
!9127 = !DILocation(line: 302, column: 11, scope: !9113)
!9128 = !DILocation(line: 302, column: 30, scope: !9113)
!9129 = !DILocalVariable(name: "mask", scope: !9113, file: !1544, line: 303, type: !173)
!9130 = !DILocation(line: 303, column: 11, scope: !9113)
!9131 = !DILocalVariable(name: "line_index", scope: !9132, file: !1544, line: 305, type: !103)
!9132 = distinct !DILexicalBlock(scope: !9113, file: !1544, line: 305, column: 2)
!9133 = !DILocation(line: 305, column: 11, scope: !9132)
!9134 = !DILocation(line: 305, column: 7, scope: !9132)
!9135 = !DILocation(line: 305, column: 27, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9132, file: !1544, line: 305, column: 2)
!9137 = !DILocation(line: 305, column: 38, scope: !9136)
!9138 = !DILocation(line: 305, column: 2, scope: !9132)
!9139 = !DILocation(line: 306, column: 22, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9136, file: !1544, line: 305, column: 70)
!9141 = !DILocation(line: 306, column: 32, scope: !9140)
!9142 = !DILocation(line: 306, column: 38, scope: !9140)
!9143 = !DILocation(line: 306, column: 19, scope: !9140)
!9144 = !DILocation(line: 308, column: 8, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9140, file: !1544, line: 308, column: 7)
!9146 = !DILocation(line: 308, column: 25, scope: !9145)
!9147 = !DILocation(line: 308, column: 7, scope: !9140)
!9148 = !DILocation(line: 309, column: 4, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9145, file: !1544, line: 308, column: 34)
!9150 = !DILocation(line: 312, column: 7, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9140, file: !1544, line: 312, column: 7)
!9152 = !DILocation(line: 312, column: 24, scope: !9151)
!9153 = !DILocation(line: 312, column: 32, scope: !9151)
!9154 = !DILocation(line: 312, column: 29, scope: !9151)
!9155 = !DILocation(line: 312, column: 7, scope: !9140)
!9156 = !DILocation(line: 313, column: 4, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9151, file: !1544, line: 312, column: 38)
!9158 = !DILocation(line: 316, column: 9, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9140, file: !1544, line: 316, column: 7)
!9160 = !DILocation(line: 316, column: 15, scope: !9159)
!9161 = !DILocation(line: 316, column: 13, scope: !9159)
!9162 = !DILocation(line: 316, column: 7, scope: !9140)
!9163 = !DILocation(line: 317, column: 4, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9159, file: !1544, line: 316, column: 33)
!9165 = !DILocation(line: 320, column: 11, scope: !9140)
!9166 = !DILocation(line: 320, column: 8, scope: !9140)
!9167 = !DILocation(line: 321, column: 2, scope: !9140)
!9168 = !DILocation(line: 305, column: 66, scope: !9136)
!9169 = !DILocation(line: 305, column: 2, scope: !9136)
!9170 = distinct !{!9170, !9138, !9171}
!9171 = !DILocation(line: 321, column: 2, scope: !9132)
!9172 = !DILocation(line: 323, column: 9, scope: !9113)
!9173 = !DILocation(line: 323, column: 2, scope: !9113)
!9174 = distinct !DISubprogram(name: "uart_console_init", scope: !1717, file: !1717, line: 588, type: !1661, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9175 = !DILocalVariable(name: "arg", arg: 1, scope: !9174, file: !1717, line: 588, type: !1639)
!9176 = !DILocation(line: 588, column: 51, scope: !9174)
!9177 = !DILocation(line: 591, column: 2, scope: !9174)
!9178 = !DILocation(line: 593, column: 7, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9174, file: !1717, line: 593, column: 6)
!9180 = !DILocation(line: 593, column: 6, scope: !9174)
!9181 = !DILocation(line: 594, column: 3, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9179, file: !1717, line: 593, column: 42)
!9183 = !DILocation(line: 597, column: 2, scope: !9174)
!9184 = !DILocation(line: 599, column: 2, scope: !9174)
!9185 = !DILocation(line: 600, column: 1, scope: !9174)
!9186 = distinct !DISubprogram(name: "device_is_ready", scope: !9187, file: !9187, line: 47, type: !9188, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9187 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!9188 = !DISubroutineType(types: !9189)
!9189 = !{!1035, !1639}
!9190 = !DILocalVariable(name: "dev", arg: 1, scope: !9186, file: !9187, line: 47, type: !1639)
!9191 = !DILocation(line: 47, column: 58, scope: !9186)
!9192 = !DILocation(line: 55, column: 2, scope: !9186)
!9193 = !DILocation(line: 55, column: 2, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9186, file: !9187, line: 55, column: 2)
!9195 = !{i64 2149869227}
!9196 = !DILocation(line: 56, column: 32, scope: !9186)
!9197 = !DILocation(line: 56, column: 9, scope: !9186)
!9198 = !DILocation(line: 56, column: 2, scope: !9186)
!9199 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1717, file: !1717, line: 573, type: !253, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9200 = !DILocation(line: 576, column: 2, scope: !9199)
!9201 = !DILocation(line: 579, column: 2, scope: !9199)
!9202 = !DILocation(line: 581, column: 1, scope: !9199)
!9203 = distinct !DISubprogram(name: "console_out", scope: !1717, file: !1717, line: 77, type: !274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9204 = !DILocalVariable(name: "c", arg: 1, scope: !9203, file: !1717, line: 77, type: !103)
!9205 = !DILocation(line: 77, column: 28, scope: !9203)
!9206 = !DILocation(line: 89, column: 14, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !1717, line: 89, column: 6)
!9208 = !DILocation(line: 89, column: 11, scope: !9207)
!9209 = !DILocation(line: 89, column: 6, scope: !9203)
!9210 = !DILocation(line: 90, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !1717, line: 89, column: 17)
!9212 = !DILocation(line: 91, column: 2, scope: !9211)
!9213 = !DILocation(line: 92, column: 34, scope: !9203)
!9214 = !DILocation(line: 92, column: 2, scope: !9203)
!9215 = !DILocation(line: 94, column: 9, scope: !9203)
!9216 = !DILocation(line: 94, column: 2, scope: !9203)
!9217 = distinct !DISubprogram(name: "uart_poll_out", scope: !9218, file: !9218, line: 95, type: !1657, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9218 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_mkrzero/subsys/debug/gdbstub")
!9219 = !DILocalVariable(name: "dev", arg: 1, scope: !9217, file: !9218, line: 95, type: !1639)
!9220 = !DILocation(line: 95, column: 56, scope: !9217)
!9221 = !DILocalVariable(name: "out_char", arg: 2, scope: !9217, file: !9218, line: 95, type: !157)
!9222 = !DILocation(line: 95, column: 75, scope: !9217)
!9223 = !DILocation(line: 105, column: 2, scope: !9217)
!9224 = !DILocation(line: 105, column: 2, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9217, file: !9218, line: 105, column: 2)
!9226 = !{i64 2149952472}
!9227 = !DILocation(line: 106, column: 23, scope: !9217)
!9228 = !DILocation(line: 106, column: 28, scope: !9217)
!9229 = !DILocation(line: 106, column: 2, scope: !9217)
!9230 = !DILocation(line: 107, column: 1, scope: !9217)
!9231 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1633, file: !1633, line: 574, type: !1657, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9232 = !DILocalVariable(name: "dev", arg: 1, scope: !9231, file: !1633, line: 574, type: !1639)
!9233 = !DILocation(line: 574, column: 62, scope: !9231)
!9234 = !DILocalVariable(name: "out_char", arg: 2, scope: !9231, file: !1633, line: 575, type: !157)
!9235 = !DILocation(line: 575, column: 20, scope: !9231)
!9236 = !DILocalVariable(name: "api", scope: !9231, file: !1633, line: 577, type: !1630)
!9237 = !DILocation(line: 577, column: 32, scope: !9231)
!9238 = !DILocation(line: 578, column: 35, scope: !9231)
!9239 = !DILocation(line: 578, column: 40, scope: !9231)
!9240 = !DILocation(line: 578, column: 3, scope: !9231)
!9241 = !DILocation(line: 580, column: 2, scope: !9231)
!9242 = !DILocation(line: 580, column: 7, scope: !9231)
!9243 = !DILocation(line: 580, column: 16, scope: !9231)
!9244 = !DILocation(line: 580, column: 21, scope: !9231)
!9245 = !DILocation(line: 581, column: 1, scope: !9231)
!9246 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1024, file: !1024, line: 730, type: !9188, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9247 = !DILocalVariable(name: "dev", arg: 1, scope: !9246, file: !1024, line: 730, type: !1639)
!9248 = !DILocation(line: 730, column: 64, scope: !9246)
!9249 = !DILocation(line: 732, column: 27, scope: !9246)
!9250 = !DILocation(line: 732, column: 9, scope: !9246)
!9251 = !DILocation(line: 732, column: 2, scope: !9246)
!9252 = distinct !DISubprogram(name: "uart_register_input", scope: !1717, file: !1717, line: 560, type: !9253, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1627, retainedNodes: !223)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{null, !9255, !9255, !9295}
!9255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9256, size: 32)
!9256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !109, line: 2208, size: 128, elements: !9257)
!9257 = !{!9258}
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9256, file: !109, line: 2209, baseType: !9259, size: 128)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !109, line: 1709, size: 128, elements: !9260)
!9260 = !{!9261, !9274, !9276}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9259, file: !109, line: 1710, baseType: !9262, size: 64)
!9262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9263, line: 46, baseType: !9264)
!9263 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9263, line: 41, size: 64, elements: !9265)
!9265 = !{!9266, !9273}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9264, file: !9263, line: 42, baseType: !9267, size: 32)
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 32)
!9268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9263, line: 39, baseType: !9269)
!9269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9263, line: 35, size: 32, elements: !9270)
!9270 = !{!9271}
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9269, file: !9263, line: 36, baseType: !9272, size: 32)
!9272 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9263, line: 32, baseType: !173)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9264, file: !9263, line: 43, baseType: !9267, size: 32, offset: 32)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9259, file: !109, line: 1711, baseType: !9275, offset: 64)
!9275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9259, file: !109, line: 1712, baseType: !9277, size: 64, offset: 64)
!9277 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !9278)
!9278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !9279)
!9279 = !{!9280}
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9278, file: !150, line: 232, baseType: !9281, size: 64)
!9281 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !9282)
!9282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !9283)
!9283 = !{!9284, !9290}
!9284 = !DIDerivedType(tag: DW_TAG_member, scope: !9282, file: !124, line: 38, baseType: !9285, size: 32)
!9285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9282, file: !124, line: 38, size: 32, elements: !9286)
!9286 = !{!9287, !9289}
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9285, file: !124, line: 39, baseType: !9288, size: 32)
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9282, size: 32)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9285, file: !124, line: 40, baseType: !9288, size: 32)
!9290 = !DIDerivedType(tag: DW_TAG_member, scope: !9282, file: !124, line: 42, baseType: !9291, size: 32, offset: 32)
!9291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9282, file: !124, line: 42, size: 32, elements: !9292)
!9292 = !{!9293, !9294}
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9291, file: !124, line: 43, baseType: !9288, size: 32)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9291, file: !124, line: 44, baseType: !9288, size: 32)
!9295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9296, size: 32)
!9296 = !DISubroutineType(types: !9297)
!9297 = !{!156, !1836, !156}
!9298 = !DILocalVariable(name: "avail", arg: 1, scope: !9252, file: !1717, line: 560, type: !9255)
!9299 = !DILocation(line: 560, column: 41, scope: !9252)
!9300 = !DILocalVariable(name: "lines", arg: 2, scope: !9252, file: !1717, line: 560, type: !9255)
!9301 = !DILocation(line: 560, column: 63, scope: !9252)
!9302 = !DILocalVariable(name: "completion", arg: 3, scope: !9252, file: !1717, line: 561, type: !9295)
!9303 = !DILocation(line: 561, column: 15, scope: !9252)
!9304 = !DILocation(line: 563, column: 2, scope: !9252)
!9305 = !DILocation(line: 564, column: 2, scope: !9252)
!9306 = !DILocation(line: 565, column: 2, scope: !9252)
!9307 = !DILocation(line: 566, column: 1, scope: !9252)
!9308 = distinct !DISubprogram(name: "gpio_sam0_config", scope: !1824, file: !1824, line: 51, type: !1747, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9309 = !DILocalVariable(name: "dev", arg: 1, scope: !9308, file: !1824, line: 51, type: !1749)
!9310 = !DILocation(line: 51, column: 50, scope: !9308)
!9311 = !DILocalVariable(name: "pin", arg: 2, scope: !9308, file: !1824, line: 51, type: !1764)
!9312 = !DILocation(line: 51, column: 66, scope: !9308)
!9313 = !DILocalVariable(name: "flags", arg: 3, scope: !9308, file: !1824, line: 52, type: !1765)
!9314 = !DILocation(line: 52, column: 21, scope: !9308)
!9315 = !DILocalVariable(name: "config", scope: !9308, file: !1824, line: 54, type: !9316)
!9316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!9317 = !DILocation(line: 54, column: 33, scope: !9308)
!9318 = !DILocation(line: 54, column: 42, scope: !9308)
!9319 = !DILocation(line: 54, column: 47, scope: !9308)
!9320 = !DILocalVariable(name: "data", scope: !9308, file: !1824, line: 55, type: !1822)
!9321 = !DILocation(line: 55, column: 25, scope: !9308)
!9322 = !DILocation(line: 55, column: 32, scope: !9308)
!9323 = !DILocation(line: 55, column: 37, scope: !9308)
!9324 = !DILocalVariable(name: "regs", scope: !9308, file: !1824, line: 56, type: !1875)
!9325 = !DILocation(line: 56, column: 13, scope: !9308)
!9326 = !DILocation(line: 56, column: 20, scope: !9308)
!9327 = !DILocation(line: 56, column: 28, scope: !9308)
!9328 = !DILocalVariable(name: "pincfg", scope: !9308, file: !1824, line: 57, type: !2015)
!9329 = !DILocation(line: 57, column: 19, scope: !9308)
!9330 = !DILocation(line: 61, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9308, file: !1824, line: 61, column: 6)
!9332 = !DILocation(line: 61, column: 13, scope: !9331)
!9333 = !DILocation(line: 61, column: 34, scope: !9331)
!9334 = !DILocation(line: 61, column: 6, scope: !9308)
!9335 = !DILocation(line: 62, column: 3, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9331, file: !1824, line: 61, column: 40)
!9337 = !DILocation(line: 66, column: 7, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9308, file: !1824, line: 66, column: 6)
!9339 = !DILocation(line: 66, column: 13, scope: !9338)
!9340 = !DILocation(line: 66, column: 27, scope: !9338)
!9341 = !DILocation(line: 66, column: 6, scope: !9308)
!9342 = !DILocation(line: 67, column: 10, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9338, file: !1824, line: 66, column: 33)
!9344 = !DILocation(line: 67, column: 14, scope: !9343)
!9345 = !DILocation(line: 67, column: 19, scope: !9343)
!9346 = !DILocation(line: 68, column: 2, scope: !9343)
!9347 = !DILocation(line: 69, column: 7, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9308, file: !1824, line: 69, column: 6)
!9349 = !DILocation(line: 69, column: 13, scope: !9348)
!9350 = !DILocation(line: 69, column: 28, scope: !9348)
!9351 = !DILocation(line: 69, column: 6, scope: !9308)
!9352 = !DILocation(line: 71, column: 8, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !1824, line: 71, column: 7)
!9354 = distinct !DILexicalBlock(scope: !9348, file: !1824, line: 69, column: 34)
!9355 = !DILocation(line: 71, column: 14, scope: !9353)
!9356 = !DILocation(line: 71, column: 49, scope: !9353)
!9357 = !DILocation(line: 71, column: 7, scope: !9354)
!9358 = !DILocation(line: 72, column: 4, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !1824, line: 71, column: 55)
!9360 = !DILocation(line: 75, column: 8, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9354, file: !1824, line: 75, column: 7)
!9362 = !DILocation(line: 75, column: 14, scope: !9361)
!9363 = !DILocation(line: 75, column: 38, scope: !9361)
!9364 = !DILocation(line: 75, column: 7, scope: !9354)
!9365 = !DILocation(line: 76, column: 23, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9361, file: !1824, line: 75, column: 44)
!9367 = !DILocation(line: 76, column: 4, scope: !9366)
!9368 = !DILocation(line: 76, column: 10, scope: !9366)
!9369 = !DILocation(line: 76, column: 17, scope: !9366)
!9370 = !DILocation(line: 76, column: 21, scope: !9366)
!9371 = !DILocation(line: 77, column: 3, scope: !9366)
!9372 = !DILocation(line: 77, column: 15, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9361, file: !1824, line: 77, column: 14)
!9374 = !DILocation(line: 77, column: 21, scope: !9373)
!9375 = !DILocation(line: 77, column: 46, scope: !9373)
!9376 = !DILocation(line: 77, column: 14, scope: !9361)
!9377 = !DILocation(line: 78, column: 23, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9373, file: !1824, line: 77, column: 52)
!9379 = !DILocation(line: 78, column: 4, scope: !9378)
!9380 = !DILocation(line: 78, column: 10, scope: !9378)
!9381 = !DILocation(line: 78, column: 17, scope: !9378)
!9382 = !DILocation(line: 78, column: 21, scope: !9378)
!9383 = !DILocation(line: 79, column: 3, scope: !9378)
!9384 = !DILocation(line: 80, column: 22, scope: !9354)
!9385 = !DILocation(line: 80, column: 3, scope: !9354)
!9386 = !DILocation(line: 80, column: 9, scope: !9354)
!9387 = !DILocation(line: 80, column: 16, scope: !9354)
!9388 = !DILocation(line: 80, column: 20, scope: !9354)
!9389 = !DILocation(line: 81, column: 2, scope: !9354)
!9390 = !DILocation(line: 83, column: 22, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9348, file: !1824, line: 81, column: 9)
!9392 = !DILocation(line: 83, column: 3, scope: !9391)
!9393 = !DILocation(line: 83, column: 9, scope: !9391)
!9394 = !DILocation(line: 83, column: 16, scope: !9391)
!9395 = !DILocation(line: 83, column: 20, scope: !9391)
!9396 = !DILocation(line: 86, column: 8, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9391, file: !1824, line: 86, column: 7)
!9398 = !DILocation(line: 86, column: 14, scope: !9397)
!9399 = !DILocation(line: 86, column: 49, scope: !9397)
!9400 = !DILocation(line: 86, column: 7, scope: !9391)
!9401 = !DILocation(line: 87, column: 11, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9397, file: !1824, line: 86, column: 55)
!9403 = !DILocation(line: 87, column: 15, scope: !9402)
!9404 = !DILocation(line: 87, column: 22, scope: !9402)
!9405 = !DILocation(line: 88, column: 9, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9402, file: !1824, line: 88, column: 8)
!9407 = !DILocation(line: 88, column: 15, scope: !9406)
!9408 = !DILocation(line: 88, column: 31, scope: !9406)
!9409 = !DILocation(line: 88, column: 8, scope: !9402)
!9410 = !DILocation(line: 89, column: 24, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9406, file: !1824, line: 88, column: 37)
!9412 = !DILocation(line: 89, column: 5, scope: !9411)
!9413 = !DILocation(line: 89, column: 11, scope: !9411)
!9414 = !DILocation(line: 89, column: 18, scope: !9411)
!9415 = !DILocation(line: 89, column: 22, scope: !9411)
!9416 = !DILocation(line: 90, column: 4, scope: !9411)
!9417 = !DILocation(line: 91, column: 24, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9406, file: !1824, line: 90, column: 11)
!9419 = !DILocation(line: 91, column: 5, scope: !9418)
!9420 = !DILocation(line: 91, column: 11, scope: !9418)
!9421 = !DILocation(line: 91, column: 18, scope: !9418)
!9422 = !DILocation(line: 91, column: 22, scope: !9418)
!9423 = !DILocation(line: 93, column: 3, scope: !9402)
!9424 = !DILocation(line: 97, column: 2, scope: !9308)
!9425 = !DILocation(line: 102, column: 2, scope: !9308)
!9426 = !DILocation(line: 102, column: 8, scope: !9308)
!9427 = !DILocation(line: 102, column: 15, scope: !9308)
!9428 = !DILocation(line: 102, column: 22, scope: !9308)
!9429 = !DILocation(line: 104, column: 2, scope: !9308)
!9430 = !DILocation(line: 105, column: 1, scope: !9308)
!9431 = distinct !DISubprogram(name: "gpio_sam0_port_get_raw", scope: !1824, file: !1824, line: 107, type: !1768, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9432 = !DILocalVariable(name: "dev", arg: 1, scope: !9431, file: !1824, line: 107, type: !1749)
!9433 = !DILocation(line: 107, column: 56, scope: !9431)
!9434 = !DILocalVariable(name: "value", arg: 2, scope: !9431, file: !1824, line: 108, type: !1770)
!9435 = !DILocation(line: 108, column: 26, scope: !9431)
!9436 = !DILocalVariable(name: "config", scope: !9431, file: !1824, line: 110, type: !9316)
!9437 = !DILocation(line: 110, column: 33, scope: !9431)
!9438 = !DILocation(line: 110, column: 42, scope: !9431)
!9439 = !DILocation(line: 110, column: 47, scope: !9431)
!9440 = !DILocation(line: 112, column: 11, scope: !9431)
!9441 = !DILocation(line: 112, column: 19, scope: !9431)
!9442 = !DILocation(line: 112, column: 25, scope: !9431)
!9443 = !DILocation(line: 112, column: 28, scope: !9431)
!9444 = !DILocation(line: 112, column: 3, scope: !9431)
!9445 = !DILocation(line: 112, column: 9, scope: !9431)
!9446 = !DILocation(line: 114, column: 2, scope: !9431)
!9447 = distinct !DISubprogram(name: "gpio_sam0_port_set_masked_raw", scope: !1824, file: !1824, line: 117, type: !1774, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9448 = !DILocalVariable(name: "dev", arg: 1, scope: !9447, file: !1824, line: 117, type: !1749)
!9449 = !DILocation(line: 117, column: 63, scope: !9447)
!9450 = !DILocalVariable(name: "mask", arg: 2, scope: !9447, file: !1824, line: 118, type: !1776)
!9451 = !DILocation(line: 118, column: 24, scope: !9447)
!9452 = !DILocalVariable(name: "value", arg: 3, scope: !9447, file: !1824, line: 119, type: !1771)
!9453 = !DILocation(line: 119, column: 25, scope: !9447)
!9454 = !DILocalVariable(name: "config", scope: !9447, file: !1824, line: 121, type: !9316)
!9455 = !DILocation(line: 121, column: 33, scope: !9447)
!9456 = !DILocation(line: 121, column: 42, scope: !9447)
!9457 = !DILocation(line: 121, column: 47, scope: !9447)
!9458 = !DILocalVariable(name: "out", scope: !9447, file: !1824, line: 122, type: !173)
!9459 = !DILocation(line: 122, column: 11, scope: !9447)
!9460 = !DILocation(line: 122, column: 17, scope: !9447)
!9461 = !DILocation(line: 122, column: 25, scope: !9447)
!9462 = !DILocation(line: 122, column: 31, scope: !9447)
!9463 = !DILocation(line: 122, column: 35, scope: !9447)
!9464 = !DILocation(line: 124, column: 27, scope: !9447)
!9465 = !DILocation(line: 124, column: 34, scope: !9447)
!9466 = !DILocation(line: 124, column: 33, scope: !9447)
!9467 = !DILocation(line: 124, column: 31, scope: !9447)
!9468 = !DILocation(line: 124, column: 43, scope: !9447)
!9469 = !DILocation(line: 124, column: 51, scope: !9447)
!9470 = !DILocation(line: 124, column: 49, scope: !9447)
!9471 = !DILocation(line: 124, column: 40, scope: !9447)
!9472 = !DILocation(line: 124, column: 2, scope: !9447)
!9473 = !DILocation(line: 124, column: 10, scope: !9447)
!9474 = !DILocation(line: 124, column: 16, scope: !9447)
!9475 = !DILocation(line: 124, column: 20, scope: !9447)
!9476 = !DILocation(line: 124, column: 24, scope: !9447)
!9477 = !DILocation(line: 126, column: 2, scope: !9447)
!9478 = distinct !DISubprogram(name: "gpio_sam0_port_set_bits_raw", scope: !1824, file: !1824, line: 129, type: !1779, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9479 = !DILocalVariable(name: "dev", arg: 1, scope: !9478, file: !1824, line: 129, type: !1749)
!9480 = !DILocation(line: 129, column: 61, scope: !9478)
!9481 = !DILocalVariable(name: "pins", arg: 2, scope: !9478, file: !1824, line: 130, type: !1776)
!9482 = !DILocation(line: 130, column: 29, scope: !9478)
!9483 = !DILocalVariable(name: "config", scope: !9478, file: !1824, line: 132, type: !9316)
!9484 = !DILocation(line: 132, column: 33, scope: !9478)
!9485 = !DILocation(line: 132, column: 42, scope: !9478)
!9486 = !DILocation(line: 132, column: 47, scope: !9478)
!9487 = !DILocation(line: 134, column: 29, scope: !9478)
!9488 = !DILocation(line: 134, column: 2, scope: !9478)
!9489 = !DILocation(line: 134, column: 10, scope: !9478)
!9490 = !DILocation(line: 134, column: 16, scope: !9478)
!9491 = !DILocation(line: 134, column: 23, scope: !9478)
!9492 = !DILocation(line: 134, column: 27, scope: !9478)
!9493 = !DILocation(line: 136, column: 2, scope: !9478)
!9494 = distinct !DISubprogram(name: "gpio_sam0_port_clear_bits_raw", scope: !1824, file: !1824, line: 139, type: !1779, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9495 = !DILocalVariable(name: "dev", arg: 1, scope: !9494, file: !1824, line: 139, type: !1749)
!9496 = !DILocation(line: 139, column: 63, scope: !9494)
!9497 = !DILocalVariable(name: "pins", arg: 2, scope: !9494, file: !1824, line: 140, type: !1776)
!9498 = !DILocation(line: 140, column: 24, scope: !9494)
!9499 = !DILocalVariable(name: "config", scope: !9494, file: !1824, line: 142, type: !9316)
!9500 = !DILocation(line: 142, column: 33, scope: !9494)
!9501 = !DILocation(line: 142, column: 42, scope: !9494)
!9502 = !DILocation(line: 142, column: 47, scope: !9494)
!9503 = !DILocation(line: 144, column: 29, scope: !9494)
!9504 = !DILocation(line: 144, column: 2, scope: !9494)
!9505 = !DILocation(line: 144, column: 10, scope: !9494)
!9506 = !DILocation(line: 144, column: 16, scope: !9494)
!9507 = !DILocation(line: 144, column: 23, scope: !9494)
!9508 = !DILocation(line: 144, column: 27, scope: !9494)
!9509 = !DILocation(line: 146, column: 2, scope: !9494)
!9510 = distinct !DISubprogram(name: "gpio_sam0_port_toggle_bits", scope: !1824, file: !1824, line: 149, type: !1779, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9511 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !1824, line: 149, type: !1749)
!9512 = !DILocation(line: 149, column: 60, scope: !9510)
!9513 = !DILocalVariable(name: "pins", arg: 2, scope: !9510, file: !1824, line: 150, type: !1776)
!9514 = !DILocation(line: 150, column: 28, scope: !9510)
!9515 = !DILocalVariable(name: "config", scope: !9510, file: !1824, line: 152, type: !9316)
!9516 = !DILocation(line: 152, column: 33, scope: !9510)
!9517 = !DILocation(line: 152, column: 42, scope: !9510)
!9518 = !DILocation(line: 152, column: 47, scope: !9510)
!9519 = !DILocation(line: 154, column: 29, scope: !9510)
!9520 = !DILocation(line: 154, column: 2, scope: !9510)
!9521 = !DILocation(line: 154, column: 10, scope: !9510)
!9522 = !DILocation(line: 154, column: 16, scope: !9510)
!9523 = !DILocation(line: 154, column: 23, scope: !9510)
!9524 = !DILocation(line: 154, column: 27, scope: !9510)
!9525 = !DILocation(line: 156, column: 2, scope: !9510)
!9526 = distinct !DISubprogram(name: "gpio_sam0_pin_interrupt_configure", scope: !1824, file: !1824, line: 161, type: !1785, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9527 = !DILocalVariable(name: "dev", arg: 1, scope: !9526, file: !1824, line: 161, type: !1749)
!9528 = !DILocation(line: 161, column: 67, scope: !9526)
!9529 = !DILocalVariable(name: "pin", arg: 2, scope: !9526, file: !1824, line: 162, type: !1764)
!9530 = !DILocation(line: 162, column: 22, scope: !9526)
!9531 = !DILocalVariable(name: "mode", arg: 3, scope: !9526, file: !1824, line: 163, type: !1729)
!9532 = !DILocation(line: 163, column: 30, scope: !9526)
!9533 = !DILocalVariable(name: "trig", arg: 4, scope: !9526, file: !1824, line: 164, type: !1735)
!9534 = !DILocation(line: 164, column: 30, scope: !9526)
!9535 = !DILocalVariable(name: "config", scope: !9526, file: !1824, line: 166, type: !9316)
!9536 = !DILocation(line: 166, column: 33, scope: !9526)
!9537 = !DILocation(line: 166, column: 42, scope: !9526)
!9538 = !DILocation(line: 166, column: 47, scope: !9526)
!9539 = !DILocalVariable(name: "data", scope: !9526, file: !1824, line: 167, type: !9540)
!9540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!9541 = !DILocation(line: 167, column: 31, scope: !9526)
!9542 = !DILocation(line: 167, column: 38, scope: !9526)
!9543 = !DILocation(line: 167, column: 43, scope: !9526)
!9544 = !DILocalVariable(name: "regs", scope: !9526, file: !1824, line: 168, type: !1875)
!9545 = !DILocation(line: 168, column: 13, scope: !9526)
!9546 = !DILocation(line: 168, column: 20, scope: !9526)
!9547 = !DILocation(line: 168, column: 28, scope: !9526)
!9548 = !DILocalVariable(name: "pincfg", scope: !9526, file: !1824, line: 169, type: !2015)
!9549 = !DILocation(line: 169, column: 19, scope: !9526)
!9550 = !DILocation(line: 169, column: 28, scope: !9526)
!9551 = !DILocation(line: 170, column: 10, scope: !9526)
!9552 = !DILocation(line: 170, column: 16, scope: !9526)
!9553 = !DILocation(line: 170, column: 23, scope: !9526)
!9554 = !DILocation(line: 170, column: 28, scope: !9526)
!9555 = !DILocalVariable(name: "trigger", scope: !9526, file: !1824, line: 172, type: !1059)
!9556 = !DILocation(line: 172, column: 24, scope: !9526)
!9557 = !DILocalVariable(name: "rc", scope: !9526, file: !1824, line: 173, type: !103)
!9558 = !DILocation(line: 173, column: 6, scope: !9526)
!9559 = !DILocation(line: 175, column: 14, scope: !9526)
!9560 = !DILocation(line: 175, column: 2, scope: !9526)
!9561 = !DILocation(line: 175, column: 8, scope: !9526)
!9562 = !DILocation(line: 175, column: 12, scope: !9526)
!9563 = !DILocation(line: 177, column: 10, scope: !9526)
!9564 = !DILocation(line: 177, column: 2, scope: !9526)
!9565 = !DILocation(line: 179, column: 10, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9526, file: !1824, line: 177, column: 16)
!9567 = !DILocation(line: 179, column: 14, scope: !9566)
!9568 = !DILocation(line: 179, column: 21, scope: !9566)
!9569 = !DILocation(line: 180, column: 35, scope: !9566)
!9570 = !DILocation(line: 180, column: 43, scope: !9566)
!9571 = !DILocation(line: 180, column: 47, scope: !9566)
!9572 = !DILocation(line: 180, column: 8, scope: !9566)
!9573 = !DILocation(line: 180, column: 6, scope: !9566)
!9574 = !DILocation(line: 181, column: 7, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 181, column: 7)
!9576 = !DILocation(line: 181, column: 10, scope: !9575)
!9577 = !DILocation(line: 181, column: 7, scope: !9566)
!9578 = !DILocation(line: 183, column: 7, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9575, file: !1824, line: 181, column: 21)
!9580 = !DILocation(line: 184, column: 3, scope: !9579)
!9581 = !DILocation(line: 185, column: 7, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 185, column: 7)
!9583 = !DILocation(line: 185, column: 10, scope: !9582)
!9584 = !DILocation(line: 185, column: 7, scope: !9566)
!9585 = !DILocation(line: 186, column: 26, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9582, file: !1824, line: 185, column: 16)
!9587 = !DILocation(line: 186, column: 34, scope: !9586)
!9588 = !DILocation(line: 186, column: 38, scope: !9586)
!9589 = !DILocation(line: 186, column: 9, scope: !9586)
!9590 = !DILocation(line: 186, column: 7, scope: !9586)
!9591 = !DILocation(line: 187, column: 3, scope: !9586)
!9592 = !DILocation(line: 188, column: 3, scope: !9566)
!9593 = !DILocation(line: 198, column: 15, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 198, column: 7)
!9595 = !DILocation(line: 198, column: 19, scope: !9594)
!9596 = !DILocation(line: 198, column: 8, scope: !9594)
!9597 = !DILocation(line: 198, column: 24, scope: !9594)
!9598 = !DILocation(line: 199, column: 7, scope: !9594)
!9599 = !DILocation(line: 199, column: 12, scope: !9594)
!9600 = !DILocation(line: 199, column: 18, scope: !9594)
!9601 = !DILocation(line: 199, column: 22, scope: !9594)
!9602 = !DILocation(line: 199, column: 28, scope: !9594)
!9603 = !DILocation(line: 199, column: 26, scope: !9594)
!9604 = !DILocation(line: 199, column: 38, scope: !9594)
!9605 = !DILocation(line: 198, column: 7, scope: !9566)
!9606 = !DILocation(line: 200, column: 7, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9594, file: !1824, line: 199, column: 45)
!9608 = !DILocation(line: 201, column: 4, scope: !9607)
!9609 = !DILocation(line: 205, column: 10, scope: !9566)
!9610 = !DILocation(line: 205, column: 14, scope: !9566)
!9611 = !DILocation(line: 205, column: 21, scope: !9566)
!9612 = !DILocation(line: 206, column: 8, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 206, column: 7)
!9614 = !DILocation(line: 206, column: 12, scope: !9613)
!9615 = !DILocation(line: 206, column: 18, scope: !9613)
!9616 = !DILocation(line: 206, column: 7, scope: !9566)
!9617 = !DILocation(line: 207, column: 4, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9613, file: !1824, line: 206, column: 24)
!9619 = !DILocation(line: 207, column: 10, scope: !9618)
!9620 = !DILocation(line: 207, column: 15, scope: !9618)
!9621 = !DILocation(line: 207, column: 19, scope: !9618)
!9622 = !DILocation(line: 207, column: 25, scope: !9618)
!9623 = !DILocation(line: 207, column: 29, scope: !9618)
!9624 = !DILocation(line: 207, column: 35, scope: !9618)
!9625 = !DILocation(line: 208, column: 3, scope: !9618)
!9626 = !DILocation(line: 209, column: 4, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9613, file: !1824, line: 208, column: 10)
!9628 = !DILocation(line: 209, column: 10, scope: !9627)
!9629 = !DILocation(line: 209, column: 15, scope: !9627)
!9630 = !DILocation(line: 209, column: 19, scope: !9627)
!9631 = !DILocation(line: 209, column: 25, scope: !9627)
!9632 = !DILocation(line: 209, column: 29, scope: !9627)
!9633 = !DILocation(line: 209, column: 35, scope: !9627)
!9634 = !DILocation(line: 212, column: 11, scope: !9566)
!9635 = !DILocation(line: 212, column: 3, scope: !9566)
!9636 = !DILocation(line: 214, column: 15, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 212, column: 17)
!9638 = !DILocation(line: 214, column: 20, scope: !9637)
!9639 = !DILocation(line: 214, column: 14, scope: !9637)
!9640 = !DILocation(line: 214, column: 12, scope: !9637)
!9641 = !DILocation(line: 217, column: 4, scope: !9637)
!9642 = !DILocation(line: 219, column: 15, scope: !9637)
!9643 = !DILocation(line: 219, column: 20, scope: !9637)
!9644 = !DILocation(line: 219, column: 14, scope: !9637)
!9645 = !DILocation(line: 219, column: 12, scope: !9637)
!9646 = !DILocation(line: 222, column: 4, scope: !9637)
!9647 = !DILocation(line: 224, column: 12, scope: !9637)
!9648 = !DILocation(line: 225, column: 4, scope: !9637)
!9649 = !DILocation(line: 227, column: 7, scope: !9637)
!9650 = !DILocation(line: 228, column: 4, scope: !9637)
!9651 = !DILocation(line: 231, column: 7, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 231, column: 7)
!9653 = !DILocation(line: 231, column: 10, scope: !9652)
!9654 = !DILocation(line: 231, column: 7, scope: !9566)
!9655 = !DILocation(line: 232, column: 26, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9652, file: !1824, line: 231, column: 16)
!9657 = !DILocation(line: 232, column: 34, scope: !9656)
!9658 = !DILocation(line: 232, column: 38, scope: !9656)
!9659 = !DILocation(line: 232, column: 43, scope: !9656)
!9660 = !DILocation(line: 233, column: 13, scope: !9656)
!9661 = !DILocation(line: 233, column: 19, scope: !9656)
!9662 = !DILocation(line: 233, column: 30, scope: !9656)
!9663 = !DILocation(line: 233, column: 28, scope: !9656)
!9664 = !DILocation(line: 233, column: 40, scope: !9656)
!9665 = !DILocation(line: 234, column: 27, scope: !9656)
!9666 = !DILocation(line: 232, column: 9, scope: !9656)
!9667 = !DILocation(line: 232, column: 7, scope: !9656)
!9668 = !DILocation(line: 235, column: 3, scope: !9656)
!9669 = !DILocation(line: 236, column: 7, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9566, file: !1824, line: 236, column: 7)
!9671 = !DILocation(line: 236, column: 10, scope: !9670)
!9672 = !DILocation(line: 236, column: 7, scope: !9566)
!9673 = !DILocation(line: 237, column: 35, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9670, file: !1824, line: 236, column: 16)
!9675 = !DILocation(line: 237, column: 43, scope: !9674)
!9676 = !DILocation(line: 237, column: 47, scope: !9674)
!9677 = !DILocation(line: 237, column: 9, scope: !9674)
!9678 = !DILocation(line: 237, column: 7, scope: !9674)
!9679 = !DILocation(line: 238, column: 3, scope: !9674)
!9680 = !DILocation(line: 240, column: 3, scope: !9566)
!9681 = !DILocation(line: 242, column: 6, scope: !9566)
!9682 = !DILocation(line: 243, column: 3, scope: !9566)
!9683 = !DILocation(line: 246, column: 6, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9526, file: !1824, line: 246, column: 6)
!9685 = !DILocation(line: 246, column: 9, scope: !9684)
!9686 = !DILocation(line: 246, column: 6, scope: !9526)
!9687 = !DILocation(line: 248, column: 3, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !1824, line: 246, column: 15)
!9689 = !DILocation(line: 248, column: 9, scope: !9688)
!9690 = !DILocation(line: 248, column: 16, scope: !9688)
!9691 = !DILocation(line: 248, column: 23, scope: !9688)
!9692 = !DILocation(line: 249, column: 2, scope: !9688)
!9693 = !DILocation(line: 251, column: 9, scope: !9526)
!9694 = !DILocation(line: 251, column: 2, scope: !9526)
!9695 = distinct !DISubprogram(name: "gpio_sam0_manage_callback", scope: !1824, file: !1824, line: 255, type: !1789, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9696 = !DILocalVariable(name: "dev", arg: 1, scope: !9695, file: !1824, line: 255, type: !1749)
!9697 = !DILocation(line: 255, column: 59, scope: !9695)
!9698 = !DILocalVariable(name: "callback", arg: 2, scope: !9695, file: !1824, line: 256, type: !1791)
!9699 = !DILocation(line: 256, column: 32, scope: !9695)
!9700 = !DILocalVariable(name: "set", arg: 3, scope: !9695, file: !1824, line: 256, type: !1035)
!9701 = !DILocation(line: 256, column: 47, scope: !9695)
!9702 = !DILocalVariable(name: "data", scope: !9695, file: !1824, line: 258, type: !9540)
!9703 = !DILocation(line: 258, column: 31, scope: !9695)
!9704 = !DILocation(line: 258, column: 38, scope: !9695)
!9705 = !DILocation(line: 258, column: 43, scope: !9695)
!9706 = !DILocation(line: 260, column: 31, scope: !9695)
!9707 = !DILocation(line: 260, column: 37, scope: !9695)
!9708 = !DILocation(line: 260, column: 48, scope: !9695)
!9709 = !DILocation(line: 260, column: 58, scope: !9695)
!9710 = !DILocation(line: 260, column: 9, scope: !9695)
!9711 = !DILocation(line: 260, column: 2, scope: !9695)
!9712 = distinct !DISubprogram(name: "gpio_sam0_get_pending_int", scope: !1824, file: !1824, line: 263, type: !1809, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9713 = !DILocalVariable(name: "dev", arg: 1, scope: !9712, file: !1824, line: 263, type: !1749)
!9714 = !DILocation(line: 263, column: 64, scope: !9712)
!9715 = !DILocalVariable(name: "config", scope: !9712, file: !1824, line: 265, type: !9316)
!9716 = !DILocation(line: 265, column: 33, scope: !9712)
!9717 = !DILocation(line: 265, column: 42, scope: !9712)
!9718 = !DILocation(line: 265, column: 47, scope: !9712)
!9719 = !DILocation(line: 267, column: 36, scope: !9712)
!9720 = !DILocation(line: 267, column: 44, scope: !9712)
!9721 = !DILocation(line: 267, column: 9, scope: !9712)
!9722 = !DILocation(line: 267, column: 2, scope: !9712)
!9723 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9724, file: !9724, line: 38, type: !9725, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9724 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9725 = !DISubroutineType(types: !9726)
!9726 = !{!103, !9727, !1791, !1035}
!9727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!9728 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9723, file: !9724, line: 38, type: !9727)
!9729 = !DILocation(line: 38, column: 53, scope: !9723)
!9730 = !DILocalVariable(name: "callback", arg: 2, scope: !9723, file: !9724, line: 39, type: !1791)
!9731 = !DILocation(line: 39, column: 28, scope: !9723)
!9732 = !DILocalVariable(name: "set", arg: 3, scope: !9723, file: !9724, line: 40, type: !1035)
!9733 = !DILocation(line: 40, column: 11, scope: !9723)
!9734 = !DILocation(line: 45, column: 26, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9723, file: !9724, line: 45, column: 6)
!9736 = !DILocation(line: 45, column: 7, scope: !9735)
!9737 = !DILocation(line: 45, column: 6, scope: !9723)
!9738 = !DILocation(line: 46, column: 34, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !9724, line: 46, column: 7)
!9740 = distinct !DILexicalBlock(scope: !9735, file: !9724, line: 45, column: 38)
!9741 = !DILocation(line: 46, column: 46, scope: !9739)
!9742 = !DILocation(line: 46, column: 56, scope: !9739)
!9743 = !DILocation(line: 46, column: 8, scope: !9739)
!9744 = !DILocation(line: 46, column: 7, scope: !9740)
!9745 = !DILocation(line: 47, column: 9, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !9724, line: 47, column: 8)
!9747 = distinct !DILexicalBlock(scope: !9739, file: !9724, line: 46, column: 63)
!9748 = !DILocation(line: 47, column: 8, scope: !9747)
!9749 = !DILocation(line: 48, column: 5, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9746, file: !9724, line: 47, column: 14)
!9751 = !DILocation(line: 50, column: 3, scope: !9747)
!9752 = !DILocation(line: 51, column: 2, scope: !9740)
!9753 = !DILocation(line: 51, column: 14, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9735, file: !9724, line: 51, column: 13)
!9755 = !DILocation(line: 51, column: 13, scope: !9735)
!9756 = !DILocation(line: 52, column: 3, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9754, file: !9724, line: 51, column: 19)
!9758 = !DILocation(line: 55, column: 6, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9723, file: !9724, line: 55, column: 6)
!9760 = !DILocation(line: 55, column: 6, scope: !9723)
!9761 = !DILocation(line: 56, column: 21, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9759, file: !9724, line: 55, column: 11)
!9763 = !DILocation(line: 56, column: 33, scope: !9762)
!9764 = !DILocation(line: 56, column: 43, scope: !9762)
!9765 = !DILocation(line: 56, column: 3, scope: !9762)
!9766 = !DILocation(line: 57, column: 2, scope: !9762)
!9767 = !DILocation(line: 59, column: 2, scope: !9723)
!9768 = !DILocation(line: 60, column: 1, scope: !9723)
!9769 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1796, file: !1796, line: 261, type: !9770, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{!1035, !9727}
!9772 = !DILocalVariable(name: "list", arg: 1, scope: !9769, file: !1796, line: 261, type: !9727)
!9773 = !DILocation(line: 261, column: 1, scope: !9769)
!9774 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1796, file: !1796, line: 417, type: !9775, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!1035, !9727, !1834}
!9777 = !DILocalVariable(name: "list", arg: 1, scope: !9774, file: !1796, line: 417, type: !9727)
!9778 = !DILocation(line: 417, column: 1, scope: !9774)
!9779 = !DILocalVariable(name: "node", arg: 2, scope: !9774, file: !1796, line: 417, type: !1834)
!9780 = !DILocalVariable(name: "prev", scope: !9774, file: !1796, line: 417, type: !1834)
!9781 = !DILocalVariable(name: "test", scope: !9774, file: !1796, line: 417, type: !1834)
!9782 = !DILocation(line: 417, column: 1, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9774, file: !1796, line: 417, column: 1)
!9784 = !DILocation(line: 417, column: 1, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9783, file: !1796, line: 417, column: 1)
!9786 = !DILocation(line: 417, column: 1, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9788, file: !1796, line: 417, column: 1)
!9788 = distinct !DILexicalBlock(scope: !9785, file: !1796, line: 417, column: 1)
!9789 = !DILocation(line: 417, column: 1, scope: !9788)
!9790 = !DILocation(line: 417, column: 1, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9787, file: !1796, line: 417, column: 1)
!9792 = distinct !{!9792, !9782, !9782}
!9793 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1796, file: !1796, line: 298, type: !9794, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{null, !9727, !1834}
!9796 = !DILocalVariable(name: "list", arg: 1, scope: !9793, file: !1796, line: 298, type: !9727)
!9797 = !DILocation(line: 298, column: 1, scope: !9793)
!9798 = !DILocalVariable(name: "node", arg: 2, scope: !9793, file: !1796, line: 298, type: !1834)
!9799 = !DILocation(line: 298, column: 1, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9793, file: !1796, line: 298, column: 1)
!9801 = !DILocation(line: 298, column: 1, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9800, file: !1796, line: 298, column: 1)
!9803 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1796, file: !1796, line: 231, type: !9804, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9804 = !DISubroutineType(types: !9805)
!9805 = !{!1834, !9727}
!9806 = !DILocalVariable(name: "list", arg: 1, scope: !9803, file: !1796, line: 231, type: !9727)
!9807 = !DILocation(line: 231, column: 61, scope: !9803)
!9808 = !DILocation(line: 233, column: 9, scope: !9803)
!9809 = !DILocation(line: 233, column: 15, scope: !9803)
!9810 = !DILocation(line: 233, column: 2, scope: !9803)
!9811 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1796, file: !1796, line: 209, type: !9812, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{null, !1834, !1834}
!9814 = !DILocalVariable(name: "parent", arg: 1, scope: !9811, file: !1796, line: 209, type: !1834)
!9815 = !DILocation(line: 209, column: 50, scope: !9811)
!9816 = !DILocalVariable(name: "child", arg: 2, scope: !9811, file: !1796, line: 209, type: !1834)
!9817 = !DILocation(line: 209, column: 71, scope: !9811)
!9818 = !DILocation(line: 211, column: 17, scope: !9811)
!9819 = !DILocation(line: 211, column: 2, scope: !9811)
!9820 = !DILocation(line: 211, column: 10, scope: !9811)
!9821 = !DILocation(line: 211, column: 15, scope: !9811)
!9822 = !DILocation(line: 212, column: 1, scope: !9811)
!9823 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1796, file: !1796, line: 214, type: !9794, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9824 = !DILocalVariable(name: "list", arg: 1, scope: !9823, file: !1796, line: 214, type: !9727)
!9825 = !DILocation(line: 214, column: 50, scope: !9823)
!9826 = !DILocalVariable(name: "node", arg: 2, scope: !9823, file: !1796, line: 214, type: !1834)
!9827 = !DILocation(line: 214, column: 69, scope: !9823)
!9828 = !DILocation(line: 216, column: 15, scope: !9823)
!9829 = !DILocation(line: 216, column: 2, scope: !9823)
!9830 = !DILocation(line: 216, column: 8, scope: !9823)
!9831 = !DILocation(line: 216, column: 13, scope: !9823)
!9832 = !DILocation(line: 217, column: 1, scope: !9823)
!9833 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1796, file: !1796, line: 243, type: !9804, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9834 = !DILocalVariable(name: "list", arg: 1, scope: !9833, file: !1796, line: 243, type: !9727)
!9835 = !DILocation(line: 243, column: 61, scope: !9833)
!9836 = !DILocation(line: 245, column: 9, scope: !9833)
!9837 = !DILocation(line: 245, column: 15, scope: !9833)
!9838 = !DILocation(line: 245, column: 2, scope: !9833)
!9839 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1796, file: !1796, line: 219, type: !9794, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9840 = !DILocalVariable(name: "list", arg: 1, scope: !9839, file: !1796, line: 219, type: !9727)
!9841 = !DILocation(line: 219, column: 50, scope: !9839)
!9842 = !DILocalVariable(name: "node", arg: 2, scope: !9839, file: !1796, line: 219, type: !1834)
!9843 = !DILocation(line: 219, column: 69, scope: !9839)
!9844 = !DILocation(line: 221, column: 15, scope: !9839)
!9845 = !DILocation(line: 221, column: 2, scope: !9839)
!9846 = !DILocation(line: 221, column: 8, scope: !9839)
!9847 = !DILocation(line: 221, column: 13, scope: !9839)
!9848 = !DILocation(line: 222, column: 1, scope: !9839)
!9849 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1796, file: !1796, line: 401, type: !9850, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9850 = !DISubroutineType(types: !9851)
!9851 = !{null, !9727, !1834, !1834}
!9852 = !DILocalVariable(name: "list", arg: 1, scope: !9849, file: !1796, line: 401, type: !9727)
!9853 = !DILocation(line: 401, column: 1, scope: !9849)
!9854 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9849, file: !1796, line: 401, type: !1834)
!9855 = !DILocalVariable(name: "node", arg: 3, scope: !9849, file: !1796, line: 401, type: !1834)
!9856 = !DILocation(line: 401, column: 1, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9849, file: !1796, line: 401, column: 1)
!9858 = !DILocation(line: 401, column: 1, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9857, file: !1796, line: 401, column: 1)
!9860 = !DILocation(line: 401, column: 1, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9859, file: !1796, line: 401, column: 1)
!9862 = !DILocation(line: 401, column: 1, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9861, file: !1796, line: 401, column: 1)
!9864 = !DILocation(line: 401, column: 1, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9857, file: !1796, line: 401, column: 1)
!9866 = !DILocation(line: 401, column: 1, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9865, file: !1796, line: 401, column: 1)
!9868 = !DILocation(line: 401, column: 1, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9867, file: !1796, line: 401, column: 1)
!9870 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1796, file: !1796, line: 285, type: !9871, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!1834, !1834}
!9873 = !DILocalVariable(name: "node", arg: 1, scope: !9870, file: !1796, line: 285, type: !1834)
!9874 = !DILocation(line: 285, column: 1, scope: !9870)
!9875 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1796, file: !1796, line: 274, type: !9871, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9876 = !DILocalVariable(name: "node", arg: 1, scope: !9875, file: !1796, line: 274, type: !1834)
!9877 = !DILocation(line: 274, column: 1, scope: !9875)
!9878 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1796, file: !1796, line: 204, type: !9871, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9879 = !DILocalVariable(name: "node", arg: 1, scope: !9878, file: !1796, line: 204, type: !1834)
!9880 = !DILocation(line: 204, column: 59, scope: !9878)
!9881 = !DILocation(line: 206, column: 9, scope: !9878)
!9882 = !DILocation(line: 206, column: 15, scope: !9878)
!9883 = !DILocation(line: 206, column: 2, scope: !9878)
!9884 = distinct !DISubprogram(name: "gpio_sam0_isr", scope: !1824, file: !1824, line: 43, type: !1584, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9885 = !DILocalVariable(name: "pins", arg: 1, scope: !9884, file: !1824, line: 43, type: !173)
!9886 = !DILocation(line: 43, column: 36, scope: !9884)
!9887 = !DILocalVariable(name: "arg", arg: 2, scope: !9884, file: !1824, line: 43, type: !102)
!9888 = !DILocation(line: 43, column: 48, scope: !9884)
!9889 = !DILocalVariable(name: "data", scope: !9884, file: !1824, line: 45, type: !9540)
!9890 = !DILocation(line: 45, column: 31, scope: !9884)
!9891 = !DILocation(line: 45, column: 63, scope: !9884)
!9892 = !DILocation(line: 45, column: 38, scope: !9884)
!9893 = !DILocation(line: 47, column: 23, scope: !9884)
!9894 = !DILocation(line: 47, column: 29, scope: !9884)
!9895 = !DILocation(line: 47, column: 40, scope: !9884)
!9896 = !DILocation(line: 47, column: 46, scope: !9884)
!9897 = !DILocation(line: 47, column: 51, scope: !9884)
!9898 = !DILocation(line: 47, column: 2, scope: !9884)
!9899 = !DILocation(line: 48, column: 1, scope: !9884)
!9900 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9724, file: !9724, line: 69, type: !9901, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{null, !9727, !1749, !173}
!9903 = !DILocalVariable(name: "list", arg: 1, scope: !9900, file: !9724, line: 69, type: !9727)
!9904 = !DILocation(line: 69, column: 53, scope: !9900)
!9905 = !DILocalVariable(name: "port", arg: 2, scope: !9900, file: !9724, line: 70, type: !1749)
!9906 = !DILocation(line: 70, column: 27, scope: !9900)
!9907 = !DILocalVariable(name: "pins", arg: 3, scope: !9900, file: !9724, line: 71, type: !173)
!9908 = !DILocation(line: 71, column: 15, scope: !9900)
!9909 = !DILocalVariable(name: "cb", scope: !9900, file: !9724, line: 73, type: !1791)
!9910 = !DILocation(line: 73, column: 24, scope: !9900)
!9911 = !DILocalVariable(name: "tmp", scope: !9900, file: !9724, line: 73, type: !1791)
!9912 = !DILocation(line: 73, column: 29, scope: !9900)
!9913 = !DILocation(line: 75, column: 2, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9900, file: !9724, line: 75, column: 2)
!9915 = !DILocation(line: 75, column: 2, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9914, file: !9724, line: 75, column: 2)
!9917 = !DILocation(line: 76, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !9724, line: 76, column: 7)
!9919 = distinct !DILexicalBlock(scope: !9916, file: !9724, line: 75, column: 57)
!9920 = !DILocation(line: 76, column: 11, scope: !9918)
!9921 = !DILocation(line: 76, column: 22, scope: !9918)
!9922 = !DILocation(line: 76, column: 20, scope: !9918)
!9923 = !DILocation(line: 76, column: 7, scope: !9919)
!9924 = !DILocation(line: 78, column: 4, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9918, file: !9724, line: 76, column: 28)
!9926 = !DILocation(line: 78, column: 8, scope: !9925)
!9927 = !DILocation(line: 78, column: 16, scope: !9925)
!9928 = !DILocation(line: 78, column: 22, scope: !9925)
!9929 = !DILocation(line: 78, column: 26, scope: !9925)
!9930 = !DILocation(line: 78, column: 30, scope: !9925)
!9931 = !DILocation(line: 78, column: 41, scope: !9925)
!9932 = !DILocation(line: 78, column: 39, scope: !9925)
!9933 = !DILocation(line: 79, column: 3, scope: !9925)
!9934 = !DILocation(line: 80, column: 2, scope: !9919)
!9935 = distinct !{!9935, !9913, !9936}
!9936 = !DILocation(line: 80, column: 2, scope: !9914)
!9937 = !DILocation(line: 81, column: 1, scope: !9900)
!9938 = distinct !DISubprogram(name: "gpio_sam0_init", scope: !1824, file: !1824, line: 286, type: !1849, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1726, retainedNodes: !223)
!9939 = !DILocalVariable(name: "dev", arg: 1, scope: !9938, file: !1824, line: 286, type: !1749)
!9940 = !DILocation(line: 286, column: 48, scope: !9938)
!9941 = !DILocation(line: 286, column: 55, scope: !9938)
!9942 = distinct !DISubprogram(name: "uart_sam0_poll_in", scope: !2525, file: !2525, line: 637, type: !2086, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!9943 = !DILocalVariable(name: "dev", arg: 1, scope: !9942, file: !2525, line: 637, type: !2088)
!9944 = !DILocation(line: 637, column: 51, scope: !9942)
!9945 = !DILocalVariable(name: "c", arg: 2, scope: !9942, file: !2525, line: 637, type: !1654)
!9946 = !DILocation(line: 637, column: 71, scope: !9942)
!9947 = !DILocalVariable(name: "config", scope: !9942, file: !2525, line: 639, type: !9948)
!9948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!9949 = !DILocation(line: 639, column: 34, scope: !9942)
!9950 = !DILocation(line: 639, column: 43, scope: !9942)
!9951 = !DILocation(line: 639, column: 48, scope: !9942)
!9952 = !DILocalVariable(name: "usart", scope: !9942, file: !2525, line: 641, type: !9953)
!9953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2585)
!9954 = !DILocation(line: 641, column: 22, scope: !9942)
!9955 = !DILocation(line: 641, column: 30, scope: !9942)
!9956 = !DILocation(line: 641, column: 38, scope: !9942)
!9957 = !DILocation(line: 643, column: 7, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9942, file: !2525, line: 643, column: 6)
!9959 = !DILocation(line: 643, column: 14, scope: !9958)
!9960 = !DILocation(line: 643, column: 22, scope: !9958)
!9961 = !DILocation(line: 643, column: 26, scope: !9958)
!9962 = !DILocation(line: 643, column: 6, scope: !9942)
!9963 = !DILocation(line: 644, column: 3, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9958, file: !2525, line: 643, column: 31)
!9965 = !DILocation(line: 647, column: 22, scope: !9942)
!9966 = !DILocation(line: 647, column: 29, scope: !9942)
!9967 = !DILocation(line: 647, column: 34, scope: !9942)
!9968 = !DILocation(line: 647, column: 7, scope: !9942)
!9969 = !DILocation(line: 647, column: 3, scope: !9942)
!9970 = !DILocation(line: 647, column: 5, scope: !9942)
!9971 = !DILocation(line: 648, column: 2, scope: !9942)
!9972 = !DILocation(line: 649, column: 1, scope: !9942)
!9973 = distinct !DISubprogram(name: "uart_sam0_poll_out", scope: !2525, file: !2525, line: 651, type: !2105, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!9974 = !DILocalVariable(name: "dev", arg: 1, scope: !9973, file: !2525, line: 651, type: !2088)
!9975 = !DILocation(line: 651, column: 53, scope: !9973)
!9976 = !DILocalVariable(name: "c", arg: 2, scope: !9973, file: !2525, line: 651, type: !157)
!9977 = !DILocation(line: 651, column: 72, scope: !9973)
!9978 = !DILocalVariable(name: "config", scope: !9973, file: !2525, line: 653, type: !9948)
!9979 = !DILocation(line: 653, column: 34, scope: !9973)
!9980 = !DILocation(line: 653, column: 43, scope: !9973)
!9981 = !DILocation(line: 653, column: 48, scope: !9973)
!9982 = !DILocalVariable(name: "usart", scope: !9973, file: !2525, line: 655, type: !9953)
!9983 = !DILocation(line: 655, column: 22, scope: !9973)
!9984 = !DILocation(line: 655, column: 30, scope: !9973)
!9985 = !DILocation(line: 655, column: 38, scope: !9973)
!9986 = !DILocation(line: 657, column: 2, scope: !9973)
!9987 = !DILocation(line: 657, column: 10, scope: !9973)
!9988 = !DILocation(line: 657, column: 17, scope: !9973)
!9989 = !DILocation(line: 657, column: 25, scope: !9973)
!9990 = !DILocation(line: 657, column: 29, scope: !9973)
!9991 = !DILocation(line: 657, column: 9, scope: !9973)
!9992 = distinct !{!9992, !9986, !9993}
!9993 = !DILocation(line: 658, column: 2, scope: !9973)
!9994 = !DILocation(line: 661, column: 20, scope: !9973)
!9995 = !DILocation(line: 661, column: 2, scope: !9973)
!9996 = !DILocation(line: 661, column: 9, scope: !9973)
!9997 = !DILocation(line: 661, column: 14, scope: !9973)
!9998 = !DILocation(line: 661, column: 18, scope: !9973)
!9999 = !DILocation(line: 662, column: 1, scope: !9973)
!10000 = distinct !DISubprogram(name: "uart_sam0_err_check", scope: !2525, file: !2525, line: 664, type: !2109, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10001 = !DILocalVariable(name: "dev", arg: 1, scope: !10000, file: !2525, line: 664, type: !2088)
!10002 = !DILocation(line: 664, column: 53, scope: !10000)
!10003 = !DILocalVariable(name: "config", scope: !10000, file: !2525, line: 666, type: !9948)
!10004 = !DILocation(line: 666, column: 34, scope: !10000)
!10005 = !DILocation(line: 666, column: 43, scope: !10000)
!10006 = !DILocation(line: 666, column: 48, scope: !10000)
!10007 = !DILocalVariable(name: "regs", scope: !10000, file: !2525, line: 668, type: !9953)
!10008 = !DILocation(line: 668, column: 22, scope: !10000)
!10009 = !DILocation(line: 668, column: 29, scope: !10000)
!10010 = !DILocation(line: 668, column: 37, scope: !10000)
!10011 = !DILocalVariable(name: "err", scope: !10000, file: !2525, line: 669, type: !173)
!10012 = !DILocation(line: 669, column: 11, scope: !10000)
!10013 = !DILocation(line: 671, column: 6, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10000, file: !2525, line: 671, column: 6)
!10015 = !DILocation(line: 671, column: 12, scope: !10014)
!10016 = !DILocation(line: 671, column: 19, scope: !10014)
!10017 = !DILocation(line: 671, column: 23, scope: !10014)
!10018 = !DILocation(line: 671, column: 6, scope: !10000)
!10019 = !DILocation(line: 672, column: 7, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10014, file: !2525, line: 671, column: 53)
!10021 = !DILocation(line: 673, column: 2, scope: !10020)
!10022 = !DILocation(line: 675, column: 6, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10000, file: !2525, line: 675, column: 6)
!10024 = !DILocation(line: 675, column: 12, scope: !10023)
!10025 = !DILocation(line: 675, column: 19, scope: !10023)
!10026 = !DILocation(line: 675, column: 23, scope: !10023)
!10027 = !DILocation(line: 675, column: 6, scope: !10000)
!10028 = !DILocation(line: 676, column: 7, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10023, file: !2525, line: 675, column: 51)
!10030 = !DILocation(line: 677, column: 2, scope: !10029)
!10031 = !DILocation(line: 679, column: 6, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10000, file: !2525, line: 679, column: 6)
!10033 = !DILocation(line: 679, column: 12, scope: !10032)
!10034 = !DILocation(line: 679, column: 19, scope: !10032)
!10035 = !DILocation(line: 679, column: 23, scope: !10032)
!10036 = !DILocation(line: 679, column: 6, scope: !10000)
!10037 = !DILocation(line: 680, column: 7, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10032, file: !2525, line: 679, column: 51)
!10039 = !DILocation(line: 681, column: 2, scope: !10038)
!10040 = !DILocation(line: 698, column: 2, scope: !10000)
!10041 = !DILocation(line: 698, column: 8, scope: !10000)
!10042 = !DILocation(line: 698, column: 15, scope: !10000)
!10043 = !DILocation(line: 698, column: 19, scope: !10000)
!10044 = !DILocation(line: 703, column: 23, scope: !10000)
!10045 = !DILocation(line: 703, column: 2, scope: !10000)
!10046 = !DILocation(line: 704, column: 9, scope: !10000)
!10047 = !DILocation(line: 704, column: 2, scope: !10000)
!10048 = distinct !DISubprogram(name: "uart_sam0_configure", scope: !2525, file: !2525, line: 388, type: !2113, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10049 = !DILocalVariable(name: "dev", arg: 1, scope: !10048, file: !2525, line: 388, type: !2088)
!10050 = !DILocation(line: 388, column: 53, scope: !10048)
!10051 = !DILocalVariable(name: "new_cfg", arg: 2, scope: !10048, file: !2525, line: 389, type: !2115)
!10052 = !DILocation(line: 389, column: 37, scope: !10048)
!10053 = !DILocalVariable(name: "retval", scope: !10048, file: !2525, line: 391, type: !103)
!10054 = !DILocation(line: 391, column: 6, scope: !10048)
!10055 = !DILocalVariable(name: "cfg", scope: !10048, file: !2525, line: 393, type: !10056)
!10056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9948)
!10057 = !DILocation(line: 393, column: 40, scope: !10048)
!10058 = !DILocation(line: 393, column: 46, scope: !10048)
!10059 = !DILocation(line: 393, column: 51, scope: !10048)
!10060 = !DILocalVariable(name: "dev_data", scope: !10048, file: !2525, line: 394, type: !10061)
!10061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10062)
!10062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!10063 = !DILocation(line: 394, column: 35, scope: !10048)
!10064 = !DILocation(line: 394, column: 46, scope: !10048)
!10065 = !DILocation(line: 394, column: 51, scope: !10048)
!10066 = !DILocalVariable(name: "usart", scope: !10048, file: !2525, line: 395, type: !9953)
!10067 = !DILocation(line: 395, column: 22, scope: !10048)
!10068 = !DILocation(line: 395, column: 30, scope: !10048)
!10069 = !DILocation(line: 395, column: 35, scope: !10048)
!10070 = !DILocation(line: 397, column: 23, scope: !10048)
!10071 = !DILocation(line: 397, column: 2, scope: !10048)
!10072 = !DILocation(line: 399, column: 2, scope: !10048)
!10073 = !DILocation(line: 399, column: 9, scope: !10048)
!10074 = !DILocation(line: 399, column: 15, scope: !10048)
!10075 = !DILocation(line: 399, column: 19, scope: !10048)
!10076 = !DILocation(line: 399, column: 26, scope: !10048)
!10077 = !DILocation(line: 400, column: 23, scope: !10048)
!10078 = !DILocation(line: 400, column: 2, scope: !10048)
!10079 = !DILocation(line: 402, column: 6, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10048, file: !2525, line: 402, column: 6)
!10081 = !DILocation(line: 402, column: 15, scope: !10080)
!10082 = !DILocation(line: 402, column: 25, scope: !10080)
!10083 = !DILocation(line: 402, column: 6, scope: !10048)
!10084 = !DILocation(line: 406, column: 3, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10080, file: !2525, line: 402, column: 53)
!10086 = !DILocation(line: 409, column: 37, scope: !10048)
!10087 = !DILocation(line: 409, column: 46, scope: !10048)
!10088 = !DILocation(line: 409, column: 2, scope: !10048)
!10089 = !DILocation(line: 409, column: 12, scope: !10048)
!10090 = !DILocation(line: 409, column: 25, scope: !10048)
!10091 = !DILocation(line: 409, column: 35, scope: !10048)
!10092 = !DILocalVariable(name: "CTRLA_temp", scope: !10048, file: !2525, line: 411, type: !2592)
!10093 = !DILocation(line: 411, column: 26, scope: !10048)
!10094 = !DILocation(line: 411, column: 39, scope: !10048)
!10095 = !DILocation(line: 411, column: 46, scope: !10048)
!10096 = !DILocalVariable(name: "CTRLB_temp", scope: !10048, file: !2525, line: 412, type: !2614)
!10097 = !DILocation(line: 412, column: 26, scope: !10048)
!10098 = !DILocation(line: 412, column: 39, scope: !10048)
!10099 = !DILocation(line: 412, column: 46, scope: !10048)
!10100 = !DILocation(line: 414, column: 10, scope: !10048)
!10101 = !DILocation(line: 414, column: 19, scope: !10048)
!10102 = !DILocation(line: 414, column: 2, scope: !10048)
!10103 = !DILocation(line: 416, column: 14, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10048, file: !2525, line: 414, column: 27)
!10105 = !DILocation(line: 416, column: 18, scope: !10104)
!10106 = !DILocation(line: 416, column: 23, scope: !10104)
!10107 = !DILocation(line: 417, column: 3, scope: !10104)
!10108 = !DILocation(line: 419, column: 14, scope: !10104)
!10109 = !DILocation(line: 419, column: 18, scope: !10104)
!10110 = !DILocation(line: 419, column: 23, scope: !10104)
!10111 = !DILocation(line: 420, column: 14, scope: !10104)
!10112 = !DILocation(line: 420, column: 18, scope: !10104)
!10113 = !DILocation(line: 420, column: 24, scope: !10104)
!10114 = !DILocation(line: 421, column: 3, scope: !10104)
!10115 = !DILocation(line: 423, column: 14, scope: !10104)
!10116 = !DILocation(line: 423, column: 18, scope: !10104)
!10117 = !DILocation(line: 423, column: 23, scope: !10104)
!10118 = !DILocation(line: 424, column: 14, scope: !10104)
!10119 = !DILocation(line: 424, column: 18, scope: !10104)
!10120 = !DILocation(line: 424, column: 24, scope: !10104)
!10121 = !DILocation(line: 425, column: 3, scope: !10104)
!10122 = !DILocation(line: 427, column: 3, scope: !10104)
!10123 = !DILocation(line: 430, column: 34, scope: !10048)
!10124 = !DILocation(line: 430, column: 43, scope: !10048)
!10125 = !DILocation(line: 430, column: 2, scope: !10048)
!10126 = !DILocation(line: 430, column: 12, scope: !10048)
!10127 = !DILocation(line: 430, column: 25, scope: !10048)
!10128 = !DILocation(line: 430, column: 32, scope: !10048)
!10129 = !DILocation(line: 432, column: 10, scope: !10048)
!10130 = !DILocation(line: 432, column: 19, scope: !10048)
!10131 = !DILocation(line: 432, column: 2, scope: !10048)
!10132 = !DILocation(line: 434, column: 14, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10048, file: !2525, line: 432, column: 30)
!10134 = !DILocation(line: 434, column: 18, scope: !10133)
!10135 = !DILocation(line: 434, column: 25, scope: !10133)
!10136 = !DILocation(line: 435, column: 3, scope: !10133)
!10137 = !DILocation(line: 437, column: 14, scope: !10133)
!10138 = !DILocation(line: 437, column: 18, scope: !10133)
!10139 = !DILocation(line: 437, column: 25, scope: !10133)
!10140 = !DILocation(line: 438, column: 3, scope: !10133)
!10141 = !DILocation(line: 440, column: 3, scope: !10133)
!10142 = !DILocation(line: 443, column: 37, scope: !10048)
!10143 = !DILocation(line: 443, column: 46, scope: !10048)
!10144 = !DILocation(line: 443, column: 2, scope: !10048)
!10145 = !DILocation(line: 443, column: 12, scope: !10048)
!10146 = !DILocation(line: 443, column: 25, scope: !10048)
!10147 = !DILocation(line: 443, column: 35, scope: !10048)
!10148 = !DILocation(line: 445, column: 10, scope: !10048)
!10149 = !DILocation(line: 445, column: 19, scope: !10048)
!10150 = !DILocation(line: 445, column: 2, scope: !10048)
!10151 = !DILocation(line: 447, column: 14, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10048, file: !2525, line: 445, column: 30)
!10153 = !DILocation(line: 447, column: 18, scope: !10152)
!10154 = !DILocation(line: 447, column: 25, scope: !10152)
!10155 = !DILocation(line: 448, column: 3, scope: !10152)
!10156 = !DILocation(line: 450, column: 14, scope: !10152)
!10157 = !DILocation(line: 450, column: 18, scope: !10152)
!10158 = !DILocation(line: 450, column: 25, scope: !10152)
!10159 = !DILocation(line: 451, column: 3, scope: !10152)
!10160 = !DILocation(line: 453, column: 14, scope: !10152)
!10161 = !DILocation(line: 453, column: 18, scope: !10152)
!10162 = !DILocation(line: 453, column: 25, scope: !10152)
!10163 = !DILocation(line: 454, column: 3, scope: !10152)
!10164 = !DILocation(line: 456, column: 14, scope: !10152)
!10165 = !DILocation(line: 456, column: 18, scope: !10152)
!10166 = !DILocation(line: 456, column: 25, scope: !10152)
!10167 = !DILocation(line: 457, column: 3, scope: !10152)
!10168 = !DILocation(line: 459, column: 14, scope: !10152)
!10169 = !DILocation(line: 459, column: 18, scope: !10152)
!10170 = !DILocation(line: 459, column: 25, scope: !10152)
!10171 = !DILocation(line: 460, column: 3, scope: !10152)
!10172 = !DILocation(line: 462, column: 3, scope: !10152)
!10173 = !DILocation(line: 465, column: 37, scope: !10048)
!10174 = !DILocation(line: 465, column: 46, scope: !10048)
!10175 = !DILocation(line: 465, column: 2, scope: !10048)
!10176 = !DILocation(line: 465, column: 12, scope: !10048)
!10177 = !DILocation(line: 465, column: 25, scope: !10048)
!10178 = !DILocation(line: 465, column: 35, scope: !10048)
!10179 = !DILocation(line: 471, column: 2, scope: !10048)
!10180 = !DILocation(line: 471, column: 9, scope: !10048)
!10181 = !DILocation(line: 471, column: 17, scope: !10048)
!10182 = !DILocation(line: 472, column: 23, scope: !10048)
!10183 = !DILocation(line: 472, column: 2, scope: !10048)
!10184 = !DILocation(line: 474, column: 2, scope: !10048)
!10185 = !DILocation(line: 474, column: 9, scope: !10048)
!10186 = !DILocation(line: 474, column: 17, scope: !10048)
!10187 = !DILocation(line: 475, column: 23, scope: !10048)
!10188 = !DILocation(line: 475, column: 2, scope: !10048)
!10189 = !DILocation(line: 477, column: 34, scope: !10048)
!10190 = !DILocation(line: 477, column: 41, scope: !10048)
!10191 = !DILocation(line: 477, column: 50, scope: !10048)
!10192 = !DILocation(line: 477, column: 11, scope: !10048)
!10193 = !DILocation(line: 477, column: 9, scope: !10048)
!10194 = !DILocation(line: 479, column: 6, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10048, file: !2525, line: 479, column: 6)
!10196 = !DILocation(line: 479, column: 13, scope: !10195)
!10197 = !DILocation(line: 479, column: 6, scope: !10048)
!10198 = !DILocation(line: 480, column: 10, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !2525, line: 479, column: 19)
!10200 = !DILocation(line: 480, column: 3, scope: !10199)
!10201 = !DILocation(line: 483, column: 36, scope: !10048)
!10202 = !DILocation(line: 483, column: 45, scope: !10048)
!10203 = !DILocation(line: 483, column: 2, scope: !10048)
!10204 = !DILocation(line: 483, column: 12, scope: !10048)
!10205 = !DILocation(line: 483, column: 25, scope: !10048)
!10206 = !DILocation(line: 483, column: 34, scope: !10048)
!10207 = !DILocation(line: 485, column: 2, scope: !10048)
!10208 = !DILocation(line: 485, column: 9, scope: !10048)
!10209 = !DILocation(line: 485, column: 15, scope: !10048)
!10210 = !DILocation(line: 485, column: 19, scope: !10048)
!10211 = !DILocation(line: 485, column: 26, scope: !10048)
!10212 = !DILocation(line: 486, column: 23, scope: !10048)
!10213 = !DILocation(line: 486, column: 2, scope: !10048)
!10214 = !DILocation(line: 488, column: 2, scope: !10048)
!10215 = !DILocation(line: 489, column: 1, scope: !10048)
!10216 = distinct !DISubprogram(name: "uart_sam0_config_get", scope: !2525, file: !2525, line: 491, type: !2126, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !2525, line: 491, type: !2088)
!10218 = !DILocation(line: 491, column: 54, scope: !10216)
!10219 = !DILocalVariable(name: "out_cfg", arg: 2, scope: !10216, file: !2525, line: 492, type: !2128)
!10220 = !DILocation(line: 492, column: 25, scope: !10216)
!10221 = !DILocalVariable(name: "dev_data", scope: !10216, file: !2525, line: 494, type: !10061)
!10222 = !DILocation(line: 494, column: 35, scope: !10216)
!10223 = !DILocation(line: 494, column: 46, scope: !10216)
!10224 = !DILocation(line: 494, column: 51, scope: !10216)
!10225 = !DILocation(line: 496, column: 9, scope: !10216)
!10226 = !DILocation(line: 496, column: 20, scope: !10216)
!10227 = !DILocation(line: 496, column: 30, scope: !10216)
!10228 = !DILocation(line: 496, column: 18, scope: !10216)
!10229 = !DILocation(line: 496, column: 2, scope: !10216)
!10230 = !DILocation(line: 499, column: 2, scope: !10216)
!10231 = distinct !DISubprogram(name: "uart_sam0_fifo_fill", scope: !2525, file: !2525, line: 783, type: !2131, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10232 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !2525, line: 783, type: !2088)
!10233 = !DILocation(line: 783, column: 53, scope: !10231)
!10234 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10231, file: !2525, line: 784, type: !1685)
!10235 = !DILocation(line: 784, column: 26, scope: !10231)
!10236 = !DILocalVariable(name: "len", arg: 3, scope: !10231, file: !2525, line: 784, type: !103)
!10237 = !DILocation(line: 784, column: 39, scope: !10231)
!10238 = !DILocalVariable(name: "config", scope: !10231, file: !2525, line: 786, type: !9948)
!10239 = !DILocation(line: 786, column: 34, scope: !10231)
!10240 = !DILocation(line: 786, column: 43, scope: !10231)
!10241 = !DILocation(line: 786, column: 48, scope: !10231)
!10242 = !DILocalVariable(name: "regs", scope: !10231, file: !2525, line: 787, type: !2585)
!10243 = !DILocation(line: 787, column: 15, scope: !10231)
!10244 = !DILocation(line: 787, column: 22, scope: !10231)
!10245 = !DILocation(line: 787, column: 30, scope: !10231)
!10246 = !DILocation(line: 789, column: 6, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10231, file: !2525, line: 789, column: 6)
!10248 = !DILocation(line: 789, column: 12, scope: !10247)
!10249 = !DILocation(line: 789, column: 20, scope: !10247)
!10250 = !DILocation(line: 789, column: 24, scope: !10247)
!10251 = !DILocation(line: 789, column: 28, scope: !10247)
!10252 = !DILocation(line: 789, column: 31, scope: !10247)
!10253 = !DILocation(line: 789, column: 35, scope: !10247)
!10254 = !DILocation(line: 789, column: 6, scope: !10231)
!10255 = !DILocation(line: 790, column: 20, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10247, file: !2525, line: 789, column: 41)
!10257 = !DILocation(line: 790, column: 3, scope: !10256)
!10258 = !DILocation(line: 790, column: 9, scope: !10256)
!10259 = !DILocation(line: 790, column: 14, scope: !10256)
!10260 = !DILocation(line: 790, column: 18, scope: !10256)
!10261 = !DILocation(line: 791, column: 3, scope: !10256)
!10262 = !DILocation(line: 793, column: 3, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10247, file: !2525, line: 792, column: 9)
!10264 = !DILocation(line: 795, column: 1, scope: !10231)
!10265 = distinct !DISubprogram(name: "uart_sam0_fifo_read", scope: !2525, file: !2525, line: 855, type: !2135, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10266 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !2525, line: 855, type: !2088)
!10267 = !DILocation(line: 855, column: 53, scope: !10265)
!10268 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10265, file: !2525, line: 855, type: !1690)
!10269 = !DILocation(line: 855, column: 67, scope: !10265)
!10270 = !DILocalVariable(name: "size", arg: 3, scope: !10265, file: !2525, line: 856, type: !1691)
!10271 = !DILocation(line: 856, column: 21, scope: !10265)
!10272 = !DILocalVariable(name: "config", scope: !10265, file: !2525, line: 858, type: !9948)
!10273 = !DILocation(line: 858, column: 34, scope: !10265)
!10274 = !DILocation(line: 858, column: 43, scope: !10265)
!10275 = !DILocation(line: 858, column: 48, scope: !10265)
!10276 = !DILocalVariable(name: "regs", scope: !10265, file: !2525, line: 859, type: !9953)
!10277 = !DILocation(line: 859, column: 22, scope: !10265)
!10278 = !DILocation(line: 859, column: 29, scope: !10265)
!10279 = !DILocation(line: 859, column: 37, scope: !10265)
!10280 = !DILocation(line: 861, column: 6, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10265, file: !2525, line: 861, column: 6)
!10282 = !DILocation(line: 861, column: 12, scope: !10281)
!10283 = !DILocation(line: 861, column: 20, scope: !10281)
!10284 = !DILocation(line: 861, column: 24, scope: !10281)
!10285 = !DILocation(line: 861, column: 6, scope: !10265)
!10286 = !DILocalVariable(name: "ch", scope: !10287, file: !2525, line: 862, type: !156)
!10287 = distinct !DILexicalBlock(scope: !10281, file: !2525, line: 861, column: 29)
!10288 = !DILocation(line: 862, column: 11, scope: !10287)
!10289 = !DILocation(line: 862, column: 16, scope: !10287)
!10290 = !DILocation(line: 862, column: 22, scope: !10287)
!10291 = !DILocation(line: 862, column: 27, scope: !10287)
!10292 = !DILocation(line: 864, column: 7, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10287, file: !2525, line: 864, column: 7)
!10294 = !DILocation(line: 864, column: 12, scope: !10293)
!10295 = !DILocation(line: 864, column: 7, scope: !10287)
!10296 = !DILocation(line: 865, column: 15, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !2525, line: 864, column: 18)
!10298 = !DILocation(line: 865, column: 5, scope: !10297)
!10299 = !DILocation(line: 865, column: 13, scope: !10297)
!10300 = !DILocation(line: 866, column: 4, scope: !10297)
!10301 = !DILocation(line: 868, column: 4, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10293, file: !2525, line: 867, column: 10)
!10303 = !DILocation(line: 871, column: 2, scope: !10265)
!10304 = !DILocation(line: 872, column: 1, scope: !10265)
!10305 = distinct !DISubprogram(name: "uart_sam0_irq_tx_enable", scope: !2525, file: !2525, line: 797, type: !2139, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10306 = !DILocalVariable(name: "dev", arg: 1, scope: !10305, file: !2525, line: 797, type: !2088)
!10307 = !DILocation(line: 797, column: 58, scope: !10305)
!10308 = !DILocalVariable(name: "config", scope: !10305, file: !2525, line: 799, type: !9948)
!10309 = !DILocation(line: 799, column: 34, scope: !10305)
!10310 = !DILocation(line: 799, column: 43, scope: !10305)
!10311 = !DILocation(line: 799, column: 48, scope: !10305)
!10312 = !DILocalVariable(name: "regs", scope: !10305, file: !2525, line: 800, type: !9953)
!10313 = !DILocation(line: 800, column: 22, scope: !10305)
!10314 = !DILocation(line: 800, column: 29, scope: !10305)
!10315 = !DILocation(line: 800, column: 37, scope: !10305)
!10316 = !DILocation(line: 802, column: 2, scope: !10305)
!10317 = !DILocation(line: 802, column: 8, scope: !10305)
!10318 = !DILocation(line: 802, column: 17, scope: !10305)
!10319 = !DILocation(line: 802, column: 21, scope: !10305)
!10320 = !DILocation(line: 804, column: 1, scope: !10305)
!10321 = distinct !DISubprogram(name: "uart_sam0_irq_tx_disable", scope: !2525, file: !2525, line: 806, type: !2139, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10321, file: !2525, line: 806, type: !2088)
!10323 = !DILocation(line: 806, column: 59, scope: !10321)
!10324 = !DILocalVariable(name: "config", scope: !10321, file: !2525, line: 808, type: !9948)
!10325 = !DILocation(line: 808, column: 34, scope: !10321)
!10326 = !DILocation(line: 808, column: 43, scope: !10321)
!10327 = !DILocation(line: 808, column: 48, scope: !10321)
!10328 = !DILocalVariable(name: "regs", scope: !10321, file: !2525, line: 809, type: !9953)
!10329 = !DILocation(line: 809, column: 22, scope: !10321)
!10330 = !DILocation(line: 809, column: 29, scope: !10321)
!10331 = !DILocation(line: 809, column: 37, scope: !10321)
!10332 = !DILocation(line: 811, column: 2, scope: !10321)
!10333 = !DILocation(line: 811, column: 8, scope: !10321)
!10334 = !DILocation(line: 811, column: 17, scope: !10321)
!10335 = !DILocation(line: 811, column: 21, scope: !10321)
!10336 = !DILocation(line: 813, column: 1, scope: !10321)
!10337 = distinct !DISubprogram(name: "uart_sam0_irq_tx_ready", scope: !2525, file: !2525, line: 815, type: !2109, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10338 = !DILocalVariable(name: "dev", arg: 1, scope: !10337, file: !2525, line: 815, type: !2088)
!10339 = !DILocation(line: 815, column: 56, scope: !10337)
!10340 = !DILocalVariable(name: "config", scope: !10337, file: !2525, line: 817, type: !9948)
!10341 = !DILocation(line: 817, column: 34, scope: !10337)
!10342 = !DILocation(line: 817, column: 43, scope: !10337)
!10343 = !DILocation(line: 817, column: 48, scope: !10337)
!10344 = !DILocalVariable(name: "regs", scope: !10337, file: !2525, line: 818, type: !9953)
!10345 = !DILocation(line: 818, column: 22, scope: !10337)
!10346 = !DILocation(line: 818, column: 29, scope: !10337)
!10347 = !DILocation(line: 818, column: 37, scope: !10337)
!10348 = !DILocation(line: 820, column: 10, scope: !10337)
!10349 = !DILocation(line: 820, column: 16, scope: !10337)
!10350 = !DILocation(line: 820, column: 24, scope: !10337)
!10351 = !DILocation(line: 820, column: 28, scope: !10337)
!10352 = !DILocation(line: 820, column: 32, scope: !10337)
!10353 = !DILocation(line: 820, column: 38, scope: !10337)
!10354 = !DILocation(line: 820, column: 42, scope: !10337)
!10355 = !DILocation(line: 820, column: 48, scope: !10337)
!10356 = !DILocation(line: 820, column: 57, scope: !10337)
!10357 = !DILocation(line: 820, column: 61, scope: !10337)
!10358 = !DILocation(line: 820, column: 65, scope: !10337)
!10359 = !DILocation(line: 0, scope: !10337)
!10360 = !DILocation(line: 820, column: 2, scope: !10337)
!10361 = distinct !DISubprogram(name: "uart_sam0_irq_rx_enable", scope: !2525, file: !2525, line: 831, type: !2139, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10362 = !DILocalVariable(name: "dev", arg: 1, scope: !10361, file: !2525, line: 831, type: !2088)
!10363 = !DILocation(line: 831, column: 58, scope: !10361)
!10364 = !DILocalVariable(name: "config", scope: !10361, file: !2525, line: 833, type: !9948)
!10365 = !DILocation(line: 833, column: 34, scope: !10361)
!10366 = !DILocation(line: 833, column: 43, scope: !10361)
!10367 = !DILocation(line: 833, column: 48, scope: !10361)
!10368 = !DILocalVariable(name: "regs", scope: !10361, file: !2525, line: 834, type: !9953)
!10369 = !DILocation(line: 834, column: 22, scope: !10361)
!10370 = !DILocation(line: 834, column: 29, scope: !10361)
!10371 = !DILocation(line: 834, column: 37, scope: !10361)
!10372 = !DILocation(line: 836, column: 2, scope: !10361)
!10373 = !DILocation(line: 836, column: 8, scope: !10361)
!10374 = !DILocation(line: 836, column: 17, scope: !10361)
!10375 = !DILocation(line: 836, column: 21, scope: !10361)
!10376 = !DILocation(line: 837, column: 1, scope: !10361)
!10377 = distinct !DISubprogram(name: "uart_sam0_irq_rx_disable", scope: !2525, file: !2525, line: 839, type: !2139, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10378 = !DILocalVariable(name: "dev", arg: 1, scope: !10377, file: !2525, line: 839, type: !2088)
!10379 = !DILocation(line: 839, column: 59, scope: !10377)
!10380 = !DILocalVariable(name: "config", scope: !10377, file: !2525, line: 841, type: !9948)
!10381 = !DILocation(line: 841, column: 34, scope: !10377)
!10382 = !DILocation(line: 841, column: 43, scope: !10377)
!10383 = !DILocation(line: 841, column: 48, scope: !10377)
!10384 = !DILocalVariable(name: "regs", scope: !10377, file: !2525, line: 842, type: !9953)
!10385 = !DILocation(line: 842, column: 22, scope: !10377)
!10386 = !DILocation(line: 842, column: 29, scope: !10377)
!10387 = !DILocation(line: 842, column: 37, scope: !10377)
!10388 = !DILocation(line: 844, column: 2, scope: !10377)
!10389 = !DILocation(line: 844, column: 8, scope: !10377)
!10390 = !DILocation(line: 844, column: 17, scope: !10377)
!10391 = !DILocation(line: 844, column: 21, scope: !10377)
!10392 = !DILocation(line: 845, column: 1, scope: !10377)
!10393 = distinct !DISubprogram(name: "uart_sam0_irq_tx_complete", scope: !2525, file: !2525, line: 823, type: !2109, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10394 = !DILocalVariable(name: "dev", arg: 1, scope: !10393, file: !2525, line: 823, type: !2088)
!10395 = !DILocation(line: 823, column: 59, scope: !10393)
!10396 = !DILocalVariable(name: "config", scope: !10393, file: !2525, line: 825, type: !9948)
!10397 = !DILocation(line: 825, column: 34, scope: !10393)
!10398 = !DILocation(line: 825, column: 43, scope: !10393)
!10399 = !DILocation(line: 825, column: 48, scope: !10393)
!10400 = !DILocalVariable(name: "regs", scope: !10393, file: !2525, line: 826, type: !9953)
!10401 = !DILocation(line: 826, column: 22, scope: !10393)
!10402 = !DILocation(line: 826, column: 29, scope: !10393)
!10403 = !DILocation(line: 826, column: 37, scope: !10393)
!10404 = !DILocation(line: 828, column: 10, scope: !10393)
!10405 = !DILocation(line: 828, column: 16, scope: !10393)
!10406 = !DILocation(line: 828, column: 24, scope: !10393)
!10407 = !DILocation(line: 828, column: 28, scope: !10393)
!10408 = !DILocation(line: 828, column: 32, scope: !10393)
!10409 = !DILocation(line: 828, column: 38, scope: !10393)
!10410 = !DILocation(line: 828, column: 42, scope: !10393)
!10411 = !DILocation(line: 828, column: 48, scope: !10393)
!10412 = !DILocation(line: 828, column: 57, scope: !10393)
!10413 = !DILocation(line: 828, column: 61, scope: !10393)
!10414 = !DILocation(line: 828, column: 65, scope: !10393)
!10415 = !DILocation(line: 0, scope: !10393)
!10416 = !DILocation(line: 828, column: 2, scope: !10393)
!10417 = distinct !DISubprogram(name: "uart_sam0_irq_rx_ready", scope: !2525, file: !2525, line: 847, type: !2109, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10418 = !DILocalVariable(name: "dev", arg: 1, scope: !10417, file: !2525, line: 847, type: !2088)
!10419 = !DILocation(line: 847, column: 56, scope: !10417)
!10420 = !DILocalVariable(name: "config", scope: !10417, file: !2525, line: 849, type: !9948)
!10421 = !DILocation(line: 849, column: 34, scope: !10417)
!10422 = !DILocation(line: 849, column: 43, scope: !10417)
!10423 = !DILocation(line: 849, column: 48, scope: !10417)
!10424 = !DILocalVariable(name: "regs", scope: !10417, file: !2525, line: 850, type: !9953)
!10425 = !DILocation(line: 850, column: 22, scope: !10417)
!10426 = !DILocation(line: 850, column: 29, scope: !10417)
!10427 = !DILocation(line: 850, column: 37, scope: !10417)
!10428 = !DILocation(line: 852, column: 9, scope: !10417)
!10429 = !DILocation(line: 852, column: 15, scope: !10417)
!10430 = !DILocation(line: 852, column: 23, scope: !10417)
!10431 = !DILocation(line: 852, column: 27, scope: !10417)
!10432 = !DILocation(line: 852, column: 31, scope: !10417)
!10433 = !DILocation(line: 852, column: 2, scope: !10417)
!10434 = distinct !DISubprogram(name: "uart_sam0_irq_is_pending", scope: !2525, file: !2525, line: 874, type: !2109, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10435 = !DILocalVariable(name: "dev", arg: 1, scope: !10434, file: !2525, line: 874, type: !2088)
!10436 = !DILocation(line: 874, column: 58, scope: !10434)
!10437 = !DILocalVariable(name: "config", scope: !10434, file: !2525, line: 876, type: !9948)
!10438 = !DILocation(line: 876, column: 34, scope: !10434)
!10439 = !DILocation(line: 876, column: 43, scope: !10434)
!10440 = !DILocation(line: 876, column: 48, scope: !10434)
!10441 = !DILocalVariable(name: "regs", scope: !10434, file: !2525, line: 877, type: !9953)
!10442 = !DILocation(line: 877, column: 22, scope: !10434)
!10443 = !DILocation(line: 877, column: 29, scope: !10434)
!10444 = !DILocation(line: 877, column: 37, scope: !10434)
!10445 = !DILocation(line: 879, column: 10, scope: !10434)
!10446 = !DILocation(line: 879, column: 16, scope: !10434)
!10447 = !DILocation(line: 879, column: 25, scope: !10434)
!10448 = !DILocation(line: 879, column: 31, scope: !10434)
!10449 = !DILocation(line: 879, column: 37, scope: !10434)
!10450 = !DILocation(line: 879, column: 45, scope: !10434)
!10451 = !DILocation(line: 879, column: 29, scope: !10434)
!10452 = !DILocation(line: 879, column: 50, scope: !10434)
!10453 = !DILocation(line: 879, column: 2, scope: !10434)
!10454 = distinct !DISubprogram(name: "uart_sam0_irq_update", scope: !2525, file: !2525, line: 902, type: !2109, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10455 = !DILocalVariable(name: "dev", arg: 1, scope: !10454, file: !2525, line: 902, type: !2088)
!10456 = !DILocation(line: 902, column: 54, scope: !10454)
!10457 = !DILocalVariable(name: "config", scope: !10454, file: !2525, line: 905, type: !9948)
!10458 = !DILocation(line: 905, column: 34, scope: !10454)
!10459 = !DILocation(line: 905, column: 43, scope: !10454)
!10460 = !DILocation(line: 905, column: 48, scope: !10454)
!10461 = !DILocalVariable(name: "regs", scope: !10454, file: !2525, line: 906, type: !9953)
!10462 = !DILocation(line: 906, column: 22, scope: !10454)
!10463 = !DILocation(line: 906, column: 29, scope: !10454)
!10464 = !DILocation(line: 906, column: 37, scope: !10454)
!10465 = !DILocation(line: 913, column: 2, scope: !10454)
!10466 = !DILocation(line: 913, column: 8, scope: !10454)
!10467 = !DILocation(line: 913, column: 16, scope: !10454)
!10468 = !DILocation(line: 913, column: 20, scope: !10454)
!10469 = !DILocation(line: 915, column: 2, scope: !10454)
!10470 = distinct !DISubprogram(name: "uart_sam0_irq_callback_set", scope: !2525, file: !2525, line: 918, type: !2153, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10471 = !DILocalVariable(name: "dev", arg: 1, scope: !10470, file: !2525, line: 918, type: !2088)
!10472 = !DILocation(line: 918, column: 61, scope: !10470)
!10473 = !DILocalVariable(name: "cb", arg: 2, scope: !10470, file: !2525, line: 919, type: !2155)
!10474 = !DILocation(line: 919, column: 42, scope: !10470)
!10475 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10470, file: !2525, line: 920, type: !102)
!10476 = !DILocation(line: 920, column: 18, scope: !10470)
!10477 = !DILocalVariable(name: "dev_data", scope: !10470, file: !2525, line: 922, type: !10061)
!10478 = !DILocation(line: 922, column: 35, scope: !10470)
!10479 = !DILocation(line: 922, column: 46, scope: !10470)
!10480 = !DILocation(line: 922, column: 51, scope: !10470)
!10481 = !DILocation(line: 924, column: 17, scope: !10470)
!10482 = !DILocation(line: 924, column: 2, scope: !10470)
!10483 = !DILocation(line: 924, column: 12, scope: !10470)
!10484 = !DILocation(line: 924, column: 15, scope: !10470)
!10485 = !DILocation(line: 925, column: 22, scope: !10470)
!10486 = !DILocation(line: 925, column: 2, scope: !10470)
!10487 = !DILocation(line: 925, column: 12, scope: !10470)
!10488 = !DILocation(line: 925, column: 20, scope: !10470)
!10489 = !DILocation(line: 926, column: 1, scope: !10470)
!10490 = distinct !DISubprogram(name: "wait_synchronization", scope: !2525, file: !2525, line: 91, type: !10491, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10491 = !DISubroutineType(types: !10492)
!10492 = !{null, !9953}
!10493 = !DILocalVariable(name: "usart", arg: 1, scope: !10490, file: !2525, line: 91, type: !9953)
!10494 = !DILocation(line: 91, column: 53, scope: !10490)
!10495 = !DILocation(line: 95, column: 2, scope: !10490)
!10496 = !DILocation(line: 95, column: 10, scope: !10490)
!10497 = !DILocation(line: 95, column: 17, scope: !10490)
!10498 = !DILocation(line: 95, column: 26, scope: !10490)
!10499 = !DILocation(line: 95, column: 30, scope: !10490)
!10500 = !DILocation(line: 95, column: 60, scope: !10490)
!10501 = distinct !{!10501, !10495, !10502}
!10502 = !DILocation(line: 96, column: 2, scope: !10490)
!10503 = !DILocation(line: 104, column: 1, scope: !10490)
!10504 = distinct !DISubprogram(name: "uart_sam0_set_baudrate", scope: !2525, file: !2525, line: 106, type: !10505, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10505 = !DISubroutineType(types: !10506)
!10506 = !{!103, !9953, !173, !173}
!10507 = !DILocalVariable(name: "usart", arg: 1, scope: !10504, file: !2525, line: 106, type: !9953)
!10508 = !DILocation(line: 106, column: 54, scope: !10504)
!10509 = !DILocalVariable(name: "baudrate", arg: 2, scope: !10504, file: !2525, line: 106, type: !173)
!10510 = !DILocation(line: 106, column: 70, scope: !10504)
!10511 = !DILocalVariable(name: "clk_freq_hz", arg: 3, scope: !10504, file: !2525, line: 107, type: !173)
!10512 = !DILocation(line: 107, column: 16, scope: !10504)
!10513 = !DILocalVariable(name: "tmp", scope: !10504, file: !2525, line: 109, type: !2246)
!10514 = !DILocation(line: 109, column: 11, scope: !10504)
!10515 = !DILocalVariable(name: "baud", scope: !10504, file: !2525, line: 110, type: !170)
!10516 = !DILocation(line: 110, column: 11, scope: !10504)
!10517 = !DILocation(line: 112, column: 18, scope: !10504)
!10518 = !DILocation(line: 112, column: 8, scope: !10504)
!10519 = !DILocation(line: 112, column: 27, scope: !10504)
!10520 = !DILocation(line: 112, column: 6, scope: !10504)
!10521 = !DILocation(line: 113, column: 9, scope: !10504)
!10522 = !DILocation(line: 113, column: 16, scope: !10504)
!10523 = !DILocation(line: 113, column: 28, scope: !10504)
!10524 = !DILocation(line: 113, column: 15, scope: !10504)
!10525 = !DILocation(line: 113, column: 13, scope: !10504)
!10526 = !DILocation(line: 113, column: 37, scope: !10504)
!10527 = !DILocation(line: 113, column: 35, scope: !10504)
!10528 = !DILocation(line: 113, column: 6, scope: !10504)
!10529 = !DILocation(line: 116, column: 6, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10504, file: !2525, line: 116, column: 6)
!10531 = !DILocation(line: 116, column: 10, scope: !10530)
!10532 = !DILocation(line: 116, column: 14, scope: !10530)
!10533 = !DILocation(line: 116, column: 17, scope: !10530)
!10534 = !DILocation(line: 116, column: 21, scope: !10530)
!10535 = !DILocation(line: 116, column: 6, scope: !10504)
!10536 = !DILocation(line: 117, column: 3, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10530, file: !2525, line: 116, column: 35)
!10538 = !DILocation(line: 120, column: 27, scope: !10504)
!10539 = !DILocation(line: 120, column: 17, scope: !10504)
!10540 = !DILocation(line: 120, column: 15, scope: !10504)
!10541 = !DILocation(line: 120, column: 9, scope: !10504)
!10542 = !DILocation(line: 120, column: 7, scope: !10504)
!10543 = !DILocation(line: 121, column: 20, scope: !10504)
!10544 = !DILocation(line: 121, column: 2, scope: !10504)
!10545 = !DILocation(line: 121, column: 9, scope: !10504)
!10546 = !DILocation(line: 121, column: 14, scope: !10504)
!10547 = !DILocation(line: 121, column: 18, scope: !10504)
!10548 = !DILocation(line: 122, column: 23, scope: !10504)
!10549 = !DILocation(line: 122, column: 2, scope: !10504)
!10550 = !DILocation(line: 124, column: 2, scope: !10504)
!10551 = !DILocation(line: 125, column: 1, scope: !10504)
!10552 = !DILocalVariable(name: "dev", arg: 1, scope: !2547, file: !2525, line: 1293, type: !2088)
!10553 = !DILocation(line: 1293, column: 1, scope: !2547)
!10554 = !DILocation(line: 1293, column: 1, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !2525, line: 1293, column: 1)
!10556 = distinct !DILexicalBlock(scope: !2547, file: !2525, line: 1293, column: 1)
!10557 = !DILocation(line: 1293, column: 1, scope: !10556)
!10558 = distinct !DISubprogram(name: "uart_sam0_isr", scope: !2525, file: !2525, line: 709, type: !2139, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10559 = !DILocalVariable(name: "dev", arg: 1, scope: !10558, file: !2525, line: 709, type: !2088)
!10560 = !DILocation(line: 709, column: 48, scope: !10558)
!10561 = !DILocalVariable(name: "dev_data", scope: !10558, file: !2525, line: 711, type: !10061)
!10562 = !DILocation(line: 711, column: 35, scope: !10558)
!10563 = !DILocation(line: 711, column: 46, scope: !10558)
!10564 = !DILocation(line: 711, column: 51, scope: !10558)
!10565 = !DILocation(line: 714, column: 6, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10558, file: !2525, line: 714, column: 6)
!10567 = !DILocation(line: 714, column: 16, scope: !10566)
!10568 = !DILocation(line: 714, column: 6, scope: !10558)
!10569 = !DILocation(line: 715, column: 3, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !2525, line: 714, column: 20)
!10571 = !DILocation(line: 715, column: 13, scope: !10570)
!10572 = !DILocation(line: 715, column: 16, scope: !10570)
!10573 = !DILocation(line: 715, column: 21, scope: !10570)
!10574 = !DILocation(line: 715, column: 31, scope: !10570)
!10575 = !DILocation(line: 716, column: 2, scope: !10570)
!10576 = !DILocation(line: 777, column: 1, scope: !10558)
!10577 = distinct !DISubprogram(name: "uart_sam0_init", scope: !2525, file: !2525, line: 503, type: !2109, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10578 = !DILocalVariable(name: "dev", arg: 1, scope: !10577, file: !2525, line: 503, type: !2088)
!10579 = !DILocation(line: 503, column: 48, scope: !10577)
!10580 = !DILocalVariable(name: "retval", scope: !10577, file: !2525, line: 505, type: !103)
!10581 = !DILocation(line: 505, column: 6, scope: !10577)
!10582 = !DILocalVariable(name: "cfg", scope: !10577, file: !2525, line: 506, type: !10056)
!10583 = !DILocation(line: 506, column: 40, scope: !10577)
!10584 = !DILocation(line: 506, column: 46, scope: !10577)
!10585 = !DILocation(line: 506, column: 51, scope: !10577)
!10586 = !DILocalVariable(name: "dev_data", scope: !10577, file: !2525, line: 507, type: !10061)
!10587 = !DILocation(line: 507, column: 35, scope: !10577)
!10588 = !DILocation(line: 507, column: 46, scope: !10577)
!10589 = !DILocation(line: 507, column: 51, scope: !10577)
!10590 = !DILocalVariable(name: "usart", scope: !10577, file: !2525, line: 509, type: !9953)
!10591 = !DILocation(line: 509, column: 22, scope: !10577)
!10592 = !DILocation(line: 509, column: 30, scope: !10577)
!10593 = !DILocation(line: 509, column: 35, scope: !10577)
!10594 = !DILocation(line: 520, column: 22, scope: !10577)
!10595 = !DILocation(line: 520, column: 27, scope: !10577)
!10596 = !DILocation(line: 520, column: 43, scope: !10577)
!10597 = !DILocation(line: 520, column: 68, scope: !10577)
!10598 = !DILocation(line: 520, column: 20, scope: !10577)
!10599 = !DILocation(line: 524, column: 22, scope: !10577)
!10600 = !DILocation(line: 524, column: 27, scope: !10577)
!10601 = !DILocation(line: 524, column: 19, scope: !10577)
!10602 = !DILocation(line: 528, column: 2, scope: !10577)
!10603 = !DILocation(line: 528, column: 9, scope: !10577)
!10604 = !DILocation(line: 528, column: 18, scope: !10577)
!10605 = !DILocation(line: 528, column: 22, scope: !10577)
!10606 = !DILocation(line: 529, column: 23, scope: !10577)
!10607 = !DILocation(line: 529, column: 2, scope: !10577)
!10608 = !DILocation(line: 533, column: 6, scope: !10577)
!10609 = !DILocation(line: 533, column: 11, scope: !10577)
!10610 = !DILocation(line: 535, column: 6, scope: !10577)
!10611 = !DILocation(line: 538, column: 6, scope: !10577)
!10612 = !DILocation(line: 540, column: 6, scope: !10577)
!10613 = !DILocation(line: 540, column: 35, scope: !10577)
!10614 = !DILocation(line: 541, column: 30, scope: !10577)
!10615 = !DILocation(line: 532, column: 2, scope: !10577)
!10616 = !DILocation(line: 532, column: 9, scope: !10577)
!10617 = !DILocation(line: 532, column: 15, scope: !10577)
!10618 = !DILocation(line: 532, column: 19, scope: !10577)
!10619 = !DILocation(line: 542, column: 23, scope: !10577)
!10620 = !DILocation(line: 542, column: 2, scope: !10577)
!10621 = !DILocation(line: 545, column: 31, scope: !10577)
!10622 = !DILocation(line: 545, column: 36, scope: !10577)
!10623 = !DILocation(line: 545, column: 11, scope: !10577)
!10624 = !DILocation(line: 545, column: 9, scope: !10577)
!10625 = !DILocation(line: 546, column: 6, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10577, file: !2525, line: 546, column: 6)
!10627 = !DILocation(line: 546, column: 13, scope: !10626)
!10628 = !DILocation(line: 546, column: 6, scope: !10577)
!10629 = !DILocation(line: 547, column: 10, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !2525, line: 546, column: 18)
!10631 = !DILocation(line: 547, column: 3, scope: !10630)
!10632 = !DILocation(line: 550, column: 2, scope: !10577)
!10633 = !DILocation(line: 550, column: 12, scope: !10577)
!10634 = !DILocation(line: 550, column: 25, scope: !10577)
!10635 = !DILocation(line: 550, column: 35, scope: !10577)
!10636 = !DILocation(line: 551, column: 2, scope: !10577)
!10637 = !DILocation(line: 551, column: 12, scope: !10577)
!10638 = !DILocation(line: 551, column: 25, scope: !10577)
!10639 = !DILocation(line: 551, column: 32, scope: !10577)
!10640 = !DILocation(line: 552, column: 2, scope: !10577)
!10641 = !DILocation(line: 552, column: 12, scope: !10577)
!10642 = !DILocation(line: 552, column: 25, scope: !10577)
!10643 = !DILocation(line: 552, column: 35, scope: !10577)
!10644 = !DILocation(line: 553, column: 2, scope: !10577)
!10645 = !DILocation(line: 553, column: 12, scope: !10577)
!10646 = !DILocation(line: 553, column: 25, scope: !10577)
!10647 = !DILocation(line: 553, column: 35, scope: !10577)
!10648 = !DILocation(line: 556, column: 2, scope: !10577)
!10649 = !DILocation(line: 556, column: 9, scope: !10577)
!10650 = !DILocation(line: 556, column: 15, scope: !10577)
!10651 = !DILocation(line: 556, column: 19, scope: !10577)
!10652 = !DILocation(line: 558, column: 23, scope: !10577)
!10653 = !DILocation(line: 558, column: 2, scope: !10577)
!10654 = !DILocation(line: 560, column: 34, scope: !10577)
!10655 = !DILocation(line: 560, column: 41, scope: !10577)
!10656 = !DILocation(line: 560, column: 46, scope: !10577)
!10657 = !DILocation(line: 560, column: 11, scope: !10577)
!10658 = !DILocation(line: 560, column: 9, scope: !10577)
!10659 = !DILocation(line: 562, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10577, file: !2525, line: 562, column: 6)
!10661 = !DILocation(line: 562, column: 13, scope: !10660)
!10662 = !DILocation(line: 562, column: 6, scope: !10577)
!10663 = !DILocation(line: 563, column: 10, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !2525, line: 562, column: 19)
!10665 = !DILocation(line: 563, column: 3, scope: !10664)
!10666 = !DILocation(line: 565, column: 36, scope: !10577)
!10667 = !DILocation(line: 565, column: 41, scope: !10577)
!10668 = !DILocation(line: 565, column: 2, scope: !10577)
!10669 = !DILocation(line: 565, column: 12, scope: !10577)
!10670 = !DILocation(line: 565, column: 25, scope: !10577)
!10671 = !DILocation(line: 565, column: 34, scope: !10577)
!10672 = !DILocation(line: 568, column: 2, scope: !10577)
!10673 = !DILocation(line: 568, column: 7, scope: !10577)
!10674 = !DILocation(line: 568, column: 23, scope: !10577)
!10675 = !DILocation(line: 631, column: 2, scope: !10577)
!10676 = !DILocation(line: 631, column: 9, scope: !10577)
!10677 = !DILocation(line: 631, column: 15, scope: !10577)
!10678 = !DILocation(line: 631, column: 19, scope: !10577)
!10679 = !DILocation(line: 631, column: 26, scope: !10577)
!10680 = !DILocation(line: 632, column: 23, scope: !10577)
!10681 = !DILocation(line: 632, column: 2, scope: !10577)
!10682 = !DILocation(line: 634, column: 2, scope: !10577)
!10683 = !DILocation(line: 635, column: 1, scope: !10577)
!10684 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2558, file: !2558, line: 342, type: !10685, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10685 = !DISubroutineType(types: !10686)
!10686 = !{!103, !2774, !156}
!10687 = !DILocalVariable(name: "config", arg: 1, scope: !10684, file: !2558, line: 342, type: !2774)
!10688 = !DILocation(line: 342, column: 72, scope: !10684)
!10689 = !DILocalVariable(name: "id", arg: 2, scope: !10684, file: !2558, line: 343, type: !156)
!10690 = !DILocation(line: 343, column: 19, scope: !10684)
!10691 = !DILocalVariable(name: "ret", scope: !10684, file: !2558, line: 345, type: !103)
!10692 = !DILocation(line: 345, column: 6, scope: !10684)
!10693 = !DILocalVariable(name: "state", scope: !10684, file: !2558, line: 346, type: !2561)
!10694 = !DILocation(line: 346, column: 30, scope: !10684)
!10695 = !DILocation(line: 348, column: 29, scope: !10684)
!10696 = !DILocation(line: 348, column: 37, scope: !10684)
!10697 = !DILocation(line: 348, column: 8, scope: !10684)
!10698 = !DILocation(line: 348, column: 6, scope: !10684)
!10699 = !DILocation(line: 349, column: 6, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10684, file: !2558, line: 349, column: 6)
!10701 = !DILocation(line: 349, column: 10, scope: !10700)
!10702 = !DILocation(line: 349, column: 6, scope: !10684)
!10703 = !DILocation(line: 350, column: 10, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10700, file: !2558, line: 349, column: 15)
!10705 = !DILocation(line: 350, column: 3, scope: !10704)
!10706 = !DILocation(line: 353, column: 36, scope: !10684)
!10707 = !DILocation(line: 353, column: 44, scope: !10684)
!10708 = !DILocation(line: 353, column: 9, scope: !10684)
!10709 = !DILocation(line: 353, column: 2, scope: !10684)
!10710 = !DILocation(line: 354, column: 1, scope: !10684)
!10711 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2558, file: !2558, line: 316, type: !10712, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2032, retainedNodes: !223)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!103, !2774, !2561}
!10714 = !DILocalVariable(name: "config", arg: 1, scope: !10711, file: !2558, line: 317, type: !2774)
!10715 = !DILocation(line: 317, column: 35, scope: !10711)
!10716 = !DILocalVariable(name: "state", arg: 2, scope: !10711, file: !2558, line: 318, type: !2561)
!10717 = !DILocation(line: 318, column: 30, scope: !10711)
!10718 = !DILocalVariable(name: "reg", scope: !10711, file: !2558, line: 320, type: !22)
!10719 = !DILocation(line: 320, column: 12, scope: !10711)
!10720 = !DILocation(line: 325, column: 2, scope: !10711)
!10721 = !DILocation(line: 326, column: 6, scope: !10711)
!10722 = !DILocation(line: 329, column: 32, scope: !10711)
!10723 = !DILocation(line: 329, column: 39, scope: !10711)
!10724 = !DILocation(line: 329, column: 45, scope: !10711)
!10725 = !DILocation(line: 329, column: 52, scope: !10711)
!10726 = !DILocation(line: 329, column: 61, scope: !10711)
!10727 = !DILocation(line: 329, column: 9, scope: !10711)
!10728 = !DILocation(line: 329, column: 2, scope: !10711)
!10729 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2865, file: !2865, line: 270, type: !2871, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10730 = !DILocalVariable(name: "dev", arg: 1, scope: !10729, file: !2865, line: 270, type: !2873)
!10731 = !DILocation(line: 270, column: 55, scope: !10729)
!10732 = !DILocation(line: 272, column: 2, scope: !10729)
!10733 = !DILocation(line: 274, column: 2, scope: !10729)
!10734 = !DILocation(line: 275, column: 14, scope: !10729)
!10735 = !DILocation(line: 275, column: 27, scope: !10729)
!10736 = !DILocation(line: 275, column: 12, scope: !10729)
!10737 = !DILocation(line: 276, column: 15, scope: !10729)
!10738 = !DILocation(line: 277, column: 18, scope: !10729)
!10739 = !DILocation(line: 277, column: 16, scope: !10729)
!10740 = !DILocation(line: 278, column: 15, scope: !10729)
!10741 = !DILocation(line: 279, column: 16, scope: !10729)
!10742 = !DILocation(line: 282, column: 2, scope: !10729)
!10743 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2819, file: !2819, line: 850, type: !6985, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10744 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10743, file: !2819, line: 850, type: !3609)
!10745 = !DILocation(line: 850, column: 51, scope: !10743)
!10746 = !DILocalVariable(name: "priority", arg: 2, scope: !10743, file: !2819, line: 850, type: !173)
!10747 = !DILocation(line: 850, column: 66, scope: !10743)
!10748 = !DILocation(line: 852, column: 17, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10743, file: !2819, line: 852, column: 7)
!10750 = !DILocation(line: 852, column: 23, scope: !10749)
!10751 = !DILocation(line: 852, column: 7, scope: !10743)
!10752 = !DILocation(line: 854, column: 53, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10749, file: !2819, line: 853, column: 3)
!10754 = !DILocation(line: 854, column: 44, scope: !10753)
!10755 = !DILocation(line: 854, column: 83, scope: !10753)
!10756 = !DILocation(line: 854, column: 80, scope: !10753)
!10757 = !DILocation(line: 854, column: 71, scope: !10753)
!10758 = !DILocation(line: 854, column: 69, scope: !10753)
!10759 = !DILocation(line: 855, column: 11, scope: !10753)
!10760 = !DILocation(line: 855, column: 20, scope: !10753)
!10761 = !DILocation(line: 855, column: 48, scope: !10753)
!10762 = !DILocation(line: 855, column: 71, scope: !10753)
!10763 = !DILocation(line: 855, column: 68, scope: !10753)
!10764 = !DILocation(line: 854, column: 102, scope: !10753)
!10765 = !DILocation(line: 854, column: 14, scope: !10753)
!10766 = !DILocation(line: 854, column: 5, scope: !10753)
!10767 = !DILocation(line: 854, column: 30, scope: !10753)
!10768 = !DILocation(line: 856, column: 3, scope: !10753)
!10769 = !DILocation(line: 859, column: 53, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10749, file: !2819, line: 858, column: 3)
!10771 = !DILocation(line: 859, column: 44, scope: !10770)
!10772 = !DILocation(line: 859, column: 83, scope: !10770)
!10773 = !DILocation(line: 859, column: 80, scope: !10770)
!10774 = !DILocation(line: 859, column: 71, scope: !10770)
!10775 = !DILocation(line: 859, column: 69, scope: !10770)
!10776 = !DILocation(line: 860, column: 11, scope: !10770)
!10777 = !DILocation(line: 860, column: 20, scope: !10770)
!10778 = !DILocation(line: 860, column: 48, scope: !10770)
!10779 = !DILocation(line: 860, column: 71, scope: !10770)
!10780 = !DILocation(line: 860, column: 68, scope: !10770)
!10781 = !DILocation(line: 859, column: 102, scope: !10770)
!10782 = !DILocation(line: 859, column: 14, scope: !10770)
!10783 = !DILocation(line: 859, column: 5, scope: !10770)
!10784 = !DILocation(line: 859, column: 30, scope: !10770)
!10785 = !DILocation(line: 862, column: 1, scope: !10743)
!10786 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !10787, file: !10787, line: 59, type: !3989, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10787 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10788 = !DILocation(line: 64, column: 2, scope: !10786)
!10789 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2865, file: !2865, line: 118, type: !6887, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10790 = !DILocalVariable(name: "arg", arg: 1, scope: !10789, file: !2865, line: 118, type: !102)
!10791 = !DILocation(line: 118, column: 26, scope: !10789)
!10792 = !DILocation(line: 120, column: 2, scope: !10789)
!10793 = !DILocalVariable(name: "dticks", scope: !10789, file: !2865, line: 121, type: !173)
!10794 = !DILocation(line: 121, column: 11, scope: !10789)
!10795 = !DILocation(line: 124, column: 2, scope: !10789)
!10796 = !DILocation(line: 129, column: 17, scope: !10789)
!10797 = !DILocation(line: 129, column: 14, scope: !10789)
!10798 = !DILocation(line: 130, column: 15, scope: !10789)
!10799 = !DILocation(line: 145, column: 13, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !2865, line: 132, column: 16)
!10801 = distinct !DILexicalBlock(scope: !10789, file: !2865, line: 132, column: 6)
!10802 = !DILocation(line: 145, column: 27, scope: !10800)
!10803 = !DILocation(line: 145, column: 25, scope: !10800)
!10804 = !DILocation(line: 145, column: 47, scope: !10800)
!10805 = !DILocation(line: 145, column: 45, scope: !10800)
!10806 = !DILocation(line: 145, column: 10, scope: !10800)
!10807 = !DILocation(line: 146, column: 23, scope: !10800)
!10808 = !DILocation(line: 146, column: 32, scope: !10800)
!10809 = !DILocation(line: 146, column: 30, scope: !10800)
!10810 = !DILocation(line: 146, column: 20, scope: !10800)
!10811 = !DILocation(line: 147, column: 22, scope: !10800)
!10812 = !DILocation(line: 147, column: 3, scope: !10800)
!10813 = !DILocation(line: 151, column: 2, scope: !10789)
!10814 = !DILocation(line: 152, column: 1, scope: !10789)
!10815 = distinct !DISubprogram(name: "elapsed", scope: !2865, file: !2865, line: 85, type: !7731, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10816 = !DILocalVariable(name: "val1", scope: !10815, file: !2865, line: 87, type: !173)
!10817 = !DILocation(line: 87, column: 11, scope: !10815)
!10818 = !DILocation(line: 87, column: 27, scope: !10815)
!10819 = !DILocalVariable(name: "ctrl", scope: !10815, file: !2865, line: 88, type: !173)
!10820 = !DILocation(line: 88, column: 11, scope: !10815)
!10821 = !DILocation(line: 88, column: 27, scope: !10815)
!10822 = !DILocalVariable(name: "val2", scope: !10815, file: !2865, line: 89, type: !173)
!10823 = !DILocation(line: 89, column: 11, scope: !10815)
!10824 = !DILocation(line: 89, column: 27, scope: !10815)
!10825 = !DILocation(line: 105, column: 7, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10815, file: !2865, line: 105, column: 6)
!10827 = !DILocation(line: 105, column: 12, scope: !10826)
!10828 = !DILocation(line: 106, column: 6, scope: !10826)
!10829 = !DILocation(line: 106, column: 10, scope: !10826)
!10830 = !DILocation(line: 106, column: 17, scope: !10826)
!10831 = !DILocation(line: 106, column: 15, scope: !10826)
!10832 = !DILocation(line: 105, column: 6, scope: !10815)
!10833 = !DILocation(line: 107, column: 19, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10826, file: !2865, line: 106, column: 24)
!10835 = !DILocation(line: 107, column: 16, scope: !10834)
!10836 = !DILocation(line: 111, column: 18, scope: !10834)
!10837 = !DILocation(line: 112, column: 2, scope: !10834)
!10838 = !DILocation(line: 114, column: 10, scope: !10815)
!10839 = !DILocation(line: 114, column: 22, scope: !10815)
!10840 = !DILocation(line: 114, column: 20, scope: !10815)
!10841 = !DILocation(line: 114, column: 30, scope: !10815)
!10842 = !DILocation(line: 114, column: 28, scope: !10815)
!10843 = !DILocation(line: 114, column: 2, scope: !10815)
!10844 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2865, file: !2865, line: 154, type: !10845, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{null, !250, !1035}
!10847 = !DILocalVariable(name: "ticks", arg: 1, scope: !10844, file: !2865, line: 154, type: !250)
!10848 = !DILocation(line: 154, column: 36, scope: !10844)
!10849 = !DILocalVariable(name: "idle", arg: 2, scope: !10844, file: !2865, line: 154, type: !1035)
!10850 = !DILocation(line: 154, column: 48, scope: !10844)
!10851 = !DILocation(line: 162, column: 44, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10844, file: !2865, line: 162, column: 6)
!10853 = !DILocation(line: 162, column: 49, scope: !10852)
!10854 = !DILocation(line: 162, column: 52, scope: !10852)
!10855 = !DILocation(line: 162, column: 58, scope: !10852)
!10856 = !DILocation(line: 162, column: 6, scope: !10844)
!10857 = !DILocation(line: 163, column: 17, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10852, file: !2865, line: 162, column: 78)
!10859 = !DILocation(line: 164, column: 13, scope: !10858)
!10860 = !DILocation(line: 165, column: 3, scope: !10858)
!10861 = !DILocalVariable(name: "delay", scope: !10844, file: !2865, line: 169, type: !173)
!10862 = !DILocation(line: 169, column: 11, scope: !10844)
!10863 = !DILocalVariable(name: "val1", scope: !10844, file: !2865, line: 170, type: !173)
!10864 = !DILocation(line: 170, column: 11, scope: !10844)
!10865 = !DILocalVariable(name: "val2", scope: !10844, file: !2865, line: 170, type: !173)
!10866 = !DILocation(line: 170, column: 17, scope: !10844)
!10867 = !DILocalVariable(name: "last_load_", scope: !10844, file: !2865, line: 171, type: !173)
!10868 = !DILocation(line: 171, column: 11, scope: !10844)
!10869 = !DILocation(line: 171, column: 24, scope: !10844)
!10870 = !DILocation(line: 173, column: 11, scope: !10844)
!10871 = !DILocation(line: 173, column: 17, scope: !10844)
!10872 = !DILocation(line: 173, column: 10, scope: !10844)
!10873 = !DILocation(line: 173, column: 39, scope: !10844)
!10874 = !DILocation(line: 173, column: 51, scope: !10844)
!10875 = !DILocation(line: 173, column: 8, scope: !10844)
!10876 = !DILocation(line: 174, column: 10, scope: !10844)
!10877 = !DILocation(line: 174, column: 8, scope: !10844)
!10878 = !DILocalVariable(name: "key", scope: !10844, file: !2865, line: 176, type: !10879)
!10879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !10880)
!10880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !10881)
!10881 = !{!10882}
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10880, file: !222, line: 33, baseType: !103, size: 32)
!10883 = !DILocation(line: 176, column: 19, scope: !10844)
!10884 = !DILocalVariable(name: "l", arg: 1, scope: !10885, file: !222, line: 136, type: !10888)
!10885 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !10886, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!10879, !10888}
!10888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 32)
!10889 = !DILocation(line: 136, column: 70, scope: !10885, inlinedAt: !10890)
!10890 = distinct !DILocation(line: 176, column: 25, scope: !10844)
!10891 = !DILocation(line: 138, column: 2, scope: !10885, inlinedAt: !10890)
!10892 = !DILocalVariable(name: "k", scope: !10885, file: !222, line: 139, type: !10879)
!10893 = !DILocation(line: 139, column: 19, scope: !10885, inlinedAt: !10890)
!10894 = !DILocalVariable(name: "key", scope: !10895, file: !6626, line: 44, type: !32)
!10895 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10896 = !DILocation(line: 44, column: 15, scope: !10895, inlinedAt: !10897)
!10897 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10890)
!10898 = !DILocation(line: 47, column: 2, scope: !10895, inlinedAt: !10897)
!10899 = !{i64 1446841}
!10900 = !DILocation(line: 76, column: 9, scope: !10895, inlinedAt: !10897)
!10901 = !DILocation(line: 145, column: 4, scope: !10885, inlinedAt: !10890)
!10902 = !DILocation(line: 145, column: 8, scope: !10885, inlinedAt: !10890)
!10903 = !DILocation(line: 165, column: 2, scope: !10885, inlinedAt: !10890)
!10904 = !DILocation(line: 176, column: 25, scope: !10844)
!10905 = !DILocalVariable(name: "pending", scope: !10844, file: !2865, line: 178, type: !173)
!10906 = !DILocation(line: 178, column: 11, scope: !10844)
!10907 = !DILocation(line: 178, column: 21, scope: !10844)
!10908 = !DILocation(line: 180, column: 18, scope: !10844)
!10909 = !DILocation(line: 180, column: 7, scope: !10844)
!10910 = !DILocation(line: 182, column: 17, scope: !10844)
!10911 = !DILocation(line: 182, column: 14, scope: !10844)
!10912 = !DILocation(line: 183, column: 15, scope: !10844)
!10913 = !DILocalVariable(name: "unannounced", scope: !10844, file: !2865, line: 185, type: !173)
!10914 = !DILocation(line: 185, column: 11, scope: !10844)
!10915 = !DILocation(line: 185, column: 25, scope: !10844)
!10916 = !DILocation(line: 185, column: 39, scope: !10844)
!10917 = !DILocation(line: 185, column: 37, scope: !10844)
!10918 = !DILocation(line: 187, column: 15, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10844, file: !2865, line: 187, column: 6)
!10920 = !DILocation(line: 187, column: 27, scope: !10919)
!10921 = !DILocation(line: 187, column: 6, scope: !10844)
!10922 = !DILocation(line: 194, column: 15, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !2865, line: 187, column: 32)
!10924 = !DILocation(line: 194, column: 13, scope: !10923)
!10925 = !DILocation(line: 195, column: 2, scope: !10923)
!10926 = !DILocation(line: 197, column: 11, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10919, file: !2865, line: 195, column: 9)
!10928 = !DILocation(line: 197, column: 19, scope: !10927)
!10929 = !DILocation(line: 197, column: 17, scope: !10927)
!10930 = !DILocation(line: 197, column: 9, scope: !10927)
!10931 = !DILocation(line: 200, column: 12, scope: !10927)
!10932 = !DILocation(line: 200, column: 9, scope: !10927)
!10933 = !DILocation(line: 202, column: 6, scope: !10927)
!10934 = !DILocation(line: 202, column: 14, scope: !10927)
!10935 = !DILocation(line: 202, column: 12, scope: !10927)
!10936 = !DILocation(line: 202, column: 27, scope: !10927)
!10937 = !DILocation(line: 202, column: 34, scope: !10927)
!10938 = !DILocation(line: 202, column: 32, scope: !10927)
!10939 = !DILocation(line: 202, column: 50, scope: !10927)
!10940 = !DILocation(line: 202, column: 48, scope: !10927)
!10941 = !DILocation(line: 201, column: 9, scope: !10927)
!10942 = !DILocation(line: 203, column: 12, scope: !10927)
!10943 = !DILocation(line: 203, column: 9, scope: !10927)
!10944 = !DILocation(line: 204, column: 11, scope: !10927)
!10945 = !DILocation(line: 204, column: 9, scope: !10927)
!10946 = !DILocation(line: 205, column: 7, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10927, file: !2865, line: 205, column: 7)
!10948 = !DILocation(line: 205, column: 15, scope: !10947)
!10949 = !DILocation(line: 205, column: 13, scope: !10947)
!10950 = !DILocation(line: 205, column: 7, scope: !10927)
!10951 = !DILocation(line: 206, column: 16, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !2865, line: 205, column: 27)
!10953 = !DILocation(line: 206, column: 14, scope: !10952)
!10954 = !DILocation(line: 207, column: 3, scope: !10952)
!10955 = !DILocation(line: 208, column: 16, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10947, file: !2865, line: 207, column: 10)
!10957 = !DILocation(line: 208, column: 14, scope: !10956)
!10958 = !DILocation(line: 212, column: 18, scope: !10844)
!10959 = !DILocation(line: 212, column: 7, scope: !10844)
!10960 = !DILocation(line: 214, column: 18, scope: !10844)
!10961 = !DILocation(line: 214, column: 28, scope: !10844)
!10962 = !DILocation(line: 214, column: 16, scope: !10844)
!10963 = !DILocation(line: 215, column: 15, scope: !10844)
!10964 = !DILocation(line: 227, column: 6, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10844, file: !2865, line: 227, column: 6)
!10966 = !DILocation(line: 227, column: 13, scope: !10965)
!10967 = !DILocation(line: 227, column: 11, scope: !10965)
!10968 = !DILocation(line: 227, column: 6, scope: !10844)
!10969 = !DILocation(line: 228, column: 19, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10965, file: !2865, line: 227, column: 19)
!10971 = !DILocation(line: 228, column: 27, scope: !10970)
!10972 = !DILocation(line: 228, column: 40, scope: !10970)
!10973 = !DILocation(line: 228, column: 38, scope: !10970)
!10974 = !DILocation(line: 228, column: 24, scope: !10970)
!10975 = !DILocation(line: 228, column: 15, scope: !10970)
!10976 = !DILocation(line: 229, column: 2, scope: !10970)
!10977 = !DILocation(line: 230, column: 19, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10965, file: !2865, line: 229, column: 9)
!10979 = !DILocation(line: 230, column: 26, scope: !10978)
!10980 = !DILocation(line: 230, column: 24, scope: !10978)
!10981 = !DILocation(line: 230, column: 15, scope: !10978)
!10982 = !DILocation(line: 232, column: 2, scope: !10844)
!10983 = !DILocalVariable(name: "l", arg: 1, scope: !10984, file: !222, line: 189, type: !10888)
!10984 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !10985, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10985 = !DISubroutineType(types: !10986)
!10986 = !{null, !10888, !10879}
!10987 = !DILocation(line: 189, column: 60, scope: !10984, inlinedAt: !10988)
!10988 = distinct !DILocation(line: 232, column: 2, scope: !10844)
!10989 = !DILocalVariable(name: "key", arg: 2, scope: !10984, file: !222, line: 190, type: !10879)
!10990 = !DILocation(line: 190, column: 23, scope: !10984, inlinedAt: !10988)
!10991 = !DILocation(line: 192, column: 2, scope: !10984, inlinedAt: !10988)
!10992 = !DILocation(line: 215, column: 22, scope: !10984, inlinedAt: !10988)
!10993 = !DILocalVariable(name: "key", arg: 1, scope: !10994, file: !6626, line: 84, type: !32)
!10994 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!10995 = !DILocation(line: 84, column: 56, scope: !10994, inlinedAt: !10996)
!10996 = distinct !DILocation(line: 215, column: 2, scope: !10984, inlinedAt: !10988)
!10997 = !DILocation(line: 87, column: 6, scope: !10998, inlinedAt: !10996)
!10998 = distinct !DILexicalBlock(scope: !10994, file: !6626, line: 87, column: 6)
!10999 = !DILocation(line: 87, column: 10, scope: !10998, inlinedAt: !10996)
!11000 = !DILocation(line: 87, column: 6, scope: !10994, inlinedAt: !10996)
!11001 = !DILocation(line: 88, column: 3, scope: !11002, inlinedAt: !10996)
!11002 = distinct !DILexicalBlock(scope: !10998, file: !6626, line: 87, column: 17)
!11003 = !DILocation(line: 90, column: 2, scope: !10994, inlinedAt: !10996)
!11004 = !{i64 1447705}
!11005 = !DILocation(line: 110, column: 1, scope: !10994, inlinedAt: !10996)
!11006 = !DILocation(line: 234, column: 1, scope: !10844)
!11007 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2865, file: !2865, line: 236, type: !7731, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!11008 = !DILocalVariable(name: "key", scope: !11007, file: !2865, line: 242, type: !10879)
!11009 = !DILocation(line: 242, column: 19, scope: !11007)
!11010 = !DILocation(line: 136, column: 70, scope: !10885, inlinedAt: !11011)
!11011 = distinct !DILocation(line: 242, column: 25, scope: !11007)
!11012 = !DILocation(line: 138, column: 2, scope: !10885, inlinedAt: !11011)
!11013 = !DILocation(line: 139, column: 19, scope: !10885, inlinedAt: !11011)
!11014 = !DILocation(line: 44, column: 15, scope: !10895, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !11011)
!11016 = !DILocation(line: 47, column: 2, scope: !10895, inlinedAt: !11015)
!11017 = !DILocation(line: 76, column: 9, scope: !10895, inlinedAt: !11015)
!11018 = !DILocation(line: 145, column: 4, scope: !10885, inlinedAt: !11011)
!11019 = !DILocation(line: 145, column: 8, scope: !10885, inlinedAt: !11011)
!11020 = !DILocation(line: 165, column: 2, scope: !10885, inlinedAt: !11011)
!11021 = !DILocation(line: 242, column: 25, scope: !11007)
!11022 = !DILocalVariable(name: "cyc", scope: !11007, file: !2865, line: 243, type: !173)
!11023 = !DILocation(line: 243, column: 11, scope: !11007)
!11024 = !DILocation(line: 243, column: 17, scope: !11007)
!11025 = !DILocation(line: 243, column: 29, scope: !11007)
!11026 = !DILocation(line: 243, column: 27, scope: !11007)
!11027 = !DILocation(line: 243, column: 43, scope: !11007)
!11028 = !DILocation(line: 243, column: 41, scope: !11007)
!11029 = !DILocation(line: 245, column: 2, scope: !11007)
!11030 = !DILocation(line: 189, column: 60, scope: !10984, inlinedAt: !11031)
!11031 = distinct !DILocation(line: 245, column: 2, scope: !11007)
!11032 = !DILocation(line: 190, column: 23, scope: !10984, inlinedAt: !11031)
!11033 = !DILocation(line: 192, column: 2, scope: !10984, inlinedAt: !11031)
!11034 = !DILocation(line: 215, column: 22, scope: !10984, inlinedAt: !11031)
!11035 = !DILocation(line: 84, column: 56, scope: !10994, inlinedAt: !11036)
!11036 = distinct !DILocation(line: 215, column: 2, scope: !10984, inlinedAt: !11031)
!11037 = !DILocation(line: 87, column: 6, scope: !10998, inlinedAt: !11036)
!11038 = !DILocation(line: 87, column: 10, scope: !10998, inlinedAt: !11036)
!11039 = !DILocation(line: 87, column: 6, scope: !10994, inlinedAt: !11036)
!11040 = !DILocation(line: 88, column: 3, scope: !11002, inlinedAt: !11036)
!11041 = !DILocation(line: 90, column: 2, scope: !10994, inlinedAt: !11036)
!11042 = !DILocation(line: 110, column: 1, scope: !10994, inlinedAt: !11036)
!11043 = !DILocation(line: 246, column: 9, scope: !11007)
!11044 = !DILocation(line: 246, column: 15, scope: !11007)
!11045 = !DILocation(line: 246, column: 13, scope: !11007)
!11046 = !DILocation(line: 246, column: 2, scope: !11007)
!11047 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2865, file: !2865, line: 249, type: !7731, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!11048 = !DILocalVariable(name: "key", scope: !11047, file: !2865, line: 251, type: !10879)
!11049 = !DILocation(line: 251, column: 19, scope: !11047)
!11050 = !DILocation(line: 136, column: 70, scope: !10885, inlinedAt: !11051)
!11051 = distinct !DILocation(line: 251, column: 25, scope: !11047)
!11052 = !DILocation(line: 138, column: 2, scope: !10885, inlinedAt: !11051)
!11053 = !DILocation(line: 139, column: 19, scope: !10885, inlinedAt: !11051)
!11054 = !DILocation(line: 44, column: 15, scope: !10895, inlinedAt: !11055)
!11055 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !11051)
!11056 = !DILocation(line: 47, column: 2, scope: !10895, inlinedAt: !11055)
!11057 = !DILocation(line: 76, column: 9, scope: !10895, inlinedAt: !11055)
!11058 = !DILocation(line: 145, column: 4, scope: !10885, inlinedAt: !11051)
!11059 = !DILocation(line: 145, column: 8, scope: !10885, inlinedAt: !11051)
!11060 = !DILocation(line: 165, column: 2, scope: !10885, inlinedAt: !11051)
!11061 = !DILocation(line: 251, column: 25, scope: !11047)
!11062 = !DILocalVariable(name: "ret", scope: !11047, file: !2865, line: 252, type: !173)
!11063 = !DILocation(line: 252, column: 11, scope: !11047)
!11064 = !DILocation(line: 252, column: 17, scope: !11047)
!11065 = !DILocation(line: 252, column: 29, scope: !11047)
!11066 = !DILocation(line: 252, column: 27, scope: !11047)
!11067 = !DILocation(line: 254, column: 2, scope: !11047)
!11068 = !DILocation(line: 189, column: 60, scope: !10984, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 254, column: 2, scope: !11047)
!11070 = !DILocation(line: 190, column: 23, scope: !10984, inlinedAt: !11069)
!11071 = !DILocation(line: 192, column: 2, scope: !10984, inlinedAt: !11069)
!11072 = !DILocation(line: 215, column: 22, scope: !10984, inlinedAt: !11069)
!11073 = !DILocation(line: 84, column: 56, scope: !10994, inlinedAt: !11074)
!11074 = distinct !DILocation(line: 215, column: 2, scope: !10984, inlinedAt: !11069)
!11075 = !DILocation(line: 87, column: 6, scope: !10998, inlinedAt: !11074)
!11076 = !DILocation(line: 87, column: 10, scope: !10998, inlinedAt: !11074)
!11077 = !DILocation(line: 87, column: 6, scope: !10994, inlinedAt: !11074)
!11078 = !DILocation(line: 88, column: 3, scope: !11002, inlinedAt: !11074)
!11079 = !DILocation(line: 90, column: 2, scope: !10994, inlinedAt: !11074)
!11080 = !DILocation(line: 110, column: 1, scope: !10994, inlinedAt: !11074)
!11081 = !DILocation(line: 255, column: 9, scope: !11047)
!11082 = !DILocation(line: 255, column: 2, scope: !11047)
!11083 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2865, file: !2865, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!11084 = !DILocation(line: 260, column: 6, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11083, file: !2865, line: 260, column: 6)
!11086 = !DILocation(line: 260, column: 16, scope: !11085)
!11087 = !DILocation(line: 260, column: 6, scope: !11083)
!11088 = !DILocation(line: 261, column: 17, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11085, file: !2865, line: 260, column: 34)
!11090 = !DILocation(line: 262, column: 2, scope: !11089)
!11091 = !DILocation(line: 263, column: 1, scope: !11083)
!11092 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2865, file: !2865, line: 265, type: !253, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2777, retainedNodes: !223)
!11093 = !DILocation(line: 267, column: 16, scope: !11092)
!11094 = !DILocation(line: 268, column: 1, scope: !11092)
!11095 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11096, file: !11096, line: 9, type: !11097, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3830, retainedNodes: !223)
!11096 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11097 = !DISubroutineType(types: !11098)
!11098 = !{!103, !11099, !156, !11112}
!11099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11100, size: 32)
!11100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11101)
!11101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2558, line: 60, size: 64, elements: !11102)
!11102 = !{!11103, !11111}
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11101, file: !2558, line: 69, baseType: !11104, size: 32)
!11104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11105, size: 32)
!11105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11106)
!11106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2558, line: 50, size: 64, elements: !11107)
!11107 = !{!11108, !11109, !11110}
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11106, file: !2558, line: 52, baseType: !2566, size: 32)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11106, file: !2558, line: 54, baseType: !156, size: 8, offset: 32)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11106, file: !2558, line: 56, baseType: !156, size: 8, offset: 40)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11101, file: !2558, line: 71, baseType: !156, size: 8, offset: 32)
!11112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11104, size: 32)
!11113 = !DILocalVariable(name: "config", arg: 1, scope: !11095, file: !11096, line: 9, type: !11099)
!11114 = !DILocation(line: 9, column: 59, scope: !11095)
!11115 = !DILocalVariable(name: "id", arg: 2, scope: !11095, file: !11096, line: 9, type: !156)
!11116 = !DILocation(line: 9, column: 75, scope: !11095)
!11117 = !DILocalVariable(name: "state", arg: 3, scope: !11095, file: !11096, line: 10, type: !11112)
!11118 = !DILocation(line: 10, column: 34, scope: !11095)
!11119 = !DILocation(line: 12, column: 12, scope: !11095)
!11120 = !DILocation(line: 12, column: 20, scope: !11095)
!11121 = !DILocation(line: 12, column: 3, scope: !11095)
!11122 = !DILocation(line: 12, column: 9, scope: !11095)
!11123 = !DILocation(line: 13, column: 2, scope: !11095)
!11124 = !DILocation(line: 13, column: 10, scope: !11095)
!11125 = !DILocation(line: 13, column: 9, scope: !11095)
!11126 = !DILocation(line: 13, column: 19, scope: !11095)
!11127 = !DILocation(line: 13, column: 27, scope: !11095)
!11128 = !DILocation(line: 13, column: 34, scope: !11095)
!11129 = !DILocation(line: 13, column: 42, scope: !11095)
!11130 = !DILocation(line: 13, column: 16, scope: !11095)
!11131 = !DILocation(line: 14, column: 7, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !11096, line: 14, column: 7)
!11133 = distinct !DILexicalBlock(scope: !11095, file: !11096, line: 13, column: 54)
!11134 = !DILocation(line: 14, column: 15, scope: !11132)
!11135 = !DILocation(line: 14, column: 14, scope: !11132)
!11136 = !DILocation(line: 14, column: 23, scope: !11132)
!11137 = !DILocation(line: 14, column: 13, scope: !11132)
!11138 = !DILocation(line: 14, column: 10, scope: !11132)
!11139 = !DILocation(line: 14, column: 7, scope: !11133)
!11140 = !DILocation(line: 15, column: 4, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11132, file: !11096, line: 14, column: 27)
!11142 = !DILocation(line: 18, column: 5, scope: !11133)
!11143 = !DILocation(line: 18, column: 11, scope: !11133)
!11144 = distinct !{!11144, !11123, !11145}
!11145 = !DILocation(line: 19, column: 2, scope: !11095)
!11146 = !DILocation(line: 21, column: 2, scope: !11095)
!11147 = !DILocation(line: 22, column: 1, scope: !11095)
!11148 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !3055, file: !3055, line: 47, type: !11149, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2900, retainedNodes: !223)
!11149 = !DISubroutineType(types: !11150)
!11150 = !{!103, !2566, !156, !22}
!11151 = !DILocalVariable(name: "pins", arg: 1, scope: !11148, file: !3055, line: 47, type: !2566)
!11152 = !DILocation(line: 47, column: 53, scope: !11148)
!11153 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11148, file: !3055, line: 47, type: !156)
!11154 = !DILocation(line: 47, column: 67, scope: !11148)
!11155 = !DILocalVariable(name: "reg", arg: 3, scope: !11148, file: !3055, line: 48, type: !22)
!11156 = !DILocation(line: 48, column: 17, scope: !11148)
!11157 = !DILocation(line: 50, column: 2, scope: !11148)
!11158 = !DILocalVariable(name: "i", scope: !11159, file: !3055, line: 52, type: !156)
!11159 = distinct !DILexicalBlock(scope: !11148, file: !3055, line: 52, column: 2)
!11160 = !DILocation(line: 52, column: 15, scope: !11159)
!11161 = !DILocation(line: 52, column: 7, scope: !11159)
!11162 = !DILocation(line: 52, column: 23, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11159, file: !3055, line: 52, column: 2)
!11164 = !DILocation(line: 52, column: 27, scope: !11163)
!11165 = !DILocation(line: 52, column: 25, scope: !11163)
!11166 = !DILocation(line: 52, column: 2, scope: !11159)
!11167 = !DILocation(line: 53, column: 30, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !3055, line: 52, column: 41)
!11169 = !DILocation(line: 53, column: 25, scope: !11168)
!11170 = !DILocation(line: 53, column: 3, scope: !11168)
!11171 = !DILocation(line: 54, column: 2, scope: !11168)
!11172 = !DILocation(line: 52, column: 37, scope: !11163)
!11173 = !DILocation(line: 52, column: 2, scope: !11163)
!11174 = distinct !{!11174, !11166, !11175}
!11175 = !DILocation(line: 54, column: 2, scope: !11159)
!11176 = !DILocation(line: 56, column: 2, scope: !11148)
!11177 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !3055, file: !3055, line: 25, type: !11178, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2900, retainedNodes: !223)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{null, !2568}
!11180 = !DILocalVariable(name: "pin", arg: 1, scope: !11177, file: !3055, line: 25, type: !2568)
!11181 = !DILocation(line: 25, column: 53, scope: !11177)
!11182 = !DILocalVariable(name: "soc_pin", scope: !11177, file: !3055, line: 27, type: !11183)
!11183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6480, line: 75, size: 96, elements: !11184)
!11184 = !{!11185, !11186, !11187}
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !11183, file: !6480, line: 76, baseType: !2903, size: 32)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !11183, file: !6480, line: 77, baseType: !173, size: 32, offset: 32)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11183, file: !6480, line: 78, baseType: !173, size: 32, offset: 64)
!11188 = !DILocation(line: 27, column: 22, scope: !11177)
!11189 = !DILocalVariable(name: "port_idx", scope: !11177, file: !3055, line: 28, type: !156)
!11190 = !DILocation(line: 28, column: 11, scope: !11177)
!11191 = !DILocalVariable(name: "port_func", scope: !11177, file: !3055, line: 28, type: !156)
!11192 = !DILocation(line: 28, column: 21, scope: !11177)
!11193 = !DILocation(line: 30, column: 13, scope: !11177)
!11194 = !DILocation(line: 30, column: 11, scope: !11177)
!11195 = !DILocation(line: 32, column: 14, scope: !11177)
!11196 = !DILocation(line: 32, column: 12, scope: !11177)
!11197 = !DILocation(line: 34, column: 46, scope: !11177)
!11198 = !DILocation(line: 34, column: 31, scope: !11177)
!11199 = !DILocation(line: 34, column: 17, scope: !11177)
!11200 = !DILocation(line: 34, column: 10, scope: !11177)
!11201 = !DILocation(line: 34, column: 15, scope: !11177)
!11202 = !DILocation(line: 35, column: 18, scope: !11177)
!11203 = !DILocation(line: 35, column: 10, scope: !11177)
!11204 = !DILocation(line: 35, column: 16, scope: !11177)
!11205 = !DILocation(line: 36, column: 18, scope: !11177)
!11206 = !DILocation(line: 36, column: 45, scope: !11177)
!11207 = !DILocation(line: 36, column: 10, scope: !11177)
!11208 = !DILocation(line: 36, column: 16, scope: !11177)
!11209 = !DILocation(line: 38, column: 6, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11177, file: !3055, line: 38, column: 6)
!11211 = !DILocation(line: 38, column: 16, scope: !11210)
!11212 = !DILocation(line: 38, column: 6, scope: !11177)
!11213 = !DILocation(line: 39, column: 21, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11210, file: !3055, line: 38, column: 43)
!11215 = !DILocation(line: 40, column: 7, scope: !11214)
!11216 = !DILocation(line: 41, column: 10, scope: !11214)
!11217 = !DILocation(line: 39, column: 11, scope: !11214)
!11218 = !DILocation(line: 39, column: 17, scope: !11214)
!11219 = !DILocation(line: 42, column: 2, scope: !11214)
!11220 = !DILocation(line: 44, column: 2, scope: !11177)
!11221 = !DILocation(line: 45, column: 1, scope: !11177)
!11222 = distinct !DISubprogram(name: "z_device_state_init", scope: !11223, file: !11223, line: 23, type: !253, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11223 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11224 = !DILocalVariable(name: "dev", scope: !11222, file: !11223, line: 25, type: !11225)
!11225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11226, size: 32)
!11226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11227)
!11227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !11228)
!11228 = !{!11229, !11230, !11231, !11232, !11238, !11239}
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11227, file: !1024, line: 380, baseType: !256, size: 32)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11227, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11227, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11227, file: !1024, line: 386, baseType: !11233, size: 32, offset: 96)
!11233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11234, size: 32)
!11234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !11235)
!11235 = !{!11236, !11237}
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11234, file: !1024, line: 359, baseType: !156, size: 8)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11234, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11227, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11227, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!11240 = !DILocation(line: 25, column: 23, scope: !11222)
!11241 = !DILocation(line: 27, column: 2, scope: !11222)
!11242 = !DILocation(line: 27, column: 9, scope: !11222)
!11243 = !DILocation(line: 27, column: 13, scope: !11222)
!11244 = !DILocation(line: 28, column: 17, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11222, file: !11223, line: 27, column: 29)
!11246 = !DILocation(line: 28, column: 3, scope: !11245)
!11247 = !DILocation(line: 29, column: 3, scope: !11245)
!11248 = distinct !{!11248, !11241, !11249}
!11249 = !DILocation(line: 30, column: 2, scope: !11222)
!11250 = !DILocation(line: 31, column: 1, scope: !11222)
!11251 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11252 = !DILocalVariable(name: "obj", arg: 1, scope: !11251, file: !31, line: 200, type: !13)
!11253 = !DILocation(line: 200, column: 46, scope: !11251)
!11254 = !DILocation(line: 202, column: 2, scope: !11251)
!11255 = !DILocation(line: 203, column: 1, scope: !11251)
!11256 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11223, file: !11223, line: 33, type: !11257, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!11225, !256}
!11259 = !DILocalVariable(name: "name", arg: 1, scope: !11256, file: !11223, line: 33, type: !256)
!11260 = !DILocation(line: 33, column: 60, scope: !11256)
!11261 = !DILocalVariable(name: "dev", scope: !11256, file: !11223, line: 35, type: !11225)
!11262 = !DILocation(line: 35, column: 23, scope: !11256)
!11263 = !DILocation(line: 40, column: 7, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11256, file: !11223, line: 40, column: 6)
!11265 = !DILocation(line: 40, column: 12, scope: !11264)
!11266 = !DILocation(line: 40, column: 21, scope: !11264)
!11267 = !DILocation(line: 40, column: 25, scope: !11264)
!11268 = !DILocation(line: 40, column: 33, scope: !11264)
!11269 = !DILocation(line: 40, column: 6, scope: !11256)
!11270 = !DILocation(line: 41, column: 3, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11264, file: !11223, line: 40, column: 43)
!11272 = !DILocation(line: 49, column: 11, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11256, file: !11223, line: 49, column: 2)
!11274 = !DILocation(line: 49, column: 7, scope: !11273)
!11275 = !DILocation(line: 49, column: 29, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11273, file: !11223, line: 49, column: 2)
!11277 = !DILocation(line: 49, column: 33, scope: !11276)
!11278 = !DILocation(line: 49, column: 2, scope: !11273)
!11279 = !DILocation(line: 50, column: 25, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !11223, line: 50, column: 7)
!11281 = distinct !DILexicalBlock(scope: !11276, file: !11223, line: 49, column: 57)
!11282 = !DILocation(line: 50, column: 7, scope: !11280)
!11283 = !DILocation(line: 50, column: 30, scope: !11280)
!11284 = !DILocation(line: 50, column: 34, scope: !11280)
!11285 = !DILocation(line: 50, column: 39, scope: !11280)
!11286 = !DILocation(line: 50, column: 47, scope: !11280)
!11287 = !DILocation(line: 50, column: 44, scope: !11280)
!11288 = !DILocation(line: 50, column: 7, scope: !11281)
!11289 = !DILocation(line: 51, column: 11, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11280, file: !11223, line: 50, column: 54)
!11291 = !DILocation(line: 51, column: 4, scope: !11290)
!11292 = !DILocation(line: 53, column: 2, scope: !11281)
!11293 = !DILocation(line: 49, column: 53, scope: !11276)
!11294 = !DILocation(line: 49, column: 2, scope: !11276)
!11295 = distinct !{!11295, !11278, !11296}
!11296 = !DILocation(line: 53, column: 2, scope: !11273)
!11297 = !DILocation(line: 55, column: 11, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11256, file: !11223, line: 55, column: 2)
!11299 = !DILocation(line: 55, column: 7, scope: !11298)
!11300 = !DILocation(line: 55, column: 29, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11298, file: !11223, line: 55, column: 2)
!11302 = !DILocation(line: 55, column: 33, scope: !11301)
!11303 = !DILocation(line: 55, column: 2, scope: !11298)
!11304 = !DILocation(line: 56, column: 25, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !11223, line: 56, column: 7)
!11306 = distinct !DILexicalBlock(scope: !11301, file: !11223, line: 55, column: 57)
!11307 = !DILocation(line: 56, column: 7, scope: !11305)
!11308 = !DILocation(line: 56, column: 30, scope: !11305)
!11309 = !DILocation(line: 56, column: 41, scope: !11305)
!11310 = !DILocation(line: 56, column: 47, scope: !11305)
!11311 = !DILocation(line: 56, column: 52, scope: !11305)
!11312 = !DILocation(line: 56, column: 34, scope: !11305)
!11313 = !DILocation(line: 56, column: 58, scope: !11305)
!11314 = !DILocation(line: 56, column: 7, scope: !11306)
!11315 = !DILocation(line: 57, column: 11, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11305, file: !11223, line: 56, column: 65)
!11317 = !DILocation(line: 57, column: 4, scope: !11316)
!11318 = !DILocation(line: 59, column: 2, scope: !11306)
!11319 = !DILocation(line: 55, column: 53, scope: !11301)
!11320 = !DILocation(line: 55, column: 2, scope: !11301)
!11321 = distinct !{!11321, !11303, !11322}
!11322 = !DILocation(line: 59, column: 2, scope: !11298)
!11323 = !DILocation(line: 61, column: 2, scope: !11256)
!11324 = !DILocation(line: 62, column: 1, scope: !11256)
!11325 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11223, file: !11223, line: 93, type: !11326, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!1035, !11225}
!11328 = !DILocalVariable(name: "dev", arg: 1, scope: !11325, file: !11223, line: 93, type: !11225)
!11329 = !DILocation(line: 93, column: 45, scope: !11325)
!11330 = !DILocation(line: 99, column: 6, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11325, file: !11223, line: 99, column: 6)
!11332 = !DILocation(line: 99, column: 10, scope: !11331)
!11333 = !DILocation(line: 99, column: 6, scope: !11325)
!11334 = !DILocation(line: 100, column: 3, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11331, file: !11223, line: 99, column: 19)
!11336 = !DILocation(line: 103, column: 9, scope: !11325)
!11337 = !DILocation(line: 103, column: 14, scope: !11325)
!11338 = !DILocation(line: 103, column: 21, scope: !11325)
!11339 = !DILocation(line: 103, column: 33, scope: !11325)
!11340 = !DILocation(line: 103, column: 37, scope: !11325)
!11341 = !DILocation(line: 103, column: 42, scope: !11325)
!11342 = !DILocation(line: 103, column: 49, scope: !11325)
!11343 = !DILocation(line: 103, column: 58, scope: !11325)
!11344 = !DILocation(line: 0, scope: !11325)
!11345 = !DILocation(line: 103, column: 2, scope: !11325)
!11346 = !DILocation(line: 104, column: 1, scope: !11325)
!11347 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11223, file: !11223, line: 87, type: !11348, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!217, !11350}
!11350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11225, size: 32)
!11351 = !DILocalVariable(name: "devices", arg: 1, scope: !11347, file: !11223, line: 87, type: !11350)
!11352 = !DILocation(line: 87, column: 54, scope: !11347)
!11353 = !DILocation(line: 89, column: 3, scope: !11347)
!11354 = !DILocation(line: 89, column: 11, scope: !11347)
!11355 = !DILocation(line: 90, column: 2, scope: !11347)
!11356 = distinct !DISubprogram(name: "device_required_foreach", scope: !11223, file: !11223, line: 125, type: !11357, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!103, !11225, !11359, !102}
!11359 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1024, line: 471, baseType: !11360)
!11360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11361, size: 32)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!103, !11225, !102}
!11363 = !DILocalVariable(name: "dev", arg: 1, scope: !11356, file: !11223, line: 125, type: !11225)
!11364 = !DILocation(line: 125, column: 50, scope: !11356)
!11365 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11356, file: !11223, line: 126, type: !11359)
!11366 = !DILocation(line: 126, column: 34, scope: !11356)
!11367 = !DILocalVariable(name: "context", arg: 3, scope: !11356, file: !11223, line: 127, type: !102)
!11368 = !DILocation(line: 127, column: 14, scope: !11356)
!11369 = !DILocalVariable(name: "handle_count", scope: !11356, file: !11223, line: 129, type: !217)
!11370 = !DILocation(line: 129, column: 9, scope: !11356)
!11371 = !DILocalVariable(name: "handles", scope: !11356, file: !11223, line: 130, type: !1038)
!11372 = !DILocation(line: 130, column: 25, scope: !11356)
!11373 = !DILocation(line: 130, column: 63, scope: !11356)
!11374 = !DILocation(line: 130, column: 35, scope: !11356)
!11375 = !DILocation(line: 132, column: 24, scope: !11356)
!11376 = !DILocation(line: 132, column: 33, scope: !11356)
!11377 = !DILocation(line: 132, column: 47, scope: !11356)
!11378 = !DILocation(line: 132, column: 59, scope: !11356)
!11379 = !DILocation(line: 132, column: 9, scope: !11356)
!11380 = !DILocation(line: 132, column: 2, scope: !11356)
!11381 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1024, file: !1024, line: 493, type: !11382, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!1038, !11225, !3596}
!11384 = !DILocalVariable(name: "dev", arg: 1, scope: !11381, file: !1024, line: 493, type: !11225)
!11385 = !DILocation(line: 493, column: 50, scope: !11381)
!11386 = !DILocalVariable(name: "count", arg: 2, scope: !11381, file: !1024, line: 493, type: !3596)
!11387 = !DILocation(line: 493, column: 63, scope: !11381)
!11388 = !DILocalVariable(name: "rv", scope: !11381, file: !1024, line: 495, type: !1038)
!11389 = !DILocation(line: 495, column: 25, scope: !11381)
!11390 = !DILocation(line: 495, column: 30, scope: !11381)
!11391 = !DILocation(line: 495, column: 35, scope: !11381)
!11392 = !DILocation(line: 497, column: 6, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11381, file: !1024, line: 497, column: 6)
!11394 = !DILocation(line: 497, column: 9, scope: !11393)
!11395 = !DILocation(line: 497, column: 6, scope: !11381)
!11396 = !DILocalVariable(name: "i", scope: !11397, file: !1024, line: 498, type: !217)
!11397 = distinct !DILexicalBlock(scope: !11393, file: !1024, line: 497, column: 18)
!11398 = !DILocation(line: 498, column: 10, scope: !11397)
!11399 = !DILocation(line: 500, column: 3, scope: !11397)
!11400 = !DILocation(line: 500, column: 11, scope: !11397)
!11401 = !DILocation(line: 500, column: 14, scope: !11397)
!11402 = !DILocation(line: 500, column: 17, scope: !11397)
!11403 = !DILocation(line: 500, column: 40, scope: !11397)
!11404 = !DILocation(line: 501, column: 11, scope: !11397)
!11405 = !DILocation(line: 501, column: 14, scope: !11397)
!11406 = !DILocation(line: 501, column: 17, scope: !11397)
!11407 = !DILocation(line: 0, scope: !11397)
!11408 = !DILocation(line: 502, column: 4, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11397, file: !1024, line: 501, column: 40)
!11410 = distinct !{!11410, !11399, !11411}
!11411 = !DILocation(line: 503, column: 3, scope: !11397)
!11412 = !DILocation(line: 504, column: 12, scope: !11397)
!11413 = !DILocation(line: 504, column: 4, scope: !11397)
!11414 = !DILocation(line: 504, column: 10, scope: !11397)
!11415 = !DILocation(line: 505, column: 2, scope: !11397)
!11416 = !DILocation(line: 507, column: 9, scope: !11381)
!11417 = !DILocation(line: 507, column: 2, scope: !11381)
!11418 = distinct !DISubprogram(name: "device_visitor", scope: !11223, file: !11223, line: 106, type: !11419, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11419 = !DISubroutineType(types: !11420)
!11420 = !{!103, !1038, !217, !11359, !102}
!11421 = !DILocalVariable(name: "handles", arg: 1, scope: !11418, file: !11223, line: 106, type: !1038)
!11422 = !DILocation(line: 106, column: 50, scope: !11418)
!11423 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11418, file: !11223, line: 107, type: !217)
!11424 = !DILocation(line: 107, column: 14, scope: !11418)
!11425 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11418, file: !11223, line: 108, type: !11359)
!11426 = !DILocation(line: 108, column: 33, scope: !11418)
!11427 = !DILocalVariable(name: "context", arg: 4, scope: !11418, file: !11223, line: 109, type: !102)
!11428 = !DILocation(line: 109, column: 13, scope: !11418)
!11429 = !DILocalVariable(name: "i", scope: !11430, file: !11223, line: 112, type: !217)
!11430 = distinct !DILexicalBlock(scope: !11418, file: !11223, line: 112, column: 2)
!11431 = !DILocation(line: 112, column: 14, scope: !11430)
!11432 = !DILocation(line: 112, column: 7, scope: !11430)
!11433 = !DILocation(line: 112, column: 21, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11430, file: !11223, line: 112, column: 2)
!11435 = !DILocation(line: 112, column: 25, scope: !11434)
!11436 = !DILocation(line: 112, column: 23, scope: !11434)
!11437 = !DILocation(line: 112, column: 2, scope: !11430)
!11438 = !DILocalVariable(name: "dh", scope: !11439, file: !11223, line: 113, type: !1040)
!11439 = distinct !DILexicalBlock(scope: !11434, file: !11223, line: 112, column: 44)
!11440 = !DILocation(line: 113, column: 19, scope: !11439)
!11441 = !DILocation(line: 113, column: 24, scope: !11439)
!11442 = !DILocation(line: 113, column: 32, scope: !11439)
!11443 = !DILocalVariable(name: "rdev", scope: !11439, file: !11223, line: 114, type: !11225)
!11444 = !DILocation(line: 114, column: 24, scope: !11439)
!11445 = !DILocation(line: 114, column: 50, scope: !11439)
!11446 = !DILocation(line: 114, column: 31, scope: !11439)
!11447 = !DILocalVariable(name: "rc", scope: !11439, file: !11223, line: 115, type: !103)
!11448 = !DILocation(line: 115, column: 7, scope: !11439)
!11449 = !DILocation(line: 115, column: 12, scope: !11439)
!11450 = !DILocation(line: 115, column: 23, scope: !11439)
!11451 = !DILocation(line: 115, column: 29, scope: !11439)
!11452 = !DILocation(line: 117, column: 7, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11439, file: !11223, line: 117, column: 7)
!11454 = !DILocation(line: 117, column: 10, scope: !11453)
!11455 = !DILocation(line: 117, column: 7, scope: !11439)
!11456 = !DILocation(line: 118, column: 11, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !11223, line: 117, column: 15)
!11458 = !DILocation(line: 118, column: 4, scope: !11457)
!11459 = !DILocation(line: 120, column: 2, scope: !11439)
!11460 = !DILocation(line: 112, column: 39, scope: !11434)
!11461 = !DILocation(line: 112, column: 2, scope: !11434)
!11462 = distinct !{!11462, !11437, !11463}
!11463 = !DILocation(line: 120, column: 2, scope: !11430)
!11464 = !DILocation(line: 122, column: 9, scope: !11418)
!11465 = !DILocation(line: 122, column: 2, scope: !11418)
!11466 = !DILocation(line: 123, column: 1, scope: !11418)
!11467 = distinct !DISubprogram(name: "device_from_handle", scope: !1024, file: !1024, line: 439, type: !11468, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11468 = !DISubroutineType(types: !11469)
!11469 = !{!11225, !1040}
!11470 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11467, file: !1024, line: 439, type: !1040)
!11471 = !DILocation(line: 439, column: 36, scope: !11467)
!11472 = !DILocalVariable(name: "dev", scope: !11467, file: !1024, line: 443, type: !11225)
!11473 = !DILocation(line: 443, column: 23, scope: !11467)
!11474 = !DILocalVariable(name: "numdev", scope: !11467, file: !1024, line: 444, type: !217)
!11475 = !DILocation(line: 444, column: 9, scope: !11467)
!11476 = !DILocation(line: 446, column: 7, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11467, file: !1024, line: 446, column: 6)
!11478 = !DILocation(line: 446, column: 18, scope: !11477)
!11479 = !DILocation(line: 446, column: 23, scope: !11477)
!11480 = !DILocation(line: 446, column: 35, scope: !11477)
!11481 = !DILocation(line: 446, column: 27, scope: !11477)
!11482 = !DILocation(line: 446, column: 49, scope: !11477)
!11483 = !DILocation(line: 446, column: 46, scope: !11477)
!11484 = !DILocation(line: 446, column: 6, scope: !11467)
!11485 = !DILocation(line: 447, column: 25, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11477, file: !1024, line: 446, column: 58)
!11487 = !DILocation(line: 447, column: 36, scope: !11486)
!11488 = !DILocation(line: 447, column: 10, scope: !11486)
!11489 = !DILocation(line: 447, column: 7, scope: !11486)
!11490 = !DILocation(line: 448, column: 2, scope: !11486)
!11491 = !DILocation(line: 450, column: 9, scope: !11467)
!11492 = !DILocation(line: 450, column: 2, scope: !11467)
!11493 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11223, file: !11223, line: 135, type: !11357, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11494 = !DILocalVariable(name: "dev", arg: 1, scope: !11493, file: !11223, line: 135, type: !11225)
!11495 = !DILocation(line: 135, column: 51, scope: !11493)
!11496 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11493, file: !11223, line: 136, type: !11359)
!11497 = !DILocation(line: 136, column: 35, scope: !11493)
!11498 = !DILocalVariable(name: "context", arg: 3, scope: !11493, file: !11223, line: 137, type: !102)
!11499 = !DILocation(line: 137, column: 15, scope: !11493)
!11500 = !DILocalVariable(name: "handle_count", scope: !11493, file: !11223, line: 139, type: !217)
!11501 = !DILocation(line: 139, column: 9, scope: !11493)
!11502 = !DILocalVariable(name: "handles", scope: !11493, file: !11223, line: 140, type: !1038)
!11503 = !DILocation(line: 140, column: 25, scope: !11493)
!11504 = !DILocation(line: 140, column: 64, scope: !11493)
!11505 = !DILocation(line: 140, column: 35, scope: !11493)
!11506 = !DILocation(line: 142, column: 24, scope: !11493)
!11507 = !DILocation(line: 142, column: 33, scope: !11493)
!11508 = !DILocation(line: 142, column: 47, scope: !11493)
!11509 = !DILocation(line: 142, column: 59, scope: !11493)
!11510 = !DILocation(line: 142, column: 9, scope: !11493)
!11511 = !DILocation(line: 142, column: 2, scope: !11493)
!11512 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1024, file: !1024, line: 573, type: !11382, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3832, retainedNodes: !223)
!11513 = !DILocalVariable(name: "dev", arg: 1, scope: !11512, file: !1024, line: 573, type: !11225)
!11514 = !DILocation(line: 573, column: 51, scope: !11512)
!11515 = !DILocalVariable(name: "count", arg: 2, scope: !11512, file: !1024, line: 573, type: !3596)
!11516 = !DILocation(line: 573, column: 64, scope: !11512)
!11517 = !DILocalVariable(name: "rv", scope: !11512, file: !1024, line: 575, type: !1038)
!11518 = !DILocation(line: 575, column: 25, scope: !11512)
!11519 = !DILocation(line: 575, column: 30, scope: !11512)
!11520 = !DILocation(line: 575, column: 35, scope: !11512)
!11521 = !DILocalVariable(name: "region", scope: !11512, file: !1024, line: 576, type: !217)
!11522 = !DILocation(line: 576, column: 9, scope: !11512)
!11523 = !DILocalVariable(name: "i", scope: !11512, file: !1024, line: 577, type: !217)
!11524 = !DILocation(line: 577, column: 9, scope: !11512)
!11525 = !DILocation(line: 579, column: 6, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11512, file: !1024, line: 579, column: 6)
!11527 = !DILocation(line: 579, column: 9, scope: !11526)
!11528 = !DILocation(line: 579, column: 6, scope: !11512)
!11529 = !DILocation(line: 581, column: 3, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11526, file: !1024, line: 579, column: 18)
!11531 = !DILocation(line: 581, column: 10, scope: !11530)
!11532 = !DILocation(line: 581, column: 17, scope: !11530)
!11533 = !DILocation(line: 582, column: 9, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !1024, line: 582, column: 8)
!11535 = distinct !DILexicalBlock(scope: !11530, file: !1024, line: 581, column: 23)
!11536 = !DILocation(line: 582, column: 8, scope: !11534)
!11537 = !DILocation(line: 582, column: 12, scope: !11534)
!11538 = !DILocation(line: 582, column: 8, scope: !11535)
!11539 = !DILocation(line: 583, column: 11, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11534, file: !1024, line: 582, column: 34)
!11541 = !DILocation(line: 584, column: 4, scope: !11540)
!11542 = !DILocation(line: 585, column: 6, scope: !11535)
!11543 = distinct !{!11543, !11529, !11544}
!11544 = !DILocation(line: 586, column: 3, scope: !11530)
!11545 = !DILocation(line: 588, column: 3, scope: !11530)
!11546 = !DILocation(line: 588, column: 10, scope: !11530)
!11547 = !DILocation(line: 588, column: 13, scope: !11530)
!11548 = !DILocation(line: 588, column: 16, scope: !11530)
!11549 = !DILocation(line: 589, column: 4, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11530, file: !1024, line: 588, column: 39)
!11551 = distinct !{!11551, !11545, !11552}
!11552 = !DILocation(line: 590, column: 3, scope: !11530)
!11553 = !DILocation(line: 591, column: 12, scope: !11530)
!11554 = !DILocation(line: 591, column: 4, scope: !11530)
!11555 = !DILocation(line: 591, column: 10, scope: !11530)
!11556 = !DILocation(line: 592, column: 2, scope: !11530)
!11557 = !DILocation(line: 594, column: 9, scope: !11512)
!11558 = !DILocation(line: 594, column: 2, scope: !11512)
!11559 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !3063, file: !3063, line: 49, type: !11560, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3060, retainedNodes: !223)
!11560 = !DISubroutineType(types: !11561)
!11561 = !{!3590}
!11562 = !DILocation(line: 51, column: 10, scope: !11559)
!11563 = !DILocation(line: 51, column: 20, scope: !11559)
!11564 = !DILocation(line: 51, column: 2, scope: !11559)
!11565 = distinct !DISubprogram(name: "coredump", scope: !3839, file: !3839, line: 209, type: !11566, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11566 = !DISubroutineType(types: !11567)
!11567 = !{null, !32, !11568, !11612}
!11568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11569, size: 32)
!11569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11570)
!11570 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3676, line: 141, baseType: !11571)
!11571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3676, line: 97, size: 256, elements: !11572)
!11572 = !{!11573}
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11571, file: !3676, line: 107, baseType: !11574, size: 256)
!11574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3676, line: 98, size: 256, elements: !11575)
!11575 = !{!11576, !11581, !11586, !11591, !11596, !11601, !11606, !11611}
!11576 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 99, baseType: !11577, size: 32)
!11577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 99, size: 32, elements: !11578)
!11578 = !{!11579, !11580}
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11577, file: !3676, line: 99, baseType: !173, size: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11577, file: !3676, line: 99, baseType: !173, size: 32)
!11581 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 100, baseType: !11582, size: 32, offset: 32)
!11582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 100, size: 32, elements: !11583)
!11583 = !{!11584, !11585}
!11584 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11582, file: !3676, line: 100, baseType: !173, size: 32)
!11585 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11582, file: !3676, line: 100, baseType: !173, size: 32)
!11586 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 101, baseType: !11587, size: 32, offset: 64)
!11587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 101, size: 32, elements: !11588)
!11588 = !{!11589, !11590}
!11589 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11587, file: !3676, line: 101, baseType: !173, size: 32)
!11590 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11587, file: !3676, line: 101, baseType: !173, size: 32)
!11591 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 102, baseType: !11592, size: 32, offset: 96)
!11592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 102, size: 32, elements: !11593)
!11593 = !{!11594, !11595}
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11592, file: !3676, line: 102, baseType: !173, size: 32)
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11592, file: !3676, line: 102, baseType: !173, size: 32)
!11596 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 103, baseType: !11597, size: 32, offset: 128)
!11597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 103, size: 32, elements: !11598)
!11598 = !{!11599, !11600}
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11597, file: !3676, line: 103, baseType: !173, size: 32)
!11600 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11597, file: !3676, line: 103, baseType: !173, size: 32)
!11601 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 104, baseType: !11602, size: 32, offset: 160)
!11602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 104, size: 32, elements: !11603)
!11603 = !{!11604, !11605}
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11602, file: !3676, line: 104, baseType: !173, size: 32)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11602, file: !3676, line: 104, baseType: !173, size: 32)
!11606 = !DIDerivedType(tag: DW_TAG_member, scope: !11574, file: !3676, line: 105, baseType: !11607, size: 32, offset: 192)
!11607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11574, file: !3676, line: 105, size: 32, elements: !11608)
!11608 = !{!11609, !11610}
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11607, file: !3676, line: 105, baseType: !173, size: 32)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11607, file: !3676, line: 105, baseType: !173, size: 32)
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11574, file: !3676, line: 106, baseType: !173, size: 32, offset: 224)
!11612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11613, size: 32)
!11613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !11614)
!11614 = !{!11615, !11673, !11685, !11686, !11687, !11688, !11701}
!11615 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11613, file: !114, line: 247, baseType: !11616, size: 384)
!11616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !11617)
!11617 = !{!11618, !11642, !11649, !11650, !11651, !11660, !11661, !11662}
!11618 = !DIDerivedType(tag: DW_TAG_member, scope: !11616, file: !114, line: 60, baseType: !11619, size: 64)
!11619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11616, file: !114, line: 60, size: 64, elements: !11620)
!11620 = !{!11621, !11636}
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11619, file: !114, line: 61, baseType: !11622, size: 64)
!11622 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !11623)
!11623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !11624)
!11624 = !{!11625, !11631}
!11625 = !DIDerivedType(tag: DW_TAG_member, scope: !11623, file: !124, line: 38, baseType: !11626, size: 32)
!11626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11623, file: !124, line: 38, size: 32, elements: !11627)
!11627 = !{!11628, !11630}
!11628 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11626, file: !124, line: 39, baseType: !11629, size: 32)
!11629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11623, size: 32)
!11630 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11626, file: !124, line: 40, baseType: !11629, size: 32)
!11631 = !DIDerivedType(tag: DW_TAG_member, scope: !11623, file: !124, line: 42, baseType: !11632, size: 32, offset: 32)
!11632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11623, file: !124, line: 42, size: 32, elements: !11633)
!11633 = !{!11634, !11635}
!11634 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11632, file: !124, line: 43, baseType: !11629, size: 32)
!11635 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11632, file: !124, line: 44, baseType: !11629, size: 32)
!11636 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11619, file: !114, line: 62, baseType: !11637, size: 64)
!11637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !11638)
!11638 = !{!11639}
!11639 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11637, file: !140, line: 50, baseType: !11640, size: 64)
!11640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11641, size: 64, elements: !145)
!11641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11637, size: 32)
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11616, file: !114, line: 68, baseType: !11643, size: 32, offset: 64)
!11643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11644, size: 32)
!11644 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !11645)
!11645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !11646)
!11646 = !{!11647}
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11645, file: !150, line: 232, baseType: !11648, size: 64)
!11648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !11623)
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11616, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11616, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!11651 = !DIDerivedType(tag: DW_TAG_member, scope: !11616, file: !114, line: 90, baseType: !11652, size: 16, offset: 112)
!11652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11616, file: !114, line: 90, size: 16, elements: !11653)
!11653 = !{!11654, !11659}
!11654 = !DIDerivedType(tag: DW_TAG_member, scope: !11652, file: !114, line: 91, baseType: !11655, size: 16)
!11655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11652, file: !114, line: 91, size: 16, elements: !11656)
!11656 = !{!11657, !11658}
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11655, file: !114, line: 96, baseType: !166, size: 8)
!11658 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11655, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!11659 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11652, file: !114, line: 100, baseType: !170, size: 16)
!11660 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11616, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11616, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11616, file: !114, line: 131, baseType: !11663, size: 192, offset: 192)
!11663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !11664)
!11664 = !{!11665, !11666, !11672}
!11665 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11663, file: !150, line: 245, baseType: !11622, size: 64)
!11666 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11663, file: !150, line: 246, baseType: !11667, size: 32, offset: 64)
!11667 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !11668)
!11668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11669, size: 32)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{null, !11671}
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11663, size: 32)
!11672 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11663, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!11673 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11613, file: !114, line: 250, baseType: !11674, size: 288, offset: 384)
!11674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !11675)
!11675 = !{!11676, !11677, !11678, !11679, !11680, !11681, !11682, !11683, !11684}
!11676 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11674, file: !190, line: 26, baseType: !173, size: 32)
!11677 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11674, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!11678 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11674, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11674, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11674, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11674, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11674, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!11683 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11674, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!11684 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11674, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11613, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11613, file: !114, line: 256, baseType: !11644, size: 64, offset: 704)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11613, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11613, file: !114, line: 325, baseType: !11689, size: 32, offset: 800)
!11689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11690, size: 32)
!11690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !11691)
!11691 = !{!11692, !11698, !11699}
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11690, file: !109, line: 5074, baseType: !11693, size: 96)
!11693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !11694)
!11694 = !{!11695, !11696, !11697}
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11693, file: !210, line: 57, baseType: !213, size: 32)
!11696 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11693, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11693, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11690, file: !109, line: 5075, baseType: !11644, size: 64, offset: 96)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11690, file: !109, line: 5076, baseType: !11700, offset: 160)
!11700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11613, file: !114, line: 343, baseType: !11702, size: 64, offset: 832)
!11702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !11703)
!11703 = !{!11704, !11705}
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11702, file: !190, line: 63, baseType: !173, size: 32)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11702, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!11706 = !DILocalVariable(name: "reason", arg: 1, scope: !11565, file: !3839, line: 209, type: !32)
!11707 = !DILocation(line: 209, column: 28, scope: !11565)
!11708 = !DILocalVariable(name: "esf", arg: 2, scope: !11565, file: !3839, line: 209, type: !11568)
!11709 = !DILocation(line: 209, column: 56, scope: !11565)
!11710 = !DILocalVariable(name: "thread", arg: 3, scope: !11565, file: !3839, line: 210, type: !11612)
!11711 = !DILocation(line: 210, column: 25, scope: !11565)
!11712 = !DILocation(line: 212, column: 1, scope: !11565)
!11713 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3839, file: !3839, line: 214, type: !11714, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11714 = !DISubroutineType(types: !11715)
!11715 = !{null, !22, !22}
!11716 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11713, file: !3839, line: 214, type: !22)
!11717 = !DILocation(line: 214, column: 37, scope: !11713)
!11718 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11713, file: !3839, line: 214, type: !22)
!11719 = !DILocation(line: 214, column: 59, scope: !11713)
!11720 = !DILocation(line: 216, column: 1, scope: !11713)
!11721 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3839, file: !3839, line: 218, type: !11722, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{null, !1690, !217}
!11724 = !DILocalVariable(name: "buf", arg: 1, scope: !11721, file: !3839, line: 218, type: !1690)
!11725 = !DILocation(line: 218, column: 38, scope: !11721)
!11726 = !DILocalVariable(name: "buflen", arg: 2, scope: !11721, file: !3839, line: 218, type: !217)
!11727 = !DILocation(line: 218, column: 50, scope: !11721)
!11728 = !DILocation(line: 220, column: 1, scope: !11721)
!11729 = distinct !DISubprogram(name: "coredump_query", scope: !3839, file: !3839, line: 222, type: !11730, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11730 = !DISubroutineType(types: !11731)
!11731 = !{!103, !3838, !102}
!11732 = !DILocalVariable(name: "query_id", arg: 1, scope: !11729, file: !3839, line: 222, type: !3838)
!11733 = !DILocation(line: 222, column: 43, scope: !11729)
!11734 = !DILocalVariable(name: "arg", arg: 2, scope: !11729, file: !3839, line: 222, type: !102)
!11735 = !DILocation(line: 222, column: 59, scope: !11729)
!11736 = !DILocation(line: 224, column: 2, scope: !11729)
!11737 = distinct !DISubprogram(name: "coredump_cmd", scope: !3839, file: !3839, line: 227, type: !11738, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11738 = !DISubroutineType(types: !11739)
!11739 = !{!103, !3845, !102}
!11740 = !DILocalVariable(name: "query_id", arg: 1, scope: !11737, file: !3839, line: 227, type: !3845)
!11741 = !DILocation(line: 227, column: 39, scope: !11737)
!11742 = !DILocalVariable(name: "arg", arg: 2, scope: !11737, file: !3839, line: 227, type: !102)
!11743 = !DILocation(line: 227, column: 55, scope: !11737)
!11744 = !DILocation(line: 229, column: 2, scope: !11737)
!11745 = distinct !DISubprogram(name: "arch_system_halt", scope: !11746, file: !11746, line: 23, type: !6646, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11746 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11747 = !DILocalVariable(name: "reason", arg: 1, scope: !11745, file: !11746, line: 23, type: !32)
!11748 = !DILocation(line: 23, column: 57, scope: !11745)
!11749 = !DILocation(line: 25, column: 2, scope: !11745)
!11750 = !DILocalVariable(name: "key", scope: !11751, file: !6626, line: 44, type: !32)
!11751 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11752 = !DILocation(line: 44, column: 15, scope: !11751, inlinedAt: !11753)
!11753 = distinct !DILocation(line: 31, column: 8, scope: !11745)
!11754 = !DILocation(line: 47, column: 2, scope: !11751, inlinedAt: !11753)
!11755 = !{i64 1473008}
!11756 = !DILocation(line: 76, column: 9, scope: !11751, inlinedAt: !11753)
!11757 = !DILocation(line: 32, column: 2, scope: !11745)
!11758 = !DILocation(line: 32, column: 2, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !11746, line: 32, column: 2)
!11760 = distinct !DILexicalBlock(scope: !11745, file: !11746, line: 32, column: 2)
!11761 = distinct !{!11761, !11762, !11763}
!11762 = !DILocation(line: 32, column: 2, scope: !11760)
!11763 = !DILocation(line: 34, column: 2, scope: !11760)
!11764 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11746, file: !11746, line: 39, type: !11765, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11765 = !DISubroutineType(types: !11766)
!11766 = !{null, !32, !11568}
!11767 = !DILocalVariable(name: "reason", arg: 1, scope: !11764, file: !11746, line: 39, type: !32)
!11768 = !DILocation(line: 39, column: 52, scope: !11764)
!11769 = !DILocalVariable(name: "esf", arg: 2, scope: !11764, file: !11746, line: 40, type: !11568)
!11770 = !DILocation(line: 40, column: 31, scope: !11764)
!11771 = !DILocation(line: 42, column: 2, scope: !11764)
!11772 = !DILocation(line: 45, column: 2, scope: !11764)
!11773 = !DILocation(line: 45, column: 2, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !11746, line: 45, column: 2)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !11746, line: 45, column: 2)
!11776 = distinct !DILexicalBlock(scope: !11764, file: !11746, line: 45, column: 2)
!11777 = !DILocation(line: 46, column: 19, scope: !11764)
!11778 = !DILocation(line: 46, column: 2, scope: !11764)
!11779 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11746, file: !11746, line: 81, type: !6646, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11780 = !DILocalVariable(name: "reason", arg: 1, scope: !11779, file: !11746, line: 81, type: !32)
!11781 = !DILocation(line: 81, column: 46, scope: !11779)
!11782 = !DILocation(line: 83, column: 19, scope: !11779)
!11783 = !DILocation(line: 83, column: 2, scope: !11779)
!11784 = distinct !DISubprogram(name: "z_fatal_error", scope: !11746, file: !11746, line: 96, type: !11765, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11785 = !DILocalVariable(name: "reason", arg: 1, scope: !11784, file: !11746, line: 96, type: !32)
!11786 = !DILocation(line: 96, column: 33, scope: !11784)
!11787 = !DILocalVariable(name: "esf", arg: 2, scope: !11784, file: !11746, line: 96, type: !11568)
!11788 = !DILocation(line: 96, column: 61, scope: !11784)
!11789 = !DILocalVariable(name: "key", scope: !11784, file: !11746, line: 102, type: !32)
!11790 = !DILocation(line: 102, column: 15, scope: !11784)
!11791 = !DILocation(line: 44, column: 15, scope: !11751, inlinedAt: !11792)
!11792 = distinct !DILocation(line: 102, column: 21, scope: !11784)
!11793 = !DILocation(line: 47, column: 2, scope: !11751, inlinedAt: !11792)
!11794 = !DILocation(line: 76, column: 9, scope: !11751, inlinedAt: !11792)
!11795 = !DILocalVariable(name: "thread", scope: !11784, file: !11746, line: 103, type: !11612)
!11796 = !DILocation(line: 103, column: 19, scope: !11784)
!11797 = !DILocation(line: 104, column: 4, scope: !11784)
!11798 = !DILocation(line: 109, column: 2, scope: !11784)
!11799 = !DILocation(line: 109, column: 2, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !11746, line: 109, column: 2)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !11746, line: 109, column: 2)
!11802 = distinct !DILexicalBlock(scope: !11784, file: !11746, line: 109, column: 2)
!11803 = !DILocation(line: 119, column: 7, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11784, file: !11746, line: 119, column: 6)
!11805 = !DILocation(line: 119, column: 11, scope: !11804)
!11806 = !DILocation(line: 119, column: 20, scope: !11804)
!11807 = !DILocation(line: 119, column: 51, scope: !11804)
!11808 = !DILocalVariable(name: "esf", arg: 1, scope: !11809, file: !7736, line: 71, type: !11568)
!11809 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7736, file: !7736, line: 71, type: !11810, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{!1035, !11568}
!11812 = !DILocation(line: 71, column: 75, scope: !11809, inlinedAt: !11813)
!11813 = distinct !DILocation(line: 119, column: 23, scope: !11804)
!11814 = !DILocation(line: 73, column: 10, scope: !11809, inlinedAt: !11813)
!11815 = !DILocation(line: 73, column: 15, scope: !11809, inlinedAt: !11813)
!11816 = !DILocation(line: 73, column: 21, scope: !11809, inlinedAt: !11813)
!11817 = !DILocation(line: 73, column: 26, scope: !11809, inlinedAt: !11813)
!11818 = !DILocation(line: 73, column: 9, scope: !11809, inlinedAt: !11813)
!11819 = !DILocation(line: 119, column: 6, scope: !11784)
!11820 = !DILocation(line: 120, column: 3, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11804, file: !11746, line: 119, column: 57)
!11822 = !DILocation(line: 120, column: 3, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !11746, line: 120, column: 3)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !11746, line: 120, column: 3)
!11825 = distinct !DILexicalBlock(scope: !11821, file: !11746, line: 120, column: 3)
!11826 = !DILocation(line: 121, column: 2, scope: !11821)
!11827 = !DILocation(line: 124, column: 2, scope: !11784)
!11828 = !DILocation(line: 124, column: 2, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !11746, line: 124, column: 2)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !11746, line: 124, column: 2)
!11831 = distinct !DILexicalBlock(scope: !11784, file: !11746, line: 124, column: 2)
!11832 = !DILocation(line: 128, column: 11, scope: !11784)
!11833 = !DILocation(line: 128, column: 19, scope: !11784)
!11834 = !DILocation(line: 128, column: 24, scope: !11784)
!11835 = !DILocation(line: 128, column: 2, scope: !11784)
!11836 = !DILocation(line: 131, column: 28, scope: !11784)
!11837 = !DILocation(line: 131, column: 36, scope: !11784)
!11838 = !DILocation(line: 131, column: 2, scope: !11784)
!11839 = !DILocation(line: 151, column: 8, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !11746, line: 151, column: 7)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !11746, line: 146, column: 32)
!11842 = distinct !DILexicalBlock(scope: !11784, file: !11746, line: 146, column: 6)
!11843 = !DILocation(line: 151, column: 12, scope: !11840)
!11844 = !DILocation(line: 151, column: 21, scope: !11840)
!11845 = !DILocation(line: 151, column: 52, scope: !11840)
!11846 = !DILocation(line: 71, column: 75, scope: !11809, inlinedAt: !11847)
!11847 = distinct !DILocation(line: 151, column: 24, scope: !11840)
!11848 = !DILocation(line: 73, column: 10, scope: !11809, inlinedAt: !11847)
!11849 = !DILocation(line: 73, column: 15, scope: !11809, inlinedAt: !11847)
!11850 = !DILocation(line: 73, column: 21, scope: !11809, inlinedAt: !11847)
!11851 = !DILocation(line: 73, column: 26, scope: !11809, inlinedAt: !11847)
!11852 = !DILocation(line: 73, column: 9, scope: !11809, inlinedAt: !11847)
!11853 = !DILocation(line: 151, column: 7, scope: !11841)
!11854 = !DILocation(line: 158, column: 3, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11840, file: !11746, line: 151, column: 58)
!11856 = !DILocation(line: 186, column: 18, scope: !11784)
!11857 = !DILocalVariable(name: "key", arg: 1, scope: !11858, file: !6626, line: 84, type: !32)
!11858 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11859 = !DILocation(line: 84, column: 56, scope: !11858, inlinedAt: !11860)
!11860 = distinct !DILocation(line: 186, column: 2, scope: !11784)
!11861 = !DILocation(line: 87, column: 6, scope: !11862, inlinedAt: !11860)
!11862 = distinct !DILexicalBlock(scope: !11858, file: !6626, line: 87, column: 6)
!11863 = !DILocation(line: 87, column: 10, scope: !11862, inlinedAt: !11860)
!11864 = !DILocation(line: 87, column: 6, scope: !11858, inlinedAt: !11860)
!11865 = !DILocation(line: 88, column: 3, scope: !11866, inlinedAt: !11860)
!11866 = distinct !DILexicalBlock(scope: !11862, file: !6626, line: 87, column: 17)
!11867 = !DILocation(line: 90, column: 2, scope: !11858, inlinedAt: !11860)
!11868 = !{i64 1473872}
!11869 = !DILocation(line: 110, column: 1, scope: !11858, inlinedAt: !11860)
!11870 = !DILocation(line: 189, column: 18, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11746, line: 188, column: 41)
!11872 = distinct !DILexicalBlock(scope: !11784, file: !11746, line: 188, column: 6)
!11873 = !DILocation(line: 189, column: 3, scope: !11871)
!11874 = !DILocation(line: 191, column: 1, scope: !11784)
!11875 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !11876, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11876 = !DISubroutineType(types: !11877)
!11877 = !{!11878}
!11878 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !11612)
!11879 = !DILocation(line: 535, column: 9, scope: !11875)
!11880 = !DILocation(line: 535, column: 2, scope: !11875)
!11881 = distinct !DISubprogram(name: "k_thread_abort", scope: !4142, file: !4142, line: 188, type: !11882, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{null, !11878}
!11884 = !DILocalVariable(name: "thread", arg: 1, scope: !11881, file: !4142, line: 188, type: !11878)
!11885 = !DILocation(line: 188, column: 43, scope: !11881)
!11886 = !DILocation(line: 197, column: 2, scope: !11881)
!11887 = !DILocation(line: 197, column: 2, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11881, file: !4142, line: 197, column: 2)
!11889 = !{i64 2149660171}
!11890 = !DILocation(line: 198, column: 24, scope: !11881)
!11891 = !DILocation(line: 198, column: 2, scope: !11881)
!11892 = !DILocation(line: 199, column: 1, scope: !11881)
!11893 = distinct !DISubprogram(name: "z_current_get", scope: !4142, file: !4142, line: 173, type: !11876, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3835, retainedNodes: !223)
!11894 = !DILocation(line: 180, column: 2, scope: !11893)
!11895 = !DILocation(line: 180, column: 2, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11893, file: !4142, line: 180, column: 2)
!11897 = !{i64 2149660103}
!11898 = !DILocation(line: 181, column: 9, scope: !11893)
!11899 = !DILocation(line: 181, column: 2, scope: !11893)
!11900 = distinct !DISubprogram(name: "z_early_memset", scope: !3070, file: !3070, line: 108, type: !11901, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{null, !102, !103, !217}
!11903 = !DILocalVariable(name: "dst", arg: 1, scope: !11900, file: !3070, line: 108, type: !102)
!11904 = !DILocation(line: 108, column: 34, scope: !11900)
!11905 = !DILocalVariable(name: "c", arg: 2, scope: !11900, file: !3070, line: 108, type: !103)
!11906 = !DILocation(line: 108, column: 43, scope: !11900)
!11907 = !DILocalVariable(name: "n", arg: 3, scope: !11900, file: !3070, line: 108, type: !217)
!11908 = !DILocation(line: 108, column: 53, scope: !11900)
!11909 = !DILocation(line: 110, column: 16, scope: !11900)
!11910 = !DILocation(line: 110, column: 21, scope: !11900)
!11911 = !DILocation(line: 110, column: 24, scope: !11900)
!11912 = !DILocation(line: 110, column: 9, scope: !11900)
!11913 = !DILocation(line: 111, column: 1, scope: !11900)
!11914 = distinct !DISubprogram(name: "z_early_memcpy", scope: !3070, file: !3070, line: 121, type: !11915, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11915 = !DISubroutineType(types: !11916)
!11916 = !{null, !102, !13, !217}
!11917 = !DILocalVariable(name: "dst", arg: 1, scope: !11914, file: !3070, line: 121, type: !102)
!11918 = !DILocation(line: 121, column: 34, scope: !11914)
!11919 = !DILocalVariable(name: "src", arg: 2, scope: !11914, file: !3070, line: 121, type: !13)
!11920 = !DILocation(line: 121, column: 51, scope: !11914)
!11921 = !DILocalVariable(name: "n", arg: 3, scope: !11914, file: !3070, line: 121, type: !217)
!11922 = !DILocation(line: 121, column: 63, scope: !11914)
!11923 = !DILocation(line: 123, column: 16, scope: !11914)
!11924 = !DILocation(line: 123, column: 21, scope: !11914)
!11925 = !DILocation(line: 123, column: 26, scope: !11914)
!11926 = !DILocation(line: 123, column: 9, scope: !11914)
!11927 = !DILocation(line: 124, column: 1, scope: !11914)
!11928 = distinct !DISubprogram(name: "z_bss_zero", scope: !3070, file: !3070, line: 132, type: !253, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11929 = !DILocation(line: 143, column: 2, scope: !11928)
!11930 = !DILocation(line: 168, column: 1, scope: !11928)
!11931 = distinct !DISubprogram(name: "z_init_cpu", scope: !3070, file: !3070, line: 372, type: !11932, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{null, !103}
!11934 = !DILocalVariable(name: "id", arg: 1, scope: !11931, file: !3070, line: 372, type: !103)
!11935 = !DILocation(line: 372, column: 21, scope: !11931)
!11936 = !DILocation(line: 374, column: 19, scope: !11931)
!11937 = !DILocation(line: 374, column: 2, scope: !11931)
!11938 = !DILocation(line: 375, column: 49, scope: !11931)
!11939 = !DILocation(line: 375, column: 34, scope: !11931)
!11940 = !DILocation(line: 375, column: 15, scope: !11931)
!11941 = !DILocation(line: 375, column: 2, scope: !11931)
!11942 = !DILocation(line: 375, column: 19, scope: !11931)
!11943 = !DILocation(line: 375, column: 31, scope: !11931)
!11944 = !DILocation(line: 376, column: 24, scope: !11931)
!11945 = !DILocation(line: 376, column: 15, scope: !11931)
!11946 = !DILocation(line: 376, column: 2, scope: !11931)
!11947 = !DILocation(line: 376, column: 19, scope: !11931)
!11948 = !DILocation(line: 376, column: 22, scope: !11931)
!11949 = !DILocation(line: 378, column: 45, scope: !11931)
!11950 = !DILocation(line: 378, column: 26, scope: !11931)
!11951 = !DILocation(line: 378, column: 4, scope: !11931)
!11952 = !DILocation(line: 378, column: 50, scope: !11931)
!11953 = !DILocation(line: 377, column: 15, scope: !11931)
!11954 = !DILocation(line: 377, column: 2, scope: !11931)
!11955 = !DILocation(line: 377, column: 19, scope: !11931)
!11956 = !DILocation(line: 377, column: 29, scope: !11931)
!11957 = !DILocation(line: 384, column: 1, scope: !11931)
!11958 = distinct !DISubprogram(name: "init_idle_thread", scope: !3070, file: !3070, line: 343, type: !11932, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11959 = !DILocalVariable(name: "i", arg: 1, scope: !11958, file: !3070, line: 343, type: !103)
!11960 = !DILocation(line: 343, column: 34, scope: !11958)
!11961 = !DILocalVariable(name: "thread", scope: !11958, file: !3070, line: 345, type: !3147)
!11962 = !DILocation(line: 345, column: 19, scope: !11958)
!11963 = !DILocation(line: 345, column: 44, scope: !11958)
!11964 = !DILocation(line: 345, column: 29, scope: !11958)
!11965 = !DILocalVariable(name: "stack", scope: !11958, file: !3070, line: 346, type: !11966)
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11967, size: 32)
!11967 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !3255)
!11968 = !DILocation(line: 346, column: 20, scope: !11958)
!11969 = !DILocation(line: 346, column: 42, scope: !11958)
!11970 = !DILocation(line: 346, column: 28, scope: !11958)
!11971 = !DILocalVariable(name: "tname", scope: !11958, file: !3070, line: 358, type: !1836)
!11972 = !DILocation(line: 358, column: 8, scope: !11958)
!11973 = !DILocation(line: 361, column: 21, scope: !11958)
!11974 = !DILocation(line: 361, column: 29, scope: !11958)
!11975 = !DILocation(line: 362, column: 50, scope: !11958)
!11976 = !DILocation(line: 362, column: 37, scope: !11958)
!11977 = !DILocation(line: 362, column: 36, scope: !11958)
!11978 = !DILocation(line: 364, column: 6, scope: !11958)
!11979 = !DILocation(line: 361, column: 2, scope: !11958)
!11980 = !DILocation(line: 365, column: 27, scope: !11958)
!11981 = !DILocation(line: 365, column: 2, scope: !11958)
!11982 = !DILocation(line: 370, column: 1, scope: !11958)
!11983 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11984, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{!1836, !11966}
!11986 = !DILocalVariable(name: "sym", arg: 1, scope: !11983, file: !234, line: 331, type: !11966)
!11987 = !DILocation(line: 331, column: 61, scope: !11983)
!11988 = !DILocation(line: 333, column: 17, scope: !11983)
!11989 = !DILocation(line: 333, column: 9, scope: !11983)
!11990 = !DILocation(line: 333, column: 21, scope: !11983)
!11991 = !DILocation(line: 333, column: 2, scope: !11983)
!11992 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11993, file: !11993, line: 155, type: !11994, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!11993 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11994 = !DISubroutineType(types: !11995)
!11995 = !{null, !3147}
!11996 = !DILocalVariable(name: "thread", arg: 1, scope: !11992, file: !11993, line: 155, type: !3147)
!11997 = !DILocation(line: 155, column: 62, scope: !11992)
!11998 = !DILocation(line: 157, column: 2, scope: !11992)
!11999 = !DILocation(line: 157, column: 10, scope: !11992)
!12000 = !DILocation(line: 157, column: 15, scope: !11992)
!12001 = !DILocation(line: 157, column: 28, scope: !11992)
!12002 = !DILocation(line: 158, column: 1, scope: !11992)
!12003 = distinct !DISubprogram(name: "z_cstart", scope: !3070, file: !3070, line: 501, type: !253, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12004 = !DILocation(line: 504, column: 2, scope: !12003)
!12005 = !DILocation(line: 507, column: 2, scope: !12003)
!12006 = !DILocalVariable(name: "msp", scope: !12007, file: !12008, line: 42, type: !173)
!12007 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12008, file: !12008, line: 40, type: !253, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12008 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12009 = !DILocation(line: 42, column: 11, scope: !12007, inlinedAt: !12010)
!12010 = distinct !DILocation(line: 44, column: 2, scope: !12011, inlinedAt: !12013)
!12011 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12012, file: !12012, line: 42, type: !253, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12012 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12013 = distinct !DILocation(line: 510, column: 2, scope: !12003)
!12014 = !DILocation(line: 43, column: 14, scope: !12007, inlinedAt: !12010)
!12015 = !DILocation(line: 43, column: 3, scope: !12007, inlinedAt: !12010)
!12016 = !DILocation(line: 43, column: 60, scope: !12007, inlinedAt: !12010)
!12017 = !DILocation(line: 46, column: 12, scope: !12007, inlinedAt: !12010)
!12018 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12019, file: !6949, line: 1153, type: !173)
!12019 = distinct !DISubprogram(name: "__set_MSP", scope: !6949, file: !6949, line: 1153, type: !12020, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{null, !173}
!12022 = !DILocation(line: 1153, column: 46, scope: !12019, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 46, column: 2, scope: !12007, inlinedAt: !12010)
!12024 = !DILocation(line: 1155, column: 42, scope: !12019, inlinedAt: !12023)
!12025 = !DILocation(line: 1155, column: 3, scope: !12019, inlinedAt: !12023)
!12026 = !{i64 2769650}
!12027 = !DILocation(line: 102, column: 2, scope: !12028, inlinedAt: !12029)
!12028 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7736, file: !7736, line: 97, type: !253, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12029 = distinct !DILocation(line: 45, column: 2, scope: !12011, inlinedAt: !12013)
!12030 = !DILocation(line: 46, column: 2, scope: !12011, inlinedAt: !12013)
!12031 = !DILocation(line: 47, column: 2, scope: !12011, inlinedAt: !12013)
!12032 = !DILocation(line: 512, column: 2, scope: !12003)
!12033 = !DILocation(line: 512, column: 2, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12003, file: !3070, line: 512, column: 2)
!12035 = !DILocalVariable(name: "dummy_thread", scope: !12003, file: !3070, line: 518, type: !3148)
!12036 = !DILocation(line: 518, column: 18, scope: !12003)
!12037 = !DILocation(line: 520, column: 2, scope: !12003)
!12038 = !DILocation(line: 523, column: 2, scope: !12003)
!12039 = !DILocation(line: 526, column: 2, scope: !12003)
!12040 = !DILocation(line: 527, column: 2, scope: !12003)
!12041 = !DILocation(line: 543, column: 24, scope: !12003)
!12042 = !DILocation(line: 543, column: 2, scope: !12003)
!12043 = distinct !DISubprogram(name: "gcov_static_init", scope: !12044, file: !12044, line: 15, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12044 = !DIFile(filename: "zephyr/include/zephyr/debug/gcov.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12045 = !DILocation(line: 15, column: 45, scope: !12043)
!12046 = !DILocalVariable(name: "level", arg: 1, scope: !3274, file: !3070, line: 230, type: !3069)
!12047 = !DILocation(line: 230, column: 50, scope: !3274)
!12048 = !DILocalVariable(name: "entry", scope: !3274, file: !3070, line: 244, type: !3278)
!12049 = !DILocation(line: 244, column: 27, scope: !3274)
!12050 = !DILocation(line: 246, column: 22, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !3274, file: !3070, line: 246, column: 2)
!12052 = !DILocation(line: 246, column: 15, scope: !12051)
!12053 = !DILocation(line: 246, column: 13, scope: !12051)
!12054 = !DILocation(line: 246, column: 7, scope: !12051)
!12055 = !DILocation(line: 246, column: 30, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !3070, line: 246, column: 2)
!12057 = !DILocation(line: 246, column: 45, scope: !12056)
!12058 = !DILocation(line: 246, column: 50, scope: !12056)
!12059 = !DILocation(line: 246, column: 38, scope: !12056)
!12060 = !DILocation(line: 246, column: 36, scope: !12056)
!12061 = !DILocation(line: 246, column: 2, scope: !12051)
!12062 = !DILocalVariable(name: "dev", scope: !12063, file: !3070, line: 247, type: !3088)
!12063 = distinct !DILexicalBlock(scope: !12056, file: !3070, line: 246, column: 64)
!12064 = !DILocation(line: 247, column: 24, scope: !12063)
!12065 = !DILocation(line: 247, column: 30, scope: !12063)
!12066 = !DILocation(line: 247, column: 37, scope: !12063)
!12067 = !DILocalVariable(name: "rc", scope: !12063, file: !3070, line: 248, type: !103)
!12068 = !DILocation(line: 248, column: 7, scope: !12063)
!12069 = !DILocation(line: 248, column: 12, scope: !12063)
!12070 = !DILocation(line: 248, column: 19, scope: !12063)
!12071 = !DILocation(line: 248, column: 24, scope: !12063)
!12072 = !DILocation(line: 250, column: 7, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12063, file: !3070, line: 250, column: 7)
!12074 = !DILocation(line: 250, column: 11, scope: !12073)
!12075 = !DILocation(line: 250, column: 7, scope: !12063)
!12076 = !DILocation(line: 254, column: 8, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !3070, line: 254, column: 8)
!12078 = distinct !DILexicalBlock(scope: !12073, file: !3070, line: 250, column: 20)
!12079 = !DILocation(line: 254, column: 11, scope: !12077)
!12080 = !DILocation(line: 254, column: 8, scope: !12078)
!12081 = !DILocation(line: 255, column: 9, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !3070, line: 255, column: 9)
!12083 = distinct !DILexicalBlock(scope: !12077, file: !3070, line: 254, column: 17)
!12084 = !DILocation(line: 255, column: 12, scope: !12082)
!12085 = !DILocation(line: 255, column: 9, scope: !12083)
!12086 = !DILocation(line: 256, column: 12, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12082, file: !3070, line: 255, column: 17)
!12088 = !DILocation(line: 256, column: 11, scope: !12087)
!12089 = !DILocation(line: 256, column: 9, scope: !12087)
!12090 = !DILocation(line: 257, column: 5, scope: !12087)
!12091 = !DILocation(line: 258, column: 9, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12083, file: !3070, line: 258, column: 9)
!12093 = !DILocation(line: 258, column: 12, scope: !12092)
!12094 = !DILocation(line: 258, column: 9, scope: !12083)
!12095 = !DILocation(line: 259, column: 9, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !3070, line: 258, column: 25)
!12097 = !DILocation(line: 260, column: 5, scope: !12096)
!12098 = !DILocation(line: 261, column: 28, scope: !12083)
!12099 = !DILocation(line: 261, column: 5, scope: !12083)
!12100 = !DILocation(line: 261, column: 10, scope: !12083)
!12101 = !DILocation(line: 261, column: 17, scope: !12083)
!12102 = !DILocation(line: 261, column: 26, scope: !12083)
!12103 = !DILocation(line: 262, column: 4, scope: !12083)
!12104 = !DILocation(line: 263, column: 4, scope: !12078)
!12105 = !DILocation(line: 263, column: 9, scope: !12078)
!12106 = !DILocation(line: 263, column: 16, scope: !12078)
!12107 = !DILocation(line: 263, column: 28, scope: !12078)
!12108 = !DILocation(line: 264, column: 3, scope: !12078)
!12109 = !DILocation(line: 265, column: 2, scope: !12063)
!12110 = !DILocation(line: 246, column: 60, scope: !12056)
!12111 = !DILocation(line: 246, column: 2, scope: !12056)
!12112 = distinct !{!12112, !12061, !12113}
!12113 = !DILocation(line: 265, column: 2, scope: !12051)
!12114 = !DILocation(line: 266, column: 1, scope: !3274)
!12115 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2819, file: !2819, line: 850, type: !6985, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12116 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12115, file: !2819, line: 850, type: !3609)
!12117 = !DILocation(line: 850, column: 51, scope: !12115)
!12118 = !DILocalVariable(name: "priority", arg: 2, scope: !12115, file: !2819, line: 850, type: !173)
!12119 = !DILocation(line: 850, column: 66, scope: !12115)
!12120 = !DILocation(line: 852, column: 17, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12115, file: !2819, line: 852, column: 7)
!12122 = !DILocation(line: 852, column: 23, scope: !12121)
!12123 = !DILocation(line: 852, column: 7, scope: !12115)
!12124 = !DILocation(line: 854, column: 53, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12121, file: !2819, line: 853, column: 3)
!12126 = !DILocation(line: 854, column: 44, scope: !12125)
!12127 = !DILocation(line: 854, column: 83, scope: !12125)
!12128 = !DILocation(line: 854, column: 80, scope: !12125)
!12129 = !DILocation(line: 854, column: 71, scope: !12125)
!12130 = !DILocation(line: 854, column: 69, scope: !12125)
!12131 = !DILocation(line: 855, column: 11, scope: !12125)
!12132 = !DILocation(line: 855, column: 20, scope: !12125)
!12133 = !DILocation(line: 855, column: 48, scope: !12125)
!12134 = !DILocation(line: 855, column: 71, scope: !12125)
!12135 = !DILocation(line: 855, column: 68, scope: !12125)
!12136 = !DILocation(line: 854, column: 102, scope: !12125)
!12137 = !DILocation(line: 854, column: 14, scope: !12125)
!12138 = !DILocation(line: 854, column: 5, scope: !12125)
!12139 = !DILocation(line: 854, column: 30, scope: !12125)
!12140 = !DILocation(line: 856, column: 3, scope: !12125)
!12141 = !DILocation(line: 859, column: 53, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12121, file: !2819, line: 858, column: 3)
!12143 = !DILocation(line: 859, column: 44, scope: !12142)
!12144 = !DILocation(line: 859, column: 83, scope: !12142)
!12145 = !DILocation(line: 859, column: 80, scope: !12142)
!12146 = !DILocation(line: 859, column: 71, scope: !12142)
!12147 = !DILocation(line: 859, column: 69, scope: !12142)
!12148 = !DILocation(line: 860, column: 11, scope: !12142)
!12149 = !DILocation(line: 860, column: 20, scope: !12142)
!12150 = !DILocation(line: 860, column: 48, scope: !12142)
!12151 = !DILocation(line: 860, column: 71, scope: !12142)
!12152 = !DILocation(line: 860, column: 68, scope: !12142)
!12153 = !DILocation(line: 859, column: 102, scope: !12142)
!12154 = !DILocation(line: 859, column: 14, scope: !12142)
!12155 = !DILocation(line: 859, column: 5, scope: !12142)
!12156 = !DILocation(line: 859, column: 30, scope: !12142)
!12157 = !DILocation(line: 862, column: 1, scope: !12115)
!12158 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12159, file: !12159, line: 215, type: !11994, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12159 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12160 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12158, file: !12159, line: 215, type: !3147)
!12161 = !DILocation(line: 215, column: 57, scope: !12158)
!12162 = !DILocation(line: 217, column: 2, scope: !12158)
!12163 = !DILocation(line: 217, column: 16, scope: !12158)
!12164 = !DILocation(line: 217, column: 21, scope: !12158)
!12165 = !DILocation(line: 217, column: 34, scope: !12158)
!12166 = !DILocation(line: 221, column: 2, scope: !12158)
!12167 = !DILocation(line: 221, column: 16, scope: !12158)
!12168 = !DILocation(line: 221, column: 21, scope: !12158)
!12169 = !DILocation(line: 221, column: 34, scope: !12158)
!12170 = !DILocation(line: 232, column: 2, scope: !12158)
!12171 = !DILocation(line: 232, column: 16, scope: !12158)
!12172 = !DILocation(line: 232, column: 30, scope: !12158)
!12173 = !DILocation(line: 239, column: 26, scope: !12158)
!12174 = !DILocation(line: 239, column: 24, scope: !12158)
!12175 = !DILocation(line: 240, column: 1, scope: !12158)
!12176 = distinct !DISubprogram(name: "prepare_multithreading", scope: !3070, file: !3070, line: 399, type: !12177, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{!1836}
!12179 = !DILocalVariable(name: "stack_ptr", scope: !12176, file: !3070, line: 401, type: !1836)
!12180 = !DILocation(line: 401, column: 8, scope: !12176)
!12181 = !DILocation(line: 404, column: 2, scope: !12176)
!12182 = !DILocation(line: 416, column: 24, scope: !12176)
!12183 = !DILocation(line: 418, column: 14, scope: !12176)
!12184 = !DILocation(line: 418, column: 12, scope: !12176)
!12185 = !DILocation(line: 423, column: 2, scope: !12176)
!12186 = !DILocation(line: 424, column: 2, scope: !12176)
!12187 = !DILocation(line: 426, column: 2, scope: !12176)
!12188 = !DILocation(line: 428, column: 9, scope: !12176)
!12189 = !DILocation(line: 428, column: 2, scope: !12176)
!12190 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !3070, file: !3070, line: 432, type: !12191, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12191 = !DISubroutineType(types: !12192)
!12192 = !{null, !1836}
!12193 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12190, file: !3070, line: 432, type: !1836)
!12194 = !DILocation(line: 432, column: 55, scope: !12190)
!12195 = !DILocation(line: 435, column: 45, scope: !12190)
!12196 = !DILocation(line: 435, column: 2, scope: !12190)
!12197 = !DILocation(line: 445, column: 2, scope: !12190)
!12198 = distinct !DISubprogram(name: "bg_thread_main", scope: !3070, file: !3070, line: 277, type: !242, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !223)
!12199 = !DILocalVariable(name: "unused1", arg: 1, scope: !12198, file: !3070, line: 277, type: !102)
!12200 = !DILocation(line: 277, column: 34, scope: !12198)
!12201 = !DILocalVariable(name: "unused2", arg: 2, scope: !12198, file: !3070, line: 277, type: !102)
!12202 = !DILocation(line: 277, column: 49, scope: !12198)
!12203 = !DILocalVariable(name: "unused3", arg: 3, scope: !12198, file: !3070, line: 277, type: !102)
!12204 = !DILocation(line: 277, column: 64, scope: !12198)
!12205 = !DILocation(line: 279, column: 2, scope: !12198)
!12206 = !DILocation(line: 280, column: 2, scope: !12198)
!12207 = !DILocation(line: 281, column: 2, scope: !12198)
!12208 = !DILocation(line: 291, column: 20, scope: !12198)
!12209 = !DILocation(line: 293, column: 2, scope: !12198)
!12210 = !DILocation(line: 297, column: 2, scope: !12198)
!12211 = !DILocation(line: 305, column: 2, scope: !12198)
!12212 = !DILocation(line: 307, column: 2, scope: !12198)
!12213 = !DILocation(line: 330, column: 8, scope: !12198)
!12214 = !DILocation(line: 333, column: 34, scope: !12198)
!12215 = !DILocation(line: 339, column: 1, scope: !12198)
!12216 = distinct !DISubprogram(name: "k_thread_foreach", scope: !3293, file: !3293, line: 45, type: !12217, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12217 = !DISubroutineType(types: !12218)
!12218 = !{null, !12219, !102}
!12219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !109, line: 103, baseType: !12220)
!12220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12221, size: 32)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{null, !12223, !102}
!12223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12224, size: 32)
!12224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3298)
!12225 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12216, file: !3293, line: 45, type: !12219)
!12226 = !DILocation(line: 45, column: 42, scope: !12216)
!12227 = !DILocalVariable(name: "user_data", arg: 2, scope: !12216, file: !3293, line: 45, type: !102)
!12228 = !DILocation(line: 45, column: 57, scope: !12216)
!12229 = !DILocation(line: 71, column: 1, scope: !12216)
!12230 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !3293, file: !3293, line: 73, type: !12217, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12231 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12230, file: !3293, line: 73, type: !12219)
!12232 = !DILocation(line: 73, column: 51, scope: !12230)
!12233 = !DILocalVariable(name: "user_data", arg: 2, scope: !12230, file: !3293, line: 73, type: !102)
!12234 = !DILocation(line: 73, column: 66, scope: !12230)
!12235 = !DILocation(line: 95, column: 1, scope: !12230)
!12236 = distinct !DISubprogram(name: "k_is_in_isr", scope: !3293, file: !3293, line: 97, type: !4065, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12237 = !DILocalVariable(name: "result", scope: !12238, file: !6949, line: 1029, type: !173)
!12238 = distinct !DISubprogram(name: "__get_IPSR", scope: !6949, file: !6949, line: 1027, type: !7731, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12239 = !DILocation(line: 1029, column: 12, scope: !12238, inlinedAt: !12240)
!12240 = distinct !DILocation(line: 48, column: 10, scope: !12241, inlinedAt: !12242)
!12241 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7736, file: !7736, line: 46, type: !4065, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12242 = distinct !DILocation(line: 99, column: 9, scope: !12236)
!12243 = !DILocation(line: 1031, column: 3, scope: !12238, inlinedAt: !12240)
!12244 = !{i64 2406752}
!12245 = !DILocation(line: 1032, column: 10, scope: !12238, inlinedAt: !12240)
!12246 = !DILocation(line: 48, column: 9, scope: !12241, inlinedAt: !12242)
!12247 = !DILocation(line: 99, column: 2, scope: !12236)
!12248 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !3293, file: !3293, line: 106, type: !253, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12249 = !DILocation(line: 108, column: 2, scope: !12248)
!12250 = !DILocation(line: 108, column: 12, scope: !12248)
!12251 = !DILocation(line: 108, column: 17, scope: !12248)
!12252 = !DILocation(line: 108, column: 30, scope: !12248)
!12253 = !DILocation(line: 109, column: 1, scope: !12248)
!12254 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !3293, file: !3293, line: 116, type: !253, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12255 = !DILocation(line: 118, column: 2, scope: !12254)
!12256 = !DILocation(line: 118, column: 12, scope: !12254)
!12257 = !DILocation(line: 118, column: 17, scope: !12254)
!12258 = !DILocation(line: 118, column: 30, scope: !12254)
!12259 = !DILocation(line: 119, column: 1, scope: !12254)
!12260 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !3293, file: !3293, line: 126, type: !4065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12261 = !DILocation(line: 128, column: 10, scope: !12260)
!12262 = !DILocation(line: 128, column: 20, scope: !12260)
!12263 = !DILocation(line: 128, column: 25, scope: !12260)
!12264 = !DILocation(line: 128, column: 38, scope: !12260)
!12265 = !DILocation(line: 128, column: 53, scope: !12260)
!12266 = !DILocation(line: 128, column: 2, scope: !12260)
!12267 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !3293, file: !3293, line: 187, type: !12268, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12268 = !DISubroutineType(types: !12269)
!12269 = !{!103, !3297, !256}
!12270 = !DILocalVariable(name: "thread", arg: 1, scope: !12267, file: !3293, line: 187, type: !3297)
!12271 = !DILocation(line: 187, column: 47, scope: !12267)
!12272 = !DILocalVariable(name: "value", arg: 2, scope: !12267, file: !3293, line: 187, type: !256)
!12273 = !DILocation(line: 187, column: 67, scope: !12267)
!12274 = !DILocation(line: 201, column: 2, scope: !12267)
!12275 = !DILocation(line: 202, column: 2, scope: !12267)
!12276 = !DILocation(line: 204, column: 2, scope: !12267)
!12277 = !DILocation(line: 204, column: 2, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12267, file: !3293, line: 204, column: 2)
!12279 = !DILocation(line: 206, column: 2, scope: !12267)
!12280 = distinct !DISubprogram(name: "k_thread_name_get", scope: !3293, file: !3293, line: 238, type: !12281, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12281 = !DISubroutineType(types: !12282)
!12282 = !{!256, !3297}
!12283 = !DILocalVariable(name: "thread", arg: 1, scope: !12280, file: !3293, line: 238, type: !3297)
!12284 = !DILocation(line: 238, column: 48, scope: !12280)
!12285 = !DILocation(line: 243, column: 2, scope: !12280)
!12286 = !DILocation(line: 244, column: 2, scope: !12280)
!12287 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !3293, file: !3293, line: 248, type: !12288, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12288 = !DISubroutineType(types: !12289)
!12289 = !{!103, !3296, !1836, !217}
!12290 = !DILocalVariable(name: "thread", arg: 1, scope: !12287, file: !3293, line: 248, type: !3296)
!12291 = !DILocation(line: 248, column: 39, scope: !12287)
!12292 = !DILocalVariable(name: "buf", arg: 2, scope: !12287, file: !3293, line: 248, type: !1836)
!12293 = !DILocation(line: 248, column: 53, scope: !12287)
!12294 = !DILocalVariable(name: "size", arg: 3, scope: !12287, file: !3293, line: 248, type: !217)
!12295 = !DILocation(line: 248, column: 65, scope: !12287)
!12296 = !DILocation(line: 254, column: 2, scope: !12287)
!12297 = !DILocation(line: 255, column: 2, scope: !12287)
!12298 = !DILocation(line: 256, column: 2, scope: !12287)
!12299 = !DILocation(line: 257, column: 2, scope: !12287)
!12300 = !DILocalVariable(name: "thread_id", arg: 1, scope: !3292, file: !3293, line: 271, type: !3296)
!12301 = !DILocation(line: 271, column: 40, scope: !3292)
!12302 = !DILocalVariable(name: "buf", arg: 2, scope: !3292, file: !3293, line: 271, type: !1836)
!12303 = !DILocation(line: 271, column: 57, scope: !3292)
!12304 = !DILocalVariable(name: "buf_size", arg: 3, scope: !3292, file: !3293, line: 271, type: !217)
!12305 = !DILocation(line: 271, column: 69, scope: !3292)
!12306 = !DILocalVariable(name: "off", scope: !3292, file: !3293, line: 273, type: !217)
!12307 = !DILocation(line: 273, column: 14, scope: !3292)
!12308 = !DILocalVariable(name: "bit", scope: !3292, file: !3293, line: 274, type: !156)
!12309 = !DILocation(line: 274, column: 14, scope: !3292)
!12310 = !DILocalVariable(name: "thread_state", scope: !3292, file: !3293, line: 275, type: !156)
!12311 = !DILocation(line: 275, column: 14, scope: !3292)
!12312 = !DILocation(line: 275, column: 29, scope: !3292)
!12313 = !DILocation(line: 275, column: 40, scope: !3292)
!12314 = !DILocation(line: 275, column: 45, scope: !3292)
!12315 = !DILocation(line: 281, column: 7, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !3292, file: !3293, line: 281, column: 6)
!12317 = !DILocation(line: 281, column: 11, scope: !12316)
!12318 = !DILocation(line: 281, column: 20, scope: !12316)
!12319 = !DILocation(line: 281, column: 24, scope: !12316)
!12320 = !DILocation(line: 281, column: 33, scope: !12316)
!12321 = !DILocation(line: 281, column: 6, scope: !3292)
!12322 = !DILocation(line: 282, column: 3, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12316, file: !3293, line: 281, column: 40)
!12324 = !DILocation(line: 285, column: 10, scope: !3292)
!12325 = !DILocalVariable(name: "index", scope: !12326, file: !3293, line: 293, type: !156)
!12326 = distinct !DILexicalBlock(scope: !3292, file: !3293, line: 293, column: 2)
!12327 = !DILocation(line: 293, column: 15, scope: !12326)
!12328 = !DILocation(line: 293, column: 7, scope: !12326)
!12329 = !DILocation(line: 293, column: 26, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12326, file: !3293, line: 293, column: 2)
!12331 = !DILocation(line: 293, column: 39, scope: !12330)
!12332 = !DILocation(line: 293, column: 2, scope: !12326)
!12333 = !DILocation(line: 294, column: 9, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12330, file: !3293, line: 293, column: 54)
!12335 = !DILocation(line: 294, column: 7, scope: !12334)
!12336 = !DILocation(line: 295, column: 8, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12334, file: !3293, line: 295, column: 7)
!12338 = !DILocation(line: 295, column: 23, scope: !12337)
!12339 = !DILocation(line: 295, column: 21, scope: !12337)
!12340 = !DILocation(line: 295, column: 28, scope: !12337)
!12341 = !DILocation(line: 295, column: 7, scope: !12334)
!12342 = !DILocation(line: 296, column: 4, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12337, file: !3293, line: 295, column: 34)
!12344 = !DILocation(line: 299, column: 21, scope: !12334)
!12345 = !DILocation(line: 299, column: 27, scope: !12334)
!12346 = !DILocation(line: 299, column: 25, scope: !12334)
!12347 = !DILocation(line: 299, column: 32, scope: !12334)
!12348 = !DILocation(line: 299, column: 43, scope: !12334)
!12349 = !DILocation(line: 299, column: 41, scope: !12334)
!12350 = !DILocation(line: 300, column: 18, scope: !12334)
!12351 = !DILocation(line: 300, column: 7, scope: !12334)
!12352 = !DILocation(line: 300, column: 36, scope: !12334)
!12353 = !DILocation(line: 300, column: 26, scope: !12334)
!12354 = !DILocation(line: 299, column: 10, scope: !12334)
!12355 = !DILocation(line: 299, column: 7, scope: !12334)
!12356 = !DILocation(line: 302, column: 20, scope: !12334)
!12357 = !DILocation(line: 302, column: 19, scope: !12334)
!12358 = !DILocation(line: 302, column: 16, scope: !12334)
!12359 = !DILocation(line: 304, column: 7, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12334, file: !3293, line: 304, column: 7)
!12361 = !DILocation(line: 304, column: 20, scope: !12360)
!12362 = !DILocation(line: 304, column: 7, scope: !12334)
!12363 = !DILocation(line: 305, column: 22, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12360, file: !3293, line: 304, column: 26)
!12365 = !DILocation(line: 305, column: 28, scope: !12364)
!12366 = !DILocation(line: 305, column: 26, scope: !12364)
!12367 = !DILocation(line: 305, column: 33, scope: !12364)
!12368 = !DILocation(line: 305, column: 44, scope: !12364)
!12369 = !DILocation(line: 305, column: 42, scope: !12364)
!12370 = !DILocation(line: 305, column: 11, scope: !12364)
!12371 = !DILocation(line: 305, column: 8, scope: !12364)
!12372 = !DILocation(line: 306, column: 3, scope: !12364)
!12373 = !DILocation(line: 307, column: 2, scope: !12334)
!12374 = !DILocation(line: 293, column: 50, scope: !12330)
!12375 = !DILocation(line: 293, column: 2, scope: !12330)
!12376 = distinct !{!12376, !12332, !12377}
!12377 = !DILocation(line: 307, column: 2, scope: !12326)
!12378 = !DILocation(line: 309, column: 2, scope: !3292)
!12379 = !DILocation(line: 309, column: 6, scope: !3292)
!12380 = !DILocation(line: 309, column: 11, scope: !3292)
!12381 = !DILocation(line: 311, column: 23, scope: !3292)
!12382 = !DILocation(line: 311, column: 2, scope: !3292)
!12383 = !DILocation(line: 312, column: 1, scope: !3292)
!12384 = distinct !DISubprogram(name: "copy_bytes", scope: !3293, file: !3293, line: 261, type: !12385, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12385 = !DISubroutineType(types: !12386)
!12386 = !{!217, !1836, !217, !256, !217}
!12387 = !DILocalVariable(name: "dest", arg: 1, scope: !12384, file: !3293, line: 261, type: !1836)
!12388 = !DILocation(line: 261, column: 32, scope: !12384)
!12389 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12384, file: !3293, line: 261, type: !217)
!12390 = !DILocation(line: 261, column: 45, scope: !12384)
!12391 = !DILocalVariable(name: "src", arg: 3, scope: !12384, file: !3293, line: 261, type: !256)
!12392 = !DILocation(line: 261, column: 68, scope: !12384)
!12393 = !DILocalVariable(name: "src_size", arg: 4, scope: !12384, file: !3293, line: 261, type: !217)
!12394 = !DILocation(line: 261, column: 80, scope: !12384)
!12395 = !DILocalVariable(name: "bytes_to_copy", scope: !12384, file: !3293, line: 263, type: !217)
!12396 = !DILocation(line: 263, column: 10, scope: !12384)
!12397 = !DILocation(line: 265, column: 18, scope: !12384)
!12398 = !DILocation(line: 265, column: 16, scope: !12384)
!12399 = !DILocation(line: 266, column: 9, scope: !12384)
!12400 = !DILocation(line: 266, column: 15, scope: !12384)
!12401 = !DILocation(line: 266, column: 20, scope: !12384)
!12402 = !DILocation(line: 266, column: 2, scope: !12384)
!12403 = !DILocation(line: 268, column: 9, scope: !12384)
!12404 = !DILocation(line: 268, column: 2, scope: !12384)
!12405 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !3293, file: !3293, line: 383, type: !12406, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{null, !3297}
!12408 = !DILocalVariable(name: "thread", arg: 1, scope: !12405, file: !3293, line: 383, type: !3297)
!12409 = !DILocation(line: 383, column: 45, scope: !12405)
!12410 = !DILocation(line: 385, column: 2, scope: !12405)
!12411 = !DILocation(line: 385, column: 2, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12405, file: !3293, line: 385, column: 2)
!12413 = !DILocation(line: 387, column: 16, scope: !12405)
!12414 = !DILocation(line: 387, column: 2, scope: !12405)
!12415 = !DILocation(line: 388, column: 1, scope: !12405)
!12416 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !3293, file: !3293, line: 528, type: !12417, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!1836, !3297, !12419, !217, !240, !102, !102, !102, !103, !173, !256}
!12419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12420, size: 32)
!12420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !12421)
!12421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !12422)
!12422 = !{!12423}
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12421, file: !234, line: 48, baseType: !237, size: 8)
!12424 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12416, file: !3293, line: 528, type: !3297)
!12425 = !DILocation(line: 528, column: 43, scope: !12416)
!12426 = !DILocalVariable(name: "stack", arg: 2, scope: !12416, file: !3293, line: 529, type: !12419)
!12427 = !DILocation(line: 529, column: 23, scope: !12416)
!12428 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12416, file: !3293, line: 529, type: !217)
!12429 = !DILocation(line: 529, column: 37, scope: !12416)
!12430 = !DILocalVariable(name: "entry", arg: 4, scope: !12416, file: !3293, line: 530, type: !240)
!12431 = !DILocation(line: 530, column: 22, scope: !12416)
!12432 = !DILocalVariable(name: "p1", arg: 5, scope: !12416, file: !3293, line: 531, type: !102)
!12433 = !DILocation(line: 531, column: 11, scope: !12416)
!12434 = !DILocalVariable(name: "p2", arg: 6, scope: !12416, file: !3293, line: 531, type: !102)
!12435 = !DILocation(line: 531, column: 21, scope: !12416)
!12436 = !DILocalVariable(name: "p3", arg: 7, scope: !12416, file: !3293, line: 531, type: !102)
!12437 = !DILocation(line: 531, column: 31, scope: !12416)
!12438 = !DILocalVariable(name: "prio", arg: 8, scope: !12416, file: !3293, line: 532, type: !103)
!12439 = !DILocation(line: 532, column: 9, scope: !12416)
!12440 = !DILocalVariable(name: "options", arg: 9, scope: !12416, file: !3293, line: 532, type: !173)
!12441 = !DILocation(line: 532, column: 24, scope: !12416)
!12442 = !DILocalVariable(name: "name", arg: 10, scope: !12416, file: !3293, line: 532, type: !256)
!12443 = !DILocation(line: 532, column: 45, scope: !12416)
!12444 = !DILocalVariable(name: "stack_ptr", scope: !12416, file: !3293, line: 534, type: !1836)
!12445 = !DILocation(line: 534, column: 8, scope: !12416)
!12446 = !DILocation(line: 536, column: 2, scope: !12416)
!12447 = !DILocation(line: 536, column: 2, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12416, file: !3293, line: 536, column: 2)
!12449 = !DILocation(line: 550, column: 16, scope: !12416)
!12450 = !DILocation(line: 550, column: 28, scope: !12416)
!12451 = !DILocation(line: 550, column: 2, scope: !12416)
!12452 = !DILocation(line: 553, column: 22, scope: !12416)
!12453 = !DILocation(line: 553, column: 34, scope: !12416)
!12454 = !DILocation(line: 553, column: 40, scope: !12416)
!12455 = !DILocation(line: 553, column: 64, scope: !12416)
!12456 = !DILocation(line: 553, column: 2, scope: !12416)
!12457 = !DILocation(line: 554, column: 33, scope: !12416)
!12458 = !DILocation(line: 554, column: 45, scope: !12416)
!12459 = !DILocation(line: 554, column: 52, scope: !12416)
!12460 = !DILocation(line: 554, column: 14, scope: !12416)
!12461 = !DILocation(line: 554, column: 12, scope: !12416)
!12462 = !DILocation(line: 564, column: 18, scope: !12416)
!12463 = !DILocation(line: 564, column: 30, scope: !12416)
!12464 = !DILocation(line: 564, column: 37, scope: !12416)
!12465 = !DILocation(line: 564, column: 48, scope: !12416)
!12466 = !DILocation(line: 564, column: 55, scope: !12416)
!12467 = !DILocation(line: 564, column: 59, scope: !12416)
!12468 = !DILocation(line: 564, column: 63, scope: !12416)
!12469 = !DILocation(line: 564, column: 2, scope: !12416)
!12470 = !DILocation(line: 567, column: 2, scope: !12416)
!12471 = !DILocation(line: 567, column: 14, scope: !12416)
!12472 = !DILocation(line: 567, column: 24, scope: !12416)
!12473 = !DILocation(line: 612, column: 7, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12416, file: !3293, line: 612, column: 6)
!12475 = !DILocation(line: 612, column: 6, scope: !12416)
!12476 = !DILocation(line: 613, column: 3, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !3293, line: 612, column: 17)
!12478 = !DILocation(line: 613, column: 15, scope: !12477)
!12479 = !DILocation(line: 613, column: 29, scope: !12477)
!12480 = !DILocation(line: 614, column: 10, scope: !12477)
!12481 = !DILocation(line: 614, column: 3, scope: !12477)
!12482 = !DILocation(line: 627, column: 30, scope: !12416)
!12483 = !DILocation(line: 627, column: 40, scope: !12416)
!12484 = !DILocation(line: 627, column: 2, scope: !12416)
!12485 = !DILocation(line: 627, column: 14, scope: !12416)
!12486 = !DILocation(line: 627, column: 28, scope: !12416)
!12487 = !DILocation(line: 635, column: 2, scope: !12416)
!12488 = !DILocation(line: 635, column: 2, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12416, file: !3293, line: 635, column: 2)
!12490 = !DILocation(line: 637, column: 9, scope: !12416)
!12491 = !DILocation(line: 637, column: 2, scope: !12416)
!12492 = !DILocation(line: 638, column: 1, scope: !12416)
!12493 = distinct !DISubprogram(name: "z_waitq_init", scope: !12494, file: !12494, line: 47, type: !12495, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12494 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12495 = !DISubroutineType(types: !12496)
!12496 = !{null, !3328}
!12497 = !DILocalVariable(name: "w", arg: 1, scope: !12493, file: !12494, line: 47, type: !3328)
!12498 = !DILocation(line: 47, column: 44, scope: !12493)
!12499 = !DILocation(line: 49, column: 18, scope: !12493)
!12500 = !DILocation(line: 49, column: 21, scope: !12493)
!12501 = !DILocation(line: 49, column: 2, scope: !12493)
!12502 = !DILocation(line: 50, column: 1, scope: !12493)
!12503 = distinct !DISubprogram(name: "z_init_thread_base", scope: !3293, file: !3293, line: 791, type: !12504, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12504 = !DISubroutineType(types: !12505)
!12505 = !{null, !12506, !103, !173, !32}
!12506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 32)
!12507 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12503, file: !3293, line: 791, type: !12506)
!12508 = !DILocation(line: 791, column: 46, scope: !12503)
!12509 = !DILocalVariable(name: "priority", arg: 2, scope: !12503, file: !3293, line: 791, type: !103)
!12510 = !DILocation(line: 791, column: 63, scope: !12503)
!12511 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12503, file: !3293, line: 792, type: !173)
!12512 = !DILocation(line: 792, column: 19, scope: !12503)
!12513 = !DILocalVariable(name: "options", arg: 4, scope: !12503, file: !3293, line: 792, type: !32)
!12514 = !DILocation(line: 792, column: 47, scope: !12503)
!12515 = !DILocation(line: 795, column: 2, scope: !12503)
!12516 = !DILocation(line: 795, column: 15, scope: !12503)
!12517 = !DILocation(line: 795, column: 25, scope: !12503)
!12518 = !DILocation(line: 796, column: 39, scope: !12503)
!12519 = !DILocation(line: 796, column: 30, scope: !12503)
!12520 = !DILocation(line: 796, column: 2, scope: !12503)
!12521 = !DILocation(line: 796, column: 15, scope: !12503)
!12522 = !DILocation(line: 796, column: 28, scope: !12503)
!12523 = !DILocation(line: 797, column: 39, scope: !12503)
!12524 = !DILocation(line: 797, column: 30, scope: !12503)
!12525 = !DILocation(line: 797, column: 2, scope: !12503)
!12526 = !DILocation(line: 797, column: 15, scope: !12503)
!12527 = !DILocation(line: 797, column: 28, scope: !12503)
!12528 = !DILocation(line: 799, column: 22, scope: !12503)
!12529 = !DILocation(line: 799, column: 2, scope: !12503)
!12530 = !DILocation(line: 799, column: 15, scope: !12503)
!12531 = !DILocation(line: 799, column: 20, scope: !12503)
!12532 = !DILocation(line: 801, column: 2, scope: !12503)
!12533 = !DILocation(line: 801, column: 15, scope: !12503)
!12534 = !DILocation(line: 801, column: 28, scope: !12503)
!12535 = !DILocation(line: 814, column: 24, scope: !12503)
!12536 = !DILocation(line: 814, column: 2, scope: !12503)
!12537 = !DILocation(line: 815, column: 1, scope: !12503)
!12538 = distinct !DISubprogram(name: "setup_thread_stack", scope: !3293, file: !3293, line: 449, type: !12539, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!1836, !3297, !12419, !217}
!12541 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12538, file: !3293, line: 449, type: !3297)
!12542 = !DILocation(line: 449, column: 50, scope: !12538)
!12543 = !DILocalVariable(name: "stack", arg: 2, scope: !12538, file: !3293, line: 450, type: !12419)
!12544 = !DILocation(line: 450, column: 23, scope: !12538)
!12545 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12538, file: !3293, line: 450, type: !217)
!12546 = !DILocation(line: 450, column: 37, scope: !12538)
!12547 = !DILocalVariable(name: "stack_obj_size", scope: !12538, file: !3293, line: 452, type: !217)
!12548 = !DILocation(line: 452, column: 9, scope: !12538)
!12549 = !DILocalVariable(name: "stack_buf_size", scope: !12538, file: !3293, line: 452, type: !217)
!12550 = !DILocation(line: 452, column: 25, scope: !12538)
!12551 = !DILocalVariable(name: "stack_ptr", scope: !12538, file: !3293, line: 453, type: !1836)
!12552 = !DILocation(line: 453, column: 8, scope: !12538)
!12553 = !DILocalVariable(name: "stack_buf_start", scope: !12538, file: !3293, line: 453, type: !1836)
!12554 = !DILocation(line: 453, column: 20, scope: !12538)
!12555 = !DILocalVariable(name: "delta", scope: !12538, file: !3293, line: 454, type: !217)
!12556 = !DILocation(line: 454, column: 9, scope: !12538)
!12557 = !DILocation(line: 465, column: 20, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12538, file: !3293, line: 463, column: 2)
!12559 = !DILocation(line: 465, column: 18, scope: !12558)
!12560 = !DILocation(line: 466, column: 43, scope: !12558)
!12561 = !DILocation(line: 466, column: 21, scope: !12558)
!12562 = !DILocation(line: 466, column: 19, scope: !12558)
!12563 = !DILocation(line: 467, column: 20, scope: !12558)
!12564 = !DILocation(line: 467, column: 35, scope: !12558)
!12565 = !DILocation(line: 467, column: 18, scope: !12558)
!12566 = !DILocation(line: 473, column: 22, scope: !12538)
!12567 = !DILocation(line: 473, column: 14, scope: !12538)
!12568 = !DILocation(line: 473, column: 30, scope: !12538)
!12569 = !DILocation(line: 473, column: 28, scope: !12538)
!12570 = !DILocation(line: 473, column: 12, scope: !12538)
!12571 = !DILocation(line: 475, column: 2, scope: !12538)
!12572 = !DILocation(line: 475, column: 2, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !3293, line: 475, column: 2)
!12574 = distinct !DILexicalBlock(scope: !12575, file: !3293, line: 475, column: 2)
!12575 = distinct !DILexicalBlock(scope: !12538, file: !3293, line: 475, column: 2)
!12576 = !DILocation(line: 505, column: 10, scope: !12538)
!12577 = !DILocation(line: 505, column: 8, scope: !12538)
!12578 = !DILocation(line: 518, column: 15, scope: !12538)
!12579 = !DILocation(line: 518, column: 12, scope: !12538)
!12580 = !DILocation(line: 520, column: 9, scope: !12538)
!12581 = !DILocation(line: 520, column: 2, scope: !12538)
!12582 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !12583, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!1836, !12419}
!12585 = !DILocalVariable(name: "sym", arg: 1, scope: !12582, file: !234, line: 331, type: !12419)
!12586 = !DILocation(line: 331, column: 61, scope: !12582)
!12587 = !DILocation(line: 333, column: 17, scope: !12582)
!12588 = !DILocation(line: 333, column: 9, scope: !12582)
!12589 = !DILocation(line: 333, column: 21, scope: !12582)
!12590 = !DILocation(line: 333, column: 2, scope: !12582)
!12591 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12592, file: !12592, line: 40, type: !12593, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12592 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12593 = !DISubroutineType(types: !12594)
!12594 = !{null, !12506}
!12595 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12591, file: !12592, line: 40, type: !12506)
!12596 = !DILocation(line: 40, column: 63, scope: !12591)
!12597 = !DILocation(line: 42, column: 18, scope: !12591)
!12598 = !DILocation(line: 42, column: 31, scope: !12591)
!12599 = !DILocation(line: 42, column: 2, scope: !12591)
!12600 = !DILocation(line: 43, column: 1, scope: !12591)
!12601 = distinct !DISubprogram(name: "z_init_timeout", scope: !12592, file: !12592, line: 25, type: !3354, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12602 = !DILocalVariable(name: "to", arg: 1, scope: !12601, file: !12592, line: 25, type: !3356)
!12603 = !DILocation(line: 25, column: 52, scope: !12601)
!12604 = !DILocation(line: 27, column: 18, scope: !12601)
!12605 = !DILocation(line: 27, column: 22, scope: !12601)
!12606 = !DILocation(line: 27, column: 2, scope: !12601)
!12607 = !DILocation(line: 28, column: 1, scope: !12601)
!12608 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !12609, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{null, !3394}
!12611 = !DILocalVariable(name: "node", arg: 1, scope: !12608, file: !124, line: 211, type: !3394)
!12612 = !DILocation(line: 211, column: 48, scope: !12608)
!12613 = !DILocation(line: 213, column: 2, scope: !12608)
!12614 = !DILocation(line: 213, column: 8, scope: !12608)
!12615 = !DILocation(line: 213, column: 13, scope: !12608)
!12616 = !DILocation(line: 214, column: 2, scope: !12608)
!12617 = !DILocation(line: 214, column: 8, scope: !12608)
!12618 = !DILocation(line: 214, column: 13, scope: !12608)
!12619 = !DILocation(line: 215, column: 1, scope: !12608)
!12620 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !12621, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12621 = !DISubroutineType(types: !12622)
!12622 = !{null, !12623}
!12623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 32)
!12624 = !DILocalVariable(name: "list", arg: 1, scope: !12620, file: !124, line: 197, type: !12623)
!12625 = !DILocation(line: 197, column: 48, scope: !12620)
!12626 = !DILocation(line: 199, column: 30, scope: !12620)
!12627 = !DILocation(line: 199, column: 2, scope: !12620)
!12628 = !DILocation(line: 199, column: 8, scope: !12620)
!12629 = !DILocation(line: 199, column: 13, scope: !12620)
!12630 = !DILocation(line: 200, column: 30, scope: !12620)
!12631 = !DILocation(line: 200, column: 2, scope: !12620)
!12632 = !DILocation(line: 200, column: 8, scope: !12620)
!12633 = !DILocation(line: 200, column: 13, scope: !12620)
!12634 = !DILocation(line: 201, column: 1, scope: !12620)
!12635 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !3293, file: !3293, line: 641, type: !12636, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12636 = !DISubroutineType(types: !12637)
!12637 = !{!3296, !3297, !12419, !217, !240, !102, !102, !102, !103, !173, !12638}
!12638 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2816, line: 67, baseType: !12639)
!12639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2816, line: 65, size: 64, elements: !12640)
!12640 = !{!12641}
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12639, file: !2816, line: 66, baseType: !2815, size: 64)
!12642 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12635, file: !3293, line: 641, type: !3297)
!12643 = !DILocation(line: 641, column: 49, scope: !12635)
!12644 = !DILocalVariable(name: "stack", arg: 2, scope: !12635, file: !3293, line: 642, type: !12419)
!12645 = !DILocation(line: 642, column: 28, scope: !12635)
!12646 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12635, file: !3293, line: 643, type: !217)
!12647 = !DILocation(line: 643, column: 17, scope: !12635)
!12648 = !DILocalVariable(name: "entry", arg: 4, scope: !12635, file: !3293, line: 643, type: !240)
!12649 = !DILocation(line: 643, column: 46, scope: !12635)
!12650 = !DILocalVariable(name: "p1", arg: 5, scope: !12635, file: !3293, line: 644, type: !102)
!12651 = !DILocation(line: 644, column: 16, scope: !12635)
!12652 = !DILocalVariable(name: "p2", arg: 6, scope: !12635, file: !3293, line: 644, type: !102)
!12653 = !DILocation(line: 644, column: 26, scope: !12635)
!12654 = !DILocalVariable(name: "p3", arg: 7, scope: !12635, file: !3293, line: 644, type: !102)
!12655 = !DILocation(line: 644, column: 36, scope: !12635)
!12656 = !DILocalVariable(name: "prio", arg: 8, scope: !12635, file: !3293, line: 645, type: !103)
!12657 = !DILocation(line: 645, column: 14, scope: !12635)
!12658 = !DILocalVariable(name: "options", arg: 9, scope: !12635, file: !3293, line: 645, type: !173)
!12659 = !DILocation(line: 645, column: 29, scope: !12635)
!12660 = !DILocalVariable(name: "delay", arg: 10, scope: !12635, file: !3293, line: 645, type: !12638)
!12661 = !DILocation(line: 645, column: 50, scope: !12635)
!12662 = !DILocation(line: 649, column: 21, scope: !12635)
!12663 = !DILocation(line: 649, column: 33, scope: !12635)
!12664 = !DILocation(line: 649, column: 40, scope: !12635)
!12665 = !DILocation(line: 649, column: 52, scope: !12635)
!12666 = !DILocation(line: 649, column: 59, scope: !12635)
!12667 = !DILocation(line: 649, column: 63, scope: !12635)
!12668 = !DILocation(line: 649, column: 67, scope: !12635)
!12669 = !DILocation(line: 650, column: 6, scope: !12635)
!12670 = !DILocation(line: 650, column: 12, scope: !12635)
!12671 = !DILocation(line: 649, column: 2, scope: !12635)
!12672 = !DILocation(line: 652, column: 7, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12635, file: !3293, line: 652, column: 6)
!12674 = !DILocation(line: 652, column: 6, scope: !12635)
!12675 = !DILocation(line: 653, column: 23, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12673, file: !3293, line: 652, column: 39)
!12677 = !DILocation(line: 653, column: 3, scope: !12676)
!12678 = !DILocation(line: 654, column: 2, scope: !12676)
!12679 = !DILocation(line: 656, column: 9, scope: !12635)
!12680 = !DILocation(line: 656, column: 2, scope: !12635)
!12681 = distinct !DISubprogram(name: "schedule_new_thread", scope: !3293, file: !3293, line: 401, type: !12682, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12682 = !DISubroutineType(types: !12683)
!12683 = !{null, !3297, !12638}
!12684 = !DILocalVariable(name: "thread", arg: 1, scope: !12681, file: !3293, line: 401, type: !3297)
!12685 = !DILocation(line: 401, column: 50, scope: !12681)
!12686 = !DILocalVariable(name: "delay", arg: 2, scope: !12681, file: !3293, line: 401, type: !12638)
!12687 = !DILocation(line: 401, column: 70, scope: !12681)
!12688 = !DILocation(line: 404, column: 6, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12681, file: !3293, line: 404, column: 6)
!12690 = !DILocation(line: 404, column: 6, scope: !12681)
!12691 = !DILocation(line: 405, column: 18, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12689, file: !3293, line: 404, column: 38)
!12693 = !DILocation(line: 405, column: 3, scope: !12692)
!12694 = !DILocation(line: 406, column: 2, scope: !12692)
!12695 = !DILocation(line: 407, column: 24, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12689, file: !3293, line: 406, column: 9)
!12697 = !DILocation(line: 407, column: 3, scope: !12696)
!12698 = !DILocation(line: 413, column: 1, scope: !12681)
!12699 = distinct !DISubprogram(name: "k_thread_start", scope: !4142, file: !4142, line: 205, type: !12700, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12700 = !DISubroutineType(types: !12701)
!12701 = !{null, !3296}
!12702 = !DILocalVariable(name: "thread", arg: 1, scope: !12699, file: !4142, line: 205, type: !3296)
!12703 = !DILocation(line: 205, column: 43, scope: !12699)
!12704 = !DILocation(line: 214, column: 2, scope: !12699)
!12705 = !DILocation(line: 214, column: 2, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12699, file: !4142, line: 214, column: 2)
!12707 = !{i64 2149685395}
!12708 = !DILocation(line: 215, column: 24, scope: !12699)
!12709 = !DILocation(line: 215, column: 2, scope: !12699)
!12710 = !DILocation(line: 216, column: 1, scope: !12699)
!12711 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12592, file: !12592, line: 47, type: !12682, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12712 = !DILocalVariable(name: "thread", arg: 1, scope: !12711, file: !12592, line: 47, type: !3297)
!12713 = !DILocation(line: 47, column: 58, scope: !12711)
!12714 = !DILocalVariable(name: "ticks", arg: 2, scope: !12711, file: !12592, line: 47, type: !12638)
!12715 = !DILocation(line: 47, column: 78, scope: !12711)
!12716 = !DILocation(line: 49, column: 17, scope: !12711)
!12717 = !DILocation(line: 49, column: 25, scope: !12711)
!12718 = !DILocation(line: 49, column: 30, scope: !12711)
!12719 = !DILocation(line: 49, column: 2, scope: !12711)
!12720 = !DILocation(line: 50, column: 1, scope: !12711)
!12721 = distinct !DISubprogram(name: "z_init_static_threads", scope: !3293, file: !3293, line: 748, type: !253, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12722 = !DILocalVariable(name: "thread_data", scope: !12723, file: !3293, line: 750, type: !12724)
!12723 = distinct !DILexicalBlock(scope: !12721, file: !3293, line: 750, column: 2)
!12724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12725, size: 32)
!12725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !12726)
!12726 = !{!12727, !12728, !12729, !12730, !12731, !12732, !12733, !12734, !12735, !12736, !12737, !12738}
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12725, file: !109, line: 621, baseType: !3297, size: 32)
!12728 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12725, file: !109, line: 622, baseType: !12419, size: 32, offset: 32)
!12729 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12725, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12725, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12725, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12725, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12725, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12725, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!12735 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12725, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12725, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12725, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12725, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!12739 = !DILocation(line: 750, column: 2, scope: !12723)
!12740 = !DILocation(line: 750, column: 2, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !3293, line: 750, column: 2)
!12742 = distinct !DILexicalBlock(scope: !12723, file: !3293, line: 750, column: 2)
!12743 = !DILocation(line: 750, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12741, file: !3293, line: 750, column: 2)
!12745 = !DILocation(line: 752, column: 4, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12742, file: !3293, line: 750, column: 38)
!12747 = !DILocation(line: 752, column: 17, scope: !12746)
!12748 = !DILocation(line: 753, column: 4, scope: !12746)
!12749 = !DILocation(line: 753, column: 17, scope: !12746)
!12750 = !DILocation(line: 754, column: 4, scope: !12746)
!12751 = !DILocation(line: 754, column: 17, scope: !12746)
!12752 = !DILocation(line: 755, column: 4, scope: !12746)
!12753 = !DILocation(line: 755, column: 17, scope: !12746)
!12754 = !DILocation(line: 756, column: 4, scope: !12746)
!12755 = !DILocation(line: 756, column: 17, scope: !12746)
!12756 = !DILocation(line: 757, column: 4, scope: !12746)
!12757 = !DILocation(line: 757, column: 17, scope: !12746)
!12758 = !DILocation(line: 758, column: 4, scope: !12746)
!12759 = !DILocation(line: 758, column: 17, scope: !12746)
!12760 = !DILocation(line: 759, column: 4, scope: !12746)
!12761 = !DILocation(line: 759, column: 17, scope: !12746)
!12762 = !DILocation(line: 760, column: 4, scope: !12746)
!12763 = !DILocation(line: 760, column: 17, scope: !12746)
!12764 = !DILocation(line: 761, column: 4, scope: !12746)
!12765 = !DILocation(line: 761, column: 17, scope: !12746)
!12766 = !DILocation(line: 751, column: 3, scope: !12746)
!12767 = !DILocation(line: 763, column: 41, scope: !12746)
!12768 = !DILocation(line: 763, column: 3, scope: !12746)
!12769 = !DILocation(line: 763, column: 16, scope: !12746)
!12770 = !DILocation(line: 763, column: 29, scope: !12746)
!12771 = !DILocation(line: 763, column: 39, scope: !12746)
!12772 = !DILocation(line: 764, column: 2, scope: !12746)
!12773 = !DILocation(line: 750, column: 2, scope: !12742)
!12774 = distinct !{!12774, !12739, !12775}
!12775 = !DILocation(line: 764, column: 2, scope: !12723)
!12776 = !DILocation(line: 780, column: 2, scope: !12721)
!12777 = !DILocalVariable(name: "thread_data", scope: !12778, file: !3293, line: 781, type: !12724)
!12778 = distinct !DILexicalBlock(scope: !12721, file: !3293, line: 781, column: 2)
!12779 = !DILocation(line: 781, column: 2, scope: !12778)
!12780 = !DILocation(line: 781, column: 2, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !3293, line: 781, column: 2)
!12782 = distinct !DILexicalBlock(scope: !12778, file: !3293, line: 781, column: 2)
!12783 = !DILocation(line: 781, column: 2, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12781, file: !3293, line: 781, column: 2)
!12785 = !DILocation(line: 782, column: 7, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !3293, line: 782, column: 7)
!12787 = distinct !DILexicalBlock(scope: !12782, file: !3293, line: 781, column: 38)
!12788 = !DILocation(line: 782, column: 20, scope: !12786)
!12789 = !DILocation(line: 782, column: 31, scope: !12786)
!12790 = !DILocation(line: 782, column: 7, scope: !12787)
!12791 = !DILocation(line: 783, column: 24, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12786, file: !3293, line: 782, column: 51)
!12793 = !DILocation(line: 783, column: 37, scope: !12792)
!12794 = !DILocation(line: 784, column: 10, scope: !12792)
!12795 = !DILocation(line: 783, column: 4, scope: !12792)
!12796 = !DILocation(line: 785, column: 3, scope: !12792)
!12797 = !DILocation(line: 786, column: 2, scope: !12787)
!12798 = !DILocation(line: 781, column: 2, scope: !12782)
!12799 = distinct !{!12799, !12779, !12800}
!12800 = !DILocation(line: 786, column: 2, scope: !12778)
!12801 = !DILocation(line: 787, column: 2, scope: !12721)
!12802 = !DILocation(line: 788, column: 1, scope: !12721)
!12803 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !10787, file: !10787, line: 403, type: !12804, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!2246, !2246}
!12806 = !DILocalVariable(name: "t", arg: 1, scope: !12803, file: !10787, line: 403, type: !2246)
!12807 = !DILocation(line: 403, column: 69, scope: !12803)
!12808 = !DILocation(line: 406, column: 17, scope: !12803)
!12809 = !DILocalVariable(name: "t", arg: 1, scope: !12810, file: !10787, line: 102, type: !2246)
!12810 = distinct !DISubprogram(name: "z_tmcvt", scope: !10787, file: !10787, line: 102, type: !12811, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{!2246, !2246, !173, !173, !1035, !1035, !1035, !1035}
!12813 = !DILocation(line: 102, column: 63, scope: !12810, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 406, column: 9, scope: !12803)
!12815 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12810, file: !10787, line: 102, type: !173)
!12816 = !DILocation(line: 102, column: 75, scope: !12810, inlinedAt: !12814)
!12817 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12810, file: !10787, line: 103, type: !173)
!12818 = !DILocation(line: 103, column: 18, scope: !12810, inlinedAt: !12814)
!12819 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12810, file: !10787, line: 103, type: !1035)
!12820 = !DILocation(line: 103, column: 30, scope: !12810, inlinedAt: !12814)
!12821 = !DILocalVariable(name: "result32", arg: 5, scope: !12810, file: !10787, line: 104, type: !1035)
!12822 = !DILocation(line: 104, column: 14, scope: !12810, inlinedAt: !12814)
!12823 = !DILocalVariable(name: "round_up", arg: 6, scope: !12810, file: !10787, line: 104, type: !1035)
!12824 = !DILocation(line: 104, column: 29, scope: !12810, inlinedAt: !12814)
!12825 = !DILocalVariable(name: "round_off", arg: 7, scope: !12810, file: !10787, line: 105, type: !1035)
!12826 = !DILocation(line: 105, column: 14, scope: !12810, inlinedAt: !12814)
!12827 = !DILocalVariable(name: "mul_ratio", scope: !12810, file: !10787, line: 107, type: !1035)
!12828 = !DILocation(line: 107, column: 7, scope: !12810, inlinedAt: !12814)
!12829 = !DILocation(line: 107, column: 19, scope: !12810, inlinedAt: !12814)
!12830 = !DILocation(line: 107, column: 28, scope: !12810, inlinedAt: !12814)
!12831 = !DILocation(line: 108, column: 4, scope: !12810, inlinedAt: !12814)
!12832 = !DILocation(line: 108, column: 12, scope: !12810, inlinedAt: !12814)
!12833 = !DILocation(line: 108, column: 10, scope: !12810, inlinedAt: !12814)
!12834 = !DILocation(line: 108, column: 21, scope: !12810, inlinedAt: !12814)
!12835 = !DILocation(line: 108, column: 26, scope: !12810, inlinedAt: !12814)
!12836 = !DILocation(line: 108, column: 34, scope: !12810, inlinedAt: !12814)
!12837 = !DILocation(line: 108, column: 32, scope: !12810, inlinedAt: !12814)
!12838 = !DILocation(line: 108, column: 43, scope: !12810, inlinedAt: !12814)
!12839 = !DILocation(line: 0, scope: !12810, inlinedAt: !12814)
!12840 = !DILocalVariable(name: "div_ratio", scope: !12810, file: !10787, line: 109, type: !1035)
!12841 = !DILocation(line: 109, column: 7, scope: !12810, inlinedAt: !12814)
!12842 = !DILocation(line: 109, column: 19, scope: !12810, inlinedAt: !12814)
!12843 = !DILocation(line: 109, column: 28, scope: !12810, inlinedAt: !12814)
!12844 = !DILocation(line: 110, column: 4, scope: !12810, inlinedAt: !12814)
!12845 = !DILocation(line: 110, column: 14, scope: !12810, inlinedAt: !12814)
!12846 = !DILocation(line: 110, column: 12, scope: !12810, inlinedAt: !12814)
!12847 = !DILocation(line: 110, column: 21, scope: !12810, inlinedAt: !12814)
!12848 = !DILocation(line: 110, column: 26, scope: !12810, inlinedAt: !12814)
!12849 = !DILocation(line: 110, column: 36, scope: !12810, inlinedAt: !12814)
!12850 = !DILocation(line: 110, column: 34, scope: !12810, inlinedAt: !12814)
!12851 = !DILocation(line: 110, column: 43, scope: !12810, inlinedAt: !12814)
!12852 = !DILocation(line: 112, column: 6, scope: !12853, inlinedAt: !12814)
!12853 = distinct !DILexicalBlock(scope: !12810, file: !10787, line: 112, column: 6)
!12854 = !DILocation(line: 112, column: 17, scope: !12853, inlinedAt: !12814)
!12855 = !DILocation(line: 112, column: 14, scope: !12853, inlinedAt: !12814)
!12856 = !DILocation(line: 112, column: 6, scope: !12810, inlinedAt: !12814)
!12857 = !DILocation(line: 113, column: 10, scope: !12858, inlinedAt: !12814)
!12858 = distinct !DILexicalBlock(scope: !12853, file: !10787, line: 112, column: 24)
!12859 = !DILocation(line: 113, column: 32, scope: !12858, inlinedAt: !12814)
!12860 = !DILocation(line: 113, column: 22, scope: !12858, inlinedAt: !12814)
!12861 = !DILocation(line: 113, column: 21, scope: !12858, inlinedAt: !12814)
!12862 = !DILocation(line: 113, column: 37, scope: !12858, inlinedAt: !12814)
!12863 = !DILocation(line: 113, column: 3, scope: !12858, inlinedAt: !12814)
!12864 = !DILocalVariable(name: "off", scope: !12810, file: !10787, line: 116, type: !2246)
!12865 = !DILocation(line: 116, column: 11, scope: !12810, inlinedAt: !12814)
!12866 = !DILocation(line: 118, column: 7, scope: !12867, inlinedAt: !12814)
!12867 = distinct !DILexicalBlock(scope: !12810, file: !10787, line: 118, column: 6)
!12868 = !DILocation(line: 118, column: 6, scope: !12810, inlinedAt: !12814)
!12869 = !DILocalVariable(name: "rdivisor", scope: !12870, file: !10787, line: 119, type: !173)
!12870 = distinct !DILexicalBlock(scope: !12867, file: !10787, line: 118, column: 18)
!12871 = !DILocation(line: 119, column: 12, scope: !12870, inlinedAt: !12814)
!12872 = !DILocation(line: 119, column: 23, scope: !12870, inlinedAt: !12814)
!12873 = !DILocation(line: 119, column: 36, scope: !12870, inlinedAt: !12814)
!12874 = !DILocation(line: 119, column: 46, scope: !12870, inlinedAt: !12814)
!12875 = !DILocation(line: 119, column: 44, scope: !12870, inlinedAt: !12814)
!12876 = !DILocation(line: 119, column: 55, scope: !12870, inlinedAt: !12814)
!12877 = !DILocation(line: 121, column: 7, scope: !12878, inlinedAt: !12814)
!12878 = distinct !DILexicalBlock(scope: !12870, file: !10787, line: 121, column: 7)
!12879 = !DILocation(line: 121, column: 7, scope: !12870, inlinedAt: !12814)
!12880 = !DILocation(line: 122, column: 10, scope: !12881, inlinedAt: !12814)
!12881 = distinct !DILexicalBlock(scope: !12878, file: !10787, line: 121, column: 17)
!12882 = !DILocation(line: 122, column: 19, scope: !12881, inlinedAt: !12814)
!12883 = !DILocation(line: 122, column: 8, scope: !12881, inlinedAt: !12814)
!12884 = !DILocation(line: 123, column: 3, scope: !12881, inlinedAt: !12814)
!12885 = !DILocation(line: 124, column: 7, scope: !12886, inlinedAt: !12814)
!12886 = distinct !DILexicalBlock(scope: !12870, file: !10787, line: 124, column: 7)
!12887 = !DILocation(line: 124, column: 7, scope: !12870, inlinedAt: !12814)
!12888 = !DILocation(line: 125, column: 10, scope: !12889, inlinedAt: !12814)
!12889 = distinct !DILexicalBlock(scope: !12886, file: !10787, line: 124, column: 18)
!12890 = !DILocation(line: 125, column: 19, scope: !12889, inlinedAt: !12814)
!12891 = !DILocation(line: 125, column: 8, scope: !12889, inlinedAt: !12814)
!12892 = !DILocation(line: 126, column: 3, scope: !12889, inlinedAt: !12814)
!12893 = !DILocation(line: 127, column: 2, scope: !12870, inlinedAt: !12814)
!12894 = !DILocation(line: 134, column: 6, scope: !12895, inlinedAt: !12814)
!12895 = distinct !DILexicalBlock(scope: !12810, file: !10787, line: 134, column: 6)
!12896 = !DILocation(line: 134, column: 6, scope: !12810, inlinedAt: !12814)
!12897 = !DILocation(line: 135, column: 8, scope: !12898, inlinedAt: !12814)
!12898 = distinct !DILexicalBlock(scope: !12895, file: !10787, line: 134, column: 17)
!12899 = !DILocation(line: 135, column: 5, scope: !12898, inlinedAt: !12814)
!12900 = !DILocation(line: 136, column: 7, scope: !12901, inlinedAt: !12814)
!12901 = distinct !DILexicalBlock(scope: !12898, file: !10787, line: 136, column: 7)
!12902 = !DILocation(line: 136, column: 16, scope: !12901, inlinedAt: !12814)
!12903 = !DILocation(line: 136, column: 20, scope: !12901, inlinedAt: !12814)
!12904 = !DILocation(line: 136, column: 22, scope: !12901, inlinedAt: !12814)
!12905 = !DILocation(line: 136, column: 7, scope: !12898, inlinedAt: !12814)
!12906 = !DILocation(line: 137, column: 22, scope: !12907, inlinedAt: !12814)
!12907 = distinct !DILexicalBlock(scope: !12901, file: !10787, line: 136, column: 36)
!12908 = !DILocation(line: 137, column: 12, scope: !12907, inlinedAt: !12814)
!12909 = !DILocation(line: 137, column: 28, scope: !12907, inlinedAt: !12814)
!12910 = !DILocation(line: 137, column: 38, scope: !12907, inlinedAt: !12814)
!12911 = !DILocation(line: 137, column: 36, scope: !12907, inlinedAt: !12814)
!12912 = !DILocation(line: 137, column: 25, scope: !12907, inlinedAt: !12814)
!12913 = !DILocation(line: 137, column: 11, scope: !12907, inlinedAt: !12814)
!12914 = !DILocation(line: 137, column: 4, scope: !12907, inlinedAt: !12814)
!12915 = !DILocation(line: 139, column: 11, scope: !12916, inlinedAt: !12814)
!12916 = distinct !DILexicalBlock(scope: !12901, file: !10787, line: 138, column: 10)
!12917 = !DILocation(line: 139, column: 26, scope: !12916, inlinedAt: !12814)
!12918 = !DILocation(line: 139, column: 16, scope: !12916, inlinedAt: !12814)
!12919 = !DILocation(line: 139, column: 36, scope: !12916, inlinedAt: !12814)
!12920 = !DILocation(line: 139, column: 34, scope: !12916, inlinedAt: !12814)
!12921 = !DILocation(line: 139, column: 13, scope: !12916, inlinedAt: !12814)
!12922 = !DILocation(line: 139, column: 4, scope: !12916, inlinedAt: !12814)
!12923 = !DILocation(line: 141, column: 13, scope: !12924, inlinedAt: !12814)
!12924 = distinct !DILexicalBlock(scope: !12895, file: !10787, line: 141, column: 13)
!12925 = !DILocation(line: 141, column: 13, scope: !12895, inlinedAt: !12814)
!12926 = !DILocation(line: 142, column: 7, scope: !12927, inlinedAt: !12814)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !10787, line: 142, column: 7)
!12928 = distinct !DILexicalBlock(scope: !12924, file: !10787, line: 141, column: 24)
!12929 = !DILocation(line: 142, column: 7, scope: !12928, inlinedAt: !12814)
!12930 = !DILocation(line: 143, column: 22, scope: !12931, inlinedAt: !12814)
!12931 = distinct !DILexicalBlock(scope: !12927, file: !10787, line: 142, column: 17)
!12932 = !DILocation(line: 143, column: 12, scope: !12931, inlinedAt: !12814)
!12933 = !DILocation(line: 143, column: 28, scope: !12931, inlinedAt: !12814)
!12934 = !DILocation(line: 143, column: 36, scope: !12931, inlinedAt: !12814)
!12935 = !DILocation(line: 143, column: 34, scope: !12931, inlinedAt: !12814)
!12936 = !DILocation(line: 143, column: 25, scope: !12931, inlinedAt: !12814)
!12937 = !DILocation(line: 143, column: 11, scope: !12931, inlinedAt: !12814)
!12938 = !DILocation(line: 143, column: 4, scope: !12931, inlinedAt: !12814)
!12939 = !DILocation(line: 145, column: 11, scope: !12940, inlinedAt: !12814)
!12940 = distinct !DILexicalBlock(scope: !12927, file: !10787, line: 144, column: 10)
!12941 = !DILocation(line: 145, column: 26, scope: !12940, inlinedAt: !12814)
!12942 = !DILocation(line: 145, column: 16, scope: !12940, inlinedAt: !12814)
!12943 = !DILocation(line: 145, column: 34, scope: !12940, inlinedAt: !12814)
!12944 = !DILocation(line: 145, column: 32, scope: !12940, inlinedAt: !12814)
!12945 = !DILocation(line: 145, column: 13, scope: !12940, inlinedAt: !12814)
!12946 = !DILocation(line: 145, column: 4, scope: !12940, inlinedAt: !12814)
!12947 = !DILocation(line: 148, column: 7, scope: !12948, inlinedAt: !12814)
!12948 = distinct !DILexicalBlock(scope: !12949, file: !10787, line: 148, column: 7)
!12949 = distinct !DILexicalBlock(scope: !12924, file: !10787, line: 147, column: 9)
!12950 = !DILocation(line: 148, column: 7, scope: !12949, inlinedAt: !12814)
!12951 = !DILocation(line: 149, column: 23, scope: !12952, inlinedAt: !12814)
!12952 = distinct !DILexicalBlock(scope: !12948, file: !10787, line: 148, column: 17)
!12953 = !DILocation(line: 149, column: 27, scope: !12952, inlinedAt: !12814)
!12954 = !DILocation(line: 149, column: 25, scope: !12952, inlinedAt: !12814)
!12955 = !DILocation(line: 149, column: 35, scope: !12952, inlinedAt: !12814)
!12956 = !DILocation(line: 149, column: 33, scope: !12952, inlinedAt: !12814)
!12957 = !DILocation(line: 149, column: 42, scope: !12952, inlinedAt: !12814)
!12958 = !DILocation(line: 149, column: 40, scope: !12952, inlinedAt: !12814)
!12959 = !DILocation(line: 149, column: 11, scope: !12952, inlinedAt: !12814)
!12960 = !DILocation(line: 149, column: 4, scope: !12952, inlinedAt: !12814)
!12961 = !DILocation(line: 150, column: 14, scope: !12962, inlinedAt: !12814)
!12962 = distinct !DILexicalBlock(scope: !12948, file: !10787, line: 150, column: 14)
!12963 = !DILocation(line: 150, column: 23, scope: !12962, inlinedAt: !12814)
!12964 = !DILocation(line: 150, column: 26, scope: !12962, inlinedAt: !12814)
!12965 = !DILocation(line: 150, column: 14, scope: !12948, inlinedAt: !12814)
!12966 = !DILocation(line: 156, column: 13, scope: !12967, inlinedAt: !12814)
!12967 = distinct !DILexicalBlock(scope: !12962, file: !10787, line: 150, column: 65)
!12968 = !DILocation(line: 156, column: 17, scope: !12967, inlinedAt: !12814)
!12969 = !DILocation(line: 156, column: 15, scope: !12967, inlinedAt: !12814)
!12970 = !DILocation(line: 156, column: 25, scope: !12967, inlinedAt: !12814)
!12971 = !DILocation(line: 156, column: 23, scope: !12967, inlinedAt: !12814)
!12972 = !DILocation(line: 156, column: 32, scope: !12967, inlinedAt: !12814)
!12973 = !DILocation(line: 156, column: 30, scope: !12967, inlinedAt: !12814)
!12974 = !DILocation(line: 156, column: 4, scope: !12967, inlinedAt: !12814)
!12975 = !DILocation(line: 161, column: 12, scope: !12976, inlinedAt: !12814)
!12976 = distinct !DILexicalBlock(scope: !12962, file: !10787, line: 157, column: 10)
!12977 = !DILocation(line: 161, column: 16, scope: !12976, inlinedAt: !12814)
!12978 = !DILocation(line: 161, column: 14, scope: !12976, inlinedAt: !12814)
!12979 = !DILocation(line: 161, column: 27, scope: !12976, inlinedAt: !12814)
!12980 = !DILocation(line: 161, column: 25, scope: !12976, inlinedAt: !12814)
!12981 = !DILocation(line: 161, column: 37, scope: !12976, inlinedAt: !12814)
!12982 = !DILocation(line: 161, column: 41, scope: !12976, inlinedAt: !12814)
!12983 = !DILocation(line: 161, column: 39, scope: !12976, inlinedAt: !12814)
!12984 = !DILocation(line: 161, column: 52, scope: !12976, inlinedAt: !12814)
!12985 = !DILocation(line: 161, column: 50, scope: !12976, inlinedAt: !12814)
!12986 = !DILocation(line: 161, column: 60, scope: !12976, inlinedAt: !12814)
!12987 = !DILocation(line: 161, column: 58, scope: !12976, inlinedAt: !12814)
!12988 = !DILocation(line: 161, column: 67, scope: !12976, inlinedAt: !12814)
!12989 = !DILocation(line: 161, column: 65, scope: !12976, inlinedAt: !12814)
!12990 = !DILocation(line: 161, column: 33, scope: !12976, inlinedAt: !12814)
!12991 = !DILocation(line: 161, column: 4, scope: !12976, inlinedAt: !12814)
!12992 = !DILocation(line: 164, column: 1, scope: !12810, inlinedAt: !12814)
!12993 = !DILocation(line: 406, column: 2, scope: !12803)
!12994 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !3293, file: !3293, line: 817, type: !4306, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!12995 = !DILocalVariable(name: "entry", arg: 1, scope: !12994, file: !3293, line: 817, type: !240)
!12996 = !DILocation(line: 817, column: 62, scope: !12994)
!12997 = !DILocalVariable(name: "p1", arg: 2, scope: !12994, file: !3293, line: 818, type: !102)
!12998 = !DILocation(line: 818, column: 16, scope: !12994)
!12999 = !DILocalVariable(name: "p2", arg: 3, scope: !12994, file: !3293, line: 818, type: !102)
!13000 = !DILocation(line: 818, column: 26, scope: !12994)
!13001 = !DILocalVariable(name: "p3", arg: 4, scope: !12994, file: !3293, line: 818, type: !102)
!13002 = !DILocation(line: 818, column: 36, scope: !12994)
!13003 = !DILocation(line: 820, column: 2, scope: !12994)
!13004 = !DILocation(line: 820, column: 2, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12994, file: !3293, line: 820, column: 2)
!13006 = !DILocation(line: 822, column: 2, scope: !12994)
!13007 = !DILocation(line: 822, column: 12, scope: !12994)
!13008 = !DILocation(line: 822, column: 17, scope: !12994)
!13009 = !DILocation(line: 822, column: 30, scope: !12994)
!13010 = !DILocation(line: 823, column: 2, scope: !12994)
!13011 = !DILocation(line: 845, column: 17, scope: !12994)
!13012 = !DILocation(line: 845, column: 24, scope: !12994)
!13013 = !DILocation(line: 845, column: 28, scope: !12994)
!13014 = !DILocation(line: 845, column: 32, scope: !12994)
!13015 = !DILocation(line: 845, column: 2, scope: !12994)
!13016 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !3293, file: !3293, line: 888, type: !13017, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{!103, !3297}
!13019 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !3293, line: 888, type: !3297)
!13020 = !DILocation(line: 888, column: 45, scope: !13016)
!13021 = !DILocation(line: 893, column: 2, scope: !13016)
!13022 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !3293, file: !3293, line: 897, type: !13023, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{!103, !3297, !32}
!13025 = !DILocalVariable(name: "thread", arg: 1, scope: !13022, file: !3293, line: 897, type: !3297)
!13026 = !DILocation(line: 897, column: 44, scope: !13022)
!13027 = !DILocalVariable(name: "options", arg: 2, scope: !13022, file: !3293, line: 897, type: !32)
!13028 = !DILocation(line: 897, column: 65, scope: !13022)
!13029 = !DILocation(line: 902, column: 2, scope: !13022)
!13030 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !3293, file: !3293, line: 1072, type: !13031, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!13031 = !DISubroutineType(types: !13032)
!13032 = !{!103, !3296, !13033}
!13033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13034, size: 32)
!13034 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !114, line: 234, baseType: !13035)
!13035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !114, line: 192, elements: !223)
!13036 = !DILocalVariable(name: "thread", arg: 1, scope: !13030, file: !3293, line: 1072, type: !3296)
!13037 = !DILocation(line: 1072, column: 40, scope: !13030)
!13038 = !DILocalVariable(name: "stats", arg: 2, scope: !13030, file: !3293, line: 1073, type: !13033)
!13039 = !DILocation(line: 1073, column: 37, scope: !13030)
!13040 = !DILocation(line: 1075, column: 7, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13030, file: !3293, line: 1075, column: 6)
!13042 = !DILocation(line: 1075, column: 14, scope: !13041)
!13043 = !DILocation(line: 1075, column: 23, scope: !13041)
!13044 = !DILocation(line: 1075, column: 27, scope: !13041)
!13045 = !DILocation(line: 1075, column: 33, scope: !13041)
!13046 = !DILocation(line: 1075, column: 6, scope: !13030)
!13047 = !DILocation(line: 1076, column: 3, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13041, file: !3293, line: 1075, column: 43)
!13049 = !DILocation(line: 1082, column: 3, scope: !13030)
!13050 = !DILocation(line: 1082, column: 11, scope: !13030)
!13051 = !DILocation(line: 1085, column: 2, scope: !13030)
!13052 = !DILocation(line: 1086, column: 1, scope: !13030)
!13053 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !3293, file: !3293, line: 1088, type: !13054, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3391, retainedNodes: !223)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{!103, !13033}
!13056 = !DILocalVariable(name: "stats", arg: 1, scope: !13053, file: !3293, line: 1088, type: !13033)
!13057 = !DILocation(line: 1088, column: 62, scope: !13053)
!13058 = !DILocation(line: 1094, column: 6, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13053, file: !3293, line: 1094, column: 6)
!13060 = !DILocation(line: 1094, column: 12, scope: !13059)
!13061 = !DILocation(line: 1094, column: 6, scope: !13053)
!13062 = !DILocation(line: 1095, column: 3, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13059, file: !3293, line: 1094, column: 21)
!13064 = !DILocation(line: 1098, column: 3, scope: !13053)
!13065 = !DILocation(line: 1098, column: 11, scope: !13053)
!13066 = !DILocation(line: 1119, column: 2, scope: !13053)
!13067 = !DILocation(line: 1120, column: 1, scope: !13053)
!13068 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13069, file: !13069, line: 20, type: !253, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3853, retainedNodes: !223)
!13069 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13070 = !DILocation(line: 30, column: 2, scope: !13068)
!13071 = !DILocation(line: 31, column: 1, scope: !13068)
!13072 = distinct !DISubprogram(name: "idle", scope: !13069, file: !13069, line: 33, type: !242, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3853, retainedNodes: !223)
!13073 = !DILocalVariable(name: "unused1", arg: 1, scope: !13072, file: !13069, line: 33, type: !102)
!13074 = !DILocation(line: 33, column: 17, scope: !13072)
!13075 = !DILocalVariable(name: "unused2", arg: 2, scope: !13072, file: !13069, line: 33, type: !102)
!13076 = !DILocation(line: 33, column: 32, scope: !13072)
!13077 = !DILocalVariable(name: "unused3", arg: 3, scope: !13072, file: !13069, line: 33, type: !102)
!13078 = !DILocation(line: 33, column: 47, scope: !13072)
!13079 = !DILocation(line: 35, column: 2, scope: !13072)
!13080 = !DILocation(line: 36, column: 2, scope: !13072)
!13081 = !DILocation(line: 37, column: 2, scope: !13072)
!13082 = !DILocation(line: 41, column: 2, scope: !13072)
!13083 = !DILocalVariable(name: "key", scope: !13084, file: !6626, line: 44, type: !32)
!13084 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3853, retainedNodes: !223)
!13085 = !DILocation(line: 44, column: 15, scope: !13084, inlinedAt: !13086)
!13086 = distinct !DILocation(line: 62, column: 10, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13072, file: !13069, line: 41, column: 15)
!13088 = !DILocation(line: 47, column: 2, scope: !13084, inlinedAt: !13086)
!13089 = !{i64 1471350}
!13090 = !DILocation(line: 76, column: 9, scope: !13084, inlinedAt: !13086)
!13091 = !DILocation(line: 86, column: 3, scope: !13087)
!13092 = distinct !{!13092, !13082, !13093}
!13093 = !DILocation(line: 105, column: 2, scope: !13072)
!13094 = distinct !DISubprogram(name: "k_cpu_idle", scope: !109, file: !109, line: 5627, type: !253, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3853, retainedNodes: !223)
!13095 = !DILocation(line: 5629, column: 2, scope: !13094)
!13096 = !DILocation(line: 5630, column: 1, scope: !13094)
!13097 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3514, file: !3514, line: 93, type: !13098, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13098 = !DISubroutineType(types: !13099)
!13099 = !{!250, !3415, !3415}
!13100 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13097, file: !3514, line: 93, type: !3415)
!13101 = !DILocation(line: 93, column: 43, scope: !13097)
!13102 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13097, file: !3514, line: 94, type: !3415)
!13103 = !DILocation(line: 94, column: 19, scope: !13097)
!13104 = !DILocalVariable(name: "b1", scope: !13097, file: !3514, line: 97, type: !250)
!13105 = !DILocation(line: 97, column: 10, scope: !13097)
!13106 = !DILocation(line: 97, column: 15, scope: !13097)
!13107 = !DILocation(line: 97, column: 25, scope: !13097)
!13108 = !DILocation(line: 97, column: 30, scope: !13097)
!13109 = !DILocalVariable(name: "b2", scope: !13097, file: !3514, line: 98, type: !250)
!13110 = !DILocation(line: 98, column: 10, scope: !13097)
!13111 = !DILocation(line: 98, column: 15, scope: !13097)
!13112 = !DILocation(line: 98, column: 25, scope: !13097)
!13113 = !DILocation(line: 98, column: 30, scope: !13097)
!13114 = !DILocation(line: 100, column: 6, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13097, file: !3514, line: 100, column: 6)
!13116 = !DILocation(line: 100, column: 12, scope: !13115)
!13117 = !DILocation(line: 100, column: 9, scope: !13115)
!13118 = !DILocation(line: 100, column: 6, scope: !13097)
!13119 = !DILocation(line: 101, column: 10, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13115, file: !3514, line: 100, column: 16)
!13121 = !DILocation(line: 101, column: 15, scope: !13120)
!13122 = !DILocation(line: 101, column: 13, scope: !13120)
!13123 = !DILocation(line: 101, column: 3, scope: !13120)
!13124 = !DILocation(line: 124, column: 2, scope: !13097)
!13125 = !DILocation(line: 125, column: 1, scope: !13097)
!13126 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3514, file: !3514, line: 428, type: !13127, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13127 = !DISubroutineType(types: !13128)
!13128 = !{null, !3415}
!13129 = !DILocalVariable(name: "curr", arg: 1, scope: !13126, file: !3514, line: 428, type: !3415)
!13130 = !DILocation(line: 428, column: 42, scope: !13126)
!13131 = !DILocation(line: 434, column: 17, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13126, file: !3514, line: 434, column: 6)
!13133 = !DILocation(line: 434, column: 6, scope: !13132)
!13134 = !DILocation(line: 434, column: 23, scope: !13132)
!13135 = !DILocation(line: 434, column: 6, scope: !13126)
!13136 = !DILocation(line: 435, column: 42, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13132, file: !3514, line: 434, column: 29)
!13138 = !DILocation(line: 435, column: 31, scope: !13137)
!13139 = !DILocation(line: 435, column: 50, scope: !13137)
!13140 = !DILocation(line: 435, column: 48, scope: !13137)
!13141 = !DILocation(line: 435, column: 29, scope: !13137)
!13142 = !DILocation(line: 436, column: 35, scope: !13137)
!13143 = !DILocation(line: 436, column: 24, scope: !13137)
!13144 = !DILocation(line: 436, column: 3, scope: !13137)
!13145 = !DILocation(line: 437, column: 2, scope: !13137)
!13146 = !DILocation(line: 438, column: 1, scope: !13126)
!13147 = distinct !DISubprogram(name: "slice_time", scope: !3514, file: !3514, line: 407, type: !13148, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13148 = !DISubroutineType(types: !13149)
!13149 = !{!103, !3415}
!13150 = !DILocalVariable(name: "curr", arg: 1, scope: !13147, file: !3514, line: 407, type: !3415)
!13151 = !DILocation(line: 407, column: 47, scope: !13147)
!13152 = !DILocalVariable(name: "ret", scope: !13147, file: !3514, line: 409, type: !103)
!13153 = !DILocation(line: 409, column: 6, scope: !13147)
!13154 = !DILocation(line: 409, column: 12, scope: !13147)
!13155 = !DILocation(line: 416, column: 9, scope: !13147)
!13156 = !DILocation(line: 416, column: 2, scope: !13147)
!13157 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3514, file: !3514, line: 440, type: !13158, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{null, !250, !103}
!13160 = !DILocalVariable(name: "slice", arg: 1, scope: !13157, file: !3514, line: 440, type: !250)
!13161 = !DILocation(line: 440, column: 37, scope: !13157)
!13162 = !DILocalVariable(name: "prio", arg: 2, scope: !13157, file: !3514, line: 440, type: !103)
!13163 = !DILocation(line: 440, column: 48, scope: !13157)
!13164 = !DILocalVariable(name: "__i", scope: !13165, file: !3514, line: 442, type: !13166)
!13165 = distinct !DILexicalBlock(scope: !13157, file: !3514, line: 442, column: 2)
!13166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !13167)
!13167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !13168)
!13168 = !{!13169}
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13167, file: !222, line: 33, baseType: !103, size: 32)
!13170 = !DILocation(line: 442, column: 2, scope: !13165)
!13171 = !DILocalVariable(name: "__key", scope: !13165, file: !3514, line: 442, type: !13166)
!13172 = !DILocalVariable(name: "l", arg: 1, scope: !13173, file: !222, line: 136, type: !13176)
!13173 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !13174, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13174 = !DISubroutineType(types: !13175)
!13175 = !{!13166, !13176}
!13176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 32)
!13177 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 442, column: 2, scope: !13165)
!13179 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !13178)
!13180 = !DILocalVariable(name: "k", scope: !13173, file: !222, line: 139, type: !13166)
!13181 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !13178)
!13182 = !DILocalVariable(name: "key", scope: !13183, file: !6626, line: 44, type: !32)
!13183 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13184 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !13185)
!13185 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !13178)
!13186 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !13185)
!13187 = !{i64 1515321}
!13188 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !13185)
!13189 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !13178)
!13190 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !13178)
!13191 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !13178)
!13192 = !DILocation(line: 442, column: 2, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13165, file: !3514, line: 442, column: 2)
!13194 = !DILocation(line: 443, column: 29, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13193, file: !3514, line: 442, column: 26)
!13196 = !DILocation(line: 444, column: 38, scope: !13195)
!13197 = !DILocation(line: 444, column: 17, scope: !13195)
!13198 = !DILocation(line: 444, column: 15, scope: !13195)
!13199 = !DILocation(line: 445, column: 45, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13195, file: !3514, line: 445, column: 7)
!13201 = !DILocation(line: 445, column: 51, scope: !13200)
!13202 = !DILocation(line: 445, column: 7, scope: !13195)
!13203 = !DILocation(line: 449, column: 18, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13200, file: !3514, line: 445, column: 56)
!13205 = !DILocation(line: 449, column: 16, scope: !13204)
!13206 = !DILocation(line: 450, column: 3, scope: !13204)
!13207 = !DILocation(line: 451, column: 20, scope: !13195)
!13208 = !DILocation(line: 451, column: 18, scope: !13195)
!13209 = !DILocation(line: 452, column: 22, scope: !13195)
!13210 = !DILocation(line: 452, column: 3, scope: !13195)
!13211 = !DILocation(line: 453, column: 2, scope: !13195)
!13212 = !DILocalVariable(name: "l", arg: 1, scope: !13213, file: !222, line: 189, type: !13176)
!13213 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !13214, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{null, !13176, !13166}
!13216 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !13217)
!13217 = distinct !DILocation(line: 442, column: 2, scope: !13193)
!13218 = !DILocalVariable(name: "key", arg: 2, scope: !13213, file: !222, line: 190, type: !13166)
!13219 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !13217)
!13220 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !13217)
!13221 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !13217)
!13222 = !DILocalVariable(name: "key", arg: 1, scope: !13223, file: !6626, line: 84, type: !32)
!13223 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13224 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !13225)
!13225 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !13217)
!13226 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !13225)
!13227 = distinct !DILexicalBlock(scope: !13223, file: !6626, line: 87, column: 6)
!13228 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !13225)
!13229 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !13225)
!13230 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !13225)
!13231 = distinct !DILexicalBlock(scope: !13227, file: !6626, line: 87, column: 17)
!13232 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !13225)
!13233 = !{i64 1516185}
!13234 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !13225)
!13235 = distinct !{!13235, !13170, !13236}
!13236 = !DILocation(line: 453, column: 2, scope: !13165)
!13237 = !DILocation(line: 454, column: 1, scope: !13157)
!13238 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !10787, file: !10787, line: 389, type: !13239, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13239 = !DISubroutineType(types: !13240)
!13240 = !{!173, !173}
!13241 = !DILocalVariable(name: "t", arg: 1, scope: !13238, file: !10787, line: 389, type: !173)
!13242 = !DILocation(line: 389, column: 69, scope: !13238)
!13243 = !DILocation(line: 392, column: 17, scope: !13238)
!13244 = !DILocalVariable(name: "t", arg: 1, scope: !13245, file: !10787, line: 102, type: !2246)
!13245 = distinct !DISubprogram(name: "z_tmcvt", scope: !10787, file: !10787, line: 102, type: !12811, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13246 = !DILocation(line: 102, column: 63, scope: !13245, inlinedAt: !13247)
!13247 = distinct !DILocation(line: 392, column: 9, scope: !13238)
!13248 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13245, file: !10787, line: 102, type: !173)
!13249 = !DILocation(line: 102, column: 75, scope: !13245, inlinedAt: !13247)
!13250 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13245, file: !10787, line: 103, type: !173)
!13251 = !DILocation(line: 103, column: 18, scope: !13245, inlinedAt: !13247)
!13252 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13245, file: !10787, line: 103, type: !1035)
!13253 = !DILocation(line: 103, column: 30, scope: !13245, inlinedAt: !13247)
!13254 = !DILocalVariable(name: "result32", arg: 5, scope: !13245, file: !10787, line: 104, type: !1035)
!13255 = !DILocation(line: 104, column: 14, scope: !13245, inlinedAt: !13247)
!13256 = !DILocalVariable(name: "round_up", arg: 6, scope: !13245, file: !10787, line: 104, type: !1035)
!13257 = !DILocation(line: 104, column: 29, scope: !13245, inlinedAt: !13247)
!13258 = !DILocalVariable(name: "round_off", arg: 7, scope: !13245, file: !10787, line: 105, type: !1035)
!13259 = !DILocation(line: 105, column: 14, scope: !13245, inlinedAt: !13247)
!13260 = !DILocalVariable(name: "mul_ratio", scope: !13245, file: !10787, line: 107, type: !1035)
!13261 = !DILocation(line: 107, column: 7, scope: !13245, inlinedAt: !13247)
!13262 = !DILocation(line: 107, column: 19, scope: !13245, inlinedAt: !13247)
!13263 = !DILocation(line: 107, column: 28, scope: !13245, inlinedAt: !13247)
!13264 = !DILocation(line: 108, column: 4, scope: !13245, inlinedAt: !13247)
!13265 = !DILocation(line: 108, column: 12, scope: !13245, inlinedAt: !13247)
!13266 = !DILocation(line: 108, column: 10, scope: !13245, inlinedAt: !13247)
!13267 = !DILocation(line: 108, column: 21, scope: !13245, inlinedAt: !13247)
!13268 = !DILocation(line: 108, column: 26, scope: !13245, inlinedAt: !13247)
!13269 = !DILocation(line: 108, column: 34, scope: !13245, inlinedAt: !13247)
!13270 = !DILocation(line: 108, column: 32, scope: !13245, inlinedAt: !13247)
!13271 = !DILocation(line: 108, column: 43, scope: !13245, inlinedAt: !13247)
!13272 = !DILocation(line: 0, scope: !13245, inlinedAt: !13247)
!13273 = !DILocalVariable(name: "div_ratio", scope: !13245, file: !10787, line: 109, type: !1035)
!13274 = !DILocation(line: 109, column: 7, scope: !13245, inlinedAt: !13247)
!13275 = !DILocation(line: 109, column: 19, scope: !13245, inlinedAt: !13247)
!13276 = !DILocation(line: 109, column: 28, scope: !13245, inlinedAt: !13247)
!13277 = !DILocation(line: 110, column: 4, scope: !13245, inlinedAt: !13247)
!13278 = !DILocation(line: 110, column: 14, scope: !13245, inlinedAt: !13247)
!13279 = !DILocation(line: 110, column: 12, scope: !13245, inlinedAt: !13247)
!13280 = !DILocation(line: 110, column: 21, scope: !13245, inlinedAt: !13247)
!13281 = !DILocation(line: 110, column: 26, scope: !13245, inlinedAt: !13247)
!13282 = !DILocation(line: 110, column: 36, scope: !13245, inlinedAt: !13247)
!13283 = !DILocation(line: 110, column: 34, scope: !13245, inlinedAt: !13247)
!13284 = !DILocation(line: 110, column: 43, scope: !13245, inlinedAt: !13247)
!13285 = !DILocation(line: 112, column: 6, scope: !13286, inlinedAt: !13247)
!13286 = distinct !DILexicalBlock(scope: !13245, file: !10787, line: 112, column: 6)
!13287 = !DILocation(line: 112, column: 17, scope: !13286, inlinedAt: !13247)
!13288 = !DILocation(line: 112, column: 14, scope: !13286, inlinedAt: !13247)
!13289 = !DILocation(line: 112, column: 6, scope: !13245, inlinedAt: !13247)
!13290 = !DILocation(line: 113, column: 10, scope: !13291, inlinedAt: !13247)
!13291 = distinct !DILexicalBlock(scope: !13286, file: !10787, line: 112, column: 24)
!13292 = !DILocation(line: 113, column: 32, scope: !13291, inlinedAt: !13247)
!13293 = !DILocation(line: 113, column: 22, scope: !13291, inlinedAt: !13247)
!13294 = !DILocation(line: 113, column: 21, scope: !13291, inlinedAt: !13247)
!13295 = !DILocation(line: 113, column: 37, scope: !13291, inlinedAt: !13247)
!13296 = !DILocation(line: 113, column: 3, scope: !13291, inlinedAt: !13247)
!13297 = !DILocalVariable(name: "off", scope: !13245, file: !10787, line: 116, type: !2246)
!13298 = !DILocation(line: 116, column: 11, scope: !13245, inlinedAt: !13247)
!13299 = !DILocation(line: 118, column: 7, scope: !13300, inlinedAt: !13247)
!13300 = distinct !DILexicalBlock(scope: !13245, file: !10787, line: 118, column: 6)
!13301 = !DILocation(line: 118, column: 6, scope: !13245, inlinedAt: !13247)
!13302 = !DILocalVariable(name: "rdivisor", scope: !13303, file: !10787, line: 119, type: !173)
!13303 = distinct !DILexicalBlock(scope: !13300, file: !10787, line: 118, column: 18)
!13304 = !DILocation(line: 119, column: 12, scope: !13303, inlinedAt: !13247)
!13305 = !DILocation(line: 119, column: 23, scope: !13303, inlinedAt: !13247)
!13306 = !DILocation(line: 119, column: 36, scope: !13303, inlinedAt: !13247)
!13307 = !DILocation(line: 119, column: 46, scope: !13303, inlinedAt: !13247)
!13308 = !DILocation(line: 119, column: 44, scope: !13303, inlinedAt: !13247)
!13309 = !DILocation(line: 119, column: 55, scope: !13303, inlinedAt: !13247)
!13310 = !DILocation(line: 121, column: 7, scope: !13311, inlinedAt: !13247)
!13311 = distinct !DILexicalBlock(scope: !13303, file: !10787, line: 121, column: 7)
!13312 = !DILocation(line: 121, column: 7, scope: !13303, inlinedAt: !13247)
!13313 = !DILocation(line: 122, column: 10, scope: !13314, inlinedAt: !13247)
!13314 = distinct !DILexicalBlock(scope: !13311, file: !10787, line: 121, column: 17)
!13315 = !DILocation(line: 122, column: 19, scope: !13314, inlinedAt: !13247)
!13316 = !DILocation(line: 122, column: 8, scope: !13314, inlinedAt: !13247)
!13317 = !DILocation(line: 123, column: 3, scope: !13314, inlinedAt: !13247)
!13318 = !DILocation(line: 124, column: 7, scope: !13319, inlinedAt: !13247)
!13319 = distinct !DILexicalBlock(scope: !13303, file: !10787, line: 124, column: 7)
!13320 = !DILocation(line: 124, column: 7, scope: !13303, inlinedAt: !13247)
!13321 = !DILocation(line: 125, column: 10, scope: !13322, inlinedAt: !13247)
!13322 = distinct !DILexicalBlock(scope: !13319, file: !10787, line: 124, column: 18)
!13323 = !DILocation(line: 125, column: 19, scope: !13322, inlinedAt: !13247)
!13324 = !DILocation(line: 125, column: 8, scope: !13322, inlinedAt: !13247)
!13325 = !DILocation(line: 126, column: 3, scope: !13322, inlinedAt: !13247)
!13326 = !DILocation(line: 127, column: 2, scope: !13303, inlinedAt: !13247)
!13327 = !DILocation(line: 134, column: 6, scope: !13328, inlinedAt: !13247)
!13328 = distinct !DILexicalBlock(scope: !13245, file: !10787, line: 134, column: 6)
!13329 = !DILocation(line: 134, column: 6, scope: !13245, inlinedAt: !13247)
!13330 = !DILocation(line: 135, column: 8, scope: !13331, inlinedAt: !13247)
!13331 = distinct !DILexicalBlock(scope: !13328, file: !10787, line: 134, column: 17)
!13332 = !DILocation(line: 135, column: 5, scope: !13331, inlinedAt: !13247)
!13333 = !DILocation(line: 136, column: 7, scope: !13334, inlinedAt: !13247)
!13334 = distinct !DILexicalBlock(scope: !13331, file: !10787, line: 136, column: 7)
!13335 = !DILocation(line: 136, column: 16, scope: !13334, inlinedAt: !13247)
!13336 = !DILocation(line: 136, column: 20, scope: !13334, inlinedAt: !13247)
!13337 = !DILocation(line: 136, column: 22, scope: !13334, inlinedAt: !13247)
!13338 = !DILocation(line: 136, column: 7, scope: !13331, inlinedAt: !13247)
!13339 = !DILocation(line: 137, column: 22, scope: !13340, inlinedAt: !13247)
!13340 = distinct !DILexicalBlock(scope: !13334, file: !10787, line: 136, column: 36)
!13341 = !DILocation(line: 137, column: 12, scope: !13340, inlinedAt: !13247)
!13342 = !DILocation(line: 137, column: 28, scope: !13340, inlinedAt: !13247)
!13343 = !DILocation(line: 137, column: 38, scope: !13340, inlinedAt: !13247)
!13344 = !DILocation(line: 137, column: 36, scope: !13340, inlinedAt: !13247)
!13345 = !DILocation(line: 137, column: 25, scope: !13340, inlinedAt: !13247)
!13346 = !DILocation(line: 137, column: 11, scope: !13340, inlinedAt: !13247)
!13347 = !DILocation(line: 137, column: 4, scope: !13340, inlinedAt: !13247)
!13348 = !DILocation(line: 139, column: 11, scope: !13349, inlinedAt: !13247)
!13349 = distinct !DILexicalBlock(scope: !13334, file: !10787, line: 138, column: 10)
!13350 = !DILocation(line: 139, column: 26, scope: !13349, inlinedAt: !13247)
!13351 = !DILocation(line: 139, column: 16, scope: !13349, inlinedAt: !13247)
!13352 = !DILocation(line: 139, column: 36, scope: !13349, inlinedAt: !13247)
!13353 = !DILocation(line: 139, column: 34, scope: !13349, inlinedAt: !13247)
!13354 = !DILocation(line: 139, column: 13, scope: !13349, inlinedAt: !13247)
!13355 = !DILocation(line: 139, column: 4, scope: !13349, inlinedAt: !13247)
!13356 = !DILocation(line: 141, column: 13, scope: !13357, inlinedAt: !13247)
!13357 = distinct !DILexicalBlock(scope: !13328, file: !10787, line: 141, column: 13)
!13358 = !DILocation(line: 141, column: 13, scope: !13328, inlinedAt: !13247)
!13359 = !DILocation(line: 142, column: 7, scope: !13360, inlinedAt: !13247)
!13360 = distinct !DILexicalBlock(scope: !13361, file: !10787, line: 142, column: 7)
!13361 = distinct !DILexicalBlock(scope: !13357, file: !10787, line: 141, column: 24)
!13362 = !DILocation(line: 142, column: 7, scope: !13361, inlinedAt: !13247)
!13363 = !DILocation(line: 143, column: 22, scope: !13364, inlinedAt: !13247)
!13364 = distinct !DILexicalBlock(scope: !13360, file: !10787, line: 142, column: 17)
!13365 = !DILocation(line: 143, column: 12, scope: !13364, inlinedAt: !13247)
!13366 = !DILocation(line: 143, column: 28, scope: !13364, inlinedAt: !13247)
!13367 = !DILocation(line: 143, column: 36, scope: !13364, inlinedAt: !13247)
!13368 = !DILocation(line: 143, column: 34, scope: !13364, inlinedAt: !13247)
!13369 = !DILocation(line: 143, column: 25, scope: !13364, inlinedAt: !13247)
!13370 = !DILocation(line: 143, column: 11, scope: !13364, inlinedAt: !13247)
!13371 = !DILocation(line: 143, column: 4, scope: !13364, inlinedAt: !13247)
!13372 = !DILocation(line: 145, column: 11, scope: !13373, inlinedAt: !13247)
!13373 = distinct !DILexicalBlock(scope: !13360, file: !10787, line: 144, column: 10)
!13374 = !DILocation(line: 145, column: 26, scope: !13373, inlinedAt: !13247)
!13375 = !DILocation(line: 145, column: 16, scope: !13373, inlinedAt: !13247)
!13376 = !DILocation(line: 145, column: 34, scope: !13373, inlinedAt: !13247)
!13377 = !DILocation(line: 145, column: 32, scope: !13373, inlinedAt: !13247)
!13378 = !DILocation(line: 145, column: 13, scope: !13373, inlinedAt: !13247)
!13379 = !DILocation(line: 145, column: 4, scope: !13373, inlinedAt: !13247)
!13380 = !DILocation(line: 148, column: 7, scope: !13381, inlinedAt: !13247)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !10787, line: 148, column: 7)
!13382 = distinct !DILexicalBlock(scope: !13357, file: !10787, line: 147, column: 9)
!13383 = !DILocation(line: 148, column: 7, scope: !13382, inlinedAt: !13247)
!13384 = !DILocation(line: 149, column: 23, scope: !13385, inlinedAt: !13247)
!13385 = distinct !DILexicalBlock(scope: !13381, file: !10787, line: 148, column: 17)
!13386 = !DILocation(line: 149, column: 27, scope: !13385, inlinedAt: !13247)
!13387 = !DILocation(line: 149, column: 25, scope: !13385, inlinedAt: !13247)
!13388 = !DILocation(line: 149, column: 35, scope: !13385, inlinedAt: !13247)
!13389 = !DILocation(line: 149, column: 33, scope: !13385, inlinedAt: !13247)
!13390 = !DILocation(line: 149, column: 42, scope: !13385, inlinedAt: !13247)
!13391 = !DILocation(line: 149, column: 40, scope: !13385, inlinedAt: !13247)
!13392 = !DILocation(line: 149, column: 11, scope: !13385, inlinedAt: !13247)
!13393 = !DILocation(line: 149, column: 4, scope: !13385, inlinedAt: !13247)
!13394 = !DILocation(line: 150, column: 14, scope: !13395, inlinedAt: !13247)
!13395 = distinct !DILexicalBlock(scope: !13381, file: !10787, line: 150, column: 14)
!13396 = !DILocation(line: 150, column: 23, scope: !13395, inlinedAt: !13247)
!13397 = !DILocation(line: 150, column: 26, scope: !13395, inlinedAt: !13247)
!13398 = !DILocation(line: 150, column: 14, scope: !13381, inlinedAt: !13247)
!13399 = !DILocation(line: 156, column: 13, scope: !13400, inlinedAt: !13247)
!13400 = distinct !DILexicalBlock(scope: !13395, file: !10787, line: 150, column: 65)
!13401 = !DILocation(line: 156, column: 17, scope: !13400, inlinedAt: !13247)
!13402 = !DILocation(line: 156, column: 15, scope: !13400, inlinedAt: !13247)
!13403 = !DILocation(line: 156, column: 25, scope: !13400, inlinedAt: !13247)
!13404 = !DILocation(line: 156, column: 23, scope: !13400, inlinedAt: !13247)
!13405 = !DILocation(line: 156, column: 32, scope: !13400, inlinedAt: !13247)
!13406 = !DILocation(line: 156, column: 30, scope: !13400, inlinedAt: !13247)
!13407 = !DILocation(line: 156, column: 4, scope: !13400, inlinedAt: !13247)
!13408 = !DILocation(line: 161, column: 12, scope: !13409, inlinedAt: !13247)
!13409 = distinct !DILexicalBlock(scope: !13395, file: !10787, line: 157, column: 10)
!13410 = !DILocation(line: 161, column: 16, scope: !13409, inlinedAt: !13247)
!13411 = !DILocation(line: 161, column: 14, scope: !13409, inlinedAt: !13247)
!13412 = !DILocation(line: 161, column: 27, scope: !13409, inlinedAt: !13247)
!13413 = !DILocation(line: 161, column: 25, scope: !13409, inlinedAt: !13247)
!13414 = !DILocation(line: 161, column: 37, scope: !13409, inlinedAt: !13247)
!13415 = !DILocation(line: 161, column: 41, scope: !13409, inlinedAt: !13247)
!13416 = !DILocation(line: 161, column: 39, scope: !13409, inlinedAt: !13247)
!13417 = !DILocation(line: 161, column: 52, scope: !13409, inlinedAt: !13247)
!13418 = !DILocation(line: 161, column: 50, scope: !13409, inlinedAt: !13247)
!13419 = !DILocation(line: 161, column: 60, scope: !13409, inlinedAt: !13247)
!13420 = !DILocation(line: 161, column: 58, scope: !13409, inlinedAt: !13247)
!13421 = !DILocation(line: 161, column: 67, scope: !13409, inlinedAt: !13247)
!13422 = !DILocation(line: 161, column: 65, scope: !13409, inlinedAt: !13247)
!13423 = !DILocation(line: 161, column: 33, scope: !13409, inlinedAt: !13247)
!13424 = !DILocation(line: 161, column: 4, scope: !13409, inlinedAt: !13247)
!13425 = !DILocation(line: 164, column: 1, scope: !13245, inlinedAt: !13247)
!13426 = !DILocation(line: 392, column: 9, scope: !13238)
!13427 = !DILocation(line: 392, column: 2, scope: !13238)
!13428 = distinct !DISubprogram(name: "z_time_slice", scope: !3514, file: !3514, line: 502, type: !11932, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13429 = !DILocalVariable(name: "ticks", arg: 1, scope: !13428, file: !3514, line: 502, type: !103)
!13430 = !DILocation(line: 502, column: 23, scope: !13428)
!13431 = !DILocalVariable(name: "key", scope: !13428, file: !3514, line: 511, type: !13166)
!13432 = !DILocation(line: 511, column: 19, scope: !13428)
!13433 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 511, column: 25, scope: !13428)
!13435 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !13434)
!13436 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !13434)
!13437 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !13438)
!13438 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !13434)
!13439 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !13438)
!13440 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !13438)
!13441 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !13434)
!13442 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !13434)
!13443 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !13434)
!13444 = !DILocation(line: 511, column: 25, scope: !13428)
!13445 = !DILocation(line: 514, column: 6, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13428, file: !3514, line: 514, column: 6)
!13447 = !DILocation(line: 514, column: 25, scope: !13446)
!13448 = !DILocation(line: 514, column: 22, scope: !13446)
!13449 = !DILocation(line: 514, column: 6, scope: !13428)
!13450 = !DILocation(line: 515, column: 22, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13446, file: !3514, line: 514, column: 35)
!13452 = !DILocation(line: 515, column: 3, scope: !13451)
!13453 = !DILocation(line: 516, column: 3, scope: !13451)
!13454 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !13455)
!13455 = distinct !DILocation(line: 516, column: 3, scope: !13451)
!13456 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !13455)
!13457 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !13455)
!13458 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !13455)
!13459 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !13455)
!13461 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !13460)
!13462 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !13460)
!13463 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !13460)
!13464 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !13460)
!13465 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !13460)
!13466 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !13460)
!13467 = !DILocation(line: 517, column: 3, scope: !13451)
!13468 = !DILocation(line: 519, column: 18, scope: !13428)
!13469 = !DILocation(line: 522, column: 17, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13428, file: !3514, line: 522, column: 6)
!13471 = !DILocation(line: 522, column: 6, scope: !13470)
!13472 = !DILocation(line: 522, column: 27, scope: !13470)
!13473 = !DILocation(line: 522, column: 40, scope: !13470)
!13474 = !DILocation(line: 522, column: 30, scope: !13470)
!13475 = !DILocation(line: 522, column: 6, scope: !13428)
!13476 = !DILocation(line: 523, column: 7, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !3514, line: 523, column: 7)
!13478 = distinct !DILexicalBlock(scope: !13470, file: !3514, line: 522, column: 51)
!13479 = !DILocation(line: 523, column: 30, scope: !13477)
!13480 = !DILocation(line: 523, column: 13, scope: !13477)
!13481 = !DILocation(line: 523, column: 7, scope: !13478)
!13482 = !DILocation(line: 530, column: 10, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13477, file: !3514, line: 523, column: 43)
!13484 = !DILocation(line: 531, column: 3, scope: !13483)
!13485 = !DILocation(line: 532, column: 33, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13477, file: !3514, line: 531, column: 10)
!13487 = !DILocation(line: 532, column: 30, scope: !13486)
!13488 = !DILocation(line: 534, column: 2, scope: !13478)
!13489 = !DILocation(line: 535, column: 29, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13470, file: !3514, line: 534, column: 9)
!13491 = !DILocation(line: 537, column: 2, scope: !13428)
!13492 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 537, column: 2, scope: !13428)
!13494 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !13493)
!13495 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !13493)
!13496 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !13493)
!13497 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !13493)
!13499 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !13498)
!13500 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !13498)
!13501 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !13498)
!13502 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !13498)
!13503 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !13498)
!13504 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !13498)
!13505 = !DILocation(line: 538, column: 1, scope: !13428)
!13506 = distinct !DISubprogram(name: "sliceable", scope: !3514, file: !3514, line: 468, type: !13507, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{!1035, !3415}
!13509 = !DILocalVariable(name: "thread", arg: 1, scope: !13506, file: !3514, line: 468, type: !3415)
!13510 = !DILocation(line: 468, column: 47, scope: !13506)
!13511 = !DILocalVariable(name: "ret", scope: !13506, file: !3514, line: 470, type: !1035)
!13512 = !DILocation(line: 470, column: 7, scope: !13506)
!13513 = !DILocation(line: 470, column: 24, scope: !13506)
!13514 = !DILocation(line: 470, column: 13, scope: !13506)
!13515 = !DILocation(line: 471, column: 3, scope: !13506)
!13516 = !DILocation(line: 471, column: 42, scope: !13506)
!13517 = !DILocation(line: 471, column: 7, scope: !13506)
!13518 = !DILocation(line: 472, column: 3, scope: !13506)
!13519 = !DILocation(line: 472, column: 24, scope: !13506)
!13520 = !DILocation(line: 472, column: 32, scope: !13506)
!13521 = !DILocation(line: 472, column: 37, scope: !13506)
!13522 = !DILocation(line: 472, column: 43, scope: !13506)
!13523 = !DILocation(line: 472, column: 7, scope: !13506)
!13524 = !DILocation(line: 473, column: 3, scope: !13506)
!13525 = !DILocation(line: 473, column: 31, scope: !13506)
!13526 = !DILocation(line: 473, column: 7, scope: !13506)
!13527 = !DILocation(line: 473, column: 6, scope: !13506)
!13528 = !DILocation(line: 0, scope: !13506)
!13529 = !DILocation(line: 479, column: 9, scope: !13506)
!13530 = !DILocation(line: 479, column: 2, scope: !13506)
!13531 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3514, file: !3514, line: 482, type: !13532, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{!13166, !13166}
!13534 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13531, file: !3514, line: 482, type: !13166)
!13535 = !DILocation(line: 482, column: 63, scope: !13531)
!13536 = !DILocalVariable(name: "curr", scope: !13531, file: !3514, line: 484, type: !3415)
!13537 = !DILocation(line: 484, column: 19, scope: !13531)
!13538 = !DILocation(line: 484, column: 26, scope: !13531)
!13539 = !DILocation(line: 493, column: 42, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13531, file: !3514, line: 493, column: 6)
!13541 = !DILocation(line: 493, column: 7, scope: !13540)
!13542 = !DILocation(line: 493, column: 6, scope: !13531)
!13543 = !DILocation(line: 494, column: 32, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13540, file: !3514, line: 493, column: 49)
!13545 = !DILocation(line: 494, column: 3, scope: !13544)
!13546 = !DILocation(line: 495, column: 2, scope: !13544)
!13547 = !DILocation(line: 496, column: 21, scope: !13531)
!13548 = !DILocation(line: 496, column: 2, scope: !13531)
!13549 = !DILocation(line: 498, column: 9, scope: !13531)
!13550 = !DILocation(line: 498, column: 2, scope: !13531)
!13551 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11993, file: !11993, line: 106, type: !13507, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13552 = !DILocalVariable(name: "thread", arg: 1, scope: !13551, file: !11993, line: 106, type: !3415)
!13553 = !DILocation(line: 106, column: 72, scope: !13551)
!13554 = !DILocalVariable(name: "state", scope: !13551, file: !11993, line: 108, type: !156)
!13555 = !DILocation(line: 108, column: 10, scope: !13551)
!13556 = !DILocation(line: 108, column: 18, scope: !13551)
!13557 = !DILocation(line: 108, column: 26, scope: !13551)
!13558 = !DILocation(line: 108, column: 31, scope: !13551)
!13559 = !DILocation(line: 110, column: 10, scope: !13551)
!13560 = !DILocation(line: 110, column: 16, scope: !13551)
!13561 = !DILocation(line: 111, column: 41, scope: !13551)
!13562 = !DILocation(line: 110, column: 2, scope: !13551)
!13563 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3514, file: !3514, line: 393, type: !13127, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13564 = !DILocalVariable(name: "thread", arg: 1, scope: !13563, file: !3514, line: 393, type: !3415)
!13565 = !DILocation(line: 393, column: 59, scope: !13563)
!13566 = !DILocation(line: 395, column: 25, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13563, file: !3514, line: 395, column: 6)
!13568 = !DILocation(line: 395, column: 6, scope: !13567)
!13569 = !DILocation(line: 395, column: 6, scope: !13563)
!13570 = !DILocation(line: 396, column: 18, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13567, file: !3514, line: 395, column: 34)
!13572 = !DILocalVariable(name: "thread", arg: 1, scope: !13573, file: !3514, line: 264, type: !3415)
!13573 = distinct !DISubprogram(name: "dequeue_thread", scope: !3514, file: !3514, line: 264, type: !13127, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13574 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !13575)
!13575 = distinct !DILocation(line: 396, column: 3, scope: !13571)
!13576 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !13575)
!13577 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !13575)
!13578 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !13575)
!13579 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !13575)
!13580 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !13575)
!13581 = distinct !DILexicalBlock(scope: !13573, file: !3514, line: 267, column: 6)
!13582 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !13575)
!13583 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !13575)
!13584 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !13575)
!13585 = distinct !DILexicalBlock(scope: !13581, file: !3514, line: 267, column: 35)
!13586 = !DILocalVariable(name: "thread", arg: 1, scope: !13587, file: !3514, line: 232, type: !3415)
!13587 = distinct !DISubprogram(name: "runq_remove", scope: !3514, file: !3514, line: 232, type: !13127, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13588 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !13589)
!13589 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !13575)
!13590 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !13589)
!13591 = !DILocalVariable(name: "thread", arg: 1, scope: !13592, file: !3514, line: 199, type: !3415)
!13592 = distinct !DISubprogram(name: "thread_runq", scope: !3514, file: !3514, line: 199, type: !13593, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{!102, !3415}
!13595 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !13596)
!13596 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !13589)
!13597 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !13589)
!13598 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !13589)
!13599 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !13589)
!13600 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !13575)
!13601 = !DILocation(line: 397, column: 2, scope: !13571)
!13602 = !DILocation(line: 398, column: 15, scope: !13563)
!13603 = !DILocalVariable(name: "thread", arg: 1, scope: !13604, file: !3514, line: 250, type: !3415)
!13604 = distinct !DISubprogram(name: "queue_thread", scope: !3514, file: !3514, line: 250, type: !13127, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13605 = !DILocation(line: 250, column: 57, scope: !13604, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 398, column: 2, scope: !13563)
!13607 = !DILocation(line: 252, column: 2, scope: !13604, inlinedAt: !13606)
!13608 = !DILocation(line: 252, column: 10, scope: !13604, inlinedAt: !13606)
!13609 = !DILocation(line: 252, column: 15, scope: !13604, inlinedAt: !13606)
!13610 = !DILocation(line: 252, column: 28, scope: !13604, inlinedAt: !13606)
!13611 = !DILocation(line: 253, column: 26, scope: !13612, inlinedAt: !13606)
!13612 = distinct !DILexicalBlock(scope: !13604, file: !3514, line: 253, column: 6)
!13613 = !DILocation(line: 253, column: 6, scope: !13612, inlinedAt: !13606)
!13614 = !DILocation(line: 253, column: 6, scope: !13604, inlinedAt: !13606)
!13615 = !DILocation(line: 254, column: 12, scope: !13616, inlinedAt: !13606)
!13616 = distinct !DILexicalBlock(scope: !13612, file: !3514, line: 253, column: 35)
!13617 = !DILocalVariable(name: "thread", arg: 1, scope: !13618, file: !3514, line: 227, type: !3415)
!13618 = distinct !DISubprogram(name: "runq_add", scope: !3514, file: !3514, line: 227, type: !13127, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13619 = !DILocation(line: 227, column: 53, scope: !13618, inlinedAt: !13620)
!13620 = distinct !DILocation(line: 254, column: 3, scope: !13616, inlinedAt: !13606)
!13621 = !DILocation(line: 229, column: 28, scope: !13618, inlinedAt: !13620)
!13622 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !13623)
!13623 = distinct !DILocation(line: 229, column: 16, scope: !13618, inlinedAt: !13620)
!13624 = !DILocation(line: 229, column: 37, scope: !13618, inlinedAt: !13620)
!13625 = !DILocalVariable(name: "pq", arg: 1, scope: !13626, file: !3514, line: 181, type: !13629)
!13626 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3514, file: !3514, line: 181, type: !13627, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13627 = !DISubroutineType(types: !13628)
!13628 = !{null, !13629, !3415}
!13629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 32)
!13630 = !DILocation(line: 181, column: 56, scope: !13626, inlinedAt: !13631)
!13631 = distinct !DILocation(line: 229, column: 2, scope: !13618, inlinedAt: !13620)
!13632 = !DILocalVariable(name: "thread", arg: 2, scope: !13626, file: !3514, line: 182, type: !3415)
!13633 = !DILocation(line: 182, column: 25, scope: !13626, inlinedAt: !13631)
!13634 = !DILocalVariable(name: "t", scope: !13626, file: !3514, line: 184, type: !3415)
!13635 = !DILocation(line: 184, column: 19, scope: !13626, inlinedAt: !13631)
!13636 = !DILocation(line: 188, column: 2, scope: !13637, inlinedAt: !13631)
!13637 = distinct !DILexicalBlock(scope: !13626, file: !3514, line: 188, column: 2)
!13638 = !DILocation(line: 188, column: 2, scope: !13639, inlinedAt: !13631)
!13639 = distinct !DILexicalBlock(scope: !13637, file: !3514, line: 188, column: 2)
!13640 = !DILocation(line: 189, column: 24, scope: !13641, inlinedAt: !13631)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !3514, line: 189, column: 7)
!13642 = distinct !DILexicalBlock(scope: !13639, file: !3514, line: 188, column: 56)
!13643 = !DILocation(line: 189, column: 32, scope: !13641, inlinedAt: !13631)
!13644 = !DILocation(line: 189, column: 7, scope: !13641, inlinedAt: !13631)
!13645 = !DILocation(line: 189, column: 35, scope: !13641, inlinedAt: !13631)
!13646 = !DILocation(line: 189, column: 7, scope: !13642, inlinedAt: !13631)
!13647 = !DILocation(line: 190, column: 22, scope: !13648, inlinedAt: !13631)
!13648 = distinct !DILexicalBlock(scope: !13641, file: !3514, line: 189, column: 40)
!13649 = !DILocation(line: 190, column: 25, scope: !13648, inlinedAt: !13631)
!13650 = !DILocation(line: 190, column: 30, scope: !13648, inlinedAt: !13631)
!13651 = !DILocation(line: 191, column: 8, scope: !13648, inlinedAt: !13631)
!13652 = !DILocation(line: 191, column: 16, scope: !13648, inlinedAt: !13631)
!13653 = !DILocation(line: 191, column: 21, scope: !13648, inlinedAt: !13631)
!13654 = !DILocation(line: 190, column: 4, scope: !13648, inlinedAt: !13631)
!13655 = !DILocation(line: 192, column: 4, scope: !13648, inlinedAt: !13631)
!13656 = distinct !{!13656, !13636, !13657}
!13657 = !DILocation(line: 194, column: 2, scope: !13637, inlinedAt: !13631)
!13658 = !DILocation(line: 196, column: 19, scope: !13626, inlinedAt: !13631)
!13659 = !DILocation(line: 196, column: 24, scope: !13626, inlinedAt: !13631)
!13660 = !DILocation(line: 196, column: 32, scope: !13626, inlinedAt: !13631)
!13661 = !DILocation(line: 196, column: 37, scope: !13626, inlinedAt: !13631)
!13662 = !DILocation(line: 196, column: 2, scope: !13626, inlinedAt: !13631)
!13663 = !DILocation(line: 197, column: 1, scope: !13626, inlinedAt: !13631)
!13664 = !DILocation(line: 255, column: 2, scope: !13616, inlinedAt: !13606)
!13665 = !DILocation(line: 399, column: 15, scope: !13563)
!13666 = !DILocation(line: 399, column: 25, scope: !13563)
!13667 = !DILocation(line: 399, column: 22, scope: !13563)
!13668 = !DILocation(line: 399, column: 2, scope: !13563)
!13669 = !DILocation(line: 400, column: 1, scope: !13563)
!13670 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11993, file: !11993, line: 136, type: !13507, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13671 = !DILocalVariable(name: "thread", arg: 1, scope: !13670, file: !11993, line: 136, type: !3415)
!13672 = !DILocation(line: 136, column: 56, scope: !13670)
!13673 = !DILocation(line: 138, column: 31, scope: !13670)
!13674 = !DILocation(line: 138, column: 9, scope: !13670)
!13675 = !DILocation(line: 138, column: 2, scope: !13670)
!13676 = distinct !DISubprogram(name: "should_queue_thread", scope: !3514, file: !3514, line: 245, type: !13507, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13677 = !DILocalVariable(name: "th", arg: 1, scope: !13676, file: !3514, line: 245, type: !3415)
!13678 = !DILocation(line: 245, column: 57, scope: !13676)
!13679 = !DILocation(line: 247, column: 2, scope: !13676)
!13680 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3514, file: !3514, line: 1137, type: !13627, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13681 = !DILocalVariable(name: "pq", arg: 1, scope: !13680, file: !3514, line: 1137, type: !13629)
!13682 = !DILocation(line: 1137, column: 38, scope: !13680)
!13683 = !DILocalVariable(name: "thread", arg: 2, scope: !13680, file: !3514, line: 1137, type: !3415)
!13684 = !DILocation(line: 1137, column: 59, scope: !13680)
!13685 = !DILocation(line: 1141, column: 20, scope: !13680)
!13686 = !DILocation(line: 1141, column: 28, scope: !13680)
!13687 = !DILocation(line: 1141, column: 33, scope: !13680)
!13688 = !DILocation(line: 1141, column: 2, scope: !13680)
!13689 = !DILocation(line: 1142, column: 1, scope: !13680)
!13690 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !13691, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{!3510, !13629}
!13693 = !DILocalVariable(name: "list", arg: 1, scope: !13690, file: !124, line: 294, type: !13629)
!13694 = !DILocation(line: 294, column: 61, scope: !13690)
!13695 = !DILocation(line: 296, column: 28, scope: !13690)
!13696 = !DILocation(line: 296, column: 9, scope: !13690)
!13697 = !DILocation(line: 296, column: 43, scope: !13690)
!13698 = !DILocation(line: 296, column: 49, scope: !13690)
!13699 = !DILocation(line: 296, column: 2, scope: !13690)
!13700 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !13701, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13701 = !DISubroutineType(types: !13702)
!13702 = !{null, !3510, !3510}
!13703 = !DILocalVariable(name: "successor", arg: 1, scope: !13700, file: !124, line: 443, type: !3510)
!13704 = !DILocation(line: 443, column: 50, scope: !13700)
!13705 = !DILocalVariable(name: "node", arg: 2, scope: !13700, file: !124, line: 443, type: !3510)
!13706 = !DILocation(line: 443, column: 74, scope: !13700)
!13707 = !DILocalVariable(name: "prev", scope: !13700, file: !124, line: 445, type: !13708)
!13708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3510)
!13709 = !DILocation(line: 445, column: 21, scope: !13700)
!13710 = !DILocation(line: 445, column: 28, scope: !13700)
!13711 = !DILocation(line: 445, column: 39, scope: !13700)
!13712 = !DILocation(line: 447, column: 15, scope: !13700)
!13713 = !DILocation(line: 447, column: 2, scope: !13700)
!13714 = !DILocation(line: 447, column: 8, scope: !13700)
!13715 = !DILocation(line: 447, column: 13, scope: !13700)
!13716 = !DILocation(line: 448, column: 15, scope: !13700)
!13717 = !DILocation(line: 448, column: 2, scope: !13700)
!13718 = !DILocation(line: 448, column: 8, scope: !13700)
!13719 = !DILocation(line: 448, column: 13, scope: !13700)
!13720 = !DILocation(line: 449, column: 15, scope: !13700)
!13721 = !DILocation(line: 449, column: 2, scope: !13700)
!13722 = !DILocation(line: 449, column: 8, scope: !13700)
!13723 = !DILocation(line: 449, column: 13, scope: !13700)
!13724 = !DILocation(line: 450, column: 20, scope: !13700)
!13725 = !DILocation(line: 450, column: 2, scope: !13700)
!13726 = !DILocation(line: 450, column: 13, scope: !13700)
!13727 = !DILocation(line: 450, column: 18, scope: !13700)
!13728 = !DILocation(line: 451, column: 1, scope: !13700)
!13729 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !13730, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13730 = !DISubroutineType(types: !13731)
!13731 = !{!3510, !13629, !3510}
!13732 = !DILocalVariable(name: "list", arg: 1, scope: !13729, file: !124, line: 341, type: !13629)
!13733 = !DILocation(line: 341, column: 61, scope: !13729)
!13734 = !DILocalVariable(name: "node", arg: 2, scope: !13729, file: !124, line: 342, type: !3510)
!13735 = !DILocation(line: 342, column: 26, scope: !13729)
!13736 = !DILocation(line: 344, column: 10, scope: !13729)
!13737 = !DILocation(line: 344, column: 15, scope: !13729)
!13738 = !DILocation(line: 344, column: 9, scope: !13729)
!13739 = !DILocation(line: 344, column: 55, scope: !13729)
!13740 = !DILocation(line: 344, column: 61, scope: !13729)
!13741 = !DILocation(line: 344, column: 26, scope: !13729)
!13742 = !DILocation(line: 344, column: 2, scope: !13729)
!13743 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !13744, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{null, !13629, !3510}
!13746 = !DILocalVariable(name: "list", arg: 1, scope: !13743, file: !124, line: 404, type: !13629)
!13747 = !DILocation(line: 404, column: 50, scope: !13743)
!13748 = !DILocalVariable(name: "node", arg: 2, scope: !13743, file: !124, line: 404, type: !3510)
!13749 = !DILocation(line: 404, column: 69, scope: !13743)
!13750 = !DILocalVariable(name: "tail", scope: !13743, file: !124, line: 406, type: !13708)
!13751 = !DILocation(line: 406, column: 21, scope: !13743)
!13752 = !DILocation(line: 406, column: 28, scope: !13743)
!13753 = !DILocation(line: 406, column: 34, scope: !13743)
!13754 = !DILocation(line: 408, column: 15, scope: !13743)
!13755 = !DILocation(line: 408, column: 2, scope: !13743)
!13756 = !DILocation(line: 408, column: 8, scope: !13743)
!13757 = !DILocation(line: 408, column: 13, scope: !13743)
!13758 = !DILocation(line: 409, column: 15, scope: !13743)
!13759 = !DILocation(line: 409, column: 2, scope: !13743)
!13760 = !DILocation(line: 409, column: 8, scope: !13743)
!13761 = !DILocation(line: 409, column: 13, scope: !13743)
!13762 = !DILocation(line: 411, column: 15, scope: !13743)
!13763 = !DILocation(line: 411, column: 2, scope: !13743)
!13764 = !DILocation(line: 411, column: 8, scope: !13743)
!13765 = !DILocation(line: 411, column: 13, scope: !13743)
!13766 = !DILocation(line: 412, column: 15, scope: !13743)
!13767 = !DILocation(line: 412, column: 2, scope: !13743)
!13768 = !DILocation(line: 412, column: 8, scope: !13743)
!13769 = !DILocation(line: 412, column: 13, scope: !13743)
!13770 = !DILocation(line: 413, column: 1, scope: !13743)
!13771 = distinct !DISubprogram(name: "update_cache", scope: !3514, file: !3514, line: 559, type: !11932, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13772 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13771, file: !3514, line: 559, type: !103)
!13773 = !DILocation(line: 559, column: 30, scope: !13771)
!13774 = !DILocalVariable(name: "thread", scope: !13771, file: !3514, line: 562, type: !3415)
!13775 = !DILocation(line: 562, column: 19, scope: !13771)
!13776 = !DILocalVariable(name: "thread", scope: !13777, file: !3514, line: 314, type: !3415)
!13777 = distinct !DISubprogram(name: "next_up", scope: !3514, file: !3514, line: 312, type: !13778, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13778 = !DISubroutineType(types: !13779)
!13779 = !{!3415}
!13780 = !DILocation(line: 314, column: 19, scope: !13777, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 562, column: 28, scope: !13771)
!13782 = !DILocation(line: 239, column: 24, scope: !13783, inlinedAt: !13784)
!13783 = distinct !DISubprogram(name: "runq_best", scope: !3514, file: !3514, line: 237, type: !13778, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13784 = distinct !DILocation(line: 314, column: 28, scope: !13777, inlinedAt: !13781)
!13785 = !DILocation(line: 239, column: 9, scope: !13783, inlinedAt: !13784)
!13786 = !DILocation(line: 340, column: 10, scope: !13777, inlinedAt: !13781)
!13787 = !DILocation(line: 340, column: 17, scope: !13777, inlinedAt: !13781)
!13788 = !DILocation(line: 340, column: 9, scope: !13777, inlinedAt: !13781)
!13789 = !DILocation(line: 340, column: 28, scope: !13777, inlinedAt: !13781)
!13790 = !DILocation(line: 340, column: 51, scope: !13777, inlinedAt: !13781)
!13791 = !DILocation(line: 564, column: 21, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13771, file: !3514, line: 564, column: 6)
!13793 = !DILocation(line: 564, column: 29, scope: !13792)
!13794 = !DILocalVariable(name: "thread", arg: 1, scope: !13795, file: !3514, line: 127, type: !3415)
!13795 = distinct !DISubprogram(name: "should_preempt", scope: !3514, file: !3514, line: 127, type: !13796, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13796 = !DISubroutineType(types: !13797)
!13797 = !{!1035, !3415, !103}
!13798 = !DILocation(line: 127, column: 59, scope: !13795, inlinedAt: !13799)
!13799 = distinct !DILocation(line: 564, column: 6, scope: !13792)
!13800 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13795, file: !3514, line: 128, type: !103)
!13801 = !DILocation(line: 128, column: 11, scope: !13795, inlinedAt: !13799)
!13802 = !DILocation(line: 133, column: 6, scope: !13803, inlinedAt: !13799)
!13803 = distinct !DILexicalBlock(scope: !13795, file: !3514, line: 133, column: 6)
!13804 = !DILocation(line: 133, column: 17, scope: !13803, inlinedAt: !13799)
!13805 = !DILocation(line: 133, column: 6, scope: !13795, inlinedAt: !13799)
!13806 = !DILocation(line: 134, column: 3, scope: !13807, inlinedAt: !13799)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !3514, line: 133, column: 23)
!13808 = !DILocation(line: 140, column: 41, scope: !13809, inlinedAt: !13799)
!13809 = distinct !DILexicalBlock(scope: !13795, file: !3514, line: 140, column: 6)
!13810 = !DILocation(line: 140, column: 6, scope: !13809, inlinedAt: !13799)
!13811 = !DILocation(line: 140, column: 6, scope: !13795, inlinedAt: !13799)
!13812 = !DILocation(line: 141, column: 3, scope: !13813, inlinedAt: !13799)
!13813 = distinct !DILexicalBlock(scope: !13809, file: !3514, line: 140, column: 52)
!13814 = !DILocation(line: 150, column: 36, scope: !13815, inlinedAt: !13799)
!13815 = distinct !DILexicalBlock(scope: !13795, file: !3514, line: 149, column: 6)
!13816 = !DILocation(line: 150, column: 9, scope: !13815, inlinedAt: !13799)
!13817 = !DILocation(line: 149, column: 6, scope: !13795, inlinedAt: !13799)
!13818 = !DILocation(line: 151, column: 3, scope: !13819, inlinedAt: !13799)
!13819 = distinct !DILexicalBlock(scope: !13815, file: !3514, line: 150, column: 45)
!13820 = !DILocation(line: 157, column: 17, scope: !13821, inlinedAt: !13799)
!13821 = distinct !DILexicalBlock(scope: !13795, file: !3514, line: 157, column: 6)
!13822 = !DILocation(line: 157, column: 6, scope: !13821, inlinedAt: !13799)
!13823 = !DILocation(line: 157, column: 27, scope: !13821, inlinedAt: !13799)
!13824 = !DILocation(line: 157, column: 41, scope: !13821, inlinedAt: !13799)
!13825 = !DILocation(line: 157, column: 30, scope: !13821, inlinedAt: !13799)
!13826 = !DILocation(line: 157, column: 6, scope: !13795, inlinedAt: !13799)
!13827 = !DILocation(line: 158, column: 3, scope: !13828, inlinedAt: !13799)
!13828 = distinct !DILexicalBlock(scope: !13821, file: !3514, line: 157, column: 50)
!13829 = !DILocation(line: 161, column: 2, scope: !13795, inlinedAt: !13799)
!13830 = !DILocation(line: 162, column: 1, scope: !13795, inlinedAt: !13799)
!13831 = !DILocation(line: 564, column: 6, scope: !13771)
!13832 = !DILocation(line: 566, column: 7, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !3514, line: 566, column: 7)
!13834 = distinct !DILexicalBlock(scope: !13792, file: !3514, line: 564, column: 42)
!13835 = !DILocation(line: 566, column: 17, scope: !13833)
!13836 = !DILocation(line: 566, column: 14, scope: !13833)
!13837 = !DILocation(line: 566, column: 7, scope: !13834)
!13838 = !DILocation(line: 567, column: 23, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13833, file: !3514, line: 566, column: 27)
!13840 = !DILocation(line: 567, column: 4, scope: !13839)
!13841 = !DILocation(line: 568, column: 3, scope: !13839)
!13842 = !DILocation(line: 570, column: 26, scope: !13834)
!13843 = !DILocation(line: 570, column: 3, scope: !13834)
!13844 = !DILocation(line: 571, column: 27, scope: !13834)
!13845 = !DILocation(line: 571, column: 25, scope: !13834)
!13846 = !DILocation(line: 572, column: 2, scope: !13834)
!13847 = !DILocation(line: 573, column: 27, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13792, file: !3514, line: 572, column: 9)
!13849 = !DILocation(line: 573, column: 25, scope: !13848)
!13850 = !DILocation(line: 585, column: 1, scope: !13771)
!13851 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3514, file: !3514, line: 1144, type: !13852, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13852 = !DISubroutineType(types: !13853)
!13853 = !{!3415, !13629}
!13854 = !DILocalVariable(name: "pq", arg: 1, scope: !13851, file: !3514, line: 1144, type: !13629)
!13855 = !DILocation(line: 1144, column: 48, scope: !13851)
!13856 = !DILocalVariable(name: "thread", scope: !13851, file: !3514, line: 1146, type: !3415)
!13857 = !DILocation(line: 1146, column: 19, scope: !13851)
!13858 = !DILocalVariable(name: "n", scope: !13851, file: !3514, line: 1147, type: !3510)
!13859 = !DILocation(line: 1147, column: 15, scope: !13851)
!13860 = !DILocation(line: 1147, column: 39, scope: !13851)
!13861 = !DILocation(line: 1147, column: 19, scope: !13851)
!13862 = !DILocation(line: 1149, column: 6, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13851, file: !3514, line: 1149, column: 6)
!13864 = !DILocation(line: 1149, column: 8, scope: !13863)
!13865 = !DILocation(line: 1149, column: 6, scope: !13851)
!13866 = !DILocation(line: 1150, column: 12, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13863, file: !3514, line: 1149, column: 17)
!13868 = !DILocation(line: 1150, column: 10, scope: !13867)
!13869 = !DILocation(line: 1151, column: 2, scope: !13867)
!13870 = !DILocation(line: 1152, column: 9, scope: !13851)
!13871 = !DILocation(line: 1152, column: 2, scope: !13851)
!13872 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11993, file: !11993, line: 115, type: !13507, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13873 = !DILocalVariable(name: "thread", arg: 1, scope: !13872, file: !11993, line: 115, type: !3415)
!13874 = !DILocation(line: 115, column: 64, scope: !13872)
!13875 = !DILocation(line: 117, column: 33, scope: !13872)
!13876 = !DILocation(line: 117, column: 41, scope: !13872)
!13877 = !DILocation(line: 117, column: 46, scope: !13872)
!13878 = !DILocation(line: 117, column: 10, scope: !13872)
!13879 = !DILocation(line: 117, column: 9, scope: !13872)
!13880 = !DILocation(line: 117, column: 2, scope: !13872)
!13881 = distinct !DISubprogram(name: "is_preempt", scope: !3514, file: !3514, line: 62, type: !13148, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13882 = !DILocalVariable(name: "thread", arg: 1, scope: !13881, file: !3514, line: 62, type: !3415)
!13883 = !DILocation(line: 62, column: 47, scope: !13881)
!13884 = !DILocation(line: 65, column: 9, scope: !13881)
!13885 = !DILocation(line: 65, column: 17, scope: !13881)
!13886 = !DILocation(line: 65, column: 22, scope: !13881)
!13887 = !DILocation(line: 65, column: 30, scope: !13881)
!13888 = !DILocation(line: 65, column: 2, scope: !13881)
!13889 = distinct !DISubprogram(name: "is_metairq", scope: !3514, file: !3514, line: 68, type: !13148, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13890 = !DILocalVariable(name: "thread", arg: 1, scope: !13889, file: !3514, line: 68, type: !3415)
!13891 = !DILocation(line: 68, column: 47, scope: !13889)
!13892 = !DILocation(line: 74, column: 2, scope: !13889)
!13893 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !3514, file: !3514, line: 545, type: !13127, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13894 = !DILocalVariable(name: "thread", arg: 1, scope: !13893, file: !3514, line: 545, type: !3415)
!13895 = !DILocation(line: 545, column: 53, scope: !13893)
!13896 = !DILocation(line: 557, column: 1, scope: !13893)
!13897 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12592, file: !12592, line: 35, type: !13898, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!1035, !13900}
!13900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13901, size: 32)
!13901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!13902 = !DILocalVariable(name: "to", arg: 1, scope: !13897, file: !12592, line: 35, type: !13900)
!13903 = !DILocation(line: 35, column: 65, scope: !13897)
!13904 = !DILocation(line: 37, column: 31, scope: !13897)
!13905 = !DILocation(line: 37, column: 35, scope: !13897)
!13906 = !DILocation(line: 37, column: 10, scope: !13897)
!13907 = !DILocation(line: 37, column: 9, scope: !13897)
!13908 = !DILocation(line: 37, column: 2, scope: !13897)
!13909 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !13910, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{!1035, !13912}
!13912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13913, size: 32)
!13913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3425)
!13914 = !DILocalVariable(name: "node", arg: 1, scope: !13909, file: !124, line: 225, type: !13912)
!13915 = !DILocation(line: 225, column: 59, scope: !13909)
!13916 = !DILocation(line: 227, column: 9, scope: !13909)
!13917 = !DILocation(line: 227, column: 15, scope: !13909)
!13918 = !DILocation(line: 227, column: 20, scope: !13909)
!13919 = !DILocation(line: 227, column: 2, scope: !13909)
!13920 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !13730, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13921 = !DILocalVariable(name: "list", arg: 1, scope: !13920, file: !124, line: 325, type: !13629)
!13922 = !DILocation(line: 325, column: 70, scope: !13920)
!13923 = !DILocalVariable(name: "node", arg: 2, scope: !13920, file: !124, line: 326, type: !3510)
!13924 = !DILocation(line: 326, column: 21, scope: !13920)
!13925 = !DILocation(line: 328, column: 10, scope: !13920)
!13926 = !DILocation(line: 328, column: 18, scope: !13920)
!13927 = !DILocation(line: 328, column: 24, scope: !13920)
!13928 = !DILocation(line: 328, column: 15, scope: !13920)
!13929 = !DILocation(line: 328, column: 9, scope: !13920)
!13930 = !DILocation(line: 328, column: 39, scope: !13920)
!13931 = !DILocation(line: 328, column: 45, scope: !13920)
!13932 = !DILocation(line: 328, column: 2, scope: !13920)
!13933 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !13934, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{!1035, !13629}
!13936 = !DILocalVariable(name: "list", arg: 1, scope: !13933, file: !124, line: 266, type: !13629)
!13937 = !DILocation(line: 266, column: 52, scope: !13933)
!13938 = !DILocation(line: 268, column: 9, scope: !13933)
!13939 = !DILocation(line: 268, column: 15, scope: !13933)
!13940 = !DILocation(line: 268, column: 23, scope: !13933)
!13941 = !DILocation(line: 268, column: 20, scope: !13933)
!13942 = !DILocation(line: 268, column: 2, scope: !13933)
!13943 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !13944, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{null, !3510}
!13946 = !DILocalVariable(name: "node", arg: 1, scope: !13943, file: !124, line: 496, type: !3510)
!13947 = !DILocation(line: 496, column: 50, scope: !13943)
!13948 = !DILocalVariable(name: "prev", scope: !13943, file: !124, line: 498, type: !13708)
!13949 = !DILocation(line: 498, column: 21, scope: !13943)
!13950 = !DILocation(line: 498, column: 28, scope: !13943)
!13951 = !DILocation(line: 498, column: 34, scope: !13943)
!13952 = !DILocalVariable(name: "next", scope: !13943, file: !124, line: 499, type: !13708)
!13953 = !DILocation(line: 499, column: 21, scope: !13943)
!13954 = !DILocation(line: 499, column: 28, scope: !13943)
!13955 = !DILocation(line: 499, column: 34, scope: !13943)
!13956 = !DILocation(line: 501, column: 15, scope: !13943)
!13957 = !DILocation(line: 501, column: 2, scope: !13943)
!13958 = !DILocation(line: 501, column: 8, scope: !13943)
!13959 = !DILocation(line: 501, column: 13, scope: !13943)
!13960 = !DILocation(line: 502, column: 15, scope: !13943)
!13961 = !DILocation(line: 502, column: 2, scope: !13943)
!13962 = !DILocation(line: 502, column: 8, scope: !13943)
!13963 = !DILocation(line: 502, column: 13, scope: !13943)
!13964 = !DILocation(line: 503, column: 17, scope: !13943)
!13965 = !DILocation(line: 503, column: 2, scope: !13943)
!13966 = !DILocation(line: 504, column: 1, scope: !13943)
!13967 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !13944, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13968 = !DILocalVariable(name: "node", arg: 1, scope: !13967, file: !124, line: 211, type: !3510)
!13969 = !DILocation(line: 211, column: 48, scope: !13967)
!13970 = !DILocation(line: 213, column: 2, scope: !13967)
!13971 = !DILocation(line: 213, column: 8, scope: !13967)
!13972 = !DILocation(line: 213, column: 13, scope: !13967)
!13973 = !DILocation(line: 214, column: 2, scope: !13967)
!13974 = !DILocation(line: 214, column: 8, scope: !13967)
!13975 = !DILocation(line: 214, column: 13, scope: !13967)
!13976 = !DILocation(line: 215, column: 1, scope: !13967)
!13977 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11993, file: !11993, line: 131, type: !13978, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{!1035, !3415, !173}
!13980 = !DILocalVariable(name: "thread", arg: 1, scope: !13977, file: !11993, line: 131, type: !3415)
!13981 = !DILocation(line: 131, column: 59, scope: !13977)
!13982 = !DILocalVariable(name: "state", arg: 2, scope: !13977, file: !11993, line: 131, type: !173)
!13983 = !DILocation(line: 131, column: 76, scope: !13977)
!13984 = !DILocation(line: 133, column: 10, scope: !13977)
!13985 = !DILocation(line: 133, column: 18, scope: !13977)
!13986 = !DILocation(line: 133, column: 23, scope: !13977)
!13987 = !DILocation(line: 133, column: 38, scope: !13977)
!13988 = !DILocation(line: 133, column: 36, scope: !13977)
!13989 = !DILocation(line: 133, column: 45, scope: !13977)
!13990 = !DILocation(line: 133, column: 2, scope: !13977)
!13991 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11993, file: !11993, line: 211, type: !13992, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{!1035, !103, !103}
!13994 = !DILocalVariable(name: "prio", arg: 1, scope: !13991, file: !11993, line: 211, type: !103)
!13995 = !DILocation(line: 211, column: 41, scope: !13991)
!13996 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13991, file: !11993, line: 211, type: !103)
!13997 = !DILocation(line: 211, column: 51, scope: !13991)
!13998 = !DILocation(line: 213, column: 38, scope: !13991)
!13999 = !DILocation(line: 213, column: 44, scope: !13991)
!14000 = !DILocation(line: 213, column: 9, scope: !13991)
!14001 = !DILocation(line: 213, column: 2, scope: !13991)
!14002 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11993, file: !11993, line: 83, type: !13507, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14003 = !DILocalVariable(name: "thread", arg: 1, scope: !14002, file: !11993, line: 83, type: !3415)
!14004 = !DILocation(line: 83, column: 61, scope: !14002)
!14005 = !DILocation(line: 89, column: 9, scope: !14002)
!14006 = !DILocation(line: 89, column: 16, scope: !14002)
!14007 = !DILocation(line: 89, column: 2, scope: !14002)
!14008 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11993, file: !11993, line: 206, type: !13992, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14009 = !DILocalVariable(name: "prio1", arg: 1, scope: !14008, file: !11993, line: 206, type: !103)
!14010 = !DILocation(line: 206, column: 53, scope: !14008)
!14011 = !DILocalVariable(name: "prio2", arg: 2, scope: !14008, file: !11993, line: 206, type: !103)
!14012 = !DILocation(line: 206, column: 64, scope: !14008)
!14013 = !DILocation(line: 208, column: 9, scope: !14008)
!14014 = !DILocation(line: 208, column: 17, scope: !14008)
!14015 = !DILocation(line: 208, column: 15, scope: !14008)
!14016 = !DILocation(line: 208, column: 2, scope: !14008)
!14017 = distinct !DISubprogram(name: "z_ready_thread", scope: !3514, file: !3514, line: 635, type: !13127, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14018 = !DILocalVariable(name: "thread", arg: 1, scope: !14017, file: !3514, line: 635, type: !3415)
!14019 = !DILocation(line: 635, column: 38, scope: !14017)
!14020 = !DILocalVariable(name: "__i", scope: !14021, file: !3514, line: 637, type: !13166)
!14021 = distinct !DILexicalBlock(scope: !14017, file: !3514, line: 637, column: 2)
!14022 = !DILocation(line: 637, column: 2, scope: !14021)
!14023 = !DILocalVariable(name: "__key", scope: !14021, file: !3514, line: 637, type: !13166)
!14024 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14025)
!14025 = distinct !DILocation(line: 637, column: 2, scope: !14021)
!14026 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14025)
!14027 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14025)
!14028 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14029)
!14029 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14025)
!14030 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14029)
!14031 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14029)
!14032 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14025)
!14033 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14025)
!14034 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14025)
!14035 = !DILocation(line: 637, column: 2, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14021, file: !3514, line: 637, column: 2)
!14037 = !DILocation(line: 638, column: 32, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !3514, line: 638, column: 7)
!14039 = distinct !DILexicalBlock(scope: !14036, file: !3514, line: 637, column: 26)
!14040 = !DILocation(line: 638, column: 8, scope: !14038)
!14041 = !DILocation(line: 638, column: 7, scope: !14039)
!14042 = !DILocation(line: 639, column: 17, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14038, file: !3514, line: 638, column: 41)
!14044 = !DILocation(line: 639, column: 4, scope: !14043)
!14045 = !DILocation(line: 640, column: 3, scope: !14043)
!14046 = !DILocation(line: 641, column: 2, scope: !14039)
!14047 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 637, column: 2, scope: !14036)
!14049 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14048)
!14050 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14048)
!14051 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14048)
!14052 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14048)
!14054 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14053)
!14055 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14053)
!14056 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14053)
!14057 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14053)
!14058 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14053)
!14059 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14053)
!14060 = distinct !{!14060, !14022, !14061}
!14061 = !DILocation(line: 641, column: 2, scope: !14021)
!14062 = !DILocation(line: 642, column: 1, scope: !14017)
!14063 = distinct !DISubprogram(name: "thread_active_elsewhere", scope: !3514, file: !3514, line: 587, type: !13507, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14064 = !DILocalVariable(name: "thread", arg: 1, scope: !14063, file: !3514, line: 587, type: !3415)
!14065 = !DILocation(line: 587, column: 54, scope: !14063)
!14066 = !DILocation(line: 605, column: 2, scope: !14063)
!14067 = distinct !DISubprogram(name: "ready_thread", scope: !3514, file: !3514, line: 617, type: !13127, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14068 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !3514, line: 617, type: !3415)
!14069 = !DILocation(line: 617, column: 43, scope: !14067)
!14070 = !DILocation(line: 626, column: 26, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14067, file: !3514, line: 626, column: 6)
!14072 = !DILocation(line: 626, column: 7, scope: !14071)
!14073 = !DILocation(line: 626, column: 34, scope: !14071)
!14074 = !DILocation(line: 626, column: 55, scope: !14071)
!14075 = !DILocation(line: 626, column: 37, scope: !14071)
!14076 = !DILocation(line: 626, column: 6, scope: !14067)
!14077 = !DILocation(line: 627, column: 3, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14071, file: !3514, line: 626, column: 64)
!14079 = !DILocation(line: 627, column: 3, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14078, file: !3514, line: 627, column: 3)
!14081 = !DILocation(line: 629, column: 16, scope: !14078)
!14082 = !DILocation(line: 250, column: 57, scope: !13604, inlinedAt: !14083)
!14083 = distinct !DILocation(line: 629, column: 3, scope: !14078)
!14084 = !DILocation(line: 252, column: 2, scope: !13604, inlinedAt: !14083)
!14085 = !DILocation(line: 252, column: 10, scope: !13604, inlinedAt: !14083)
!14086 = !DILocation(line: 252, column: 15, scope: !13604, inlinedAt: !14083)
!14087 = !DILocation(line: 252, column: 28, scope: !13604, inlinedAt: !14083)
!14088 = !DILocation(line: 253, column: 26, scope: !13612, inlinedAt: !14083)
!14089 = !DILocation(line: 253, column: 6, scope: !13612, inlinedAt: !14083)
!14090 = !DILocation(line: 253, column: 6, scope: !13604, inlinedAt: !14083)
!14091 = !DILocation(line: 254, column: 12, scope: !13616, inlinedAt: !14083)
!14092 = !DILocation(line: 227, column: 53, scope: !13618, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 254, column: 3, scope: !13616, inlinedAt: !14083)
!14094 = !DILocation(line: 229, column: 28, scope: !13618, inlinedAt: !14093)
!14095 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !14096)
!14096 = distinct !DILocation(line: 229, column: 16, scope: !13618, inlinedAt: !14093)
!14097 = !DILocation(line: 229, column: 37, scope: !13618, inlinedAt: !14093)
!14098 = !DILocation(line: 181, column: 56, scope: !13626, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 229, column: 2, scope: !13618, inlinedAt: !14093)
!14100 = !DILocation(line: 182, column: 25, scope: !13626, inlinedAt: !14099)
!14101 = !DILocation(line: 184, column: 19, scope: !13626, inlinedAt: !14099)
!14102 = !DILocation(line: 188, column: 2, scope: !13637, inlinedAt: !14099)
!14103 = !DILocation(line: 188, column: 2, scope: !13639, inlinedAt: !14099)
!14104 = !DILocation(line: 189, column: 24, scope: !13641, inlinedAt: !14099)
!14105 = !DILocation(line: 189, column: 32, scope: !13641, inlinedAt: !14099)
!14106 = !DILocation(line: 189, column: 7, scope: !13641, inlinedAt: !14099)
!14107 = !DILocation(line: 189, column: 35, scope: !13641, inlinedAt: !14099)
!14108 = !DILocation(line: 189, column: 7, scope: !13642, inlinedAt: !14099)
!14109 = !DILocation(line: 190, column: 22, scope: !13648, inlinedAt: !14099)
!14110 = !DILocation(line: 190, column: 25, scope: !13648, inlinedAt: !14099)
!14111 = !DILocation(line: 190, column: 30, scope: !13648, inlinedAt: !14099)
!14112 = !DILocation(line: 191, column: 8, scope: !13648, inlinedAt: !14099)
!14113 = !DILocation(line: 191, column: 16, scope: !13648, inlinedAt: !14099)
!14114 = !DILocation(line: 191, column: 21, scope: !13648, inlinedAt: !14099)
!14115 = !DILocation(line: 190, column: 4, scope: !13648, inlinedAt: !14099)
!14116 = !DILocation(line: 192, column: 4, scope: !13648, inlinedAt: !14099)
!14117 = distinct !{!14117, !14102, !14118}
!14118 = !DILocation(line: 194, column: 2, scope: !13637, inlinedAt: !14099)
!14119 = !DILocation(line: 196, column: 19, scope: !13626, inlinedAt: !14099)
!14120 = !DILocation(line: 196, column: 24, scope: !13626, inlinedAt: !14099)
!14121 = !DILocation(line: 196, column: 32, scope: !13626, inlinedAt: !14099)
!14122 = !DILocation(line: 196, column: 37, scope: !13626, inlinedAt: !14099)
!14123 = !DILocation(line: 196, column: 2, scope: !13626, inlinedAt: !14099)
!14124 = !DILocation(line: 197, column: 1, scope: !13626, inlinedAt: !14099)
!14125 = !DILocation(line: 255, column: 2, scope: !13616, inlinedAt: !14083)
!14126 = !DILocation(line: 630, column: 3, scope: !14078)
!14127 = !DILocation(line: 631, column: 3, scope: !14078)
!14128 = !DILocation(line: 632, column: 2, scope: !14078)
!14129 = !DILocation(line: 633, column: 1, scope: !14067)
!14130 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11993, file: !11993, line: 120, type: !13507, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14131 = !DILocalVariable(name: "thread", arg: 1, scope: !14130, file: !11993, line: 120, type: !3415)
!14132 = !DILocation(line: 120, column: 55, scope: !14130)
!14133 = !DILocation(line: 122, column: 47, scope: !14130)
!14134 = !DILocation(line: 122, column: 12, scope: !14130)
!14135 = !DILocation(line: 122, column: 11, scope: !14130)
!14136 = !DILocation(line: 122, column: 56, scope: !14130)
!14137 = !DILocation(line: 122, column: 62, scope: !14130)
!14138 = !DILocation(line: 123, column: 31, scope: !14130)
!14139 = !DILocation(line: 123, column: 4, scope: !14130)
!14140 = !DILocation(line: 122, column: 9, scope: !14130)
!14141 = !DILocation(line: 122, column: 2, scope: !14130)
!14142 = distinct !DISubprogram(name: "flag_ipi", scope: !3514, file: !3514, line: 608, type: !253, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14143 = !DILocation(line: 615, column: 1, scope: !14142)
!14144 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3514, file: !3514, line: 644, type: !13127, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14145 = !DILocalVariable(name: "thread", arg: 1, scope: !14144, file: !3514, line: 644, type: !3415)
!14146 = !DILocation(line: 644, column: 54, scope: !14144)
!14147 = !DILocalVariable(name: "__i", scope: !14148, file: !3514, line: 646, type: !13166)
!14148 = distinct !DILexicalBlock(scope: !14144, file: !3514, line: 646, column: 2)
!14149 = !DILocation(line: 646, column: 2, scope: !14148)
!14150 = !DILocalVariable(name: "__key", scope: !14148, file: !3514, line: 646, type: !13166)
!14151 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 646, column: 2, scope: !14148)
!14153 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14152)
!14154 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14152)
!14155 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14152)
!14157 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14156)
!14158 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14156)
!14159 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14152)
!14160 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14152)
!14161 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14152)
!14162 = !DILocation(line: 646, column: 2, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14148, file: !3514, line: 646, column: 2)
!14164 = !DILocation(line: 647, column: 32, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14163, file: !3514, line: 646, column: 26)
!14166 = !DILocation(line: 647, column: 3, scope: !14165)
!14167 = !DILocation(line: 648, column: 2, scope: !14165)
!14168 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14169)
!14169 = distinct !DILocation(line: 646, column: 2, scope: !14163)
!14170 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14169)
!14171 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14169)
!14172 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14169)
!14173 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14169)
!14175 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14174)
!14176 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14174)
!14177 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14174)
!14178 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14174)
!14179 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14174)
!14180 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14174)
!14181 = distinct !{!14181, !14149, !14182}
!14182 = !DILocation(line: 648, column: 2, scope: !14148)
!14183 = !DILocation(line: 649, column: 1, scope: !14144)
!14184 = distinct !DISubprogram(name: "z_sched_start", scope: !3514, file: !3514, line: 651, type: !13127, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14185 = !DILocalVariable(name: "thread", arg: 1, scope: !14184, file: !3514, line: 651, type: !3415)
!14186 = !DILocation(line: 651, column: 37, scope: !14184)
!14187 = !DILocalVariable(name: "key", scope: !14184, file: !3514, line: 653, type: !13166)
!14188 = !DILocation(line: 653, column: 19, scope: !14184)
!14189 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 653, column: 25, scope: !14184)
!14191 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14190)
!14192 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14190)
!14193 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14190)
!14195 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14194)
!14196 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14194)
!14197 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14190)
!14198 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14190)
!14199 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14190)
!14200 = !DILocation(line: 653, column: 25, scope: !14184)
!14201 = !DILocation(line: 655, column: 27, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14184, file: !3514, line: 655, column: 6)
!14203 = !DILocation(line: 655, column: 6, scope: !14202)
!14204 = !DILocation(line: 655, column: 6, scope: !14184)
!14205 = !DILocation(line: 656, column: 3, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14202, file: !3514, line: 655, column: 36)
!14207 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14208)
!14208 = distinct !DILocation(line: 656, column: 3, scope: !14206)
!14209 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14208)
!14210 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14208)
!14211 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14208)
!14212 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14208)
!14214 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14213)
!14215 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14213)
!14216 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14213)
!14217 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14213)
!14218 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14213)
!14219 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14213)
!14220 = !DILocation(line: 657, column: 3, scope: !14206)
!14221 = !DILocation(line: 660, column: 27, scope: !14184)
!14222 = !DILocation(line: 660, column: 2, scope: !14184)
!14223 = !DILocation(line: 661, column: 15, scope: !14184)
!14224 = !DILocation(line: 661, column: 2, scope: !14184)
!14225 = !DILocation(line: 662, column: 2, scope: !14184)
!14226 = !DILocation(line: 663, column: 1, scope: !14184)
!14227 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11993, file: !11993, line: 126, type: !13507, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14228 = !DILocalVariable(name: "thread", arg: 1, scope: !14227, file: !11993, line: 126, type: !3415)
!14229 = !DILocation(line: 126, column: 58, scope: !14227)
!14230 = !DILocation(line: 128, column: 10, scope: !14227)
!14231 = !DILocation(line: 128, column: 18, scope: !14227)
!14232 = !DILocation(line: 128, column: 23, scope: !14227)
!14233 = !DILocation(line: 128, column: 36, scope: !14227)
!14234 = !DILocation(line: 128, column: 56, scope: !14227)
!14235 = !DILocation(line: 128, column: 2, scope: !14227)
!14236 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11993, file: !11993, line: 155, type: !13127, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14237 = !DILocalVariable(name: "thread", arg: 1, scope: !14236, file: !11993, line: 155, type: !3415)
!14238 = !DILocation(line: 155, column: 62, scope: !14236)
!14239 = !DILocation(line: 157, column: 2, scope: !14236)
!14240 = !DILocation(line: 157, column: 10, scope: !14236)
!14241 = !DILocation(line: 157, column: 15, scope: !14236)
!14242 = !DILocation(line: 157, column: 28, scope: !14236)
!14243 = !DILocation(line: 158, column: 1, scope: !14236)
!14244 = distinct !DISubprogram(name: "z_reschedule", scope: !3514, file: !3514, line: 967, type: !13214, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14245 = !DILocalVariable(name: "lock", arg: 1, scope: !14244, file: !3514, line: 967, type: !13176)
!14246 = !DILocation(line: 967, column: 38, scope: !14244)
!14247 = !DILocalVariable(name: "key", arg: 2, scope: !14244, file: !3514, line: 967, type: !13166)
!14248 = !DILocation(line: 967, column: 61, scope: !14244)
!14249 = !DILocation(line: 969, column: 18, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14244, file: !3514, line: 969, column: 6)
!14251 = !DILocation(line: 969, column: 6, scope: !14250)
!14252 = !DILocation(line: 969, column: 23, scope: !14250)
!14253 = !DILocation(line: 969, column: 26, scope: !14250)
!14254 = !DILocation(line: 969, column: 6, scope: !14244)
!14255 = !DILocation(line: 970, column: 10, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14250, file: !3514, line: 969, column: 39)
!14257 = !DILocation(line: 970, column: 3, scope: !14256)
!14258 = !DILocalVariable(name: "lock", arg: 1, scope: !14259, file: !12159, line: 193, type: !13176)
!14259 = distinct !DISubprogram(name: "z_swap", scope: !12159, file: !12159, line: 193, type: !14260, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{!103, !13176, !13166}
!14262 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 970, column: 3, scope: !14256)
!14264 = !DILocalVariable(name: "key", arg: 2, scope: !14259, file: !12159, line: 193, type: !13166)
!14265 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !14263)
!14266 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !14263)
!14267 = !DILocalVariable(name: "l", arg: 1, scope: !14268, file: !222, line: 221, type: !13176)
!14268 = distinct !DISubprogram(name: "k_spin_release", scope: !222, file: !222, line: 221, type: !14269, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14269 = !DISubroutineType(types: !14270)
!14270 = !{null, !13176}
!14271 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !14272)
!14272 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !14263)
!14273 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !14272)
!14274 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !14263)
!14275 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !14263)
!14276 = !DILocation(line: 971, column: 2, scope: !14256)
!14277 = !DILocation(line: 972, column: 17, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14250, file: !3514, line: 971, column: 9)
!14279 = !DILocation(line: 972, column: 3, scope: !14278)
!14280 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14281)
!14281 = distinct !DILocation(line: 972, column: 3, scope: !14278)
!14282 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14281)
!14283 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14281)
!14284 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14281)
!14285 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14286)
!14286 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14281)
!14287 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14286)
!14288 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14286)
!14289 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14286)
!14290 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14286)
!14291 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14286)
!14292 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14286)
!14293 = !DILocation(line: 973, column: 3, scope: !14278)
!14294 = !DILocation(line: 975, column: 1, scope: !14244)
!14295 = distinct !DISubprogram(name: "resched", scope: !3514, file: !3514, line: 940, type: !14296, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{!1035, !173}
!14298 = !DILocalVariable(name: "key", arg: 1, scope: !14295, file: !3514, line: 940, type: !173)
!14299 = !DILocation(line: 940, column: 37, scope: !14295)
!14300 = !DILocation(line: 946, column: 27, scope: !14295)
!14301 = !DILocalVariable(name: "key", arg: 1, scope: !14302, file: !6626, line: 112, type: !32)
!14302 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6626, file: !6626, line: 112, type: !14303, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14303 = !DISubroutineType(types: !14304)
!14304 = !{!1035, !32}
!14305 = !DILocation(line: 112, column: 58, scope: !14302, inlinedAt: !14306)
!14306 = distinct !DILocation(line: 946, column: 9, scope: !14295)
!14307 = !DILocation(line: 115, column: 9, scope: !14302, inlinedAt: !14306)
!14308 = !DILocation(line: 115, column: 13, scope: !14302, inlinedAt: !14306)
!14309 = !DILocation(line: 946, column: 32, scope: !14295)
!14310 = !DILocalVariable(name: "result", scope: !14311, file: !6949, line: 1029, type: !173)
!14311 = distinct !DISubprogram(name: "__get_IPSR", scope: !6949, file: !6949, line: 1027, type: !7731, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14312 = !DILocation(line: 1029, column: 12, scope: !14311, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 48, column: 10, scope: !14314, inlinedAt: !14315)
!14314 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7736, file: !7736, line: 46, type: !4065, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14315 = distinct !DILocation(line: 946, column: 36, scope: !14295)
!14316 = !DILocation(line: 1031, column: 3, scope: !14311, inlinedAt: !14313)
!14317 = !{i64 2401868}
!14318 = !DILocation(line: 1032, column: 10, scope: !14311, inlinedAt: !14313)
!14319 = !DILocation(line: 48, column: 9, scope: !14314, inlinedAt: !14315)
!14320 = !DILocation(line: 946, column: 35, scope: !14295)
!14321 = !DILocation(line: 0, scope: !14295)
!14322 = !DILocation(line: 946, column: 2, scope: !14295)
!14323 = distinct !DISubprogram(name: "need_swap", scope: !3514, file: !3514, line: 953, type: !4065, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14324 = !DILocalVariable(name: "new_thread", scope: !14323, file: !3514, line: 959, type: !3415)
!14325 = !DILocation(line: 959, column: 19, scope: !14323)
!14326 = !DILocation(line: 962, column: 31, scope: !14323)
!14327 = !DILocation(line: 962, column: 13, scope: !14323)
!14328 = !DILocation(line: 963, column: 9, scope: !14323)
!14329 = !DILocation(line: 963, column: 23, scope: !14323)
!14330 = !DILocation(line: 963, column: 20, scope: !14323)
!14331 = !DILocation(line: 963, column: 2, scope: !14323)
!14332 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12159, file: !12159, line: 181, type: !6959, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14333 = !DILocalVariable(name: "key", arg: 1, scope: !14332, file: !12159, line: 181, type: !32)
!14334 = !DILocation(line: 181, column: 47, scope: !14332)
!14335 = !DILocalVariable(name: "ret", scope: !14332, file: !12159, line: 183, type: !103)
!14336 = !DILocation(line: 183, column: 6, scope: !14332)
!14337 = !DILocation(line: 185, column: 18, scope: !14332)
!14338 = !DILocation(line: 185, column: 8, scope: !14332)
!14339 = !DILocation(line: 185, column: 6, scope: !14332)
!14340 = !DILocation(line: 186, column: 9, scope: !14332)
!14341 = !DILocation(line: 186, column: 2, scope: !14332)
!14342 = distinct !DISubprogram(name: "signal_pending_ipi", scope: !3514, file: !3514, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14343 = !DILocation(line: 289, column: 1, scope: !14342)
!14344 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3514, file: !3514, line: 665, type: !13127, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14345 = !DILocalVariable(name: "thread", arg: 1, scope: !14344, file: !3514, line: 665, type: !3415)
!14346 = !DILocation(line: 665, column: 47, scope: !14344)
!14347 = !DILocation(line: 667, column: 2, scope: !14344)
!14348 = !DILocation(line: 667, column: 2, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14344, file: !3514, line: 667, column: 2)
!14350 = !DILocation(line: 669, column: 31, scope: !14344)
!14351 = !DILocation(line: 669, column: 8, scope: !14344)
!14352 = !DILocalVariable(name: "__i", scope: !14353, file: !3514, line: 671, type: !13166)
!14353 = distinct !DILexicalBlock(scope: !14344, file: !3514, line: 671, column: 2)
!14354 = !DILocation(line: 671, column: 2, scope: !14353)
!14355 = !DILocalVariable(name: "__key", scope: !14353, file: !3514, line: 671, type: !13166)
!14356 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14357)
!14357 = distinct !DILocation(line: 671, column: 2, scope: !14353)
!14358 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14357)
!14359 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14357)
!14360 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14361)
!14361 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14357)
!14362 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14361)
!14363 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14361)
!14364 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14357)
!14365 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14357)
!14366 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14357)
!14367 = !DILocation(line: 671, column: 2, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14353, file: !3514, line: 671, column: 2)
!14369 = !DILocation(line: 672, column: 26, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !3514, line: 672, column: 7)
!14371 = distinct !DILexicalBlock(scope: !14368, file: !3514, line: 671, column: 26)
!14372 = !DILocation(line: 672, column: 7, scope: !14370)
!14373 = !DILocation(line: 672, column: 7, scope: !14371)
!14374 = !DILocation(line: 673, column: 19, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14370, file: !3514, line: 672, column: 35)
!14376 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 673, column: 4, scope: !14375)
!14378 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !14377)
!14379 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !14377)
!14380 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !14377)
!14381 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !14377)
!14382 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !14377)
!14383 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !14377)
!14384 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !14377)
!14385 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !14377)
!14386 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !14377)
!14388 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !14387)
!14389 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !14390)
!14390 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !14387)
!14391 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !14387)
!14392 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !14387)
!14393 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !14387)
!14394 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !14377)
!14395 = !DILocation(line: 674, column: 3, scope: !14375)
!14396 = !DILocation(line: 675, column: 30, scope: !14371)
!14397 = !DILocation(line: 675, column: 3, scope: !14371)
!14398 = !DILocation(line: 676, column: 16, scope: !14371)
!14399 = !DILocation(line: 676, column: 26, scope: !14371)
!14400 = !DILocation(line: 676, column: 23, scope: !14371)
!14401 = !DILocation(line: 676, column: 3, scope: !14371)
!14402 = !DILocation(line: 677, column: 2, scope: !14371)
!14403 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14404)
!14404 = distinct !DILocation(line: 671, column: 2, scope: !14368)
!14405 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14404)
!14406 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14404)
!14407 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14404)
!14408 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14404)
!14410 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14409)
!14411 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14409)
!14412 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14409)
!14413 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14409)
!14414 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14409)
!14415 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14409)
!14416 = distinct !{!14416, !14354, !14417}
!14417 = !DILocation(line: 677, column: 2, scope: !14353)
!14418 = !DILocation(line: 679, column: 6, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14344, file: !3514, line: 679, column: 6)
!14420 = !DILocation(line: 679, column: 16, scope: !14419)
!14421 = !DILocation(line: 679, column: 13, scope: !14419)
!14422 = !DILocation(line: 679, column: 6, scope: !14344)
!14423 = !DILocation(line: 680, column: 3, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14419, file: !3514, line: 679, column: 26)
!14425 = !DILocation(line: 681, column: 2, scope: !14424)
!14426 = !DILocation(line: 683, column: 2, scope: !14344)
!14427 = !DILocation(line: 683, column: 2, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14344, file: !3514, line: 683, column: 2)
!14429 = !DILocation(line: 684, column: 1, scope: !14344)
!14430 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12592, file: !12592, line: 52, type: !13148, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14431 = !DILocalVariable(name: "thread", arg: 1, scope: !14430, file: !12592, line: 52, type: !3415)
!14432 = !DILocation(line: 52, column: 59, scope: !14430)
!14433 = !DILocation(line: 54, column: 26, scope: !14430)
!14434 = !DILocation(line: 54, column: 34, scope: !14430)
!14435 = !DILocation(line: 54, column: 39, scope: !14430)
!14436 = !DILocation(line: 54, column: 9, scope: !14430)
!14437 = !DILocation(line: 54, column: 2, scope: !14430)
!14438 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11993, file: !11993, line: 141, type: !13127, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14438, file: !11993, line: 141, type: !3415)
!14440 = !DILocation(line: 141, column: 64, scope: !14438)
!14441 = !DILocation(line: 143, column: 2, scope: !14438)
!14442 = !DILocation(line: 143, column: 10, scope: !14438)
!14443 = !DILocation(line: 143, column: 15, scope: !14438)
!14444 = !DILocation(line: 143, column: 28, scope: !14438)
!14445 = !DILocation(line: 145, column: 2, scope: !14438)
!14446 = !DILocation(line: 145, column: 2, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14438, file: !11993, line: 145, column: 2)
!14448 = !DILocation(line: 146, column: 1, scope: !14438)
!14449 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11993, file: !11993, line: 73, type: !253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14450 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14451)
!14451 = distinct !DILocation(line: 75, column: 30, scope: !14449)
!14452 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14451)
!14453 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14451)
!14454 = !DILocation(line: 75, column: 9, scope: !14449)
!14455 = !DILocation(line: 76, column: 1, scope: !14449)
!14456 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3514, file: !3514, line: 977, type: !12020, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14457 = !DILocalVariable(name: "key", arg: 1, scope: !14456, file: !3514, line: 977, type: !173)
!14458 = !DILocation(line: 977, column: 36, scope: !14456)
!14459 = !DILocation(line: 979, column: 14, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !3514, line: 979, column: 6)
!14461 = !DILocation(line: 979, column: 6, scope: !14460)
!14462 = !DILocation(line: 979, column: 6, scope: !14456)
!14463 = !DILocation(line: 980, column: 18, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14460, file: !3514, line: 979, column: 20)
!14465 = !DILocation(line: 980, column: 3, scope: !14464)
!14466 = !DILocation(line: 981, column: 2, scope: !14464)
!14467 = !DILocation(line: 982, column: 3, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14460, file: !3514, line: 981, column: 9)
!14469 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14470)
!14470 = distinct !DILocation(line: 982, column: 3, scope: !14468)
!14471 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14470)
!14472 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14470)
!14473 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14470)
!14474 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14470)
!14475 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14470)
!14476 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14470)
!14477 = !DILocation(line: 983, column: 3, scope: !14468)
!14478 = !DILocation(line: 985, column: 1, scope: !14456)
!14479 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3514, file: !3514, line: 695, type: !13127, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14480 = !DILocalVariable(name: "thread", arg: 1, scope: !14479, file: !3514, line: 695, type: !3415)
!14481 = !DILocation(line: 695, column: 46, scope: !14479)
!14482 = !DILocation(line: 697, column: 2, scope: !14479)
!14483 = !DILocation(line: 697, column: 2, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14479, file: !3514, line: 697, column: 2)
!14485 = !DILocalVariable(name: "key", scope: !14479, file: !3514, line: 699, type: !13166)
!14486 = !DILocation(line: 699, column: 19, scope: !14479)
!14487 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 699, column: 25, scope: !14479)
!14489 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14488)
!14490 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14488)
!14491 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14492)
!14492 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14488)
!14493 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14492)
!14494 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14492)
!14495 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14488)
!14496 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14488)
!14497 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14488)
!14498 = !DILocation(line: 699, column: 25, scope: !14479)
!14499 = !DILocation(line: 702, column: 29, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14479, file: !3514, line: 702, column: 6)
!14501 = !DILocation(line: 702, column: 7, scope: !14500)
!14502 = !DILocation(line: 702, column: 6, scope: !14479)
!14503 = !DILocation(line: 703, column: 3, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14500, file: !3514, line: 702, column: 38)
!14505 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 703, column: 3, scope: !14504)
!14507 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14506)
!14508 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14506)
!14509 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14506)
!14510 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14506)
!14512 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14511)
!14513 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14511)
!14514 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14511)
!14515 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14511)
!14516 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14511)
!14517 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14511)
!14518 = !DILocation(line: 704, column: 3, scope: !14504)
!14519 = !DILocation(line: 707, column: 33, scope: !14479)
!14520 = !DILocation(line: 707, column: 2, scope: !14479)
!14521 = !DILocation(line: 708, column: 15, scope: !14479)
!14522 = !DILocation(line: 708, column: 2, scope: !14479)
!14523 = !DILocation(line: 710, column: 2, scope: !14479)
!14524 = !DILocation(line: 712, column: 2, scope: !14479)
!14525 = !DILocation(line: 712, column: 2, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14479, file: !3514, line: 712, column: 2)
!14527 = !DILocation(line: 713, column: 1, scope: !14479)
!14528 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11993, file: !11993, line: 96, type: !13507, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14529 = !DILocalVariable(name: "thread", arg: 1, scope: !14528, file: !11993, line: 96, type: !3415)
!14530 = !DILocation(line: 96, column: 59, scope: !14528)
!14531 = !DILocation(line: 98, column: 10, scope: !14528)
!14532 = !DILocation(line: 98, column: 18, scope: !14528)
!14533 = !DILocation(line: 98, column: 23, scope: !14528)
!14534 = !DILocation(line: 98, column: 36, scope: !14528)
!14535 = !DILocation(line: 98, column: 57, scope: !14528)
!14536 = !DILocation(line: 98, column: 2, scope: !14528)
!14537 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11993, file: !11993, line: 148, type: !13127, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14538 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !11993, line: 148, type: !3415)
!14539 = !DILocation(line: 148, column: 68, scope: !14537)
!14540 = !DILocation(line: 150, column: 2, scope: !14537)
!14541 = !DILocation(line: 150, column: 10, scope: !14537)
!14542 = !DILocation(line: 150, column: 15, scope: !14537)
!14543 = !DILocation(line: 150, column: 28, scope: !14537)
!14544 = !DILocation(line: 152, column: 2, scope: !14537)
!14545 = !DILocation(line: 152, column: 2, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14537, file: !11993, line: 152, column: 2)
!14547 = !DILocation(line: 153, column: 1, scope: !14537)
!14548 = distinct !DISubprogram(name: "z_pend_thread", scope: !3514, file: !3514, line: 770, type: !14549, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14549 = !DISubroutineType(types: !14550)
!14550 = !{null, !3415, !3446, !14551}
!14551 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2816, line: 67, baseType: !14552)
!14552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2816, line: 65, size: 64, elements: !14553)
!14553 = !{!14554}
!14554 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14552, file: !2816, line: 66, baseType: !2815, size: 64)
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !3514, line: 770, type: !3415)
!14556 = !DILocation(line: 770, column: 37, scope: !14548)
!14557 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14548, file: !3514, line: 770, type: !3446)
!14558 = !DILocation(line: 770, column: 56, scope: !14548)
!14559 = !DILocalVariable(name: "timeout", arg: 3, scope: !14548, file: !3514, line: 771, type: !14551)
!14560 = !DILocation(line: 771, column: 18, scope: !14548)
!14561 = !DILocalVariable(name: "__i", scope: !14562, file: !3514, line: 774, type: !13166)
!14562 = distinct !DILexicalBlock(scope: !14548, file: !3514, line: 774, column: 2)
!14563 = !DILocation(line: 774, column: 2, scope: !14562)
!14564 = !DILocalVariable(name: "__key", scope: !14562, file: !3514, line: 774, type: !13166)
!14565 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14566)
!14566 = distinct !DILocation(line: 774, column: 2, scope: !14562)
!14567 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14566)
!14568 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14566)
!14569 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14566)
!14571 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14570)
!14572 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14570)
!14573 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14566)
!14574 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14566)
!14575 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14566)
!14576 = !DILocation(line: 774, column: 2, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14562, file: !3514, line: 774, column: 2)
!14578 = !DILocation(line: 775, column: 15, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14577, file: !3514, line: 774, column: 26)
!14580 = !DILocation(line: 775, column: 23, scope: !14579)
!14581 = !DILocation(line: 775, column: 3, scope: !14579)
!14582 = !DILocation(line: 776, column: 2, scope: !14579)
!14583 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 774, column: 2, scope: !14577)
!14585 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14584)
!14586 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14584)
!14587 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14584)
!14588 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14584)
!14590 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14589)
!14591 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14589)
!14592 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14589)
!14593 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14589)
!14594 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14589)
!14595 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14589)
!14596 = distinct !{!14596, !14563, !14597}
!14597 = !DILocation(line: 776, column: 2, scope: !14562)
!14598 = !DILocation(line: 777, column: 1, scope: !14548)
!14599 = distinct !DISubprogram(name: "pend_locked", scope: !3514, file: !3514, line: 760, type: !14549, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14600 = !DILocalVariable(name: "thread", arg: 1, scope: !14599, file: !3514, line: 760, type: !3415)
!14601 = !DILocation(line: 760, column: 42, scope: !14599)
!14602 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14599, file: !3514, line: 760, type: !3446)
!14603 = !DILocation(line: 760, column: 61, scope: !14599)
!14604 = !DILocalVariable(name: "timeout", arg: 3, scope: !14599, file: !3514, line: 761, type: !14551)
!14605 = !DILocation(line: 761, column: 16, scope: !14599)
!14606 = !DILocation(line: 766, column: 22, scope: !14599)
!14607 = !DILocation(line: 766, column: 30, scope: !14599)
!14608 = !DILocation(line: 766, column: 2, scope: !14599)
!14609 = !DILocation(line: 767, column: 21, scope: !14599)
!14610 = !DILocation(line: 767, column: 2, scope: !14599)
!14611 = !DILocation(line: 768, column: 1, scope: !14599)
!14612 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3514, file: !3514, line: 740, type: !14613, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14613 = !DISubroutineType(types: !14614)
!14614 = !{null, !3415, !3446}
!14615 = !DILocalVariable(name: "thread", arg: 1, scope: !14612, file: !3514, line: 740, type: !3415)
!14616 = !DILocation(line: 740, column: 50, scope: !14612)
!14617 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14612, file: !3514, line: 740, type: !3446)
!14618 = !DILocation(line: 740, column: 69, scope: !14612)
!14619 = !DILocation(line: 742, column: 17, scope: !14612)
!14620 = !DILocation(line: 742, column: 2, scope: !14612)
!14621 = !DILocation(line: 743, column: 27, scope: !14612)
!14622 = !DILocation(line: 743, column: 2, scope: !14612)
!14623 = !DILocation(line: 745, column: 2, scope: !14612)
!14624 = !DILocation(line: 745, column: 2, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14612, file: !3514, line: 745, column: 2)
!14626 = !DILocation(line: 747, column: 6, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14612, file: !3514, line: 747, column: 6)
!14628 = !DILocation(line: 747, column: 13, scope: !14627)
!14629 = !DILocation(line: 747, column: 6, scope: !14612)
!14630 = !DILocation(line: 748, column: 28, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14627, file: !3514, line: 747, column: 22)
!14632 = !DILocation(line: 748, column: 3, scope: !14631)
!14633 = !DILocation(line: 748, column: 11, scope: !14631)
!14634 = !DILocation(line: 748, column: 16, scope: !14631)
!14635 = !DILocation(line: 748, column: 26, scope: !14631)
!14636 = !DILocation(line: 749, column: 20, scope: !14631)
!14637 = !DILocation(line: 749, column: 28, scope: !14631)
!14638 = !DILocation(line: 749, column: 35, scope: !14631)
!14639 = !DILocation(line: 181, column: 56, scope: !13626, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 749, column: 3, scope: !14631)
!14641 = !DILocation(line: 182, column: 25, scope: !13626, inlinedAt: !14640)
!14642 = !DILocation(line: 184, column: 19, scope: !13626, inlinedAt: !14640)
!14643 = !DILocation(line: 188, column: 2, scope: !13637, inlinedAt: !14640)
!14644 = !DILocation(line: 188, column: 2, scope: !13639, inlinedAt: !14640)
!14645 = !DILocation(line: 189, column: 24, scope: !13641, inlinedAt: !14640)
!14646 = !DILocation(line: 189, column: 32, scope: !13641, inlinedAt: !14640)
!14647 = !DILocation(line: 189, column: 7, scope: !13641, inlinedAt: !14640)
!14648 = !DILocation(line: 189, column: 35, scope: !13641, inlinedAt: !14640)
!14649 = !DILocation(line: 189, column: 7, scope: !13642, inlinedAt: !14640)
!14650 = !DILocation(line: 190, column: 22, scope: !13648, inlinedAt: !14640)
!14651 = !DILocation(line: 190, column: 25, scope: !13648, inlinedAt: !14640)
!14652 = !DILocation(line: 190, column: 30, scope: !13648, inlinedAt: !14640)
!14653 = !DILocation(line: 191, column: 8, scope: !13648, inlinedAt: !14640)
!14654 = !DILocation(line: 191, column: 16, scope: !13648, inlinedAt: !14640)
!14655 = !DILocation(line: 191, column: 21, scope: !13648, inlinedAt: !14640)
!14656 = !DILocation(line: 190, column: 4, scope: !13648, inlinedAt: !14640)
!14657 = !DILocation(line: 192, column: 4, scope: !13648, inlinedAt: !14640)
!14658 = distinct !{!14658, !14643, !14659}
!14659 = !DILocation(line: 194, column: 2, scope: !13637, inlinedAt: !14640)
!14660 = !DILocation(line: 196, column: 19, scope: !13626, inlinedAt: !14640)
!14661 = !DILocation(line: 196, column: 24, scope: !13626, inlinedAt: !14640)
!14662 = !DILocation(line: 196, column: 32, scope: !13626, inlinedAt: !14640)
!14663 = !DILocation(line: 196, column: 37, scope: !13626, inlinedAt: !14640)
!14664 = !DILocation(line: 196, column: 2, scope: !13626, inlinedAt: !14640)
!14665 = !DILocation(line: 197, column: 1, scope: !13626, inlinedAt: !14640)
!14666 = !DILocation(line: 750, column: 2, scope: !14631)
!14667 = !DILocation(line: 751, column: 1, scope: !14612)
!14668 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3514, file: !3514, line: 753, type: !14669, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{null, !3415, !14551}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14668, file: !3514, line: 753, type: !3415)
!14672 = !DILocation(line: 753, column: 49, scope: !14668)
!14673 = !DILocalVariable(name: "timeout", arg: 2, scope: !14668, file: !3514, line: 753, type: !14551)
!14674 = !DILocation(line: 753, column: 69, scope: !14668)
!14675 = !DILocation(line: 755, column: 7, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14668, file: !3514, line: 755, column: 6)
!14677 = !DILocation(line: 755, column: 6, scope: !14668)
!14678 = !DILocation(line: 756, column: 24, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14676, file: !3514, line: 755, column: 41)
!14680 = !DILocation(line: 756, column: 3, scope: !14679)
!14681 = !DILocation(line: 757, column: 2, scope: !14679)
!14682 = !DILocation(line: 758, column: 1, scope: !14668)
!14683 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12592, file: !12592, line: 47, type: !14669, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14684 = !DILocalVariable(name: "thread", arg: 1, scope: !14683, file: !12592, line: 47, type: !3415)
!14685 = !DILocation(line: 47, column: 58, scope: !14683)
!14686 = !DILocalVariable(name: "ticks", arg: 2, scope: !14683, file: !12592, line: 47, type: !14551)
!14687 = !DILocation(line: 47, column: 78, scope: !14683)
!14688 = !DILocation(line: 49, column: 17, scope: !14683)
!14689 = !DILocation(line: 49, column: 25, scope: !14683)
!14690 = !DILocation(line: 49, column: 30, scope: !14683)
!14691 = !DILocation(line: 49, column: 2, scope: !14683)
!14692 = !DILocation(line: 50, column: 1, scope: !14683)
!14693 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3514, file: !3514, line: 795, type: !3472, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14694 = !DILocalVariable(name: "timeout", arg: 1, scope: !14693, file: !3514, line: 795, type: !3474)
!14695 = !DILocation(line: 795, column: 40, scope: !14693)
!14696 = !DILocalVariable(name: "thread", scope: !14693, file: !3514, line: 797, type: !3415)
!14697 = !DILocation(line: 797, column: 19, scope: !14693)
!14698 = !DILocation(line: 797, column: 28, scope: !14693)
!14699 = !DILocalVariable(name: "__i", scope: !14700, file: !3514, line: 800, type: !13166)
!14700 = distinct !DILexicalBlock(scope: !14693, file: !3514, line: 800, column: 2)
!14701 = !DILocation(line: 800, column: 2, scope: !14700)
!14702 = !DILocalVariable(name: "__key", scope: !14700, file: !3514, line: 800, type: !13166)
!14703 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 800, column: 2, scope: !14700)
!14705 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14704)
!14706 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14704)
!14707 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14704)
!14709 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14708)
!14710 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14708)
!14711 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14704)
!14712 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14704)
!14713 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14704)
!14714 = !DILocation(line: 800, column: 2, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14700, file: !3514, line: 800, column: 2)
!14716 = !DILocalVariable(name: "killed", scope: !14717, file: !3514, line: 801, type: !1035)
!14717 = distinct !DILexicalBlock(scope: !14715, file: !3514, line: 800, column: 26)
!14718 = !DILocation(line: 801, column: 8, scope: !14717)
!14719 = !DILocation(line: 801, column: 19, scope: !14717)
!14720 = !DILocation(line: 801, column: 27, scope: !14717)
!14721 = !DILocation(line: 801, column: 32, scope: !14717)
!14722 = !DILocation(line: 801, column: 45, scope: !14717)
!14723 = !DILocation(line: 801, column: 61, scope: !14717)
!14724 = !DILocation(line: 802, column: 12, scope: !14717)
!14725 = !DILocation(line: 802, column: 20, scope: !14717)
!14726 = !DILocation(line: 802, column: 25, scope: !14717)
!14727 = !DILocation(line: 802, column: 38, scope: !14717)
!14728 = !DILocation(line: 804, column: 8, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14717, file: !3514, line: 804, column: 7)
!14730 = !DILocation(line: 804, column: 7, scope: !14717)
!14731 = !DILocation(line: 805, column: 8, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14733, file: !3514, line: 805, column: 8)
!14733 = distinct !DILexicalBlock(scope: !14729, file: !3514, line: 804, column: 16)
!14734 = !DILocation(line: 805, column: 16, scope: !14732)
!14735 = !DILocation(line: 805, column: 21, scope: !14732)
!14736 = !DILocation(line: 805, column: 31, scope: !14732)
!14737 = !DILocation(line: 805, column: 8, scope: !14733)
!14738 = !DILocation(line: 806, column: 30, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14732, file: !3514, line: 805, column: 40)
!14740 = !DILocation(line: 806, column: 5, scope: !14739)
!14741 = !DILocation(line: 807, column: 4, scope: !14739)
!14742 = !DILocation(line: 808, column: 29, scope: !14733)
!14743 = !DILocation(line: 808, column: 4, scope: !14733)
!14744 = !DILocation(line: 809, column: 35, scope: !14733)
!14745 = !DILocation(line: 809, column: 4, scope: !14733)
!14746 = !DILocation(line: 810, column: 17, scope: !14733)
!14747 = !DILocation(line: 810, column: 4, scope: !14733)
!14748 = !DILocation(line: 811, column: 3, scope: !14733)
!14749 = !DILocation(line: 812, column: 2, scope: !14717)
!14750 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14751)
!14751 = distinct !DILocation(line: 800, column: 2, scope: !14715)
!14752 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14751)
!14753 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14751)
!14754 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14751)
!14755 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14751)
!14757 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14756)
!14758 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14756)
!14759 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14756)
!14760 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14756)
!14761 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14756)
!14762 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14756)
!14763 = distinct !{!14763, !14701, !14764}
!14764 = !DILocation(line: 812, column: 2, scope: !14700)
!14765 = !DILocation(line: 813, column: 1, scope: !14693)
!14766 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3514, file: !3514, line: 779, type: !13127, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14767 = !DILocalVariable(name: "thread", arg: 1, scope: !14766, file: !3514, line: 779, type: !3415)
!14768 = !DILocation(line: 779, column: 62, scope: !14766)
!14769 = !DILocation(line: 781, column: 38, scope: !14766)
!14770 = !DILocation(line: 781, column: 21, scope: !14766)
!14771 = !DILocation(line: 781, column: 47, scope: !14766)
!14772 = !DILocation(line: 781, column: 54, scope: !14766)
!14773 = !DILocation(line: 781, column: 2, scope: !14766)
!14774 = !DILocation(line: 782, column: 31, scope: !14766)
!14775 = !DILocation(line: 782, column: 2, scope: !14766)
!14776 = !DILocation(line: 783, column: 2, scope: !14766)
!14777 = !DILocation(line: 783, column: 10, scope: !14766)
!14778 = !DILocation(line: 783, column: 15, scope: !14766)
!14779 = !DILocation(line: 783, column: 25, scope: !14766)
!14780 = !DILocation(line: 784, column: 1, scope: !14766)
!14781 = distinct !DISubprogram(name: "pended_on_thread", scope: !3514, file: !3514, line: 724, type: !14782, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14782 = !DISubroutineType(types: !14783)
!14783 = !{!3446, !3415}
!14784 = !DILocalVariable(name: "thread", arg: 1, scope: !14781, file: !3514, line: 724, type: !3415)
!14785 = !DILocation(line: 724, column: 53, scope: !14781)
!14786 = !DILocation(line: 728, column: 9, scope: !14781)
!14787 = !DILocation(line: 728, column: 17, scope: !14781)
!14788 = !DILocation(line: 728, column: 22, scope: !14781)
!14789 = !DILocation(line: 728, column: 2, scope: !14781)
!14790 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11993, file: !11993, line: 165, type: !13127, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14791 = !DILocalVariable(name: "thread", arg: 1, scope: !14790, file: !11993, line: 165, type: !3415)
!14792 = !DILocation(line: 165, column: 66, scope: !14790)
!14793 = !DILocation(line: 167, column: 2, scope: !14790)
!14794 = !DILocation(line: 167, column: 10, scope: !14790)
!14795 = !DILocation(line: 167, column: 15, scope: !14790)
!14796 = !DILocation(line: 167, column: 28, scope: !14790)
!14797 = !DILocation(line: 168, column: 1, scope: !14790)
!14798 = distinct !DISubprogram(name: "unready_thread", scope: !3514, file: !3514, line: 731, type: !13127, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14799 = !DILocalVariable(name: "thread", arg: 1, scope: !14798, file: !3514, line: 731, type: !3415)
!14800 = !DILocation(line: 731, column: 45, scope: !14798)
!14801 = !DILocation(line: 733, column: 25, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14798, file: !3514, line: 733, column: 6)
!14803 = !DILocation(line: 733, column: 6, scope: !14802)
!14804 = !DILocation(line: 733, column: 6, scope: !14798)
!14805 = !DILocation(line: 734, column: 18, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14802, file: !3514, line: 733, column: 34)
!14807 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 734, column: 3, scope: !14806)
!14809 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !14808)
!14810 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !14808)
!14811 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !14808)
!14812 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !14808)
!14813 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !14808)
!14814 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !14808)
!14815 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !14808)
!14816 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !14808)
!14817 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !14808)
!14819 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !14818)
!14820 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !14821)
!14821 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !14818)
!14822 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !14818)
!14823 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !14818)
!14824 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !14818)
!14825 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !14808)
!14826 = !DILocation(line: 735, column: 2, scope: !14806)
!14827 = !DILocation(line: 736, column: 15, scope: !14798)
!14828 = !DILocation(line: 736, column: 25, scope: !14798)
!14829 = !DILocation(line: 736, column: 22, scope: !14798)
!14830 = !DILocation(line: 736, column: 2, scope: !14798)
!14831 = !DILocation(line: 737, column: 1, scope: !14798)
!14832 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11993, file: !11993, line: 160, type: !13127, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14833 = !DILocalVariable(name: "thread", arg: 1, scope: !14832, file: !11993, line: 160, type: !3415)
!14834 = !DILocation(line: 160, column: 62, scope: !14832)
!14835 = !DILocation(line: 162, column: 2, scope: !14832)
!14836 = !DILocation(line: 162, column: 10, scope: !14832)
!14837 = !DILocation(line: 162, column: 15, scope: !14832)
!14838 = !DILocation(line: 162, column: 28, scope: !14832)
!14839 = !DILocation(line: 163, column: 1, scope: !14832)
!14840 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3514, file: !3514, line: 786, type: !13127, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14841 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !3514, line: 786, type: !3415)
!14842 = !DILocation(line: 786, column: 64, scope: !14840)
!14843 = !DILocalVariable(name: "__i", scope: !14844, file: !3514, line: 788, type: !13166)
!14844 = distinct !DILexicalBlock(scope: !14840, file: !3514, line: 788, column: 2)
!14845 = !DILocation(line: 788, column: 2, scope: !14844)
!14846 = !DILocalVariable(name: "__key", scope: !14844, file: !3514, line: 788, type: !13166)
!14847 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14848)
!14848 = distinct !DILocation(line: 788, column: 2, scope: !14844)
!14849 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14848)
!14850 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14848)
!14851 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14848)
!14853 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14852)
!14854 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14852)
!14855 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14848)
!14856 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14848)
!14857 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14848)
!14858 = !DILocation(line: 788, column: 2, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14844, file: !3514, line: 788, column: 2)
!14860 = !DILocation(line: 789, column: 28, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14859, file: !3514, line: 788, column: 26)
!14862 = !DILocation(line: 789, column: 3, scope: !14861)
!14863 = !DILocation(line: 790, column: 2, scope: !14861)
!14864 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 788, column: 2, scope: !14859)
!14866 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14865)
!14867 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14865)
!14868 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14865)
!14869 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14865)
!14871 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14870)
!14872 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14870)
!14873 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14870)
!14874 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14870)
!14875 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14870)
!14876 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14870)
!14877 = distinct !{!14877, !14845, !14878}
!14878 = !DILocation(line: 790, column: 2, scope: !14844)
!14879 = !DILocation(line: 791, column: 1, scope: !14840)
!14880 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3514, file: !3514, line: 816, type: !14881, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14881 = !DISubroutineType(types: !14882)
!14882 = !{!103, !173, !3446, !14551}
!14883 = !DILocalVariable(name: "key", arg: 1, scope: !14880, file: !3514, line: 816, type: !173)
!14884 = !DILocation(line: 816, column: 34, scope: !14880)
!14885 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14880, file: !3514, line: 816, type: !3446)
!14886 = !DILocation(line: 816, column: 50, scope: !14880)
!14887 = !DILocalVariable(name: "timeout", arg: 3, scope: !14880, file: !3514, line: 816, type: !14551)
!14888 = !DILocation(line: 816, column: 70, scope: !14880)
!14889 = !DILocation(line: 823, column: 14, scope: !14880)
!14890 = !DILocation(line: 823, column: 24, scope: !14880)
!14891 = !DILocation(line: 823, column: 2, scope: !14880)
!14892 = !DILocation(line: 826, column: 20, scope: !14880)
!14893 = !DILocation(line: 826, column: 18, scope: !14880)
!14894 = !DILocalVariable(name: "ret", scope: !14880, file: !3514, line: 828, type: !103)
!14895 = !DILocation(line: 828, column: 6, scope: !14880)
!14896 = !DILocation(line: 828, column: 27, scope: !14880)
!14897 = !DILocation(line: 828, column: 12, scope: !14880)
!14898 = !DILocalVariable(name: "__i", scope: !14899, file: !3514, line: 829, type: !13166)
!14899 = distinct !DILexicalBlock(scope: !14880, file: !3514, line: 829, column: 2)
!14900 = !DILocation(line: 829, column: 2, scope: !14899)
!14901 = !DILocalVariable(name: "__key", scope: !14899, file: !3514, line: 829, type: !13166)
!14902 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14903)
!14903 = distinct !DILocation(line: 829, column: 2, scope: !14899)
!14904 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14903)
!14905 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14903)
!14906 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14903)
!14908 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14907)
!14909 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14907)
!14910 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14903)
!14911 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14903)
!14912 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14903)
!14913 = !DILocation(line: 829, column: 2, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14899, file: !3514, line: 829, column: 2)
!14915 = !DILocation(line: 830, column: 7, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !3514, line: 830, column: 7)
!14917 = distinct !DILexicalBlock(scope: !14914, file: !3514, line: 829, column: 26)
!14918 = !DILocation(line: 830, column: 26, scope: !14916)
!14919 = !DILocation(line: 830, column: 23, scope: !14916)
!14920 = !DILocation(line: 830, column: 7, scope: !14917)
!14921 = !DILocation(line: 831, column: 20, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14916, file: !3514, line: 830, column: 36)
!14923 = !DILocation(line: 832, column: 3, scope: !14922)
!14924 = !DILocation(line: 833, column: 2, scope: !14917)
!14925 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 829, column: 2, scope: !14914)
!14927 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !14926)
!14928 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !14926)
!14929 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !14926)
!14930 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !14931)
!14931 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !14926)
!14932 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !14931)
!14933 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !14931)
!14934 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !14931)
!14935 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !14931)
!14936 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !14931)
!14937 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !14931)
!14938 = distinct !{!14938, !14900, !14939}
!14939 = !DILocation(line: 833, column: 2, scope: !14899)
!14940 = !DILocation(line: 834, column: 9, scope: !14880)
!14941 = !DILocation(line: 834, column: 2, scope: !14880)
!14942 = distinct !DISubprogram(name: "z_pend_curr", scope: !3514, file: !3514, line: 840, type: !14943, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{!103, !13176, !13166, !3446, !14551}
!14945 = !DILocalVariable(name: "lock", arg: 1, scope: !14942, file: !3514, line: 840, type: !13176)
!14946 = !DILocation(line: 840, column: 36, scope: !14942)
!14947 = !DILocalVariable(name: "key", arg: 2, scope: !14942, file: !3514, line: 840, type: !13166)
!14948 = !DILocation(line: 840, column: 59, scope: !14942)
!14949 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14942, file: !3514, line: 841, type: !3446)
!14950 = !DILocation(line: 841, column: 20, scope: !14942)
!14951 = !DILocalVariable(name: "timeout", arg: 4, scope: !14942, file: !3514, line: 841, type: !14551)
!14952 = !DILocation(line: 841, column: 40, scope: !14942)
!14953 = !DILocation(line: 844, column: 20, scope: !14942)
!14954 = !DILocation(line: 844, column: 18, scope: !14942)
!14955 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 856, column: 9, scope: !14942)
!14957 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14956)
!14958 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14956)
!14959 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14956)
!14961 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !14960)
!14962 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !14960)
!14963 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14956)
!14964 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14956)
!14965 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14956)
!14966 = !DILocation(line: 856, column: 9, scope: !14942)
!14967 = !DILocation(line: 857, column: 14, scope: !14942)
!14968 = !DILocation(line: 857, column: 24, scope: !14942)
!14969 = !DILocation(line: 857, column: 2, scope: !14942)
!14970 = !DILocation(line: 858, column: 17, scope: !14942)
!14971 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !14972)
!14972 = distinct !DILocation(line: 858, column: 2, scope: !14942)
!14973 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !14972)
!14974 = !DILocation(line: 859, column: 9, scope: !14942)
!14975 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 859, column: 9, scope: !14942)
!14977 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !14976)
!14978 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !14976)
!14979 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !14976)
!14981 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !14980)
!14982 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !14976)
!14983 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !14976)
!14984 = !DILocation(line: 859, column: 2, scope: !14942)
!14985 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3514, file: !3514, line: 862, type: !14986, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!14986 = !DISubroutineType(types: !14987)
!14987 = !{!3415, !3446}
!14988 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14985, file: !3514, line: 862, type: !3446)
!14989 = !DILocation(line: 862, column: 50, scope: !14985)
!14990 = !DILocalVariable(name: "thread", scope: !14985, file: !3514, line: 864, type: !3415)
!14991 = !DILocation(line: 864, column: 19, scope: !14985)
!14992 = !DILocalVariable(name: "__i", scope: !14993, file: !3514, line: 866, type: !13166)
!14993 = distinct !DILexicalBlock(scope: !14985, file: !3514, line: 866, column: 2)
!14994 = !DILocation(line: 866, column: 2, scope: !14993)
!14995 = !DILocalVariable(name: "__key", scope: !14993, file: !3514, line: 866, type: !13166)
!14996 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 866, column: 2, scope: !14993)
!14998 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !14997)
!14999 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !14997)
!15000 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !14997)
!15002 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15001)
!15003 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15001)
!15004 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !14997)
!15005 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !14997)
!15006 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !14997)
!15007 = !DILocation(line: 866, column: 2, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14993, file: !3514, line: 866, column: 2)
!15009 = !DILocation(line: 867, column: 29, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15008, file: !3514, line: 866, column: 26)
!15011 = !DILocation(line: 867, column: 37, scope: !15010)
!15012 = !DILocation(line: 867, column: 12, scope: !15010)
!15013 = !DILocation(line: 867, column: 10, scope: !15010)
!15014 = !DILocation(line: 869, column: 7, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !3514, line: 869, column: 7)
!15016 = !DILocation(line: 869, column: 14, scope: !15015)
!15017 = !DILocation(line: 869, column: 7, scope: !15010)
!15018 = !DILocation(line: 870, column: 29, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15015, file: !3514, line: 869, column: 23)
!15020 = !DILocation(line: 870, column: 4, scope: !15019)
!15021 = !DILocation(line: 871, column: 3, scope: !15019)
!15022 = !DILocation(line: 872, column: 2, scope: !15010)
!15023 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15024)
!15024 = distinct !DILocation(line: 866, column: 2, scope: !15008)
!15025 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15024)
!15026 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15024)
!15027 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15024)
!15028 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15024)
!15030 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15029)
!15031 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15029)
!15032 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15029)
!15033 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15029)
!15034 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15029)
!15035 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15029)
!15036 = distinct !{!15036, !14994, !15037}
!15037 = !DILocation(line: 872, column: 2, scope: !14993)
!15038 = !DILocation(line: 874, column: 9, scope: !14985)
!15039 = !DILocation(line: 874, column: 2, scope: !14985)
!15040 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3514, file: !3514, line: 877, type: !14986, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15041 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15040, file: !3514, line: 877, type: !3446)
!15042 = !DILocation(line: 877, column: 51, scope: !15040)
!15043 = !DILocalVariable(name: "thread", scope: !15040, file: !3514, line: 879, type: !3415)
!15044 = !DILocation(line: 879, column: 19, scope: !15040)
!15045 = !DILocalVariable(name: "__i", scope: !15046, file: !3514, line: 881, type: !13166)
!15046 = distinct !DILexicalBlock(scope: !15040, file: !3514, line: 881, column: 2)
!15047 = !DILocation(line: 881, column: 2, scope: !15046)
!15048 = !DILocalVariable(name: "__key", scope: !15046, file: !3514, line: 881, type: !13166)
!15049 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 881, column: 2, scope: !15046)
!15051 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15050)
!15052 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15050)
!15053 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15050)
!15055 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15054)
!15056 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15054)
!15057 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15050)
!15058 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15050)
!15059 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15050)
!15060 = !DILocation(line: 881, column: 2, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15046, file: !3514, line: 881, column: 2)
!15062 = !DILocation(line: 882, column: 29, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15061, file: !3514, line: 881, column: 26)
!15064 = !DILocation(line: 882, column: 37, scope: !15063)
!15065 = !DILocation(line: 882, column: 12, scope: !15063)
!15066 = !DILocation(line: 882, column: 10, scope: !15063)
!15067 = !DILocation(line: 884, column: 7, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15063, file: !3514, line: 884, column: 7)
!15069 = !DILocation(line: 884, column: 14, scope: !15068)
!15070 = !DILocation(line: 884, column: 7, scope: !15063)
!15071 = !DILocation(line: 885, column: 29, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15068, file: !3514, line: 884, column: 23)
!15073 = !DILocation(line: 885, column: 4, scope: !15072)
!15074 = !DILocation(line: 886, column: 33, scope: !15072)
!15075 = !DILocation(line: 886, column: 10, scope: !15072)
!15076 = !DILocation(line: 887, column: 3, scope: !15072)
!15077 = !DILocation(line: 888, column: 2, scope: !15063)
!15078 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 881, column: 2, scope: !15061)
!15080 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15079)
!15081 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15079)
!15082 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15079)
!15083 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15079)
!15085 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15084)
!15086 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15084)
!15087 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15084)
!15088 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15084)
!15089 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15084)
!15090 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15084)
!15091 = distinct !{!15091, !15047, !15092}
!15092 = !DILocation(line: 888, column: 2, scope: !15046)
!15093 = !DILocation(line: 890, column: 9, scope: !15040)
!15094 = !DILocation(line: 890, column: 2, scope: !15040)
!15095 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3514, file: !3514, line: 893, type: !13127, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15096 = !DILocalVariable(name: "thread", arg: 1, scope: !15095, file: !3514, line: 893, type: !3415)
!15097 = !DILocation(line: 893, column: 39, scope: !15095)
!15098 = !DILocation(line: 895, column: 29, scope: !15095)
!15099 = !DILocation(line: 786, column: 64, scope: !14840, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 895, column: 2, scope: !15095)
!15101 = !DILocation(line: 788, column: 2, scope: !14844, inlinedAt: !15100)
!15102 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15103)
!15103 = distinct !DILocation(line: 788, column: 2, scope: !14844, inlinedAt: !15100)
!15104 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15103)
!15105 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15103)
!15106 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15103)
!15108 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15107)
!15109 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15107)
!15110 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15103)
!15111 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15103)
!15112 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15103)
!15113 = !DILocation(line: 788, column: 2, scope: !14859, inlinedAt: !15100)
!15114 = !DILocation(line: 789, column: 28, scope: !14861, inlinedAt: !15100)
!15115 = !DILocation(line: 789, column: 3, scope: !14861, inlinedAt: !15100)
!15116 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 788, column: 2, scope: !14859, inlinedAt: !15100)
!15118 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15117)
!15119 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15117)
!15120 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15117)
!15121 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15117)
!15123 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15122)
!15124 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15122)
!15125 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15122)
!15126 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15122)
!15127 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15122)
!15128 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15122)
!15129 = distinct !{!15129, !15101, !15130}
!15130 = !DILocation(line: 790, column: 2, scope: !14844, inlinedAt: !15100)
!15131 = !DILocation(line: 896, column: 31, scope: !15095)
!15132 = !DILocation(line: 896, column: 8, scope: !15095)
!15133 = !DILocation(line: 897, column: 1, scope: !15095)
!15134 = distinct !DISubprogram(name: "z_set_prio", scope: !3514, file: !3514, line: 902, type: !13796, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15135 = !DILocalVariable(name: "thread", arg: 1, scope: !15134, file: !3514, line: 902, type: !3415)
!15136 = !DILocation(line: 902, column: 34, scope: !15134)
!15137 = !DILocalVariable(name: "prio", arg: 2, scope: !15134, file: !3514, line: 902, type: !103)
!15138 = !DILocation(line: 902, column: 46, scope: !15134)
!15139 = !DILocalVariable(name: "need_sched", scope: !15134, file: !3514, line: 904, type: !1035)
!15140 = !DILocation(line: 904, column: 7, scope: !15134)
!15141 = !DILocalVariable(name: "__i", scope: !15142, file: !3514, line: 906, type: !13166)
!15142 = distinct !DILexicalBlock(scope: !15134, file: !3514, line: 906, column: 2)
!15143 = !DILocation(line: 906, column: 2, scope: !15142)
!15144 = !DILocalVariable(name: "__key", scope: !15142, file: !3514, line: 906, type: !13166)
!15145 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15146)
!15146 = distinct !DILocation(line: 906, column: 2, scope: !15142)
!15147 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15146)
!15148 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15146)
!15149 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15150)
!15150 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15146)
!15151 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15150)
!15152 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15150)
!15153 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15146)
!15154 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15146)
!15155 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15146)
!15156 = !DILocation(line: 906, column: 2, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15142, file: !3514, line: 906, column: 2)
!15158 = !DILocation(line: 907, column: 34, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15157, file: !3514, line: 906, column: 26)
!15160 = !DILocation(line: 907, column: 16, scope: !15159)
!15161 = !DILocation(line: 907, column: 14, scope: !15159)
!15162 = !DILocation(line: 909, column: 7, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15159, file: !3514, line: 909, column: 7)
!15164 = !DILocation(line: 909, column: 7, scope: !15159)
!15165 = !DILocation(line: 912, column: 20, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15167, file: !3514, line: 911, column: 63)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !3514, line: 911, column: 8)
!15168 = distinct !DILexicalBlock(scope: !15163, file: !3514, line: 909, column: 19)
!15169 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 912, column: 5, scope: !15166)
!15171 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !15170)
!15172 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !15170)
!15173 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !15170)
!15174 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !15170)
!15175 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !15170)
!15176 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !15170)
!15177 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !15170)
!15178 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !15170)
!15179 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !15170)
!15181 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !15180)
!15182 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !15180)
!15184 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !15180)
!15185 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !15180)
!15186 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !15180)
!15187 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !15170)
!15188 = !DILocation(line: 913, column: 25, scope: !15166)
!15189 = !DILocation(line: 913, column: 5, scope: !15166)
!15190 = !DILocation(line: 913, column: 13, scope: !15166)
!15191 = !DILocation(line: 913, column: 18, scope: !15166)
!15192 = !DILocation(line: 913, column: 23, scope: !15166)
!15193 = !DILocation(line: 914, column: 18, scope: !15166)
!15194 = !DILocation(line: 250, column: 57, scope: !13604, inlinedAt: !15195)
!15195 = distinct !DILocation(line: 914, column: 5, scope: !15166)
!15196 = !DILocation(line: 252, column: 2, scope: !13604, inlinedAt: !15195)
!15197 = !DILocation(line: 252, column: 10, scope: !13604, inlinedAt: !15195)
!15198 = !DILocation(line: 252, column: 15, scope: !13604, inlinedAt: !15195)
!15199 = !DILocation(line: 252, column: 28, scope: !13604, inlinedAt: !15195)
!15200 = !DILocation(line: 253, column: 26, scope: !13612, inlinedAt: !15195)
!15201 = !DILocation(line: 253, column: 6, scope: !13612, inlinedAt: !15195)
!15202 = !DILocation(line: 253, column: 6, scope: !13604, inlinedAt: !15195)
!15203 = !DILocation(line: 254, column: 12, scope: !13616, inlinedAt: !15195)
!15204 = !DILocation(line: 227, column: 53, scope: !13618, inlinedAt: !15205)
!15205 = distinct !DILocation(line: 254, column: 3, scope: !13616, inlinedAt: !15195)
!15206 = !DILocation(line: 229, column: 28, scope: !13618, inlinedAt: !15205)
!15207 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !15208)
!15208 = distinct !DILocation(line: 229, column: 16, scope: !13618, inlinedAt: !15205)
!15209 = !DILocation(line: 229, column: 37, scope: !13618, inlinedAt: !15205)
!15210 = !DILocation(line: 181, column: 56, scope: !13626, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 229, column: 2, scope: !13618, inlinedAt: !15205)
!15212 = !DILocation(line: 182, column: 25, scope: !13626, inlinedAt: !15211)
!15213 = !DILocation(line: 184, column: 19, scope: !13626, inlinedAt: !15211)
!15214 = !DILocation(line: 188, column: 2, scope: !13637, inlinedAt: !15211)
!15215 = !DILocation(line: 188, column: 2, scope: !13639, inlinedAt: !15211)
!15216 = !DILocation(line: 189, column: 24, scope: !13641, inlinedAt: !15211)
!15217 = !DILocation(line: 189, column: 32, scope: !13641, inlinedAt: !15211)
!15218 = !DILocation(line: 189, column: 7, scope: !13641, inlinedAt: !15211)
!15219 = !DILocation(line: 189, column: 35, scope: !13641, inlinedAt: !15211)
!15220 = !DILocation(line: 189, column: 7, scope: !13642, inlinedAt: !15211)
!15221 = !DILocation(line: 190, column: 22, scope: !13648, inlinedAt: !15211)
!15222 = !DILocation(line: 190, column: 25, scope: !13648, inlinedAt: !15211)
!15223 = !DILocation(line: 190, column: 30, scope: !13648, inlinedAt: !15211)
!15224 = !DILocation(line: 191, column: 8, scope: !13648, inlinedAt: !15211)
!15225 = !DILocation(line: 191, column: 16, scope: !13648, inlinedAt: !15211)
!15226 = !DILocation(line: 191, column: 21, scope: !13648, inlinedAt: !15211)
!15227 = !DILocation(line: 190, column: 4, scope: !13648, inlinedAt: !15211)
!15228 = !DILocation(line: 192, column: 4, scope: !13648, inlinedAt: !15211)
!15229 = distinct !{!15229, !15214, !15230}
!15230 = !DILocation(line: 194, column: 2, scope: !13637, inlinedAt: !15211)
!15231 = !DILocation(line: 196, column: 19, scope: !13626, inlinedAt: !15211)
!15232 = !DILocation(line: 196, column: 24, scope: !13626, inlinedAt: !15211)
!15233 = !DILocation(line: 196, column: 32, scope: !13626, inlinedAt: !15211)
!15234 = !DILocation(line: 196, column: 37, scope: !13626, inlinedAt: !15211)
!15235 = !DILocation(line: 196, column: 2, scope: !13626, inlinedAt: !15211)
!15236 = !DILocation(line: 197, column: 1, scope: !13626, inlinedAt: !15211)
!15237 = !DILocation(line: 255, column: 2, scope: !13616, inlinedAt: !15195)
!15238 = !DILocation(line: 918, column: 4, scope: !15168)
!15239 = !DILocation(line: 919, column: 3, scope: !15168)
!15240 = !DILocation(line: 920, column: 24, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15163, file: !3514, line: 919, column: 10)
!15242 = !DILocation(line: 920, column: 4, scope: !15241)
!15243 = !DILocation(line: 920, column: 12, scope: !15241)
!15244 = !DILocation(line: 920, column: 17, scope: !15241)
!15245 = !DILocation(line: 920, column: 22, scope: !15241)
!15246 = !DILocation(line: 922, column: 2, scope: !15159)
!15247 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 906, column: 2, scope: !15157)
!15249 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15248)
!15250 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15248)
!15251 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15248)
!15252 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15248)
!15254 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15253)
!15255 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15253)
!15256 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15253)
!15257 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15253)
!15258 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15253)
!15259 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15253)
!15260 = distinct !{!15260, !15143, !15261}
!15261 = !DILocation(line: 922, column: 2, scope: !15142)
!15262 = !DILocation(line: 924, column: 2, scope: !15134)
!15263 = !DILocation(line: 924, column: 2, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15134, file: !3514, line: 924, column: 2)
!15265 = !DILocation(line: 926, column: 9, scope: !15134)
!15266 = !DILocation(line: 926, column: 2, scope: !15134)
!15267 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3514, file: !3514, line: 929, type: !15268, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15268 = !DISubroutineType(types: !15269)
!15269 = !{null, !3415, !103}
!15270 = !DILocalVariable(name: "thread", arg: 1, scope: !15267, file: !3514, line: 929, type: !3415)
!15271 = !DILocation(line: 929, column: 45, scope: !15267)
!15272 = !DILocalVariable(name: "prio", arg: 2, scope: !15267, file: !3514, line: 929, type: !103)
!15273 = !DILocation(line: 929, column: 57, scope: !15267)
!15274 = !DILocalVariable(name: "need_sched", scope: !15267, file: !3514, line: 931, type: !1035)
!15275 = !DILocation(line: 931, column: 7, scope: !15267)
!15276 = !DILocation(line: 931, column: 31, scope: !15267)
!15277 = !DILocation(line: 931, column: 39, scope: !15267)
!15278 = !DILocation(line: 931, column: 20, scope: !15267)
!15279 = !DILocation(line: 933, column: 2, scope: !15267)
!15280 = !DILocation(line: 935, column: 6, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15267, file: !3514, line: 935, column: 6)
!15282 = !DILocation(line: 935, column: 17, scope: !15281)
!15283 = !DILocation(line: 935, column: 20, scope: !15281)
!15284 = !DILocation(line: 935, column: 30, scope: !15281)
!15285 = !DILocation(line: 935, column: 35, scope: !15281)
!15286 = !DILocation(line: 935, column: 48, scope: !15281)
!15287 = !DILocation(line: 935, column: 6, scope: !15267)
!15288 = !DILocation(line: 936, column: 3, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15281, file: !3514, line: 935, column: 55)
!15290 = !DILocation(line: 937, column: 2, scope: !15289)
!15291 = !DILocation(line: 938, column: 1, scope: !15267)
!15292 = distinct !DISubprogram(name: "k_sched_lock", scope: !3514, file: !3514, line: 987, type: !253, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15293 = !DILocalVariable(name: "__i", scope: !15294, file: !3514, line: 989, type: !13166)
!15294 = distinct !DILexicalBlock(scope: !15292, file: !3514, line: 989, column: 2)
!15295 = !DILocation(line: 989, column: 2, scope: !15294)
!15296 = !DILocalVariable(name: "__key", scope: !15294, file: !3514, line: 989, type: !13166)
!15297 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 989, column: 2, scope: !15294)
!15299 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15298)
!15300 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15298)
!15301 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15302)
!15302 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15298)
!15303 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15302)
!15304 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15302)
!15305 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15298)
!15306 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15298)
!15307 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15298)
!15308 = !DILocation(line: 989, column: 2, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15294, file: !3514, line: 989, column: 2)
!15310 = !DILocation(line: 990, column: 3, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15309, file: !3514, line: 989, column: 26)
!15312 = !DILocation(line: 990, column: 3, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15311, file: !3514, line: 990, column: 3)
!15314 = !DILocation(line: 992, column: 3, scope: !15311)
!15315 = !DILocation(line: 993, column: 2, scope: !15311)
!15316 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 989, column: 2, scope: !15309)
!15318 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15317)
!15319 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15317)
!15320 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15317)
!15321 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15317)
!15323 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15322)
!15324 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15322)
!15325 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15322)
!15326 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15322)
!15327 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15322)
!15328 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15322)
!15329 = distinct !{!15329, !15295, !15330}
!15330 = !DILocation(line: 993, column: 2, scope: !15294)
!15331 = !DILocation(line: 994, column: 1, scope: !15292)
!15332 = distinct !DISubprogram(name: "z_sched_lock", scope: !11993, file: !11993, line: 251, type: !253, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15333 = !DILocation(line: 256, column: 4, scope: !15332)
!15334 = !DILocation(line: 256, column: 14, scope: !15332)
!15335 = !DILocation(line: 256, column: 19, scope: !15332)
!15336 = !DILocation(line: 256, column: 2, scope: !15332)
!15337 = !DILocation(line: 258, column: 2, scope: !15332)
!15338 = !DILocation(line: 258, column: 2, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15332, file: !11993, line: 258, column: 2)
!15340 = !{i64 2151452714}
!15341 = !DILocation(line: 259, column: 1, scope: !15332)
!15342 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3514, file: !3514, line: 996, type: !253, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15343 = !DILocalVariable(name: "__i", scope: !15344, file: !3514, line: 998, type: !13166)
!15344 = distinct !DILexicalBlock(scope: !15342, file: !3514, line: 998, column: 2)
!15345 = !DILocation(line: 998, column: 2, scope: !15344)
!15346 = !DILocalVariable(name: "__key", scope: !15344, file: !3514, line: 998, type: !13166)
!15347 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 998, column: 2, scope: !15344)
!15349 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15348)
!15350 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15348)
!15351 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15348)
!15353 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15352)
!15354 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15352)
!15355 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15348)
!15356 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15348)
!15357 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15348)
!15358 = !DILocation(line: 998, column: 2, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15344, file: !3514, line: 998, column: 2)
!15360 = !DILocation(line: 1002, column: 5, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15359, file: !3514, line: 998, column: 26)
!15362 = !DILocation(line: 1002, column: 15, scope: !15361)
!15363 = !DILocation(line: 1002, column: 20, scope: !15361)
!15364 = !DILocation(line: 1002, column: 3, scope: !15361)
!15365 = !DILocation(line: 1003, column: 3, scope: !15361)
!15366 = !DILocation(line: 1004, column: 2, scope: !15361)
!15367 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 998, column: 2, scope: !15359)
!15369 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !15368)
!15370 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !15368)
!15371 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !15368)
!15372 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !15368)
!15374 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !15373)
!15375 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !15373)
!15376 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !15373)
!15377 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !15373)
!15378 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !15373)
!15379 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !15373)
!15380 = distinct !{!15380, !15345, !15381}
!15381 = !DILocation(line: 1004, column: 2, scope: !15344)
!15382 = !DILocation(line: 1006, column: 2, scope: !15342)
!15383 = !DILocation(line: 1006, column: 2, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !3514, line: 1006, column: 2)
!15385 = distinct !DILexicalBlock(scope: !15386, file: !3514, line: 1006, column: 2)
!15386 = distinct !DILexicalBlock(scope: !15342, file: !3514, line: 1006, column: 2)
!15387 = !DILocation(line: 1009, column: 2, scope: !15342)
!15388 = !DILocation(line: 1009, column: 2, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15342, file: !3514, line: 1009, column: 2)
!15390 = !DILocation(line: 1011, column: 2, scope: !15342)
!15391 = !DILocation(line: 1012, column: 1, scope: !15342)
!15392 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3514, file: !3514, line: 1014, type: !13778, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15393 = !DILocation(line: 1028, column: 25, scope: !15392)
!15394 = !DILocation(line: 1028, column: 2, scope: !15392)
!15395 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3514, file: !3514, line: 1155, type: !15396, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15396 = !DISubroutineType(types: !15397)
!15397 = !{!1035, !3444, !3444}
!15398 = !DILocalVariable(name: "a", arg: 1, scope: !15395, file: !3514, line: 1155, type: !3444)
!15399 = !DILocation(line: 1155, column: 40, scope: !15395)
!15400 = !DILocalVariable(name: "b", arg: 2, scope: !15395, file: !3514, line: 1155, type: !3444)
!15401 = !DILocation(line: 1155, column: 58, scope: !15395)
!15402 = !DILocalVariable(name: "thread_a", scope: !15395, file: !3514, line: 1157, type: !3415)
!15403 = !DILocation(line: 1157, column: 19, scope: !15395)
!15404 = !DILocalVariable(name: "thread_b", scope: !15395, file: !3514, line: 1157, type: !3415)
!15405 = !DILocation(line: 1157, column: 30, scope: !15395)
!15406 = !DILocalVariable(name: "cmp", scope: !15395, file: !3514, line: 1158, type: !250)
!15407 = !DILocation(line: 1158, column: 10, scope: !15395)
!15408 = !DILocation(line: 1160, column: 13, scope: !15395)
!15409 = !DILocation(line: 1160, column: 11, scope: !15395)
!15410 = !DILocation(line: 1161, column: 13, scope: !15395)
!15411 = !DILocation(line: 1161, column: 11, scope: !15395)
!15412 = !DILocation(line: 1163, column: 25, scope: !15395)
!15413 = !DILocation(line: 1163, column: 35, scope: !15395)
!15414 = !DILocation(line: 1163, column: 8, scope: !15395)
!15415 = !DILocation(line: 1163, column: 6, scope: !15395)
!15416 = !DILocation(line: 1165, column: 6, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15395, file: !3514, line: 1165, column: 6)
!15418 = !DILocation(line: 1165, column: 10, scope: !15417)
!15419 = !DILocation(line: 1165, column: 6, scope: !15395)
!15420 = !DILocation(line: 1166, column: 3, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15417, file: !3514, line: 1165, column: 15)
!15422 = !DILocation(line: 1167, column: 13, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15417, file: !3514, line: 1167, column: 13)
!15424 = !DILocation(line: 1167, column: 17, scope: !15423)
!15425 = !DILocation(line: 1167, column: 13, scope: !15417)
!15426 = !DILocation(line: 1168, column: 3, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15423, file: !3514, line: 1167, column: 22)
!15428 = !DILocation(line: 1170, column: 10, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15423, file: !3514, line: 1169, column: 9)
!15430 = !DILocation(line: 1170, column: 20, scope: !15429)
!15431 = !DILocation(line: 1170, column: 25, scope: !15429)
!15432 = !DILocation(line: 1170, column: 37, scope: !15429)
!15433 = !DILocation(line: 1170, column: 47, scope: !15429)
!15434 = !DILocation(line: 1170, column: 52, scope: !15429)
!15435 = !DILocation(line: 1170, column: 35, scope: !15429)
!15436 = !DILocation(line: 1170, column: 3, scope: !15429)
!15437 = !DILocation(line: 1173, column: 1, scope: !15395)
!15438 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3514, file: !3514, line: 1175, type: !15439, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15439 = !DISubroutineType(types: !15440)
!15440 = !{null, !15441, !3415}
!15441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15442, size: 32)
!15442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15443, line: 37, size: 128, elements: !15444)
!15443 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15444 = !{!15445, !15453}
!15445 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15442, file: !15443, line: 38, baseType: !15446, size: 96)
!15446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !140, line: 83, size: 96, elements: !15447)
!15447 = !{!15448, !15449, !15452}
!15448 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15446, file: !140, line: 84, baseType: !3444, size: 32)
!15449 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15446, file: !140, line: 85, baseType: !15450, size: 32, offset: 32)
!15450 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !140, line: 81, baseType: !15451)
!15451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15396, size: 32)
!15452 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15446, file: !140, line: 86, baseType: !103, size: 32, offset: 64)
!15453 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15442, file: !15443, line: 39, baseType: !103, size: 32, offset: 96)
!15454 = !DILocalVariable(name: "pq", arg: 1, scope: !15438, file: !3514, line: 1175, type: !15441)
!15455 = !DILocation(line: 1175, column: 37, scope: !15438)
!15456 = !DILocalVariable(name: "thread", arg: 2, scope: !15438, file: !3514, line: 1175, type: !3415)
!15457 = !DILocation(line: 1175, column: 58, scope: !15438)
!15458 = !DILocalVariable(name: "t", scope: !15438, file: !3514, line: 1177, type: !3415)
!15459 = !DILocation(line: 1177, column: 19, scope: !15438)
!15460 = !DILocation(line: 1181, column: 27, scope: !15438)
!15461 = !DILocation(line: 1181, column: 31, scope: !15438)
!15462 = !DILocation(line: 1181, column: 45, scope: !15438)
!15463 = !DILocation(line: 1181, column: 2, scope: !15438)
!15464 = !DILocation(line: 1181, column: 10, scope: !15438)
!15465 = !DILocation(line: 1181, column: 15, scope: !15438)
!15466 = !DILocation(line: 1181, column: 25, scope: !15438)
!15467 = !DILocation(line: 1189, column: 7, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15438, file: !3514, line: 1189, column: 6)
!15469 = !DILocation(line: 1189, column: 11, scope: !15468)
!15470 = !DILocation(line: 1189, column: 6, scope: !15438)
!15471 = !DILocalVariable(name: "__f", scope: !15472, file: !3514, line: 1190, type: !15474)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !3514, line: 1190, column: 3)
!15473 = distinct !DILexicalBlock(scope: !15468, file: !3514, line: 1189, column: 27)
!15474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !140, line: 155, size: 96, elements: !15475)
!15475 = !{!15476, !15477, !15478}
!15476 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15474, file: !140, line: 156, baseType: !3509, size: 32)
!15477 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15474, file: !140, line: 157, baseType: !1690, size: 32, offset: 32)
!15478 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15474, file: !140, line: 158, baseType: !250, size: 32, offset: 64)
!15479 = !DILocation(line: 1190, column: 3, scope: !15472)
!15480 = !DILocalVariable(name: "n", scope: !15481, file: !3514, line: 1190, type: !3444)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3514, line: 1190, column: 3)
!15482 = distinct !DILexicalBlock(scope: !15472, file: !3514, line: 1190, column: 3)
!15483 = !DILocation(line: 1190, column: 3, scope: !15481)
!15484 = !DILocation(line: 1190, column: 3, scope: !15482)
!15485 = !DILocation(line: 1191, column: 24, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15482, file: !3514, line: 1190, column: 54)
!15487 = !DILocation(line: 1191, column: 28, scope: !15486)
!15488 = !DILocation(line: 1191, column: 42, scope: !15486)
!15489 = !DILocation(line: 1191, column: 4, scope: !15486)
!15490 = !DILocation(line: 1191, column: 7, scope: !15486)
!15491 = !DILocation(line: 1191, column: 12, scope: !15486)
!15492 = !DILocation(line: 1191, column: 22, scope: !15486)
!15493 = distinct !{!15493, !15479, !15494}
!15494 = !DILocation(line: 1192, column: 3, scope: !15472)
!15495 = !DILocation(line: 1193, column: 2, scope: !15473)
!15496 = !DILocation(line: 1195, column: 13, scope: !15438)
!15497 = !DILocation(line: 1195, column: 17, scope: !15438)
!15498 = !DILocation(line: 1195, column: 24, scope: !15438)
!15499 = !DILocation(line: 1195, column: 32, scope: !15438)
!15500 = !DILocation(line: 1195, column: 37, scope: !15438)
!15501 = !DILocation(line: 1195, column: 2, scope: !15438)
!15502 = !DILocation(line: 1196, column: 1, scope: !15438)
!15503 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3514, file: !3514, line: 1198, type: !15439, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15504 = !DILocalVariable(name: "pq", arg: 1, scope: !15503, file: !3514, line: 1198, type: !15441)
!15505 = !DILocation(line: 1198, column: 40, scope: !15503)
!15506 = !DILocalVariable(name: "thread", arg: 2, scope: !15503, file: !3514, line: 1198, type: !3415)
!15507 = !DILocation(line: 1198, column: 61, scope: !15503)
!15508 = !DILocation(line: 1202, column: 13, scope: !15503)
!15509 = !DILocation(line: 1202, column: 17, scope: !15503)
!15510 = !DILocation(line: 1202, column: 24, scope: !15503)
!15511 = !DILocation(line: 1202, column: 32, scope: !15503)
!15512 = !DILocation(line: 1202, column: 37, scope: !15503)
!15513 = !DILocation(line: 1202, column: 2, scope: !15503)
!15514 = !DILocation(line: 1204, column: 7, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15503, file: !3514, line: 1204, column: 6)
!15516 = !DILocation(line: 1204, column: 11, scope: !15515)
!15517 = !DILocation(line: 1204, column: 16, scope: !15515)
!15518 = !DILocation(line: 1204, column: 6, scope: !15503)
!15519 = !DILocation(line: 1205, column: 3, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15515, file: !3514, line: 1204, column: 22)
!15521 = !DILocation(line: 1205, column: 7, scope: !15520)
!15522 = !DILocation(line: 1205, column: 22, scope: !15520)
!15523 = !DILocation(line: 1206, column: 2, scope: !15520)
!15524 = !DILocation(line: 1207, column: 1, scope: !15503)
!15525 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3514, file: !3514, line: 1209, type: !15526, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15526 = !DISubroutineType(types: !15527)
!15527 = !{!3415, !15441}
!15528 = !DILocalVariable(name: "pq", arg: 1, scope: !15525, file: !3514, line: 1209, type: !15441)
!15529 = !DILocation(line: 1209, column: 50, scope: !15525)
!15530 = !DILocalVariable(name: "thread", scope: !15525, file: !3514, line: 1211, type: !3415)
!15531 = !DILocation(line: 1211, column: 19, scope: !15525)
!15532 = !DILocalVariable(name: "n", scope: !15525, file: !3514, line: 1212, type: !3444)
!15533 = !DILocation(line: 1212, column: 17, scope: !15525)
!15534 = !DILocation(line: 1212, column: 33, scope: !15525)
!15535 = !DILocation(line: 1212, column: 37, scope: !15525)
!15536 = !DILocation(line: 1212, column: 21, scope: !15525)
!15537 = !DILocation(line: 1214, column: 6, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15525, file: !3514, line: 1214, column: 6)
!15539 = !DILocation(line: 1214, column: 8, scope: !15538)
!15540 = !DILocation(line: 1214, column: 6, scope: !15525)
!15541 = !DILocation(line: 1215, column: 12, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15538, file: !3514, line: 1214, column: 17)
!15543 = !DILocation(line: 1215, column: 10, scope: !15542)
!15544 = !DILocation(line: 1216, column: 2, scope: !15542)
!15545 = !DILocation(line: 1217, column: 9, scope: !15525)
!15546 = !DILocation(line: 1217, column: 2, scope: !15525)
!15547 = distinct !DISubprogram(name: "rb_get_min", scope: !140, file: !140, line: 115, type: !15548, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15548 = !DISubroutineType(types: !15549)
!15549 = !{!3444, !15550}
!15550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15446, size: 32)
!15551 = !DILocalVariable(name: "tree", arg: 1, scope: !15547, file: !140, line: 115, type: !15550)
!15552 = !DILocation(line: 115, column: 56, scope: !15547)
!15553 = !DILocation(line: 117, column: 25, scope: !15547)
!15554 = !DILocation(line: 117, column: 9, scope: !15547)
!15555 = !DILocation(line: 117, column: 2, scope: !15547)
!15556 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3514, file: !3514, line: 1246, type: !15557, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!3415, !15559}
!15559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15560, size: 32)
!15560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15443, line: 53, size: 2080, elements: !15561)
!15561 = !{!15562, !15564}
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15560, file: !15443, line: 54, baseType: !15563, size: 2048)
!15563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3451, size: 2048, elements: !2026)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15560, file: !15443, line: 55, baseType: !32, size: 32, offset: 2048)
!15565 = !DILocalVariable(name: "pq", arg: 1, scope: !15556, file: !3514, line: 1246, type: !15559)
!15566 = !DILocation(line: 1246, column: 50, scope: !15556)
!15567 = !DILocation(line: 1248, column: 7, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15556, file: !3514, line: 1248, column: 6)
!15569 = !DILocation(line: 1248, column: 11, scope: !15568)
!15570 = !DILocation(line: 1248, column: 6, scope: !15556)
!15571 = !DILocation(line: 1249, column: 3, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15568, file: !3514, line: 1248, column: 20)
!15573 = !DILocalVariable(name: "thread", scope: !15556, file: !3514, line: 1252, type: !3415)
!15574 = !DILocation(line: 1252, column: 19, scope: !15556)
!15575 = !DILocalVariable(name: "l", scope: !15556, file: !3514, line: 1253, type: !13629)
!15576 = !DILocation(line: 1253, column: 15, scope: !15556)
!15577 = !DILocation(line: 1253, column: 20, scope: !15556)
!15578 = !DILocation(line: 1253, column: 24, scope: !15556)
!15579 = !DILocation(line: 1253, column: 45, scope: !15556)
!15580 = !DILocation(line: 1253, column: 49, scope: !15556)
!15581 = !DILocation(line: 1253, column: 31, scope: !15556)
!15582 = !DILocalVariable(name: "n", scope: !15556, file: !3514, line: 1254, type: !3510)
!15583 = !DILocation(line: 1254, column: 15, scope: !15556)
!15584 = !DILocation(line: 1254, column: 39, scope: !15556)
!15585 = !DILocation(line: 1254, column: 19, scope: !15556)
!15586 = !DILocation(line: 1256, column: 6, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15556, file: !3514, line: 1256, column: 6)
!15588 = !DILocation(line: 1256, column: 8, scope: !15587)
!15589 = !DILocation(line: 1256, column: 6, scope: !15556)
!15590 = !DILocation(line: 1257, column: 12, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15587, file: !3514, line: 1256, column: 17)
!15592 = !DILocation(line: 1257, column: 10, scope: !15591)
!15593 = !DILocation(line: 1258, column: 2, scope: !15591)
!15594 = !DILocation(line: 1259, column: 9, scope: !15556)
!15595 = !DILocation(line: 1259, column: 2, scope: !15556)
!15596 = !DILocation(line: 1260, column: 1, scope: !15556)
!15597 = distinct !DISubprogram(name: "z_unpend_all", scope: !3514, file: !3514, line: 1262, type: !15598, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15598 = !DISubroutineType(types: !15599)
!15599 = !{!103, !3446}
!15600 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15597, file: !3514, line: 1262, type: !3446)
!15601 = !DILocation(line: 1262, column: 29, scope: !15597)
!15602 = !DILocalVariable(name: "need_sched", scope: !15597, file: !3514, line: 1264, type: !103)
!15603 = !DILocation(line: 1264, column: 6, scope: !15597)
!15604 = !DILocalVariable(name: "thread", scope: !15597, file: !3514, line: 1265, type: !3415)
!15605 = !DILocation(line: 1265, column: 19, scope: !15597)
!15606 = !DILocation(line: 1267, column: 2, scope: !15597)
!15607 = !DILocation(line: 1267, column: 32, scope: !15597)
!15608 = !DILocation(line: 1267, column: 19, scope: !15597)
!15609 = !DILocation(line: 1267, column: 17, scope: !15597)
!15610 = !DILocation(line: 1267, column: 41, scope: !15597)
!15611 = !DILocation(line: 1268, column: 19, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15597, file: !3514, line: 1267, column: 50)
!15613 = !DILocation(line: 1268, column: 3, scope: !15612)
!15614 = !DILocation(line: 1269, column: 18, scope: !15612)
!15615 = !DILocation(line: 1269, column: 3, scope: !15612)
!15616 = !DILocation(line: 1270, column: 14, scope: !15612)
!15617 = distinct !{!15617, !15606, !15618}
!15618 = !DILocation(line: 1271, column: 2, scope: !15597)
!15619 = !DILocation(line: 1273, column: 9, scope: !15597)
!15620 = !DILocation(line: 1273, column: 2, scope: !15597)
!15621 = distinct !DISubprogram(name: "z_waitq_head", scope: !12494, file: !12494, line: 52, type: !14986, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15622 = !DILocalVariable(name: "w", arg: 1, scope: !15621, file: !12494, line: 52, type: !3446)
!15623 = !DILocation(line: 52, column: 56, scope: !15621)
!15624 = !DILocation(line: 54, column: 49, scope: !15621)
!15625 = !DILocation(line: 54, column: 52, scope: !15621)
!15626 = !DILocation(line: 54, column: 28, scope: !15621)
!15627 = !DILocation(line: 54, column: 9, scope: !15621)
!15628 = !DILocation(line: 54, column: 2, scope: !15621)
!15629 = distinct !DISubprogram(name: "init_ready_q", scope: !3514, file: !3514, line: 1276, type: !15630, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15630 = !DISubroutineType(types: !15631)
!15631 = !{null, !15632}
!15632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15633, size: 32)
!15633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !15634)
!15634 = !{!15635, !15636}
!15635 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15633, file: !150, line: 86, baseType: !3415, size: 32)
!15636 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15633, file: !150, line: 90, baseType: !3451, size: 64, offset: 32)
!15637 = !DILocalVariable(name: "rq", arg: 1, scope: !15629, file: !3514, line: 1276, type: !15632)
!15638 = !DILocation(line: 1276, column: 36, scope: !15629)
!15639 = !DILocation(line: 1289, column: 18, scope: !15629)
!15640 = !DILocation(line: 1289, column: 22, scope: !15629)
!15641 = !DILocation(line: 1289, column: 2, scope: !15629)
!15642 = !DILocation(line: 1291, column: 1, scope: !15629)
!15643 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !15644, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{null, !13629}
!15646 = !DILocalVariable(name: "list", arg: 1, scope: !15643, file: !124, line: 197, type: !13629)
!15647 = !DILocation(line: 197, column: 48, scope: !15643)
!15648 = !DILocation(line: 199, column: 30, scope: !15643)
!15649 = !DILocation(line: 199, column: 2, scope: !15643)
!15650 = !DILocation(line: 199, column: 8, scope: !15643)
!15651 = !DILocation(line: 199, column: 13, scope: !15643)
!15652 = !DILocation(line: 200, column: 30, scope: !15643)
!15653 = !DILocation(line: 200, column: 2, scope: !15643)
!15654 = !DILocation(line: 200, column: 8, scope: !15643)
!15655 = !DILocation(line: 200, column: 13, scope: !15643)
!15656 = !DILocation(line: 201, column: 1, scope: !15643)
!15657 = distinct !DISubprogram(name: "z_sched_init", scope: !3514, file: !3514, line: 1293, type: !253, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15658 = !DILocation(line: 1302, column: 2, scope: !15657)
!15659 = !DILocation(line: 1306, column: 2, scope: !15657)
!15660 = !DILocation(line: 1309, column: 1, scope: !15657)
!15661 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3514, file: !3514, line: 1311, type: !15662, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15662 = !DISubroutineType(types: !15663)
!15663 = !{!103, !15664}
!15664 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3415)
!15665 = !DILocalVariable(name: "thread", arg: 1, scope: !15661, file: !3514, line: 1311, type: !15664)
!15666 = !DILocation(line: 1311, column: 42, scope: !15661)
!15667 = !DILocation(line: 1313, column: 9, scope: !15661)
!15668 = !DILocation(line: 1313, column: 17, scope: !15661)
!15669 = !DILocation(line: 1313, column: 22, scope: !15661)
!15670 = !DILocation(line: 1313, column: 2, scope: !15661)
!15671 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3514, file: !3514, line: 1325, type: !15672, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15672 = !DISubroutineType(types: !15673)
!15673 = !{null, !15664, !103}
!15674 = !DILocalVariable(name: "thread", arg: 1, scope: !15671, file: !3514, line: 1325, type: !15664)
!15675 = !DILocation(line: 1325, column: 43, scope: !15671)
!15676 = !DILocalVariable(name: "prio", arg: 2, scope: !15671, file: !3514, line: 1325, type: !103)
!15677 = !DILocation(line: 1325, column: 55, scope: !15671)
!15678 = !DILocation(line: 1331, column: 2, scope: !15671)
!15679 = !DILocation(line: 1331, column: 2, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15671, file: !3514, line: 1331, column: 2)
!15681 = !DILocalVariable(name: "th", scope: !15671, file: !3514, line: 1334, type: !3415)
!15682 = !DILocation(line: 1334, column: 19, scope: !15671)
!15683 = !DILocation(line: 1334, column: 43, scope: !15671)
!15684 = !DILocation(line: 1336, column: 24, scope: !15671)
!15685 = !DILocation(line: 1336, column: 28, scope: !15671)
!15686 = !DILocation(line: 1336, column: 2, scope: !15671)
!15687 = !DILocation(line: 1337, column: 1, scope: !15671)
!15688 = distinct !DISubprogram(name: "k_can_yield", scope: !3514, file: !3514, line: 1384, type: !4065, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15689 = !DILocation(line: 1386, column: 11, scope: !15688)
!15690 = !DILocation(line: 1386, column: 29, scope: !15688)
!15691 = !DILocation(line: 1386, column: 32, scope: !15688)
!15692 = !DILocation(line: 1386, column: 46, scope: !15688)
!15693 = !DILocation(line: 1387, column: 28, scope: !15688)
!15694 = !DILocation(line: 1387, column: 4, scope: !15688)
!15695 = !DILocation(line: 1386, column: 9, scope: !15688)
!15696 = !DILocation(line: 1386, column: 2, scope: !15688)
!15697 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !4065, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15698 = !DILocation(line: 993, column: 10, scope: !15697)
!15699 = !DILocation(line: 993, column: 9, scope: !15697)
!15700 = !DILocation(line: 993, column: 2, scope: !15697)
!15701 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3514, file: !3514, line: 1390, type: !253, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15702 = !DILocation(line: 1394, column: 2, scope: !15701)
!15703 = !DILocation(line: 1394, column: 2, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15701, file: !3514, line: 1394, column: 2)
!15705 = !DILocalVariable(name: "key", scope: !15701, file: !3514, line: 1396, type: !13166)
!15706 = !DILocation(line: 1396, column: 19, scope: !15701)
!15707 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 1396, column: 25, scope: !15701)
!15709 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15708)
!15710 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15708)
!15711 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15708)
!15713 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15712)
!15714 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15712)
!15715 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15708)
!15716 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15708)
!15717 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15708)
!15718 = !DILocation(line: 1396, column: 25, scope: !15701)
!15719 = !DILocation(line: 1400, column: 18, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15721, file: !3514, line: 1399, column: 36)
!15721 = distinct !DILexicalBlock(scope: !15701, file: !3514, line: 1398, column: 6)
!15722 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !15723)
!15723 = distinct !DILocation(line: 1400, column: 3, scope: !15720)
!15724 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !15723)
!15725 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !15723)
!15726 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !15723)
!15727 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !15723)
!15728 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !15723)
!15729 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !15723)
!15730 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !15723)
!15731 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !15723)
!15732 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !15723)
!15734 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !15733)
!15735 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !15733)
!15737 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !15733)
!15738 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !15733)
!15739 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !15733)
!15740 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !15723)
!15741 = !DILocation(line: 1402, column: 15, scope: !15701)
!15742 = !DILocation(line: 250, column: 57, scope: !13604, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 1402, column: 2, scope: !15701)
!15744 = !DILocation(line: 252, column: 2, scope: !13604, inlinedAt: !15743)
!15745 = !DILocation(line: 252, column: 10, scope: !13604, inlinedAt: !15743)
!15746 = !DILocation(line: 252, column: 15, scope: !13604, inlinedAt: !15743)
!15747 = !DILocation(line: 252, column: 28, scope: !13604, inlinedAt: !15743)
!15748 = !DILocation(line: 253, column: 26, scope: !13612, inlinedAt: !15743)
!15749 = !DILocation(line: 253, column: 6, scope: !13612, inlinedAt: !15743)
!15750 = !DILocation(line: 253, column: 6, scope: !13604, inlinedAt: !15743)
!15751 = !DILocation(line: 254, column: 12, scope: !13616, inlinedAt: !15743)
!15752 = !DILocation(line: 227, column: 53, scope: !13618, inlinedAt: !15753)
!15753 = distinct !DILocation(line: 254, column: 3, scope: !13616, inlinedAt: !15743)
!15754 = !DILocation(line: 229, column: 28, scope: !13618, inlinedAt: !15753)
!15755 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 229, column: 16, scope: !13618, inlinedAt: !15753)
!15757 = !DILocation(line: 229, column: 37, scope: !13618, inlinedAt: !15753)
!15758 = !DILocation(line: 181, column: 56, scope: !13626, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 229, column: 2, scope: !13618, inlinedAt: !15753)
!15760 = !DILocation(line: 182, column: 25, scope: !13626, inlinedAt: !15759)
!15761 = !DILocation(line: 184, column: 19, scope: !13626, inlinedAt: !15759)
!15762 = !DILocation(line: 188, column: 2, scope: !13637, inlinedAt: !15759)
!15763 = !DILocation(line: 188, column: 2, scope: !13639, inlinedAt: !15759)
!15764 = !DILocation(line: 189, column: 24, scope: !13641, inlinedAt: !15759)
!15765 = !DILocation(line: 189, column: 32, scope: !13641, inlinedAt: !15759)
!15766 = !DILocation(line: 189, column: 7, scope: !13641, inlinedAt: !15759)
!15767 = !DILocation(line: 189, column: 35, scope: !13641, inlinedAt: !15759)
!15768 = !DILocation(line: 189, column: 7, scope: !13642, inlinedAt: !15759)
!15769 = !DILocation(line: 190, column: 22, scope: !13648, inlinedAt: !15759)
!15770 = !DILocation(line: 190, column: 25, scope: !13648, inlinedAt: !15759)
!15771 = !DILocation(line: 190, column: 30, scope: !13648, inlinedAt: !15759)
!15772 = !DILocation(line: 191, column: 8, scope: !13648, inlinedAt: !15759)
!15773 = !DILocation(line: 191, column: 16, scope: !13648, inlinedAt: !15759)
!15774 = !DILocation(line: 191, column: 21, scope: !13648, inlinedAt: !15759)
!15775 = !DILocation(line: 190, column: 4, scope: !13648, inlinedAt: !15759)
!15776 = !DILocation(line: 192, column: 4, scope: !13648, inlinedAt: !15759)
!15777 = distinct !{!15777, !15762, !15778}
!15778 = !DILocation(line: 194, column: 2, scope: !13637, inlinedAt: !15759)
!15779 = !DILocation(line: 196, column: 19, scope: !13626, inlinedAt: !15759)
!15780 = !DILocation(line: 196, column: 24, scope: !13626, inlinedAt: !15759)
!15781 = !DILocation(line: 196, column: 32, scope: !13626, inlinedAt: !15759)
!15782 = !DILocation(line: 196, column: 37, scope: !13626, inlinedAt: !15759)
!15783 = !DILocation(line: 196, column: 2, scope: !13626, inlinedAt: !15759)
!15784 = !DILocation(line: 197, column: 1, scope: !13626, inlinedAt: !15759)
!15785 = !DILocation(line: 255, column: 2, scope: !13616, inlinedAt: !15743)
!15786 = !DILocation(line: 1403, column: 2, scope: !15701)
!15787 = !DILocation(line: 1404, column: 2, scope: !15701)
!15788 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 1404, column: 2, scope: !15701)
!15790 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !15789)
!15791 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !15789)
!15792 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !15793)
!15793 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !15789)
!15794 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !15793)
!15795 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !15789)
!15796 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !15789)
!15797 = !DILocation(line: 1405, column: 1, scope: !15701)
!15798 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3514, file: !3514, line: 1459, type: !15799, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15799 = !DISubroutineType(types: !15800)
!15800 = !{!250, !14551}
!15801 = !DILocalVariable(name: "timeout", arg: 1, scope: !15798, file: !3514, line: 1459, type: !14551)
!15802 = !DILocation(line: 1459, column: 36, scope: !15798)
!15803 = !DILocalVariable(name: "ticks", scope: !15798, file: !3514, line: 1461, type: !2815)
!15804 = !DILocation(line: 1461, column: 12, scope: !15798)
!15805 = !DILocation(line: 1465, column: 2, scope: !15798)
!15806 = !DILocation(line: 1465, column: 2, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15798, file: !3514, line: 1465, column: 2)
!15808 = !DILocation(line: 1468, column: 6, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15798, file: !3514, line: 1468, column: 6)
!15810 = !DILocation(line: 1468, column: 6, scope: !15798)
!15811 = !DILocation(line: 1469, column: 20, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15809, file: !3514, line: 1468, column: 40)
!15813 = !DILocation(line: 1469, column: 3, scope: !15812)
!15814 = !DILocation(line: 1471, column: 3, scope: !15812)
!15815 = !DILocation(line: 1471, column: 3, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15812, file: !3514, line: 1471, column: 3)
!15817 = !DILocation(line: 1473, column: 3, scope: !15812)
!15818 = !DILocation(line: 1476, column: 18, scope: !15798)
!15819 = !DILocation(line: 1476, column: 8, scope: !15798)
!15820 = !DILocation(line: 1478, column: 23, scope: !15798)
!15821 = !DILocation(line: 1478, column: 10, scope: !15798)
!15822 = !DILocation(line: 1478, column: 8, scope: !15798)
!15823 = !DILocalVariable(name: "ret", scope: !15798, file: !3514, line: 1480, type: !250)
!15824 = !DILocation(line: 1480, column: 10, scope: !15798)
!15825 = !DILocation(line: 1480, column: 38, scope: !15798)
!15826 = !DILocation(line: 1480, column: 16, scope: !15798)
!15827 = !DILocation(line: 1482, column: 2, scope: !15798)
!15828 = !DILocation(line: 1482, column: 2, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15798, file: !3514, line: 1482, column: 2)
!15830 = !DILocation(line: 1484, column: 9, scope: !15798)
!15831 = !DILocation(line: 1484, column: 2, scope: !15798)
!15832 = !DILocation(line: 1485, column: 1, scope: !15798)
!15833 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4142, file: !4142, line: 310, type: !15834, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{null, !15664}
!15836 = !DILocalVariable(name: "thread", arg: 1, scope: !15833, file: !4142, line: 310, type: !15664)
!15837 = !DILocation(line: 310, column: 45, scope: !15833)
!15838 = !DILocation(line: 319, column: 2, scope: !15833)
!15839 = !DILocation(line: 319, column: 2, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15833, file: !4142, line: 319, column: 2)
!15841 = !{i64 2149702960}
!15842 = !DILocation(line: 320, column: 26, scope: !15833)
!15843 = !DILocation(line: 320, column: 2, scope: !15833)
!15844 = !DILocation(line: 321, column: 1, scope: !15833)
!15845 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3514, file: !3514, line: 1415, type: !15846, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15846 = !DISubroutineType(types: !15847)
!15847 = !{!250, !2815}
!15848 = !DILocalVariable(name: "ticks", arg: 1, scope: !15845, file: !3514, line: 1415, type: !2815)
!15849 = !DILocation(line: 1415, column: 39, scope: !15845)
!15850 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15845, file: !3514, line: 1418, type: !173)
!15851 = !DILocation(line: 1418, column: 11, scope: !15845)
!15852 = !DILocation(line: 1422, column: 2, scope: !15845)
!15853 = !DILocation(line: 1422, column: 2, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15855, file: !3514, line: 1422, column: 2)
!15855 = distinct !DILexicalBlock(scope: !15856, file: !3514, line: 1422, column: 2)
!15856 = distinct !DILexicalBlock(scope: !15845, file: !3514, line: 1422, column: 2)
!15857 = !DILocation(line: 1425, column: 6, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15845, file: !3514, line: 1425, column: 6)
!15859 = !DILocation(line: 1425, column: 12, scope: !15858)
!15860 = !DILocation(line: 1425, column: 6, scope: !15845)
!15861 = !DILocation(line: 1426, column: 3, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15858, file: !3514, line: 1425, column: 18)
!15863 = !DILocation(line: 1427, column: 3, scope: !15862)
!15864 = !DILocalVariable(name: "timeout", scope: !15845, file: !3514, line: 1430, type: !14551)
!15865 = !DILocation(line: 1430, column: 14, scope: !15845)
!15866 = !DILocation(line: 1430, column: 24, scope: !15845)
!15867 = !DILocation(line: 1431, column: 6, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15845, file: !3514, line: 1431, column: 6)
!15869 = !DILocation(line: 1431, column: 24, scope: !15868)
!15870 = !DILocation(line: 1431, column: 6, scope: !15845)
!15871 = !DILocation(line: 1432, column: 27, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15868, file: !3514, line: 1431, column: 30)
!15873 = !DILocation(line: 1432, column: 35, scope: !15872)
!15874 = !DILocation(line: 1432, column: 33, scope: !15872)
!15875 = !DILocation(line: 1432, column: 25, scope: !15872)
!15876 = !DILocation(line: 1433, column: 2, scope: !15872)
!15877 = !DILocation(line: 1434, column: 27, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15868, file: !3514, line: 1433, column: 9)
!15879 = !DILocation(line: 1434, column: 25, scope: !15878)
!15880 = !DILocalVariable(name: "key", scope: !15845, file: !3514, line: 1437, type: !13166)
!15881 = !DILocation(line: 1437, column: 19, scope: !15845)
!15882 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 1437, column: 25, scope: !15845)
!15884 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !15883)
!15885 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !15883)
!15886 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !15883)
!15888 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !15887)
!15889 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !15887)
!15890 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !15883)
!15891 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !15883)
!15892 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !15883)
!15893 = !DILocation(line: 1437, column: 25, scope: !15845)
!15894 = !DILocation(line: 1440, column: 20, scope: !15845)
!15895 = !DILocation(line: 1440, column: 18, scope: !15845)
!15896 = !DILocation(line: 1442, column: 17, scope: !15845)
!15897 = !DILocation(line: 1442, column: 2, scope: !15845)
!15898 = !DILocation(line: 1443, column: 23, scope: !15845)
!15899 = !DILocation(line: 1443, column: 2, scope: !15845)
!15900 = !DILocation(line: 1444, column: 29, scope: !15845)
!15901 = !DILocation(line: 1444, column: 2, scope: !15845)
!15902 = !DILocation(line: 1446, column: 8, scope: !15845)
!15903 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 1446, column: 8, scope: !15845)
!15905 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !15904)
!15906 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !15904)
!15907 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !15904)
!15909 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !15908)
!15910 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !15904)
!15911 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !15904)
!15912 = !DILocation(line: 1450, column: 21, scope: !15845)
!15913 = !DILocation(line: 1450, column: 10, scope: !15845)
!15914 = !DILocation(line: 1450, column: 45, scope: !15845)
!15915 = !DILocation(line: 1450, column: 43, scope: !15845)
!15916 = !DILocation(line: 1450, column: 8, scope: !15845)
!15917 = !DILocation(line: 1451, column: 6, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15845, file: !3514, line: 1451, column: 6)
!15919 = !DILocation(line: 1451, column: 12, scope: !15918)
!15920 = !DILocation(line: 1451, column: 6, scope: !15845)
!15921 = !DILocation(line: 1452, column: 10, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15918, file: !3514, line: 1451, column: 17)
!15923 = !DILocation(line: 1452, column: 3, scope: !15922)
!15924 = !DILocation(line: 1456, column: 2, scope: !15845)
!15925 = !DILocation(line: 1457, column: 1, scope: !15845)
!15926 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !10787, file: !10787, line: 1103, type: !12804, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!15927 = !DILocalVariable(name: "t", arg: 1, scope: !15926, file: !10787, line: 1103, type: !2246)
!15928 = !DILocation(line: 1103, column: 70, scope: !15926)
!15929 = !DILocation(line: 1106, column: 17, scope: !15926)
!15930 = !DILocation(line: 102, column: 63, scope: !13245, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 1106, column: 9, scope: !15926)
!15932 = !DILocation(line: 102, column: 75, scope: !13245, inlinedAt: !15931)
!15933 = !DILocation(line: 103, column: 18, scope: !13245, inlinedAt: !15931)
!15934 = !DILocation(line: 103, column: 30, scope: !13245, inlinedAt: !15931)
!15935 = !DILocation(line: 104, column: 14, scope: !13245, inlinedAt: !15931)
!15936 = !DILocation(line: 104, column: 29, scope: !13245, inlinedAt: !15931)
!15937 = !DILocation(line: 105, column: 14, scope: !13245, inlinedAt: !15931)
!15938 = !DILocation(line: 107, column: 7, scope: !13245, inlinedAt: !15931)
!15939 = !DILocation(line: 107, column: 19, scope: !13245, inlinedAt: !15931)
!15940 = !DILocation(line: 107, column: 28, scope: !13245, inlinedAt: !15931)
!15941 = !DILocation(line: 108, column: 4, scope: !13245, inlinedAt: !15931)
!15942 = !DILocation(line: 108, column: 12, scope: !13245, inlinedAt: !15931)
!15943 = !DILocation(line: 108, column: 10, scope: !13245, inlinedAt: !15931)
!15944 = !DILocation(line: 108, column: 21, scope: !13245, inlinedAt: !15931)
!15945 = !DILocation(line: 108, column: 26, scope: !13245, inlinedAt: !15931)
!15946 = !DILocation(line: 108, column: 34, scope: !13245, inlinedAt: !15931)
!15947 = !DILocation(line: 108, column: 32, scope: !13245, inlinedAt: !15931)
!15948 = !DILocation(line: 108, column: 43, scope: !13245, inlinedAt: !15931)
!15949 = !DILocation(line: 0, scope: !13245, inlinedAt: !15931)
!15950 = !DILocation(line: 109, column: 7, scope: !13245, inlinedAt: !15931)
!15951 = !DILocation(line: 109, column: 19, scope: !13245, inlinedAt: !15931)
!15952 = !DILocation(line: 109, column: 28, scope: !13245, inlinedAt: !15931)
!15953 = !DILocation(line: 110, column: 4, scope: !13245, inlinedAt: !15931)
!15954 = !DILocation(line: 110, column: 14, scope: !13245, inlinedAt: !15931)
!15955 = !DILocation(line: 110, column: 12, scope: !13245, inlinedAt: !15931)
!15956 = !DILocation(line: 110, column: 21, scope: !13245, inlinedAt: !15931)
!15957 = !DILocation(line: 110, column: 26, scope: !13245, inlinedAt: !15931)
!15958 = !DILocation(line: 110, column: 36, scope: !13245, inlinedAt: !15931)
!15959 = !DILocation(line: 110, column: 34, scope: !13245, inlinedAt: !15931)
!15960 = !DILocation(line: 110, column: 43, scope: !13245, inlinedAt: !15931)
!15961 = !DILocation(line: 112, column: 6, scope: !13286, inlinedAt: !15931)
!15962 = !DILocation(line: 112, column: 17, scope: !13286, inlinedAt: !15931)
!15963 = !DILocation(line: 112, column: 14, scope: !13286, inlinedAt: !15931)
!15964 = !DILocation(line: 112, column: 6, scope: !13245, inlinedAt: !15931)
!15965 = !DILocation(line: 113, column: 10, scope: !13291, inlinedAt: !15931)
!15966 = !DILocation(line: 113, column: 32, scope: !13291, inlinedAt: !15931)
!15967 = !DILocation(line: 113, column: 22, scope: !13291, inlinedAt: !15931)
!15968 = !DILocation(line: 113, column: 21, scope: !13291, inlinedAt: !15931)
!15969 = !DILocation(line: 113, column: 37, scope: !13291, inlinedAt: !15931)
!15970 = !DILocation(line: 113, column: 3, scope: !13291, inlinedAt: !15931)
!15971 = !DILocation(line: 116, column: 11, scope: !13245, inlinedAt: !15931)
!15972 = !DILocation(line: 118, column: 7, scope: !13300, inlinedAt: !15931)
!15973 = !DILocation(line: 118, column: 6, scope: !13245, inlinedAt: !15931)
!15974 = !DILocation(line: 119, column: 12, scope: !13303, inlinedAt: !15931)
!15975 = !DILocation(line: 119, column: 23, scope: !13303, inlinedAt: !15931)
!15976 = !DILocation(line: 119, column: 36, scope: !13303, inlinedAt: !15931)
!15977 = !DILocation(line: 119, column: 46, scope: !13303, inlinedAt: !15931)
!15978 = !DILocation(line: 119, column: 44, scope: !13303, inlinedAt: !15931)
!15979 = !DILocation(line: 119, column: 55, scope: !13303, inlinedAt: !15931)
!15980 = !DILocation(line: 121, column: 7, scope: !13311, inlinedAt: !15931)
!15981 = !DILocation(line: 121, column: 7, scope: !13303, inlinedAt: !15931)
!15982 = !DILocation(line: 122, column: 10, scope: !13314, inlinedAt: !15931)
!15983 = !DILocation(line: 122, column: 19, scope: !13314, inlinedAt: !15931)
!15984 = !DILocation(line: 122, column: 8, scope: !13314, inlinedAt: !15931)
!15985 = !DILocation(line: 123, column: 3, scope: !13314, inlinedAt: !15931)
!15986 = !DILocation(line: 124, column: 7, scope: !13319, inlinedAt: !15931)
!15987 = !DILocation(line: 124, column: 7, scope: !13303, inlinedAt: !15931)
!15988 = !DILocation(line: 125, column: 10, scope: !13322, inlinedAt: !15931)
!15989 = !DILocation(line: 125, column: 19, scope: !13322, inlinedAt: !15931)
!15990 = !DILocation(line: 125, column: 8, scope: !13322, inlinedAt: !15931)
!15991 = !DILocation(line: 126, column: 3, scope: !13322, inlinedAt: !15931)
!15992 = !DILocation(line: 127, column: 2, scope: !13303, inlinedAt: !15931)
!15993 = !DILocation(line: 134, column: 6, scope: !13328, inlinedAt: !15931)
!15994 = !DILocation(line: 134, column: 6, scope: !13245, inlinedAt: !15931)
!15995 = !DILocation(line: 135, column: 8, scope: !13331, inlinedAt: !15931)
!15996 = !DILocation(line: 135, column: 5, scope: !13331, inlinedAt: !15931)
!15997 = !DILocation(line: 136, column: 7, scope: !13334, inlinedAt: !15931)
!15998 = !DILocation(line: 136, column: 16, scope: !13334, inlinedAt: !15931)
!15999 = !DILocation(line: 136, column: 20, scope: !13334, inlinedAt: !15931)
!16000 = !DILocation(line: 136, column: 22, scope: !13334, inlinedAt: !15931)
!16001 = !DILocation(line: 136, column: 7, scope: !13331, inlinedAt: !15931)
!16002 = !DILocation(line: 137, column: 22, scope: !13340, inlinedAt: !15931)
!16003 = !DILocation(line: 137, column: 12, scope: !13340, inlinedAt: !15931)
!16004 = !DILocation(line: 137, column: 28, scope: !13340, inlinedAt: !15931)
!16005 = !DILocation(line: 137, column: 38, scope: !13340, inlinedAt: !15931)
!16006 = !DILocation(line: 137, column: 36, scope: !13340, inlinedAt: !15931)
!16007 = !DILocation(line: 137, column: 25, scope: !13340, inlinedAt: !15931)
!16008 = !DILocation(line: 137, column: 11, scope: !13340, inlinedAt: !15931)
!16009 = !DILocation(line: 137, column: 4, scope: !13340, inlinedAt: !15931)
!16010 = !DILocation(line: 139, column: 11, scope: !13349, inlinedAt: !15931)
!16011 = !DILocation(line: 139, column: 26, scope: !13349, inlinedAt: !15931)
!16012 = !DILocation(line: 139, column: 16, scope: !13349, inlinedAt: !15931)
!16013 = !DILocation(line: 139, column: 36, scope: !13349, inlinedAt: !15931)
!16014 = !DILocation(line: 139, column: 34, scope: !13349, inlinedAt: !15931)
!16015 = !DILocation(line: 139, column: 13, scope: !13349, inlinedAt: !15931)
!16016 = !DILocation(line: 139, column: 4, scope: !13349, inlinedAt: !15931)
!16017 = !DILocation(line: 141, column: 13, scope: !13357, inlinedAt: !15931)
!16018 = !DILocation(line: 141, column: 13, scope: !13328, inlinedAt: !15931)
!16019 = !DILocation(line: 142, column: 7, scope: !13360, inlinedAt: !15931)
!16020 = !DILocation(line: 142, column: 7, scope: !13361, inlinedAt: !15931)
!16021 = !DILocation(line: 143, column: 22, scope: !13364, inlinedAt: !15931)
!16022 = !DILocation(line: 143, column: 12, scope: !13364, inlinedAt: !15931)
!16023 = !DILocation(line: 143, column: 28, scope: !13364, inlinedAt: !15931)
!16024 = !DILocation(line: 143, column: 36, scope: !13364, inlinedAt: !15931)
!16025 = !DILocation(line: 143, column: 34, scope: !13364, inlinedAt: !15931)
!16026 = !DILocation(line: 143, column: 25, scope: !13364, inlinedAt: !15931)
!16027 = !DILocation(line: 143, column: 11, scope: !13364, inlinedAt: !15931)
!16028 = !DILocation(line: 143, column: 4, scope: !13364, inlinedAt: !15931)
!16029 = !DILocation(line: 145, column: 11, scope: !13373, inlinedAt: !15931)
!16030 = !DILocation(line: 145, column: 26, scope: !13373, inlinedAt: !15931)
!16031 = !DILocation(line: 145, column: 16, scope: !13373, inlinedAt: !15931)
!16032 = !DILocation(line: 145, column: 34, scope: !13373, inlinedAt: !15931)
!16033 = !DILocation(line: 145, column: 32, scope: !13373, inlinedAt: !15931)
!16034 = !DILocation(line: 145, column: 13, scope: !13373, inlinedAt: !15931)
!16035 = !DILocation(line: 145, column: 4, scope: !13373, inlinedAt: !15931)
!16036 = !DILocation(line: 148, column: 7, scope: !13381, inlinedAt: !15931)
!16037 = !DILocation(line: 148, column: 7, scope: !13382, inlinedAt: !15931)
!16038 = !DILocation(line: 149, column: 23, scope: !13385, inlinedAt: !15931)
!16039 = !DILocation(line: 149, column: 27, scope: !13385, inlinedAt: !15931)
!16040 = !DILocation(line: 149, column: 25, scope: !13385, inlinedAt: !15931)
!16041 = !DILocation(line: 149, column: 35, scope: !13385, inlinedAt: !15931)
!16042 = !DILocation(line: 149, column: 33, scope: !13385, inlinedAt: !15931)
!16043 = !DILocation(line: 149, column: 42, scope: !13385, inlinedAt: !15931)
!16044 = !DILocation(line: 149, column: 40, scope: !13385, inlinedAt: !15931)
!16045 = !DILocation(line: 149, column: 11, scope: !13385, inlinedAt: !15931)
!16046 = !DILocation(line: 149, column: 4, scope: !13385, inlinedAt: !15931)
!16047 = !DILocation(line: 150, column: 14, scope: !13395, inlinedAt: !15931)
!16048 = !DILocation(line: 150, column: 23, scope: !13395, inlinedAt: !15931)
!16049 = !DILocation(line: 150, column: 26, scope: !13395, inlinedAt: !15931)
!16050 = !DILocation(line: 150, column: 14, scope: !13381, inlinedAt: !15931)
!16051 = !DILocation(line: 156, column: 13, scope: !13400, inlinedAt: !15931)
!16052 = !DILocation(line: 156, column: 17, scope: !13400, inlinedAt: !15931)
!16053 = !DILocation(line: 156, column: 15, scope: !13400, inlinedAt: !15931)
!16054 = !DILocation(line: 156, column: 25, scope: !13400, inlinedAt: !15931)
!16055 = !DILocation(line: 156, column: 23, scope: !13400, inlinedAt: !15931)
!16056 = !DILocation(line: 156, column: 32, scope: !13400, inlinedAt: !15931)
!16057 = !DILocation(line: 156, column: 30, scope: !13400, inlinedAt: !15931)
!16058 = !DILocation(line: 156, column: 4, scope: !13400, inlinedAt: !15931)
!16059 = !DILocation(line: 161, column: 12, scope: !13409, inlinedAt: !15931)
!16060 = !DILocation(line: 161, column: 16, scope: !13409, inlinedAt: !15931)
!16061 = !DILocation(line: 161, column: 14, scope: !13409, inlinedAt: !15931)
!16062 = !DILocation(line: 161, column: 27, scope: !13409, inlinedAt: !15931)
!16063 = !DILocation(line: 161, column: 25, scope: !13409, inlinedAt: !15931)
!16064 = !DILocation(line: 161, column: 37, scope: !13409, inlinedAt: !15931)
!16065 = !DILocation(line: 161, column: 41, scope: !13409, inlinedAt: !15931)
!16066 = !DILocation(line: 161, column: 39, scope: !13409, inlinedAt: !15931)
!16067 = !DILocation(line: 161, column: 52, scope: !13409, inlinedAt: !15931)
!16068 = !DILocation(line: 161, column: 50, scope: !13409, inlinedAt: !15931)
!16069 = !DILocation(line: 161, column: 60, scope: !13409, inlinedAt: !15931)
!16070 = !DILocation(line: 161, column: 58, scope: !13409, inlinedAt: !15931)
!16071 = !DILocation(line: 161, column: 67, scope: !13409, inlinedAt: !15931)
!16072 = !DILocation(line: 161, column: 65, scope: !13409, inlinedAt: !15931)
!16073 = !DILocation(line: 161, column: 33, scope: !13409, inlinedAt: !15931)
!16074 = !DILocation(line: 161, column: 4, scope: !13409, inlinedAt: !15931)
!16075 = !DILocation(line: 164, column: 1, scope: !13245, inlinedAt: !15931)
!16076 = !DILocation(line: 1106, column: 2, scope: !15926)
!16077 = distinct !DISubprogram(name: "k_yield", scope: !4142, file: !4142, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16078 = !DILocation(line: 148, column: 2, scope: !16077)
!16079 = !DILocation(line: 148, column: 2, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16077, file: !4142, line: 148, column: 2)
!16081 = !{i64 2149702280}
!16082 = !DILocation(line: 149, column: 2, scope: !16077)
!16083 = !DILocation(line: 150, column: 1, scope: !16077)
!16084 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3514, file: !3514, line: 1495, type: !16085, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{!250, !103}
!16087 = !DILocalVariable(name: "us", arg: 1, scope: !16084, file: !3514, line: 1495, type: !103)
!16088 = !DILocation(line: 1495, column: 29, scope: !16084)
!16089 = !DILocalVariable(name: "ticks", scope: !16084, file: !3514, line: 1497, type: !250)
!16090 = !DILocation(line: 1497, column: 10, scope: !16084)
!16091 = !DILocation(line: 1499, column: 2, scope: !16084)
!16092 = !DILocation(line: 1499, column: 2, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16084, file: !3514, line: 1499, column: 2)
!16094 = !DILocation(line: 1501, column: 31, scope: !16084)
!16095 = !DILocation(line: 1501, column: 10, scope: !16084)
!16096 = !DILocation(line: 1501, column: 8, scope: !16084)
!16097 = !DILocation(line: 1502, column: 23, scope: !16084)
!16098 = !DILocation(line: 1502, column: 10, scope: !16084)
!16099 = !DILocation(line: 1502, column: 8, scope: !16084)
!16100 = !DILocation(line: 1504, column: 2, scope: !16084)
!16101 = !DILocation(line: 1504, column: 2, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16084, file: !3514, line: 1504, column: 2)
!16103 = !DILocation(line: 1506, column: 31, scope: !16084)
!16104 = !DILocation(line: 1506, column: 9, scope: !16084)
!16105 = !DILocation(line: 1506, column: 2, scope: !16084)
!16106 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !10787, file: !10787, line: 571, type: !12804, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16107 = !DILocalVariable(name: "t", arg: 1, scope: !16106, file: !10787, line: 571, type: !2246)
!16108 = !DILocation(line: 571, column: 69, scope: !16106)
!16109 = !DILocation(line: 574, column: 17, scope: !16106)
!16110 = !DILocation(line: 102, column: 63, scope: !13245, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 574, column: 9, scope: !16106)
!16112 = !DILocation(line: 102, column: 75, scope: !13245, inlinedAt: !16111)
!16113 = !DILocation(line: 103, column: 18, scope: !13245, inlinedAt: !16111)
!16114 = !DILocation(line: 103, column: 30, scope: !13245, inlinedAt: !16111)
!16115 = !DILocation(line: 104, column: 14, scope: !13245, inlinedAt: !16111)
!16116 = !DILocation(line: 104, column: 29, scope: !13245, inlinedAt: !16111)
!16117 = !DILocation(line: 105, column: 14, scope: !13245, inlinedAt: !16111)
!16118 = !DILocation(line: 107, column: 7, scope: !13245, inlinedAt: !16111)
!16119 = !DILocation(line: 107, column: 19, scope: !13245, inlinedAt: !16111)
!16120 = !DILocation(line: 107, column: 28, scope: !13245, inlinedAt: !16111)
!16121 = !DILocation(line: 108, column: 4, scope: !13245, inlinedAt: !16111)
!16122 = !DILocation(line: 108, column: 12, scope: !13245, inlinedAt: !16111)
!16123 = !DILocation(line: 108, column: 10, scope: !13245, inlinedAt: !16111)
!16124 = !DILocation(line: 108, column: 21, scope: !13245, inlinedAt: !16111)
!16125 = !DILocation(line: 108, column: 26, scope: !13245, inlinedAt: !16111)
!16126 = !DILocation(line: 108, column: 34, scope: !13245, inlinedAt: !16111)
!16127 = !DILocation(line: 108, column: 32, scope: !13245, inlinedAt: !16111)
!16128 = !DILocation(line: 108, column: 43, scope: !13245, inlinedAt: !16111)
!16129 = !DILocation(line: 0, scope: !13245, inlinedAt: !16111)
!16130 = !DILocation(line: 109, column: 7, scope: !13245, inlinedAt: !16111)
!16131 = !DILocation(line: 109, column: 19, scope: !13245, inlinedAt: !16111)
!16132 = !DILocation(line: 109, column: 28, scope: !13245, inlinedAt: !16111)
!16133 = !DILocation(line: 110, column: 4, scope: !13245, inlinedAt: !16111)
!16134 = !DILocation(line: 110, column: 14, scope: !13245, inlinedAt: !16111)
!16135 = !DILocation(line: 110, column: 12, scope: !13245, inlinedAt: !16111)
!16136 = !DILocation(line: 110, column: 21, scope: !13245, inlinedAt: !16111)
!16137 = !DILocation(line: 110, column: 26, scope: !13245, inlinedAt: !16111)
!16138 = !DILocation(line: 110, column: 36, scope: !13245, inlinedAt: !16111)
!16139 = !DILocation(line: 110, column: 34, scope: !13245, inlinedAt: !16111)
!16140 = !DILocation(line: 110, column: 43, scope: !13245, inlinedAt: !16111)
!16141 = !DILocation(line: 112, column: 6, scope: !13286, inlinedAt: !16111)
!16142 = !DILocation(line: 112, column: 17, scope: !13286, inlinedAt: !16111)
!16143 = !DILocation(line: 112, column: 14, scope: !13286, inlinedAt: !16111)
!16144 = !DILocation(line: 112, column: 6, scope: !13245, inlinedAt: !16111)
!16145 = !DILocation(line: 113, column: 10, scope: !13291, inlinedAt: !16111)
!16146 = !DILocation(line: 113, column: 32, scope: !13291, inlinedAt: !16111)
!16147 = !DILocation(line: 113, column: 22, scope: !13291, inlinedAt: !16111)
!16148 = !DILocation(line: 113, column: 21, scope: !13291, inlinedAt: !16111)
!16149 = !DILocation(line: 113, column: 37, scope: !13291, inlinedAt: !16111)
!16150 = !DILocation(line: 113, column: 3, scope: !13291, inlinedAt: !16111)
!16151 = !DILocation(line: 116, column: 11, scope: !13245, inlinedAt: !16111)
!16152 = !DILocation(line: 118, column: 7, scope: !13300, inlinedAt: !16111)
!16153 = !DILocation(line: 118, column: 6, scope: !13245, inlinedAt: !16111)
!16154 = !DILocation(line: 119, column: 12, scope: !13303, inlinedAt: !16111)
!16155 = !DILocation(line: 119, column: 23, scope: !13303, inlinedAt: !16111)
!16156 = !DILocation(line: 119, column: 36, scope: !13303, inlinedAt: !16111)
!16157 = !DILocation(line: 119, column: 46, scope: !13303, inlinedAt: !16111)
!16158 = !DILocation(line: 119, column: 44, scope: !13303, inlinedAt: !16111)
!16159 = !DILocation(line: 119, column: 55, scope: !13303, inlinedAt: !16111)
!16160 = !DILocation(line: 121, column: 7, scope: !13311, inlinedAt: !16111)
!16161 = !DILocation(line: 121, column: 7, scope: !13303, inlinedAt: !16111)
!16162 = !DILocation(line: 122, column: 10, scope: !13314, inlinedAt: !16111)
!16163 = !DILocation(line: 122, column: 19, scope: !13314, inlinedAt: !16111)
!16164 = !DILocation(line: 122, column: 8, scope: !13314, inlinedAt: !16111)
!16165 = !DILocation(line: 123, column: 3, scope: !13314, inlinedAt: !16111)
!16166 = !DILocation(line: 124, column: 7, scope: !13319, inlinedAt: !16111)
!16167 = !DILocation(line: 124, column: 7, scope: !13303, inlinedAt: !16111)
!16168 = !DILocation(line: 125, column: 10, scope: !13322, inlinedAt: !16111)
!16169 = !DILocation(line: 125, column: 19, scope: !13322, inlinedAt: !16111)
!16170 = !DILocation(line: 125, column: 8, scope: !13322, inlinedAt: !16111)
!16171 = !DILocation(line: 126, column: 3, scope: !13322, inlinedAt: !16111)
!16172 = !DILocation(line: 127, column: 2, scope: !13303, inlinedAt: !16111)
!16173 = !DILocation(line: 134, column: 6, scope: !13328, inlinedAt: !16111)
!16174 = !DILocation(line: 134, column: 6, scope: !13245, inlinedAt: !16111)
!16175 = !DILocation(line: 135, column: 8, scope: !13331, inlinedAt: !16111)
!16176 = !DILocation(line: 135, column: 5, scope: !13331, inlinedAt: !16111)
!16177 = !DILocation(line: 136, column: 7, scope: !13334, inlinedAt: !16111)
!16178 = !DILocation(line: 136, column: 16, scope: !13334, inlinedAt: !16111)
!16179 = !DILocation(line: 136, column: 20, scope: !13334, inlinedAt: !16111)
!16180 = !DILocation(line: 136, column: 22, scope: !13334, inlinedAt: !16111)
!16181 = !DILocation(line: 136, column: 7, scope: !13331, inlinedAt: !16111)
!16182 = !DILocation(line: 137, column: 22, scope: !13340, inlinedAt: !16111)
!16183 = !DILocation(line: 137, column: 12, scope: !13340, inlinedAt: !16111)
!16184 = !DILocation(line: 137, column: 28, scope: !13340, inlinedAt: !16111)
!16185 = !DILocation(line: 137, column: 38, scope: !13340, inlinedAt: !16111)
!16186 = !DILocation(line: 137, column: 36, scope: !13340, inlinedAt: !16111)
!16187 = !DILocation(line: 137, column: 25, scope: !13340, inlinedAt: !16111)
!16188 = !DILocation(line: 137, column: 11, scope: !13340, inlinedAt: !16111)
!16189 = !DILocation(line: 137, column: 4, scope: !13340, inlinedAt: !16111)
!16190 = !DILocation(line: 139, column: 11, scope: !13349, inlinedAt: !16111)
!16191 = !DILocation(line: 139, column: 26, scope: !13349, inlinedAt: !16111)
!16192 = !DILocation(line: 139, column: 16, scope: !13349, inlinedAt: !16111)
!16193 = !DILocation(line: 139, column: 36, scope: !13349, inlinedAt: !16111)
!16194 = !DILocation(line: 139, column: 34, scope: !13349, inlinedAt: !16111)
!16195 = !DILocation(line: 139, column: 13, scope: !13349, inlinedAt: !16111)
!16196 = !DILocation(line: 139, column: 4, scope: !13349, inlinedAt: !16111)
!16197 = !DILocation(line: 141, column: 13, scope: !13357, inlinedAt: !16111)
!16198 = !DILocation(line: 141, column: 13, scope: !13328, inlinedAt: !16111)
!16199 = !DILocation(line: 142, column: 7, scope: !13360, inlinedAt: !16111)
!16200 = !DILocation(line: 142, column: 7, scope: !13361, inlinedAt: !16111)
!16201 = !DILocation(line: 143, column: 22, scope: !13364, inlinedAt: !16111)
!16202 = !DILocation(line: 143, column: 12, scope: !13364, inlinedAt: !16111)
!16203 = !DILocation(line: 143, column: 28, scope: !13364, inlinedAt: !16111)
!16204 = !DILocation(line: 143, column: 36, scope: !13364, inlinedAt: !16111)
!16205 = !DILocation(line: 143, column: 34, scope: !13364, inlinedAt: !16111)
!16206 = !DILocation(line: 143, column: 25, scope: !13364, inlinedAt: !16111)
!16207 = !DILocation(line: 143, column: 11, scope: !13364, inlinedAt: !16111)
!16208 = !DILocation(line: 143, column: 4, scope: !13364, inlinedAt: !16111)
!16209 = !DILocation(line: 145, column: 11, scope: !13373, inlinedAt: !16111)
!16210 = !DILocation(line: 145, column: 26, scope: !13373, inlinedAt: !16111)
!16211 = !DILocation(line: 145, column: 16, scope: !13373, inlinedAt: !16111)
!16212 = !DILocation(line: 145, column: 34, scope: !13373, inlinedAt: !16111)
!16213 = !DILocation(line: 145, column: 32, scope: !13373, inlinedAt: !16111)
!16214 = !DILocation(line: 145, column: 13, scope: !13373, inlinedAt: !16111)
!16215 = !DILocation(line: 145, column: 4, scope: !13373, inlinedAt: !16111)
!16216 = !DILocation(line: 148, column: 7, scope: !13381, inlinedAt: !16111)
!16217 = !DILocation(line: 148, column: 7, scope: !13382, inlinedAt: !16111)
!16218 = !DILocation(line: 149, column: 23, scope: !13385, inlinedAt: !16111)
!16219 = !DILocation(line: 149, column: 27, scope: !13385, inlinedAt: !16111)
!16220 = !DILocation(line: 149, column: 25, scope: !13385, inlinedAt: !16111)
!16221 = !DILocation(line: 149, column: 35, scope: !13385, inlinedAt: !16111)
!16222 = !DILocation(line: 149, column: 33, scope: !13385, inlinedAt: !16111)
!16223 = !DILocation(line: 149, column: 42, scope: !13385, inlinedAt: !16111)
!16224 = !DILocation(line: 149, column: 40, scope: !13385, inlinedAt: !16111)
!16225 = !DILocation(line: 149, column: 11, scope: !13385, inlinedAt: !16111)
!16226 = !DILocation(line: 149, column: 4, scope: !13385, inlinedAt: !16111)
!16227 = !DILocation(line: 150, column: 14, scope: !13395, inlinedAt: !16111)
!16228 = !DILocation(line: 150, column: 23, scope: !13395, inlinedAt: !16111)
!16229 = !DILocation(line: 150, column: 26, scope: !13395, inlinedAt: !16111)
!16230 = !DILocation(line: 150, column: 14, scope: !13381, inlinedAt: !16111)
!16231 = !DILocation(line: 156, column: 13, scope: !13400, inlinedAt: !16111)
!16232 = !DILocation(line: 156, column: 17, scope: !13400, inlinedAt: !16111)
!16233 = !DILocation(line: 156, column: 15, scope: !13400, inlinedAt: !16111)
!16234 = !DILocation(line: 156, column: 25, scope: !13400, inlinedAt: !16111)
!16235 = !DILocation(line: 156, column: 23, scope: !13400, inlinedAt: !16111)
!16236 = !DILocation(line: 156, column: 32, scope: !13400, inlinedAt: !16111)
!16237 = !DILocation(line: 156, column: 30, scope: !13400, inlinedAt: !16111)
!16238 = !DILocation(line: 156, column: 4, scope: !13400, inlinedAt: !16111)
!16239 = !DILocation(line: 161, column: 12, scope: !13409, inlinedAt: !16111)
!16240 = !DILocation(line: 161, column: 16, scope: !13409, inlinedAt: !16111)
!16241 = !DILocation(line: 161, column: 14, scope: !13409, inlinedAt: !16111)
!16242 = !DILocation(line: 161, column: 27, scope: !13409, inlinedAt: !16111)
!16243 = !DILocation(line: 161, column: 25, scope: !13409, inlinedAt: !16111)
!16244 = !DILocation(line: 161, column: 37, scope: !13409, inlinedAt: !16111)
!16245 = !DILocation(line: 161, column: 41, scope: !13409, inlinedAt: !16111)
!16246 = !DILocation(line: 161, column: 39, scope: !13409, inlinedAt: !16111)
!16247 = !DILocation(line: 161, column: 52, scope: !13409, inlinedAt: !16111)
!16248 = !DILocation(line: 161, column: 50, scope: !13409, inlinedAt: !16111)
!16249 = !DILocation(line: 161, column: 60, scope: !13409, inlinedAt: !16111)
!16250 = !DILocation(line: 161, column: 58, scope: !13409, inlinedAt: !16111)
!16251 = !DILocation(line: 161, column: 67, scope: !13409, inlinedAt: !16111)
!16252 = !DILocation(line: 161, column: 65, scope: !13409, inlinedAt: !16111)
!16253 = !DILocation(line: 161, column: 33, scope: !13409, inlinedAt: !16111)
!16254 = !DILocation(line: 161, column: 4, scope: !13409, inlinedAt: !16111)
!16255 = !DILocation(line: 164, column: 1, scope: !13245, inlinedAt: !16111)
!16256 = !DILocation(line: 574, column: 2, scope: !16106)
!16257 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !10787, file: !10787, line: 1187, type: !12804, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16258 = !DILocalVariable(name: "t", arg: 1, scope: !16257, file: !10787, line: 1187, type: !2246)
!16259 = !DILocation(line: 1187, column: 70, scope: !16257)
!16260 = !DILocation(line: 1190, column: 17, scope: !16257)
!16261 = !DILocation(line: 102, column: 63, scope: !13245, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 1190, column: 9, scope: !16257)
!16263 = !DILocation(line: 102, column: 75, scope: !13245, inlinedAt: !16262)
!16264 = !DILocation(line: 103, column: 18, scope: !13245, inlinedAt: !16262)
!16265 = !DILocation(line: 103, column: 30, scope: !13245, inlinedAt: !16262)
!16266 = !DILocation(line: 104, column: 14, scope: !13245, inlinedAt: !16262)
!16267 = !DILocation(line: 104, column: 29, scope: !13245, inlinedAt: !16262)
!16268 = !DILocation(line: 105, column: 14, scope: !13245, inlinedAt: !16262)
!16269 = !DILocation(line: 107, column: 7, scope: !13245, inlinedAt: !16262)
!16270 = !DILocation(line: 107, column: 19, scope: !13245, inlinedAt: !16262)
!16271 = !DILocation(line: 107, column: 28, scope: !13245, inlinedAt: !16262)
!16272 = !DILocation(line: 108, column: 4, scope: !13245, inlinedAt: !16262)
!16273 = !DILocation(line: 108, column: 12, scope: !13245, inlinedAt: !16262)
!16274 = !DILocation(line: 108, column: 10, scope: !13245, inlinedAt: !16262)
!16275 = !DILocation(line: 108, column: 21, scope: !13245, inlinedAt: !16262)
!16276 = !DILocation(line: 108, column: 26, scope: !13245, inlinedAt: !16262)
!16277 = !DILocation(line: 108, column: 34, scope: !13245, inlinedAt: !16262)
!16278 = !DILocation(line: 108, column: 32, scope: !13245, inlinedAt: !16262)
!16279 = !DILocation(line: 108, column: 43, scope: !13245, inlinedAt: !16262)
!16280 = !DILocation(line: 0, scope: !13245, inlinedAt: !16262)
!16281 = !DILocation(line: 109, column: 7, scope: !13245, inlinedAt: !16262)
!16282 = !DILocation(line: 109, column: 19, scope: !13245, inlinedAt: !16262)
!16283 = !DILocation(line: 109, column: 28, scope: !13245, inlinedAt: !16262)
!16284 = !DILocation(line: 110, column: 4, scope: !13245, inlinedAt: !16262)
!16285 = !DILocation(line: 110, column: 14, scope: !13245, inlinedAt: !16262)
!16286 = !DILocation(line: 110, column: 12, scope: !13245, inlinedAt: !16262)
!16287 = !DILocation(line: 110, column: 21, scope: !13245, inlinedAt: !16262)
!16288 = !DILocation(line: 110, column: 26, scope: !13245, inlinedAt: !16262)
!16289 = !DILocation(line: 110, column: 36, scope: !13245, inlinedAt: !16262)
!16290 = !DILocation(line: 110, column: 34, scope: !13245, inlinedAt: !16262)
!16291 = !DILocation(line: 110, column: 43, scope: !13245, inlinedAt: !16262)
!16292 = !DILocation(line: 112, column: 6, scope: !13286, inlinedAt: !16262)
!16293 = !DILocation(line: 112, column: 17, scope: !13286, inlinedAt: !16262)
!16294 = !DILocation(line: 112, column: 14, scope: !13286, inlinedAt: !16262)
!16295 = !DILocation(line: 112, column: 6, scope: !13245, inlinedAt: !16262)
!16296 = !DILocation(line: 113, column: 10, scope: !13291, inlinedAt: !16262)
!16297 = !DILocation(line: 113, column: 32, scope: !13291, inlinedAt: !16262)
!16298 = !DILocation(line: 113, column: 22, scope: !13291, inlinedAt: !16262)
!16299 = !DILocation(line: 113, column: 21, scope: !13291, inlinedAt: !16262)
!16300 = !DILocation(line: 113, column: 37, scope: !13291, inlinedAt: !16262)
!16301 = !DILocation(line: 113, column: 3, scope: !13291, inlinedAt: !16262)
!16302 = !DILocation(line: 116, column: 11, scope: !13245, inlinedAt: !16262)
!16303 = !DILocation(line: 118, column: 7, scope: !13300, inlinedAt: !16262)
!16304 = !DILocation(line: 118, column: 6, scope: !13245, inlinedAt: !16262)
!16305 = !DILocation(line: 119, column: 12, scope: !13303, inlinedAt: !16262)
!16306 = !DILocation(line: 119, column: 23, scope: !13303, inlinedAt: !16262)
!16307 = !DILocation(line: 119, column: 36, scope: !13303, inlinedAt: !16262)
!16308 = !DILocation(line: 119, column: 46, scope: !13303, inlinedAt: !16262)
!16309 = !DILocation(line: 119, column: 44, scope: !13303, inlinedAt: !16262)
!16310 = !DILocation(line: 119, column: 55, scope: !13303, inlinedAt: !16262)
!16311 = !DILocation(line: 121, column: 7, scope: !13311, inlinedAt: !16262)
!16312 = !DILocation(line: 121, column: 7, scope: !13303, inlinedAt: !16262)
!16313 = !DILocation(line: 122, column: 10, scope: !13314, inlinedAt: !16262)
!16314 = !DILocation(line: 122, column: 19, scope: !13314, inlinedAt: !16262)
!16315 = !DILocation(line: 122, column: 8, scope: !13314, inlinedAt: !16262)
!16316 = !DILocation(line: 123, column: 3, scope: !13314, inlinedAt: !16262)
!16317 = !DILocation(line: 124, column: 7, scope: !13319, inlinedAt: !16262)
!16318 = !DILocation(line: 124, column: 7, scope: !13303, inlinedAt: !16262)
!16319 = !DILocation(line: 125, column: 10, scope: !13322, inlinedAt: !16262)
!16320 = !DILocation(line: 125, column: 19, scope: !13322, inlinedAt: !16262)
!16321 = !DILocation(line: 125, column: 8, scope: !13322, inlinedAt: !16262)
!16322 = !DILocation(line: 126, column: 3, scope: !13322, inlinedAt: !16262)
!16323 = !DILocation(line: 127, column: 2, scope: !13303, inlinedAt: !16262)
!16324 = !DILocation(line: 134, column: 6, scope: !13328, inlinedAt: !16262)
!16325 = !DILocation(line: 134, column: 6, scope: !13245, inlinedAt: !16262)
!16326 = !DILocation(line: 135, column: 8, scope: !13331, inlinedAt: !16262)
!16327 = !DILocation(line: 135, column: 5, scope: !13331, inlinedAt: !16262)
!16328 = !DILocation(line: 136, column: 7, scope: !13334, inlinedAt: !16262)
!16329 = !DILocation(line: 136, column: 16, scope: !13334, inlinedAt: !16262)
!16330 = !DILocation(line: 136, column: 20, scope: !13334, inlinedAt: !16262)
!16331 = !DILocation(line: 136, column: 22, scope: !13334, inlinedAt: !16262)
!16332 = !DILocation(line: 136, column: 7, scope: !13331, inlinedAt: !16262)
!16333 = !DILocation(line: 137, column: 22, scope: !13340, inlinedAt: !16262)
!16334 = !DILocation(line: 137, column: 12, scope: !13340, inlinedAt: !16262)
!16335 = !DILocation(line: 137, column: 28, scope: !13340, inlinedAt: !16262)
!16336 = !DILocation(line: 137, column: 38, scope: !13340, inlinedAt: !16262)
!16337 = !DILocation(line: 137, column: 36, scope: !13340, inlinedAt: !16262)
!16338 = !DILocation(line: 137, column: 25, scope: !13340, inlinedAt: !16262)
!16339 = !DILocation(line: 137, column: 11, scope: !13340, inlinedAt: !16262)
!16340 = !DILocation(line: 137, column: 4, scope: !13340, inlinedAt: !16262)
!16341 = !DILocation(line: 139, column: 11, scope: !13349, inlinedAt: !16262)
!16342 = !DILocation(line: 139, column: 26, scope: !13349, inlinedAt: !16262)
!16343 = !DILocation(line: 139, column: 16, scope: !13349, inlinedAt: !16262)
!16344 = !DILocation(line: 139, column: 36, scope: !13349, inlinedAt: !16262)
!16345 = !DILocation(line: 139, column: 34, scope: !13349, inlinedAt: !16262)
!16346 = !DILocation(line: 139, column: 13, scope: !13349, inlinedAt: !16262)
!16347 = !DILocation(line: 139, column: 4, scope: !13349, inlinedAt: !16262)
!16348 = !DILocation(line: 141, column: 13, scope: !13357, inlinedAt: !16262)
!16349 = !DILocation(line: 141, column: 13, scope: !13328, inlinedAt: !16262)
!16350 = !DILocation(line: 142, column: 7, scope: !13360, inlinedAt: !16262)
!16351 = !DILocation(line: 142, column: 7, scope: !13361, inlinedAt: !16262)
!16352 = !DILocation(line: 143, column: 22, scope: !13364, inlinedAt: !16262)
!16353 = !DILocation(line: 143, column: 12, scope: !13364, inlinedAt: !16262)
!16354 = !DILocation(line: 143, column: 28, scope: !13364, inlinedAt: !16262)
!16355 = !DILocation(line: 143, column: 36, scope: !13364, inlinedAt: !16262)
!16356 = !DILocation(line: 143, column: 34, scope: !13364, inlinedAt: !16262)
!16357 = !DILocation(line: 143, column: 25, scope: !13364, inlinedAt: !16262)
!16358 = !DILocation(line: 143, column: 11, scope: !13364, inlinedAt: !16262)
!16359 = !DILocation(line: 143, column: 4, scope: !13364, inlinedAt: !16262)
!16360 = !DILocation(line: 145, column: 11, scope: !13373, inlinedAt: !16262)
!16361 = !DILocation(line: 145, column: 26, scope: !13373, inlinedAt: !16262)
!16362 = !DILocation(line: 145, column: 16, scope: !13373, inlinedAt: !16262)
!16363 = !DILocation(line: 145, column: 34, scope: !13373, inlinedAt: !16262)
!16364 = !DILocation(line: 145, column: 32, scope: !13373, inlinedAt: !16262)
!16365 = !DILocation(line: 145, column: 13, scope: !13373, inlinedAt: !16262)
!16366 = !DILocation(line: 145, column: 4, scope: !13373, inlinedAt: !16262)
!16367 = !DILocation(line: 148, column: 7, scope: !13381, inlinedAt: !16262)
!16368 = !DILocation(line: 148, column: 7, scope: !13382, inlinedAt: !16262)
!16369 = !DILocation(line: 149, column: 23, scope: !13385, inlinedAt: !16262)
!16370 = !DILocation(line: 149, column: 27, scope: !13385, inlinedAt: !16262)
!16371 = !DILocation(line: 149, column: 25, scope: !13385, inlinedAt: !16262)
!16372 = !DILocation(line: 149, column: 35, scope: !13385, inlinedAt: !16262)
!16373 = !DILocation(line: 149, column: 33, scope: !13385, inlinedAt: !16262)
!16374 = !DILocation(line: 149, column: 42, scope: !13385, inlinedAt: !16262)
!16375 = !DILocation(line: 149, column: 40, scope: !13385, inlinedAt: !16262)
!16376 = !DILocation(line: 149, column: 11, scope: !13385, inlinedAt: !16262)
!16377 = !DILocation(line: 149, column: 4, scope: !13385, inlinedAt: !16262)
!16378 = !DILocation(line: 150, column: 14, scope: !13395, inlinedAt: !16262)
!16379 = !DILocation(line: 150, column: 23, scope: !13395, inlinedAt: !16262)
!16380 = !DILocation(line: 150, column: 26, scope: !13395, inlinedAt: !16262)
!16381 = !DILocation(line: 150, column: 14, scope: !13381, inlinedAt: !16262)
!16382 = !DILocation(line: 156, column: 13, scope: !13400, inlinedAt: !16262)
!16383 = !DILocation(line: 156, column: 17, scope: !13400, inlinedAt: !16262)
!16384 = !DILocation(line: 156, column: 15, scope: !13400, inlinedAt: !16262)
!16385 = !DILocation(line: 156, column: 25, scope: !13400, inlinedAt: !16262)
!16386 = !DILocation(line: 156, column: 23, scope: !13400, inlinedAt: !16262)
!16387 = !DILocation(line: 156, column: 32, scope: !13400, inlinedAt: !16262)
!16388 = !DILocation(line: 156, column: 30, scope: !13400, inlinedAt: !16262)
!16389 = !DILocation(line: 156, column: 4, scope: !13400, inlinedAt: !16262)
!16390 = !DILocation(line: 161, column: 12, scope: !13409, inlinedAt: !16262)
!16391 = !DILocation(line: 161, column: 16, scope: !13409, inlinedAt: !16262)
!16392 = !DILocation(line: 161, column: 14, scope: !13409, inlinedAt: !16262)
!16393 = !DILocation(line: 161, column: 27, scope: !13409, inlinedAt: !16262)
!16394 = !DILocation(line: 161, column: 25, scope: !13409, inlinedAt: !16262)
!16395 = !DILocation(line: 161, column: 37, scope: !13409, inlinedAt: !16262)
!16396 = !DILocation(line: 161, column: 41, scope: !13409, inlinedAt: !16262)
!16397 = !DILocation(line: 161, column: 39, scope: !13409, inlinedAt: !16262)
!16398 = !DILocation(line: 161, column: 52, scope: !13409, inlinedAt: !16262)
!16399 = !DILocation(line: 161, column: 50, scope: !13409, inlinedAt: !16262)
!16400 = !DILocation(line: 161, column: 60, scope: !13409, inlinedAt: !16262)
!16401 = !DILocation(line: 161, column: 58, scope: !13409, inlinedAt: !16262)
!16402 = !DILocation(line: 161, column: 67, scope: !13409, inlinedAt: !16262)
!16403 = !DILocation(line: 161, column: 65, scope: !13409, inlinedAt: !16262)
!16404 = !DILocation(line: 161, column: 33, scope: !13409, inlinedAt: !16262)
!16405 = !DILocation(line: 161, column: 4, scope: !13409, inlinedAt: !16262)
!16406 = !DILocation(line: 164, column: 1, scope: !13245, inlinedAt: !16262)
!16407 = !DILocation(line: 1190, column: 2, scope: !16257)
!16408 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3514, file: !3514, line: 1517, type: !15834, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16409 = !DILocalVariable(name: "thread", arg: 1, scope: !16408, file: !3514, line: 1517, type: !15664)
!16410 = !DILocation(line: 1517, column: 30, scope: !16408)
!16411 = !DILocation(line: 1519, column: 2, scope: !16408)
!16412 = !DILocation(line: 1519, column: 2, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16408, file: !3514, line: 1519, column: 2)
!16414 = !DILocation(line: 1521, column: 26, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16408, file: !3514, line: 1521, column: 6)
!16416 = !DILocation(line: 1521, column: 6, scope: !16415)
!16417 = !DILocation(line: 1521, column: 6, scope: !16408)
!16418 = !DILocation(line: 1522, column: 3, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16415, file: !3514, line: 1521, column: 35)
!16420 = !DILocation(line: 1525, column: 29, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16408, file: !3514, line: 1525, column: 6)
!16422 = !DILocation(line: 1525, column: 6, scope: !16421)
!16423 = !DILocation(line: 1525, column: 37, scope: !16421)
!16424 = !DILocation(line: 1525, column: 6, scope: !16408)
!16425 = !DILocation(line: 1527, column: 7, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !3514, line: 1527, column: 7)
!16427 = distinct !DILexicalBlock(scope: !16421, file: !3514, line: 1525, column: 42)
!16428 = !DILocation(line: 1527, column: 15, scope: !16426)
!16429 = !DILocation(line: 1527, column: 20, scope: !16426)
!16430 = !DILocation(line: 1527, column: 33, scope: !16426)
!16431 = !DILocation(line: 1527, column: 7, scope: !16427)
!16432 = !DILocation(line: 1528, column: 4, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16426, file: !3514, line: 1527, column: 55)
!16434 = !DILocation(line: 1530, column: 2, scope: !16427)
!16435 = !DILocation(line: 1532, column: 33, scope: !16408)
!16436 = !DILocation(line: 1532, column: 2, scope: !16408)
!16437 = !DILocation(line: 1533, column: 17, scope: !16408)
!16438 = !DILocation(line: 1533, column: 2, scope: !16408)
!16439 = !DILocation(line: 1535, column: 2, scope: !16408)
!16440 = !DILocation(line: 1029, column: 12, scope: !14311, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 48, column: 10, scope: !14314, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 1537, column: 7, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16408, file: !3514, line: 1537, column: 6)
!16444 = !DILocation(line: 1031, column: 3, scope: !14311, inlinedAt: !16441)
!16445 = !DILocation(line: 1032, column: 10, scope: !14311, inlinedAt: !16441)
!16446 = !DILocation(line: 48, column: 9, scope: !14314, inlinedAt: !16442)
!16447 = !DILocation(line: 1537, column: 6, scope: !16408)
!16448 = !DILocation(line: 1538, column: 3, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16443, file: !3514, line: 1537, column: 25)
!16450 = !DILocation(line: 1539, column: 2, scope: !16449)
!16451 = !DILocation(line: 1540, column: 1, scope: !16408)
!16452 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11993, file: !11993, line: 101, type: !13507, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16453 = !DILocalVariable(name: "thread", arg: 1, scope: !16452, file: !11993, line: 101, type: !3415)
!16454 = !DILocation(line: 101, column: 57, scope: !16452)
!16455 = !DILocation(line: 103, column: 10, scope: !16452)
!16456 = !DILocation(line: 103, column: 18, scope: !16452)
!16457 = !DILocation(line: 103, column: 23, scope: !16452)
!16458 = !DILocation(line: 103, column: 36, scope: !16452)
!16459 = !DILocation(line: 103, column: 55, scope: !16452)
!16460 = !DILocation(line: 103, column: 2, scope: !16452)
!16461 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3514, file: !3514, line: 1567, type: !16462, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16462 = !DISubroutineType(types: !16463)
!16463 = !{!15664}
!16464 = !DILocalVariable(name: "ret", scope: !16461, file: !3514, line: 1577, type: !15664)
!16465 = !DILocation(line: 1577, column: 10, scope: !16461)
!16466 = !DILocation(line: 1577, column: 30, scope: !16461)
!16467 = !DILocation(line: 1582, column: 9, scope: !16461)
!16468 = !DILocation(line: 1582, column: 2, scope: !16461)
!16469 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3514, file: !3514, line: 1593, type: !3989, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16470 = !DILocation(line: 1029, column: 12, scope: !14311, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 48, column: 10, scope: !14314, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 1595, column: 10, scope: !16469)
!16473 = !DILocation(line: 1031, column: 3, scope: !14311, inlinedAt: !16471)
!16474 = !DILocation(line: 1032, column: 10, scope: !14311, inlinedAt: !16471)
!16475 = !DILocation(line: 48, column: 9, scope: !14314, inlinedAt: !16472)
!16476 = !DILocation(line: 1595, column: 27, scope: !16469)
!16477 = !DILocation(line: 1595, column: 41, scope: !16469)
!16478 = !DILocation(line: 1595, column: 30, scope: !16469)
!16479 = !DILocation(line: 0, scope: !16469)
!16480 = !DILocation(line: 1595, column: 2, scope: !16469)
!16481 = distinct !DISubprogram(name: "z_thread_abort", scope: !3514, file: !3514, line: 1725, type: !13127, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16482 = !DILocalVariable(name: "thread", arg: 1, scope: !16481, file: !3514, line: 1725, type: !3415)
!16483 = !DILocation(line: 1725, column: 38, scope: !16481)
!16484 = !DILocalVariable(name: "key", scope: !16481, file: !3514, line: 1727, type: !13166)
!16485 = !DILocation(line: 1727, column: 19, scope: !16481)
!16486 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 1727, column: 25, scope: !16481)
!16488 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !16487)
!16489 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !16487)
!16490 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !16487)
!16492 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !16491)
!16493 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !16491)
!16494 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !16487)
!16495 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !16487)
!16496 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !16487)
!16497 = !DILocation(line: 1727, column: 25, scope: !16481)
!16498 = !DILocation(line: 1729, column: 7, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16481, file: !3514, line: 1729, column: 6)
!16500 = !DILocation(line: 1729, column: 15, scope: !16499)
!16501 = !DILocation(line: 1729, column: 20, scope: !16499)
!16502 = !DILocation(line: 1729, column: 33, scope: !16499)
!16503 = !DILocation(line: 1729, column: 48, scope: !16499)
!16504 = !DILocation(line: 1729, column: 6, scope: !16481)
!16505 = !DILocation(line: 1730, column: 3, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16499, file: !3514, line: 1729, column: 54)
!16507 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 1730, column: 3, scope: !16506)
!16509 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !16508)
!16510 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !16508)
!16511 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !16508)
!16512 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !16508)
!16514 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !16513)
!16515 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !16513)
!16516 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !16513)
!16517 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !16513)
!16518 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !16513)
!16519 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !16513)
!16520 = !DILocalVariable(name: "r0", scope: !16506, file: !3514, line: 1732, type: !173)
!16521 = !DILocation(line: 1732, column: 3, scope: !16506)
!16522 = !DILocation(line: 1732, column: 3, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16506, file: !3514, line: 1732, column: 3)
!16524 = !{i64 2152103508, i64 2152103518, i64 2152103538}
!16525 = !DILocation(line: 1733, column: 3, scope: !16506)
!16526 = !DILocation(line: 1736, column: 7, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16481, file: !3514, line: 1736, column: 6)
!16528 = !DILocation(line: 1736, column: 15, scope: !16527)
!16529 = !DILocation(line: 1736, column: 20, scope: !16527)
!16530 = !DILocation(line: 1736, column: 33, scope: !16527)
!16531 = !DILocation(line: 1736, column: 49, scope: !16527)
!16532 = !DILocation(line: 1736, column: 6, scope: !16481)
!16533 = !DILocation(line: 1737, column: 3, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16527, file: !3514, line: 1736, column: 56)
!16535 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 1737, column: 3, scope: !16534)
!16537 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !16536)
!16538 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !16536)
!16539 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !16536)
!16540 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !16536)
!16542 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !16541)
!16543 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !16541)
!16544 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !16541)
!16545 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !16541)
!16546 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !16541)
!16547 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !16541)
!16548 = !DILocation(line: 1738, column: 3, scope: !16534)
!16549 = !DILocation(line: 1775, column: 13, scope: !16481)
!16550 = !DILocation(line: 1775, column: 2, scope: !16481)
!16551 = !DILocation(line: 1776, column: 6, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16481, file: !3514, line: 1776, column: 6)
!16553 = !DILocation(line: 1776, column: 16, scope: !16552)
!16554 = !DILocation(line: 1776, column: 13, scope: !16552)
!16555 = !DILocation(line: 1776, column: 25, scope: !16552)
!16556 = !DILocation(line: 1029, column: 12, scope: !14311, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 48, column: 10, scope: !14314, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 1776, column: 29, scope: !16552)
!16559 = !DILocation(line: 1031, column: 3, scope: !14311, inlinedAt: !16557)
!16560 = !DILocation(line: 1032, column: 10, scope: !14311, inlinedAt: !16557)
!16561 = !DILocation(line: 48, column: 9, scope: !14314, inlinedAt: !16558)
!16562 = !DILocation(line: 1776, column: 6, scope: !16481)
!16563 = !DILocation(line: 1777, column: 3, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16552, file: !3514, line: 1776, column: 47)
!16565 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 1777, column: 3, scope: !16564)
!16567 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !16566)
!16568 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !16566)
!16569 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !16570)
!16570 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !16566)
!16571 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !16570)
!16572 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !16566)
!16573 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !16566)
!16574 = !DILocation(line: 1779, column: 2, scope: !16564)
!16575 = !DILocation(line: 1780, column: 2, scope: !16481)
!16576 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 1780, column: 2, scope: !16481)
!16578 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !16577)
!16579 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !16577)
!16580 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !16577)
!16581 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !16577)
!16583 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !16582)
!16584 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !16582)
!16585 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !16582)
!16586 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !16582)
!16587 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !16582)
!16588 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !16582)
!16589 = !DILocation(line: 1781, column: 1, scope: !16481)
!16590 = distinct !DISubprogram(name: "end_thread", scope: !3514, file: !3514, line: 1690, type: !13127, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16591 = !DILocalVariable(name: "thread", arg: 1, scope: !16590, file: !3514, line: 1690, type: !3415)
!16592 = !DILocation(line: 1690, column: 41, scope: !16590)
!16593 = !DILocation(line: 1695, column: 7, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16590, file: !3514, line: 1695, column: 6)
!16595 = !DILocation(line: 1695, column: 15, scope: !16594)
!16596 = !DILocation(line: 1695, column: 20, scope: !16594)
!16597 = !DILocation(line: 1695, column: 33, scope: !16594)
!16598 = !DILocation(line: 1695, column: 49, scope: !16594)
!16599 = !DILocation(line: 1695, column: 6, scope: !16590)
!16600 = !DILocation(line: 1696, column: 3, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16594, file: !3514, line: 1695, column: 56)
!16602 = !DILocation(line: 1696, column: 11, scope: !16601)
!16603 = !DILocation(line: 1696, column: 16, scope: !16601)
!16604 = !DILocation(line: 1696, column: 29, scope: !16601)
!16605 = !DILocation(line: 1697, column: 3, scope: !16601)
!16606 = !DILocation(line: 1697, column: 11, scope: !16601)
!16607 = !DILocation(line: 1697, column: 16, scope: !16601)
!16608 = !DILocation(line: 1697, column: 29, scope: !16601)
!16609 = !DILocation(line: 1698, column: 26, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16601, file: !3514, line: 1698, column: 7)
!16611 = !DILocation(line: 1698, column: 7, scope: !16610)
!16612 = !DILocation(line: 1698, column: 7, scope: !16601)
!16613 = !DILocation(line: 1699, column: 19, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16610, file: !3514, line: 1698, column: 35)
!16615 = !DILocation(line: 264, column: 59, scope: !13573, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 1699, column: 4, scope: !16614)
!16617 = !DILocation(line: 266, column: 2, scope: !13573, inlinedAt: !16616)
!16618 = !DILocation(line: 266, column: 10, scope: !13573, inlinedAt: !16616)
!16619 = !DILocation(line: 266, column: 15, scope: !13573, inlinedAt: !16616)
!16620 = !DILocation(line: 266, column: 28, scope: !13573, inlinedAt: !16616)
!16621 = !DILocation(line: 267, column: 26, scope: !13581, inlinedAt: !16616)
!16622 = !DILocation(line: 267, column: 6, scope: !13581, inlinedAt: !16616)
!16623 = !DILocation(line: 267, column: 6, scope: !13573, inlinedAt: !16616)
!16624 = !DILocation(line: 268, column: 15, scope: !13585, inlinedAt: !16616)
!16625 = !DILocation(line: 232, column: 56, scope: !13587, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 268, column: 3, scope: !13585, inlinedAt: !16616)
!16627 = !DILocation(line: 234, column: 31, scope: !13587, inlinedAt: !16626)
!16628 = !DILocation(line: 199, column: 57, scope: !13592, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !16626)
!16630 = !DILocation(line: 234, column: 19, scope: !13587, inlinedAt: !16626)
!16631 = !DILocation(line: 234, column: 40, scope: !13587, inlinedAt: !16626)
!16632 = !DILocation(line: 234, column: 2, scope: !13587, inlinedAt: !16626)
!16633 = !DILocation(line: 269, column: 2, scope: !13585, inlinedAt: !16616)
!16634 = !DILocation(line: 1700, column: 3, scope: !16614)
!16635 = !DILocation(line: 1701, column: 7, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16601, file: !3514, line: 1701, column: 7)
!16637 = !DILocation(line: 1701, column: 15, scope: !16636)
!16638 = !DILocation(line: 1701, column: 20, scope: !16636)
!16639 = !DILocation(line: 1701, column: 30, scope: !16636)
!16640 = !DILocation(line: 1701, column: 7, scope: !16601)
!16641 = !DILocation(line: 1702, column: 29, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16636, file: !3514, line: 1701, column: 39)
!16643 = !DILocation(line: 1702, column: 4, scope: !16642)
!16644 = !DILocation(line: 1703, column: 3, scope: !16642)
!16645 = !DILocation(line: 1704, column: 32, scope: !16601)
!16646 = !DILocation(line: 1704, column: 9, scope: !16601)
!16647 = !DILocation(line: 1705, column: 15, scope: !16601)
!16648 = !DILocation(line: 1705, column: 23, scope: !16601)
!16649 = !DILocation(line: 1705, column: 3, scope: !16601)
!16650 = !DILocation(line: 1706, column: 3, scope: !16601)
!16651 = !DILocation(line: 1708, column: 3, scope: !16601)
!16652 = !DILocation(line: 1708, column: 3, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16601, file: !3514, line: 1708, column: 3)
!16654 = !DILocation(line: 1710, column: 3, scope: !16601)
!16655 = !DILocation(line: 1710, column: 3, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16601, file: !3514, line: 1710, column: 3)
!16657 = !DILocation(line: 1722, column: 2, scope: !16601)
!16658 = !DILocation(line: 1723, column: 1, scope: !16590)
!16659 = distinct !DISubprogram(name: "unpend_all", scope: !3514, file: !3514, line: 1674, type: !16660, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{null, !3446}
!16662 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16659, file: !3514, line: 1674, type: !3446)
!16663 = !DILocation(line: 1674, column: 42, scope: !16659)
!16664 = !DILocalVariable(name: "thread", scope: !16659, file: !3514, line: 1676, type: !3415)
!16665 = !DILocation(line: 1676, column: 19, scope: !16659)
!16666 = !DILocation(line: 1678, column: 2, scope: !16659)
!16667 = !DILocation(line: 1678, column: 32, scope: !16659)
!16668 = !DILocation(line: 1678, column: 19, scope: !16659)
!16669 = !DILocation(line: 1678, column: 17, scope: !16659)
!16670 = !DILocation(line: 1678, column: 41, scope: !16659)
!16671 = !DILocation(line: 1679, column: 28, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16659, file: !3514, line: 1678, column: 50)
!16673 = !DILocation(line: 1679, column: 3, scope: !16672)
!16674 = !DILocation(line: 1680, column: 32, scope: !16672)
!16675 = !DILocation(line: 1680, column: 9, scope: !16672)
!16676 = !DILocation(line: 1681, column: 32, scope: !16672)
!16677 = !DILocalVariable(name: "thread", arg: 1, scope: !16678, file: !12012, line: 65, type: !3415)
!16678 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12012, file: !12012, line: 65, type: !16679, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{null, !3415, !32}
!16681 = !DILocation(line: 65, column: 47, scope: !16678, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 1681, column: 3, scope: !16672)
!16683 = !DILocalVariable(name: "value", arg: 2, scope: !16678, file: !12012, line: 65, type: !32)
!16684 = !DILocation(line: 65, column: 68, scope: !16678, inlinedAt: !16682)
!16685 = !DILocation(line: 67, column: 35, scope: !16678, inlinedAt: !16682)
!16686 = !DILocation(line: 67, column: 2, scope: !16678, inlinedAt: !16682)
!16687 = !DILocation(line: 67, column: 10, scope: !16678, inlinedAt: !16682)
!16688 = !DILocation(line: 67, column: 15, scope: !16678, inlinedAt: !16682)
!16689 = !DILocation(line: 67, column: 33, scope: !16678, inlinedAt: !16682)
!16690 = !DILocation(line: 1682, column: 16, scope: !16672)
!16691 = !DILocation(line: 1682, column: 3, scope: !16672)
!16692 = distinct !{!16692, !16666, !16693}
!16693 = !DILocation(line: 1683, column: 2, scope: !16659)
!16694 = !DILocation(line: 1684, column: 1, scope: !16659)
!16695 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3514, file: !3514, line: 1794, type: !16696, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16696 = !DISubroutineType(types: !16697)
!16697 = !{!103, !3415, !14551}
!16698 = !DILocalVariable(name: "thread", arg: 1, scope: !16695, file: !3514, line: 1794, type: !3415)
!16699 = !DILocation(line: 1794, column: 43, scope: !16695)
!16700 = !DILocalVariable(name: "timeout", arg: 2, scope: !16695, file: !3514, line: 1794, type: !14551)
!16701 = !DILocation(line: 1794, column: 63, scope: !16695)
!16702 = !DILocalVariable(name: "key", scope: !16695, file: !3514, line: 1796, type: !13166)
!16703 = !DILocation(line: 1796, column: 19, scope: !16695)
!16704 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 1796, column: 25, scope: !16695)
!16706 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !16705)
!16707 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !16705)
!16708 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !16705)
!16710 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !16709)
!16711 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !16709)
!16712 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !16705)
!16713 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !16705)
!16714 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !16705)
!16715 = !DILocation(line: 1796, column: 25, scope: !16695)
!16716 = !DILocalVariable(name: "ret", scope: !16695, file: !3514, line: 1797, type: !103)
!16717 = !DILocation(line: 1797, column: 6, scope: !16695)
!16718 = !DILocation(line: 1799, column: 2, scope: !16695)
!16719 = !DILocation(line: 1799, column: 2, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16695, file: !3514, line: 1799, column: 2)
!16721 = !DILocation(line: 1801, column: 7, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16695, file: !3514, line: 1801, column: 6)
!16723 = !DILocation(line: 1801, column: 15, scope: !16722)
!16724 = !DILocation(line: 1801, column: 20, scope: !16722)
!16725 = !DILocation(line: 1801, column: 33, scope: !16722)
!16726 = !DILocation(line: 1801, column: 49, scope: !16722)
!16727 = !DILocation(line: 1801, column: 6, scope: !16695)
!16728 = !DILocation(line: 1802, column: 7, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16722, file: !3514, line: 1801, column: 56)
!16730 = !DILocation(line: 1803, column: 2, scope: !16729)
!16731 = !DILocation(line: 1803, column: 13, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16722, file: !3514, line: 1803, column: 13)
!16733 = !DILocation(line: 1803, column: 13, scope: !16722)
!16734 = !DILocation(line: 1804, column: 7, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16732, file: !3514, line: 1803, column: 47)
!16736 = !DILocation(line: 1805, column: 2, scope: !16735)
!16737 = !DILocation(line: 1805, column: 14, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16732, file: !3514, line: 1805, column: 13)
!16739 = !DILocation(line: 1805, column: 24, scope: !16738)
!16740 = !DILocation(line: 1805, column: 21, scope: !16738)
!16741 = !DILocation(line: 1805, column: 34, scope: !16738)
!16742 = !DILocation(line: 1806, column: 7, scope: !16738)
!16743 = !DILocation(line: 1806, column: 15, scope: !16738)
!16744 = !DILocation(line: 1806, column: 20, scope: !16738)
!16745 = !DILocation(line: 1806, column: 34, scope: !16738)
!16746 = !DILocation(line: 1806, column: 44, scope: !16738)
!16747 = !DILocation(line: 1806, column: 30, scope: !16738)
!16748 = !DILocation(line: 1805, column: 13, scope: !16732)
!16749 = !DILocation(line: 1807, column: 7, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16738, file: !3514, line: 1806, column: 57)
!16751 = !DILocation(line: 1808, column: 2, scope: !16750)
!16752 = !DILocation(line: 1810, column: 23, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16738, file: !3514, line: 1808, column: 9)
!16754 = !DILocation(line: 1810, column: 34, scope: !16753)
!16755 = !DILocation(line: 1810, column: 42, scope: !16753)
!16756 = !DILocation(line: 1810, column: 3, scope: !16753)
!16757 = !DILocation(line: 1811, column: 22, scope: !16753)
!16758 = !DILocation(line: 1811, column: 3, scope: !16753)
!16759 = !DILocation(line: 1813, column: 3, scope: !16753)
!16760 = !DILocation(line: 1813, column: 3, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16753, file: !3514, line: 1813, column: 3)
!16762 = !DILocation(line: 1814, column: 9, scope: !16753)
!16763 = !DILocation(line: 193, column: 52, scope: !14259, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 1814, column: 9, scope: !16753)
!16765 = !DILocation(line: 193, column: 75, scope: !14259, inlinedAt: !16764)
!16766 = !DILocation(line: 195, column: 17, scope: !14259, inlinedAt: !16764)
!16767 = !DILocation(line: 221, column: 61, scope: !14268, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 195, column: 2, scope: !14259, inlinedAt: !16764)
!16769 = !DILocation(line: 223, column: 2, scope: !14268, inlinedAt: !16768)
!16770 = !DILocation(line: 196, column: 28, scope: !14259, inlinedAt: !16764)
!16771 = !DILocation(line: 196, column: 9, scope: !14259, inlinedAt: !16764)
!16772 = !DILocation(line: 1814, column: 7, scope: !16753)
!16773 = !DILocation(line: 1815, column: 3, scope: !16753)
!16774 = !DILocation(line: 1815, column: 3, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16753, file: !3514, line: 1815, column: 3)
!16776 = !DILocation(line: 1817, column: 10, scope: !16753)
!16777 = !DILocation(line: 1817, column: 3, scope: !16753)
!16778 = !DILocation(line: 1820, column: 2, scope: !16695)
!16779 = !DILocation(line: 1820, column: 2, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16695, file: !3514, line: 1820, column: 2)
!16781 = !DILocation(line: 1822, column: 2, scope: !16695)
!16782 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !16783)
!16783 = distinct !DILocation(line: 1822, column: 2, scope: !16695)
!16784 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !16783)
!16785 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !16783)
!16786 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !16783)
!16787 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !16783)
!16789 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !16788)
!16790 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !16788)
!16791 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !16788)
!16792 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !16788)
!16793 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !16788)
!16794 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !16788)
!16795 = !DILocation(line: 1823, column: 9, scope: !16695)
!16796 = !DILocation(line: 1823, column: 2, scope: !16695)
!16797 = !DILocation(line: 1824, column: 1, scope: !16695)
!16798 = distinct !DISubprogram(name: "z_sched_wake", scope: !3514, file: !3514, line: 1882, type: !16799, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16799 = !DISubroutineType(types: !16800)
!16800 = !{!1035, !3446, !103, !102}
!16801 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16798, file: !3514, line: 1882, type: !3446)
!16802 = !DILocation(line: 1882, column: 30, scope: !16798)
!16803 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16798, file: !3514, line: 1882, type: !103)
!16804 = !DILocation(line: 1882, column: 42, scope: !16798)
!16805 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16798, file: !3514, line: 1882, type: !102)
!16806 = !DILocation(line: 1882, column: 61, scope: !16798)
!16807 = !DILocalVariable(name: "thread", scope: !16798, file: !3514, line: 1884, type: !3415)
!16808 = !DILocation(line: 1884, column: 19, scope: !16798)
!16809 = !DILocalVariable(name: "ret", scope: !16798, file: !3514, line: 1885, type: !1035)
!16810 = !DILocation(line: 1885, column: 7, scope: !16798)
!16811 = !DILocalVariable(name: "__i", scope: !16812, file: !3514, line: 1887, type: !13166)
!16812 = distinct !DILexicalBlock(scope: !16798, file: !3514, line: 1887, column: 2)
!16813 = !DILocation(line: 1887, column: 2, scope: !16812)
!16814 = !DILocalVariable(name: "__key", scope: !16812, file: !3514, line: 1887, type: !13166)
!16815 = !DILocation(line: 136, column: 70, scope: !13173, inlinedAt: !16816)
!16816 = distinct !DILocation(line: 1887, column: 2, scope: !16812)
!16817 = !DILocation(line: 138, column: 2, scope: !13173, inlinedAt: !16816)
!16818 = !DILocation(line: 139, column: 19, scope: !13173, inlinedAt: !16816)
!16819 = !DILocation(line: 44, column: 15, scope: !13183, inlinedAt: !16820)
!16820 = distinct !DILocation(line: 145, column: 10, scope: !13173, inlinedAt: !16816)
!16821 = !DILocation(line: 47, column: 2, scope: !13183, inlinedAt: !16820)
!16822 = !DILocation(line: 76, column: 9, scope: !13183, inlinedAt: !16820)
!16823 = !DILocation(line: 145, column: 4, scope: !13173, inlinedAt: !16816)
!16824 = !DILocation(line: 145, column: 8, scope: !13173, inlinedAt: !16816)
!16825 = !DILocation(line: 165, column: 2, scope: !13173, inlinedAt: !16816)
!16826 = !DILocation(line: 1887, column: 2, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16812, file: !3514, line: 1887, column: 2)
!16828 = !DILocation(line: 1888, column: 29, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16827, file: !3514, line: 1887, column: 26)
!16830 = !DILocation(line: 1888, column: 37, scope: !16829)
!16831 = !DILocation(line: 1888, column: 12, scope: !16829)
!16832 = !DILocation(line: 1888, column: 10, scope: !16829)
!16833 = !DILocation(line: 1890, column: 7, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16829, file: !3514, line: 1890, column: 7)
!16835 = !DILocation(line: 1890, column: 14, scope: !16834)
!16836 = !DILocation(line: 1890, column: 7, scope: !16829)
!16837 = !DILocation(line: 1891, column: 40, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16834, file: !3514, line: 1890, column: 23)
!16839 = !DILocation(line: 1892, column: 12, scope: !16838)
!16840 = !DILocation(line: 1893, column: 12, scope: !16838)
!16841 = !DILocalVariable(name: "thread", arg: 1, scope: !16842, file: !16843, line: 134, type: !3415)
!16842 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16843, file: !16843, line: 134, type: !16844, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16843 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16844 = !DISubroutineType(types: !16845)
!16845 = !{null, !3415, !32, !102}
!16846 = !DILocation(line: 134, column: 54, scope: !16842, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 1891, column: 4, scope: !16838)
!16848 = !DILocalVariable(name: "value", arg: 2, scope: !16842, file: !16843, line: 135, type: !32)
!16849 = !DILocation(line: 135, column: 21, scope: !16842, inlinedAt: !16847)
!16850 = !DILocalVariable(name: "data", arg: 3, scope: !16842, file: !16843, line: 136, type: !102)
!16851 = !DILocation(line: 136, column: 14, scope: !16842, inlinedAt: !16847)
!16852 = !DILocation(line: 138, column: 31, scope: !16842, inlinedAt: !16847)
!16853 = !DILocation(line: 138, column: 39, scope: !16842, inlinedAt: !16847)
!16854 = !DILocation(line: 65, column: 47, scope: !16678, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 138, column: 2, scope: !16842, inlinedAt: !16847)
!16856 = !DILocation(line: 65, column: 68, scope: !16678, inlinedAt: !16855)
!16857 = !DILocation(line: 67, column: 35, scope: !16678, inlinedAt: !16855)
!16858 = !DILocation(line: 67, column: 2, scope: !16678, inlinedAt: !16855)
!16859 = !DILocation(line: 67, column: 10, scope: !16678, inlinedAt: !16855)
!16860 = !DILocation(line: 67, column: 15, scope: !16678, inlinedAt: !16855)
!16861 = !DILocation(line: 67, column: 33, scope: !16678, inlinedAt: !16855)
!16862 = !DILocation(line: 139, column: 27, scope: !16842, inlinedAt: !16847)
!16863 = !DILocation(line: 139, column: 2, scope: !16842, inlinedAt: !16847)
!16864 = !DILocation(line: 139, column: 10, scope: !16842, inlinedAt: !16847)
!16865 = !DILocation(line: 139, column: 15, scope: !16842, inlinedAt: !16847)
!16866 = !DILocation(line: 139, column: 25, scope: !16842, inlinedAt: !16847)
!16867 = !DILocation(line: 1894, column: 29, scope: !16838)
!16868 = !DILocation(line: 1894, column: 4, scope: !16838)
!16869 = !DILocation(line: 1895, column: 33, scope: !16838)
!16870 = !DILocation(line: 1895, column: 10, scope: !16838)
!16871 = !DILocation(line: 1896, column: 17, scope: !16838)
!16872 = !DILocation(line: 1896, column: 4, scope: !16838)
!16873 = !DILocation(line: 1897, column: 8, scope: !16838)
!16874 = !DILocation(line: 1898, column: 3, scope: !16838)
!16875 = !DILocation(line: 1899, column: 2, scope: !16829)
!16876 = !DILocation(line: 189, column: 60, scope: !13213, inlinedAt: !16877)
!16877 = distinct !DILocation(line: 1887, column: 2, scope: !16827)
!16878 = !DILocation(line: 190, column: 23, scope: !13213, inlinedAt: !16877)
!16879 = !DILocation(line: 192, column: 2, scope: !13213, inlinedAt: !16877)
!16880 = !DILocation(line: 215, column: 22, scope: !13213, inlinedAt: !16877)
!16881 = !DILocation(line: 84, column: 56, scope: !13223, inlinedAt: !16882)
!16882 = distinct !DILocation(line: 215, column: 2, scope: !13213, inlinedAt: !16877)
!16883 = !DILocation(line: 87, column: 6, scope: !13227, inlinedAt: !16882)
!16884 = !DILocation(line: 87, column: 10, scope: !13227, inlinedAt: !16882)
!16885 = !DILocation(line: 87, column: 6, scope: !13223, inlinedAt: !16882)
!16886 = !DILocation(line: 88, column: 3, scope: !13231, inlinedAt: !16882)
!16887 = !DILocation(line: 90, column: 2, scope: !13223, inlinedAt: !16882)
!16888 = !DILocation(line: 110, column: 1, scope: !13223, inlinedAt: !16882)
!16889 = distinct !{!16889, !16813, !16890}
!16890 = !DILocation(line: 1899, column: 2, scope: !16812)
!16891 = !DILocation(line: 1901, column: 9, scope: !16798)
!16892 = !DILocation(line: 1901, column: 2, scope: !16798)
!16893 = distinct !DISubprogram(name: "z_sched_wait", scope: !3514, file: !3514, line: 1904, type: !16894, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3403, retainedNodes: !223)
!16894 = !DISubroutineType(types: !16895)
!16895 = !{!103, !13176, !13166, !3446, !14551, !16896}
!16896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16897 = !DILocalVariable(name: "lock", arg: 1, scope: !16893, file: !3514, line: 1904, type: !13176)
!16898 = !DILocation(line: 1904, column: 37, scope: !16893)
!16899 = !DILocalVariable(name: "key", arg: 2, scope: !16893, file: !3514, line: 1904, type: !13166)
!16900 = !DILocation(line: 1904, column: 60, scope: !16893)
!16901 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16893, file: !3514, line: 1905, type: !3446)
!16902 = !DILocation(line: 1905, column: 15, scope: !16893)
!16903 = !DILocalVariable(name: "timeout", arg: 4, scope: !16893, file: !3514, line: 1905, type: !14551)
!16904 = !DILocation(line: 1905, column: 35, scope: !16893)
!16905 = !DILocalVariable(name: "data", arg: 5, scope: !16893, file: !3514, line: 1905, type: !16896)
!16906 = !DILocation(line: 1905, column: 51, scope: !16893)
!16907 = !DILocalVariable(name: "ret", scope: !16893, file: !3514, line: 1907, type: !103)
!16908 = !DILocation(line: 1907, column: 6, scope: !16893)
!16909 = !DILocation(line: 1907, column: 24, scope: !16893)
!16910 = !DILocation(line: 1907, column: 35, scope: !16893)
!16911 = !DILocation(line: 1907, column: 12, scope: !16893)
!16912 = !DILocation(line: 1909, column: 6, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16893, file: !3514, line: 1909, column: 6)
!16914 = !DILocation(line: 1909, column: 11, scope: !16913)
!16915 = !DILocation(line: 1909, column: 6, scope: !16893)
!16916 = !DILocation(line: 1910, column: 11, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16913, file: !3514, line: 1909, column: 20)
!16918 = !DILocation(line: 1910, column: 21, scope: !16917)
!16919 = !DILocation(line: 1910, column: 26, scope: !16917)
!16920 = !DILocation(line: 1910, column: 4, scope: !16917)
!16921 = !DILocation(line: 1910, column: 9, scope: !16917)
!16922 = !DILocation(line: 1911, column: 2, scope: !16917)
!16923 = !DILocation(line: 1912, column: 9, scope: !16893)
!16924 = !DILocation(line: 1912, column: 2, scope: !16893)
!16925 = distinct !DISubprogram(name: "z_data_copy", scope: !16926, file: !16926, line: 22, type: !253, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3855, retainedNodes: !223)
!16926 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16927 = !DILocation(line: 24, column: 2, scope: !16925)
!16928 = !DILocation(line: 27, column: 2, scope: !16925)
!16929 = !DILocation(line: 71, column: 1, scope: !16925)
!16930 = distinct !DISubprogram(name: "z_add_timeout", scope: !3551, file: !3551, line: 88, type: !16931, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!16931 = !DISubroutineType(types: !16932)
!16932 = !{null, !3524, !3543, !16933}
!16933 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2816, line: 67, baseType: !16934)
!16934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2816, line: 65, size: 64, elements: !16935)
!16935 = !{!16936}
!16936 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16934, file: !2816, line: 66, baseType: !2815, size: 64)
!16937 = !DILocalVariable(name: "to", arg: 1, scope: !16930, file: !3551, line: 88, type: !3524)
!16938 = !DILocation(line: 88, column: 37, scope: !16930)
!16939 = !DILocalVariable(name: "fn", arg: 2, scope: !16930, file: !3551, line: 88, type: !3543)
!16940 = !DILocation(line: 88, column: 57, scope: !16930)
!16941 = !DILocalVariable(name: "timeout", arg: 3, scope: !16930, file: !3551, line: 89, type: !16933)
!16942 = !DILocation(line: 89, column: 18, scope: !16930)
!16943 = !DILocation(line: 91, column: 6, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16930, file: !3551, line: 91, column: 6)
!16945 = !DILocation(line: 91, column: 6, scope: !16930)
!16946 = !DILocation(line: 92, column: 3, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16944, file: !3551, line: 91, column: 40)
!16948 = !DILocation(line: 100, column: 11, scope: !16930)
!16949 = !DILocation(line: 100, column: 2, scope: !16930)
!16950 = !DILocation(line: 100, column: 6, scope: !16930)
!16951 = !DILocation(line: 100, column: 9, scope: !16930)
!16952 = !DILocalVariable(name: "__i", scope: !16953, file: !3551, line: 102, type: !16954)
!16953 = distinct !DILexicalBlock(scope: !16930, file: !3551, line: 102, column: 2)
!16954 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !16955)
!16955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !16956)
!16956 = !{!16957}
!16957 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16955, file: !222, line: 33, baseType: !103, size: 32)
!16958 = !DILocation(line: 102, column: 2, scope: !16953)
!16959 = !DILocalVariable(name: "__key", scope: !16953, file: !3551, line: 102, type: !16954)
!16960 = !DILocalVariable(name: "l", arg: 1, scope: !16961, file: !222, line: 136, type: !16964)
!16961 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !16962, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!16962 = !DISubroutineType(types: !16963)
!16963 = !{!16954, !16964}
!16964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 32)
!16965 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !16966)
!16966 = distinct !DILocation(line: 102, column: 2, scope: !16953)
!16967 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !16966)
!16968 = !DILocalVariable(name: "k", scope: !16961, file: !222, line: 139, type: !16954)
!16969 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !16966)
!16970 = !DILocalVariable(name: "key", scope: !16971, file: !6626, line: 44, type: !32)
!16971 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6626, file: !6626, line: 42, type: !6627, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!16972 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !16973)
!16973 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !16966)
!16974 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !16973)
!16975 = !{i64 1476863}
!16976 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !16973)
!16977 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !16966)
!16978 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !16966)
!16979 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !16966)
!16980 = !DILocation(line: 102, column: 2, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16953, file: !3551, line: 102, column: 2)
!16982 = !DILocalVariable(name: "t", scope: !16983, file: !3551, line: 103, type: !3524)
!16983 = distinct !DILexicalBlock(scope: !16981, file: !3551, line: 102, column: 24)
!16984 = !DILocation(line: 103, column: 20, scope: !16983)
!16985 = !DILocation(line: 106, column: 7, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16983, file: !3551, line: 105, column: 7)
!16987 = !DILocation(line: 106, column: 33, scope: !16986)
!16988 = !DILocation(line: 105, column: 7, scope: !16983)
!16989 = !DILocalVariable(name: "ticks", scope: !16990, file: !3551, line: 107, type: !2815)
!16990 = distinct !DILexicalBlock(scope: !16986, file: !3551, line: 106, column: 39)
!16991 = !DILocation(line: 107, column: 14, scope: !16990)
!16992 = !DILocation(line: 107, column: 22, scope: !16990)
!16993 = !DILocation(line: 107, column: 50, scope: !16990)
!16994 = !DILocation(line: 107, column: 48, scope: !16990)
!16995 = !DILocation(line: 109, column: 17, scope: !16990)
!16996 = !DILocation(line: 109, column: 4, scope: !16990)
!16997 = !DILocation(line: 109, column: 8, scope: !16990)
!16998 = !DILocation(line: 109, column: 15, scope: !16990)
!16999 = !DILocation(line: 110, column: 3, scope: !16990)
!17000 = !DILocation(line: 111, column: 25, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16986, file: !3551, line: 110, column: 10)
!17002 = !DILocation(line: 111, column: 31, scope: !17001)
!17003 = !DILocation(line: 111, column: 37, scope: !17001)
!17004 = !DILocation(line: 111, column: 35, scope: !17001)
!17005 = !DILocation(line: 111, column: 4, scope: !17001)
!17006 = !DILocation(line: 111, column: 8, scope: !17001)
!17007 = !DILocation(line: 111, column: 15, scope: !17001)
!17008 = !DILocation(line: 114, column: 12, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !16983, file: !3551, line: 114, column: 3)
!17010 = !DILocation(line: 114, column: 10, scope: !17009)
!17011 = !DILocation(line: 114, column: 8, scope: !17009)
!17012 = !DILocation(line: 114, column: 21, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17009, file: !3551, line: 114, column: 3)
!17014 = !DILocation(line: 114, column: 23, scope: !17013)
!17015 = !DILocation(line: 114, column: 3, scope: !17009)
!17016 = !DILocation(line: 115, column: 8, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17018, file: !3551, line: 115, column: 8)
!17018 = distinct !DILexicalBlock(scope: !17013, file: !3551, line: 114, column: 45)
!17019 = !DILocation(line: 115, column: 11, scope: !17017)
!17020 = !DILocation(line: 115, column: 20, scope: !17017)
!17021 = !DILocation(line: 115, column: 24, scope: !17017)
!17022 = !DILocation(line: 115, column: 18, scope: !17017)
!17023 = !DILocation(line: 115, column: 8, scope: !17018)
!17024 = !DILocation(line: 116, column: 18, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17017, file: !3551, line: 115, column: 32)
!17026 = !DILocation(line: 116, column: 22, scope: !17025)
!17027 = !DILocation(line: 116, column: 5, scope: !17025)
!17028 = !DILocation(line: 116, column: 8, scope: !17025)
!17029 = !DILocation(line: 116, column: 15, scope: !17025)
!17030 = !DILocation(line: 117, column: 23, scope: !17025)
!17031 = !DILocation(line: 117, column: 26, scope: !17025)
!17032 = !DILocation(line: 117, column: 33, scope: !17025)
!17033 = !DILocation(line: 117, column: 37, scope: !17025)
!17034 = !DILocation(line: 117, column: 5, scope: !17025)
!17035 = !DILocation(line: 118, column: 5, scope: !17025)
!17036 = !DILocation(line: 120, column: 18, scope: !17018)
!17037 = !DILocation(line: 120, column: 21, scope: !17018)
!17038 = !DILocation(line: 120, column: 4, scope: !17018)
!17039 = !DILocation(line: 120, column: 8, scope: !17018)
!17040 = !DILocation(line: 120, column: 15, scope: !17018)
!17041 = !DILocation(line: 121, column: 3, scope: !17018)
!17042 = !DILocation(line: 114, column: 41, scope: !17013)
!17043 = !DILocation(line: 114, column: 36, scope: !17013)
!17044 = !DILocation(line: 114, column: 34, scope: !17013)
!17045 = !DILocation(line: 114, column: 3, scope: !17013)
!17046 = distinct !{!17046, !17015, !17047}
!17047 = !DILocation(line: 121, column: 3, scope: !17009)
!17048 = !DILocation(line: 123, column: 7, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !16983, file: !3551, line: 123, column: 7)
!17050 = !DILocation(line: 123, column: 9, scope: !17049)
!17051 = !DILocation(line: 123, column: 7, scope: !16983)
!17052 = !DILocation(line: 124, column: 37, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17049, file: !3551, line: 123, column: 18)
!17054 = !DILocation(line: 124, column: 41, scope: !17053)
!17055 = !DILocation(line: 124, column: 4, scope: !17053)
!17056 = !DILocation(line: 125, column: 3, scope: !17053)
!17057 = !DILocation(line: 127, column: 7, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !16983, file: !3551, line: 127, column: 7)
!17059 = !DILocation(line: 127, column: 13, scope: !17058)
!17060 = !DILocation(line: 127, column: 10, scope: !17058)
!17061 = !DILocation(line: 127, column: 7, scope: !16983)
!17062 = !DILocalVariable(name: "next_time", scope: !17063, file: !3551, line: 137, type: !250)
!17063 = distinct !DILexicalBlock(scope: !17058, file: !3551, line: 127, column: 22)
!17064 = !DILocation(line: 137, column: 12, scope: !17063)
!17065 = !DILocation(line: 137, column: 24, scope: !17063)
!17066 = !DILocation(line: 139, column: 8, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17063, file: !3551, line: 139, column: 8)
!17068 = !DILocation(line: 139, column: 18, scope: !17067)
!17069 = !DILocation(line: 139, column: 23, scope: !17067)
!17070 = !DILocation(line: 140, column: 22, scope: !17067)
!17071 = !DILocation(line: 140, column: 37, scope: !17067)
!17072 = !DILocation(line: 140, column: 34, scope: !17067)
!17073 = !DILocation(line: 139, column: 8, scope: !17063)
!17074 = !DILocation(line: 141, column: 27, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17067, file: !3551, line: 140, column: 48)
!17076 = !DILocation(line: 141, column: 5, scope: !17075)
!17077 = !DILocation(line: 142, column: 4, scope: !17075)
!17078 = !DILocation(line: 146, column: 3, scope: !17063)
!17079 = !DILocation(line: 147, column: 2, scope: !16983)
!17080 = !DILocalVariable(name: "l", arg: 1, scope: !17081, file: !222, line: 189, type: !16964)
!17081 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !17082, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17082 = !DISubroutineType(types: !17083)
!17083 = !{null, !16964, !16954}
!17084 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17085)
!17085 = distinct !DILocation(line: 102, column: 2, scope: !16981)
!17086 = !DILocalVariable(name: "key", arg: 2, scope: !17081, file: !222, line: 190, type: !16954)
!17087 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17085)
!17088 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17085)
!17089 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17085)
!17090 = !DILocalVariable(name: "key", arg: 1, scope: !17091, file: !6626, line: 84, type: !32)
!17091 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6626, file: !6626, line: 84, type: !6646, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17092 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17093)
!17093 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17085)
!17094 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17093)
!17095 = distinct !DILexicalBlock(scope: !17091, file: !6626, line: 87, column: 6)
!17096 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17093)
!17097 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17093)
!17098 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17093)
!17099 = distinct !DILexicalBlock(scope: !17095, file: !6626, line: 87, column: 17)
!17100 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17093)
!17101 = !{i64 1477727}
!17102 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17093)
!17103 = distinct !{!17103, !16958, !17104}
!17104 = !DILocation(line: 147, column: 2, scope: !16953)
!17105 = !DILocation(line: 148, column: 1, scope: !16930)
!17106 = distinct !DISubprogram(name: "elapsed", scope: !3551, file: !3551, line: 62, type: !17107, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17107 = !DISubroutineType(types: !17108)
!17108 = !{!250}
!17109 = !DILocation(line: 64, column: 9, scope: !17106)
!17110 = !DILocation(line: 64, column: 28, scope: !17106)
!17111 = !DILocation(line: 64, column: 35, scope: !17106)
!17112 = !DILocation(line: 64, column: 2, scope: !17106)
!17113 = distinct !DISubprogram(name: "first", scope: !3551, file: !3551, line: 39, type: !17114, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17114 = !DISubroutineType(types: !17115)
!17115 = !{!3524}
!17116 = !DILocalVariable(name: "t", scope: !17113, file: !3551, line: 41, type: !17117)
!17117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 32)
!17118 = !DILocation(line: 41, column: 15, scope: !17113)
!17119 = !DILocation(line: 41, column: 19, scope: !17113)
!17120 = !DILocation(line: 43, column: 9, scope: !17113)
!17121 = !DILocation(line: 43, column: 11, scope: !17113)
!17122 = !DILocation(line: 43, column: 28, scope: !17113)
!17123 = !DILocation(line: 43, column: 2, scope: !17113)
!17124 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !17125, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{null, !17117, !17117}
!17127 = !DILocalVariable(name: "successor", arg: 1, scope: !17124, file: !124, line: 443, type: !17117)
!17128 = !DILocation(line: 443, column: 50, scope: !17124)
!17129 = !DILocalVariable(name: "node", arg: 2, scope: !17124, file: !124, line: 443, type: !17117)
!17130 = !DILocation(line: 443, column: 74, scope: !17124)
!17131 = !DILocalVariable(name: "prev", scope: !17124, file: !124, line: 445, type: !17132)
!17132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17117)
!17133 = !DILocation(line: 445, column: 21, scope: !17124)
!17134 = !DILocation(line: 445, column: 28, scope: !17124)
!17135 = !DILocation(line: 445, column: 39, scope: !17124)
!17136 = !DILocation(line: 447, column: 15, scope: !17124)
!17137 = !DILocation(line: 447, column: 2, scope: !17124)
!17138 = !DILocation(line: 447, column: 8, scope: !17124)
!17139 = !DILocation(line: 447, column: 13, scope: !17124)
!17140 = !DILocation(line: 448, column: 15, scope: !17124)
!17141 = !DILocation(line: 448, column: 2, scope: !17124)
!17142 = !DILocation(line: 448, column: 8, scope: !17124)
!17143 = !DILocation(line: 448, column: 13, scope: !17124)
!17144 = !DILocation(line: 449, column: 15, scope: !17124)
!17145 = !DILocation(line: 449, column: 2, scope: !17124)
!17146 = !DILocation(line: 449, column: 8, scope: !17124)
!17147 = !DILocation(line: 449, column: 13, scope: !17124)
!17148 = !DILocation(line: 450, column: 20, scope: !17124)
!17149 = !DILocation(line: 450, column: 2, scope: !17124)
!17150 = !DILocation(line: 450, column: 13, scope: !17124)
!17151 = !DILocation(line: 450, column: 18, scope: !17124)
!17152 = !DILocation(line: 451, column: 1, scope: !17124)
!17153 = distinct !DISubprogram(name: "next", scope: !3551, file: !3551, line: 46, type: !17154, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17154 = !DISubroutineType(types: !17155)
!17155 = !{!3524, !3524}
!17156 = !DILocalVariable(name: "t", arg: 1, scope: !17153, file: !3551, line: 46, type: !3524)
!17157 = !DILocation(line: 46, column: 47, scope: !17153)
!17158 = !DILocalVariable(name: "n", scope: !17153, file: !3551, line: 48, type: !17117)
!17159 = !DILocation(line: 48, column: 15, scope: !17153)
!17160 = !DILocation(line: 48, column: 55, scope: !17153)
!17161 = !DILocation(line: 48, column: 58, scope: !17153)
!17162 = !DILocation(line: 48, column: 19, scope: !17153)
!17163 = !DILocation(line: 50, column: 9, scope: !17153)
!17164 = !DILocation(line: 50, column: 11, scope: !17153)
!17165 = !DILocation(line: 50, column: 28, scope: !17153)
!17166 = !DILocation(line: 50, column: 2, scope: !17153)
!17167 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !17168, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{null, !17170, !17117}
!17170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 32)
!17171 = !DILocalVariable(name: "list", arg: 1, scope: !17167, file: !124, line: 404, type: !17170)
!17172 = !DILocation(line: 404, column: 50, scope: !17167)
!17173 = !DILocalVariable(name: "node", arg: 2, scope: !17167, file: !124, line: 404, type: !17117)
!17174 = !DILocation(line: 404, column: 69, scope: !17167)
!17175 = !DILocalVariable(name: "tail", scope: !17167, file: !124, line: 406, type: !17132)
!17176 = !DILocation(line: 406, column: 21, scope: !17167)
!17177 = !DILocation(line: 406, column: 28, scope: !17167)
!17178 = !DILocation(line: 406, column: 34, scope: !17167)
!17179 = !DILocation(line: 408, column: 15, scope: !17167)
!17180 = !DILocation(line: 408, column: 2, scope: !17167)
!17181 = !DILocation(line: 408, column: 8, scope: !17167)
!17182 = !DILocation(line: 408, column: 13, scope: !17167)
!17183 = !DILocation(line: 409, column: 15, scope: !17167)
!17184 = !DILocation(line: 409, column: 2, scope: !17167)
!17185 = !DILocation(line: 409, column: 8, scope: !17167)
!17186 = !DILocation(line: 409, column: 13, scope: !17167)
!17187 = !DILocation(line: 411, column: 15, scope: !17167)
!17188 = !DILocation(line: 411, column: 2, scope: !17167)
!17189 = !DILocation(line: 411, column: 8, scope: !17167)
!17190 = !DILocation(line: 411, column: 13, scope: !17167)
!17191 = !DILocation(line: 412, column: 15, scope: !17167)
!17192 = !DILocation(line: 412, column: 2, scope: !17167)
!17193 = !DILocation(line: 412, column: 8, scope: !17167)
!17194 = !DILocation(line: 412, column: 13, scope: !17167)
!17195 = !DILocation(line: 413, column: 1, scope: !17167)
!17196 = distinct !DISubprogram(name: "next_timeout", scope: !3551, file: !3551, line: 67, type: !17107, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17197 = !DILocalVariable(name: "to", scope: !17196, file: !3551, line: 69, type: !3524)
!17198 = !DILocation(line: 69, column: 19, scope: !17196)
!17199 = !DILocation(line: 69, column: 24, scope: !17196)
!17200 = !DILocalVariable(name: "ticks_elapsed", scope: !17196, file: !3551, line: 70, type: !250)
!17201 = !DILocation(line: 70, column: 10, scope: !17196)
!17202 = !DILocation(line: 70, column: 26, scope: !17196)
!17203 = !DILocalVariable(name: "ret", scope: !17196, file: !3551, line: 71, type: !250)
!17204 = !DILocation(line: 71, column: 10, scope: !17196)
!17205 = !DILocation(line: 73, column: 7, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17196, file: !3551, line: 73, column: 6)
!17207 = !DILocation(line: 73, column: 10, scope: !17206)
!17208 = !DILocation(line: 73, column: 19, scope: !17206)
!17209 = !DILocation(line: 74, column: 17, scope: !17206)
!17210 = !DILocation(line: 74, column: 21, scope: !17206)
!17211 = !DILocation(line: 74, column: 30, scope: !17206)
!17212 = !DILocation(line: 74, column: 28, scope: !17206)
!17213 = !DILocation(line: 74, column: 45, scope: !17206)
!17214 = !DILocation(line: 73, column: 6, scope: !17196)
!17215 = !DILocation(line: 75, column: 7, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17206, file: !3551, line: 74, column: 66)
!17217 = !DILocation(line: 76, column: 2, scope: !17216)
!17218 = !DILocation(line: 77, column: 9, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17206, file: !3551, line: 76, column: 9)
!17220 = !DILocation(line: 77, column: 7, scope: !17219)
!17221 = !DILocation(line: 81, column: 20, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17196, file: !3551, line: 81, column: 6)
!17223 = !DILocation(line: 81, column: 6, scope: !17222)
!17224 = !DILocation(line: 81, column: 32, scope: !17222)
!17225 = !DILocation(line: 81, column: 49, scope: !17222)
!17226 = !DILocation(line: 81, column: 63, scope: !17222)
!17227 = !DILocation(line: 81, column: 61, scope: !17222)
!17228 = !DILocation(line: 81, column: 6, scope: !17196)
!17229 = !DILocation(line: 82, column: 23, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17222, file: !3551, line: 81, column: 68)
!17231 = !DILocation(line: 82, column: 7, scope: !17230)
!17232 = !DILocation(line: 83, column: 2, scope: !17230)
!17233 = !DILocation(line: 85, column: 9, scope: !17196)
!17234 = !DILocation(line: 85, column: 2, scope: !17196)
!17235 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !17236, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17236 = !DISubroutineType(types: !17237)
!17237 = !{!17117, !17170, !17117}
!17238 = !DILocalVariable(name: "list", arg: 1, scope: !17235, file: !124, line: 341, type: !17170)
!17239 = !DILocation(line: 341, column: 61, scope: !17235)
!17240 = !DILocalVariable(name: "node", arg: 2, scope: !17235, file: !124, line: 342, type: !17117)
!17241 = !DILocation(line: 342, column: 26, scope: !17235)
!17242 = !DILocation(line: 344, column: 10, scope: !17235)
!17243 = !DILocation(line: 344, column: 15, scope: !17235)
!17244 = !DILocation(line: 344, column: 9, scope: !17235)
!17245 = !DILocation(line: 344, column: 55, scope: !17235)
!17246 = !DILocation(line: 344, column: 61, scope: !17235)
!17247 = !DILocation(line: 344, column: 26, scope: !17235)
!17248 = !DILocation(line: 344, column: 2, scope: !17235)
!17249 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !17236, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17250 = !DILocalVariable(name: "list", arg: 1, scope: !17249, file: !124, line: 325, type: !17170)
!17251 = !DILocation(line: 325, column: 70, scope: !17249)
!17252 = !DILocalVariable(name: "node", arg: 2, scope: !17249, file: !124, line: 326, type: !17117)
!17253 = !DILocation(line: 326, column: 21, scope: !17249)
!17254 = !DILocation(line: 328, column: 10, scope: !17249)
!17255 = !DILocation(line: 328, column: 18, scope: !17249)
!17256 = !DILocation(line: 328, column: 24, scope: !17249)
!17257 = !DILocation(line: 328, column: 15, scope: !17249)
!17258 = !DILocation(line: 328, column: 9, scope: !17249)
!17259 = !DILocation(line: 328, column: 39, scope: !17249)
!17260 = !DILocation(line: 328, column: 45, scope: !17249)
!17261 = !DILocation(line: 328, column: 2, scope: !17249)
!17262 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !17263, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17263 = !DISubroutineType(types: !17264)
!17264 = !{!17117, !17170}
!17265 = !DILocalVariable(name: "list", arg: 1, scope: !17262, file: !124, line: 294, type: !17170)
!17266 = !DILocation(line: 294, column: 61, scope: !17262)
!17267 = !DILocation(line: 296, column: 28, scope: !17262)
!17268 = !DILocation(line: 296, column: 9, scope: !17262)
!17269 = !DILocation(line: 296, column: 43, scope: !17262)
!17270 = !DILocation(line: 296, column: 49, scope: !17262)
!17271 = !DILocation(line: 296, column: 2, scope: !17262)
!17272 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !17273, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17273 = !DISubroutineType(types: !17274)
!17274 = !{!1035, !17170}
!17275 = !DILocalVariable(name: "list", arg: 1, scope: !17272, file: !124, line: 266, type: !17170)
!17276 = !DILocation(line: 266, column: 52, scope: !17272)
!17277 = !DILocation(line: 268, column: 9, scope: !17272)
!17278 = !DILocation(line: 268, column: 15, scope: !17272)
!17279 = !DILocation(line: 268, column: 23, scope: !17272)
!17280 = !DILocation(line: 268, column: 20, scope: !17272)
!17281 = !DILocation(line: 268, column: 2, scope: !17272)
!17282 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3551, file: !3551, line: 150, type: !17283, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17283 = !DISubroutineType(types: !17284)
!17284 = !{!103, !3524}
!17285 = !DILocalVariable(name: "to", arg: 1, scope: !17282, file: !3551, line: 150, type: !3524)
!17286 = !DILocation(line: 150, column: 38, scope: !17282)
!17287 = !DILocalVariable(name: "ret", scope: !17282, file: !3551, line: 152, type: !103)
!17288 = !DILocation(line: 152, column: 6, scope: !17282)
!17289 = !DILocalVariable(name: "__i", scope: !17290, file: !3551, line: 154, type: !16954)
!17290 = distinct !DILexicalBlock(scope: !17282, file: !3551, line: 154, column: 2)
!17291 = !DILocation(line: 154, column: 2, scope: !17290)
!17292 = !DILocalVariable(name: "__key", scope: !17290, file: !3551, line: 154, type: !16954)
!17293 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17294)
!17294 = distinct !DILocation(line: 154, column: 2, scope: !17290)
!17295 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17294)
!17296 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17294)
!17297 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17294)
!17299 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17298)
!17300 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17298)
!17301 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17294)
!17302 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17294)
!17303 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17294)
!17304 = !DILocation(line: 154, column: 2, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17290, file: !3551, line: 154, column: 2)
!17306 = !DILocation(line: 155, column: 28, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17308, file: !3551, line: 155, column: 7)
!17308 = distinct !DILexicalBlock(scope: !17305, file: !3551, line: 154, column: 24)
!17309 = !DILocation(line: 155, column: 32, scope: !17307)
!17310 = !DILocation(line: 155, column: 7, scope: !17307)
!17311 = !DILocation(line: 155, column: 7, scope: !17308)
!17312 = !DILocation(line: 156, column: 19, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17307, file: !3551, line: 155, column: 39)
!17314 = !DILocation(line: 156, column: 4, scope: !17313)
!17315 = !DILocation(line: 157, column: 8, scope: !17313)
!17316 = !DILocation(line: 158, column: 3, scope: !17313)
!17317 = !DILocation(line: 159, column: 2, scope: !17308)
!17318 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17319)
!17319 = distinct !DILocation(line: 154, column: 2, scope: !17305)
!17320 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17319)
!17321 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17319)
!17322 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17319)
!17323 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17319)
!17325 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17324)
!17326 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17324)
!17327 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17324)
!17328 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17324)
!17329 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17324)
!17330 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17324)
!17331 = distinct !{!17331, !17291, !17332}
!17332 = !DILocation(line: 159, column: 2, scope: !17290)
!17333 = !DILocation(line: 161, column: 9, scope: !17282)
!17334 = !DILocation(line: 161, column: 2, scope: !17282)
!17335 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !17336, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17336 = !DISubroutineType(types: !17337)
!17337 = !{!1035, !17338}
!17338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17339, size: 32)
!17339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3528)
!17340 = !DILocalVariable(name: "node", arg: 1, scope: !17335, file: !124, line: 225, type: !17338)
!17341 = !DILocation(line: 225, column: 59, scope: !17335)
!17342 = !DILocation(line: 227, column: 9, scope: !17335)
!17343 = !DILocation(line: 227, column: 15, scope: !17335)
!17344 = !DILocation(line: 227, column: 20, scope: !17335)
!17345 = !DILocation(line: 227, column: 2, scope: !17335)
!17346 = distinct !DISubprogram(name: "remove_timeout", scope: !3551, file: !3551, line: 53, type: !3545, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17347 = !DILocalVariable(name: "t", arg: 1, scope: !17346, file: !3551, line: 53, type: !3524)
!17348 = !DILocation(line: 53, column: 45, scope: !17346)
!17349 = !DILocation(line: 55, column: 11, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17346, file: !3551, line: 55, column: 6)
!17351 = !DILocation(line: 55, column: 6, scope: !17350)
!17352 = !DILocation(line: 55, column: 14, scope: !17350)
!17353 = !DILocation(line: 55, column: 6, scope: !17346)
!17354 = !DILocation(line: 56, column: 22, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17350, file: !3551, line: 55, column: 23)
!17356 = !DILocation(line: 56, column: 25, scope: !17355)
!17357 = !DILocation(line: 56, column: 8, scope: !17355)
!17358 = !DILocation(line: 56, column: 3, scope: !17355)
!17359 = !DILocation(line: 56, column: 12, scope: !17355)
!17360 = !DILocation(line: 56, column: 19, scope: !17355)
!17361 = !DILocation(line: 57, column: 2, scope: !17355)
!17362 = !DILocation(line: 59, column: 20, scope: !17346)
!17363 = !DILocation(line: 59, column: 23, scope: !17346)
!17364 = !DILocation(line: 59, column: 2, scope: !17346)
!17365 = !DILocation(line: 60, column: 1, scope: !17346)
!17366 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !17367, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17367 = !DISubroutineType(types: !17368)
!17368 = !{null, !17117}
!17369 = !DILocalVariable(name: "node", arg: 1, scope: !17366, file: !124, line: 496, type: !17117)
!17370 = !DILocation(line: 496, column: 50, scope: !17366)
!17371 = !DILocalVariable(name: "prev", scope: !17366, file: !124, line: 498, type: !17132)
!17372 = !DILocation(line: 498, column: 21, scope: !17366)
!17373 = !DILocation(line: 498, column: 28, scope: !17366)
!17374 = !DILocation(line: 498, column: 34, scope: !17366)
!17375 = !DILocalVariable(name: "next", scope: !17366, file: !124, line: 499, type: !17132)
!17376 = !DILocation(line: 499, column: 21, scope: !17366)
!17377 = !DILocation(line: 499, column: 28, scope: !17366)
!17378 = !DILocation(line: 499, column: 34, scope: !17366)
!17379 = !DILocation(line: 501, column: 15, scope: !17366)
!17380 = !DILocation(line: 501, column: 2, scope: !17366)
!17381 = !DILocation(line: 501, column: 8, scope: !17366)
!17382 = !DILocation(line: 501, column: 13, scope: !17366)
!17383 = !DILocation(line: 502, column: 15, scope: !17366)
!17384 = !DILocation(line: 502, column: 2, scope: !17366)
!17385 = !DILocation(line: 502, column: 8, scope: !17366)
!17386 = !DILocation(line: 502, column: 13, scope: !17366)
!17387 = !DILocation(line: 503, column: 17, scope: !17366)
!17388 = !DILocation(line: 503, column: 2, scope: !17366)
!17389 = !DILocation(line: 504, column: 1, scope: !17366)
!17390 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !17367, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17391 = !DILocalVariable(name: "node", arg: 1, scope: !17390, file: !124, line: 211, type: !17117)
!17392 = !DILocation(line: 211, column: 48, scope: !17390)
!17393 = !DILocation(line: 213, column: 2, scope: !17390)
!17394 = !DILocation(line: 213, column: 8, scope: !17390)
!17395 = !DILocation(line: 213, column: 13, scope: !17390)
!17396 = !DILocation(line: 214, column: 2, scope: !17390)
!17397 = !DILocation(line: 214, column: 8, scope: !17390)
!17398 = !DILocation(line: 214, column: 13, scope: !17390)
!17399 = !DILocation(line: 215, column: 1, scope: !17390)
!17400 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3551, file: !3551, line: 183, type: !17401, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17401 = !DISubroutineType(types: !17402)
!17402 = !{!2815, !17403}
!17403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17404, size: 32)
!17404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3525)
!17405 = !DILocalVariable(name: "timeout", arg: 1, scope: !17400, file: !3551, line: 183, type: !17403)
!17406 = !DILocation(line: 183, column: 54, scope: !17400)
!17407 = !DILocalVariable(name: "ticks", scope: !17400, file: !3551, line: 185, type: !2815)
!17408 = !DILocation(line: 185, column: 12, scope: !17400)
!17409 = !DILocalVariable(name: "__i", scope: !17410, file: !3551, line: 187, type: !16954)
!17410 = distinct !DILexicalBlock(scope: !17400, file: !3551, line: 187, column: 2)
!17411 = !DILocation(line: 187, column: 2, scope: !17410)
!17412 = !DILocalVariable(name: "__key", scope: !17410, file: !3551, line: 187, type: !16954)
!17413 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 187, column: 2, scope: !17410)
!17415 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17414)
!17416 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17414)
!17417 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17414)
!17419 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17418)
!17420 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17418)
!17421 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17414)
!17422 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17414)
!17423 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17414)
!17424 = !DILocation(line: 187, column: 2, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17410, file: !3551, line: 187, column: 2)
!17426 = !DILocation(line: 188, column: 23, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17425, file: !3551, line: 187, column: 24)
!17428 = !DILocation(line: 188, column: 11, scope: !17427)
!17429 = !DILocation(line: 188, column: 9, scope: !17427)
!17430 = !DILocation(line: 189, column: 2, scope: !17427)
!17431 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 187, column: 2, scope: !17425)
!17433 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17432)
!17434 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17432)
!17435 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17432)
!17436 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17437)
!17437 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17432)
!17438 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17437)
!17439 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17437)
!17440 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17437)
!17441 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17437)
!17442 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17437)
!17443 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17437)
!17444 = distinct !{!17444, !17411, !17445}
!17445 = !DILocation(line: 189, column: 2, scope: !17410)
!17446 = !DILocation(line: 191, column: 9, scope: !17400)
!17447 = !DILocation(line: 191, column: 2, scope: !17400)
!17448 = distinct !DISubprogram(name: "timeout_rem", scope: !3551, file: !3551, line: 165, type: !17401, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17449 = !DILocalVariable(name: "timeout", arg: 1, scope: !17448, file: !3551, line: 165, type: !17403)
!17450 = !DILocation(line: 165, column: 53, scope: !17448)
!17451 = !DILocalVariable(name: "ticks", scope: !17448, file: !3551, line: 167, type: !2815)
!17452 = !DILocation(line: 167, column: 12, scope: !17448)
!17453 = !DILocation(line: 169, column: 28, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17448, file: !3551, line: 169, column: 6)
!17455 = !DILocation(line: 169, column: 6, scope: !17454)
!17456 = !DILocation(line: 169, column: 6, scope: !17448)
!17457 = !DILocation(line: 170, column: 3, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17454, file: !3551, line: 169, column: 38)
!17459 = !DILocalVariable(name: "t", scope: !17460, file: !3551, line: 173, type: !3524)
!17460 = distinct !DILexicalBlock(scope: !17448, file: !3551, line: 173, column: 2)
!17461 = !DILocation(line: 173, column: 24, scope: !17460)
!17462 = !DILocation(line: 173, column: 28, scope: !17460)
!17463 = !DILocation(line: 173, column: 7, scope: !17460)
!17464 = !DILocation(line: 173, column: 37, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17460, file: !3551, line: 173, column: 2)
!17466 = !DILocation(line: 173, column: 39, scope: !17465)
!17467 = !DILocation(line: 173, column: 2, scope: !17460)
!17468 = !DILocation(line: 174, column: 12, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17465, file: !3551, line: 173, column: 61)
!17470 = !DILocation(line: 174, column: 15, scope: !17469)
!17471 = !DILocation(line: 174, column: 9, scope: !17469)
!17472 = !DILocation(line: 175, column: 7, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17469, file: !3551, line: 175, column: 7)
!17474 = !DILocation(line: 175, column: 18, scope: !17473)
!17475 = !DILocation(line: 175, column: 15, scope: !17473)
!17476 = !DILocation(line: 175, column: 7, scope: !17469)
!17477 = !DILocation(line: 176, column: 4, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17473, file: !3551, line: 175, column: 21)
!17479 = !DILocation(line: 178, column: 2, scope: !17469)
!17480 = !DILocation(line: 173, column: 57, scope: !17465)
!17481 = !DILocation(line: 173, column: 52, scope: !17465)
!17482 = !DILocation(line: 173, column: 50, scope: !17465)
!17483 = !DILocation(line: 173, column: 2, scope: !17465)
!17484 = distinct !{!17484, !17467, !17485}
!17485 = !DILocation(line: 178, column: 2, scope: !17460)
!17486 = !DILocation(line: 180, column: 9, scope: !17448)
!17487 = !DILocation(line: 180, column: 17, scope: !17448)
!17488 = !DILocation(line: 180, column: 15, scope: !17448)
!17489 = !DILocation(line: 180, column: 2, scope: !17448)
!17490 = !DILocation(line: 181, column: 1, scope: !17448)
!17491 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12592, file: !12592, line: 35, type: !17492, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17492 = !DISubroutineType(types: !17493)
!17493 = !{!1035, !17403}
!17494 = !DILocalVariable(name: "to", arg: 1, scope: !17491, file: !12592, line: 35, type: !17403)
!17495 = !DILocation(line: 35, column: 65, scope: !17491)
!17496 = !DILocation(line: 37, column: 31, scope: !17491)
!17497 = !DILocation(line: 37, column: 35, scope: !17491)
!17498 = !DILocation(line: 37, column: 10, scope: !17491)
!17499 = !DILocation(line: 37, column: 9, scope: !17491)
!17500 = !DILocation(line: 37, column: 2, scope: !17491)
!17501 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3551, file: !3551, line: 194, type: !17401, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17502 = !DILocalVariable(name: "timeout", arg: 1, scope: !17501, file: !3551, line: 194, type: !17403)
!17503 = !DILocation(line: 194, column: 52, scope: !17501)
!17504 = !DILocalVariable(name: "ticks", scope: !17501, file: !3551, line: 196, type: !2815)
!17505 = !DILocation(line: 196, column: 12, scope: !17501)
!17506 = !DILocalVariable(name: "__i", scope: !17507, file: !3551, line: 198, type: !16954)
!17507 = distinct !DILexicalBlock(scope: !17501, file: !3551, line: 198, column: 2)
!17508 = !DILocation(line: 198, column: 2, scope: !17507)
!17509 = !DILocalVariable(name: "__key", scope: !17507, file: !3551, line: 198, type: !16954)
!17510 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17511)
!17511 = distinct !DILocation(line: 198, column: 2, scope: !17507)
!17512 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17511)
!17513 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17511)
!17514 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17515)
!17515 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17511)
!17516 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17515)
!17517 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17515)
!17518 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17511)
!17519 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17511)
!17520 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17511)
!17521 = !DILocation(line: 198, column: 2, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17507, file: !3551, line: 198, column: 2)
!17523 = !DILocation(line: 199, column: 11, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17522, file: !3551, line: 198, column: 24)
!17525 = !DILocation(line: 199, column: 35, scope: !17524)
!17526 = !DILocation(line: 199, column: 23, scope: !17524)
!17527 = !DILocation(line: 199, column: 21, scope: !17524)
!17528 = !DILocation(line: 199, column: 9, scope: !17524)
!17529 = !DILocation(line: 200, column: 2, scope: !17524)
!17530 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17531)
!17531 = distinct !DILocation(line: 198, column: 2, scope: !17522)
!17532 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17531)
!17533 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17531)
!17534 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17531)
!17535 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17536)
!17536 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17531)
!17537 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17536)
!17538 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17536)
!17539 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17536)
!17540 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17536)
!17541 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17536)
!17542 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17536)
!17543 = distinct !{!17543, !17508, !17544}
!17544 = !DILocation(line: 200, column: 2, scope: !17507)
!17545 = !DILocation(line: 202, column: 9, scope: !17501)
!17546 = !DILocation(line: 202, column: 2, scope: !17501)
!17547 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3551, file: !3551, line: 205, type: !17107, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17548 = !DILocalVariable(name: "ret", scope: !17547, file: !3551, line: 207, type: !250)
!17549 = !DILocation(line: 207, column: 10, scope: !17547)
!17550 = !DILocalVariable(name: "__i", scope: !17551, file: !3551, line: 209, type: !16954)
!17551 = distinct !DILexicalBlock(scope: !17547, file: !3551, line: 209, column: 2)
!17552 = !DILocation(line: 209, column: 2, scope: !17551)
!17553 = !DILocalVariable(name: "__key", scope: !17551, file: !3551, line: 209, type: !16954)
!17554 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17555)
!17555 = distinct !DILocation(line: 209, column: 2, scope: !17551)
!17556 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17555)
!17557 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17555)
!17558 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17555)
!17560 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17559)
!17561 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17559)
!17562 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17555)
!17563 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17555)
!17564 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17555)
!17565 = !DILocation(line: 209, column: 2, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17551, file: !3551, line: 209, column: 2)
!17567 = !DILocation(line: 210, column: 9, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17566, file: !3551, line: 209, column: 24)
!17569 = !DILocation(line: 210, column: 7, scope: !17568)
!17570 = !DILocation(line: 211, column: 2, scope: !17568)
!17571 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17572)
!17572 = distinct !DILocation(line: 209, column: 2, scope: !17566)
!17573 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17572)
!17574 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17572)
!17575 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17572)
!17576 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17577)
!17577 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17572)
!17578 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17577)
!17579 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17577)
!17580 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17577)
!17581 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17577)
!17582 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17577)
!17583 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17577)
!17584 = distinct !{!17584, !17552, !17585}
!17585 = !DILocation(line: 211, column: 2, scope: !17551)
!17586 = !DILocation(line: 212, column: 9, scope: !17547)
!17587 = !DILocation(line: 212, column: 2, scope: !17547)
!17588 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3551, file: !3551, line: 215, type: !10845, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17589 = !DILocalVariable(name: "ticks", arg: 1, scope: !17588, file: !3551, line: 215, type: !250)
!17590 = !DILocation(line: 215, column: 35, scope: !17588)
!17591 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17588, file: !3551, line: 215, type: !1035)
!17592 = !DILocation(line: 215, column: 47, scope: !17588)
!17593 = !DILocalVariable(name: "__i", scope: !17594, file: !3551, line: 217, type: !16954)
!17594 = distinct !DILexicalBlock(scope: !17588, file: !3551, line: 217, column: 2)
!17595 = !DILocation(line: 217, column: 2, scope: !17594)
!17596 = !DILocalVariable(name: "__key", scope: !17594, file: !3551, line: 217, type: !16954)
!17597 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17598)
!17598 = distinct !DILocation(line: 217, column: 2, scope: !17594)
!17599 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17598)
!17600 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17598)
!17601 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17602)
!17602 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17598)
!17603 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17602)
!17604 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17602)
!17605 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17598)
!17606 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17598)
!17607 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17598)
!17608 = !DILocation(line: 217, column: 2, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17594, file: !3551, line: 217, column: 2)
!17610 = !DILocalVariable(name: "next_to", scope: !17611, file: !3551, line: 218, type: !103)
!17611 = distinct !DILexicalBlock(scope: !17609, file: !3551, line: 217, column: 24)
!17612 = !DILocation(line: 218, column: 7, scope: !17611)
!17613 = !DILocation(line: 218, column: 17, scope: !17611)
!17614 = !DILocalVariable(name: "sooner", scope: !17611, file: !3551, line: 219, type: !1035)
!17615 = !DILocation(line: 219, column: 8, scope: !17611)
!17616 = !DILocation(line: 219, column: 18, scope: !17611)
!17617 = !DILocation(line: 219, column: 26, scope: !17611)
!17618 = !DILocation(line: 220, column: 10, scope: !17611)
!17619 = !DILocation(line: 220, column: 14, scope: !17611)
!17620 = !DILocation(line: 220, column: 23, scope: !17611)
!17621 = !DILocation(line: 220, column: 20, scope: !17611)
!17622 = !DILocalVariable(name: "imminent", scope: !17611, file: !3551, line: 221, type: !1035)
!17623 = !DILocation(line: 221, column: 8, scope: !17611)
!17624 = !DILocation(line: 221, column: 19, scope: !17611)
!17625 = !DILocation(line: 221, column: 27, scope: !17611)
!17626 = !DILocation(line: 233, column: 8, scope: !17627)
!17627 = distinct !DILexicalBlock(scope: !17611, file: !3551, line: 233, column: 7)
!17628 = !DILocation(line: 233, column: 17, scope: !17627)
!17629 = !DILocation(line: 233, column: 21, scope: !17627)
!17630 = !DILocation(line: 233, column: 7, scope: !17611)
!17631 = !DILocation(line: 234, column: 26, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17627, file: !3551, line: 233, column: 56)
!17633 = !DILocation(line: 234, column: 47, scope: !17632)
!17634 = !DILocation(line: 234, column: 4, scope: !17632)
!17635 = !DILocation(line: 235, column: 3, scope: !17632)
!17636 = !DILocation(line: 236, column: 2, scope: !17611)
!17637 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17638)
!17638 = distinct !DILocation(line: 217, column: 2, scope: !17609)
!17639 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17638)
!17640 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17638)
!17641 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17638)
!17642 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17643)
!17643 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17638)
!17644 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17643)
!17645 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17643)
!17646 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17643)
!17647 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17643)
!17648 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17643)
!17649 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17643)
!17650 = distinct !{!17650, !17595, !17651}
!17651 = !DILocation(line: 236, column: 2, scope: !17594)
!17652 = !DILocation(line: 237, column: 1, scope: !17588)
!17653 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3551, file: !3551, line: 239, type: !17654, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17654 = !DISubroutineType(types: !17655)
!17655 = !{null, !250}
!17656 = !DILocalVariable(name: "ticks", arg: 1, scope: !17653, file: !3551, line: 239, type: !250)
!17657 = !DILocation(line: 239, column: 33, scope: !17653)
!17658 = !DILocation(line: 242, column: 15, scope: !17653)
!17659 = !DILocation(line: 242, column: 2, scope: !17653)
!17660 = !DILocalVariable(name: "key", scope: !17653, file: !3551, line: 245, type: !16954)
!17661 = !DILocation(line: 245, column: 19, scope: !17653)
!17662 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17663)
!17663 = distinct !DILocation(line: 245, column: 25, scope: !17653)
!17664 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17663)
!17665 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17663)
!17666 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17667)
!17667 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17663)
!17668 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17667)
!17669 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17667)
!17670 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17663)
!17671 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17663)
!17672 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17663)
!17673 = !DILocation(line: 245, column: 25, scope: !17653)
!17674 = !DILocation(line: 259, column: 23, scope: !17653)
!17675 = !DILocation(line: 259, column: 21, scope: !17653)
!17676 = !DILocation(line: 261, column: 2, scope: !17653)
!17677 = !DILocation(line: 261, column: 9, scope: !17653)
!17678 = !DILocation(line: 261, column: 17, scope: !17653)
!17679 = !DILocation(line: 261, column: 25, scope: !17653)
!17680 = !DILocation(line: 261, column: 28, scope: !17653)
!17681 = !DILocation(line: 261, column: 37, scope: !17653)
!17682 = !DILocation(line: 261, column: 47, scope: !17653)
!17683 = !DILocation(line: 261, column: 44, scope: !17653)
!17684 = !DILocation(line: 0, scope: !17653)
!17685 = !DILocalVariable(name: "t", scope: !17686, file: !3551, line: 262, type: !3524)
!17686 = distinct !DILexicalBlock(scope: !17653, file: !3551, line: 261, column: 67)
!17687 = !DILocation(line: 262, column: 20, scope: !17686)
!17688 = !DILocation(line: 262, column: 24, scope: !17686)
!17689 = !DILocalVariable(name: "dt", scope: !17686, file: !3551, line: 263, type: !103)
!17690 = !DILocation(line: 263, column: 7, scope: !17686)
!17691 = !DILocation(line: 263, column: 12, scope: !17686)
!17692 = !DILocation(line: 263, column: 15, scope: !17686)
!17693 = !DILocation(line: 265, column: 16, scope: !17686)
!17694 = !DILocation(line: 265, column: 13, scope: !17686)
!17695 = !DILocation(line: 266, column: 3, scope: !17686)
!17696 = !DILocation(line: 266, column: 6, scope: !17686)
!17697 = !DILocation(line: 266, column: 13, scope: !17686)
!17698 = !DILocation(line: 267, column: 18, scope: !17686)
!17699 = !DILocation(line: 267, column: 3, scope: !17686)
!17700 = !DILocation(line: 269, column: 3, scope: !17686)
!17701 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17702)
!17702 = distinct !DILocation(line: 269, column: 3, scope: !17686)
!17703 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17702)
!17704 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17702)
!17705 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17702)
!17706 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17707)
!17707 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17702)
!17708 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17707)
!17709 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17707)
!17710 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17707)
!17711 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17707)
!17712 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17707)
!17713 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17707)
!17714 = !DILocation(line: 270, column: 3, scope: !17686)
!17715 = !DILocation(line: 270, column: 6, scope: !17686)
!17716 = !DILocation(line: 270, column: 9, scope: !17686)
!17717 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17718)
!17718 = distinct !DILocation(line: 271, column: 9, scope: !17686)
!17719 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17718)
!17720 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17718)
!17721 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17722)
!17722 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17718)
!17723 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17722)
!17724 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17722)
!17725 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17718)
!17726 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17718)
!17727 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17718)
!17728 = !DILocation(line: 271, column: 9, scope: !17686)
!17729 = !DILocation(line: 272, column: 25, scope: !17686)
!17730 = !DILocation(line: 272, column: 22, scope: !17686)
!17731 = distinct !{!17731, !17676, !17732}
!17732 = !DILocation(line: 273, column: 2, scope: !17653)
!17733 = !DILocation(line: 275, column: 6, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17653, file: !3551, line: 275, column: 6)
!17735 = !DILocation(line: 275, column: 14, scope: !17734)
!17736 = !DILocation(line: 275, column: 6, scope: !17653)
!17737 = !DILocation(line: 276, column: 22, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17734, file: !3551, line: 275, column: 23)
!17739 = !DILocation(line: 276, column: 3, scope: !17738)
!17740 = !DILocation(line: 276, column: 12, scope: !17738)
!17741 = !DILocation(line: 276, column: 19, scope: !17738)
!17742 = !DILocation(line: 277, column: 2, scope: !17738)
!17743 = !DILocation(line: 279, column: 15, scope: !17653)
!17744 = !DILocation(line: 279, column: 12, scope: !17653)
!17745 = !DILocation(line: 280, column: 21, scope: !17653)
!17746 = !DILocation(line: 282, column: 24, scope: !17653)
!17747 = !DILocation(line: 282, column: 2, scope: !17653)
!17748 = !DILocation(line: 284, column: 2, scope: !17653)
!17749 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17750)
!17750 = distinct !DILocation(line: 284, column: 2, scope: !17653)
!17751 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17750)
!17752 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17750)
!17753 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17750)
!17754 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17755)
!17755 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17750)
!17756 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17755)
!17757 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17755)
!17758 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17755)
!17759 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17755)
!17760 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17755)
!17761 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17755)
!17762 = !DILocation(line: 285, column: 1, scope: !17653)
!17763 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3551, file: !3551, line: 287, type: !17764, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17764 = !DISubroutineType(types: !17765)
!17765 = !{!186}
!17766 = !DILocalVariable(name: "t", scope: !17763, file: !3551, line: 289, type: !2246)
!17767 = !DILocation(line: 289, column: 11, scope: !17763)
!17768 = !DILocalVariable(name: "__i", scope: !17769, file: !3551, line: 291, type: !16954)
!17769 = distinct !DILexicalBlock(scope: !17763, file: !3551, line: 291, column: 2)
!17770 = !DILocation(line: 291, column: 2, scope: !17769)
!17771 = !DILocalVariable(name: "__key", scope: !17769, file: !3551, line: 291, type: !16954)
!17772 = !DILocation(line: 136, column: 70, scope: !16961, inlinedAt: !17773)
!17773 = distinct !DILocation(line: 291, column: 2, scope: !17769)
!17774 = !DILocation(line: 138, column: 2, scope: !16961, inlinedAt: !17773)
!17775 = !DILocation(line: 139, column: 19, scope: !16961, inlinedAt: !17773)
!17776 = !DILocation(line: 44, column: 15, scope: !16971, inlinedAt: !17777)
!17777 = distinct !DILocation(line: 145, column: 10, scope: !16961, inlinedAt: !17773)
!17778 = !DILocation(line: 47, column: 2, scope: !16971, inlinedAt: !17777)
!17779 = !DILocation(line: 76, column: 9, scope: !16971, inlinedAt: !17777)
!17780 = !DILocation(line: 145, column: 4, scope: !16961, inlinedAt: !17773)
!17781 = !DILocation(line: 145, column: 8, scope: !16961, inlinedAt: !17773)
!17782 = !DILocation(line: 165, column: 2, scope: !16961, inlinedAt: !17773)
!17783 = !DILocation(line: 291, column: 2, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17769, file: !3551, line: 291, column: 2)
!17785 = !DILocation(line: 292, column: 7, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17784, file: !3551, line: 291, column: 24)
!17787 = !DILocation(line: 292, column: 19, scope: !17786)
!17788 = !DILocation(line: 292, column: 17, scope: !17786)
!17789 = !DILocation(line: 292, column: 5, scope: !17786)
!17790 = !DILocation(line: 293, column: 2, scope: !17786)
!17791 = !DILocation(line: 189, column: 60, scope: !17081, inlinedAt: !17792)
!17792 = distinct !DILocation(line: 291, column: 2, scope: !17784)
!17793 = !DILocation(line: 190, column: 23, scope: !17081, inlinedAt: !17792)
!17794 = !DILocation(line: 192, column: 2, scope: !17081, inlinedAt: !17792)
!17795 = !DILocation(line: 215, column: 22, scope: !17081, inlinedAt: !17792)
!17796 = !DILocation(line: 84, column: 56, scope: !17091, inlinedAt: !17797)
!17797 = distinct !DILocation(line: 215, column: 2, scope: !17081, inlinedAt: !17792)
!17798 = !DILocation(line: 87, column: 6, scope: !17095, inlinedAt: !17797)
!17799 = !DILocation(line: 87, column: 10, scope: !17095, inlinedAt: !17797)
!17800 = !DILocation(line: 87, column: 6, scope: !17091, inlinedAt: !17797)
!17801 = !DILocation(line: 88, column: 3, scope: !17099, inlinedAt: !17797)
!17802 = !DILocation(line: 90, column: 2, scope: !17091, inlinedAt: !17797)
!17803 = !DILocation(line: 110, column: 1, scope: !17091, inlinedAt: !17797)
!17804 = distinct !{!17804, !17770, !17805}
!17805 = !DILocation(line: 293, column: 2, scope: !17769)
!17806 = !DILocation(line: 294, column: 9, scope: !17763)
!17807 = !DILocation(line: 294, column: 2, scope: !17763)
!17808 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3551, file: !3551, line: 297, type: !7731, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17809 = !DILocation(line: 300, column: 19, scope: !17808)
!17810 = !DILocation(line: 300, column: 9, scope: !17808)
!17811 = !DILocation(line: 300, column: 2, scope: !17808)
!17812 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3551, file: !3551, line: 306, type: !17764, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17813 = !DILocation(line: 308, column: 9, scope: !17812)
!17814 = !DILocation(line: 308, column: 2, scope: !17812)
!17815 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3551, file: !3551, line: 319, type: !12020, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17816 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17815, file: !3551, line: 319, type: !173)
!17817 = !DILocation(line: 319, column: 34, scope: !17815)
!17818 = !DILocation(line: 321, column: 2, scope: !17815)
!17819 = !DILocation(line: 321, column: 2, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17815, file: !3551, line: 321, column: 2)
!17821 = !DILocation(line: 322, column: 6, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17815, file: !3551, line: 322, column: 6)
!17823 = !DILocation(line: 322, column: 19, scope: !17822)
!17824 = !DILocation(line: 322, column: 6, scope: !17815)
!17825 = !DILocation(line: 323, column: 3, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17822, file: !3551, line: 322, column: 26)
!17827 = !DILocation(line: 323, column: 3, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17826, file: !3551, line: 323, column: 3)
!17829 = !DILocation(line: 324, column: 3, scope: !17826)
!17830 = !DILocalVariable(name: "start_cycles", scope: !17815, file: !3551, line: 328, type: !173)
!17831 = !DILocation(line: 328, column: 11, scope: !17815)
!17832 = !DILocation(line: 328, column: 26, scope: !17815)
!17833 = !DILocalVariable(name: "cycles_to_wait", scope: !17815, file: !3551, line: 331, type: !173)
!17834 = !DILocation(line: 331, column: 11, scope: !17815)
!17835 = !DILocation(line: 332, column: 13, scope: !17815)
!17836 = !DILocation(line: 332, column: 3, scope: !17815)
!17837 = !DILocation(line: 333, column: 13, scope: !17815)
!17838 = !DILocation(line: 333, column: 3, scope: !17815)
!17839 = !DILocation(line: 332, column: 26, scope: !17815)
!17840 = !DILocation(line: 333, column: 43, scope: !17815)
!17841 = !DILocation(line: 331, column: 28, scope: !17815)
!17842 = !DILocation(line: 337, column: 2, scope: !17815)
!17843 = !DILocalVariable(name: "current_cycles", scope: !17844, file: !3551, line: 338, type: !173)
!17844 = distinct !DILexicalBlock(scope: !17845, file: !3551, line: 337, column: 11)
!17845 = distinct !DILexicalBlock(scope: !17846, file: !3551, line: 337, column: 2)
!17846 = distinct !DILexicalBlock(scope: !17815, file: !3551, line: 337, column: 2)
!17847 = !DILocation(line: 338, column: 12, scope: !17844)
!17848 = !DILocation(line: 338, column: 29, scope: !17844)
!17849 = !DILocation(line: 341, column: 8, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17844, file: !3551, line: 341, column: 7)
!17851 = !DILocation(line: 341, column: 25, scope: !17850)
!17852 = !DILocation(line: 341, column: 23, scope: !17850)
!17853 = !DILocation(line: 341, column: 42, scope: !17850)
!17854 = !DILocation(line: 341, column: 39, scope: !17850)
!17855 = !DILocation(line: 341, column: 7, scope: !17844)
!17856 = !DILocation(line: 342, column: 4, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17850, file: !3551, line: 341, column: 58)
!17858 = !DILocation(line: 337, column: 2, scope: !17845)
!17859 = distinct !{!17859, !17860, !17861}
!17860 = !DILocation(line: 337, column: 2, scope: !17846)
!17861 = !DILocation(line: 344, column: 2, scope: !17846)
!17862 = !DILocation(line: 348, column: 2, scope: !17815)
!17863 = !DILocation(line: 348, column: 2, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17815, file: !3551, line: 348, column: 2)
!17865 = !DILocation(line: 349, column: 1, scope: !17815)
!17866 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !109, file: !109, line: 1675, type: !7731, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17867 = !DILocation(line: 1677, column: 9, scope: !17866)
!17868 = !DILocation(line: 1677, column: 2, scope: !17866)
!17869 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !10787, file: !10787, line: 59, type: !3989, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17870 = !DILocation(line: 64, column: 2, scope: !17869)
!17871 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17872, file: !17872, line: 24, type: !7731, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17872 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17873 = !DILocation(line: 26, column: 9, scope: !17871)
!17874 = !DILocation(line: 26, column: 2, scope: !17871)
!17875 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3551, file: !3551, line: 364, type: !17876, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3521, retainedNodes: !223)
!17876 = !DISubroutineType(types: !17877)
!17877 = !{!2246, !16933}
!17878 = !DILocalVariable(name: "timeout", arg: 1, scope: !17875, file: !3551, line: 364, type: !16933)
!17879 = !DILocation(line: 364, column: 49, scope: !17875)
!17880 = !DILocalVariable(name: "dt", scope: !17875, file: !3551, line: 366, type: !2815)
!17881 = !DILocation(line: 366, column: 12, scope: !17875)
!17882 = !DILocation(line: 368, column: 6, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17875, file: !3551, line: 368, column: 6)
!17884 = !DILocation(line: 368, column: 6, scope: !17875)
!17885 = !DILocation(line: 369, column: 3, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17883, file: !3551, line: 368, column: 40)
!17887 = !DILocation(line: 370, column: 13, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17883, file: !3551, line: 370, column: 13)
!17889 = !DILocation(line: 370, column: 13, scope: !17883)
!17890 = !DILocation(line: 371, column: 10, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17888, file: !3551, line: 370, column: 47)
!17892 = !DILocation(line: 371, column: 3, scope: !17891)
!17893 = !DILocation(line: 374, column: 16, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17888, file: !3551, line: 372, column: 9)
!17895 = !DILocation(line: 374, column: 6, scope: !17894)
!17896 = !DILocation(line: 376, column: 43, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17894, file: !3551, line: 376, column: 7)
!17898 = !DILocation(line: 376, column: 58, scope: !17897)
!17899 = !DILocation(line: 376, column: 7, scope: !17894)
!17900 = !DILocation(line: 377, column: 11, scope: !17901)
!17901 = distinct !DILexicalBlock(scope: !17897, file: !3551, line: 376, column: 64)
!17902 = !DILocation(line: 377, column: 4, scope: !17901)
!17903 = !DILocation(line: 379, column: 10, scope: !17894)
!17904 = !DILocation(line: 379, column: 33, scope: !17894)
!17905 = !DILocation(line: 379, column: 31, scope: !17894)
!17906 = !DILocation(line: 379, column: 3, scope: !17894)
!17907 = !DILocation(line: 381, column: 1, scope: !17875)
!17908 = distinct !DISubprogram(name: "boot_banner", scope: !17909, file: !17909, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3858, retainedNodes: !223)
!17909 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17910 = !DILocation(line: 34, column: 2, scope: !17908)
!17911 = !DILocation(line: 36, column: 1, scope: !17908)
