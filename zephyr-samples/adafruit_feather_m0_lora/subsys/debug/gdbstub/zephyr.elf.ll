; ModuleID = 'build/adafruit_feather_m0_lora/subsys/debug/gdbstub/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv6m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread.16 = type { %struct._thread_base.9, %struct._callee_saved.10, i8*, %union.anon.5, i32, %struct.k_heap.14*, %struct._thread_arch.15 }
%struct._thread_base.9 = type { %union.anon.5, %union.anon.5*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.8 }
%union.anon.2.7 = type { i16 }
%struct._timeout.8 = type { %struct._dnode.4, void (%struct._timeout.8*)*, i64 }
%struct._dnode.4 = type { %union.anon.0.2, %union.anon.0.2 }
%union.anon.0.2 = type { %struct._dnode.4* }
%struct._callee_saved.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.5 = type { %struct._dnode.4 }
%struct.k_heap.14 = type { %struct.sys_heap.12, %union.anon.5, %struct.k_spinlock.13 }
%struct.sys_heap.12 = type { %struct.z_heap.11*, i8*, i32 }
%struct.z_heap.11 = type opaque
%struct.k_spinlock.13 = type {}
%struct._thread_arch.15 = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.16*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device.73*)*, %struct.device.73* }
%struct.device.73 = type { i8*, i8*, i8*, %struct.device_state.72*, i8*, i16* }
%struct.device_state.72 = type { i8, i8 }
%struct.sam0_eic_data = type { [2 x %struct.sam0_eic_port_data], [16 x %struct.z_thread_stack_element] }
%struct.sam0_eic_port_data = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam0_dev_cfg = type { %struct.SercomUsart*, i32, i32, i8, i32, i16, void (%struct.device.73*)*, %struct.pinctrl_dev_config* }
%struct.SercomUsart = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_PMUX_Type, [5 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, [8 x i8], %union.GCLK_CLKCTRL_Type, [6 x i8], %union.PORT_PMUX_Type }
%union.PORT_DIR_Type = type { %union.anon.68 }
%union.anon.68 = type { i32 }
%union.GCLK_CLKCTRL_Type = type { %union.anon.2.7 }
%union.PORT_PMUX_Type = type { %struct.z_thread_stack_element }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device.73*, i8*)*, void (%struct.device.73*, i8)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, i8*, i32)*, i32 (%struct.device.73*, i8*, i32)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam0_dev_data = type { %struct.uart_config, void (%struct.device.73*, i8*)*, i8* }
%struct.k_thread.203 = type { %struct._thread_base.196, %struct._callee_saved.10, i8*, %union.anon.192, i32, %struct.k_heap.201*, %struct._thread_arch.15 }
%struct._thread_base.196 = type { %union.anon.192, %union.anon.192*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.195 }
%struct._timeout.195 = type { %struct._dnode.191, void (%struct._timeout.195*)*, i64 }
%struct._dnode.191 = type { %union.anon.0.189, %union.anon.0.189 }
%union.anon.0.189 = type { %struct._dnode.191* }
%union.anon.192 = type { %struct._dnode.191 }
%struct.k_heap.201 = type { %struct.sys_heap.199, %union.anon.192, %struct.k_spinlock.13 }
%struct.sys_heap.199 = type { %struct.z_heap.198*, i8*, i32 }
%struct.z_heap.198 = type opaque
%struct._static_thread_data.499 = type { %struct.k_thread.203*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread.203*, %struct.k_thread.203*, i32, i8, %struct.k_spinlock.13 }
%struct._ready_q = type { %struct.k_thread.203*, %struct._dnode.191 }
%struct.__va_list = type { i8* }
%struct.buf_out_context = type { i32, [0 x i8] }
%struct.str_context = type { i8*, i32, i32 }
%struct.k_thread.60 = type { %struct._thread_base.53, %struct._callee_saved.10, i8*, %union.anon.49, i32, %struct.k_heap.58*, %struct._thread_arch.15 }
%struct._thread_base.53 = type { %union.anon.49, %union.anon.49*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.52 }
%struct._timeout.52 = type { %struct._dnode.48, void (%struct._timeout.52*)*, i64 }
%struct._dnode.48 = type { %union.anon.0.46, %union.anon.0.46 }
%union.anon.0.46 = type { %struct._dnode.48* }
%union.anon.49 = type { %struct._dnode.48 }
%struct.k_heap.58 = type { %struct.sys_heap.56, %union.anon.49, %struct.k_spinlock.13 }
%struct.sys_heap.56 = type { %struct.z_heap.55*, i8*, i32 }
%struct.z_heap.55 = type opaque
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.68, %union.anon.68 }
%struct.PortGroup = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], [16 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type], [32 x i8] }
%struct.soc_port_pin = type { %struct.PortGroup*, i32, i32 }
%struct.Nvmctrl = type { %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type }
%struct.Sysctrl = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type }
%struct.Gclk = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type }
%struct.Pm = type { %struct.z_thread_stack_element, %union.PORT_PMUX_Type, [6 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [8 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [16 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, i32 }
%struct.NVIC_Type = type { [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [64 x i32], [8 x i32] }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32 }
%struct.Eic = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [2 x %union.PORT_DIR_Type] }
%struct.k_fifo = type { %struct.k_queue.345 }
%struct.k_queue.345 = type { %struct._sflist.344, %struct.k_spinlock.13, %struct._wait_q_t.330 }
%struct._sflist.344 = type { %union.anon.68*, %union.anon.68* }
%struct._wait_q_t.330 = type { %struct._dnode.328 }
%struct._dnode.328 = type { %union.anon.0.326, %union.anon.0.326 }
%union.anon.0.326 = type { %struct._dnode.328* }
%struct.SysTick_Type = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode.191], i32 }

@_irq_vector_table = dso_local global [28 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local global [28 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 35332 to i8*), void (i8*)* inttoptr (i32 17185 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 35356 to i8*), void (i8*)* inttoptr (i32 31785 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [10 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread to i8*), i8* bitcast (%struct.init_entry* @__init_atmel_samd_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_18 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_18 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@_k_thread_obj_thread = dso_local global %struct.k_thread.16 zeroinitializer, align 8, !dbg !25
@_k_thread_stack_thread = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !262
@.str.1 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@_k_thread_data_thread = dso_local global %struct._static_thread_data { %struct.k_thread.16* @_k_thread_obj_thread, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_thread, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* @thread_entry, i8* null, i8* null, i8* null, i32 7, i32 4, i32 0, void ()* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread", align 4, !dbg !105
@thread = dso_local constant %struct.k_thread.16* @_k_thread_obj_thread, align 4, !dbg !258
@.str.2 = private unnamed_addr constant [25 x i8] c"Hello from user thread!\0A\00", align 1
@_char_out = dso_local global i32 (i32)* @arch_printk_char_out, align 4, !dbg !267
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_atmel_samd_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @atmel_samd_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !276
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1044
@__device_dts_ord_18 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* null, i8* null, %struct.device_state.72* @__devstate_dts_ord_18, i8* bitcast (%struct.sam0_eic_data* @eic_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_18, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_18 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1612
@.str.20 = private unnamed_addr constant [13 x i8] c"eic@40001800\00", align 1
@__devstate_dts_ord_18 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !1594
@eic_data = internal global %struct.sam0_eic_data zeroinitializer, align 4, !dbg !1573
@__init___device_dts_ord_18 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sam0_eic_init, %struct.device.73* @__device_dts_ord_18 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1548
@sam0_eic_channels = internal constant [2 x [32 x i8]] [[32 x i8] c"\00\01\02\03\04\05\06\07\FF\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\0C\0D\FF\0F\08\FF\0A\0B", [32 x i8] c"\FF\FF\02\03\FF\FF\FF\FF\08\09\0A\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\06\07\FF\FF\FF\FF\FF\FF\FF\FF"], align 1, !dbg !1596
@sam0_eic_init.__isr_sam0_eic_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device.73*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_18 to i8*) }, section ".intList", align 4, !dbg !1603
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_console_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1621
@__devicehdl_dts_ord_23 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1617
@.str.25 = private unnamed_addr constant [16 x i8] c"sercom@42000800\00", align 1
@uart_sam0_config_0 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1107298304 to %struct.SercomUsart*), i32 115200, i32 3211264, i8 0, i32 4, i16 20, void (%struct.device.73*)* @uart_sam0_irq_config_0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_23 }, align 4, !dbg !1720
@uart_sam0_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device.73*, i8*)* @uart_sam0_poll_in, void (%struct.device.73*, i8)* @uart_sam0_poll_out, i32 (%struct.device.73*)* @uart_sam0_err_check, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_configure, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_config_get, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_fill, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_read, void (%struct.device.73*)* @uart_sam0_irq_tx_enable, void (%struct.device.73*)* @uart_sam0_irq_tx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_ready, void (%struct.device.73*)* @uart_sam0_irq_rx_enable, void (%struct.device.73*)* @uart_sam0_irq_rx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_complete, i32 (%struct.device.73*)* @uart_sam0_irq_rx_ready, void (%struct.device.73*)* null, void (%struct.device.73*)* null, i32 (%struct.device.73*)* @uart_sam0_irq_is_pending, i32 (%struct.device.73*)* @uart_sam0_irq_update, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* @uart_sam0_irq_callback_set }, align 4, !dbg !2269
@__devstate_dts_ord_23 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !2233
@uart_sam0_data_0 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !2226
@__device_dts_ord_23 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state.72* @__devstate_dts_ord_23, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2217
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_sam0_init, %struct.device.73* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2219
@__pinctrl_dev_config__device_dts_ord_23 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_23, i32 0, i32 0), i8 1 }, align 4, !dbg !2244
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device.73*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_23 to i8*) }, section ".intList", align 4, !dbg !2235
@__pinctrl_states__device_dts_ord_23 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_23, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2263
@__pinctrl_state_pins_0__device_dts_ord_23 = internal constant [2 x i32] [i32 581959680, i32 580911104], align 4, !dbg !2266
@overflow_cyc = internal global i32 0, align 4, !dbg !2465
@cycle_count = internal global i32 0, align 4, !dbg !2584
@announced_cycles = internal global i32 0, align 4, !dbg !2586
@last_load = internal global i32 0, align 4, !dbg !2582
@lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2579
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sys_clock_driver_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2553
@sam_port_addrs = internal constant [2 x i32] [i32 1090536448, i32 1090536576], align 4, !dbg !2588
@__device_start = external dso_local constant [0 x %struct.device.73], align 4
@__device_end = external dso_local constant [0 x %struct.device.73], align 4
@_k_neg_eagain = dso_local constant i32 -11, align 4, !dbg !2751
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2757
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2946
@z_main_thread = dso_local global %struct.k_thread.203 zeroinitializer, align 8, !dbg !2954
@z_idle_stacks = internal global [1 x [256 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2961
@z_sys_init_run_level.levels = internal global [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2966
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.50 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal global [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.52, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.53, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.54, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2984
@.str.51 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.52 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.53 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.54 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3090
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data.499], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data.499], align 4
@sched_spinlock = dso_local global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3095
@slice_ticks = internal global i32 0, align 4, !dbg !3206
@slice_max_prio = internal global i32 0, align 4, !dbg !3209
@pending_current = internal global %struct.k_thread.203* null, align 4, !dbg !3211
@z_sys_post_kernel = dso_local global i8 0, align 1, !dbg !2959
@z_idle_threads = dso_local global [1 x %struct.k_thread.203] zeroinitializer, align 8, !dbg !2956
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@timeout_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3213
@curr_tick = internal global i64 0, align 8, !dbg !3243
@timeout_list = internal global %struct._dnode.191 { %union.anon.0.189 { %struct._dnode.191* @timeout_list }, %union.anon.0.189 { %struct._dnode.191* @timeout_list } }, align 4, !dbg !3248
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2830
@announce_remaining = internal global i32 0, align 4, !dbg !3246
@.str.108 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @_OffsetAbsSyms() #1 !dbg !3564 {
  call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #9, !dbg !3566, !srcloc !3567
  call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #9, !dbg !3568, !srcloc !3569
  call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #9, !dbg !3570, !srcloc !3571
  call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #9, !dbg !3572, !srcloc !3573
  call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3574, !srcloc !3575
  call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #9, !dbg !3576, !srcloc !3577
  call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #9, !dbg !3578, !srcloc !3579
  call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #9, !dbg !3580, !srcloc !3581
  call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #9, !dbg !3582, !srcloc !3583
  call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #9, !dbg !3584, !srcloc !3585
  call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #9, !dbg !3586, !srcloc !3587
  call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #9, !dbg !3588, !srcloc !3589
  call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #9, !dbg !3590, !srcloc !3591
  call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #9, !dbg !3592, !srcloc !3593
  call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #9, !dbg !3594, !srcloc !3595
  call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #9, !dbg !3596, !srcloc !3597
  call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #9, !dbg !3598, !srcloc !3599
  call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #9, !dbg !3600, !srcloc !3601
  call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3602, !srcloc !3603
  call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #9, !dbg !3604, !srcloc !3605
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3606, !srcloc !3607
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #9, !dbg !3608, !srcloc !3609
  call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #9, !dbg !3610, !srcloc !3611
  call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #9, !dbg !3612, !srcloc !3613
  call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #9, !dbg !3614, !srcloc !3617
  call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #9, !dbg !3618, !srcloc !3619
  call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3620, !srcloc !3621
  call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3622, !srcloc !3623
  call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3624, !srcloc !3625
  call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3626, !srcloc !3627
  call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #9, !dbg !3628, !srcloc !3629
  call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #9, !dbg !3630, !srcloc !3631
  call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #9, !dbg !3632, !srcloc !3633
  call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #9, !dbg !3634, !srcloc !3635
  call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3636, !srcloc !3637
  call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3638, !srcloc !3639
  call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3640, !srcloc !3641
  call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3642, !srcloc !3643
  call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3644, !srcloc !3645
  call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3646, !srcloc !3647
  call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #9, !dbg !3648, !srcloc !3649
  call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #9, !dbg !3650, !srcloc !3651
  call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #9, !dbg !3652, !srcloc !3653
  call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #9, !dbg !3654, !srcloc !3655
  call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #9, !dbg !3656, !srcloc !3657
  call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #9, !dbg !3658, !srcloc !3659
  call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3660, !srcloc !3661
  ret void, !dbg !3662
}

; Function Attrs: noinline nounwind optnone
define internal void @thread_entry(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !3665 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3666, metadata !DIExpression()), !dbg !3667
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3668, metadata !DIExpression()), !dbg !3669
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3670, metadata !DIExpression()), !dbg !3671
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)) #10, !dbg !3672
  ret void, !dbg !3673
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #1 !dbg !3674 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3675, metadata !DIExpression()), !dbg !3676
  %2 = call i32 @test() #10, !dbg !3677
  store i32 %2, i32* %1, align 4, !dbg !3678
  %3 = load i32, i32* %1, align 4, !dbg !3679
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 noundef %3) #10, !dbg !3680
  ret void, !dbg !3681
}

; Function Attrs: noinline nounwind optnone
define internal i32 @test() #1 !dbg !3682 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3685, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i32 10, i32* %1, align 4, !dbg !3689
  %3 = load i32, i32* %1, align 4, !dbg !3690
  %4 = mul nsw i32 %3, 2, !dbg !3691
  store i32 %4, i32* %2, align 4, !dbg !3692
  %5 = load i32, i32* %1, align 4, !dbg !3693
  %6 = load i32, i32* %2, align 4, !dbg !3694
  %7 = add nsw i32 %5, %6, !dbg !3695
  ret i32 %7, !dbg !3696
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3697 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3698, metadata !DIExpression()), !dbg !3699
  %3 = load i32, i32* %2, align 4, !dbg !3700
  ret i32 0, !dbg !3701
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) #1 !dbg !3702 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !3705, metadata !DIExpression()), !dbg !3706
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !3707
  store i32 (i32)* %3, i32 (i32)** @_char_out, align 4, !dbg !3708
  ret void, !dbg !3709
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @__printk_get_hook() #1 !dbg !3710 {
  %1 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3713
  %2 = bitcast i32 (i32)* %1 to i8*, !dbg !3713
  ret i8* %2, !dbg !3714
}

; Function Attrs: noinline nounwind optnone
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) #1 !dbg !3715 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context, align 4
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  %7 = bitcast i8** %6 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %7, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3727, metadata !DIExpression()), !dbg !3728
  %8 = call zeroext i1 @k_is_user_context() #10, !dbg !3729
  br i1 %8, label %9, label %22, !dbg !3731

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.buf_out_context* %5, metadata !3732, metadata !DIExpression()), !dbg !3741
  %10 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3741
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !3741
  %11 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3742
  %12 = load i8*, i8** %4, align 4, !dbg !3743
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3744
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3744
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3744
  %16 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @buf_char_out to i32 (...)*), i8* noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3744
  %17 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %5, i32 0, i32 0, !dbg !3745
  %18 = load i32, i32* %17, align 4, !dbg !3745
  %19 = icmp ne i32 %18, 0, !dbg !3747
  br i1 %19, label %20, label %21, !dbg !3748

20:                                               ; preds = %9
  call void @buf_flush(%struct.buf_out_context* noundef %5) #10, !dbg !3749
  br label %21, !dbg !3751

21:                                               ; preds = %20, %9
  br label %28, !dbg !3752

22:                                               ; preds = %2
  %23 = load i8*, i8** %4, align 4, !dbg !3753
  %24 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3755
  %25 = bitcast i8** %24 to [1 x i32]*, !dbg !3755
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !3755
  %27 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %23, [1 x i32] %26) #10, !dbg !3755
  br label %28

28:                                               ; preds = %22, %21
  ret void, !dbg !3756
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_user_context() #1 !dbg !3757 {
  ret i1 false, !dbg !3761
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #3

; Function Attrs: noinline nounwind optnone
define internal i32 @buf_char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3762 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3765, metadata !DIExpression()), !dbg !3766
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3767, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %5, metadata !3769, metadata !DIExpression()), !dbg !3771
  %6 = load i8*, i8** %4, align 4, !dbg !3772
  %7 = bitcast i8* %6 to %struct.buf_out_context*, !dbg !3772
  store %struct.buf_out_context* %7, %struct.buf_out_context** %5, align 4, !dbg !3771
  %8 = load i32, i32* %3, align 4, !dbg !3773
  %9 = trunc i32 %8 to i8, !dbg !3773
  %10 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3774
  %11 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %10, i32 0, i32 1, !dbg !3775
  %12 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3776
  %13 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %12, i32 0, i32 0, !dbg !3777
  %14 = load i32, i32* %13, align 4, !dbg !3778
  %15 = add i32 %14, 1, !dbg !3778
  store i32 %15, i32* %13, align 4, !dbg !3778
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i32 0, i32 %14, !dbg !3774
  store i8 %9, i8* %16, align 1, !dbg !3779
  %17 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3780
  %18 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %17, i32 0, i32 0, !dbg !3782
  %19 = load i32, i32* %18, align 4, !dbg !3782
  %20 = icmp eq i32 %19, 0, !dbg !3783
  br i1 %20, label %21, label %23, !dbg !3784

21:                                               ; preds = %2
  %22 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3785
  call void @buf_flush(%struct.buf_out_context* noundef %22) #10, !dbg !3787
  br label %23, !dbg !3788

23:                                               ; preds = %21, %2
  %24 = load i32, i32* %3, align 4, !dbg !3789
  ret i32 %24, !dbg !3790
}

; Function Attrs: noinline nounwind optnone
define internal i32 @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3791 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %10 = bitcast i8** %9 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %10, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !3799, metadata !DIExpression()), !dbg !3800
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3801, metadata !DIExpression()), !dbg !3802
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3803, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3805, metadata !DIExpression()), !dbg !3806
  %11 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !3807
  %12 = load i8*, i8** %7, align 4, !dbg !3808
  %13 = load i8*, i8** %8, align 4, !dbg !3809
  %14 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3810
  %15 = bitcast i8** %14 to [1 x i32]*, !dbg !3810
  %16 = load [1 x i32], [1 x i32]* %15, align 4, !dbg !3810
  %17 = call i32 @z_cbvprintf_impl(i32 (...)* noundef %11, i8* noundef %12, i8* noundef %13, [1 x i32] %16, i32 noundef 0) #10, !dbg !3810
  ret i32 %17, !dbg !3811
}

; Function Attrs: noinline nounwind optnone
define internal void @buf_flush(%struct.buf_out_context* noundef %0) #1 !dbg !3812 {
  %2 = alloca %struct.buf_out_context*, align 4
  store %struct.buf_out_context* %0, %struct.buf_out_context** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %2, metadata !3815, metadata !DIExpression()), !dbg !3816
  %3 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3817
  %4 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %3, i32 0, i32 1, !dbg !3818
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %4, i32 0, i32 0, !dbg !3817
  %6 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3819
  %7 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %6, i32 0, i32 0, !dbg !3820
  %8 = load i32, i32* %7, align 4, !dbg !3820
  call void @k_str_out(i8* noundef %5, i32 noundef %8) #10, !dbg !3821
  %9 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3822
  %10 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %9, i32 0, i32 0, !dbg !3823
  store i32 0, i32* %10, align 4, !dbg !3824
  ret void, !dbg !3825
}

; Function Attrs: noinline nounwind optnone
define internal i32 @char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3826 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3827, metadata !DIExpression()), !dbg !3828
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3829, metadata !DIExpression()), !dbg !3830
  %5 = load i8*, i8** %4, align 4, !dbg !3831
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3832
  %7 = load i32, i32* %3, align 4, !dbg !3833
  %8 = call i32 %6(i32 noundef %7) #10, !dbg !3832
  ret i32 %8, !dbg !3834
}

; Function Attrs: noinline nounwind optnone
define internal void @k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3835 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3839, metadata !DIExpression()), !dbg !3840
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3841, metadata !DIExpression()), !dbg !3842
  br label %5, !dbg !3843

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3844, !srcloc !3846
  br label %6, !dbg !3844

6:                                                ; preds = %5
  %7 = load i8*, i8** %3, align 4, !dbg !3847
  %8 = load i32, i32* %4, align 4, !dbg !3848
  call void @z_impl_k_str_out(i8* noundef %7, i32 noundef %8) #10, !dbg !3849
  ret void, !dbg !3850
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3851 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3852, metadata !DIExpression()), !dbg !3853
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3854, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3856, metadata !DIExpression()), !dbg !3857
  store i32 0, i32* %5, align 4, !dbg !3858
  br label %6, !dbg !3860

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %5, align 4, !dbg !3861
  %8 = load i32, i32* %4, align 4, !dbg !3863
  %9 = icmp ult i32 %7, %8, !dbg !3864
  br i1 %9, label %10, label %21, !dbg !3865

10:                                               ; preds = %6
  %11 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3866
  %12 = load i8*, i8** %3, align 4, !dbg !3868
  %13 = load i32, i32* %5, align 4, !dbg !3869
  %14 = getelementptr inbounds i8, i8* %12, i32 %13, !dbg !3868
  %15 = load i8, i8* %14, align 1, !dbg !3868
  %16 = zext i8 %15 to i32, !dbg !3868
  %17 = call i32 %11(i32 noundef %16) #10, !dbg !3866
  br label %18, !dbg !3870

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4, !dbg !3871
  %20 = add i32 %19, 1, !dbg !3871
  store i32 %20, i32* %5, align 4, !dbg !3871
  br label %6, !dbg !3872, !llvm.loop !3873

21:                                               ; preds = %6
  ret void, !dbg !3875
}

; Function Attrs: noinline nounwind optnone
define dso_local void @printk(i8* noundef %0, ...) #1 !dbg !3876 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.__va_list, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3879, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3881, metadata !DIExpression()), !dbg !3882
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3883
  call void @llvm.va_start(i8* %4), !dbg !3883
  %5 = load i8*, i8** %2, align 4, !dbg !3884
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3885
  %7 = bitcast i8** %6 to [1 x i32]*, !dbg !3885
  %8 = load [1 x i32], [1 x i32]* %7, align 4, !dbg !3885
  call void @vprintk(i8* noundef %5, [1 x i32] %8) #10, !dbg !3885
  %9 = bitcast %struct.__va_list* %3 to i8*, !dbg !3886
  call void @llvm.va_end(i8* %9), !dbg !3886
  ret void, !dbg !3887
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) #1 !dbg !3888 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3891, metadata !DIExpression()), !dbg !3892
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3893, metadata !DIExpression()), !dbg !3894
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3895, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3899, metadata !DIExpression()), !dbg !3900
  %9 = bitcast %struct.__va_list* %7 to i8*, !dbg !3901
  call void @llvm.va_start(i8* %9), !dbg !3901
  %10 = load i8*, i8** %4, align 4, !dbg !3902
  %11 = load i32, i32* %5, align 4, !dbg !3903
  %12 = load i8*, i8** %6, align 4, !dbg !3904
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0, !dbg !3905
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3905
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3905
  %16 = call i32 @vsnprintk(i8* noundef %10, i32 noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3905
  store i32 %16, i32* %8, align 4, !dbg !3906
  %17 = bitcast %struct.__va_list* %7 to i8*, !dbg !3907
  call void @llvm.va_end(i8* %17), !dbg !3907
  %18 = load i32, i32* %8, align 4, !dbg !3908
  ret i32 %18, !dbg !3909
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3910 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca %struct.str_context, align 4
  %10 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %11 = bitcast i8** %10 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %11, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3913, metadata !DIExpression()), !dbg !3914
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3915, metadata !DIExpression()), !dbg !3916
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.str_context* %9, metadata !3921, metadata !DIExpression()), !dbg !3927
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 0, !dbg !3928
  %13 = load i8*, i8** %6, align 4, !dbg !3929
  store i8* %13, i8** %12, align 4, !dbg !3928
  %14 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3928
  %15 = load i32, i32* %7, align 4, !dbg !3930
  store i32 %15, i32* %14, align 4, !dbg !3928
  %16 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3928
  store i32 0, i32* %16, align 4, !dbg !3928
  %17 = bitcast %struct.str_context* %9 to i8*, !dbg !3931
  %18 = load i8*, i8** %8, align 4, !dbg !3932
  %19 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3933
  %20 = bitcast i8** %19 to [1 x i32]*, !dbg !3933
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !3933
  %22 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef %17, i8* noundef %18, [1 x i32] %21) #10, !dbg !3933
  %23 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3934
  %24 = load i32, i32* %23, align 4, !dbg !3934
  %25 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3936
  %26 = load i32, i32* %25, align 4, !dbg !3936
  %27 = icmp slt i32 %24, %26, !dbg !3937
  br i1 %27, label %28, label %33, !dbg !3938

28:                                               ; preds = %4
  %29 = load i8*, i8** %6, align 4, !dbg !3939
  %30 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3941
  %31 = load i32, i32* %30, align 4, !dbg !3941
  %32 = getelementptr inbounds i8, i8* %29, i32 %31, !dbg !3939
  store i8 0, i8* %32, align 1, !dbg !3942
  br label %33, !dbg !3943

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3944
  %35 = load i32, i32* %34, align 4, !dbg !3944
  ret i32 %35, !dbg !3945
}

; Function Attrs: noinline nounwind optnone
define internal i32 @str_out(i32 noundef %0, %struct.str_context* noundef %1) #1 !dbg !3946 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_context*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3950, metadata !DIExpression()), !dbg !3951
  store %struct.str_context* %1, %struct.str_context** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.str_context** %5, metadata !3952, metadata !DIExpression()), !dbg !3953
  %6 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3954
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %6, i32 0, i32 0, !dbg !3956
  %8 = load i8*, i8** %7, align 4, !dbg !3956
  %9 = icmp eq i8* %8, null, !dbg !3957
  br i1 %9, label %18, label %10, !dbg !3958

10:                                               ; preds = %2
  %11 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3959
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %11, i32 0, i32 2, !dbg !3960
  %13 = load i32, i32* %12, align 4, !dbg !3960
  %14 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3961
  %15 = getelementptr inbounds %struct.str_context, %struct.str_context* %14, i32 0, i32 1, !dbg !3962
  %16 = load i32, i32* %15, align 4, !dbg !3962
  %17 = icmp sge i32 %13, %16, !dbg !3963
  br i1 %17, label %18, label %24, !dbg !3964

18:                                               ; preds = %10, %2
  %19 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3965
  %20 = getelementptr inbounds %struct.str_context, %struct.str_context* %19, i32 0, i32 2, !dbg !3967
  %21 = load i32, i32* %20, align 4, !dbg !3968
  %22 = add nsw i32 %21, 1, !dbg !3968
  store i32 %22, i32* %20, align 4, !dbg !3968
  %23 = load i32, i32* %4, align 4, !dbg !3969
  store i32 %23, i32* %3, align 4, !dbg !3970
  br label %55, !dbg !3970

24:                                               ; preds = %10
  %25 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3971
  %26 = getelementptr inbounds %struct.str_context, %struct.str_context* %25, i32 0, i32 2, !dbg !3973
  %27 = load i32, i32* %26, align 4, !dbg !3973
  %28 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3974
  %29 = getelementptr inbounds %struct.str_context, %struct.str_context* %28, i32 0, i32 1, !dbg !3975
  %30 = load i32, i32* %29, align 4, !dbg !3975
  %31 = sub nsw i32 %30, 1, !dbg !3976
  %32 = icmp eq i32 %27, %31, !dbg !3977
  br i1 %32, label %33, label %42, !dbg !3978

33:                                               ; preds = %24
  %34 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3979
  %35 = getelementptr inbounds %struct.str_context, %struct.str_context* %34, i32 0, i32 0, !dbg !3981
  %36 = load i8*, i8** %35, align 4, !dbg !3981
  %37 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3982
  %38 = getelementptr inbounds %struct.str_context, %struct.str_context* %37, i32 0, i32 2, !dbg !3983
  %39 = load i32, i32* %38, align 4, !dbg !3984
  %40 = add nsw i32 %39, 1, !dbg !3984
  store i32 %40, i32* %38, align 4, !dbg !3984
  %41 = getelementptr inbounds i8, i8* %36, i32 %39, !dbg !3979
  store i8 0, i8* %41, align 1, !dbg !3985
  br label %53, !dbg !3986

42:                                               ; preds = %24
  %43 = load i32, i32* %4, align 4, !dbg !3987
  %44 = trunc i32 %43 to i8, !dbg !3987
  %45 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3989
  %46 = getelementptr inbounds %struct.str_context, %struct.str_context* %45, i32 0, i32 0, !dbg !3990
  %47 = load i8*, i8** %46, align 4, !dbg !3990
  %48 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3991
  %49 = getelementptr inbounds %struct.str_context, %struct.str_context* %48, i32 0, i32 2, !dbg !3992
  %50 = load i32, i32* %49, align 4, !dbg !3993
  %51 = add nsw i32 %50, 1, !dbg !3993
  store i32 %51, i32* %49, align 4, !dbg !3993
  %52 = getelementptr inbounds i8, i8* %47, i32 %50, !dbg !3989
  store i8 %44, i8* %52, align 1, !dbg !3994
  br label %53

53:                                               ; preds = %42, %33
  %54 = load i32, i32* %4, align 4, !dbg !3995
  store i32 %54, i32* %3, align 4, !dbg !3996
  br label %55, !dbg !3996

55:                                               ; preds = %53, %18
  %56 = load i32, i32* %3, align 4, !dbg !3997
  ret i32 %56, !dbg !3997
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3998 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !4002, metadata !DIExpression()), !dbg !4003
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4004, metadata !DIExpression()), !dbg !4005
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4006, metadata !DIExpression()), !dbg !4007
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4008, metadata !DIExpression()), !dbg !4009
  %9 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !4010
  %10 = load i8*, i8** %6, align 4, !dbg !4011
  %11 = load i8*, i8** %7, align 4, !dbg !4012
  %12 = load i8*, i8** %8, align 4, !dbg !4013
  call void %9(i8* noundef %10, i8* noundef %11, i8* noundef %12) #10, !dbg !4010
  %13 = call %struct.k_thread.60* @k_current_get() #11, !dbg !4014
  call void @k_thread_abort(%struct.k_thread.60* noundef %13) #10, !dbg !4015
  unreachable, !dbg !4016
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get() #6 !dbg !4017 {
  %1 = call %struct.k_thread.60* @z_current_get() #11, !dbg !4115
  ret %struct.k_thread.60* %1, !dbg !4116
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.60* noundef %0) #1 !dbg !4117 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !4120, metadata !DIExpression()), !dbg !4121
  br label %3, !dbg !4122

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4123, !srcloc !4125
  br label %4, !dbg !4123

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !4126
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !4127
  ret void, !dbg !4128
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get() #6 !dbg !4129 {
  br label %1, !dbg !4130

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4131, !srcloc !4133
  br label %2, !dbg !4131

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !4134
  ret %struct.k_thread.60* %3, !dbg !4135
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) #1 !dbg !4136 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32 (...)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca [22 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.anon, align 8
  %18 = alloca %struct.conversion*, align 4
  %19 = alloca %union.argument_value*, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8, align 1
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0
  %45 = bitcast i8** %44 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %45, align 4
  store i32 (...)* %0, i32 (...)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %8, metadata !4145, metadata !DIExpression()), !dbg !4146
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4147, metadata !DIExpression()), !dbg !4148
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4149, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !4151, metadata !DIExpression()), !dbg !4152
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4153, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !4155, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4160, metadata !DIExpression()), !dbg !4161
  store i32 0, i32* %13, align 4, !dbg !4161
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4162, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.declare(metadata i8* %15, metadata !4164, metadata !DIExpression()), !dbg !4166
  %46 = load i32, i32* %11, align 4, !dbg !4167
  %47 = and i32 %46, 1, !dbg !4168
  %48 = icmp eq i32 %47, 1, !dbg !4169
  %49 = zext i1 %48 to i8, !dbg !4166
  store i8 %49, i8* %15, align 1, !dbg !4166
  br label %50, !dbg !4170

50:                                               ; preds = %833, %581, %432, %77, %5
  %51 = load i8*, i8** %10, align 4, !dbg !4171
  %52 = load i8, i8* %51, align 1, !dbg !4172
  %53 = zext i8 %52 to i32, !dbg !4172
  %54 = icmp ne i32 %53, 0, !dbg !4173
  br i1 %54, label %55, label %834, !dbg !4170

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 4, !dbg !4174
  %57 = load i8, i8* %56, align 1, !dbg !4177
  %58 = zext i8 %57 to i32, !dbg !4177
  %59 = icmp ne i32 %58, 37, !dbg !4178
  br i1 %59, label %60, label %78, !dbg !4179

60:                                               ; preds = %55
  br label %61, !dbg !4180

61:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4182, metadata !DIExpression()), !dbg !4184
  %62 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4184
  %63 = load i8*, i8** %10, align 4, !dbg !4184
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !4184
  store i8* %64, i8** %10, align 4, !dbg !4184
  %65 = load i8, i8* %63, align 1, !dbg !4184
  %66 = zext i8 %65 to i32, !dbg !4184
  %67 = load i8*, i8** %9, align 4, !dbg !4184
  %68 = bitcast i32 (...)* %62 to i32 (i32, i8*)*, !dbg !4184
  %69 = call i32 %68(i32 noundef %66, i8* noundef %67) #10, !dbg !4184
  store i32 %69, i32* %16, align 4, !dbg !4184
  %70 = load i32, i32* %16, align 4, !dbg !4185
  %71 = icmp slt i32 %70, 0, !dbg !4185
  br i1 %71, label %72, label %74, !dbg !4184

72:                                               ; preds = %61
  %73 = load i32, i32* %16, align 4, !dbg !4187
  store i32 %73, i32* %6, align 4, !dbg !4187
  br label %836, !dbg !4187

74:                                               ; preds = %61
  %75 = load i32, i32* %13, align 4, !dbg !4184
  %76 = add i32 %75, 1, !dbg !4184
  store i32 %76, i32* %13, align 4, !dbg !4184
  br label %77, !dbg !4184

77:                                               ; preds = %74
  br label %50, !dbg !4189, !llvm.loop !4190

78:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata %struct.anon* %17, metadata !4192, metadata !DIExpression()), !dbg !4237
  %79 = bitcast %struct.anon* %17 to i8*, !dbg !4237
  call void @llvm.memset.p0i8.i32(i8* align 8 %79, i8 0, i32 24, i1 false), !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.conversion** %18, metadata !4238, metadata !DIExpression()), !dbg !4241
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1, !dbg !4242
  store %struct.conversion* %80, %struct.conversion** %18, align 4, !dbg !4241
  call void @llvm.dbg.declare(metadata %union.argument_value** %19, metadata !4243, metadata !DIExpression()), !dbg !4246
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0, !dbg !4247
  store %union.argument_value* %81, %union.argument_value** %19, align 4, !dbg !4246
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4248, metadata !DIExpression()), !dbg !4249
  %82 = load i8*, i8** %10, align 4, !dbg !4250
  store i8* %82, i8** %20, align 4, !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4251, metadata !DIExpression()), !dbg !4252
  store i32 -1, i32* %21, align 4, !dbg !4252
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i32 -1, i32* %22, align 4, !dbg !4254
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4255, metadata !DIExpression()), !dbg !4256
  store i8* null, i8** %23, align 4, !dbg !4256
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4257, metadata !DIExpression()), !dbg !4258
  %83 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4259
  %84 = getelementptr inbounds i8, i8* %83, i32 22, !dbg !4260
  store i8* %84, i8** %24, align 4, !dbg !4258
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4261, metadata !DIExpression()), !dbg !4262
  store i8 0, i8* %25, align 1, !dbg !4262
  %85 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4263
  %86 = load i8*, i8** %20, align 4, !dbg !4264
  %87 = call i8* @extract_conversion(%struct.conversion* noundef %85, i8* noundef %86) #10, !dbg !4265
  store i8* %87, i8** %10, align 4, !dbg !4266
  %88 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4267
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !4269
  %90 = load i24, i24* %89, align 4, !dbg !4269
  %91 = lshr i24 %90, 8, !dbg !4269
  %92 = and i24 %91, 1, !dbg !4269
  %93 = trunc i24 %92 to i1, !dbg !4269
  br i1 %93, label %94, label %111, !dbg !4270

94:                                               ; preds = %78
  %95 = bitcast %struct.__va_list* %7 to i8**, !dbg !4271
  %96 = load i8*, i8** %95, align 4, !dbg !4271
  %97 = getelementptr inbounds i8, i8* %96, i32 4, !dbg !4271
  store i8* %97, i8** %95, align 4, !dbg !4271
  %98 = bitcast i8* %96 to i32*, !dbg !4271
  %99 = load i32, i32* %98, align 4, !dbg !4271
  store i32 %99, i32* %21, align 4, !dbg !4273
  %100 = load i32, i32* %21, align 4, !dbg !4274
  %101 = icmp slt i32 %100, 0, !dbg !4276
  br i1 %101, label %102, label %110, !dbg !4277

102:                                              ; preds = %94
  %103 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4278
  %104 = bitcast %struct.conversion* %103 to i24*, !dbg !4280
  %105 = load i24, i24* %104, align 4, !dbg !4281
  %106 = and i24 %105, -5, !dbg !4281
  %107 = or i24 %106, 4, !dbg !4281
  store i24 %107, i24* %104, align 4, !dbg !4281
  %108 = load i32, i32* %21, align 4, !dbg !4282
  %109 = sub nsw i32 0, %108, !dbg !4283
  store i32 %109, i32* %21, align 4, !dbg !4284
  br label %110, !dbg !4285

110:                                              ; preds = %102, %94
  br label %125, !dbg !4286

111:                                              ; preds = %78
  %112 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4287
  %113 = bitcast %struct.conversion* %112 to i24*, !dbg !4289
  %114 = load i24, i24* %113, align 4, !dbg !4289
  %115 = lshr i24 %114, 7, !dbg !4289
  %116 = and i24 %115, 1, !dbg !4289
  %117 = trunc i24 %116 to i1, !dbg !4289
  br i1 %117, label %118, label %123, !dbg !4290

118:                                              ; preds = %111
  %119 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4291
  %120 = getelementptr inbounds %struct.conversion, %struct.conversion* %119, i32 0, i32 2, !dbg !4293
  %121 = bitcast %union.anon.68* %120 to i32*, !dbg !4293
  %122 = load i32, i32* %121, align 4, !dbg !4293
  store i32 %122, i32* %21, align 4, !dbg !4294
  br label %124, !dbg !4295

123:                                              ; preds = %111
  br label %124

124:                                              ; preds = %123, %118
  br label %125

125:                                              ; preds = %124, %110
  %126 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4296
  %127 = bitcast %struct.conversion* %126 to i24*, !dbg !4298
  %128 = load i24, i24* %127, align 4, !dbg !4298
  %129 = lshr i24 %128, 10, !dbg !4298
  %130 = and i24 %129, 1, !dbg !4298
  %131 = trunc i24 %130 to i1, !dbg !4298
  br i1 %131, label %132, label %149, !dbg !4299

132:                                              ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4300, metadata !DIExpression()), !dbg !4302
  %133 = bitcast %struct.__va_list* %7 to i8**, !dbg !4303
  %134 = load i8*, i8** %133, align 4, !dbg !4303
  %135 = getelementptr inbounds i8, i8* %134, i32 4, !dbg !4303
  store i8* %135, i8** %133, align 4, !dbg !4303
  %136 = bitcast i8* %134 to i32*, !dbg !4303
  %137 = load i32, i32* %136, align 4, !dbg !4303
  store i32 %137, i32* %26, align 4, !dbg !4302
  %138 = load i32, i32* %26, align 4, !dbg !4304
  %139 = icmp slt i32 %138, 0, !dbg !4306
  br i1 %139, label %140, label %146, !dbg !4307

140:                                              ; preds = %132
  %141 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4308
  %142 = bitcast %struct.conversion* %141 to i24*, !dbg !4310
  %143 = load i24, i24* %142, align 4, !dbg !4311
  %144 = and i24 %143, -513, !dbg !4311
  %145 = or i24 %144, 0, !dbg !4311
  store i24 %145, i24* %142, align 4, !dbg !4311
  br label %148, !dbg !4312

146:                                              ; preds = %132
  %147 = load i32, i32* %26, align 4, !dbg !4313
  store i32 %147, i32* %22, align 4, !dbg !4315
  br label %148

148:                                              ; preds = %146, %140
  br label %163, !dbg !4316

149:                                              ; preds = %125
  %150 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4317
  %151 = bitcast %struct.conversion* %150 to i24*, !dbg !4319
  %152 = load i24, i24* %151, align 4, !dbg !4319
  %153 = lshr i24 %152, 9, !dbg !4319
  %154 = and i24 %153, 1, !dbg !4319
  %155 = trunc i24 %154 to i1, !dbg !4319
  br i1 %155, label %156, label %161, !dbg !4320

156:                                              ; preds = %149
  %157 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4321
  %158 = getelementptr inbounds %struct.conversion, %struct.conversion* %157, i32 0, i32 3, !dbg !4323
  %159 = bitcast %union.anon.68* %158 to i32*, !dbg !4323
  %160 = load i32, i32* %159, align 4, !dbg !4323
  store i32 %160, i32* %22, align 4, !dbg !4324
  br label %162, !dbg !4325

161:                                              ; preds = %149
  br label %162

162:                                              ; preds = %161, %156
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4326
  %165 = getelementptr inbounds %struct.conversion, %struct.conversion* %164, i32 0, i32 2, !dbg !4327
  %166 = bitcast %union.anon.68* %165 to i32*, !dbg !4327
  store i32 0, i32* %166, align 4, !dbg !4328
  %167 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4329
  %168 = getelementptr inbounds %struct.conversion, %struct.conversion* %167, i32 0, i32 3, !dbg !4330
  %169 = bitcast %union.anon.68* %168 to i32*, !dbg !4330
  store i32 0, i32* %169, align 4, !dbg !4331
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4332, metadata !DIExpression()), !dbg !4333
  %170 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4334
  %171 = bitcast %struct.conversion* %170 to i24*, !dbg !4335
  %172 = load i24, i24* %171, align 4, !dbg !4335
  %173 = lshr i24 %172, 16, !dbg !4335
  %174 = and i24 %173, 7, !dbg !4335
  %175 = zext i24 %174 to i32, !dbg !4335
  store i32 %175, i32* %27, align 4, !dbg !4333
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4336, metadata !DIExpression()), !dbg !4337
  %176 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4338
  %177 = bitcast %struct.conversion* %176 to i24*, !dbg !4339
  %178 = load i24, i24* %177, align 4, !dbg !4339
  %179 = lshr i24 %178, 11, !dbg !4339
  %180 = and i24 %179, 15, !dbg !4339
  %181 = zext i24 %180 to i32, !dbg !4339
  store i32 %181, i32* %28, align 4, !dbg !4337
  %182 = load i32, i32* %27, align 4, !dbg !4340
  %183 = icmp eq i32 %182, 1, !dbg !4342
  br i1 %183, label %184, label %262, !dbg !4343

184:                                              ; preds = %163
  %185 = load i32, i32* %28, align 4, !dbg !4344
  switch i32 %185, label %186 [
    i32 0, label %187
    i32 1, label %187
    i32 2, label %187
    i32 3, label %196
    i32 4, label %205
    i32 5, label %217
    i32 6, label %229
    i32 7, label %229
  ], !dbg !4346

186:                                              ; preds = %184
  br label %187, !dbg !4347

187:                                              ; preds = %184, %184, %184, %186
  %188 = bitcast %struct.__va_list* %7 to i8**, !dbg !4348
  %189 = load i8*, i8** %188, align 4, !dbg !4348
  %190 = getelementptr inbounds i8, i8* %189, i32 4, !dbg !4348
  store i8* %190, i8** %188, align 4, !dbg !4348
  %191 = bitcast i8* %189 to i32*, !dbg !4348
  %192 = load i32, i32* %191, align 4, !dbg !4348
  %193 = sext i32 %192 to i64, !dbg !4348
  %194 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4350
  %195 = bitcast %union.argument_value* %194 to i64*, !dbg !4351
  store i64 %193, i64* %195, align 8, !dbg !4352
  br label %238, !dbg !4353

196:                                              ; preds = %184
  %197 = bitcast %struct.__va_list* %7 to i8**, !dbg !4354
  %198 = load i8*, i8** %197, align 4, !dbg !4354
  %199 = getelementptr inbounds i8, i8* %198, i32 4, !dbg !4354
  store i8* %199, i8** %197, align 4, !dbg !4354
  %200 = bitcast i8* %198 to i32*, !dbg !4354
  %201 = load i32, i32* %200, align 4, !dbg !4354
  %202 = sext i32 %201 to i64, !dbg !4354
  %203 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4357
  %204 = bitcast %union.argument_value* %203 to i64*, !dbg !4358
  store i64 %202, i64* %204, align 8, !dbg !4359
  br label %238, !dbg !4360

205:                                              ; preds = %184
  %206 = bitcast %struct.__va_list* %7 to i8**, !dbg !4361
  %207 = load i8*, i8** %206, align 4, !dbg !4361
  %208 = ptrtoint i8* %207 to i32, !dbg !4361
  %209 = add i32 %208, 7, !dbg !4361
  %210 = and i32 %209, -8, !dbg !4361
  %211 = inttoptr i32 %210 to i8*, !dbg !4361
  %212 = getelementptr inbounds i8, i8* %211, i32 8, !dbg !4361
  store i8* %212, i8** %206, align 4, !dbg !4361
  %213 = bitcast i8* %211 to i64*, !dbg !4361
  %214 = load i64, i64* %213, align 8, !dbg !4361
  %215 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4362
  %216 = bitcast %union.argument_value* %215 to i64*, !dbg !4363
  store i64 %214, i64* %216, align 8, !dbg !4364
  br label %238, !dbg !4365

217:                                              ; preds = %184
  %218 = bitcast %struct.__va_list* %7 to i8**, !dbg !4366
  %219 = load i8*, i8** %218, align 4, !dbg !4366
  %220 = ptrtoint i8* %219 to i32, !dbg !4366
  %221 = add i32 %220, 7, !dbg !4366
  %222 = and i32 %221, -8, !dbg !4366
  %223 = inttoptr i32 %222 to i8*, !dbg !4366
  %224 = getelementptr inbounds i8, i8* %223, i32 8, !dbg !4366
  store i8* %224, i8** %218, align 4, !dbg !4366
  %225 = bitcast i8* %223 to i64*, !dbg !4366
  %226 = load i64, i64* %225, align 8, !dbg !4366
  %227 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4367
  %228 = bitcast %union.argument_value* %227 to i64*, !dbg !4368
  store i64 %226, i64* %228, align 8, !dbg !4369
  br label %238, !dbg !4370

229:                                              ; preds = %184, %184
  %230 = bitcast %struct.__va_list* %7 to i8**, !dbg !4371
  %231 = load i8*, i8** %230, align 4, !dbg !4371
  %232 = getelementptr inbounds i8, i8* %231, i32 4, !dbg !4371
  store i8* %232, i8** %230, align 4, !dbg !4371
  %233 = bitcast i8* %231 to i32*, !dbg !4371
  %234 = load i32, i32* %233, align 4, !dbg !4371
  %235 = sext i32 %234 to i64, !dbg !4372
  %236 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4373
  %237 = bitcast %union.argument_value* %236 to i64*, !dbg !4374
  store i64 %235, i64* %237, align 8, !dbg !4375
  br label %238, !dbg !4376

238:                                              ; preds = %229, %217, %205, %196, %187
  %239 = load i32, i32* %28, align 4, !dbg !4377
  %240 = icmp eq i32 %239, 1, !dbg !4379
  br i1 %240, label %241, label %249, !dbg !4380

241:                                              ; preds = %238
  %242 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4381
  %243 = bitcast %union.argument_value* %242 to i64*, !dbg !4383
  %244 = load i64, i64* %243, align 8, !dbg !4383
  %245 = trunc i64 %244 to i8, !dbg !4384
  %246 = sext i8 %245 to i64, !dbg !4384
  %247 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4385
  %248 = bitcast %union.argument_value* %247 to i64*, !dbg !4386
  store i64 %246, i64* %248, align 8, !dbg !4387
  br label %261, !dbg !4388

249:                                              ; preds = %238
  %250 = load i32, i32* %28, align 4, !dbg !4389
  %251 = icmp eq i32 %250, 2, !dbg !4391
  br i1 %251, label %252, label %260, !dbg !4392

252:                                              ; preds = %249
  %253 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4393
  %254 = bitcast %union.argument_value* %253 to i64*, !dbg !4395
  %255 = load i64, i64* %254, align 8, !dbg !4395
  %256 = trunc i64 %255 to i16, !dbg !4396
  %257 = sext i16 %256 to i64, !dbg !4396
  %258 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4397
  %259 = bitcast %union.argument_value* %258 to i64*, !dbg !4398
  store i64 %257, i64* %259, align 8, !dbg !4399
  br label %260, !dbg !4400

260:                                              ; preds = %252, %249
  br label %261

261:                                              ; preds = %260, %241
  br label %404, !dbg !4401

262:                                              ; preds = %163
  %263 = load i32, i32* %27, align 4, !dbg !4402
  %264 = icmp eq i32 %263, 2, !dbg !4404
  br i1 %264, label %265, label %359, !dbg !4405

265:                                              ; preds = %262
  %266 = load i32, i32* %28, align 4, !dbg !4406
  switch i32 %266, label %267 [
    i32 0, label %268
    i32 1, label %268
    i32 2, label %268
    i32 3, label %277
    i32 4, label %302
    i32 5, label %314
    i32 6, label %326
    i32 7, label %326
  ], !dbg !4408

267:                                              ; preds = %265
  br label %268, !dbg !4409

268:                                              ; preds = %265, %265, %265, %267
  %269 = bitcast %struct.__va_list* %7 to i8**, !dbg !4410
  %270 = load i8*, i8** %269, align 4, !dbg !4410
  %271 = getelementptr inbounds i8, i8* %270, i32 4, !dbg !4410
  store i8* %271, i8** %269, align 4, !dbg !4410
  %272 = bitcast i8* %270 to i32*, !dbg !4410
  %273 = load i32, i32* %272, align 4, !dbg !4410
  %274 = zext i32 %273 to i64, !dbg !4410
  %275 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4412
  %276 = bitcast %union.argument_value* %275 to i64*, !dbg !4413
  store i64 %274, i64* %276, align 8, !dbg !4414
  br label %335, !dbg !4415

277:                                              ; preds = %265
  %278 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4416
  %279 = getelementptr inbounds %struct.conversion, %struct.conversion* %278, i32 0, i32 1, !dbg !4418
  %280 = load i8, i8* %279, align 1, !dbg !4418
  %281 = zext i8 %280 to i32, !dbg !4416
  %282 = icmp eq i32 %281, 99, !dbg !4419
  br i1 %282, label %283, label %292, !dbg !4420

283:                                              ; preds = %277
  %284 = bitcast %struct.__va_list* %7 to i8**, !dbg !4421
  %285 = load i8*, i8** %284, align 4, !dbg !4421
  %286 = getelementptr inbounds i8, i8* %285, i32 4, !dbg !4421
  store i8* %286, i8** %284, align 4, !dbg !4421
  %287 = bitcast i8* %285 to i32*, !dbg !4421
  %288 = load i32, i32* %287, align 4, !dbg !4421
  %289 = zext i32 %288 to i64, !dbg !4423
  %290 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4424
  %291 = bitcast %union.argument_value* %290 to i64*, !dbg !4425
  store i64 %289, i64* %291, align 8, !dbg !4426
  br label %301, !dbg !4427

292:                                              ; preds = %277
  %293 = bitcast %struct.__va_list* %7 to i8**, !dbg !4428
  %294 = load i8*, i8** %293, align 4, !dbg !4428
  %295 = getelementptr inbounds i8, i8* %294, i32 4, !dbg !4428
  store i8* %295, i8** %293, align 4, !dbg !4428
  %296 = bitcast i8* %294 to i32*, !dbg !4428
  %297 = load i32, i32* %296, align 4, !dbg !4428
  %298 = zext i32 %297 to i64, !dbg !4428
  %299 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4430
  %300 = bitcast %union.argument_value* %299 to i64*, !dbg !4431
  store i64 %298, i64* %300, align 8, !dbg !4432
  br label %301

301:                                              ; preds = %292, %283
  br label %335, !dbg !4433

302:                                              ; preds = %265
  %303 = bitcast %struct.__va_list* %7 to i8**, !dbg !4434
  %304 = load i8*, i8** %303, align 4, !dbg !4434
  %305 = ptrtoint i8* %304 to i32, !dbg !4434
  %306 = add i32 %305, 7, !dbg !4434
  %307 = and i32 %306, -8, !dbg !4434
  %308 = inttoptr i32 %307 to i8*, !dbg !4434
  %309 = getelementptr inbounds i8, i8* %308, i32 8, !dbg !4434
  store i8* %309, i8** %303, align 4, !dbg !4434
  %310 = bitcast i8* %308 to i64*, !dbg !4434
  %311 = load i64, i64* %310, align 8, !dbg !4434
  %312 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4435
  %313 = bitcast %union.argument_value* %312 to i64*, !dbg !4436
  store i64 %311, i64* %313, align 8, !dbg !4437
  br label %335, !dbg !4438

314:                                              ; preds = %265
  %315 = bitcast %struct.__va_list* %7 to i8**, !dbg !4439
  %316 = load i8*, i8** %315, align 4, !dbg !4439
  %317 = ptrtoint i8* %316 to i32, !dbg !4439
  %318 = add i32 %317, 7, !dbg !4439
  %319 = and i32 %318, -8, !dbg !4439
  %320 = inttoptr i32 %319 to i8*, !dbg !4439
  %321 = getelementptr inbounds i8, i8* %320, i32 8, !dbg !4439
  store i8* %321, i8** %315, align 4, !dbg !4439
  %322 = bitcast i8* %320 to i64*, !dbg !4439
  %323 = load i64, i64* %322, align 8, !dbg !4439
  %324 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4440
  %325 = bitcast %union.argument_value* %324 to i64*, !dbg !4441
  store i64 %323, i64* %325, align 8, !dbg !4442
  br label %335, !dbg !4443

326:                                              ; preds = %265, %265
  %327 = bitcast %struct.__va_list* %7 to i8**, !dbg !4444
  %328 = load i8*, i8** %327, align 4, !dbg !4444
  %329 = getelementptr inbounds i8, i8* %328, i32 4, !dbg !4444
  store i8* %329, i8** %327, align 4, !dbg !4444
  %330 = bitcast i8* %328 to i32*, !dbg !4444
  %331 = load i32, i32* %330, align 4, !dbg !4444
  %332 = zext i32 %331 to i64, !dbg !4445
  %333 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4446
  %334 = bitcast %union.argument_value* %333 to i64*, !dbg !4447
  store i64 %332, i64* %334, align 8, !dbg !4448
  br label %335, !dbg !4449

335:                                              ; preds = %326, %314, %302, %301, %268
  %336 = load i32, i32* %28, align 4, !dbg !4450
  %337 = icmp eq i32 %336, 1, !dbg !4452
  br i1 %337, label %338, label %346, !dbg !4453

338:                                              ; preds = %335
  %339 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4454
  %340 = bitcast %union.argument_value* %339 to i64*, !dbg !4456
  %341 = load i64, i64* %340, align 8, !dbg !4456
  %342 = trunc i64 %341 to i8, !dbg !4457
  %343 = zext i8 %342 to i64, !dbg !4457
  %344 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4458
  %345 = bitcast %union.argument_value* %344 to i64*, !dbg !4459
  store i64 %343, i64* %345, align 8, !dbg !4460
  br label %358, !dbg !4461

346:                                              ; preds = %335
  %347 = load i32, i32* %28, align 4, !dbg !4462
  %348 = icmp eq i32 %347, 2, !dbg !4464
  br i1 %348, label %349, label %357, !dbg !4465

349:                                              ; preds = %346
  %350 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4466
  %351 = bitcast %union.argument_value* %350 to i64*, !dbg !4468
  %352 = load i64, i64* %351, align 8, !dbg !4468
  %353 = trunc i64 %352 to i16, !dbg !4469
  %354 = zext i16 %353 to i64, !dbg !4469
  %355 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4470
  %356 = bitcast %union.argument_value* %355 to i64*, !dbg !4471
  store i64 %354, i64* %356, align 8, !dbg !4472
  br label %357, !dbg !4473

357:                                              ; preds = %349, %346
  br label %358

358:                                              ; preds = %357, %338
  br label %403, !dbg !4474

359:                                              ; preds = %262
  %360 = load i32, i32* %27, align 4, !dbg !4475
  %361 = icmp eq i32 %360, 4, !dbg !4477
  br i1 %361, label %362, label %390, !dbg !4478

362:                                              ; preds = %359
  %363 = load i32, i32* %28, align 4, !dbg !4479
  %364 = icmp eq i32 %363, 8, !dbg !4482
  br i1 %364, label %365, label %377, !dbg !4483

365:                                              ; preds = %362
  %366 = bitcast %struct.__va_list* %7 to i8**, !dbg !4484
  %367 = load i8*, i8** %366, align 4, !dbg !4484
  %368 = ptrtoint i8* %367 to i32, !dbg !4484
  %369 = add i32 %368, 7, !dbg !4484
  %370 = and i32 %369, -8, !dbg !4484
  %371 = inttoptr i32 %370 to i8*, !dbg !4484
  %372 = getelementptr inbounds i8, i8* %371, i32 8, !dbg !4484
  store i8* %372, i8** %366, align 4, !dbg !4484
  %373 = bitcast i8* %371 to double*, !dbg !4484
  %374 = load double, double* %373, align 8, !dbg !4484
  %375 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4486
  %376 = bitcast %union.argument_value* %375 to double*, !dbg !4487
  store double %374, double* %376, align 8, !dbg !4488
  br label %389, !dbg !4489

377:                                              ; preds = %362
  %378 = bitcast %struct.__va_list* %7 to i8**, !dbg !4490
  %379 = load i8*, i8** %378, align 4, !dbg !4490
  %380 = ptrtoint i8* %379 to i32, !dbg !4490
  %381 = add i32 %380, 7, !dbg !4490
  %382 = and i32 %381, -8, !dbg !4490
  %383 = inttoptr i32 %382 to i8*, !dbg !4490
  %384 = getelementptr inbounds i8, i8* %383, i32 8, !dbg !4490
  store i8* %384, i8** %378, align 4, !dbg !4490
  %385 = bitcast i8* %383 to double*, !dbg !4490
  %386 = load double, double* %385, align 8, !dbg !4490
  %387 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4492
  %388 = bitcast %union.argument_value* %387 to double*, !dbg !4493
  store double %386, double* %388, align 8, !dbg !4494
  br label %389

389:                                              ; preds = %377, %365
  br label %402, !dbg !4495

390:                                              ; preds = %359
  %391 = load i32, i32* %27, align 4, !dbg !4496
  %392 = icmp eq i32 %391, 3, !dbg !4498
  br i1 %392, label %393, label %401, !dbg !4499

393:                                              ; preds = %390
  %394 = bitcast %struct.__va_list* %7 to i8**, !dbg !4500
  %395 = load i8*, i8** %394, align 4, !dbg !4500
  %396 = getelementptr inbounds i8, i8* %395, i32 4, !dbg !4500
  store i8* %396, i8** %394, align 4, !dbg !4500
  %397 = bitcast i8* %395 to i8**, !dbg !4500
  %398 = load i8*, i8** %397, align 4, !dbg !4500
  %399 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4502
  %400 = bitcast %union.argument_value* %399 to i8**, !dbg !4503
  store i8* %398, i8** %400, align 8, !dbg !4504
  br label %401, !dbg !4505

401:                                              ; preds = %393, %390
  br label %402

402:                                              ; preds = %401, %389
  br label %403

403:                                              ; preds = %402, %358
  br label %404

404:                                              ; preds = %403, %261
  %405 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4506
  %406 = bitcast %struct.conversion* %405 to i24*, !dbg !4508
  %407 = load i24, i24* %406, align 4, !dbg !4508
  %408 = and i24 %407, 1, !dbg !4508
  %409 = trunc i24 %408 to i1, !dbg !4508
  br i1 %409, label %417, label %410, !dbg !4509

410:                                              ; preds = %404
  %411 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4510
  %412 = bitcast %struct.conversion* %411 to i24*, !dbg !4511
  %413 = load i24, i24* %412, align 4, !dbg !4511
  %414 = lshr i24 %413, 1, !dbg !4511
  %415 = and i24 %414, 1, !dbg !4511
  %416 = trunc i24 %415 to i1, !dbg !4511
  br i1 %416, label %417, label %433, !dbg !4512

417:                                              ; preds = %410, %404
  br label %418, !dbg !4513

418:                                              ; preds = %417
  call void @llvm.dbg.declare(metadata i32* %29, metadata !4515, metadata !DIExpression()), !dbg !4517
  %419 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4517
  %420 = load i8*, i8** %9, align 4, !dbg !4517
  %421 = load i8*, i8** %20, align 4, !dbg !4517
  %422 = load i8*, i8** %10, align 4, !dbg !4517
  %423 = call i32 @outs(i32 (...)* noundef %419, i8* noundef %420, i8* noundef %421, i8* noundef %422) #10, !dbg !4517
  store i32 %423, i32* %29, align 4, !dbg !4517
  %424 = load i32, i32* %29, align 4, !dbg !4518
  %425 = icmp slt i32 %424, 0, !dbg !4518
  br i1 %425, label %426, label %428, !dbg !4517

426:                                              ; preds = %418
  %427 = load i32, i32* %29, align 4, !dbg !4520
  store i32 %427, i32* %6, align 4, !dbg !4520
  br label %836, !dbg !4520

428:                                              ; preds = %418
  %429 = load i32, i32* %29, align 4, !dbg !4517
  %430 = load i32, i32* %13, align 4, !dbg !4517
  %431 = add i32 %430, %429, !dbg !4517
  store i32 %431, i32* %13, align 4, !dbg !4517
  br label %432, !dbg !4517

432:                                              ; preds = %428
  br label %50, !dbg !4522, !llvm.loop !4190

433:                                              ; preds = %410
  %434 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4523
  %435 = getelementptr inbounds %struct.conversion, %struct.conversion* %434, i32 0, i32 1, !dbg !4524
  %436 = load i8, i8* %435, align 1, !dbg !4524
  %437 = zext i8 %436 to i32, !dbg !4523
  switch i32 %437, label %577 [
    i32 37, label %438
    i32 115, label %452
    i32 99, label %469
    i32 100, label %478
    i32 105, label %478
    i32 111, label %511
    i32 117, label %511
    i32 120, label %511
    i32 88, label %511
    i32 112, label %545
    i32 110, label %570
    i32 97, label %576
    i32 65, label %576
    i32 101, label %576
    i32 69, label %576
    i32 102, label %576
    i32 70, label %576
    i32 103, label %576
    i32 71, label %576
  ], !dbg !4525

438:                                              ; preds = %433
  br label %439, !dbg !4526

439:                                              ; preds = %438
  call void @llvm.dbg.declare(metadata i32* %30, metadata !4528, metadata !DIExpression()), !dbg !4530
  %440 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4530
  %441 = load i8*, i8** %9, align 4, !dbg !4530
  %442 = bitcast i32 (...)* %440 to i32 (i32, i8*)*, !dbg !4530
  %443 = call i32 %442(i32 noundef 37, i8* noundef %441) #10, !dbg !4530
  store i32 %443, i32* %30, align 4, !dbg !4530
  %444 = load i32, i32* %30, align 4, !dbg !4531
  %445 = icmp slt i32 %444, 0, !dbg !4531
  br i1 %445, label %446, label %448, !dbg !4530

446:                                              ; preds = %439
  %447 = load i32, i32* %30, align 4, !dbg !4533
  store i32 %447, i32* %6, align 4, !dbg !4533
  br label %836, !dbg !4533

448:                                              ; preds = %439
  %449 = load i32, i32* %13, align 4, !dbg !4530
  %450 = add i32 %449, 1, !dbg !4530
  store i32 %450, i32* %13, align 4, !dbg !4530
  br label %451, !dbg !4530

451:                                              ; preds = %448
  br label %578, !dbg !4535

452:                                              ; preds = %433
  %453 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4536
  %454 = bitcast %union.argument_value* %453 to i8**, !dbg !4538
  %455 = load i8*, i8** %454, align 8, !dbg !4538
  store i8* %455, i8** %23, align 4, !dbg !4539
  call void @llvm.dbg.declare(metadata i32* %31, metadata !4540, metadata !DIExpression()), !dbg !4541
  %456 = load i32, i32* %22, align 4, !dbg !4542
  %457 = icmp sge i32 %456, 0, !dbg !4544
  br i1 %457, label %458, label %462, !dbg !4545

458:                                              ; preds = %452
  %459 = load i8*, i8** %23, align 4, !dbg !4546
  %460 = load i32, i32* %22, align 4, !dbg !4548
  %461 = call i32 @strnlen(i8* noundef %459, i32 noundef %460) #10, !dbg !4549
  store i32 %461, i32* %31, align 4, !dbg !4550
  br label %465, !dbg !4551

462:                                              ; preds = %452
  %463 = load i8*, i8** %23, align 4, !dbg !4552
  %464 = call i32 @strlen(i8* noundef %463) #10, !dbg !4554
  store i32 %464, i32* %31, align 4, !dbg !4555
  br label %465

465:                                              ; preds = %462, %458
  %466 = load i8*, i8** %23, align 4, !dbg !4556
  %467 = load i32, i32* %31, align 4, !dbg !4557
  %468 = getelementptr inbounds i8, i8* %466, i32 %467, !dbg !4558
  store i8* %468, i8** %24, align 4, !dbg !4559
  store i32 -1, i32* %22, align 4, !dbg !4560
  br label %578, !dbg !4561

469:                                              ; preds = %433
  %470 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4562
  store i8* %470, i8** %23, align 4, !dbg !4563
  %471 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4564
  %472 = bitcast %union.argument_value* %471 to i64*, !dbg !4565
  %473 = load i64, i64* %472, align 8, !dbg !4565
  %474 = trunc i64 %473 to i8, !dbg !4566
  %475 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4567
  store i8 %474, i8* %475, align 1, !dbg !4568
  %476 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4569
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !4570
  store i8* %477, i8** %24, align 4, !dbg !4571
  br label %578, !dbg !4572

478:                                              ; preds = %433, %433
  %479 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4573
  %480 = bitcast %struct.conversion* %479 to i24*, !dbg !4575
  %481 = load i24, i24* %480, align 4, !dbg !4575
  %482 = lshr i24 %481, 3, !dbg !4575
  %483 = and i24 %482, 1, !dbg !4575
  %484 = trunc i24 %483 to i1, !dbg !4575
  br i1 %484, label %485, label %486, !dbg !4576

485:                                              ; preds = %478
  store i8 43, i8* %25, align 1, !dbg !4577
  br label %495, !dbg !4579

486:                                              ; preds = %478
  %487 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4580
  %488 = bitcast %struct.conversion* %487 to i24*, !dbg !4582
  %489 = load i24, i24* %488, align 4, !dbg !4582
  %490 = lshr i24 %489, 4, !dbg !4582
  %491 = and i24 %490, 1, !dbg !4582
  %492 = trunc i24 %491 to i1, !dbg !4582
  br i1 %492, label %493, label %494, !dbg !4583

493:                                              ; preds = %486
  store i8 32, i8* %25, align 1, !dbg !4584
  br label %494, !dbg !4586

494:                                              ; preds = %493, %486
  br label %495

495:                                              ; preds = %494, %485
  %496 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4587
  %497 = bitcast %union.argument_value* %496 to i64*, !dbg !4588
  %498 = load i64, i64* %497, align 8, !dbg !4588
  store i64 %498, i64* %14, align 8, !dbg !4589
  %499 = load i64, i64* %14, align 8, !dbg !4590
  %500 = icmp slt i64 %499, 0, !dbg !4592
  br i1 %500, label %501, label %506, !dbg !4593

501:                                              ; preds = %495
  store i8 45, i8* %25, align 1, !dbg !4594
  %502 = load i64, i64* %14, align 8, !dbg !4596
  %503 = sub nsw i64 0, %502, !dbg !4597
  %504 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4598
  %505 = bitcast %union.argument_value* %504 to i64*, !dbg !4599
  store i64 %503, i64* %505, align 8, !dbg !4600
  br label %510, !dbg !4601

506:                                              ; preds = %495
  %507 = load i64, i64* %14, align 8, !dbg !4602
  %508 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4604
  %509 = bitcast %union.argument_value* %508 to i64*, !dbg !4605
  store i64 %507, i64* %509, align 8, !dbg !4606
  br label %510

510:                                              ; preds = %506, %501
  br label %511, !dbg !4607

511:                                              ; preds = %433, %433, %433, %433, %510
  %512 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4608
  %513 = bitcast %union.argument_value* %512 to i64*, !dbg !4609
  %514 = load i64, i64* %513, align 8, !dbg !4609
  %515 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4610
  %516 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4611
  %517 = load i8*, i8** %24, align 4, !dbg !4612
  %518 = call i8* @encode_uint(i64 noundef %514, %struct.conversion* noundef %515, i8* noundef %516, i8* noundef %517) #10, !dbg !4613
  store i8* %518, i8** %23, align 4, !dbg !4614
  br label %519, !dbg !4615

519:                                              ; preds = %550, %511
  call void @llvm.dbg.label(metadata !4616), !dbg !4617
  %520 = load i32, i32* %22, align 4, !dbg !4618
  %521 = icmp sge i32 %520, 0, !dbg !4620
  br i1 %521, label %522, label %544, !dbg !4621

522:                                              ; preds = %519
  call void @llvm.dbg.declare(metadata i32* %32, metadata !4622, metadata !DIExpression()), !dbg !4624
  %523 = load i8*, i8** %24, align 4, !dbg !4625
  %524 = load i8*, i8** %23, align 4, !dbg !4626
  %525 = ptrtoint i8* %523 to i32, !dbg !4627
  %526 = ptrtoint i8* %524 to i32, !dbg !4627
  %527 = sub i32 %525, %526, !dbg !4627
  store i32 %527, i32* %32, align 4, !dbg !4624
  %528 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4628
  %529 = bitcast %struct.conversion* %528 to i24*, !dbg !4629
  %530 = load i24, i24* %529, align 4, !dbg !4630
  %531 = and i24 %530, -65, !dbg !4630
  %532 = or i24 %531, 0, !dbg !4630
  store i24 %532, i24* %529, align 4, !dbg !4630
  %533 = load i32, i32* %32, align 4, !dbg !4631
  %534 = load i32, i32* %22, align 4, !dbg !4633
  %535 = icmp ult i32 %533, %534, !dbg !4634
  br i1 %535, label %536, label %543, !dbg !4635

536:                                              ; preds = %522
  %537 = load i32, i32* %22, align 4, !dbg !4636
  %538 = load i32, i32* %32, align 4, !dbg !4638
  %539 = sub nsw i32 %537, %538, !dbg !4639
  %540 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4640
  %541 = getelementptr inbounds %struct.conversion, %struct.conversion* %540, i32 0, i32 2, !dbg !4641
  %542 = bitcast %union.anon.68* %541 to i32*, !dbg !4641
  store i32 %539, i32* %542, align 4, !dbg !4642
  br label %543, !dbg !4643

543:                                              ; preds = %536, %522
  br label %544, !dbg !4644

544:                                              ; preds = %543, %519
  br label %578, !dbg !4645

545:                                              ; preds = %433
  %546 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4646
  %547 = bitcast %union.argument_value* %546 to i8**, !dbg !4648
  %548 = load i8*, i8** %547, align 8, !dbg !4648
  %549 = icmp ne i8* %548, null, !dbg !4649
  br i1 %549, label %550, label %567, !dbg !4650

550:                                              ; preds = %545
  %551 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4651
  %552 = bitcast %union.argument_value* %551 to i8**, !dbg !4653
  %553 = load i8*, i8** %552, align 8, !dbg !4653
  %554 = ptrtoint i8* %553 to i32, !dbg !4654
  %555 = zext i32 %554 to i64, !dbg !4654
  %556 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4655
  %557 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4656
  %558 = load i8*, i8** %24, align 4, !dbg !4657
  %559 = call i8* @encode_uint(i64 noundef %555, %struct.conversion* noundef %556, i8* noundef %557, i8* noundef %558) #10, !dbg !4658
  store i8* %559, i8** %23, align 4, !dbg !4659
  %560 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4660
  %561 = bitcast %struct.conversion* %560 to i24*, !dbg !4661
  %562 = load i24, i24* %561, align 4, !dbg !4662
  %563 = and i24 %562, -1048577, !dbg !4662
  %564 = or i24 %563, 1048576, !dbg !4662
  store i24 %564, i24* %561, align 4, !dbg !4662
  %565 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4663
  %566 = getelementptr inbounds %struct.conversion, %struct.conversion* %565, i32 0, i32 1, !dbg !4664
  store i8 120, i8* %566, align 1, !dbg !4665
  br label %519, !dbg !4666

567:                                              ; preds = %545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %23, align 4, !dbg !4667
  %568 = load i8*, i8** %23, align 4, !dbg !4668
  %569 = getelementptr inbounds i8, i8* %568, i32 5, !dbg !4669
  store i8* %569, i8** %24, align 4, !dbg !4670
  br label %578, !dbg !4671

570:                                              ; preds = %433
  %571 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4672
  %572 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4675
  %573 = bitcast %union.argument_value* %572 to i8**, !dbg !4676
  %574 = load i8*, i8** %573, align 8, !dbg !4676
  %575 = load i32, i32* %13, align 4, !dbg !4677
  call void @store_count(%struct.conversion* noundef %571, i8* noundef %574, i32 noundef %575) #10, !dbg !4678
  br label %578, !dbg !4679

576:                                              ; preds = %433, %433, %433, %433, %433, %433, %433, %433
  br label %578, !dbg !4680

577:                                              ; preds = %433
  br label %578, !dbg !4681

578:                                              ; preds = %577, %576, %570, %567, %544, %469, %465, %451
  %579 = load i8*, i8** %23, align 4, !dbg !4682
  %580 = icmp eq i8* %579, null, !dbg !4684
  br i1 %580, label %581, label %582, !dbg !4685

581:                                              ; preds = %578
  br label %50, !dbg !4686, !llvm.loop !4190

582:                                              ; preds = %578
  call void @llvm.dbg.declare(metadata i32* %33, metadata !4688, metadata !DIExpression()), !dbg !4689
  %583 = load i8*, i8** %24, align 4, !dbg !4690
  %584 = load i8*, i8** %23, align 4, !dbg !4691
  %585 = ptrtoint i8* %583 to i32, !dbg !4692
  %586 = ptrtoint i8* %584 to i32, !dbg !4692
  %587 = sub i32 %585, %586, !dbg !4692
  store i32 %587, i32* %33, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %34, metadata !4693, metadata !DIExpression()), !dbg !4694
  store i32 0, i32* %34, align 4, !dbg !4694
  %588 = load i8, i8* %25, align 1, !dbg !4695
  %589 = zext i8 %588 to i32, !dbg !4695
  %590 = icmp ne i32 %589, 0, !dbg !4697
  br i1 %590, label %591, label %594, !dbg !4698

591:                                              ; preds = %582
  %592 = load i32, i32* %33, align 4, !dbg !4699
  %593 = add i32 %592, 1, !dbg !4699
  store i32 %593, i32* %33, align 4, !dbg !4699
  br label %594, !dbg !4701

594:                                              ; preds = %591, %582
  %595 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4702
  %596 = bitcast %struct.conversion* %595 to i24*, !dbg !4704
  %597 = load i24, i24* %596, align 4, !dbg !4704
  %598 = lshr i24 %597, 20, !dbg !4704
  %599 = and i24 %598, 1, !dbg !4704
  %600 = trunc i24 %599 to i1, !dbg !4704
  br i1 %600, label %601, label %604, !dbg !4705

601:                                              ; preds = %594
  %602 = load i32, i32* %33, align 4, !dbg !4706
  %603 = add i32 %602, 2, !dbg !4706
  store i32 %603, i32* %33, align 4, !dbg !4706
  br label %615, !dbg !4708

604:                                              ; preds = %594
  %605 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4709
  %606 = bitcast %struct.conversion* %605 to i24*, !dbg !4711
  %607 = load i24, i24* %606, align 4, !dbg !4711
  %608 = lshr i24 %607, 19, !dbg !4711
  %609 = and i24 %608, 1, !dbg !4711
  %610 = trunc i24 %609 to i1, !dbg !4711
  br i1 %610, label %611, label %614, !dbg !4712

611:                                              ; preds = %604
  %612 = load i32, i32* %33, align 4, !dbg !4713
  %613 = add i32 %612, 1, !dbg !4713
  store i32 %613, i32* %33, align 4, !dbg !4713
  br label %614, !dbg !4715

614:                                              ; preds = %611, %604
  br label %615

615:                                              ; preds = %614, %601
  %616 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4716
  %617 = getelementptr inbounds %struct.conversion, %struct.conversion* %616, i32 0, i32 2, !dbg !4717
  %618 = bitcast %union.anon.68* %617 to i32*, !dbg !4717
  %619 = load i32, i32* %618, align 4, !dbg !4717
  %620 = load i32, i32* %33, align 4, !dbg !4718
  %621 = add i32 %620, %619, !dbg !4718
  store i32 %621, i32* %33, align 4, !dbg !4718
  %622 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4719
  %623 = bitcast %struct.conversion* %622 to i24*, !dbg !4721
  %624 = load i24, i24* %623, align 4, !dbg !4721
  %625 = lshr i24 %624, 22, !dbg !4721
  %626 = and i24 %625, 1, !dbg !4721
  %627 = trunc i24 %626 to i1, !dbg !4721
  br i1 %627, label %628, label %635, !dbg !4722

628:                                              ; preds = %615
  %629 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4723
  %630 = getelementptr inbounds %struct.conversion, %struct.conversion* %629, i32 0, i32 3, !dbg !4725
  %631 = bitcast %union.anon.68* %630 to i32*, !dbg !4725
  %632 = load i32, i32* %631, align 4, !dbg !4725
  %633 = load i32, i32* %33, align 4, !dbg !4726
  %634 = add i32 %633, %632, !dbg !4726
  store i32 %634, i32* %33, align 4, !dbg !4726
  br label %635, !dbg !4727

635:                                              ; preds = %628, %615
  %636 = load i32, i32* %21, align 4, !dbg !4728
  %637 = icmp sgt i32 %636, 0, !dbg !4730
  br i1 %637, label %638, label %699, !dbg !4731

638:                                              ; preds = %635
  %639 = load i32, i32* %33, align 4, !dbg !4732
  %640 = load i32, i32* %21, align 4, !dbg !4734
  %641 = sub nsw i32 %640, %639, !dbg !4734
  store i32 %641, i32* %21, align 4, !dbg !4734
  %642 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4735
  %643 = bitcast %struct.conversion* %642 to i24*, !dbg !4737
  %644 = load i24, i24* %643, align 4, !dbg !4737
  %645 = lshr i24 %644, 2, !dbg !4737
  %646 = and i24 %645, 1, !dbg !4737
  %647 = trunc i24 %646 to i1, !dbg !4737
  br i1 %647, label %698, label %648, !dbg !4738

648:                                              ; preds = %638
  call void @llvm.dbg.declare(metadata i8* %35, metadata !4739, metadata !DIExpression()), !dbg !4741
  store i8 32, i8* %35, align 1, !dbg !4741
  %649 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4742
  %650 = bitcast %struct.conversion* %649 to i24*, !dbg !4744
  %651 = load i24, i24* %650, align 4, !dbg !4744
  %652 = lshr i24 %651, 6, !dbg !4744
  %653 = and i24 %652, 1, !dbg !4744
  %654 = trunc i24 %653 to i1, !dbg !4744
  br i1 %654, label %655, label %676, !dbg !4745

655:                                              ; preds = %648
  %656 = load i8, i8* %25, align 1, !dbg !4746
  %657 = zext i8 %656 to i32, !dbg !4746
  %658 = icmp ne i32 %657, 0, !dbg !4749
  br i1 %658, label %659, label %675, !dbg !4750

659:                                              ; preds = %655
  br label %660, !dbg !4751

660:                                              ; preds = %659
  call void @llvm.dbg.declare(metadata i32* %36, metadata !4753, metadata !DIExpression()), !dbg !4755
  %661 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4755
  %662 = load i8, i8* %25, align 1, !dbg !4755
  %663 = zext i8 %662 to i32, !dbg !4755
  %664 = load i8*, i8** %9, align 4, !dbg !4755
  %665 = bitcast i32 (...)* %661 to i32 (i32, i8*)*, !dbg !4755
  %666 = call i32 %665(i32 noundef %663, i8* noundef %664) #10, !dbg !4755
  store i32 %666, i32* %36, align 4, !dbg !4755
  %667 = load i32, i32* %36, align 4, !dbg !4756
  %668 = icmp slt i32 %667, 0, !dbg !4756
  br i1 %668, label %669, label %671, !dbg !4755

669:                                              ; preds = %660
  %670 = load i32, i32* %36, align 4, !dbg !4758
  store i32 %670, i32* %6, align 4, !dbg !4758
  br label %836, !dbg !4758

671:                                              ; preds = %660
  %672 = load i32, i32* %13, align 4, !dbg !4755
  %673 = add i32 %672, 1, !dbg !4755
  store i32 %673, i32* %13, align 4, !dbg !4755
  br label %674, !dbg !4755

674:                                              ; preds = %671
  store i8 0, i8* %25, align 1, !dbg !4760
  br label %675, !dbg !4761

675:                                              ; preds = %674, %655
  store i8 48, i8* %35, align 1, !dbg !4762
  br label %676, !dbg !4763

676:                                              ; preds = %675, %648
  br label %677, !dbg !4764

677:                                              ; preds = %696, %676
  %678 = load i32, i32* %21, align 4, !dbg !4765
  %679 = add nsw i32 %678, -1, !dbg !4765
  store i32 %679, i32* %21, align 4, !dbg !4765
  %680 = icmp sgt i32 %678, 0, !dbg !4766
  br i1 %680, label %681, label %697, !dbg !4764

681:                                              ; preds = %677
  br label %682, !dbg !4767

682:                                              ; preds = %681
  call void @llvm.dbg.declare(metadata i32* %37, metadata !4769, metadata !DIExpression()), !dbg !4771
  %683 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4771
  %684 = load i8, i8* %35, align 1, !dbg !4771
  %685 = zext i8 %684 to i32, !dbg !4771
  %686 = load i8*, i8** %9, align 4, !dbg !4771
  %687 = bitcast i32 (...)* %683 to i32 (i32, i8*)*, !dbg !4771
  %688 = call i32 %687(i32 noundef %685, i8* noundef %686) #10, !dbg !4771
  store i32 %688, i32* %37, align 4, !dbg !4771
  %689 = load i32, i32* %37, align 4, !dbg !4772
  %690 = icmp slt i32 %689, 0, !dbg !4772
  br i1 %690, label %691, label %693, !dbg !4771

691:                                              ; preds = %682
  %692 = load i32, i32* %37, align 4, !dbg !4774
  store i32 %692, i32* %6, align 4, !dbg !4774
  br label %836, !dbg !4774

693:                                              ; preds = %682
  %694 = load i32, i32* %13, align 4, !dbg !4771
  %695 = add i32 %694, 1, !dbg !4771
  store i32 %695, i32* %13, align 4, !dbg !4771
  br label %696, !dbg !4771

696:                                              ; preds = %693
  br label %677, !dbg !4764, !llvm.loop !4776

697:                                              ; preds = %677
  br label %698, !dbg !4778

698:                                              ; preds = %697, %638
  br label %699, !dbg !4779

699:                                              ; preds = %698, %635
  %700 = load i8, i8* %25, align 1, !dbg !4780
  %701 = zext i8 %700 to i32, !dbg !4780
  %702 = icmp ne i32 %701, 0, !dbg !4782
  br i1 %702, label %703, label %719, !dbg !4783

703:                                              ; preds = %699
  br label %704, !dbg !4784

704:                                              ; preds = %703
  call void @llvm.dbg.declare(metadata i32* %38, metadata !4786, metadata !DIExpression()), !dbg !4788
  %705 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4788
  %706 = load i8, i8* %25, align 1, !dbg !4788
  %707 = zext i8 %706 to i32, !dbg !4788
  %708 = load i8*, i8** %9, align 4, !dbg !4788
  %709 = bitcast i32 (...)* %705 to i32 (i32, i8*)*, !dbg !4788
  %710 = call i32 %709(i32 noundef %707, i8* noundef %708) #10, !dbg !4788
  store i32 %710, i32* %38, align 4, !dbg !4788
  %711 = load i32, i32* %38, align 4, !dbg !4789
  %712 = icmp slt i32 %711, 0, !dbg !4789
  br i1 %712, label %713, label %715, !dbg !4788

713:                                              ; preds = %704
  %714 = load i32, i32* %38, align 4, !dbg !4791
  store i32 %714, i32* %6, align 4, !dbg !4791
  br label %836, !dbg !4791

715:                                              ; preds = %704
  %716 = load i32, i32* %13, align 4, !dbg !4788
  %717 = add i32 %716, 1, !dbg !4788
  store i32 %717, i32* %13, align 4, !dbg !4788
  br label %718, !dbg !4788

718:                                              ; preds = %715
  br label %719, !dbg !4793

719:                                              ; preds = %718, %699
  %720 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4794
  %721 = bitcast %struct.conversion* %720 to i24*, !dbg !4798
  %722 = load i24, i24* %721, align 4, !dbg !4798
  %723 = lshr i24 %722, 20, !dbg !4798
  %724 = and i24 %723, 1, !dbg !4798
  %725 = trunc i24 %724 to i1, !dbg !4798
  %726 = zext i1 %725 to i32, !dbg !4794
  %727 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4799
  %728 = bitcast %struct.conversion* %727 to i24*, !dbg !4800
  %729 = load i24, i24* %728, align 4, !dbg !4800
  %730 = lshr i24 %729, 19, !dbg !4800
  %731 = and i24 %730, 1, !dbg !4800
  %732 = trunc i24 %731 to i1, !dbg !4800
  %733 = zext i1 %732 to i32, !dbg !4799
  %734 = or i32 %726, %733, !dbg !4801
  %735 = icmp ne i32 %734, 0, !dbg !4801
  br i1 %735, label %736, label %750, !dbg !4802

736:                                              ; preds = %719
  br label %737, !dbg !4803

737:                                              ; preds = %736
  call void @llvm.dbg.declare(metadata i32* %39, metadata !4805, metadata !DIExpression()), !dbg !4807
  %738 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4807
  %739 = load i8*, i8** %9, align 4, !dbg !4807
  %740 = bitcast i32 (...)* %738 to i32 (i32, i8*)*, !dbg !4807
  %741 = call i32 %740(i32 noundef 48, i8* noundef %739) #10, !dbg !4807
  store i32 %741, i32* %39, align 4, !dbg !4807
  %742 = load i32, i32* %39, align 4, !dbg !4808
  %743 = icmp slt i32 %742, 0, !dbg !4808
  br i1 %743, label %744, label %746, !dbg !4807

744:                                              ; preds = %737
  %745 = load i32, i32* %39, align 4, !dbg !4810
  store i32 %745, i32* %6, align 4, !dbg !4810
  br label %836, !dbg !4810

746:                                              ; preds = %737
  %747 = load i32, i32* %13, align 4, !dbg !4807
  %748 = add i32 %747, 1, !dbg !4807
  store i32 %748, i32* %13, align 4, !dbg !4807
  br label %749, !dbg !4807

749:                                              ; preds = %746
  br label %750, !dbg !4812

750:                                              ; preds = %749, %719
  %751 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4813
  %752 = bitcast %struct.conversion* %751 to i24*, !dbg !4815
  %753 = load i24, i24* %752, align 4, !dbg !4815
  %754 = lshr i24 %753, 20, !dbg !4815
  %755 = and i24 %754, 1, !dbg !4815
  %756 = trunc i24 %755 to i1, !dbg !4815
  br i1 %756, label %757, label %775, !dbg !4816

757:                                              ; preds = %750
  br label %758, !dbg !4817

758:                                              ; preds = %757
  call void @llvm.dbg.declare(metadata i32* %40, metadata !4819, metadata !DIExpression()), !dbg !4821
  %759 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4821
  %760 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4821
  %761 = getelementptr inbounds %struct.conversion, %struct.conversion* %760, i32 0, i32 1, !dbg !4821
  %762 = load i8, i8* %761, align 1, !dbg !4821
  %763 = zext i8 %762 to i32, !dbg !4821
  %764 = load i8*, i8** %9, align 4, !dbg !4821
  %765 = bitcast i32 (...)* %759 to i32 (i32, i8*)*, !dbg !4821
  %766 = call i32 %765(i32 noundef %763, i8* noundef %764) #10, !dbg !4821
  store i32 %766, i32* %40, align 4, !dbg !4821
  %767 = load i32, i32* %40, align 4, !dbg !4822
  %768 = icmp slt i32 %767, 0, !dbg !4822
  br i1 %768, label %769, label %771, !dbg !4821

769:                                              ; preds = %758
  %770 = load i32, i32* %40, align 4, !dbg !4824
  store i32 %770, i32* %6, align 4, !dbg !4824
  br label %836, !dbg !4824

771:                                              ; preds = %758
  %772 = load i32, i32* %13, align 4, !dbg !4821
  %773 = add i32 %772, 1, !dbg !4821
  store i32 %773, i32* %13, align 4, !dbg !4821
  br label %774, !dbg !4821

774:                                              ; preds = %771
  br label %775, !dbg !4826

775:                                              ; preds = %774, %750
  %776 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4827
  %777 = getelementptr inbounds %struct.conversion, %struct.conversion* %776, i32 0, i32 2, !dbg !4828
  %778 = bitcast %union.anon.68* %777 to i32*, !dbg !4828
  %779 = load i32, i32* %778, align 4, !dbg !4828
  store i32 %779, i32* %34, align 4, !dbg !4829
  br label %780, !dbg !4830

780:                                              ; preds = %797, %775
  %781 = load i32, i32* %34, align 4, !dbg !4831
  %782 = add nsw i32 %781, -1, !dbg !4831
  store i32 %782, i32* %34, align 4, !dbg !4831
  %783 = icmp sgt i32 %781, 0, !dbg !4832
  br i1 %783, label %784, label %798, !dbg !4830

784:                                              ; preds = %780
  br label %785, !dbg !4833

785:                                              ; preds = %784
  call void @llvm.dbg.declare(metadata i32* %41, metadata !4835, metadata !DIExpression()), !dbg !4837
  %786 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4837
  %787 = load i8*, i8** %9, align 4, !dbg !4837
  %788 = bitcast i32 (...)* %786 to i32 (i32, i8*)*, !dbg !4837
  %789 = call i32 %788(i32 noundef 48, i8* noundef %787) #10, !dbg !4837
  store i32 %789, i32* %41, align 4, !dbg !4837
  %790 = load i32, i32* %41, align 4, !dbg !4838
  %791 = icmp slt i32 %790, 0, !dbg !4838
  br i1 %791, label %792, label %794, !dbg !4837

792:                                              ; preds = %785
  %793 = load i32, i32* %41, align 4, !dbg !4840
  store i32 %793, i32* %6, align 4, !dbg !4840
  br label %836, !dbg !4840

794:                                              ; preds = %785
  %795 = load i32, i32* %13, align 4, !dbg !4837
  %796 = add i32 %795, 1, !dbg !4837
  store i32 %796, i32* %13, align 4, !dbg !4837
  br label %797, !dbg !4837

797:                                              ; preds = %794
  br label %780, !dbg !4830, !llvm.loop !4842

798:                                              ; preds = %780
  br label %799, !dbg !4844

799:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata i32* %42, metadata !4845, metadata !DIExpression()), !dbg !4847
  %800 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4847
  %801 = load i8*, i8** %9, align 4, !dbg !4847
  %802 = load i8*, i8** %23, align 4, !dbg !4847
  %803 = load i8*, i8** %24, align 4, !dbg !4847
  %804 = call i32 @outs(i32 (...)* noundef %800, i8* noundef %801, i8* noundef %802, i8* noundef %803) #10, !dbg !4847
  store i32 %804, i32* %42, align 4, !dbg !4847
  %805 = load i32, i32* %42, align 4, !dbg !4848
  %806 = icmp slt i32 %805, 0, !dbg !4848
  br i1 %806, label %807, label %809, !dbg !4847

807:                                              ; preds = %799
  %808 = load i32, i32* %42, align 4, !dbg !4850
  store i32 %808, i32* %6, align 4, !dbg !4850
  br label %836, !dbg !4850

809:                                              ; preds = %799
  %810 = load i32, i32* %42, align 4, !dbg !4847
  %811 = load i32, i32* %13, align 4, !dbg !4847
  %812 = add i32 %811, %810, !dbg !4847
  store i32 %812, i32* %13, align 4, !dbg !4847
  br label %813, !dbg !4847

813:                                              ; preds = %809
  br label %814, !dbg !4852

814:                                              ; preds = %830, %813
  %815 = load i32, i32* %21, align 4, !dbg !4853
  %816 = icmp sgt i32 %815, 0, !dbg !4854
  br i1 %816, label %817, label %833, !dbg !4852

817:                                              ; preds = %814
  br label %818, !dbg !4855

818:                                              ; preds = %817
  call void @llvm.dbg.declare(metadata i32* %43, metadata !4857, metadata !DIExpression()), !dbg !4859
  %819 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4859
  %820 = load i8*, i8** %9, align 4, !dbg !4859
  %821 = bitcast i32 (...)* %819 to i32 (i32, i8*)*, !dbg !4859
  %822 = call i32 %821(i32 noundef 32, i8* noundef %820) #10, !dbg !4859
  store i32 %822, i32* %43, align 4, !dbg !4859
  %823 = load i32, i32* %43, align 4, !dbg !4860
  %824 = icmp slt i32 %823, 0, !dbg !4860
  br i1 %824, label %825, label %827, !dbg !4859

825:                                              ; preds = %818
  %826 = load i32, i32* %43, align 4, !dbg !4862
  store i32 %826, i32* %6, align 4, !dbg !4862
  br label %836, !dbg !4862

827:                                              ; preds = %818
  %828 = load i32, i32* %13, align 4, !dbg !4859
  %829 = add i32 %828, 1, !dbg !4859
  store i32 %829, i32* %13, align 4, !dbg !4859
  br label %830, !dbg !4859

830:                                              ; preds = %827
  %831 = load i32, i32* %21, align 4, !dbg !4864
  %832 = add nsw i32 %831, -1, !dbg !4864
  store i32 %832, i32* %21, align 4, !dbg !4864
  br label %814, !dbg !4852, !llvm.loop !4865

833:                                              ; preds = %814
  br label %50, !dbg !4170, !llvm.loop !4190

834:                                              ; preds = %50
  %835 = load i32, i32* %13, align 4, !dbg !4867
  store i32 %835, i32* %6, align 4, !dbg !4868
  br label %836, !dbg !4868

836:                                              ; preds = %834, %825, %807, %792, %769, %744, %713, %691, %669, %446, %426, %72
  %837 = load i32, i32* %6, align 4, !dbg !4869
  ret i32 %837, !dbg !4869
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_conversion(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4870 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.conversion, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4873, metadata !DIExpression()), !dbg !4874
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4875, metadata !DIExpression()), !dbg !4876
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4877
  %8 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %9 = load i24, i24* %8, align 4, !dbg !4878
  %10 = and i24 %9, -2, !dbg !4878
  %11 = or i24 %10, 0, !dbg !4878
  store i24 %11, i24* %8, align 4, !dbg !4878
  %12 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %13 = load i24, i24* %12, align 4, !dbg !4878
  %14 = and i24 %13, -3, !dbg !4878
  %15 = or i24 %14, 0, !dbg !4878
  store i24 %15, i24* %12, align 4, !dbg !4878
  %16 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %17 = load i24, i24* %16, align 4, !dbg !4878
  %18 = and i24 %17, -5, !dbg !4878
  %19 = or i24 %18, 0, !dbg !4878
  store i24 %19, i24* %16, align 4, !dbg !4878
  %20 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %21 = load i24, i24* %20, align 4, !dbg !4878
  %22 = and i24 %21, -9, !dbg !4878
  %23 = or i24 %22, 0, !dbg !4878
  store i24 %23, i24* %20, align 4, !dbg !4878
  %24 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %25 = load i24, i24* %24, align 4, !dbg !4878
  %26 = and i24 %25, -17, !dbg !4878
  %27 = or i24 %26, 0, !dbg !4878
  store i24 %27, i24* %24, align 4, !dbg !4878
  %28 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %29 = load i24, i24* %28, align 4, !dbg !4878
  %30 = and i24 %29, -33, !dbg !4878
  %31 = or i24 %30, 0, !dbg !4878
  store i24 %31, i24* %28, align 4, !dbg !4878
  %32 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %33 = load i24, i24* %32, align 4, !dbg !4878
  %34 = and i24 %33, -65, !dbg !4878
  %35 = or i24 %34, 0, !dbg !4878
  store i24 %35, i24* %32, align 4, !dbg !4878
  %36 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %37 = load i24, i24* %36, align 4, !dbg !4878
  %38 = and i24 %37, -129, !dbg !4878
  %39 = or i24 %38, 0, !dbg !4878
  store i24 %39, i24* %36, align 4, !dbg !4878
  %40 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %41 = load i24, i24* %40, align 4, !dbg !4878
  %42 = and i24 %41, -257, !dbg !4878
  %43 = or i24 %42, 0, !dbg !4878
  store i24 %43, i24* %40, align 4, !dbg !4878
  %44 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %45 = load i24, i24* %44, align 4, !dbg !4878
  %46 = and i24 %45, -513, !dbg !4878
  %47 = or i24 %46, 0, !dbg !4878
  store i24 %47, i24* %44, align 4, !dbg !4878
  %48 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %49 = load i24, i24* %48, align 4, !dbg !4878
  %50 = and i24 %49, -1025, !dbg !4878
  %51 = or i24 %50, 0, !dbg !4878
  store i24 %51, i24* %48, align 4, !dbg !4878
  %52 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %53 = load i24, i24* %52, align 4, !dbg !4878
  %54 = and i24 %53, -30721, !dbg !4878
  %55 = or i24 %54, 0, !dbg !4878
  store i24 %55, i24* %52, align 4, !dbg !4878
  %56 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %57 = load i24, i24* %56, align 4, !dbg !4878
  %58 = and i24 %57, -32769, !dbg !4878
  %59 = or i24 %58, 0, !dbg !4878
  store i24 %59, i24* %56, align 4, !dbg !4878
  %60 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %61 = load i24, i24* %60, align 4, !dbg !4878
  %62 = and i24 %61, -458753, !dbg !4878
  %63 = or i24 %62, 0, !dbg !4878
  store i24 %63, i24* %60, align 4, !dbg !4878
  %64 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %65 = load i24, i24* %64, align 4, !dbg !4878
  %66 = and i24 %65, -524289, !dbg !4878
  %67 = or i24 %66, 0, !dbg !4878
  store i24 %67, i24* %64, align 4, !dbg !4878
  %68 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %69 = load i24, i24* %68, align 4, !dbg !4878
  %70 = and i24 %69, -1048577, !dbg !4878
  %71 = or i24 %70, 0, !dbg !4878
  store i24 %71, i24* %68, align 4, !dbg !4878
  %72 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %73 = load i24, i24* %72, align 4, !dbg !4878
  %74 = and i24 %73, -2097153, !dbg !4878
  %75 = or i24 %74, 0, !dbg !4878
  store i24 %75, i24* %72, align 4, !dbg !4878
  %76 = bitcast %struct.conversion* %6 to i24*, !dbg !4878
  %77 = load i24, i24* %76, align 4, !dbg !4878
  %78 = and i24 %77, -4194305, !dbg !4878
  %79 = or i24 %78, 0, !dbg !4878
  store i24 %79, i24* %76, align 4, !dbg !4878
  %80 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 1, !dbg !4878
  store i8 0, i8* %80, align 1, !dbg !4878
  %81 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 2, !dbg !4878
  %82 = bitcast %union.anon.68* %81 to i8*, !dbg !4878
  call void @llvm.memset.p0i8.i32(i8* align 4 %82, i8 0, i32 4, i1 false), !dbg !4878
  %83 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 3, !dbg !4878
  %84 = bitcast %union.anon.68* %83 to i8*, !dbg !4878
  call void @llvm.memset.p0i8.i32(i8* align 4 %84, i8 0, i32 4, i1 false), !dbg !4878
  %85 = bitcast %struct.conversion* %7 to i8*, !dbg !4879
  %86 = bitcast %struct.conversion* %6 to i8*, !dbg !4879
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %85, i8* align 4 %86, i32 12, i1 false), !dbg !4879
  %87 = load i8*, i8** %5, align 4, !dbg !4880
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !4880
  store i8* %88, i8** %5, align 4, !dbg !4880
  %89 = load i8*, i8** %5, align 4, !dbg !4881
  %90 = load i8, i8* %89, align 1, !dbg !4883
  %91 = zext i8 %90 to i32, !dbg !4883
  %92 = icmp eq i32 %91, 37, !dbg !4884
  br i1 %92, label %93, label %100, !dbg !4885

93:                                               ; preds = %2
  %94 = load i8*, i8** %5, align 4, !dbg !4886
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !4886
  store i8* %95, i8** %5, align 4, !dbg !4886
  %96 = load i8, i8* %94, align 1, !dbg !4888
  %97 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4889
  %98 = getelementptr inbounds %struct.conversion, %struct.conversion* %97, i32 0, i32 1, !dbg !4890
  store i8 %96, i8* %98, align 1, !dbg !4891
  %99 = load i8*, i8** %5, align 4, !dbg !4892
  store i8* %99, i8** %3, align 4, !dbg !4893
  br label %117, !dbg !4893

100:                                              ; preds = %2
  %101 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4894
  %102 = load i8*, i8** %5, align 4, !dbg !4895
  %103 = call i8* @extract_flags(%struct.conversion* noundef %101, i8* noundef %102) #10, !dbg !4896
  store i8* %103, i8** %5, align 4, !dbg !4897
  %104 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4898
  %105 = load i8*, i8** %5, align 4, !dbg !4899
  %106 = call i8* @extract_width(%struct.conversion* noundef %104, i8* noundef %105) #10, !dbg !4900
  store i8* %106, i8** %5, align 4, !dbg !4901
  %107 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4902
  %108 = load i8*, i8** %5, align 4, !dbg !4903
  %109 = call i8* @extract_prec(%struct.conversion* noundef %107, i8* noundef %108) #10, !dbg !4904
  store i8* %109, i8** %5, align 4, !dbg !4905
  %110 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4906
  %111 = load i8*, i8** %5, align 4, !dbg !4907
  %112 = call i8* @extract_length(%struct.conversion* noundef %110, i8* noundef %111) #10, !dbg !4908
  store i8* %112, i8** %5, align 4, !dbg !4909
  %113 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4910
  %114 = load i8*, i8** %5, align 4, !dbg !4911
  %115 = call i8* @extract_specifier(%struct.conversion* noundef %113, i8* noundef %114) #10, !dbg !4912
  store i8* %115, i8** %5, align 4, !dbg !4913
  %116 = load i8*, i8** %5, align 4, !dbg !4914
  store i8* %116, i8** %3, align 4, !dbg !4915
  br label %117, !dbg !4915

117:                                              ; preds = %100, %93
  %118 = load i8*, i8** %3, align 4, !dbg !4916
  ret i8* %118, !dbg !4916
}

; Function Attrs: noinline nounwind optnone
define internal i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4917 {
  %5 = alloca i32, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !4920, metadata !DIExpression()), !dbg !4921
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4922, metadata !DIExpression()), !dbg !4923
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4924, metadata !DIExpression()), !dbg !4925
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4928, metadata !DIExpression()), !dbg !4929
  store i32 0, i32* %10, align 4, !dbg !4929
  br label %12, !dbg !4930

12:                                               ; preds = %41, %4
  %13 = load i8*, i8** %8, align 4, !dbg !4931
  %14 = load i8*, i8** %9, align 4, !dbg !4932
  %15 = icmp ult i8* %13, %14, !dbg !4933
  br i1 %15, label %26, label %16, !dbg !4934

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !4935
  %18 = icmp eq i8* %17, null, !dbg !4936
  br i1 %18, label %19, label %24, !dbg !4937

19:                                               ; preds = %16
  %20 = load i8*, i8** %8, align 4, !dbg !4938
  %21 = load i8, i8* %20, align 1, !dbg !4939
  %22 = zext i8 %21 to i32, !dbg !4939
  %23 = icmp ne i32 %22, 0, !dbg !4937
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !4940
  br label %26, !dbg !4934

26:                                               ; preds = %24, %12
  %27 = phi i1 [ true, %12 ], [ %25, %24 ]
  br i1 %27, label %28, label %44, !dbg !4930

28:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4941, metadata !DIExpression()), !dbg !4943
  %29 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !4944
  %30 = load i8*, i8** %8, align 4, !dbg !4945
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4945
  store i8* %31, i8** %8, align 4, !dbg !4945
  %32 = load i8, i8* %30, align 1, !dbg !4946
  %33 = zext i8 %32 to i32, !dbg !4947
  %34 = load i8*, i8** %7, align 4, !dbg !4948
  %35 = bitcast i32 (...)* %29 to i32 (i32, i8*)*, !dbg !4944
  %36 = call i32 %35(i32 noundef %33, i8* noundef %34) #10, !dbg !4944
  store i32 %36, i32* %11, align 4, !dbg !4943
  %37 = load i32, i32* %11, align 4, !dbg !4949
  %38 = icmp slt i32 %37, 0, !dbg !4951
  br i1 %38, label %39, label %41, !dbg !4952

39:                                               ; preds = %28
  %40 = load i32, i32* %11, align 4, !dbg !4953
  store i32 %40, i32* %5, align 4, !dbg !4955
  br label %46, !dbg !4955

41:                                               ; preds = %28
  %42 = load i32, i32* %10, align 4, !dbg !4956
  %43 = add i32 %42, 1, !dbg !4956
  store i32 %43, i32* %10, align 4, !dbg !4956
  br label %12, !dbg !4930, !llvm.loop !4957

44:                                               ; preds = %26
  %45 = load i32, i32* %10, align 4, !dbg !4959
  store i32 %45, i32* %5, align 4, !dbg !4960
  br label %46, !dbg !4960

46:                                               ; preds = %44, %39
  %47 = load i32, i32* %5, align 4, !dbg !4961
  ret i32 %47, !dbg !4961
}

; Function Attrs: noinline nounwind optnone
define internal i8* @encode_uint(i64 noundef %0, %struct.conversion* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4962 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.conversion*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4965, metadata !DIExpression()), !dbg !4966
  store %struct.conversion* %1, %struct.conversion** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %6, metadata !4967, metadata !DIExpression()), !dbg !4968
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4969, metadata !DIExpression()), !dbg !4970
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4973, metadata !DIExpression()), !dbg !4974
  %13 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4975
  %14 = getelementptr inbounds %struct.conversion, %struct.conversion* %13, i32 0, i32 1, !dbg !4976
  %15 = load i8, i8* %14, align 1, !dbg !4976
  %16 = zext i8 %15 to i32, !dbg !4977
  %17 = call i32 @isupper(i32 noundef %16) #10, !dbg !4978
  %18 = icmp ne i32 %17, 0, !dbg !4978
  %19 = zext i1 %18 to i8, !dbg !4974
  store i8 %19, i8* %9, align 1, !dbg !4974
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4979, metadata !DIExpression()), !dbg !4981
  %20 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4982
  %21 = getelementptr inbounds %struct.conversion, %struct.conversion* %20, i32 0, i32 1, !dbg !4983
  %22 = load i8, i8* %21, align 1, !dbg !4983
  %23 = call i32 @conversion_radix(i8 noundef zeroext %22) #10, !dbg !4984
  store i32 %23, i32* %10, align 4, !dbg !4981
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4985, metadata !DIExpression()), !dbg !4986
  %24 = load i8*, i8** %7, align 4, !dbg !4987
  %25 = load i8*, i8** %8, align 4, !dbg !4988
  %26 = load i8*, i8** %7, align 4, !dbg !4989
  %27 = ptrtoint i8* %25 to i32, !dbg !4990
  %28 = ptrtoint i8* %26 to i32, !dbg !4990
  %29 = sub i32 %27, %28, !dbg !4990
  %30 = getelementptr inbounds i8, i8* %24, i32 %29, !dbg !4991
  store i8* %30, i8** %11, align 4, !dbg !4986
  br label %31, !dbg !4992

31:                                               ; preds = %71, %4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4993, metadata !DIExpression()), !dbg !4995
  %32 = load i64, i64* %5, align 8, !dbg !4996
  %33 = load i32, i32* %10, align 4, !dbg !4997
  %34 = zext i32 %33 to i64, !dbg !4997
  %35 = urem i64 %32, %34, !dbg !4998
  %36 = trunc i64 %35 to i32, !dbg !4999
  store i32 %36, i32* %12, align 4, !dbg !4995
  %37 = load i32, i32* %12, align 4, !dbg !5000
  %38 = icmp ule i32 %37, 9, !dbg !5001
  br i1 %38, label %39, label %42, !dbg !5002

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !5003
  %41 = add i32 48, %40, !dbg !5004
  br label %55, !dbg !5002

42:                                               ; preds = %31
  %43 = load i8, i8* %9, align 1, !dbg !5005
  %44 = trunc i8 %43 to i1, !dbg !5005
  br i1 %44, label %45, label %49, !dbg !5005

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !5006
  %47 = add i32 65, %46, !dbg !5007
  %48 = sub i32 %47, 10, !dbg !5008
  br label %53, !dbg !5005

49:                                               ; preds = %42
  %50 = load i32, i32* %12, align 4, !dbg !5009
  %51 = add i32 97, %50, !dbg !5010
  %52 = sub i32 %51, 10, !dbg !5011
  br label %53, !dbg !5005

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ], !dbg !5005
  br label %55, !dbg !5002

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %41, %39 ], [ %54, %53 ], !dbg !5002
  %57 = trunc i32 %56 to i8, !dbg !5002
  %58 = load i8*, i8** %11, align 4, !dbg !5012
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !5012
  store i8* %59, i8** %11, align 4, !dbg !5012
  store i8 %57, i8* %59, align 1, !dbg !5013
  %60 = load i32, i32* %10, align 4, !dbg !5014
  %61 = zext i32 %60 to i64, !dbg !5014
  %62 = load i64, i64* %5, align 8, !dbg !5015
  %63 = udiv i64 %62, %61, !dbg !5015
  store i64 %63, i64* %5, align 8, !dbg !5015
  br label %64, !dbg !5016

64:                                               ; preds = %55
  %65 = load i64, i64* %5, align 8, !dbg !5017
  %66 = icmp ne i64 %65, 0, !dbg !5018
  br i1 %66, label %67, label %71, !dbg !5019

67:                                               ; preds = %64
  %68 = load i8*, i8** %7, align 4, !dbg !5020
  %69 = load i8*, i8** %11, align 4, !dbg !5021
  %70 = icmp ult i8* %68, %69, !dbg !5022
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i1 [ false, %64 ], [ %70, %67 ], !dbg !5023
  br i1 %72, label %31, label %73, !dbg !5016, !llvm.loop !5024

73:                                               ; preds = %71
  %74 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5026
  %75 = bitcast %struct.conversion* %74 to i24*, !dbg !5028
  %76 = load i24, i24* %75, align 4, !dbg !5028
  %77 = lshr i24 %76, 5, !dbg !5028
  %78 = and i24 %77, 1, !dbg !5028
  %79 = trunc i24 %78 to i1, !dbg !5028
  br i1 %79, label %80, label %101, !dbg !5029

80:                                               ; preds = %73
  %81 = load i32, i32* %10, align 4, !dbg !5030
  %82 = icmp eq i32 %81, 8, !dbg !5033
  br i1 %82, label %83, label %89, !dbg !5034

83:                                               ; preds = %80
  %84 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5035
  %85 = bitcast %struct.conversion* %84 to i24*, !dbg !5037
  %86 = load i24, i24* %85, align 4, !dbg !5038
  %87 = and i24 %86, -524289, !dbg !5038
  %88 = or i24 %87, 524288, !dbg !5038
  store i24 %88, i24* %85, align 4, !dbg !5038
  br label %100, !dbg !5039

89:                                               ; preds = %80
  %90 = load i32, i32* %10, align 4, !dbg !5040
  %91 = icmp eq i32 %90, 16, !dbg !5042
  br i1 %91, label %92, label %98, !dbg !5043

92:                                               ; preds = %89
  %93 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5044
  %94 = bitcast %struct.conversion* %93 to i24*, !dbg !5046
  %95 = load i24, i24* %94, align 4, !dbg !5047
  %96 = and i24 %95, -1048577, !dbg !5047
  %97 = or i24 %96, 1048576, !dbg !5047
  store i24 %97, i24* %94, align 4, !dbg !5047
  br label %99, !dbg !5048

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98, %92
  br label %100

100:                                              ; preds = %99, %83
  br label %101, !dbg !5049

101:                                              ; preds = %100, %73
  %102 = load i8*, i8** %11, align 4, !dbg !5050
  ret i8* %102, !dbg !5051
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optnone
define internal void @store_count(%struct.conversion* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !5052 {
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5059, metadata !DIExpression()), !dbg !5060
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5061, metadata !DIExpression()), !dbg !5062
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5063
  %8 = bitcast %struct.conversion* %7 to i24*, !dbg !5064
  %9 = load i24, i24* %8, align 4, !dbg !5064
  %10 = lshr i24 %9, 11, !dbg !5064
  %11 = and i24 %10, 15, !dbg !5064
  %12 = zext i24 %11 to i32, !dbg !5064
  switch i32 %12, label %48 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %44
  ], !dbg !5065

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4, !dbg !5066
  %15 = load i8*, i8** %5, align 4, !dbg !5068
  %16 = bitcast i8* %15 to i32*, !dbg !5069
  store i32 %14, i32* %16, align 4, !dbg !5070
  br label %49, !dbg !5071

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !5072
  %19 = trunc i32 %18 to i8, !dbg !5073
  %20 = load i8*, i8** %5, align 4, !dbg !5074
  store i8 %19, i8* %20, align 1, !dbg !5075
  br label %49, !dbg !5076

21:                                               ; preds = %3
  %22 = load i32, i32* %6, align 4, !dbg !5077
  %23 = trunc i32 %22 to i16, !dbg !5078
  %24 = load i8*, i8** %5, align 4, !dbg !5079
  %25 = bitcast i8* %24 to i16*, !dbg !5080
  store i16 %23, i16* %25, align 2, !dbg !5081
  br label %49, !dbg !5082

26:                                               ; preds = %3
  %27 = load i32, i32* %6, align 4, !dbg !5083
  %28 = load i8*, i8** %5, align 4, !dbg !5084
  %29 = bitcast i8* %28 to i32*, !dbg !5085
  store i32 %27, i32* %29, align 4, !dbg !5086
  br label %49, !dbg !5087

30:                                               ; preds = %3
  %31 = load i32, i32* %6, align 4, !dbg !5088
  %32 = sext i32 %31 to i64, !dbg !5089
  %33 = load i8*, i8** %5, align 4, !dbg !5090
  %34 = bitcast i8* %33 to i64*, !dbg !5091
  store i64 %32, i64* %34, align 8, !dbg !5092
  br label %49, !dbg !5093

35:                                               ; preds = %3
  %36 = load i32, i32* %6, align 4, !dbg !5094
  %37 = sext i32 %36 to i64, !dbg !5095
  %38 = load i8*, i8** %5, align 4, !dbg !5096
  %39 = bitcast i8* %38 to i64*, !dbg !5097
  store i64 %37, i64* %39, align 8, !dbg !5098
  br label %49, !dbg !5099

40:                                               ; preds = %3
  %41 = load i32, i32* %6, align 4, !dbg !5100
  %42 = load i8*, i8** %5, align 4, !dbg !5101
  %43 = bitcast i8* %42 to i32*, !dbg !5102
  store i32 %41, i32* %43, align 4, !dbg !5103
  br label %49, !dbg !5104

44:                                               ; preds = %3
  %45 = load i32, i32* %6, align 4, !dbg !5105
  %46 = load i8*, i8** %5, align 4, !dbg !5106
  %47 = bitcast i8* %46 to i32*, !dbg !5107
  store i32 %45, i32* %47, align 4, !dbg !5108
  br label %49, !dbg !5109

48:                                               ; preds = %3
  br label %49, !dbg !5110

49:                                               ; preds = %48, %44, %40, %35, %30, %26, %21, %17, %13
  ret void, !dbg !5111
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isupper(i32 noundef %0) #1 !dbg !5112 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = load i32, i32* %2, align 4, !dbg !5116
  %4 = sub i32 %3, 65, !dbg !5117
  %5 = icmp ult i32 %4, 26, !dbg !5118
  %6 = zext i1 %5 to i32, !dbg !5118
  ret i32 %6, !dbg !5119
}

; Function Attrs: noinline nounwind optnone
define internal i32 @conversion_radix(i8 noundef zeroext %0) #1 !dbg !5120 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5123, metadata !DIExpression()), !dbg !5124
  %4 = load i8, i8* %3, align 1, !dbg !5125
  %5 = zext i8 %4 to i32, !dbg !5125
  switch i32 %5, label %6 [
    i32 100, label %7
    i32 105, label %7
    i32 117, label %7
    i32 111, label %8
    i32 112, label %9
    i32 120, label %9
    i32 88, label %9
  ], !dbg !5126

6:                                                ; preds = %1
  br label %7, !dbg !5127

7:                                                ; preds = %1, %1, %1, %6
  store i32 10, i32* %2, align 4, !dbg !5128
  br label %10, !dbg !5128

8:                                                ; preds = %1
  store i32 8, i32* %2, align 4, !dbg !5130
  br label %10, !dbg !5130

9:                                                ; preds = %1, %1, %1
  store i32 16, i32* %2, align 4, !dbg !5131
  br label %10, !dbg !5131

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !5132
  ret i32 %11, !dbg !5132
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #7

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_flags(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5133 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5134, metadata !DIExpression()), !dbg !5135
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5136, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5138, metadata !DIExpression()), !dbg !5139
  store i8 1, i8* %5, align 1, !dbg !5139
  br label %6, !dbg !5140

6:                                                ; preds = %48, %2
  %7 = load i8*, i8** %4, align 4, !dbg !5141
  %8 = load i8, i8* %7, align 1, !dbg !5143
  %9 = zext i8 %8 to i32, !dbg !5143
  switch i32 %9, label %40 [
    i32 45, label %10
    i32 43, label %16
    i32 32, label %22
    i32 35, label %28
    i32 48, label %34
  ], !dbg !5144

10:                                               ; preds = %6
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5145
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5147
  %13 = load i24, i24* %12, align 4, !dbg !5148
  %14 = and i24 %13, -5, !dbg !5148
  %15 = or i24 %14, 4, !dbg !5148
  store i24 %15, i24* %12, align 4, !dbg !5148
  br label %41, !dbg !5149

16:                                               ; preds = %6
  %17 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5150
  %18 = bitcast %struct.conversion* %17 to i24*, !dbg !5151
  %19 = load i24, i24* %18, align 4, !dbg !5152
  %20 = and i24 %19, -9, !dbg !5152
  %21 = or i24 %20, 8, !dbg !5152
  store i24 %21, i24* %18, align 4, !dbg !5152
  br label %41, !dbg !5153

22:                                               ; preds = %6
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5154
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5155
  %25 = load i24, i24* %24, align 4, !dbg !5156
  %26 = and i24 %25, -17, !dbg !5156
  %27 = or i24 %26, 16, !dbg !5156
  store i24 %27, i24* %24, align 4, !dbg !5156
  br label %41, !dbg !5157

28:                                               ; preds = %6
  %29 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5158
  %30 = bitcast %struct.conversion* %29 to i24*, !dbg !5159
  %31 = load i24, i24* %30, align 4, !dbg !5160
  %32 = and i24 %31, -33, !dbg !5160
  %33 = or i24 %32, 32, !dbg !5160
  store i24 %33, i24* %30, align 4, !dbg !5160
  br label %41, !dbg !5161

34:                                               ; preds = %6
  %35 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5162
  %36 = bitcast %struct.conversion* %35 to i24*, !dbg !5163
  %37 = load i24, i24* %36, align 4, !dbg !5164
  %38 = and i24 %37, -65, !dbg !5164
  %39 = or i24 %38, 64, !dbg !5164
  store i24 %39, i24* %36, align 4, !dbg !5164
  br label %41, !dbg !5165

40:                                               ; preds = %6
  store i8 0, i8* %5, align 1, !dbg !5166
  br label %41, !dbg !5167

41:                                               ; preds = %40, %34, %28, %22, %16, %10
  %42 = load i8, i8* %5, align 1, !dbg !5168
  %43 = trunc i8 %42 to i1, !dbg !5168
  br i1 %43, label %44, label %47, !dbg !5170

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 4, !dbg !5171
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !5171
  store i8* %46, i8** %4, align 4, !dbg !5171
  br label %47, !dbg !5173

47:                                               ; preds = %44, %41
  br label %48, !dbg !5174

48:                                               ; preds = %47
  %49 = load i8, i8* %5, align 1, !dbg !5175
  %50 = trunc i8 %49 to i1, !dbg !5175
  br i1 %50, label %6, label %51, !dbg !5174, !llvm.loop !5176

51:                                               ; preds = %48
  %52 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5178
  %53 = bitcast %struct.conversion* %52 to i24*, !dbg !5180
  %54 = load i24, i24* %53, align 4, !dbg !5180
  %55 = lshr i24 %54, 6, !dbg !5180
  %56 = and i24 %55, 1, !dbg !5180
  %57 = trunc i24 %56 to i1, !dbg !5180
  br i1 %57, label %58, label %71, !dbg !5181

58:                                               ; preds = %51
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5182
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5183
  %61 = load i24, i24* %60, align 4, !dbg !5183
  %62 = lshr i24 %61, 2, !dbg !5183
  %63 = and i24 %62, 1, !dbg !5183
  %64 = trunc i24 %63 to i1, !dbg !5183
  br i1 %64, label %65, label %71, !dbg !5184

65:                                               ; preds = %58
  %66 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5185
  %67 = bitcast %struct.conversion* %66 to i24*, !dbg !5187
  %68 = load i24, i24* %67, align 4, !dbg !5188
  %69 = and i24 %68, -65, !dbg !5188
  %70 = or i24 %69, 0, !dbg !5188
  store i24 %70, i24* %67, align 4, !dbg !5188
  br label %71, !dbg !5189

71:                                               ; preds = %65, %58, %51
  %72 = load i8*, i8** %4, align 4, !dbg !5190
  ret i8* %72, !dbg !5191
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_width(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5192 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5193, metadata !DIExpression()), !dbg !5194
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5195, metadata !DIExpression()), !dbg !5196
  %8 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5197
  %9 = bitcast %struct.conversion* %8 to i24*, !dbg !5198
  %10 = load i24, i24* %9, align 4, !dbg !5199
  %11 = and i24 %10, -129, !dbg !5199
  %12 = or i24 %11, 128, !dbg !5199
  store i24 %12, i24* %9, align 4, !dbg !5199
  %13 = load i8*, i8** %5, align 4, !dbg !5200
  %14 = load i8, i8* %13, align 1, !dbg !5202
  %15 = zext i8 %14 to i32, !dbg !5202
  %16 = icmp eq i32 %15, 42, !dbg !5203
  br i1 %16, label %17, label %25, !dbg !5204

17:                                               ; preds = %2
  %18 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5205
  %19 = bitcast %struct.conversion* %18 to i24*, !dbg !5207
  %20 = load i24, i24* %19, align 4, !dbg !5208
  %21 = and i24 %20, -257, !dbg !5208
  %22 = or i24 %21, 256, !dbg !5208
  store i24 %22, i24* %19, align 4, !dbg !5208
  %23 = load i8*, i8** %5, align 4, !dbg !5209
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5209
  store i8* %24, i8** %5, align 4, !dbg !5209
  store i8* %24, i8** %3, align 4, !dbg !5210
  br label %74, !dbg !5210

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5211, metadata !DIExpression()), !dbg !5212
  %26 = load i8*, i8** %5, align 4, !dbg !5213
  store i8* %26, i8** %6, align 4, !dbg !5212
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5214, metadata !DIExpression()), !dbg !5215
  %27 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5216
  store i32 %27, i32* %7, align 4, !dbg !5215
  %28 = load i8*, i8** %5, align 4, !dbg !5217
  %29 = load i8*, i8** %6, align 4, !dbg !5219
  %30 = icmp ne i8* %28, %29, !dbg !5220
  br i1 %30, label %31, label %72, !dbg !5221

31:                                               ; preds = %25
  %32 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5222
  %33 = bitcast %struct.conversion* %32 to i24*, !dbg !5224
  %34 = load i24, i24* %33, align 4, !dbg !5225
  %35 = and i24 %34, -129, !dbg !5225
  %36 = or i24 %35, 128, !dbg !5225
  store i24 %36, i24* %33, align 4, !dbg !5225
  %37 = load i32, i32* %7, align 4, !dbg !5226
  %38 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5227
  %39 = getelementptr inbounds %struct.conversion, %struct.conversion* %38, i32 0, i32 2, !dbg !5228
  %40 = bitcast %union.anon.68* %39 to i32*, !dbg !5228
  store i32 %37, i32* %40, align 4, !dbg !5229
  %41 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5230
  %42 = getelementptr inbounds %struct.conversion, %struct.conversion* %41, i32 0, i32 2, !dbg !5231
  %43 = bitcast %union.anon.68* %42 to i32*, !dbg !5231
  %44 = load i32, i32* %43, align 4, !dbg !5231
  %45 = icmp slt i32 %44, 0, !dbg !5232
  br i1 %45, label %53, label %46, !dbg !5233

46:                                               ; preds = %31
  %47 = load i32, i32* %7, align 4, !dbg !5234
  %48 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5235
  %49 = getelementptr inbounds %struct.conversion, %struct.conversion* %48, i32 0, i32 2, !dbg !5236
  %50 = bitcast %union.anon.68* %49 to i32*, !dbg !5236
  %51 = load i32, i32* %50, align 4, !dbg !5236
  %52 = icmp ne i32 %47, %51, !dbg !5237
  br label %53, !dbg !5233

53:                                               ; preds = %46, %31
  %54 = phi i1 [ true, %31 ], [ %52, %46 ]
  %55 = zext i1 %54 to i32, !dbg !5233
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5238
  %57 = bitcast %struct.conversion* %56 to i24*, !dbg !5239
  %58 = load i24, i24* %57, align 4, !dbg !5240
  %59 = lshr i24 %58, 1, !dbg !5240
  %60 = and i24 %59, 1, !dbg !5240
  %61 = trunc i24 %60 to i1, !dbg !5240
  %62 = zext i1 %61 to i32, !dbg !5240
  %63 = or i32 %62, %55, !dbg !5240
  %64 = icmp ne i32 %63, 0, !dbg !5240
  %65 = zext i1 %64 to i24, !dbg !5240
  %66 = load i24, i24* %57, align 4, !dbg !5240
  %67 = shl i24 %65, 1, !dbg !5240
  %68 = and i24 %66, -3, !dbg !5240
  %69 = or i24 %68, %67, !dbg !5240
  store i24 %69, i24* %57, align 4, !dbg !5240
  %70 = trunc i24 %65 to i8, !dbg !5240
  %71 = trunc i8 %70 to i1, !dbg !5240
  br label %72, !dbg !5241

72:                                               ; preds = %53, %25
  %73 = load i8*, i8** %5, align 4, !dbg !5242
  store i8* %73, i8** %3, align 4, !dbg !5243
  br label %74, !dbg !5243

74:                                               ; preds = %72, %17
  %75 = load i8*, i8** %3, align 4, !dbg !5244
  ret i8* %75, !dbg !5244
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_prec(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5245 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5246, metadata !DIExpression()), !dbg !5247
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5248, metadata !DIExpression()), !dbg !5249
  %7 = load i8*, i8** %5, align 4, !dbg !5250
  %8 = load i8, i8* %7, align 1, !dbg !5251
  %9 = zext i8 %8 to i32, !dbg !5251
  %10 = icmp eq i32 %9, 46, !dbg !5252
  %11 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5253
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5254
  %13 = zext i1 %10 to i24, !dbg !5255
  %14 = load i24, i24* %12, align 4, !dbg !5255
  %15 = shl i24 %13, 9, !dbg !5255
  %16 = and i24 %14, -513, !dbg !5255
  %17 = or i24 %16, %15, !dbg !5255
  store i24 %17, i24* %12, align 4, !dbg !5255
  %18 = trunc i24 %13 to i8, !dbg !5255
  %19 = trunc i8 %18 to i1, !dbg !5255
  %20 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5256
  %21 = bitcast %struct.conversion* %20 to i24*, !dbg !5258
  %22 = load i24, i24* %21, align 4, !dbg !5258
  %23 = lshr i24 %22, 9, !dbg !5258
  %24 = and i24 %23, 1, !dbg !5258
  %25 = trunc i24 %24 to i1, !dbg !5258
  br i1 %25, label %28, label %26, !dbg !5259

26:                                               ; preds = %2
  %27 = load i8*, i8** %5, align 4, !dbg !5260
  store i8* %27, i8** %3, align 4, !dbg !5262
  br label %81, !dbg !5262

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 4, !dbg !5263
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5263
  store i8* %30, i8** %5, align 4, !dbg !5263
  %31 = load i8*, i8** %5, align 4, !dbg !5264
  %32 = load i8, i8* %31, align 1, !dbg !5266
  %33 = zext i8 %32 to i32, !dbg !5266
  %34 = icmp eq i32 %33, 42, !dbg !5267
  br i1 %34, label %35, label %43, !dbg !5268

35:                                               ; preds = %28
  %36 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5269
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5271
  %38 = load i24, i24* %37, align 4, !dbg !5272
  %39 = and i24 %38, -1025, !dbg !5272
  %40 = or i24 %39, 1024, !dbg !5272
  store i24 %40, i24* %37, align 4, !dbg !5272
  %41 = load i8*, i8** %5, align 4, !dbg !5273
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5273
  store i8* %42, i8** %5, align 4, !dbg !5273
  store i8* %42, i8** %3, align 4, !dbg !5274
  br label %81, !dbg !5274

43:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5275, metadata !DIExpression()), !dbg !5276
  %44 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5277
  store i32 %44, i32* %6, align 4, !dbg !5276
  %45 = load i32, i32* %6, align 4, !dbg !5278
  %46 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5279
  %47 = getelementptr inbounds %struct.conversion, %struct.conversion* %46, i32 0, i32 3, !dbg !5280
  %48 = bitcast %union.anon.68* %47 to i32*, !dbg !5280
  store i32 %45, i32* %48, align 4, !dbg !5281
  %49 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5282
  %50 = getelementptr inbounds %struct.conversion, %struct.conversion* %49, i32 0, i32 3, !dbg !5283
  %51 = bitcast %union.anon.68* %50 to i32*, !dbg !5283
  %52 = load i32, i32* %51, align 4, !dbg !5283
  %53 = icmp slt i32 %52, 0, !dbg !5284
  br i1 %53, label %61, label %54, !dbg !5285

54:                                               ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !5286
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5287
  %57 = getelementptr inbounds %struct.conversion, %struct.conversion* %56, i32 0, i32 3, !dbg !5288
  %58 = bitcast %union.anon.68* %57 to i32*, !dbg !5288
  %59 = load i32, i32* %58, align 4, !dbg !5288
  %60 = icmp ne i32 %55, %59, !dbg !5289
  br label %61, !dbg !5285

61:                                               ; preds = %54, %43
  %62 = phi i1 [ true, %43 ], [ %60, %54 ]
  %63 = zext i1 %62 to i32, !dbg !5285
  %64 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5290
  %65 = bitcast %struct.conversion* %64 to i24*, !dbg !5291
  %66 = load i24, i24* %65, align 4, !dbg !5292
  %67 = lshr i24 %66, 1, !dbg !5292
  %68 = and i24 %67, 1, !dbg !5292
  %69 = trunc i24 %68 to i1, !dbg !5292
  %70 = zext i1 %69 to i32, !dbg !5292
  %71 = or i32 %70, %63, !dbg !5292
  %72 = icmp ne i32 %71, 0, !dbg !5292
  %73 = zext i1 %72 to i24, !dbg !5292
  %74 = load i24, i24* %65, align 4, !dbg !5292
  %75 = shl i24 %73, 1, !dbg !5292
  %76 = and i24 %74, -3, !dbg !5292
  %77 = or i24 %76, %75, !dbg !5292
  store i24 %77, i24* %65, align 4, !dbg !5292
  %78 = trunc i24 %73 to i8, !dbg !5292
  %79 = trunc i8 %78 to i1, !dbg !5292
  %80 = load i8*, i8** %5, align 4, !dbg !5293
  store i8* %80, i8** %3, align 4, !dbg !5294
  br label %81, !dbg !5294

81:                                               ; preds = %61, %35, %26
  %82 = load i8*, i8** %3, align 4, !dbg !5295
  ret i8* %82, !dbg !5295
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_length(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5296 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5297, metadata !DIExpression()), !dbg !5298
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5299, metadata !DIExpression()), !dbg !5300
  %5 = load i8*, i8** %4, align 4, !dbg !5301
  %6 = load i8, i8* %5, align 1, !dbg !5302
  %7 = zext i8 %6 to i32, !dbg !5302
  switch i32 %7, label %87 [
    i32 104, label %8
    i32 108, label %29
    i32 106, label %50
    i32 122, label %58
    i32 116, label %66
    i32 76, label %74
  ], !dbg !5303

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 4, !dbg !5304
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5304
  store i8* %10, i8** %4, align 4, !dbg !5304
  %11 = load i8, i8* %10, align 1, !dbg !5307
  %12 = zext i8 %11 to i32, !dbg !5307
  %13 = icmp eq i32 %12, 104, !dbg !5308
  br i1 %13, label %14, label %22, !dbg !5309

14:                                               ; preds = %8
  %15 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5310
  %16 = bitcast %struct.conversion* %15 to i24*, !dbg !5312
  %17 = load i24, i24* %16, align 4, !dbg !5313
  %18 = and i24 %17, -30721, !dbg !5313
  %19 = or i24 %18, 2048, !dbg !5313
  store i24 %19, i24* %16, align 4, !dbg !5313
  %20 = load i8*, i8** %4, align 4, !dbg !5314
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5314
  store i8* %21, i8** %4, align 4, !dbg !5314
  br label %28, !dbg !5315

22:                                               ; preds = %8
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5316
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5318
  %25 = load i24, i24* %24, align 4, !dbg !5319
  %26 = and i24 %25, -30721, !dbg !5319
  %27 = or i24 %26, 4096, !dbg !5319
  store i24 %27, i24* %24, align 4, !dbg !5319
  br label %28

28:                                               ; preds = %22, %14
  br label %93, !dbg !5320

29:                                               ; preds = %2
  %30 = load i8*, i8** %4, align 4, !dbg !5321
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5321
  store i8* %31, i8** %4, align 4, !dbg !5321
  %32 = load i8, i8* %31, align 1, !dbg !5323
  %33 = zext i8 %32 to i32, !dbg !5323
  %34 = icmp eq i32 %33, 108, !dbg !5324
  br i1 %34, label %35, label %43, !dbg !5325

35:                                               ; preds = %29
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5326
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5328
  %38 = load i24, i24* %37, align 4, !dbg !5329
  %39 = and i24 %38, -30721, !dbg !5329
  %40 = or i24 %39, 8192, !dbg !5329
  store i24 %40, i24* %37, align 4, !dbg !5329
  %41 = load i8*, i8** %4, align 4, !dbg !5330
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5330
  store i8* %42, i8** %4, align 4, !dbg !5330
  br label %49, !dbg !5331

43:                                               ; preds = %29
  %44 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5332
  %45 = bitcast %struct.conversion* %44 to i24*, !dbg !5334
  %46 = load i24, i24* %45, align 4, !dbg !5335
  %47 = and i24 %46, -30721, !dbg !5335
  %48 = or i24 %47, 6144, !dbg !5335
  store i24 %48, i24* %45, align 4, !dbg !5335
  br label %49

49:                                               ; preds = %43, %35
  br label %93, !dbg !5336

50:                                               ; preds = %2
  %51 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5337
  %52 = bitcast %struct.conversion* %51 to i24*, !dbg !5338
  %53 = load i24, i24* %52, align 4, !dbg !5339
  %54 = and i24 %53, -30721, !dbg !5339
  %55 = or i24 %54, 10240, !dbg !5339
  store i24 %55, i24* %52, align 4, !dbg !5339
  %56 = load i8*, i8** %4, align 4, !dbg !5340
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5340
  store i8* %57, i8** %4, align 4, !dbg !5340
  br label %93, !dbg !5341

58:                                               ; preds = %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5342
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5343
  %61 = load i24, i24* %60, align 4, !dbg !5344
  %62 = and i24 %61, -30721, !dbg !5344
  %63 = or i24 %62, 12288, !dbg !5344
  store i24 %63, i24* %60, align 4, !dbg !5344
  %64 = load i8*, i8** %4, align 4, !dbg !5345
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !5345
  store i8* %65, i8** %4, align 4, !dbg !5345
  br label %93, !dbg !5346

66:                                               ; preds = %2
  %67 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5347
  %68 = bitcast %struct.conversion* %67 to i24*, !dbg !5348
  %69 = load i24, i24* %68, align 4, !dbg !5349
  %70 = and i24 %69, -30721, !dbg !5349
  %71 = or i24 %70, 14336, !dbg !5349
  store i24 %71, i24* %68, align 4, !dbg !5349
  %72 = load i8*, i8** %4, align 4, !dbg !5350
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !5350
  store i8* %73, i8** %4, align 4, !dbg !5350
  br label %93, !dbg !5351

74:                                               ; preds = %2
  %75 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5352
  %76 = bitcast %struct.conversion* %75 to i24*, !dbg !5353
  %77 = load i24, i24* %76, align 4, !dbg !5354
  %78 = and i24 %77, -30721, !dbg !5354
  %79 = or i24 %78, 16384, !dbg !5354
  store i24 %79, i24* %76, align 4, !dbg !5354
  %80 = load i8*, i8** %4, align 4, !dbg !5355
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !5355
  store i8* %81, i8** %4, align 4, !dbg !5355
  %82 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5356
  %83 = bitcast %struct.conversion* %82 to i24*, !dbg !5357
  %84 = load i24, i24* %83, align 4, !dbg !5358
  %85 = and i24 %84, -3, !dbg !5358
  %86 = or i24 %85, 2, !dbg !5358
  store i24 %86, i24* %83, align 4, !dbg !5358
  br label %93, !dbg !5359

87:                                               ; preds = %2
  %88 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5360
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !5361
  %90 = load i24, i24* %89, align 4, !dbg !5362
  %91 = and i24 %90, -30721, !dbg !5362
  %92 = or i24 %91, 0, !dbg !5362
  store i24 %92, i24* %89, align 4, !dbg !5362
  br label %93, !dbg !5363

93:                                               ; preds = %87, %74, %66, %58, %50, %49, %28
  %94 = load i8*, i8** %4, align 4, !dbg !5364
  ret i8* %94, !dbg !5365
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_specifier(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5366 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5367, metadata !DIExpression()), !dbg !5368
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5369, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i8 0, i8* %5, align 1, !dbg !5372
  %6 = load i8*, i8** %4, align 4, !dbg !5373
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5373
  store i8* %7, i8** %4, align 4, !dbg !5373
  %8 = load i8, i8* %6, align 1, !dbg !5374
  %9 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5375
  %10 = getelementptr inbounds %struct.conversion, %struct.conversion* %9, i32 0, i32 1, !dbg !5376
  store i8 %8, i8* %10, align 1, !dbg !5377
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5378
  %12 = getelementptr inbounds %struct.conversion, %struct.conversion* %11, i32 0, i32 1, !dbg !5379
  %13 = load i8, i8* %12, align 1, !dbg !5379
  %14 = zext i8 %13 to i32, !dbg !5378
  switch i32 %14, label %94 [
    i32 100, label %15
    i32 105, label %15
    i32 111, label %21
    i32 99, label %21
    i32 117, label %21
    i32 120, label %21
    i32 88, label %21
    i32 97, label %58
    i32 65, label %58
    i32 101, label %58
    i32 69, label %58
    i32 102, label %58
    i32 70, label %58
    i32 103, label %58
    i32 71, label %58
    i32 110, label %64
    i32 115, label %79
    i32 112, label %79
  ], !dbg !5380

15:                                               ; preds = %2, %2
  %16 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5381
  %17 = bitcast %struct.conversion* %16 to i24*, !dbg !5383
  %18 = load i24, i24* %17, align 4, !dbg !5384
  %19 = and i24 %18, -458753, !dbg !5384
  %20 = or i24 %19, 65536, !dbg !5384
  store i24 %20, i24* %17, align 4, !dbg !5384
  br label %27, !dbg !5385

21:                                               ; preds = %2, %2, %2, %2, %2
  %22 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5386
  %23 = bitcast %struct.conversion* %22 to i24*, !dbg !5387
  %24 = load i24, i24* %23, align 4, !dbg !5388
  %25 = and i24 %24, -458753, !dbg !5388
  %26 = or i24 %25, 131072, !dbg !5388
  store i24 %26, i24* %23, align 4, !dbg !5388
  br label %27, !dbg !5386

27:                                               ; preds = %21, %15
  call void @llvm.dbg.label(metadata !5389), !dbg !5390
  %28 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5391
  %29 = bitcast %struct.conversion* %28 to i24*, !dbg !5393
  %30 = load i24, i24* %29, align 4, !dbg !5393
  %31 = lshr i24 %30, 11, !dbg !5393
  %32 = and i24 %31, 15, !dbg !5393
  %33 = zext i24 %32 to i32, !dbg !5393
  %34 = icmp eq i32 %33, 8, !dbg !5394
  br i1 %34, label %35, label %41, !dbg !5395

35:                                               ; preds = %27
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5396
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5398
  %38 = load i24, i24* %37, align 4, !dbg !5399
  %39 = and i24 %38, -2, !dbg !5399
  %40 = or i24 %39, 1, !dbg !5399
  store i24 %40, i24* %37, align 4, !dbg !5399
  br label %41, !dbg !5400

41:                                               ; preds = %35, %27
  %42 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5401
  %43 = getelementptr inbounds %struct.conversion, %struct.conversion* %42, i32 0, i32 1, !dbg !5403
  %44 = load i8, i8* %43, align 1, !dbg !5403
  %45 = zext i8 %44 to i32, !dbg !5401
  %46 = icmp eq i32 %45, 99, !dbg !5404
  br i1 %46, label %47, label %56, !dbg !5405

47:                                               ; preds = %41
  %48 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5406
  %49 = bitcast %struct.conversion* %48 to i24*, !dbg !5408
  %50 = load i24, i24* %49, align 4, !dbg !5408
  %51 = lshr i24 %50, 11, !dbg !5408
  %52 = and i24 %51, 15, !dbg !5408
  %53 = zext i24 %52 to i32, !dbg !5408
  %54 = icmp ne i32 %53, 0, !dbg !5409
  %55 = zext i1 %54 to i8, !dbg !5410
  store i8 %55, i8* %5, align 1, !dbg !5410
  br label %57, !dbg !5411

56:                                               ; preds = %41
  br label %57

57:                                               ; preds = %56, %47
  br label %100, !dbg !5412

58:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5413
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5414
  %61 = load i24, i24* %60, align 4, !dbg !5415
  %62 = and i24 %61, -458753, !dbg !5415
  %63 = or i24 %62, 262144, !dbg !5415
  store i24 %63, i24* %60, align 4, !dbg !5415
  store i8 1, i8* %5, align 1, !dbg !5416
  br label %100, !dbg !5419

64:                                               ; preds = %2
  %65 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5420
  %66 = bitcast %struct.conversion* %65 to i24*, !dbg !5421
  %67 = load i24, i24* %66, align 4, !dbg !5422
  %68 = and i24 %67, -458753, !dbg !5422
  %69 = or i24 %68, 196608, !dbg !5422
  store i24 %69, i24* %66, align 4, !dbg !5422
  %70 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5423
  %71 = bitcast %struct.conversion* %70 to i24*, !dbg !5425
  %72 = load i24, i24* %71, align 4, !dbg !5425
  %73 = lshr i24 %72, 11, !dbg !5425
  %74 = and i24 %73, 15, !dbg !5425
  %75 = zext i24 %74 to i32, !dbg !5425
  %76 = icmp eq i32 %75, 8, !dbg !5426
  br i1 %76, label %77, label %78, !dbg !5427

77:                                               ; preds = %64
  store i8 1, i8* %5, align 1, !dbg !5428
  br label %78, !dbg !5430

78:                                               ; preds = %77, %64
  br label %100, !dbg !5431

79:                                               ; preds = %2, %2
  %80 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5432
  %81 = bitcast %struct.conversion* %80 to i24*, !dbg !5433
  %82 = load i24, i24* %81, align 4, !dbg !5434
  %83 = and i24 %82, -458753, !dbg !5434
  %84 = or i24 %83, 196608, !dbg !5434
  store i24 %84, i24* %81, align 4, !dbg !5434
  %85 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5435
  %86 = bitcast %struct.conversion* %85 to i24*, !dbg !5437
  %87 = load i24, i24* %86, align 4, !dbg !5437
  %88 = lshr i24 %87, 11, !dbg !5437
  %89 = and i24 %88, 15, !dbg !5437
  %90 = zext i24 %89 to i32, !dbg !5437
  %91 = icmp ne i32 %90, 0, !dbg !5438
  br i1 %91, label %92, label %93, !dbg !5439

92:                                               ; preds = %79
  store i8 1, i8* %5, align 1, !dbg !5440
  br label %93, !dbg !5442

93:                                               ; preds = %92, %79
  br label %100, !dbg !5443

94:                                               ; preds = %2
  %95 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5444
  %96 = bitcast %struct.conversion* %95 to i24*, !dbg !5445
  %97 = load i24, i24* %96, align 4, !dbg !5446
  %98 = and i24 %97, -2, !dbg !5446
  %99 = or i24 %98, 1, !dbg !5446
  store i24 %99, i24* %96, align 4, !dbg !5446
  br label %100, !dbg !5447

100:                                              ; preds = %94, %93, %78, %58, %57
  %101 = load i8, i8* %5, align 1, !dbg !5448
  %102 = trunc i8 %101 to i1, !dbg !5448
  %103 = zext i1 %102 to i32, !dbg !5448
  %104 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5449
  %105 = bitcast %struct.conversion* %104 to i24*, !dbg !5450
  %106 = load i24, i24* %105, align 4, !dbg !5451
  %107 = lshr i24 %106, 1, !dbg !5451
  %108 = and i24 %107, 1, !dbg !5451
  %109 = trunc i24 %108 to i1, !dbg !5451
  %110 = zext i1 %109 to i32, !dbg !5451
  %111 = or i32 %110, %103, !dbg !5451
  %112 = icmp ne i32 %111, 0, !dbg !5451
  %113 = zext i1 %112 to i24, !dbg !5451
  %114 = load i24, i24* %105, align 4, !dbg !5451
  %115 = shl i24 %113, 1, !dbg !5451
  %116 = and i24 %114, -3, !dbg !5451
  %117 = or i24 %116, %115, !dbg !5451
  store i24 %117, i24* %105, align 4, !dbg !5451
  %118 = trunc i24 %113 to i8, !dbg !5451
  %119 = trunc i8 %118 to i1, !dbg !5451
  %120 = load i8*, i8** %4, align 4, !dbg !5452
  ret i8* %120, !dbg !5453
}

; Function Attrs: noinline nounwind optnone
define internal i32 @extract_decimal(i8** noundef %0) #1 !dbg !5454 {
  %2 = alloca i8**, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !5458, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5460, metadata !DIExpression()), !dbg !5461
  %5 = load i8**, i8*** %2, align 4, !dbg !5462
  %6 = load i8*, i8** %5, align 4, !dbg !5463
  store i8* %6, i8** %3, align 4, !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5464, metadata !DIExpression()), !dbg !5465
  store i32 0, i32* %4, align 4, !dbg !5465
  br label %7, !dbg !5466

7:                                                ; preds = %13, %1
  %8 = load i8*, i8** %3, align 4, !dbg !5467
  %9 = load i8, i8* %8, align 1, !dbg !5468
  %10 = zext i8 %9 to i32, !dbg !5469
  %11 = call i32 @isdigit(i32 noundef %10) #10, !dbg !5470
  %12 = icmp ne i32 %11, 0, !dbg !5466
  br i1 %12, label %13, label %22, !dbg !5466

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !5471
  %15 = mul i32 10, %14, !dbg !5473
  %16 = load i8*, i8** %3, align 4, !dbg !5474
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5474
  store i8* %17, i8** %3, align 4, !dbg !5474
  %18 = load i8, i8* %16, align 1, !dbg !5475
  %19 = zext i8 %18 to i32, !dbg !5475
  %20 = add i32 %15, %19, !dbg !5476
  %21 = sub i32 %20, 48, !dbg !5477
  store i32 %21, i32* %4, align 4, !dbg !5478
  br label %7, !dbg !5466, !llvm.loop !5479

22:                                               ; preds = %7
  %23 = load i8*, i8** %3, align 4, !dbg !5481
  %24 = load i8**, i8*** %2, align 4, !dbg !5482
  store i8* %23, i8** %24, align 4, !dbg !5483
  %25 = load i32, i32* %4, align 4, !dbg !5484
  ret i32 %25, !dbg !5485
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isdigit(i32 noundef %0) #1 !dbg !5486 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5487, metadata !DIExpression()), !dbg !5488
  %3 = load i32, i32* %2, align 4, !dbg !5489
  %4 = sub i32 %3, 48, !dbg !5490
  %5 = icmp ult i32 %4, 10, !dbg !5491
  %6 = zext i1 %5 to i32, !dbg !5491
  ret i32 %6, !dbg !5492
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_ConfigAbsSyms() #1 !dbg !5493 {
  call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #9, !dbg !5495, !srcloc !5496
  call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #9, !dbg !5497, !srcloc !5498
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #9, !dbg !5499, !srcloc !5500
  call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,28\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #9, !dbg !5501, !srcloc !5502
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,48000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #9, !dbg !5503, !srcloc !5504
  call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,256\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #9, !dbg !5505, !srcloc !5506
  call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #9, !dbg !5507, !srcloc !5508
  call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #9, !dbg !5509, !srcloc !5510
  call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #9, !dbg !5511, !srcloc !5512
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #9, !dbg !5513, !srcloc !5514
  call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #9, !dbg !5515, !srcloc !5516
  call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #9, !dbg !5517, !srcloc !5518
  call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #9, !dbg !5519, !srcloc !5520
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #9, !dbg !5521, !srcloc !5522
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #9, !dbg !5523, !srcloc !5524
  call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #9, !dbg !5525, !srcloc !5526
  call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #9, !dbg !5527, !srcloc !5528
  call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #9, !dbg !5529, !srcloc !5530
  call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #9, !dbg !5531, !srcloc !5532
  call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #9, !dbg !5533, !srcloc !5534
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,%object", ""() #9, !dbg !5535, !srcloc !5536
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,%object", ""() #9, !dbg !5537, !srcloc !5538
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,%object", ""() #9, !dbg !5539, !srcloc !5540
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,%object", ""() #9, !dbg !5541, !srcloc !5542
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,%object", ""() #9, !dbg !5543, !srcloc !5544
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,%object", ""() #9, !dbg !5545, !srcloc !5546
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,%object", ""() #9, !dbg !5547, !srcloc !5548
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_I2C_ENABLED,%object", ""() #9, !dbg !5549, !srcloc !5550
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,%object", ""() #9, !dbg !5551, !srcloc !5552
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,%object", ""() #9, !dbg !5553, !srcloc !5554
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,%object", ""() #9, !dbg !5555, !srcloc !5556
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,%object", ""() #9, !dbg !5557, !srcloc !5558
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,%object", ""() #9, !dbg !5559, !srcloc !5560
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,%object", ""() #9, !dbg !5561, !srcloc !5562
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,%object", ""() #9, !dbg !5563, !srcloc !5564
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,%object", ""() #9, !dbg !5565, !srcloc !5566
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,%object", ""() #9, !dbg !5567, !srcloc !5568
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,%object", ""() #9, !dbg !5569, !srcloc !5570
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,%object", ""() #9, !dbg !5571, !srcloc !5572
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #9, !dbg !5573, !srcloc !5574
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #9, !dbg !5575, !srcloc !5576
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #9, !dbg !5577, !srcloc !5578
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #9, !dbg !5579, !srcloc !5580
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #9, !dbg !5581, !srcloc !5582
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #9, !dbg !5583, !srcloc !5584
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #9, !dbg !5585, !srcloc !5586
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #9, !dbg !5587, !srcloc !5588
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #9, !dbg !5589, !srcloc !5590
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #9, !dbg !5591, !srcloc !5592
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #9, !dbg !5593, !srcloc !5594
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #9, !dbg !5595, !srcloc !5596
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #9, !dbg !5597, !srcloc !5598
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #9, !dbg !5599, !srcloc !5600
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #9, !dbg !5601, !srcloc !5602
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #9, !dbg !5603, !srcloc !5604
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #9, !dbg !5605, !srcloc !5606
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #9, !dbg !5607, !srcloc !5608
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #9, !dbg !5609, !srcloc !5610
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #9, !dbg !5611, !srcloc !5612
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #9, !dbg !5613, !srcloc !5614
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #9, !dbg !5615, !srcloc !5616
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #9, !dbg !5617, !srcloc !5618
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #9, !dbg !5619, !srcloc !5620
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #9, !dbg !5621, !srcloc !5622
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #9, !dbg !5623, !srcloc !5624
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #9, !dbg !5625, !srcloc !5626
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #9, !dbg !5627, !srcloc !5628
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #9, !dbg !5629, !srcloc !5630
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #9, !dbg !5631, !srcloc !5632
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #9, !dbg !5633, !srcloc !5634
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #9, !dbg !5635, !srcloc !5636
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #9, !dbg !5637, !srcloc !5638
  call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #9, !dbg !5639, !srcloc !5640
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #9, !dbg !5641, !srcloc !5642
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #9, !dbg !5643, !srcloc !5644
  call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #9, !dbg !5645, !srcloc !5646
  call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_M0_LORA\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_M0_LORA,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_M0_LORA,%object", ""() #9, !dbg !5647, !srcloc !5648
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAMD21\0A\09.equ\09CONFIG_SOC_SERIES_SAMD21,1\0A\09.type\09CONFIG_SOC_SERIES_SAMD21,%object", ""() #9, !dbg !5649, !srcloc !5650
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #9, !dbg !5651, !srcloc !5652
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM0\0A\09.equ\09CONFIG_SOC_FAMILY_SAM0,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM0,%object", ""() #9, !dbg !5653, !srcloc !5654
  call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD_XOSC32K\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD_XOSC32K,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD_XOSC32K,%object", ""() #9, !dbg !5655, !srcloc !5656
  call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD_XOSC32K_AS_MAIN,%object", ""() #9, !dbg !5657, !srcloc !5658
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAMD21G18A\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAMD21G18A,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAMD21G18A,%object", ""() #9, !dbg !5659, !srcloc !5660
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_REVISION\0A\09.equ\09CONFIG_SOC_SERIES_REVISION,1\0A\09.type\09CONFIG_SOC_SERIES_REVISION,%object", ""() #9, !dbg !5661, !srcloc !5662
  call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #9, !dbg !5663, !srcloc !5664
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #9, !dbg !5665, !srcloc !5666
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #9, !dbg !5667, !srcloc !5668
  call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #9, !dbg !5669, !srcloc !5670
  call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #9, !dbg !5671, !srcloc !5672
  call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #9, !dbg !5673, !srcloc !5674
  call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #9, !dbg !5675, !srcloc !5676
  call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #9, !dbg !5677, !srcloc !5678
  call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #9, !dbg !5679, !srcloc !5680
  call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #9, !dbg !5681, !srcloc !5682
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M0PLUS\0A\09.equ\09CONFIG_CPU_CORTEX_M0PLUS,1\0A\09.type\09CONFIG_CPU_CORTEX_M0PLUS,%object", ""() #9, !dbg !5683, !srcloc !5684
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #9, !dbg !5685, !srcloc !5686
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #9, !dbg !5687, !srcloc !5688
  call void asm sideeffect ".globl\09CONFIG_ARMV6_M_ARMV8_M_BASELINE\0A\09.equ\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,1\0A\09.type\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,%object", ""() #9, !dbg !5689, !srcloc !5690
  call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #9, !dbg !5691, !srcloc !5692
  call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #9, !dbg !5693, !srcloc !5694
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #9, !dbg !5695, !srcloc !5696
  call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #9, !dbg !5697, !srcloc !5698
  call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #9, !dbg !5699, !srcloc !5700
  call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #9, !dbg !5701, !srcloc !5702
  call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #9, !dbg !5703, !srcloc !5704
  call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #9, !dbg !5705, !srcloc !5706
  call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #9, !dbg !5707, !srcloc !5708
  call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #9, !dbg !5709, !srcloc !5710
  call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #9, !dbg !5711, !srcloc !5712
  call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #9, !dbg !5713, !srcloc !5714
  call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #9, !dbg !5715, !srcloc !5716
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #9, !dbg !5717, !srcloc !5718
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #9, !dbg !5719, !srcloc !5720
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #9, !dbg !5721, !srcloc !5722
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #9, !dbg !5723, !srcloc !5724
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #9, !dbg !5725, !srcloc !5726
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #9, !dbg !5727, !srcloc !5728
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #9, !dbg !5729, !srcloc !5730
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5731, !srcloc !5732
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #9, !dbg !5733, !srcloc !5734
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #9, !dbg !5735, !srcloc !5736
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #9, !dbg !5737, !srcloc !5738
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #9, !dbg !5739, !srcloc !5740
  call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #9, !dbg !5741, !srcloc !5742
  call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #9, !dbg !5743, !srcloc !5744
  call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #9, !dbg !5745, !srcloc !5746
  call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #9, !dbg !5747, !srcloc !5748
  call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #9, !dbg !5749, !srcloc !5750
  call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #9, !dbg !5751, !srcloc !5752
  call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #9, !dbg !5753, !srcloc !5754
  call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #9, !dbg !5755, !srcloc !5756
  call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #9, !dbg !5757, !srcloc !5758
  call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #9, !dbg !5759, !srcloc !5760
  call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #9, !dbg !5761, !srcloc !5762
  call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #9, !dbg !5763, !srcloc !5764
  call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #9, !dbg !5765, !srcloc !5766
  call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #9, !dbg !5767, !srcloc !5768
  call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #9, !dbg !5769, !srcloc !5770
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #9, !dbg !5771, !srcloc !5772
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #9, !dbg !5773, !srcloc !5774
  call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_C\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_C,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_C,%object", ""() #9, !dbg !5775, !srcloc !5776
  call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #9, !dbg !5777, !srcloc !5778
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #9, !dbg !5779, !srcloc !5780
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #9, !dbg !5781, !srcloc !5782
  call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #9, !dbg !5783, !srcloc !5784
  call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #9, !dbg !5785, !srcloc !5786
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #9, !dbg !5787, !srcloc !5788
  call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #9, !dbg !5789, !srcloc !5790
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #9, !dbg !5791, !srcloc !5792
  call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #9, !dbg !5793, !srcloc !5794
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #9, !dbg !5795, !srcloc !5796
  call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #9, !dbg !5797, !srcloc !5798
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #9, !dbg !5799, !srcloc !5800
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #9, !dbg !5801, !srcloc !5802
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #9, !dbg !5803, !srcloc !5804
  call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #9, !dbg !5805, !srcloc !5806
  call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #9, !dbg !5807, !srcloc !5808
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #9, !dbg !5809, !srcloc !5810
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5811, !srcloc !5812
  call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #9, !dbg !5813, !srcloc !5814
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #9, !dbg !5815, !srcloc !5816
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #9, !dbg !5817, !srcloc !5818
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #9, !dbg !5819, !srcloc !5820
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #9, !dbg !5821, !srcloc !5822
  call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #9, !dbg !5823, !srcloc !5824
  call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #9, !dbg !5825, !srcloc !5826
  call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #9, !dbg !5827, !srcloc !5828
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #9, !dbg !5829, !srcloc !5830
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #9, !dbg !5831, !srcloc !5832
  call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #9, !dbg !5833, !srcloc !5834
  call void asm sideeffect ".globl\09CONFIG_UART_SAM0\0A\09.equ\09CONFIG_UART_SAM0,1\0A\09.type\09CONFIG_UART_SAM0,%object", ""() #9, !dbg !5835, !srcloc !5836
  call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #9, !dbg !5837, !srcloc !5838
  call void asm sideeffect ".globl\09CONFIG_SAM0_EIC\0A\09.equ\09CONFIG_SAM0_EIC,1\0A\09.type\09CONFIG_SAM0_EIC,%object", ""() #9, !dbg !5839, !srcloc !5840
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #9, !dbg !5841, !srcloc !5842
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #9, !dbg !5843, !srcloc !5844
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #9, !dbg !5845, !srcloc !5846
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #9, !dbg !5847, !srcloc !5848
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM0\0A\09.equ\09CONFIG_PINCTRL_SAM0,1\0A\09.type\09CONFIG_PINCTRL_SAM0,%object", ""() #9, !dbg !5849, !srcloc !5850
  call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #9, !dbg !5851, !srcloc !5852
  call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #9, !dbg !5853, !srcloc !5854
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #9, !dbg !5855, !srcloc !5856
  call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #9, !dbg !5857, !srcloc !5858
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #9, !dbg !5859, !srcloc !5860
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #9, !dbg !5861, !srcloc !5862
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #9, !dbg !5863, !srcloc !5864
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #9, !dbg !5865, !srcloc !5866
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #9, !dbg !5867, !srcloc !5868
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #9, !dbg !5869, !srcloc !5870
  call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #9, !dbg !5871, !srcloc !5872
  call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #9, !dbg !5873, !srcloc !5874
  call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #9, !dbg !5875, !srcloc !5876
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #9, !dbg !5877, !srcloc !5878
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #9, !dbg !5879, !srcloc !5880
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #9, !dbg !5881, !srcloc !5882
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #9, !dbg !5883, !srcloc !5884
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #9, !dbg !5885, !srcloc !5886
  call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #9, !dbg !5887, !srcloc !5888
  call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #9, !dbg !5889, !srcloc !5890
  call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #9, !dbg !5891, !srcloc !5892
  call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #9, !dbg !5893, !srcloc !5894
  call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #9, !dbg !5895, !srcloc !5896
  call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #9, !dbg !5897, !srcloc !5898
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #9, !dbg !5899, !srcloc !5900
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5901, !srcloc !5902
  call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #9, !dbg !5903, !srcloc !5904
  call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5905, !srcloc !5906
  call void asm sideeffect ".globl\09CONFIG_USE_DT_CODE_PARTITION\0A\09.equ\09CONFIG_USE_DT_CODE_PARTITION,1\0A\09.type\09CONFIG_USE_DT_CODE_PARTITION,%object", ""() #9, !dbg !5907, !srcloc !5908
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x2000\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5909, !srcloc !5910
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x3a000\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #9, !dbg !5911, !srcloc !5912
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #9, !dbg !5913, !srcloc !5914
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #9, !dbg !5915, !srcloc !5916
  call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #9, !dbg !5917, !srcloc !5918
  call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #9, !dbg !5919, !srcloc !5920
  call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #9, !dbg !5921, !srcloc !5922
  call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #9, !dbg !5923, !srcloc !5924
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #9, !dbg !5925, !srcloc !5926
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #9, !dbg !5927, !srcloc !5928
  call void asm sideeffect ".globl\09CONFIG_NO_OPTIMIZATIONS\0A\09.equ\09CONFIG_NO_OPTIMIZATIONS,1\0A\09.type\09CONFIG_NO_OPTIMIZATIONS,%object", ""() #9, !dbg !5929, !srcloc !5930
  call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #9, !dbg !5931, !srcloc !5932
  call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #9, !dbg !5933, !srcloc !5934
  call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #9, !dbg !5935, !srcloc !5936
  call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #9, !dbg !5937, !srcloc !5938
  call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #9, !dbg !5939, !srcloc !5940
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #9, !dbg !5941, !srcloc !5942
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #9, !dbg !5943, !srcloc !5944
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #9, !dbg !5945, !srcloc !5946
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #9, !dbg !5947, !srcloc !5948
  call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #9, !dbg !5949, !srcloc !5950
  call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #9, !dbg !5951, !srcloc !5952
  call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #9, !dbg !5953, !srcloc !5954
  ret void, !dbg !5955
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !5956 {
  %4 = alloca %struct.PortGroup*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  store %struct.PortGroup* %0, %struct.PortGroup** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %4, metadata !6111, metadata !DIExpression()), !dbg !6112
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6113, metadata !DIExpression()), !dbg !6114
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6115, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6117, metadata !DIExpression()), !dbg !6118
  %9 = load i32, i32* %5, align 4, !dbg !6119
  %10 = and i32 %9, 1, !dbg !6120
  %11 = icmp ne i32 %10, 0, !dbg !6119
  %12 = zext i1 %11 to i8, !dbg !6118
  store i8 %12, i8* %7, align 1, !dbg !6118
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6121, metadata !DIExpression()), !dbg !6122
  %13 = load i32, i32* %5, align 4, !dbg !6123
  %14 = udiv i32 %13, 2, !dbg !6124
  store i32 %14, i32* %8, align 4, !dbg !6122
  %15 = load i8, i8* %7, align 1, !dbg !6125
  %16 = trunc i8 %15 to i1, !dbg !6125
  br i1 %16, label %17, label %31, !dbg !6127

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !6128
  %19 = trunc i32 %18 to i8, !dbg !6128
  %20 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6130
  %21 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %20, i32 0, i32 12, !dbg !6131
  %22 = load i32, i32* %8, align 4, !dbg !6132
  %23 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %21, i32 0, i32 %22, !dbg !6130
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !6133
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !6134
  %26 = load volatile i8, i8* %25, align 1, !dbg !6135
  %27 = and i8 %19, 15, !dbg !6135
  %28 = shl i8 %27, 4, !dbg !6135
  %29 = and i8 %26, 15, !dbg !6135
  %30 = or i8 %29, %28, !dbg !6135
  store volatile i8 %30, i8* %25, align 1, !dbg !6135
  br label %44, !dbg !6136

31:                                               ; preds = %3
  %32 = load i32, i32* %6, align 4, !dbg !6137
  %33 = trunc i32 %32 to i8, !dbg !6137
  %34 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6139
  %35 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %34, i32 0, i32 12, !dbg !6140
  %36 = load i32, i32* %8, align 4, !dbg !6141
  %37 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %35, i32 0, i32 %36, !dbg !6139
  %38 = bitcast %union.PORT_PMUX_Type* %37 to %struct.z_thread_stack_element*, !dbg !6142
  %39 = bitcast %struct.z_thread_stack_element* %38 to i8*, !dbg !6143
  %40 = load volatile i8, i8* %39, align 1, !dbg !6144
  %41 = and i8 %33, 15, !dbg !6144
  %42 = and i8 %40, -16, !dbg !6144
  %43 = or i8 %42, %41, !dbg !6144
  store volatile i8 %43, i8* %39, align 1, !dbg !6144
  br label %44

44:                                               ; preds = %31, %17
  %45 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6145
  %46 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %45, i32 0, i32 13, !dbg !6146
  %47 = load i32, i32* %5, align 4, !dbg !6147
  %48 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %46, i32 0, i32 %47, !dbg !6145
  %49 = bitcast %union.PORT_PMUX_Type* %48 to %struct.z_thread_stack_element*, !dbg !6148
  %50 = bitcast %struct.z_thread_stack_element* %49 to i8*, !dbg !6149
  %51 = load volatile i8, i8* %50, align 1, !dbg !6150
  %52 = and i8 %51, -2, !dbg !6150
  %53 = or i8 %52, 1, !dbg !6150
  store volatile i8 %53, i8* %50, align 1, !dbg !6150
  ret i32 0, !dbg !6151
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_configure(%struct.soc_port_pin* noundef %0) #1 !dbg !6152 {
  %2 = alloca %struct.soc_port_pin*, align 4
  %3 = alloca %struct.PortGroup*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.PORT_PMUX_Type, align 1
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %2, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %3, metadata !6165, metadata !DIExpression()), !dbg !6166
  %7 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6167
  %8 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %7, i32 0, i32 0, !dbg !6168
  %9 = load %struct.PortGroup*, %struct.PortGroup** %8, align 4, !dbg !6168
  store %struct.PortGroup* %9, %struct.PortGroup** %3, align 4, !dbg !6166
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6169, metadata !DIExpression()), !dbg !6170
  %10 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6171
  %11 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %10, i32 0, i32 2, !dbg !6172
  %12 = load i32, i32* %11, align 4, !dbg !6172
  store i32 %12, i32* %4, align 4, !dbg !6170
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6173, metadata !DIExpression()), !dbg !6174
  %13 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6175
  %14 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %13, i32 0, i32 2, !dbg !6176
  %15 = load i32, i32* %14, align 4, !dbg !6176
  %16 = and i32 %15, 983040, !dbg !6177
  %17 = lshr i32 %16, 16, !dbg !6178
  store i32 %17, i32* %5, align 4, !dbg !6174
  call void @llvm.dbg.declare(metadata %union.PORT_PMUX_Type* %6, metadata !6179, metadata !DIExpression()), !dbg !6180
  %18 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6180
  call void @llvm.memset.p0i8.i32(i8* align 1 %18, i8 0, i32 1, i1 false), !dbg !6180
  %19 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6181
  %20 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %19, i32 0, i32 13, !dbg !6182
  %21 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6183
  %22 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %21, i32 0, i32 1, !dbg !6184
  %23 = load i32, i32* %22, align 4, !dbg !6184
  %24 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %20, i32 0, i32 %23, !dbg !6181
  %25 = bitcast %union.PORT_PMUX_Type* %24 to i8*, !dbg !6185
  %26 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6185
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %25, i8* align 1 %26, i32 1, i1 true), !dbg !6185
  %27 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6186
  %28 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %27, i32 0, i32 1, !dbg !6187
  %29 = load i32, i32* %28, align 4, !dbg !6187
  %30 = shl i32 1, %29, !dbg !6188
  %31 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6189
  %32 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %31, i32 0, i32 1, !dbg !6190
  %33 = bitcast %union.PORT_DIR_Type* %32 to i32*, !dbg !6191
  store volatile i32 %30, i32* %33, align 4, !dbg !6192
  %34 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6193
  %35 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %34, i32 0, i32 1, !dbg !6194
  %36 = load i32, i32* %35, align 4, !dbg !6194
  %37 = shl i32 1, %36, !dbg !6195
  %38 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6196
  %39 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %38, i32 0, i32 5, !dbg !6197
  %40 = bitcast %union.PORT_DIR_Type* %39 to i32*, !dbg !6198
  store volatile i32 %37, i32* %40, align 4, !dbg !6199
  %41 = load i32, i32* %4, align 4, !dbg !6200
  %42 = and i32 %41, 64, !dbg !6202
  %43 = icmp ne i32 %42, 0, !dbg !6202
  br i1 %43, label %44, label %51, !dbg !6203

44:                                               ; preds = %1
  %45 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6204
  %46 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6206
  %47 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %46, i32 0, i32 1, !dbg !6207
  %48 = load i32, i32* %47, align 4, !dbg !6207
  %49 = load i32, i32* %5, align 4, !dbg !6208
  %50 = call i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %45, i32 noundef %48, i32 noundef %49) #10, !dbg !6209
  br label %114, !dbg !6210

51:                                               ; preds = %1
  %52 = load i32, i32* %4, align 4, !dbg !6211
  %53 = and i32 %52, 3, !dbg !6213
  %54 = icmp ne i32 %53, 0, !dbg !6213
  br i1 %54, label %55, label %73, !dbg !6214

55:                                               ; preds = %51
  %56 = load i32, i32* %4, align 4, !dbg !6215
  %57 = and i32 %56, 1, !dbg !6218
  %58 = icmp ne i32 %57, 0, !dbg !6218
  br i1 %58, label %59, label %67, !dbg !6219

59:                                               ; preds = %55
  %60 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6220
  %61 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %60, i32 0, i32 1, !dbg !6222
  %62 = load i32, i32* %61, align 4, !dbg !6222
  %63 = shl i32 1, %62, !dbg !6223
  %64 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6224
  %65 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %64, i32 0, i32 6, !dbg !6225
  %66 = bitcast %union.PORT_DIR_Type* %65 to i32*, !dbg !6226
  store volatile i32 %63, i32* %66, align 4, !dbg !6227
  br label %67, !dbg !6228

67:                                               ; preds = %59, %55
  %68 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6229
  %69 = bitcast %struct.z_thread_stack_element* %68 to i8*, !dbg !6230
  %70 = load i8, i8* %69, align 1, !dbg !6231
  %71 = and i8 %70, -5, !dbg !6231
  %72 = or i8 %71, 4, !dbg !6231
  store i8 %72, i8* %69, align 1, !dbg !6231
  br label %73, !dbg !6232

73:                                               ; preds = %67, %51
  %74 = load i32, i32* %4, align 4, !dbg !6233
  %75 = and i32 %74, 8, !dbg !6235
  %76 = icmp ne i32 %75, 0, !dbg !6235
  br i1 %76, label %77, label %83, !dbg !6236

77:                                               ; preds = %73
  %78 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6237
  %79 = bitcast %struct.z_thread_stack_element* %78 to i8*, !dbg !6239
  %80 = load i8, i8* %79, align 1, !dbg !6240
  %81 = and i8 %80, -3, !dbg !6240
  %82 = or i8 %81, 2, !dbg !6240
  store i8 %82, i8* %79, align 1, !dbg !6240
  br label %83, !dbg !6241

83:                                               ; preds = %77, %73
  %84 = load i32, i32* %4, align 4, !dbg !6242
  %85 = and i32 %84, 16, !dbg !6244
  %86 = icmp ne i32 %85, 0, !dbg !6244
  br i1 %86, label %87, label %95, !dbg !6245

87:                                               ; preds = %83
  %88 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6246
  %89 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %88, i32 0, i32 1, !dbg !6248
  %90 = load i32, i32* %89, align 4, !dbg !6248
  %91 = shl i32 1, %90, !dbg !6249
  %92 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6250
  %93 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %92, i32 0, i32 2, !dbg !6251
  %94 = bitcast %union.PORT_DIR_Type* %93 to i32*, !dbg !6252
  store volatile i32 %91, i32* %94, align 4, !dbg !6253
  br label %95, !dbg !6254

95:                                               ; preds = %87, %83
  %96 = load i32, i32* %4, align 4, !dbg !6255
  %97 = and i32 %96, 32, !dbg !6257
  %98 = icmp ne i32 %97, 0, !dbg !6257
  br i1 %98, label %99, label %105, !dbg !6258

99:                                               ; preds = %95
  %100 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6259
  %101 = bitcast %struct.z_thread_stack_element* %100 to i8*, !dbg !6261
  %102 = load i8, i8* %101, align 1, !dbg !6262
  %103 = and i8 %102, -65, !dbg !6262
  %104 = or i8 %103, 64, !dbg !6262
  store i8 %104, i8* %101, align 1, !dbg !6262
  br label %105, !dbg !6263

105:                                              ; preds = %99, %95
  %106 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6264
  %107 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %106, i32 0, i32 13, !dbg !6265
  %108 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6266
  %109 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %108, i32 0, i32 1, !dbg !6267
  %110 = load i32, i32* %109, align 4, !dbg !6267
  %111 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %107, i32 0, i32 %110, !dbg !6264
  %112 = bitcast %union.PORT_PMUX_Type* %111 to i8*, !dbg !6268
  %113 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6268
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %112, i8* align 1 %113, i32 1, i1 true), !dbg !6268
  br label %114, !dbg !6269

114:                                              ; preds = %105, %44
  ret void, !dbg !6269
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_list_configure(%struct.soc_port_pin* noundef %0, i32 noundef %1) #1 !dbg !6270 {
  %3 = alloca %struct.soc_port_pin*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %3, metadata !6273, metadata !DIExpression()), !dbg !6274
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6277, metadata !DIExpression()), !dbg !6279
  store i32 0, i32* %5, align 4, !dbg !6279
  br label %6, !dbg !6280

6:                                                ; preds = %14, %2
  %7 = load i32, i32* %5, align 4, !dbg !6281
  %8 = load i32, i32* %4, align 4, !dbg !6283
  %9 = icmp ult i32 %7, %8, !dbg !6284
  br i1 %9, label %10, label %17, !dbg !6285

10:                                               ; preds = %6
  %11 = load %struct.soc_port_pin*, %struct.soc_port_pin** %3, align 4, !dbg !6286
  %12 = load i32, i32* %5, align 4, !dbg !6288
  %13 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %11, i32 %12, !dbg !6286
  call void @soc_port_configure(%struct.soc_port_pin* noundef %13) #10, !dbg !6289
  br label %14, !dbg !6290

14:                                               ; preds = %10
  %15 = load i32, i32* %5, align 4, !dbg !6291
  %16 = add nsw i32 %15, 1, !dbg !6291
  store i32 %16, i32* %5, align 4, !dbg !6291
  br label %6, !dbg !6292, !llvm.loop !6293

17:                                               ; preds = %6
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atmel_samd_init(%struct.device.73* noundef %0) #1 !dbg !6296 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !6297, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6299, metadata !DIExpression()), !dbg !6300
  %6 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !6301
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6302, metadata !DIExpression()) #9, !dbg !6307
  %7 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !6309, !srcloc !6310
  store i32 %7, i32* %3, align 4, !dbg !6309
  %8 = load i32, i32* %3, align 4, !dbg !6311
  store i32 %8, i32* %5, align 4, !dbg !6312
  call void @flash_waitstates_init() #10, !dbg !6313
  call void @osc8m_init() #10, !dbg !6314
  call void @osc32k_init() #10, !dbg !6315
  call void @xosc_init() #10, !dbg !6316
  call void @xosc32k_init() #10, !dbg !6317
  call void @dfll_init() #10, !dbg !6318
  call void @gclks_init() #10, !dbg !6319
  call void @dividers_init() #10, !dbg !6320
  %9 = load i32, i32* %5, align 4, !dbg !6321
  store i32 %9, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6322, metadata !DIExpression()) #9, !dbg !6326
  %10 = load i32, i32* %2, align 4, !dbg !6328
  %11 = icmp ne i32 %10, 0, !dbg !6330
  br i1 %11, label %12, label %13, !dbg !6331

12:                                               ; preds = %1
  br label %14, !dbg !6332

13:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6334, !srcloc !6335
  br label %14, !dbg !6336

14:                                               ; preds = %12, %13
  ret i32 0, !dbg !6337
}

; Function Attrs: noinline nounwind optnone
define internal void @flash_waitstates_init() #1 !dbg !6338 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6339
  %2 = and i32 %1, -31, !dbg !6339
  %3 = or i32 %2, 2, !dbg !6339
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6339
  ret void, !dbg !6340
}

; Function Attrs: noinline nounwind optnone
define internal void @osc8m_init() #1 !dbg !6341 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6342
  %2 = and i32 %1, -769, !dbg !6342
  %3 = or i32 %2, 0, !dbg !6342
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6342
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6343
  %5 = and i32 %4, -129, !dbg !6343
  %6 = or i32 %5, 0, !dbg !6343
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6343
  ret void, !dbg !6344
}

; Function Attrs: noinline nounwind optnone
define internal void @osc32k_init() #1 !dbg !6345 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6346, metadata !DIExpression()), !dbg !6347
  %3 = load i32, i32* inttoptr (i32 8413220 to i32*), align 4, !dbg !6348
  store i32 %3, i32* %1, align 4, !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6349, metadata !DIExpression()), !dbg !6350
  %4 = load i32, i32* %1, align 4, !dbg !6351
  %5 = and i32 %4, 8128, !dbg !6352
  %6 = lshr i32 %5, 6, !dbg !6353
  store i32 %6, i32* %2, align 4, !dbg !6350
  %7 = load i32, i32* %2, align 4, !dbg !6354
  %8 = shl i32 %7, 16, !dbg !6354
  %9 = and i32 8323072, %8, !dbg !6354
  %10 = or i32 %9, 1536, !dbg !6355
  %11 = or i32 %10, 4, !dbg !6356
  %12 = or i32 %11, 2, !dbg !6357
  store volatile i32 %12, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 8, i32 0, i32 0), align 4, !dbg !6358
  br label %13, !dbg !6359

13:                                               ; preds = %19, %0
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6360
  %15 = lshr i32 %14, 2, !dbg !6360
  %16 = and i32 %15, 1, !dbg !6360
  %17 = icmp ne i32 %16, 0, !dbg !6361
  %18 = xor i1 %17, true, !dbg !6361
  br i1 %18, label %19, label %20, !dbg !6359

19:                                               ; preds = %13
  br label %13, !dbg !6359, !llvm.loop !6362

20:                                               ; preds = %13
  ret void, !dbg !6364
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc_init() #1 !dbg !6365 {
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc32k_init() #1 !dbg !6367 {
  store volatile i16 1548, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6368
  %1 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6369
  %2 = and i16 %1, -3, !dbg !6369
  %3 = or i16 %2, 2, !dbg !6369
  store volatile i16 %3, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !6369
  br label %4, !dbg !6370

4:                                                ; preds = %10, %0
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6371
  %6 = lshr i32 %5, 1, !dbg !6371
  %7 = and i32 %6, 1, !dbg !6371
  %8 = icmp ne i32 %7, 0, !dbg !6372
  %9 = xor i1 %8, true, !dbg !6372
  br i1 %9, label %10, label %11, !dbg !6370

10:                                               ; preds = %4
  br label %4, !dbg !6370, !llvm.loop !6373

11:                                               ; preds = %4
  ret void, !dbg !6375
}

; Function Attrs: noinline nounwind optnone
define internal void @dfll_init() #1 !dbg !6376 {
  %1 = alloca i32, align 4
  store volatile i32 1, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6377
  call void @wait_gclk_synchronization() #10, !dbg !6378
  store volatile i32 66817, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6379
  call void @wait_gclk_synchronization() #10, !dbg !6380
  store volatile i16 16640, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !6381
  call void @wait_gclk_synchronization() #10, !dbg !6382
  store volatile i16 2, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6383
  br label %2, !dbg !6384

2:                                                ; preds = %8, %0
  %3 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6385
  %4 = lshr i32 %3, 4, !dbg !6385
  %5 = and i32 %4, 1, !dbg !6385
  %6 = icmp ne i32 %5, 0, !dbg !6386
  %7 = xor i1 %6, true, !dbg !6386
  br i1 %7, label %8, label %9, !dbg !6384

8:                                                ; preds = %2
  br label %2, !dbg !6384, !llvm.loop !6387

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6389, metadata !DIExpression()), !dbg !6390
  store i32 1465, i32* %1, align 4, !dbg !6390
  %10 = load i32, i32* %1, align 4, !dbg !6391
  %11 = shl i32 %10, 0, !dbg !6391
  %12 = and i32 65535, %11, !dbg !6391
  %13 = or i32 2113863680, %12, !dbg !6392
  store volatile i32 %13, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 15, i32 0, i32 0), align 4, !dbg !6393
  br label %14, !dbg !6394

14:                                               ; preds = %20, %9
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6395
  %16 = lshr i32 %15, 4, !dbg !6395
  %17 = and i32 %16, 1, !dbg !6395
  %18 = icmp ne i32 %17, 0, !dbg !6396
  %19 = xor i1 %18, true, !dbg !6396
  br i1 %19, label %20, label %21, !dbg !6394

20:                                               ; preds = %14
  br label %14, !dbg !6394, !llvm.loop !6397

21:                                               ; preds = %14
  %22 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6399
  %23 = zext i16 %22 to i32, !dbg !6399
  %24 = or i32 %23, 2564, !dbg !6399
  %25 = trunc i32 %24 to i16, !dbg !6399
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6399
  br label %26, !dbg !6400

26:                                               ; preds = %32, %21
  %27 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6401
  %28 = lshr i32 %27, 4, !dbg !6401
  %29 = and i32 %28, 1, !dbg !6401
  %30 = icmp ne i32 %29, 0, !dbg !6402
  %31 = xor i1 %30, true, !dbg !6402
  br i1 %31, label %32, label %33, !dbg !6400

32:                                               ; preds = %26
  br label %26, !dbg !6400, !llvm.loop !6403

33:                                               ; preds = %26
  %34 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6405
  %35 = and i16 %34, -3, !dbg !6405
  %36 = or i16 %35, 2, !dbg !6405
  store volatile i16 %36, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6405
  br label %37, !dbg !6406

37:                                               ; preds = %50, %33
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6407
  %39 = lshr i32 %38, 7, !dbg !6407
  %40 = and i32 %39, 1, !dbg !6407
  %41 = icmp ne i32 %40, 0, !dbg !6408
  br i1 %41, label %42, label %48, !dbg !6409

42:                                               ; preds = %37
  %43 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6410
  %44 = lshr i32 %43, 6, !dbg !6410
  %45 = and i32 %44, 1, !dbg !6410
  %46 = icmp ne i32 %45, 0, !dbg !6411
  %47 = xor i1 %46, true, !dbg !6411
  br label %48, !dbg !6409

48:                                               ; preds = %42, %37
  %49 = phi i1 [ true, %37 ], [ %47, %42 ]
  br i1 %49, label %50, label %51, !dbg !6406

50:                                               ; preds = %48
  br label %37, !dbg !6406, !llvm.loop !6412

51:                                               ; preds = %48
  br label %52, !dbg !6414

52:                                               ; preds = %58, %51
  %53 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6415
  %54 = lshr i32 %53, 4, !dbg !6415
  %55 = and i32 %54, 1, !dbg !6415
  %56 = icmp ne i32 %55, 0, !dbg !6416
  %57 = xor i1 %56, true, !dbg !6416
  br i1 %57, label %58, label %59, !dbg !6414

58:                                               ; preds = %52
  br label %52, !dbg !6414, !llvm.loop !6417

59:                                               ; preds = %52
  ret void, !dbg !6419
}

; Function Attrs: noinline nounwind optnone
define internal void @gclks_init() #1 !dbg !6420 {
  store volatile i32 0, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6421
  call void @wait_gclk_synchronization() #10, !dbg !6422
  store volatile i32 198400, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6423
  call void @wait_gclk_synchronization() #10, !dbg !6424
  store volatile i32 67075, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6425
  call void @wait_gclk_synchronization() #10, !dbg !6426
  store volatile i32 7938, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6427
  call void @wait_gclk_synchronization() #10, !dbg !6428
  store volatile i32 66562, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6429
  call void @wait_gclk_synchronization() #10, !dbg !6430
  ret void, !dbg !6431
}

; Function Attrs: noinline nounwind optnone
define internal void @dividers_init() #1 !dbg !6432 {
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6433
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 4, i32 0, i32 0), align 1, !dbg !6434
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 5, i32 0, i32 0), align 2, !dbg !6435
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 6, i32 0, i32 0), align 1, !dbg !6436
  ret void, !dbg !6437
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_gclk_synchronization() #1 !dbg !6438 {
  br label %1, !dbg !6439

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !6440
  %3 = lshr i8 %2, 7, !dbg !6440
  %4 = icmp ne i8 %3, 0, !dbg !6439
  br i1 %4, label %5, label %6, !dbg !6439

5:                                                ; preds = %1
  br label %1, !dbg !6439, !llvm.loop !6441

6:                                                ; preds = %1
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !6444 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6492, metadata !DIExpression()), !dbg !6493
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !6494, metadata !DIExpression()), !dbg !6495
  %5 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6496
  %6 = icmp ne %struct.__esf* %5, null, !dbg !6498
  br i1 %6, label %7, label %9, !dbg !6499

7:                                                ; preds = %2
  %8 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6500
  call void @esf_dump(%struct.__esf* noundef %8) #10, !dbg !6502
  br label %9, !dbg !6503

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4, !dbg !6504
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6505
  call void @z_fatal_error(i32 noundef %10, %struct.__esf* noundef %11) #10, !dbg !6506
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind optnone
define internal void @esf_dump(%struct.__esf* noundef %0) #1 !dbg !6508 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !6511, metadata !DIExpression()), !dbg !6512
  br label %19, !dbg !6513

19:                                               ; preds = %1
  br label %20, !dbg !6514

20:                                               ; preds = %19
  br label %21, !dbg !6518

21:                                               ; preds = %20
  br label %22, !dbg !6519

22:                                               ; preds = %21
  br label %23, !dbg !6523

23:                                               ; preds = %22
  br label %24, !dbg !6524

24:                                               ; preds = %23
  br label %25, !dbg !6528

25:                                               ; preds = %24
  br label %26, !dbg !6529

26:                                               ; preds = %25
  ret void, !dbg !6533
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved.10* noundef %1) #1 !dbg !6534 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca %struct._callee_saved.10*, align 4
  %5 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6550, metadata !DIExpression()), !dbg !6551
  store %struct._callee_saved.10* %1, %struct._callee_saved.10** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %4, metadata !6552, metadata !DIExpression()), !dbg !6553
  %6 = load %struct._callee_saved.10*, %struct._callee_saved.10** %4, align 4, !dbg !6554
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6555, metadata !DIExpression()), !dbg !6556
  %7 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6557
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, !dbg !6558
  %9 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %8, i32 0, i32 0, !dbg !6559
  %10 = bitcast %union.anon.68* %9 to i32*, !dbg !6559
  %11 = load i32, i32* %10, align 4, !dbg !6559
  store i32 %11, i32* %5, align 4, !dbg !6556
  %12 = load i32, i32* %5, align 4, !dbg !6560
  %13 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6561
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef %13) #10, !dbg !6562
  ret void, !dbg !6563
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @arch_syscall_oops(i8* noundef %0) #5 !dbg !6564 {
  %2 = alloca i8*, align 4
  %3 = alloca i32*, align 4
  %4 = alloca %struct.__esf, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata i32** %3, metadata !6569, metadata !DIExpression()), !dbg !6570
  %5 = load i8*, i8** %2, align 4, !dbg !6571
  %6 = bitcast i8* %5 to i32*, !dbg !6571
  store i32* %6, i32** %3, align 4, !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.__esf* %4, metadata !6572, metadata !DIExpression()), !dbg !6573
  %7 = bitcast %struct.__esf* %4 to i8*, !dbg !6573
  call void @llvm.memset.p0i8.i32(i8* align 4 %7, i8 0, i32 32, i1 false), !dbg !6573
  %8 = load i32*, i32** %3, align 4, !dbg !6574
  %9 = getelementptr inbounds i32, i32* %8, i32 3, !dbg !6574
  %10 = load i32, i32* %9, align 4, !dbg !6574
  %11 = getelementptr inbounds %struct.__esf, %struct.__esf* %4, i32 0, i32 0, !dbg !6575
  %12 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %11, i32 0, i32 6, !dbg !6576
  %13 = bitcast %union.anon.68* %12 to i32*, !dbg !6576
  store i32 %10, i32* %13, align 4, !dbg !6577
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef %4) #10, !dbg !6578
  unreachable, !dbg !6579
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_enable(i32 noundef %0) #1 !dbg !6580 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6582, metadata !DIExpression()), !dbg !6583
  %3 = load i32, i32* %2, align 4, !dbg !6584
  call void @__NVIC_EnableIRQ(i32 noundef %3) #10, !dbg !6585
  ret void, !dbg !6586
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_EnableIRQ(i32 noundef %0) #1 !dbg !6587 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6590, metadata !DIExpression()), !dbg !6591
  %3 = load i32, i32* %2, align 4, !dbg !6592
  %4 = icmp sge i32 %3, 0, !dbg !6594
  br i1 %4, label %5, label %9, !dbg !6595

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6596, !srcloc !6598
  %6 = load i32, i32* %2, align 4, !dbg !6599
  %7 = and i32 %6, 31, !dbg !6600
  %8 = shl i32 1, %7, !dbg !6601
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0, i32 0), align 4, !dbg !6602
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6603, !srcloc !6604
  br label %9, !dbg !6605

9:                                                ; preds = %5, %1
  ret void, !dbg !6606
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_disable(i32 noundef %0) #1 !dbg !6607 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6608, metadata !DIExpression()), !dbg !6609
  %3 = load i32, i32* %2, align 4, !dbg !6610
  call void @__NVIC_DisableIRQ(i32 noundef %3) #10, !dbg !6611
  ret void, !dbg !6612
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_DisableIRQ(i32 noundef %0) #1 !dbg !6613 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6614, metadata !DIExpression()), !dbg !6615
  %3 = load i32, i32* %2, align 4, !dbg !6616
  %4 = icmp sge i32 %3, 0, !dbg !6618
  br i1 %4, label %5, label %9, !dbg !6619

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !6620
  %7 = and i32 %6, 31, !dbg !6622
  %8 = shl i32 1, %7, !dbg !6623
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 2, i32 0), align 4, !dbg !6624
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6625, !srcloc !6629
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6630, !srcloc !6633
  br label %9, !dbg !6634

9:                                                ; preds = %5, %1
  ret void, !dbg !6635
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) #1 !dbg !6636 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6639, metadata !DIExpression()), !dbg !6640
  %3 = load i32, i32* %2, align 4, !dbg !6641
  %4 = udiv i32 %3, 32, !dbg !6641
  %5 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %4, !dbg !6642
  %6 = load volatile i32, i32* %5, align 4, !dbg !6642
  %7 = load i32, i32* %2, align 4, !dbg !6643
  %8 = urem i32 %7, 32, !dbg !6643
  %9 = shl i32 1, %8, !dbg !6643
  %10 = and i32 %6, %9, !dbg !6644
  ret i32 %10, !dbg !6645
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !6646 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6649, metadata !DIExpression()), !dbg !6650
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6651, metadata !DIExpression()), !dbg !6652
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6653, metadata !DIExpression()), !dbg !6654
  %7 = load i32, i32* %5, align 4, !dbg !6655
  %8 = add i32 %7, 0, !dbg !6655
  store i32 %8, i32* %5, align 4, !dbg !6655
  %9 = load i32, i32* %4, align 4, !dbg !6658
  %10 = load i32, i32* %5, align 4, !dbg !6659
  call void @__NVIC_SetPriority(i32 noundef %9, i32 noundef %10) #10, !dbg !6660
  ret void, !dbg !6661
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #1 !dbg !6662 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6665, metadata !DIExpression()), !dbg !6666
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6667, metadata !DIExpression()), !dbg !6668
  %5 = load i32, i32* %3, align 4, !dbg !6669
  %6 = icmp sge i32 %5, 0, !dbg !6671
  br i1 %6, label %7, label %29, !dbg !6672

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !6673
  %9 = lshr i32 %8, 2, !dbg !6673
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !6675
  %11 = load volatile i32, i32* %10, align 4, !dbg !6675
  %12 = load i32, i32* %3, align 4, !dbg !6676
  %13 = and i32 %12, 3, !dbg !6676
  %14 = mul i32 %13, 8, !dbg !6676
  %15 = shl i32 255, %14, !dbg !6677
  %16 = xor i32 %15, -1, !dbg !6678
  %17 = and i32 %11, %16, !dbg !6679
  %18 = load i32, i32* %4, align 4, !dbg !6680
  %19 = shl i32 %18, 6, !dbg !6681
  %20 = and i32 %19, 255, !dbg !6682
  %21 = load i32, i32* %3, align 4, !dbg !6683
  %22 = and i32 %21, 3, !dbg !6683
  %23 = mul i32 %22, 8, !dbg !6683
  %24 = shl i32 %20, %23, !dbg !6684
  %25 = or i32 %17, %24, !dbg !6685
  %26 = load i32, i32* %3, align 4, !dbg !6686
  %27 = lshr i32 %26, 2, !dbg !6686
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !6687
  store volatile i32 %25, i32* %28, align 4, !dbg !6688
  br label %55, !dbg !6689

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !6690
  %31 = and i32 %30, 15, !dbg !6690
  %32 = sub i32 %31, 8, !dbg !6690
  %33 = lshr i32 %32, 2, !dbg !6690
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !6692
  %35 = load volatile i32, i32* %34, align 4, !dbg !6692
  %36 = load i32, i32* %3, align 4, !dbg !6693
  %37 = and i32 %36, 3, !dbg !6693
  %38 = mul i32 %37, 8, !dbg !6693
  %39 = shl i32 255, %38, !dbg !6694
  %40 = xor i32 %39, -1, !dbg !6695
  %41 = and i32 %35, %40, !dbg !6696
  %42 = load i32, i32* %4, align 4, !dbg !6697
  %43 = shl i32 %42, 6, !dbg !6698
  %44 = and i32 %43, 255, !dbg !6699
  %45 = load i32, i32* %3, align 4, !dbg !6700
  %46 = and i32 %45, 3, !dbg !6700
  %47 = mul i32 %46, 8, !dbg !6700
  %48 = shl i32 %44, %47, !dbg !6701
  %49 = or i32 %41, %48, !dbg !6702
  %50 = load i32, i32* %3, align 4, !dbg !6703
  %51 = and i32 %50, 15, !dbg !6703
  %52 = sub i32 %51, 8, !dbg !6703
  %53 = lshr i32 %52, 2, !dbg !6703
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !6704
  store volatile i32 %49, i32* %54, align 4, !dbg !6705
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_irq_spurious(i8* noundef %0) #1 !dbg !6707 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6708, metadata !DIExpression()), !dbg !6709
  %3 = load i8*, i8** %2, align 4, !dbg !6710
  call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #10, !dbg !6711
  ret void, !dbg !6712
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_nmi() #1 !dbg !6713 {
  call void @z_SysNmiOnReset() #10, !dbg !6715
  call void @z_arm_int_exit() #10, !dbg !6716
  ret void, !dbg !6717
}

declare dso_local void @z_SysNmiOnReset() #0

declare dso_local void @z_arm_int_exit() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_prep_c() #1 !dbg !6718 {
  call void @relocate_vector_table() #10, !dbg !6720
  call void @z_bss_zero() #10, !dbg !6721
  call void @z_data_copy() #10, !dbg !6722
  call void @z_arm_interrupt_init() #10, !dbg !6723
  call void @z_cstart() #12, !dbg !6724
  unreachable, !dbg !6724
}

; Function Attrs: noinline nounwind optnone
define internal void @relocate_vector_table() #1 !dbg !6725 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -256), i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 2), align 4, !dbg !6726
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6727, !srcloc !6730
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6731, !srcloc !6734
  ret void, !dbg !6735
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_swap(i32 noundef %0) #1 !dbg !6736 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6738, metadata !DIExpression()), !dbg !6739
  %4 = load i32, i32* %3, align 4, !dbg !6740
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6741
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 6, !dbg !6742
  %7 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %6, i32 0, i32 0, !dbg !6743
  store i32 %4, i32* %7, align 8, !dbg !6744
  %8 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6745
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6746
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 6, !dbg !6747
  %11 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %10, i32 0, i32 1, !dbg !6748
  store i32 %8, i32* %11, align 4, !dbg !6749
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6750
  %13 = or i32 %12, 268435456, !dbg !6750
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6750
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6751, metadata !DIExpression()) #9, !dbg !6753
  %14 = load i32, i32* %2, align 4, !dbg !6755
  %15 = icmp ne i32 %14, 0, !dbg !6757
  br i1 %15, label %16, label %17, !dbg !6758

16:                                               ; preds = %1
  br label %18, !dbg !6759

17:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6761, !srcloc !6762
  br label %18, !dbg !6763

18:                                               ; preds = %16, %17
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6764
  %20 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %19, i32 0, i32 6, !dbg !6765
  %21 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %20, i32 0, i32 1, !dbg !6766
  %22 = load i32, i32* %21, align 4, !dbg !6766
  ret i32 %22, !dbg !6767
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #1 !dbg !6768 {
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.z_thread_stack_element*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca void (i8*, i8*, i8*)*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %struct.__basic_sf*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !6871, metadata !DIExpression()), !dbg !6872
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %9, metadata !6873, metadata !DIExpression()), !dbg !6874
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !6875, metadata !DIExpression()), !dbg !6876
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %11, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %11, metadata !6877, metadata !DIExpression()), !dbg !6878
  store i8* %4, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6879, metadata !DIExpression()), !dbg !6880
  store i8* %5, i8** %13, align 4
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6881, metadata !DIExpression()), !dbg !6882
  store i8* %6, i8** %14, align 4
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata %struct.__basic_sf** %15, metadata !6885, metadata !DIExpression()), !dbg !6886
  %16 = load i8*, i8** %10, align 4, !dbg !6887
  %17 = getelementptr inbounds i8, i8* %16, i32 -32, !dbg !6887
  %18 = bitcast i8* %17 to %struct.__basic_sf*, !dbg !6887
  store %struct.__basic_sf* %18, %struct.__basic_sf** %15, align 4, !dbg !6888
  %19 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6889
  %20 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %19, i32 0, i32 6, !dbg !6890
  %21 = bitcast %union.anon.68* %20 to i32*, !dbg !6890
  store i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32* %21, align 4, !dbg !6891
  %22 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6892
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 6, !dbg !6893
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !6893
  %25 = load i32, i32* %24, align 4, !dbg !6894
  %26 = and i32 %25, -2, !dbg !6894
  store i32 %26, i32* %24, align 4, !dbg !6894
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 4, !dbg !6895
  %28 = ptrtoint void (i8*, i8*, i8*)* %27 to i32, !dbg !6896
  %29 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6897
  %30 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %29, i32 0, i32 0, !dbg !6898
  %31 = bitcast %union.anon.68* %30 to i32*, !dbg !6898
  store i32 %28, i32* %31, align 4, !dbg !6899
  %32 = load i8*, i8** %12, align 4, !dbg !6900
  %33 = ptrtoint i8* %32 to i32, !dbg !6901
  %34 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6902
  %35 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %34, i32 0, i32 1, !dbg !6903
  %36 = bitcast %union.anon.68* %35 to i32*, !dbg !6903
  store i32 %33, i32* %36, align 4, !dbg !6904
  %37 = load i8*, i8** %13, align 4, !dbg !6905
  %38 = ptrtoint i8* %37 to i32, !dbg !6906
  %39 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6907
  %40 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %39, i32 0, i32 2, !dbg !6908
  %41 = bitcast %union.anon.68* %40 to i32*, !dbg !6908
  store i32 %38, i32* %41, align 4, !dbg !6909
  %42 = load i8*, i8** %14, align 4, !dbg !6910
  %43 = ptrtoint i8* %42 to i32, !dbg !6911
  %44 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6912
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 3, !dbg !6913
  %46 = bitcast %union.anon.68* %45 to i32*, !dbg !6913
  store i32 %43, i32* %46, align 4, !dbg !6914
  %47 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6915
  %48 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %47, i32 0, i32 7, !dbg !6916
  store i32 16777216, i32* %48, align 4, !dbg !6917
  %49 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6918
  %50 = ptrtoint %struct.__basic_sf* %49 to i32, !dbg !6919
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !6920
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 1, !dbg !6921
  %53 = getelementptr inbounds %struct._callee_saved.10, %struct._callee_saved.10* %52, i32 0, i32 8, !dbg !6922
  store i32 %50, i32* %53, align 8, !dbg !6923
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !6924
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 6, !dbg !6925
  %56 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %55, i32 0, i32 0, !dbg !6926
  store i32 0, i32* %56, align 8, !dbg !6927
  ret void, !dbg !6928
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_switch_to_main_thread(%struct.k_thread.203* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) #1 !dbg !6929 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca void (i8*, i8*, i8*)*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !6932, metadata !DIExpression()), !dbg !6933
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6934, metadata !DIExpression()), !dbg !6935
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @z_arm_prepare_switch_to_main() #10, !dbg !6938
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !6939
  store %struct.k_thread.203* %7, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6940
  %8 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 4, !dbg !6941
  %9 = load i8*, i8** %5, align 4, !dbg !6942
  call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie i\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %8, i8* %9) #9, !dbg !6943, !srcloc !6944
  unreachable, !dbg !6945
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_prepare_switch_to_main() #1 !dbg !6946 {
  ret void, !dbg !6947
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved.10* noundef %3) #1 !dbg !6948 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._callee_saved.10*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.__esf*, align 4
  %15 = alloca %struct.__esf, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6965, metadata !DIExpression()), !dbg !6966
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6967, metadata !DIExpression()), !dbg !6968
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6969, metadata !DIExpression()), !dbg !6970
  store %struct._callee_saved.10* %3, %struct._callee_saved.10** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %9, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6973, metadata !DIExpression()), !dbg !6974
  store i32 0, i32* %10, align 4, !dbg !6974
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6975, metadata !DIExpression()), !dbg !6976
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6977
  %17 = and i32 %16, 511, !dbg !6978
  store i32 %17, i32* %11, align 4, !dbg !6976
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata i8* %13, metadata !6981, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.declare(metadata %struct.__esf** %14, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata %struct.__esf* %15, metadata !6985, metadata !DIExpression()), !dbg !6986
  store i32 0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6987, metadata !DIExpression()) #9, !dbg !6989
  %18 = load i32, i32* %5, align 4, !dbg !6991
  %19 = icmp ne i32 %18, 0, !dbg !6993
  br i1 %19, label %20, label %21, !dbg !6994

20:                                               ; preds = %4
  br label %22, !dbg !6995

21:                                               ; preds = %4
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6997, !srcloc !6998
  br label %22, !dbg !6999

22:                                               ; preds = %20, %21
  %23 = load i32, i32* %6, align 4, !dbg !7000
  %24 = load i32, i32* %7, align 4, !dbg !7001
  %25 = load i32, i32* %8, align 4, !dbg !7002
  %26 = call %struct.__esf* @get_esf(i32 noundef %23, i32 noundef %24, i32 noundef %25, i8* noundef %13) #10, !dbg !7003
  store %struct.__esf* %26, %struct.__esf** %14, align 4, !dbg !7004
  %27 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7005
  %28 = load i32, i32* %11, align 4, !dbg !7006
  %29 = call i32 @fault_handle(%struct.__esf* noundef %27, i32 noundef %28, i8* noundef %12) #10, !dbg !7007
  store i32 %29, i32* %10, align 4, !dbg !7008
  %30 = load i8, i8* %12, align 1, !dbg !7009
  %31 = trunc i8 %30 to i1, !dbg !7009
  br i1 %31, label %32, label %33, !dbg !7011

32:                                               ; preds = %22
  br label %60, !dbg !7012

33:                                               ; preds = %22
  %34 = bitcast %struct.__esf* %15 to i8*, !dbg !7014
  %35 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7015
  %36 = bitcast %struct.__esf* %35 to i8*, !dbg !7015
  %37 = call i8* @memcpy(i8* noundef %34, i8* noundef %36, i32 noundef 32) #10, !dbg !7016
  %38 = load %struct._callee_saved.10*, %struct._callee_saved.10** %9, align 4, !dbg !7017
  %39 = load i8, i8* %13, align 1, !dbg !7018
  %40 = trunc i8 %39 to i1, !dbg !7018
  br i1 %40, label %41, label %53, !dbg !7020

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7021
  %43 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %42, i32 0, i32 7, !dbg !7024
  %44 = load i32, i32* %43, align 4, !dbg !7024
  %45 = and i32 %44, 511, !dbg !7025
  %46 = icmp eq i32 %45, 0, !dbg !7026
  br i1 %46, label %47, label %52, !dbg !7027

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7028
  %49 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %48, i32 0, i32 7, !dbg !7030
  %50 = load i32, i32* %49, align 4, !dbg !7031
  %51 = or i32 %50, 511, !dbg !7031
  store i32 %51, i32* %49, align 4, !dbg !7031
  br label %52, !dbg !7032

52:                                               ; preds = %47, %41
  br label %58, !dbg !7033

53:                                               ; preds = %33
  %54 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7034
  %55 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %54, i32 0, i32 7, !dbg !7036
  %56 = load i32, i32* %55, align 4, !dbg !7037
  %57 = and i32 %56, -512, !dbg !7037
  store i32 %57, i32* %55, align 4, !dbg !7037
  br label %58

58:                                               ; preds = %53, %52
  %59 = load i32, i32* %10, align 4, !dbg !7038
  call void @z_arm_fatal_error(i32 noundef %59, %struct.__esf* noundef %15) #10, !dbg !7039
  br label %60, !dbg !7040

60:                                               ; preds = %58, %32
  ret void, !dbg !7040
}

; Function Attrs: noinline nounwind optnone
define internal %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3) #1 !dbg !7041 {
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.__esf*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7045, metadata !DIExpression()), !dbg !7046
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7047, metadata !DIExpression()), !dbg !7048
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7049, metadata !DIExpression()), !dbg !7050
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7053, metadata !DIExpression()), !dbg !7054
  store i8 0, i8* %10, align 1, !dbg !7054
  call void @llvm.dbg.declare(metadata %struct.__esf** %11, metadata !7055, metadata !DIExpression()), !dbg !7056
  store %struct.__esf* null, %struct.__esf** %11, align 4, !dbg !7056
  %16 = load i8*, i8** %9, align 4, !dbg !7057
  store i8 0, i8* %16, align 1, !dbg !7058
  %17 = load i32, i32* %8, align 4, !dbg !7059
  %18 = and i32 %17, -16777216, !dbg !7061
  %19 = icmp ne i32 %18, -16777216, !dbg !7062
  br i1 %19, label %20, label %21, !dbg !7063

20:                                               ; preds = %4
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7064
  br label %49, !dbg !7064

21:                                               ; preds = %4
  %22 = load i32, i32* %8, align 4, !dbg !7066
  %23 = and i32 %22, 8, !dbg !7068
  %24 = icmp ne i32 %23, 0, !dbg !7068
  br i1 %24, label %25, label %32, !dbg !7069

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !7070
  %27 = and i32 %26, 4, !dbg !7071
  %28 = icmp ne i32 %27, 0, !dbg !7071
  br i1 %28, label %32, label %29, !dbg !7072

29:                                               ; preds = %25
  br label %30, !dbg !7073

30:                                               ; preds = %29
  br label %31, !dbg !7075

31:                                               ; preds = %30
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7079
  br label %49, !dbg !7079

32:                                               ; preds = %25, %21
  %33 = load i8, i8* %10, align 1, !dbg !7080
  %34 = trunc i8 %33 to i1, !dbg !7080
  br i1 %34, label %47, label %35, !dbg !7082

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !7083
  %37 = and i32 %36, 8, !dbg !7086
  %38 = icmp ne i32 %37, 0, !dbg !7086
  br i1 %38, label %39, label %42, !dbg !7087

39:                                               ; preds = %35
  %40 = load i32, i32* %7, align 4, !dbg !7088
  %41 = inttoptr i32 %40 to %struct.__esf*, !dbg !7090
  store %struct.__esf* %41, %struct.__esf** %11, align 4, !dbg !7091
  br label %46, !dbg !7092

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !7093
  %44 = inttoptr i32 %43 to %struct.__esf*, !dbg !7095
  store %struct.__esf* %44, %struct.__esf** %11, align 4, !dbg !7096
  %45 = load i8*, i8** %9, align 4, !dbg !7097
  store i8 1, i8* %45, align 1, !dbg !7098
  br label %46

46:                                               ; preds = %42, %39
  br label %47, !dbg !7099

47:                                               ; preds = %46, %32
  %48 = load %struct.__esf*, %struct.__esf** %11, align 4, !dbg !7100
  store %struct.__esf* %48, %struct.__esf** %5, align 4, !dbg !7101
  br label %49, !dbg !7101

49:                                               ; preds = %47, %31, %20
  %50 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !7102
  ret %struct.__esf* %50, !dbg !7102
}

; Function Attrs: noinline nounwind optnone
define internal i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !7103 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !7106, metadata !DIExpression()), !dbg !7107
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7108, metadata !DIExpression()), !dbg !7109
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7110, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i32 0, i32* %7, align 4, !dbg !7113
  %8 = load i8*, i8** %6, align 4, !dbg !7114
  store i8 0, i8* %8, align 1, !dbg !7115
  %9 = load i32, i32* %5, align 4, !dbg !7116
  switch i32 %9, label %14 [
    i32 3, label %10
  ], !dbg !7117

10:                                               ; preds = %3
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7118
  %12 = load i8*, i8** %6, align 4, !dbg !7120
  %13 = call i32 @hard_fault(%struct.__esf* noundef %11, i8* noundef %12) #10, !dbg !7121
  store i32 %13, i32* %7, align 4, !dbg !7122
  br label %17, !dbg !7123

14:                                               ; preds = %3
  %15 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7124
  %16 = load i32, i32* %5, align 4, !dbg !7125
  call void @reserved_exception(%struct.__esf* noundef %15, i32 noundef %16) #10, !dbg !7126
  br label %17, !dbg !7127

17:                                               ; preds = %14, %10
  %18 = load i8*, i8** %6, align 4, !dbg !7128
  %19 = load i8, i8* %18, align 1, !dbg !7130
  %20 = trunc i8 %19 to i1, !dbg !7130
  %21 = zext i1 %20 to i32, !dbg !7131
  %22 = icmp eq i32 %21, 0, !dbg !7132
  br i1 %22, label %23, label %26, !dbg !7133

23:                                               ; preds = %17
  %24 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7134
  %25 = load i32, i32* %5, align 4, !dbg !7136
  call void @fault_show(%struct.__esf* noundef %24, i32 noundef %25) #10, !dbg !7137
  br label %26, !dbg !7138

26:                                               ; preds = %23, %17
  %27 = load i32, i32* %7, align 4, !dbg !7139
  ret i32 %27, !dbg !7140
}

; Function Attrs: noinline nounwind optnone
define internal i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !7141 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7144, metadata !DIExpression()), !dbg !7145
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7146, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7148, metadata !DIExpression()), !dbg !7149
  store i32 0, i32* %5, align 4, !dbg !7149
  br label %14, !dbg !7150

14:                                               ; preds = %2
  br label %15, !dbg !7151

15:                                               ; preds = %14
  %16 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7155
  %17 = call zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %16) #10, !dbg !7157
  br i1 %17, label %18, label %26, !dbg !7158

18:                                               ; preds = %15
  br label %19, !dbg !7159

19:                                               ; preds = %18
  br label %20, !dbg !7161

20:                                               ; preds = %19
  %21 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7165
  %22 = getelementptr inbounds %struct.__esf, %struct.__esf* %21, i32 0, i32 0, !dbg !7166
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 0, !dbg !7167
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !7167
  %25 = load i32, i32* %24, align 4, !dbg !7167
  store i32 %25, i32* %5, align 4, !dbg !7168
  br label %26, !dbg !7169

26:                                               ; preds = %20, %15
  %27 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7170
  %28 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %27, i1 noundef zeroext true) #10, !dbg !7171
  %29 = load i8*, i8** %4, align 4, !dbg !7172
  %30 = zext i1 %28 to i8, !dbg !7173
  store i8 %30, i8* %29, align 1, !dbg !7173
  %31 = load i32, i32* %5, align 4, !dbg !7174
  ret i32 %31, !dbg !7175
}

; Function Attrs: noinline nounwind optnone
define internal void @reserved_exception(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7176 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7181, metadata !DIExpression()), !dbg !7182
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7183, metadata !DIExpression()), !dbg !7184
  %9 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7185
  br label %10, !dbg !7186

10:                                               ; preds = %2
  br label %11, !dbg !7187

11:                                               ; preds = %10
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind optnone
define internal void @fault_show(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7192 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7195, metadata !DIExpression()), !dbg !7196
  %5 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7197
  %6 = load i32, i32* %4, align 4, !dbg !7198
  ret void, !dbg !7199
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #1 !dbg !7200 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i16*, align 4
  %5 = alloca i16, align 2
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7203, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.declare(metadata i16** %4, metadata !7205, metadata !DIExpression()), !dbg !7206
  %6 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7207
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %6, i32 0, i32 0, !dbg !7208
  %8 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %7, i32 0, i32 6, !dbg !7209
  %9 = bitcast %union.anon.68* %8 to i32*, !dbg !7209
  %10 = load i32, i32* %9, align 4, !dbg !7209
  %11 = inttoptr i32 %10 to i16*, !dbg !7210
  store i16* %11, i16** %4, align 4, !dbg !7206
  call void @llvm.dbg.declare(metadata i16* %5, metadata !7211, metadata !DIExpression()), !dbg !7212
  %12 = load i16*, i16** %4, align 4, !dbg !7213
  %13 = getelementptr inbounds i16, i16* %12, i32 -1, !dbg !7214
  %14 = load i16, i16* %13, align 2, !dbg !7215
  store i16 %14, i16* %5, align 2, !dbg !7212
  %15 = load i16, i16* %5, align 2, !dbg !7216
  %16 = zext i16 %15 to i32, !dbg !7216
  %17 = and i32 %16, 65280, !dbg !7218
  %18 = icmp eq i32 %17, 57088, !dbg !7219
  br i1 %18, label %19, label %25, !dbg !7220

19:                                               ; preds = %1
  %20 = load i16, i16* %5, align 2, !dbg !7221
  %21 = zext i16 %20 to i32, !dbg !7221
  %22 = and i32 %21, 255, !dbg !7222
  %23 = icmp eq i32 %22, 2, !dbg !7223
  br i1 %23, label %24, label %25, !dbg !7224

24:                                               ; preds = %19
  store i1 true, i1* %2, align 1, !dbg !7225
  br label %26, !dbg !7225

25:                                               ; preds = %19, %1
  store i1 false, i1* %2, align 1, !dbg !7227
  br label %26, !dbg !7227

26:                                               ; preds = %25, %24
  %27 = load i1, i1* %2, align 1, !dbg !7228
  ret i1 %27, !dbg !7228
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %0, i1 noundef zeroext %1) #1 !dbg !7229 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8, align 1
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7232, metadata !DIExpression()), !dbg !7233
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7234, metadata !DIExpression()), !dbg !7235
  ret i1 false, !dbg !7236
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault_init() #1 !dbg !7237 {
  ret void, !dbg !7238
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_interrupt_init() #1 !dbg !7239 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i32 0, i32* %1, align 4, !dbg !7242
  br label %2, !dbg !7243

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4, !dbg !7244
  %4 = icmp slt i32 %3, 28, !dbg !7247
  br i1 %4, label %5, label %10, !dbg !7248

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !7249
  call void @__NVIC_SetPriority.11(i32 noundef %6, i32 noundef 0) #10, !dbg !7251
  br label %7, !dbg !7252

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4, !dbg !7253
  %9 = add nsw i32 %8, 1, !dbg !7253
  store i32 %9, i32* %1, align 4, !dbg !7253
  br label %2, !dbg !7254, !llvm.loop !7255

10:                                               ; preds = %2
  ret void, !dbg !7257
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.11(i32 noundef %0, i32 noundef %1) #1 !dbg !7258 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7259, metadata !DIExpression()), !dbg !7260
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7261, metadata !DIExpression()), !dbg !7262
  %5 = load i32, i32* %3, align 4, !dbg !7263
  %6 = icmp sge i32 %5, 0, !dbg !7265
  br i1 %6, label %7, label %29, !dbg !7266

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !7267
  %9 = lshr i32 %8, 2, !dbg !7267
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !7269
  %11 = load volatile i32, i32* %10, align 4, !dbg !7269
  %12 = load i32, i32* %3, align 4, !dbg !7270
  %13 = and i32 %12, 3, !dbg !7270
  %14 = mul i32 %13, 8, !dbg !7270
  %15 = shl i32 255, %14, !dbg !7271
  %16 = xor i32 %15, -1, !dbg !7272
  %17 = and i32 %11, %16, !dbg !7273
  %18 = load i32, i32* %4, align 4, !dbg !7274
  %19 = shl i32 %18, 6, !dbg !7275
  %20 = and i32 %19, 255, !dbg !7276
  %21 = load i32, i32* %3, align 4, !dbg !7277
  %22 = and i32 %21, 3, !dbg !7277
  %23 = mul i32 %22, 8, !dbg !7277
  %24 = shl i32 %20, %23, !dbg !7278
  %25 = or i32 %17, %24, !dbg !7279
  %26 = load i32, i32* %3, align 4, !dbg !7280
  %27 = lshr i32 %26, 2, !dbg !7280
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !7281
  store volatile i32 %25, i32* %28, align 4, !dbg !7282
  br label %55, !dbg !7283

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !7284
  %31 = and i32 %30, 15, !dbg !7284
  %32 = sub i32 %31, 8, !dbg !7284
  %33 = lshr i32 %32, 2, !dbg !7284
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !7286
  %35 = load volatile i32, i32* %34, align 4, !dbg !7286
  %36 = load i32, i32* %3, align 4, !dbg !7287
  %37 = and i32 %36, 3, !dbg !7287
  %38 = mul i32 %37, 8, !dbg !7287
  %39 = shl i32 255, %38, !dbg !7288
  %40 = xor i32 %39, -1, !dbg !7289
  %41 = and i32 %35, %40, !dbg !7290
  %42 = load i32, i32* %4, align 4, !dbg !7291
  %43 = shl i32 %42, 6, !dbg !7292
  %44 = and i32 %43, 255, !dbg !7293
  %45 = load i32, i32* %3, align 4, !dbg !7294
  %46 = and i32 %45, 3, !dbg !7294
  %47 = mul i32 %46, 8, !dbg !7294
  %48 = shl i32 %44, %47, !dbg !7295
  %49 = or i32 %41, %48, !dbg !7296
  %50 = load i32, i32* %3, align 4, !dbg !7297
  %51 = and i32 %50, 15, !dbg !7297
  %52 = sub i32 %51, 8, !dbg !7297
  %53 = lshr i32 %52, 2, !dbg !7297
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !7298
  store volatile i32 %49, i32* %54, align 4, !dbg !7299
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !7300
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !7301 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !7400, metadata !DIExpression()), !dbg !7401
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7402
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7404
  %6 = icmp eq %struct.k_thread.203* %4, %5, !dbg !7405
  br i1 %6, label %7, label %19, !dbg !7406

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7407, metadata !DIExpression()) #9, !dbg !7411
  %8 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !7418, !srcloc !7419
  store i32 %8, i32* %2, align 4, !dbg !7418
  %9 = load i32, i32* %2, align 4, !dbg !7420
  %10 = icmp ne i32 %9, 0, !dbg !7421
  %11 = zext i1 %10 to i64, !dbg !7421
  %12 = select i1 %10, i32 1, i32 0, !dbg !7421
  br i1 %10, label %13, label %18, !dbg !7422

13:                                               ; preds = %7
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7423
  %15 = or i32 %14, 268435456, !dbg !7423
  store volatile i32 %15, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7423
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7425
  %17 = and i32 %16, -32769, !dbg !7425
  store volatile i32 %17, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7425
  br label %18, !dbg !7426

18:                                               ; preds = %13, %7
  br label %19, !dbg !7427

19:                                               ; preds = %18, %1
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7428
  call void @z_thread_abort(%struct.k_thread.203* noundef %20) #10, !dbg !7429
  ret void, !dbg !7430
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcpy(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !7431 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7441, metadata !DIExpression()), !dbg !7442
  %6 = load i8*, i8** %3, align 4, !dbg !7443
  store i8* %6, i8** %5, align 4, !dbg !7442
  br label %7, !dbg !7444

7:                                                ; preds = %12, %2
  %8 = load i8*, i8** %4, align 4, !dbg !7445
  %9 = load i8, i8* %8, align 1, !dbg !7446
  %10 = zext i8 %9 to i32, !dbg !7446
  %11 = icmp ne i32 %10, 0, !dbg !7447
  br i1 %11, label %12, label %20, !dbg !7444

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 4, !dbg !7448
  %14 = load i8, i8* %13, align 1, !dbg !7450
  %15 = load i8*, i8** %3, align 4, !dbg !7451
  store i8 %14, i8* %15, align 1, !dbg !7452
  %16 = load i8*, i8** %3, align 4, !dbg !7453
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7453
  store i8* %17, i8** %3, align 4, !dbg !7453
  %18 = load i8*, i8** %4, align 4, !dbg !7454
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7454
  store i8* %19, i8** %4, align 4, !dbg !7454
  br label %7, !dbg !7444, !llvm.loop !7455

20:                                               ; preds = %7
  %21 = load i8*, i8** %3, align 4, !dbg !7457
  store i8 0, i8* %21, align 1, !dbg !7458
  %22 = load i8*, i8** %5, align 4, !dbg !7459
  ret i8* %22, !dbg !7460
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7461 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7464, metadata !DIExpression()), !dbg !7465
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7466, metadata !DIExpression()), !dbg !7467
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7470, metadata !DIExpression()), !dbg !7471
  %8 = load i8*, i8** %4, align 4, !dbg !7472
  store i8* %8, i8** %7, align 4, !dbg !7471
  br label %9, !dbg !7473

9:                                                ; preds = %19, %3
  %10 = load i32, i32* %6, align 4, !dbg !7474
  %11 = icmp ugt i32 %10, 0, !dbg !7475
  br i1 %11, label %12, label %17, !dbg !7476

12:                                               ; preds = %9
  %13 = load i8*, i8** %5, align 4, !dbg !7477
  %14 = load i8, i8* %13, align 1, !dbg !7478
  %15 = zext i8 %14 to i32, !dbg !7478
  %16 = icmp ne i32 %15, 0, !dbg !7479
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i1 [ false, %9 ], [ %16, %12 ], !dbg !7480
  br i1 %18, label %19, label %29, !dbg !7473

19:                                               ; preds = %17
  %20 = load i8*, i8** %5, align 4, !dbg !7481
  %21 = load i8, i8* %20, align 1, !dbg !7483
  %22 = load i8*, i8** %4, align 4, !dbg !7484
  store i8 %21, i8* %22, align 1, !dbg !7485
  %23 = load i8*, i8** %5, align 4, !dbg !7486
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7486
  store i8* %24, i8** %5, align 4, !dbg !7486
  %25 = load i8*, i8** %4, align 4, !dbg !7487
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !7487
  store i8* %26, i8** %4, align 4, !dbg !7487
  %27 = load i32, i32* %6, align 4, !dbg !7488
  %28 = add i32 %27, -1, !dbg !7488
  store i32 %28, i32* %6, align 4, !dbg !7488
  br label %9, !dbg !7473, !llvm.loop !7489

29:                                               ; preds = %17
  br label %30, !dbg !7491

30:                                               ; preds = %33, %29
  %31 = load i32, i32* %6, align 4, !dbg !7492
  %32 = icmp ugt i32 %31, 0, !dbg !7493
  br i1 %32, label %33, label %39, !dbg !7491

33:                                               ; preds = %30
  %34 = load i8*, i8** %4, align 4, !dbg !7494
  store i8 0, i8* %34, align 1, !dbg !7496
  %35 = load i8*, i8** %4, align 4, !dbg !7497
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7497
  store i8* %36, i8** %4, align 4, !dbg !7497
  %37 = load i32, i32* %6, align 4, !dbg !7498
  %38 = add i32 %37, -1, !dbg !7498
  store i32 %38, i32* %6, align 4, !dbg !7498
  br label %30, !dbg !7491, !llvm.loop !7499

39:                                               ; preds = %30
  %40 = load i8*, i8** %7, align 4, !dbg !7501
  ret i8* %40, !dbg !7502
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7503 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7506, metadata !DIExpression()), !dbg !7507
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7508, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7510, metadata !DIExpression()), !dbg !7511
  %6 = load i32, i32* %4, align 4, !dbg !7512
  %7 = trunc i32 %6 to i8, !dbg !7513
  store i8 %7, i8* %5, align 1, !dbg !7511
  br label %8, !dbg !7514

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %3, align 4, !dbg !7515
  %10 = load i8, i8* %9, align 1, !dbg !7516
  %11 = zext i8 %10 to i32, !dbg !7516
  %12 = load i8, i8* %5, align 1, !dbg !7517
  %13 = zext i8 %12 to i32, !dbg !7517
  %14 = icmp ne i32 %11, %13, !dbg !7518
  br i1 %14, label %15, label %20, !dbg !7519

15:                                               ; preds = %8
  %16 = load i8*, i8** %3, align 4, !dbg !7520
  %17 = load i8, i8* %16, align 1, !dbg !7521
  %18 = zext i8 %17 to i32, !dbg !7521
  %19 = icmp ne i32 %18, 0, !dbg !7522
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i1 [ false, %8 ], [ %19, %15 ], !dbg !7523
  br i1 %21, label %22, label %25, !dbg !7514

22:                                               ; preds = %20
  %23 = load i8*, i8** %3, align 4, !dbg !7524
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7524
  store i8* %24, i8** %3, align 4, !dbg !7524
  br label %8, !dbg !7514, !llvm.loop !7526

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 4, !dbg !7528
  %27 = load i8, i8* %26, align 1, !dbg !7529
  %28 = zext i8 %27 to i32, !dbg !7529
  %29 = load i8, i8* %5, align 1, !dbg !7530
  %30 = zext i8 %29 to i32, !dbg !7530
  %31 = icmp eq i32 %28, %30, !dbg !7531
  br i1 %31, label %32, label %34, !dbg !7532

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 4, !dbg !7533
  br label %35, !dbg !7532

34:                                               ; preds = %25
  br label %35, !dbg !7532

35:                                               ; preds = %34, %32
  %36 = phi i8* [ %33, %32 ], [ null, %34 ], !dbg !7532
  ret i8* %36, !dbg !7534
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strrchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7535 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7540, metadata !DIExpression()), !dbg !7541
  store i8* null, i8** %5, align 4, !dbg !7541
  br label %6, !dbg !7542

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7543
  %8 = load i8, i8* %7, align 1, !dbg !7546
  %9 = zext i8 %8 to i32, !dbg !7546
  %10 = load i32, i32* %4, align 4, !dbg !7547
  %11 = trunc i32 %10 to i8, !dbg !7548
  %12 = zext i8 %11 to i32, !dbg !7548
  %13 = icmp eq i32 %9, %12, !dbg !7549
  br i1 %13, label %14, label %16, !dbg !7550

14:                                               ; preds = %6
  %15 = load i8*, i8** %3, align 4, !dbg !7551
  store i8* %15, i8** %5, align 4, !dbg !7553
  br label %16, !dbg !7554

16:                                               ; preds = %14, %6
  br label %17, !dbg !7555

17:                                               ; preds = %16
  %18 = load i8*, i8** %3, align 4, !dbg !7556
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7556
  store i8* %19, i8** %3, align 4, !dbg !7556
  %20 = load i8, i8* %18, align 1, !dbg !7557
  %21 = icmp ne i8 %20, 0, !dbg !7555
  br i1 %21, label %6, label %22, !dbg !7555, !llvm.loop !7558

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 4, !dbg !7560
  ret i8* %23, !dbg !7561
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strlen(i8* noundef %0) #1 !dbg !7562 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7567, metadata !DIExpression()), !dbg !7568
  store i32 0, i32* %3, align 4, !dbg !7568
  br label %4, !dbg !7569

4:                                                ; preds = %9, %1
  %5 = load i8*, i8** %2, align 4, !dbg !7570
  %6 = load i8, i8* %5, align 1, !dbg !7571
  %7 = zext i8 %6 to i32, !dbg !7571
  %8 = icmp ne i32 %7, 0, !dbg !7572
  br i1 %8, label %9, label %14, !dbg !7569

9:                                                ; preds = %4
  %10 = load i8*, i8** %2, align 4, !dbg !7573
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7573
  store i8* %11, i8** %2, align 4, !dbg !7573
  %12 = load i32, i32* %3, align 4, !dbg !7575
  %13 = add i32 %12, 1, !dbg !7575
  store i32 %13, i32* %3, align 4, !dbg !7575
  br label %4, !dbg !7569, !llvm.loop !7576

14:                                               ; preds = %4
  %15 = load i32, i32* %3, align 4, !dbg !7578
  ret i32 %15, !dbg !7579
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strnlen(i8* noundef %0, i32 noundef %1) #1 !dbg !7580 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7583, metadata !DIExpression()), !dbg !7584
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7587, metadata !DIExpression()), !dbg !7588
  store i32 0, i32* %5, align 4, !dbg !7588
  br label %6, !dbg !7589

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7590
  %8 = load i8, i8* %7, align 1, !dbg !7591
  %9 = zext i8 %8 to i32, !dbg !7591
  %10 = icmp ne i32 %9, 0, !dbg !7592
  br i1 %10, label %11, label %15, !dbg !7593

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4, !dbg !7594
  %13 = load i32, i32* %4, align 4, !dbg !7595
  %14 = icmp ult i32 %12, %13, !dbg !7596
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !7597
  br i1 %16, label %17, label %22, !dbg !7589

17:                                               ; preds = %15
  %18 = load i8*, i8** %3, align 4, !dbg !7598
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7598
  store i8* %19, i8** %3, align 4, !dbg !7598
  %20 = load i32, i32* %5, align 4, !dbg !7600
  %21 = add i32 %20, 1, !dbg !7600
  store i32 %21, i32* %5, align 4, !dbg !7600
  br label %6, !dbg !7589, !llvm.loop !7601

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7603
  ret i32 %23, !dbg !7604
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strcmp(i8* noundef %0, i8* noundef %1) #1 !dbg !7605 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7608, metadata !DIExpression()), !dbg !7609
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7610, metadata !DIExpression()), !dbg !7611
  br label %5, !dbg !7612

5:                                                ; preds = %20, %2
  %6 = load i8*, i8** %3, align 4, !dbg !7613
  %7 = load i8, i8* %6, align 1, !dbg !7614
  %8 = zext i8 %7 to i32, !dbg !7614
  %9 = load i8*, i8** %4, align 4, !dbg !7615
  %10 = load i8, i8* %9, align 1, !dbg !7616
  %11 = zext i8 %10 to i32, !dbg !7616
  %12 = icmp eq i32 %8, %11, !dbg !7617
  br i1 %12, label %13, label %18, !dbg !7618

13:                                               ; preds = %5
  %14 = load i8*, i8** %3, align 4, !dbg !7619
  %15 = load i8, i8* %14, align 1, !dbg !7620
  %16 = zext i8 %15 to i32, !dbg !7620
  %17 = icmp ne i32 %16, 0, !dbg !7621
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i1 [ false, %5 ], [ %17, %13 ], !dbg !7622
  br i1 %19, label %20, label %25, !dbg !7612

20:                                               ; preds = %18
  %21 = load i8*, i8** %3, align 4, !dbg !7623
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !7623
  store i8* %22, i8** %3, align 4, !dbg !7623
  %23 = load i8*, i8** %4, align 4, !dbg !7625
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7625
  store i8* %24, i8** %4, align 4, !dbg !7625
  br label %5, !dbg !7612, !llvm.loop !7626

25:                                               ; preds = %18
  %26 = load i8*, i8** %3, align 4, !dbg !7628
  %27 = load i8, i8* %26, align 1, !dbg !7629
  %28 = zext i8 %27 to i32, !dbg !7629
  %29 = load i8*, i8** %4, align 4, !dbg !7630
  %30 = load i8, i8* %29, align 1, !dbg !7631
  %31 = zext i8 %30 to i32, !dbg !7631
  %32 = sub nsw i32 %28, %31, !dbg !7632
  ret i32 %32, !dbg !7633
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strncmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7634 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7637, metadata !DIExpression()), !dbg !7638
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7639, metadata !DIExpression()), !dbg !7640
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7641, metadata !DIExpression()), !dbg !7642
  br label %7, !dbg !7643

7:                                                ; preds = %25, %3
  %8 = load i32, i32* %6, align 4, !dbg !7644
  %9 = icmp ugt i32 %8, 0, !dbg !7645
  br i1 %9, label %10, label %23, !dbg !7646

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 4, !dbg !7647
  %12 = load i8, i8* %11, align 1, !dbg !7648
  %13 = zext i8 %12 to i32, !dbg !7648
  %14 = load i8*, i8** %5, align 4, !dbg !7649
  %15 = load i8, i8* %14, align 1, !dbg !7650
  %16 = zext i8 %15 to i32, !dbg !7650
  %17 = icmp eq i32 %13, %16, !dbg !7651
  br i1 %17, label %18, label %23, !dbg !7652

18:                                               ; preds = %10
  %19 = load i8*, i8** %4, align 4, !dbg !7653
  %20 = load i8, i8* %19, align 1, !dbg !7654
  %21 = zext i8 %20 to i32, !dbg !7654
  %22 = icmp ne i32 %21, 0, !dbg !7655
  br label %23

23:                                               ; preds = %18, %10, %7
  %24 = phi i1 [ false, %10 ], [ false, %7 ], [ %22, %18 ], !dbg !7656
  br i1 %24, label %25, label %32, !dbg !7643

25:                                               ; preds = %23
  %26 = load i8*, i8** %4, align 4, !dbg !7657
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !7657
  store i8* %27, i8** %4, align 4, !dbg !7657
  %28 = load i8*, i8** %5, align 4, !dbg !7659
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !7659
  store i8* %29, i8** %5, align 4, !dbg !7659
  %30 = load i32, i32* %6, align 4, !dbg !7660
  %31 = add i32 %30, -1, !dbg !7660
  store i32 %31, i32* %6, align 4, !dbg !7660
  br label %7, !dbg !7643, !llvm.loop !7661

32:                                               ; preds = %23
  %33 = load i32, i32* %6, align 4, !dbg !7663
  %34 = icmp eq i32 %33, 0, !dbg !7664
  br i1 %34, label %35, label %36, !dbg !7665

35:                                               ; preds = %32
  br label %44, !dbg !7665

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 4, !dbg !7666
  %38 = load i8, i8* %37, align 1, !dbg !7667
  %39 = zext i8 %38 to i32, !dbg !7667
  %40 = load i8*, i8** %5, align 4, !dbg !7668
  %41 = load i8, i8* %40, align 1, !dbg !7669
  %42 = zext i8 %41 to i32, !dbg !7669
  %43 = sub nsw i32 %39, %42, !dbg !7670
  br label %44, !dbg !7665

44:                                               ; preds = %36, %35
  %45 = phi i32 [ 0, %35 ], [ %43, %36 ], !dbg !7665
  ret i32 %45, !dbg !7671
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef %1, i8** noundef %2) #1 !dbg !7672 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8**, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7676, metadata !DIExpression()), !dbg !7677
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7678, metadata !DIExpression()), !dbg !7679
  store i8** %2, i8*** %7, align 4
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !7680, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7682, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7684, metadata !DIExpression()), !dbg !7685
  %10 = load i8*, i8** %5, align 4, !dbg !7686
  %11 = icmp ne i8* %10, null, !dbg !7686
  br i1 %11, label %12, label %14, !dbg !7686

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 4, !dbg !7687
  br label %17, !dbg !7686

14:                                               ; preds = %3
  %15 = load i8**, i8*** %7, align 4, !dbg !7688
  %16 = load i8*, i8** %15, align 4, !dbg !7689
  br label %17, !dbg !7686

17:                                               ; preds = %14, %12
  %18 = phi i8* [ %13, %12 ], [ %16, %14 ], !dbg !7686
  store i8* %18, i8** %8, align 4, !dbg !7690
  br label %19, !dbg !7691

19:                                               ; preds = %33, %17
  %20 = load i8*, i8** %8, align 4, !dbg !7692
  %21 = load i8, i8* %20, align 1, !dbg !7693
  %22 = zext i8 %21 to i32, !dbg !7693
  %23 = icmp ne i32 %22, 0, !dbg !7693
  br i1 %23, label %24, label %31, !dbg !7694

24:                                               ; preds = %19
  %25 = load i8*, i8** %6, align 4, !dbg !7695
  %26 = load i8*, i8** %8, align 4, !dbg !7696
  %27 = load i8, i8* %26, align 1, !dbg !7697
  %28 = zext i8 %27 to i32, !dbg !7697
  %29 = call i8* @strchr(i8* noundef %25, i32 noundef %28) #10, !dbg !7698
  %30 = icmp ne i8* %29, null, !dbg !7694
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i1 [ false, %19 ], [ %30, %24 ], !dbg !7699
  br i1 %32, label %33, label %36, !dbg !7691

33:                                               ; preds = %31
  %34 = load i8*, i8** %8, align 4, !dbg !7700
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !7700
  store i8* %35, i8** %8, align 4, !dbg !7700
  br label %19, !dbg !7691, !llvm.loop !7702

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 4, !dbg !7704
  %38 = load i8, i8* %37, align 1, !dbg !7706
  %39 = zext i8 %38 to i32, !dbg !7706
  %40 = icmp eq i32 %39, 0, !dbg !7707
  br i1 %40, label %41, label %44, !dbg !7708

41:                                               ; preds = %36
  %42 = load i8*, i8** %8, align 4, !dbg !7709
  %43 = load i8**, i8*** %7, align 4, !dbg !7711
  store i8* %42, i8** %43, align 4, !dbg !7712
  store i8* null, i8** %4, align 4, !dbg !7713
  br label %79, !dbg !7713

44:                                               ; preds = %36
  %45 = load i8*, i8** %8, align 4, !dbg !7714
  store i8* %45, i8** %9, align 4, !dbg !7715
  br label %46, !dbg !7716

46:                                               ; preds = %61, %44
  %47 = load i8*, i8** %9, align 4, !dbg !7717
  %48 = load i8, i8* %47, align 1, !dbg !7718
  %49 = zext i8 %48 to i32, !dbg !7718
  %50 = icmp ne i32 %49, 0, !dbg !7718
  br i1 %50, label %51, label %59, !dbg !7719

51:                                               ; preds = %46
  %52 = load i8*, i8** %6, align 4, !dbg !7720
  %53 = load i8*, i8** %9, align 4, !dbg !7721
  %54 = load i8, i8* %53, align 1, !dbg !7722
  %55 = zext i8 %54 to i32, !dbg !7722
  %56 = call i8* @strchr(i8* noundef %52, i32 noundef %55) #10, !dbg !7723
  %57 = icmp ne i8* %56, null, !dbg !7724
  %58 = xor i1 %57, true, !dbg !7724
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i1 [ false, %46 ], [ %58, %51 ], !dbg !7699
  br i1 %60, label %61, label %64, !dbg !7716

61:                                               ; preds = %59
  %62 = load i8*, i8** %9, align 4, !dbg !7725
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !7725
  store i8* %63, i8** %9, align 4, !dbg !7725
  br label %46, !dbg !7716, !llvm.loop !7727

64:                                               ; preds = %59
  %65 = load i8*, i8** %9, align 4, !dbg !7729
  %66 = load i8, i8* %65, align 1, !dbg !7731
  %67 = zext i8 %66 to i32, !dbg !7731
  %68 = icmp ne i32 %67, 0, !dbg !7732
  br i1 %68, label %69, label %74, !dbg !7733

69:                                               ; preds = %64
  %70 = load i8*, i8** %9, align 4, !dbg !7734
  store i8 0, i8* %70, align 1, !dbg !7736
  %71 = load i8*, i8** %9, align 4, !dbg !7737
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !7738
  %73 = load i8**, i8*** %7, align 4, !dbg !7739
  store i8* %72, i8** %73, align 4, !dbg !7740
  br label %77, !dbg !7741

74:                                               ; preds = %64
  %75 = load i8*, i8** %9, align 4, !dbg !7742
  %76 = load i8**, i8*** %7, align 4, !dbg !7744
  store i8* %75, i8** %76, align 4, !dbg !7745
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %8, align 4, !dbg !7746
  store i8* %78, i8** %4, align 4, !dbg !7747
  br label %79, !dbg !7747

79:                                               ; preds = %77, %41
  %80 = load i8*, i8** %4, align 4, !dbg !7748
  ret i8* %80, !dbg !7748
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcat(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !7749 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7752, metadata !DIExpression()), !dbg !7753
  %5 = load i8*, i8** %3, align 4, !dbg !7754
  %6 = load i8*, i8** %3, align 4, !dbg !7755
  %7 = call i32 @strlen(i8* noundef %6) #10, !dbg !7756
  %8 = getelementptr inbounds i8, i8* %5, i32 %7, !dbg !7757
  %9 = load i8*, i8** %4, align 4, !dbg !7758
  %10 = call i8* @strcpy(i8* noundef %8, i8* noundef %9) #10, !dbg !7759
  %11 = load i8*, i8** %3, align 4, !dbg !7760
  ret i8* %11, !dbg !7761
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncat(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7762 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7763, metadata !DIExpression()), !dbg !7764
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7765, metadata !DIExpression()), !dbg !7766
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7767, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7769, metadata !DIExpression()), !dbg !7770
  %9 = load i8*, i8** %4, align 4, !dbg !7771
  store i8* %9, i8** %7, align 4, !dbg !7770
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7772, metadata !DIExpression()), !dbg !7773
  %10 = load i8*, i8** %4, align 4, !dbg !7774
  %11 = call i32 @strlen(i8* noundef %10) #10, !dbg !7775
  store i32 %11, i32* %8, align 4, !dbg !7773
  %12 = load i32, i32* %8, align 4, !dbg !7776
  %13 = load i8*, i8** %4, align 4, !dbg !7777
  %14 = getelementptr inbounds i8, i8* %13, i32 %12, !dbg !7777
  store i8* %14, i8** %4, align 4, !dbg !7777
  br label %15, !dbg !7778

15:                                               ; preds = %26, %3
  %16 = load i32, i32* %6, align 4, !dbg !7779
  %17 = add i32 %16, -1, !dbg !7779
  store i32 %17, i32* %6, align 4, !dbg !7779
  %18 = icmp ugt i32 %16, 0, !dbg !7780
  br i1 %18, label %19, label %24, !dbg !7781

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 4, !dbg !7782
  %21 = load i8, i8* %20, align 1, !dbg !7783
  %22 = zext i8 %21 to i32, !dbg !7783
  %23 = icmp ne i32 %22, 0, !dbg !7784
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ], !dbg !7785
  br i1 %25, label %26, label %32, !dbg !7778

26:                                               ; preds = %24
  %27 = load i8*, i8** %5, align 4, !dbg !7786
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7786
  store i8* %28, i8** %5, align 4, !dbg !7786
  %29 = load i8, i8* %27, align 1, !dbg !7788
  %30 = load i8*, i8** %4, align 4, !dbg !7789
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !7789
  store i8* %31, i8** %4, align 4, !dbg !7789
  store i8 %29, i8* %30, align 1, !dbg !7790
  br label %15, !dbg !7778, !llvm.loop !7791

32:                                               ; preds = %24
  %33 = load i8*, i8** %4, align 4, !dbg !7793
  store i8 0, i8* %33, align 1, !dbg !7794
  %34 = load i8*, i8** %7, align 4, !dbg !7795
  ret i8* %34, !dbg !7796
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @memcmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7797 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7800, metadata !DIExpression()), !dbg !7801
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7802, metadata !DIExpression()), !dbg !7803
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7806, metadata !DIExpression()), !dbg !7807
  %10 = load i8*, i8** %5, align 4, !dbg !7808
  store i8* %10, i8** %8, align 4, !dbg !7807
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7809, metadata !DIExpression()), !dbg !7810
  %11 = load i8*, i8** %6, align 4, !dbg !7811
  store i8* %11, i8** %9, align 4, !dbg !7810
  %12 = load i32, i32* %7, align 4, !dbg !7812
  %13 = icmp ne i32 %12, 0, !dbg !7812
  br i1 %13, label %15, label %14, !dbg !7814

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !7815
  br label %43, !dbg !7815

15:                                               ; preds = %3
  br label %16, !dbg !7817

16:                                               ; preds = %30, %15
  %17 = load i32, i32* %7, align 4, !dbg !7818
  %18 = add i32 %17, -1, !dbg !7818
  store i32 %18, i32* %7, align 4, !dbg !7818
  %19 = icmp ugt i32 %18, 0, !dbg !7819
  br i1 %19, label %20, label %28, !dbg !7820

20:                                               ; preds = %16
  %21 = load i8*, i8** %8, align 4, !dbg !7821
  %22 = load i8, i8* %21, align 1, !dbg !7822
  %23 = zext i8 %22 to i32, !dbg !7822
  %24 = load i8*, i8** %9, align 4, !dbg !7823
  %25 = load i8, i8* %24, align 1, !dbg !7824
  %26 = zext i8 %25 to i32, !dbg !7824
  %27 = icmp eq i32 %23, %26, !dbg !7825
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i1 [ false, %16 ], [ %27, %20 ], !dbg !7826
  br i1 %29, label %30, label %35, !dbg !7817

30:                                               ; preds = %28
  %31 = load i8*, i8** %8, align 4, !dbg !7827
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7827
  store i8* %32, i8** %8, align 4, !dbg !7827
  %33 = load i8*, i8** %9, align 4, !dbg !7829
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !7829
  store i8* %34, i8** %9, align 4, !dbg !7829
  br label %16, !dbg !7817, !llvm.loop !7830

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 4, !dbg !7832
  %37 = load i8, i8* %36, align 1, !dbg !7833
  %38 = zext i8 %37 to i32, !dbg !7833
  %39 = load i8*, i8** %9, align 4, !dbg !7834
  %40 = load i8, i8* %39, align 1, !dbg !7835
  %41 = zext i8 %40 to i32, !dbg !7835
  %42 = sub nsw i32 %38, %41, !dbg !7836
  store i32 %42, i32* %4, align 4, !dbg !7837
  br label %43, !dbg !7837

43:                                               ; preds = %35, %14
  %44 = load i32, i32* %4, align 4, !dbg !7838
  ret i32 %44, !dbg !7838
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memmove(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7839 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7842, metadata !DIExpression()), !dbg !7843
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7848, metadata !DIExpression()), !dbg !7849
  %9 = load i8*, i8** %4, align 4, !dbg !7850
  store i8* %9, i8** %7, align 4, !dbg !7849
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7851, metadata !DIExpression()), !dbg !7852
  %10 = load i8*, i8** %5, align 4, !dbg !7853
  store i8* %10, i8** %8, align 4, !dbg !7852
  %11 = load i8*, i8** %7, align 4, !dbg !7854
  %12 = load i8*, i8** %8, align 4, !dbg !7856
  %13 = ptrtoint i8* %11 to i32, !dbg !7857
  %14 = ptrtoint i8* %12 to i32, !dbg !7857
  %15 = sub i32 %13, %14, !dbg !7857
  %16 = load i32, i32* %6, align 4, !dbg !7858
  %17 = icmp ult i32 %15, %16, !dbg !7859
  br i1 %17, label %18, label %33, !dbg !7860

18:                                               ; preds = %3
  br label %19, !dbg !7861

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %6, align 4, !dbg !7863
  %21 = icmp ugt i32 %20, 0, !dbg !7864
  br i1 %21, label %22, label %32, !dbg !7861

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4, !dbg !7865
  %24 = add i32 %23, -1, !dbg !7865
  store i32 %24, i32* %6, align 4, !dbg !7865
  %25 = load i8*, i8** %8, align 4, !dbg !7867
  %26 = load i32, i32* %6, align 4, !dbg !7868
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !7867
  %28 = load i8, i8* %27, align 1, !dbg !7867
  %29 = load i8*, i8** %7, align 4, !dbg !7869
  %30 = load i32, i32* %6, align 4, !dbg !7870
  %31 = getelementptr inbounds i8, i8* %29, i32 %30, !dbg !7869
  store i8 %28, i8* %31, align 1, !dbg !7871
  br label %19, !dbg !7861, !llvm.loop !7872

32:                                               ; preds = %19
  br label %48, !dbg !7874

33:                                               ; preds = %3
  br label %34, !dbg !7875

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %6, align 4, !dbg !7877
  %36 = icmp ugt i32 %35, 0, !dbg !7878
  br i1 %36, label %37, label %47, !dbg !7875

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !7879
  %39 = load i8, i8* %38, align 1, !dbg !7881
  %40 = load i8*, i8** %7, align 4, !dbg !7882
  store i8 %39, i8* %40, align 1, !dbg !7883
  %41 = load i8*, i8** %7, align 4, !dbg !7884
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !7884
  store i8* %42, i8** %7, align 4, !dbg !7884
  %43 = load i8*, i8** %8, align 4, !dbg !7885
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !7885
  store i8* %44, i8** %8, align 4, !dbg !7885
  %45 = load i32, i32* %6, align 4, !dbg !7886
  %46 = add i32 %45, -1, !dbg !7886
  store i32 %46, i32* %6, align 4, !dbg !7886
  br label %34, !dbg !7875, !llvm.loop !7887

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %32
  %49 = load i8*, i8** %4, align 4, !dbg !7889
  ret i8* %49, !dbg !7890
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memcpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7891 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7896, metadata !DIExpression()), !dbg !7897
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7898, metadata !DIExpression()), !dbg !7899
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7902, metadata !DIExpression()), !dbg !7903
  %13 = load i8*, i8** %5, align 4, !dbg !7904
  store i8* %13, i8** %8, align 4, !dbg !7903
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7905, metadata !DIExpression()), !dbg !7906
  %14 = load i8*, i8** %6, align 4, !dbg !7907
  store i8* %14, i8** %9, align 4, !dbg !7906
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7908, metadata !DIExpression()), !dbg !7910
  store i32 3, i32* %10, align 4, !dbg !7910
  %15 = load i8*, i8** %5, align 4, !dbg !7911
  %16 = ptrtoint i8* %15 to i32, !dbg !7913
  %17 = load i8*, i8** %9, align 4, !dbg !7914
  %18 = ptrtoint i8* %17 to i32, !dbg !7915
  %19 = xor i32 %16, %18, !dbg !7916
  %20 = and i32 %19, 3, !dbg !7917
  %21 = icmp eq i32 %20, 0, !dbg !7918
  br i1 %21, label %22, label %62, !dbg !7919

22:                                               ; preds = %3
  br label %23, !dbg !7920

23:                                               ; preds = %33, %22
  %24 = load i8*, i8** %8, align 4, !dbg !7922
  %25 = ptrtoint i8* %24 to i32, !dbg !7923
  %26 = and i32 %25, 3, !dbg !7924
  %27 = icmp ne i32 %26, 0, !dbg !7920
  br i1 %27, label %28, label %41, !dbg !7920

28:                                               ; preds = %23
  %29 = load i32, i32* %7, align 4, !dbg !7925
  %30 = icmp eq i32 %29, 0, !dbg !7928
  br i1 %30, label %31, label %33, !dbg !7929

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 4, !dbg !7930
  store i8* %32, i8** %4, align 4, !dbg !7932
  br label %76, !dbg !7932

33:                                               ; preds = %28
  %34 = load i8*, i8** %9, align 4, !dbg !7933
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !7933
  store i8* %35, i8** %9, align 4, !dbg !7933
  %36 = load i8, i8* %34, align 1, !dbg !7934
  %37 = load i8*, i8** %8, align 4, !dbg !7935
  %38 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7935
  store i8* %38, i8** %8, align 4, !dbg !7935
  store i8 %36, i8* %37, align 1, !dbg !7936
  %39 = load i32, i32* %7, align 4, !dbg !7937
  %40 = add i32 %39, -1, !dbg !7937
  store i32 %40, i32* %7, align 4, !dbg !7937
  br label %23, !dbg !7920, !llvm.loop !7938

41:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32** %11, metadata !7940, metadata !DIExpression()), !dbg !7941
  %42 = load i8*, i8** %8, align 4, !dbg !7942
  %43 = bitcast i8* %42 to i32*, !dbg !7943
  store i32* %43, i32** %11, align 4, !dbg !7941
  call void @llvm.dbg.declare(metadata i32** %12, metadata !7944, metadata !DIExpression()), !dbg !7945
  %44 = load i8*, i8** %9, align 4, !dbg !7946
  %45 = bitcast i8* %44 to i32*, !dbg !7947
  store i32* %45, i32** %12, align 4, !dbg !7945
  br label %46, !dbg !7948

46:                                               ; preds = %49, %41
  %47 = load i32, i32* %7, align 4, !dbg !7949
  %48 = icmp uge i32 %47, 4, !dbg !7950
  br i1 %48, label %49, label %57, !dbg !7948

49:                                               ; preds = %46
  %50 = load i32*, i32** %12, align 4, !dbg !7951
  %51 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !7951
  store i32* %51, i32** %12, align 4, !dbg !7951
  %52 = load i32, i32* %50, align 4, !dbg !7953
  %53 = load i32*, i32** %11, align 4, !dbg !7954
  %54 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !7954
  store i32* %54, i32** %11, align 4, !dbg !7954
  store i32 %52, i32* %53, align 4, !dbg !7955
  %55 = load i32, i32* %7, align 4, !dbg !7956
  %56 = sub i32 %55, 4, !dbg !7956
  store i32 %56, i32* %7, align 4, !dbg !7956
  br label %46, !dbg !7948, !llvm.loop !7957

57:                                               ; preds = %46
  %58 = load i32*, i32** %11, align 4, !dbg !7959
  %59 = bitcast i32* %58 to i8*, !dbg !7960
  store i8* %59, i8** %8, align 4, !dbg !7961
  %60 = load i32*, i32** %12, align 4, !dbg !7962
  %61 = bitcast i32* %60 to i8*, !dbg !7963
  store i8* %61, i8** %9, align 4, !dbg !7964
  br label %62, !dbg !7965

62:                                               ; preds = %57, %3
  br label %63, !dbg !7966

63:                                               ; preds = %66, %62
  %64 = load i32, i32* %7, align 4, !dbg !7967
  %65 = icmp ugt i32 %64, 0, !dbg !7968
  br i1 %65, label %66, label %74, !dbg !7966

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 4, !dbg !7969
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7969
  store i8* %68, i8** %9, align 4, !dbg !7969
  %69 = load i8, i8* %67, align 1, !dbg !7971
  %70 = load i8*, i8** %8, align 4, !dbg !7972
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !7972
  store i8* %71, i8** %8, align 4, !dbg !7972
  store i8 %69, i8* %70, align 1, !dbg !7973
  %72 = load i32, i32* %7, align 4, !dbg !7974
  %73 = add i32 %72, -1, !dbg !7974
  store i32 %73, i32* %7, align 4, !dbg !7974
  br label %63, !dbg !7966, !llvm.loop !7975

74:                                               ; preds = %63
  %75 = load i8*, i8** %5, align 4, !dbg !7977
  store i8* %75, i8** %4, align 4, !dbg !7978
  br label %76, !dbg !7978

76:                                               ; preds = %74, %31
  %77 = load i8*, i8** %4, align 4, !dbg !7979
  ret i8* %77, !dbg !7979
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !7980 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7989, metadata !DIExpression()), !dbg !7990
  %12 = load i8*, i8** %5, align 4, !dbg !7991
  store i8* %12, i8** %8, align 4, !dbg !7990
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7992, metadata !DIExpression()), !dbg !7993
  %13 = load i32, i32* %6, align 4, !dbg !7994
  %14 = trunc i32 %13 to i8, !dbg !7995
  store i8 %14, i8* %9, align 1, !dbg !7993
  br label %15, !dbg !7996

15:                                               ; preds = %25, %3
  %16 = load i8*, i8** %8, align 4, !dbg !7997
  %17 = ptrtoint i8* %16 to i32, !dbg !7998
  %18 = and i32 %17, 3, !dbg !7999
  %19 = icmp ne i32 %18, 0, !dbg !7996
  br i1 %19, label %20, label %31, !dbg !7996

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4, !dbg !8000
  %22 = icmp eq i32 %21, 0, !dbg !8003
  br i1 %22, label %23, label %25, !dbg !8004

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 4, !dbg !8005
  store i8* %24, i8** %4, align 4, !dbg !8007
  br label %67, !dbg !8007

25:                                               ; preds = %20
  %26 = load i8, i8* %9, align 1, !dbg !8008
  %27 = load i8*, i8** %8, align 4, !dbg !8009
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !8009
  store i8* %28, i8** %8, align 4, !dbg !8009
  store i8 %26, i8* %27, align 1, !dbg !8010
  %29 = load i32, i32* %7, align 4, !dbg !8011
  %30 = add i32 %29, -1, !dbg !8011
  store i32 %30, i32* %7, align 4, !dbg !8011
  br label %15, !dbg !7996, !llvm.loop !8012

31:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32** %10, metadata !8014, metadata !DIExpression()), !dbg !8015
  %32 = load i8*, i8** %8, align 4, !dbg !8016
  %33 = bitcast i8* %32 to i32*, !dbg !8017
  store i32* %33, i32** %10, align 4, !dbg !8015
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8018, metadata !DIExpression()), !dbg !8019
  %34 = load i8, i8* %9, align 1, !dbg !8020
  %35 = zext i8 %34 to i32, !dbg !8021
  store i32 %35, i32* %11, align 4, !dbg !8019
  %36 = load i32, i32* %11, align 4, !dbg !8022
  %37 = shl i32 %36, 8, !dbg !8023
  %38 = load i32, i32* %11, align 4, !dbg !8024
  %39 = or i32 %38, %37, !dbg !8024
  store i32 %39, i32* %11, align 4, !dbg !8024
  %40 = load i32, i32* %11, align 4, !dbg !8025
  %41 = shl i32 %40, 16, !dbg !8026
  %42 = load i32, i32* %11, align 4, !dbg !8027
  %43 = or i32 %42, %41, !dbg !8027
  store i32 %43, i32* %11, align 4, !dbg !8027
  br label %44, !dbg !8028

44:                                               ; preds = %47, %31
  %45 = load i32, i32* %7, align 4, !dbg !8029
  %46 = icmp uge i32 %45, 4, !dbg !8030
  br i1 %46, label %47, label %53, !dbg !8028

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !8031
  %49 = load i32*, i32** %10, align 4, !dbg !8033
  %50 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !8033
  store i32* %50, i32** %10, align 4, !dbg !8033
  store i32 %48, i32* %49, align 4, !dbg !8034
  %51 = load i32, i32* %7, align 4, !dbg !8035
  %52 = sub i32 %51, 4, !dbg !8035
  store i32 %52, i32* %7, align 4, !dbg !8035
  br label %44, !dbg !8028, !llvm.loop !8036

53:                                               ; preds = %44
  %54 = load i32*, i32** %10, align 4, !dbg !8038
  %55 = bitcast i32* %54 to i8*, !dbg !8039
  store i8* %55, i8** %8, align 4, !dbg !8040
  br label %56, !dbg !8041

56:                                               ; preds = %59, %53
  %57 = load i32, i32* %7, align 4, !dbg !8042
  %58 = icmp ugt i32 %57, 0, !dbg !8043
  br i1 %58, label %59, label %65, !dbg !8041

59:                                               ; preds = %56
  %60 = load i8, i8* %9, align 1, !dbg !8044
  %61 = load i8*, i8** %8, align 4, !dbg !8046
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !8046
  store i8* %62, i8** %8, align 4, !dbg !8046
  store i8 %60, i8* %61, align 1, !dbg !8047
  %63 = load i32, i32* %7, align 4, !dbg !8048
  %64 = add i32 %63, -1, !dbg !8048
  store i32 %64, i32* %7, align 4, !dbg !8048
  br label %56, !dbg !8041, !llvm.loop !8049

65:                                               ; preds = %56
  %66 = load i8*, i8** %5, align 4, !dbg !8051
  store i8* %66, i8** %4, align 4, !dbg !8052
  br label %67, !dbg !8052

67:                                               ; preds = %65, %23
  %68 = load i8*, i8** %4, align 4, !dbg !8053
  ret i8* %68, !dbg !8053
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memchr(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8054 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8057, metadata !DIExpression()), !dbg !8058
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8061, metadata !DIExpression()), !dbg !8062
  %9 = load i32, i32* %7, align 4, !dbg !8063
  %10 = icmp ne i32 %9, 0, !dbg !8065
  br i1 %10, label %11, label %31, !dbg !8066

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8067, metadata !DIExpression()), !dbg !8069
  %12 = load i8*, i8** %5, align 4, !dbg !8070
  store i8* %12, i8** %8, align 4, !dbg !8069
  br label %13, !dbg !8071

13:                                               ; preds = %26, %11
  %14 = load i8*, i8** %8, align 4, !dbg !8072
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8072
  store i8* %15, i8** %8, align 4, !dbg !8072
  %16 = load i8, i8* %14, align 1, !dbg !8075
  %17 = zext i8 %16 to i32, !dbg !8075
  %18 = load i32, i32* %6, align 4, !dbg !8076
  %19 = trunc i32 %18 to i8, !dbg !8077
  %20 = zext i8 %19 to i32, !dbg !8077
  %21 = icmp eq i32 %17, %20, !dbg !8078
  br i1 %21, label %22, label %25, !dbg !8079

22:                                               ; preds = %13
  %23 = load i8*, i8** %8, align 4, !dbg !8080
  %24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !8082
  store i8* %24, i8** %4, align 4, !dbg !8083
  br label %32, !dbg !8083

25:                                               ; preds = %13
  br label %26, !dbg !8084

26:                                               ; preds = %25
  %27 = load i32, i32* %7, align 4, !dbg !8085
  %28 = add i32 %27, -1, !dbg !8085
  store i32 %28, i32* %7, align 4, !dbg !8085
  %29 = icmp ne i32 %28, 0, !dbg !8086
  br i1 %29, label %13, label %30, !dbg !8084, !llvm.loop !8087

30:                                               ; preds = %26
  br label %31, !dbg !8089

31:                                               ; preds = %30, %3
  store i8* null, i8** %4, align 4, !dbg !8090
  br label %32, !dbg !8090

32:                                               ; preds = %31, %22
  %33 = load i8*, i8** %4, align 4, !dbg !8091
  ret i8* %33, !dbg !8091
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) #1 !dbg !8092 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !8093, metadata !DIExpression()), !dbg !8094
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !8095
  store i32 (i32)* %3, i32 (i32)** @_stdout_hook, align 4, !dbg !8096
  ret void, !dbg !8097
}

; Function Attrs: noinline nounwind optnone
define internal i32 @_stdout_hook_default(i32 noundef %0) #1 !dbg !8098 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8099, metadata !DIExpression()), !dbg !8100
  %3 = load i32, i32* %2, align 4, !dbg !8101
  ret i32 -1, !dbg !8102
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8103 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8106, metadata !DIExpression()), !dbg !8107
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8108, metadata !DIExpression()), !dbg !8109
  %5 = load i32*, i32** %4, align 4, !dbg !8110
  %6 = icmp eq i32* %5, inttoptr (i32 2 to i32*), !dbg !8111
  br i1 %6, label %10, label %7, !dbg !8112

7:                                                ; preds = %2
  %8 = load i32*, i32** %4, align 4, !dbg !8113
  %9 = icmp eq i32* %8, inttoptr (i32 3 to i32*), !dbg !8114
  br i1 %9, label %10, label %14, !dbg !8115

10:                                               ; preds = %7, %2
  %11 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8116
  %12 = load i32, i32* %3, align 4, !dbg !8117
  %13 = call i32 %11(i32 noundef %12) #10, !dbg !8116
  br label %15, !dbg !8115

14:                                               ; preds = %7
  br label %15, !dbg !8115

15:                                               ; preds = %14, %10
  %16 = phi i32 [ %13, %10 ], [ -1, %14 ], !dbg !8115
  ret i32 %16, !dbg !8118
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8119 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8120, metadata !DIExpression()), !dbg !8121
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8122, metadata !DIExpression()), !dbg !8123
  %5 = load i32, i32* %3, align 4, !dbg !8124
  %6 = load i32*, i32** %4, align 4, !dbg !8125
  %7 = call i32 @zephyr_fputc(i32 noundef %5, i32* noundef %6) #10, !dbg !8126
  ret i32 %7, !dbg !8127
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8128 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8130, metadata !DIExpression()), !dbg !8131
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8132, metadata !DIExpression()), !dbg !8133
  br label %5, !dbg !8134

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8135, !srcloc !8137
  br label %6, !dbg !8135

6:                                                ; preds = %5
  %7 = load i32, i32* %3, align 4, !dbg !8138
  %8 = load i32*, i32** %4, align 4, !dbg !8139
  %9 = call i32 @z_impl_zephyr_fputc(i32 noundef %7, i32* noundef %8) #10, !dbg !8140
  ret i32 %9, !dbg !8141
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) #1 !dbg !8142 {
  %3 = alloca i8*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8150, metadata !DIExpression()), !dbg !8151
  %7 = load i8*, i8** %3, align 4, !dbg !8152
  %8 = call i32 @strlen(i8* noundef %7) #10, !dbg !8153
  store i32 %8, i32* %5, align 4, !dbg !8151
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8154, metadata !DIExpression()), !dbg !8155
  %9 = load i8*, i8** %3, align 4, !dbg !8156
  %10 = load i32, i32* %5, align 4, !dbg !8157
  %11 = load i32*, i32** %4, align 4, !dbg !8158
  %12 = call i32 @fwrite(i8* noundef %9, i32 noundef 1, i32 noundef %10, i32* noundef %11) #10, !dbg !8159
  store i32 %12, i32* %6, align 4, !dbg !8160
  %13 = load i32, i32* %5, align 4, !dbg !8161
  %14 = load i32, i32* %6, align 4, !dbg !8162
  %15 = icmp eq i32 %13, %14, !dbg !8163
  %16 = zext i1 %15 to i64, !dbg !8161
  %17 = select i1 %15, i32 0, i32 -1, !dbg !8161
  ret i32 %17, !dbg !8164
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8165 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8168, metadata !DIExpression()), !dbg !8169
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8170, metadata !DIExpression()), !dbg !8171
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8174, metadata !DIExpression()), !dbg !8175
  %9 = load i8*, i8** %5, align 4, !dbg !8176
  %10 = load i32, i32* %6, align 4, !dbg !8177
  %11 = load i32, i32* %7, align 4, !dbg !8178
  %12 = load i32*, i32** %8, align 4, !dbg !8179
  %13 = call i32 @zephyr_fwrite(i8* noundef %9, i32 noundef %10, i32 noundef %11, i32* noundef %12) #10, !dbg !8180
  ret i32 %13, !dbg !8181
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8182 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8183, metadata !DIExpression()), !dbg !8184
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8185, metadata !DIExpression()), !dbg !8186
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8187, metadata !DIExpression()), !dbg !8188
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8189, metadata !DIExpression()), !dbg !8190
  br label %9, !dbg !8191

9:                                                ; preds = %4
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8192, !srcloc !8194
  br label %10, !dbg !8192

10:                                               ; preds = %9
  %11 = load i8*, i8** %5, align 4, !dbg !8195
  %12 = load i32, i32* %6, align 4, !dbg !8196
  %13 = load i32, i32* %7, align 4, !dbg !8197
  %14 = load i32*, i32** %8, align 4, !dbg !8198
  %15 = call i32 @z_impl_zephyr_fwrite(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32* noundef %14) #10, !dbg !8199
  ret i32 %15, !dbg !8200
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8201 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8202, metadata !DIExpression()), !dbg !8203
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8206, metadata !DIExpression()), !dbg !8207
  store i32* %3, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !8208, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8214, metadata !DIExpression()), !dbg !8215
  %13 = load i32*, i32** %9, align 4, !dbg !8216
  %14 = icmp ne i32* %13, inttoptr (i32 2 to i32*), !dbg !8218
  br i1 %14, label %15, label %18, !dbg !8219

15:                                               ; preds = %4
  %16 = load i32*, i32** %9, align 4, !dbg !8220
  %17 = icmp ne i32* %16, inttoptr (i32 3 to i32*), !dbg !8221
  br i1 %17, label %24, label %18, !dbg !8222

18:                                               ; preds = %15, %4
  %19 = load i32, i32* %8, align 4, !dbg !8223
  %20 = icmp eq i32 %19, 0, !dbg !8224
  br i1 %20, label %24, label %21, !dbg !8225

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !8226
  %23 = icmp eq i32 %22, 0, !dbg !8227
  br i1 %23, label %24, label %25, !dbg !8228

24:                                               ; preds = %21, %18, %15
  store i32 0, i32* %5, align 4, !dbg !8229
  br label %56, !dbg !8229

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 4, !dbg !8231
  store i8* %26, i8** %12, align 4, !dbg !8232
  %27 = load i32, i32* %8, align 4, !dbg !8233
  store i32 %27, i32* %10, align 4, !dbg !8234
  br label %28, !dbg !8235

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %7, align 4, !dbg !8236
  store i32 %29, i32* %11, align 4, !dbg !8238
  br label %30, !dbg !8239

30:                                               ; preds = %42, %28
  %31 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8240
  %32 = load i8*, i8** %12, align 4, !dbg !8243
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8243
  store i8* %33, i8** %12, align 4, !dbg !8243
  %34 = load i8, i8* %32, align 1, !dbg !8244
  %35 = zext i8 %34 to i32, !dbg !8245
  %36 = call i32 %31(i32 noundef %35) #10, !dbg !8240
  %37 = icmp eq i32 %36, -1, !dbg !8246
  br i1 %37, label %38, label %39, !dbg !8247

38:                                               ; preds = %30
  br label %52, !dbg !8248

39:                                               ; preds = %30
  %40 = load i32, i32* %11, align 4, !dbg !8250
  %41 = add i32 %40, -1, !dbg !8250
  store i32 %41, i32* %11, align 4, !dbg !8250
  br label %42, !dbg !8251

42:                                               ; preds = %39
  %43 = load i32, i32* %11, align 4, !dbg !8252
  %44 = icmp ugt i32 %43, 0, !dbg !8253
  br i1 %44, label %30, label %45, !dbg !8251, !llvm.loop !8254

45:                                               ; preds = %42
  %46 = load i32, i32* %10, align 4, !dbg !8256
  %47 = add i32 %46, -1, !dbg !8256
  store i32 %47, i32* %10, align 4, !dbg !8256
  br label %48, !dbg !8257

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 4, !dbg !8258
  %50 = icmp ugt i32 %49, 0, !dbg !8259
  br i1 %50, label %28, label %51, !dbg !8257, !llvm.loop !8260

51:                                               ; preds = %48
  br label %52, !dbg !8257

52:                                               ; preds = %51, %38
  call void @llvm.dbg.label(metadata !8262), !dbg !8263
  %53 = load i32, i32* %8, align 4, !dbg !8264
  %54 = load i32, i32* %10, align 4, !dbg !8265
  %55 = sub i32 %53, %54, !dbg !8266
  store i32 %55, i32* %5, align 4, !dbg !8267
  br label %56, !dbg !8267

56:                                               ; preds = %52, %24
  %57 = load i32, i32* %5, align 4, !dbg !8268
  ret i32 %57, !dbg !8268
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @puts(i8* noundef %0) #1 !dbg !8269 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8272, metadata !DIExpression()), !dbg !8273
  %4 = load i8*, i8** %3, align 4, !dbg !8274
  %5 = call i32 @fputs(i8* noundef %4, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8276
  %6 = icmp eq i32 %5, -1, !dbg !8277
  br i1 %6, label %7, label %8, !dbg !8278

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !8279
  br label %13, !dbg !8279

8:                                                ; preds = %1
  %9 = call i32 @fputc(i32 noundef 10, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8281
  %10 = icmp eq i32 %9, -1, !dbg !8282
  %11 = zext i1 %10 to i64, !dbg !8281
  %12 = select i1 %10, i32 -1, i32 0, !dbg !8281
  store i32 %12, i32* %2, align 4, !dbg !8283
  br label %13, !dbg !8283

13:                                               ; preds = %8, %7
  %14 = load i32, i32* %2, align 4, !dbg !8284
  ret i32 %14, !dbg !8284
}

; Function Attrs: noinline nounwind optnone
define internal void @sam0_eic_isr(%struct.device.73* noundef %0) #1 !dbg !8285 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.sam0_eic_data*, align 4
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_thread_stack_element*, align 4
  %7 = alloca %struct.sam0_eic_port_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8288, metadata !DIExpression()), !dbg !8289
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %3, metadata !8290, metadata !DIExpression()), !dbg !8293
  %8 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8294
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !8295
  %10 = load i8*, i8** %9, align 4, !dbg !8295
  %11 = bitcast i8* %10 to %struct.sam0_eic_data*, !dbg !8294
  store %struct.sam0_eic_data* %11, %struct.sam0_eic_data** %3, align 4, !dbg !8293
  call void @llvm.dbg.declare(metadata i16* %4, metadata !8296, metadata !DIExpression()), !dbg !8297
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8298
  %13 = trunc i32 %12 to i16, !dbg !8299
  store i16 %13, i16* %4, align 2, !dbg !8297
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8300, metadata !DIExpression()), !dbg !8301
  %14 = load i16, i16* %4, align 2, !dbg !8302
  %15 = zext i16 %14 to i32, !dbg !8302
  store volatile i32 %15, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8303
  %16 = load i16, i16* %4, align 2, !dbg !8304
  %17 = zext i16 %16 to i32, !dbg !8304
  %18 = and i32 %17, 255, !dbg !8306
  %19 = icmp ne i32 %18, 0, !dbg !8306
  br i1 %19, label %20, label %21, !dbg !8307

20:                                               ; preds = %1
  store i32 0, i32* %5, align 4, !dbg !8308
  br label %26, !dbg !8310

21:                                               ; preds = %1
  store i32 8, i32* %5, align 4, !dbg !8311
  %22 = load i16, i16* %4, align 2, !dbg !8313
  %23 = zext i16 %22 to i32, !dbg !8313
  %24 = ashr i32 %23, 8, !dbg !8313
  %25 = trunc i32 %24 to i16, !dbg !8313
  store i16 %25, i16* %4, align 2, !dbg !8313
  br label %26

26:                                               ; preds = %21, %20
  br label %27, !dbg !8314

27:                                               ; preds = %62, %26
  %28 = load i16, i16* %4, align 2, !dbg !8315
  %29 = icmp ne i16 %28, 0, !dbg !8318
  br i1 %29, label %30, label %69, !dbg !8318

30:                                               ; preds = %27
  %31 = load i16, i16* %4, align 2, !dbg !8319
  %32 = zext i16 %31 to i32, !dbg !8319
  %33 = and i32 %32, 1, !dbg !8322
  %34 = icmp ne i32 %33, 0, !dbg !8322
  br i1 %34, label %36, label %35, !dbg !8323

35:                                               ; preds = %30
  br label %62, !dbg !8324

36:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %6, metadata !8326, metadata !DIExpression()), !dbg !8328
  %37 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8329
  %38 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %37, i32 0, i32 1, !dbg !8330
  %39 = load i32, i32* %5, align 4, !dbg !8331
  %40 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %38, i32 0, i32 %39, !dbg !8329
  store %struct.z_thread_stack_element* %40, %struct.z_thread_stack_element** %6, align 4, !dbg !8328
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %7, metadata !8332, metadata !DIExpression()), !dbg !8334
  %41 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8335
  %42 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %41, i32 0, i32 0, !dbg !8336
  %43 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8337
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8338
  %45 = load i8, i8* %44, align 1, !dbg !8338
  %46 = lshr i8 %45, 5, !dbg !8338
  %47 = and i8 %46, 3, !dbg !8338
  %48 = zext i8 %47 to i32, !dbg !8335
  %49 = getelementptr inbounds [2 x %struct.sam0_eic_port_data], [2 x %struct.sam0_eic_port_data]* %42, i32 0, i32 %48, !dbg !8335
  store %struct.sam0_eic_port_data* %49, %struct.sam0_eic_port_data** %7, align 4, !dbg !8334
  %50 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8339
  %51 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %50, i32 0, i32 0, !dbg !8340
  %52 = load void (i32, i8*)*, void (i32, i8*)** %51, align 4, !dbg !8340
  %53 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8341
  %54 = bitcast %struct.z_thread_stack_element* %53 to i8*, !dbg !8341
  %55 = load i8, i8* %54, align 1, !dbg !8341
  %56 = and i8 %55, 31, !dbg !8341
  %57 = zext i8 %56 to i32, !dbg !8341
  %58 = shl i32 1, %57, !dbg !8341
  %59 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8342
  %60 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %59, i32 0, i32 1, !dbg !8343
  %61 = load i8*, i8** %60, align 4, !dbg !8343
  call void %52(i32 noundef %58, i8* noundef %61) #10, !dbg !8339
  br label %62, !dbg !8344

62:                                               ; preds = %36, %35
  %63 = load i16, i16* %4, align 2, !dbg !8345
  %64 = zext i16 %63 to i32, !dbg !8345
  %65 = ashr i32 %64, 1, !dbg !8345
  %66 = trunc i32 %65 to i16, !dbg !8345
  store i16 %66, i16* %4, align 2, !dbg !8345
  %67 = load i32, i32* %5, align 4, !dbg !8346
  %68 = add i32 %67, 1, !dbg !8346
  store i32 %68, i32* %5, align 4, !dbg !8346
  br label %27, !dbg !8347, !llvm.loop !8348

69:                                               ; preds = %27
  ret void, !dbg !8350
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_init(%struct.device.73* noundef %0) #1 !dbg !1605 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8351, metadata !DIExpression()), !dbg !8352
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8353
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8354
  %5 = and i32 %4, -65, !dbg !8354
  %6 = or i32 %5, 64, !dbg !8354
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8354
  store volatile i16 16389, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !8355
  br label %7, !dbg !8356

7:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #10, !dbg !8357
  call void @arch_irq_enable(i32 noundef 4) #10, !dbg !8360
  br label %8, !dbg !8360

8:                                                ; preds = %7
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8361
  call void @wait_synchronization() #10, !dbg !8362
  ret i32 0, !dbg !8363
}

; Function Attrs: noinline nounwind optnone
define internal void @set_eic_enable(i1 noundef zeroext %0) #1 !dbg !8364 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !8367, metadata !DIExpression()), !dbg !8368
  %4 = load i8, i8* %2, align 1, !dbg !8369
  %5 = trunc i8 %4 to i1, !dbg !8369
  %6 = zext i1 %5 to i8, !dbg !8369
  %7 = load volatile i8, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8370
  %8 = and i8 %6, 1, !dbg !8370
  %9 = shl i8 %8, 1, !dbg !8370
  %10 = and i8 %7, -3, !dbg !8370
  %11 = or i8 %10, %9, !dbg !8370
  store volatile i8 %11, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization() #1 !dbg !8372 {
  br label %1, !dbg !8373

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !8374
  %3 = lshr i8 %2, 7, !dbg !8374
  %4 = icmp ne i8 %3, 0, !dbg !8373
  br i1 %4, label %5, label %6, !dbg !8373

5:                                                ; preds = %1
  br label %1, !dbg !8373, !llvm.loop !8375

6:                                                ; preds = %1
  ret void, !dbg !8377
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_acquire(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3, void (i32, i8*)* noundef %4, i8* noundef %5) #1 !dbg !8378 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca void (i32, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca %struct.device.73*, align 4
  %18 = alloca %struct.sam0_eic_data*, align 4
  %19 = alloca %struct.sam0_eic_port_data*, align 4
  %20 = alloca %struct.z_thread_stack_element*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8381, metadata !DIExpression()), !dbg !8382
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8383, metadata !DIExpression()), !dbg !8384
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8385, metadata !DIExpression()), !dbg !8386
  %27 = zext i1 %3 to i8
  store i8 %27, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !8387, metadata !DIExpression()), !dbg !8388
  store void (i32, i8*)* %4, void (i32, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i32, i8*)** %15, metadata !8389, metadata !DIExpression()), !dbg !8390
  store i8* %5, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata %struct.device.73** %17, metadata !8393, metadata !DIExpression()), !dbg !8395
  store %struct.device.73* @__device_dts_ord_18, %struct.device.73** %17, align 4, !dbg !8395
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %18, metadata !8396, metadata !DIExpression()), !dbg !8397
  %28 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_18, i32 0, i32 4), align 4, !dbg !8398
  %29 = bitcast i8* %28 to %struct.sam0_eic_data*, !dbg !8399
  store %struct.sam0_eic_data* %29, %struct.sam0_eic_data** %18, align 4, !dbg !8397
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %19, metadata !8400, metadata !DIExpression()), !dbg !8401
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %20, metadata !8402, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8404, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8406, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8408, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8410, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8414, metadata !DIExpression()), !dbg !8415
  %30 = load i32, i32* %11, align 4, !dbg !8416
  %31 = load i32, i32* %12, align 4, !dbg !8417
  %32 = call i32 @sam0_eic_map_to_line(i32 noundef %30, i32 noundef %31) #10, !dbg !8418
  store i32 %32, i32* %22, align 4, !dbg !8419
  %33 = load i32, i32* %22, align 4, !dbg !8420
  %34 = icmp slt i32 %33, 0, !dbg !8422
  br i1 %34, label %35, label %37, !dbg !8423

35:                                               ; preds = %6
  %36 = load i32, i32* %22, align 4, !dbg !8424
  store i32 %36, i32* %10, align 4, !dbg !8426
  br label %170, !dbg !8426

37:                                               ; preds = %6
  %38 = load i32, i32* %22, align 4, !dbg !8427
  %39 = shl i32 1, %38, !dbg !8427
  store i32 %39, i32* %21, align 4, !dbg !8428
  %40 = load i32, i32* %22, align 4, !dbg !8429
  %41 = sdiv i32 %40, 8, !dbg !8430
  store i32 %41, i32* %23, align 4, !dbg !8431
  %42 = load i32, i32* %22, align 4, !dbg !8432
  %43 = srem i32 %42, 8, !dbg !8433
  %44 = mul nsw i32 %43, 4, !dbg !8434
  store i32 %44, i32* %24, align 4, !dbg !8435
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8436, metadata !DIExpression()) #9, !dbg !8438
  %45 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8440, !srcloc !8441
  store i32 %45, i32* %9, align 4, !dbg !8440
  %46 = load i32, i32* %9, align 4, !dbg !8442
  store i32 %46, i32* %25, align 4, !dbg !8443
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8444
  %47 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8445
  %48 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %47, i32 0, i32 1, !dbg !8446
  %49 = load i32, i32* %22, align 4, !dbg !8447
  %50 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %48, i32 0, i32 %49, !dbg !8445
  store %struct.z_thread_stack_element* %50, %struct.z_thread_stack_element** %20, align 4, !dbg !8448
  %51 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8449
  %52 = bitcast %struct.z_thread_stack_element* %51 to i8*, !dbg !8451
  %53 = load i8, i8* %52, align 1, !dbg !8451
  %54 = lshr i8 %53, 7, !dbg !8451
  %55 = icmp ne i8 %54, 0, !dbg !8449
  br i1 %55, label %56, label %75, !dbg !8452

56:                                               ; preds = %37
  %57 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8453
  %58 = bitcast %struct.z_thread_stack_element* %57 to i8*, !dbg !8456
  %59 = load i8, i8* %58, align 1, !dbg !8456
  %60 = lshr i8 %59, 5, !dbg !8456
  %61 = and i8 %60, 3, !dbg !8456
  %62 = zext i8 %61 to i32, !dbg !8453
  %63 = load i32, i32* %11, align 4, !dbg !8457
  %64 = icmp ne i32 %62, %63, !dbg !8458
  br i1 %64, label %73, label %65, !dbg !8459

65:                                               ; preds = %56
  %66 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8460
  %67 = bitcast %struct.z_thread_stack_element* %66 to i8*, !dbg !8461
  %68 = load i8, i8* %67, align 1, !dbg !8461
  %69 = and i8 %68, 31, !dbg !8461
  %70 = zext i8 %69 to i32, !dbg !8460
  %71 = load i32, i32* %12, align 4, !dbg !8462
  %72 = icmp ne i32 %70, %71, !dbg !8463
  br i1 %72, label %73, label %74, !dbg !8464

73:                                               ; preds = %65, %56
  br label %163, !dbg !8465

74:                                               ; preds = %65
  br label %75, !dbg !8467

75:                                               ; preds = %74, %37
  %76 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8468
  %77 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %76, i32 0, i32 0, !dbg !8469
  %78 = load i32, i32* %11, align 4, !dbg !8470
  %79 = getelementptr inbounds [2 x %struct.sam0_eic_port_data], [2 x %struct.sam0_eic_port_data]* %77, i32 0, i32 %78, !dbg !8468
  store %struct.sam0_eic_port_data* %79, %struct.sam0_eic_port_data** %19, align 4, !dbg !8471
  %80 = load void (i32, i8*)*, void (i32, i8*)** %15, align 4, !dbg !8472
  %81 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8473
  %82 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %81, i32 0, i32 0, !dbg !8474
  store void (i32, i8*)* %80, void (i32, i8*)** %82, align 4, !dbg !8475
  %83 = load i8*, i8** %16, align 4, !dbg !8476
  %84 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8477
  %85 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %84, i32 0, i32 1, !dbg !8478
  store i8* %83, i8** %85, align 4, !dbg !8479
  %86 = load i32, i32* %12, align 4, !dbg !8480
  %87 = trunc i32 %86 to i8, !dbg !8480
  %88 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8481
  %89 = bitcast %struct.z_thread_stack_element* %88 to i8*, !dbg !8482
  %90 = load i8, i8* %89, align 1, !dbg !8483
  %91 = and i8 %87, 31, !dbg !8483
  %92 = and i8 %90, -32, !dbg !8483
  %93 = or i8 %92, %91, !dbg !8483
  store i8 %93, i8* %89, align 1, !dbg !8483
  %94 = load i32, i32* %11, align 4, !dbg !8484
  %95 = trunc i32 %94 to i8, !dbg !8484
  %96 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8485
  %97 = bitcast %struct.z_thread_stack_element* %96 to i8*, !dbg !8486
  %98 = load i8, i8* %97, align 1, !dbg !8487
  %99 = and i8 %95, 3, !dbg !8487
  %100 = shl i8 %99, 5, !dbg !8487
  %101 = and i8 %98, -97, !dbg !8487
  %102 = or i8 %101, %100, !dbg !8487
  store i8 %102, i8* %97, align 1, !dbg !8487
  %103 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8488
  %104 = bitcast %struct.z_thread_stack_element* %103 to i8*, !dbg !8489
  %105 = load i8, i8* %104, align 1, !dbg !8490
  %106 = and i8 %105, 127, !dbg !8490
  %107 = or i8 %106, -128, !dbg !8490
  store i8 %107, i8* %104, align 1, !dbg !8490
  %108 = load i32, i32* %23, align 4, !dbg !8491
  %109 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %108, !dbg !8492
  %110 = bitcast %union.PORT_DIR_Type* %109 to i32*, !dbg !8493
  %111 = load volatile i32, i32* %110, align 4, !dbg !8493
  store i32 %111, i32* %26, align 4, !dbg !8494
  %112 = load i32, i32* %24, align 4, !dbg !8495
  %113 = shl i32 15, %112, !dbg !8496
  %114 = xor i32 %113, -1, !dbg !8497
  %115 = load i32, i32* %26, align 4, !dbg !8498
  %116 = and i32 %115, %114, !dbg !8498
  store i32 %116, i32* %26, align 4, !dbg !8498
  %117 = load i32, i32* %13, align 4, !dbg !8499
  switch i32 %117, label %143 [
    i32 0, label %118
    i32 1, label %123
    i32 2, label %128
    i32 3, label %133
    i32 4, label %138
  ], !dbg !8500

118:                                              ; preds = %75
  %119 = load i32, i32* %24, align 4, !dbg !8501
  %120 = shl i32 1, %119, !dbg !8503
  %121 = load i32, i32* %26, align 4, !dbg !8504
  %122 = or i32 %121, %120, !dbg !8504
  store i32 %122, i32* %26, align 4, !dbg !8504
  br label %143, !dbg !8505

123:                                              ; preds = %75
  %124 = load i32, i32* %24, align 4, !dbg !8506
  %125 = shl i32 2, %124, !dbg !8507
  %126 = load i32, i32* %26, align 4, !dbg !8508
  %127 = or i32 %126, %125, !dbg !8508
  store i32 %127, i32* %26, align 4, !dbg !8508
  br label %143, !dbg !8509

128:                                              ; preds = %75
  %129 = load i32, i32* %24, align 4, !dbg !8510
  %130 = shl i32 3, %129, !dbg !8511
  %131 = load i32, i32* %26, align 4, !dbg !8512
  %132 = or i32 %131, %130, !dbg !8512
  store i32 %132, i32* %26, align 4, !dbg !8512
  br label %143, !dbg !8513

133:                                              ; preds = %75
  %134 = load i32, i32* %24, align 4, !dbg !8514
  %135 = shl i32 4, %134, !dbg !8515
  %136 = load i32, i32* %26, align 4, !dbg !8516
  %137 = or i32 %136, %135, !dbg !8516
  store i32 %137, i32* %26, align 4, !dbg !8516
  br label %143, !dbg !8517

138:                                              ; preds = %75
  %139 = load i32, i32* %24, align 4, !dbg !8518
  %140 = shl i32 5, %139, !dbg !8519
  %141 = load i32, i32* %26, align 4, !dbg !8520
  %142 = or i32 %141, %140, !dbg !8520
  store i32 %142, i32* %26, align 4, !dbg !8520
  br label %143, !dbg !8521

143:                                              ; preds = %75, %138, %133, %128, %123, %118
  %144 = load i8, i8* %14, align 1, !dbg !8522
  %145 = trunc i8 %144 to i1, !dbg !8522
  br i1 %145, label %146, label %151, !dbg !8524

146:                                              ; preds = %143
  %147 = load i32, i32* %24, align 4, !dbg !8525
  %148 = shl i32 8, %147, !dbg !8527
  %149 = load i32, i32* %26, align 4, !dbg !8528
  %150 = or i32 %149, %148, !dbg !8528
  store i32 %150, i32* %26, align 4, !dbg !8528
  br label %151, !dbg !8529

151:                                              ; preds = %146, %143
  %152 = load i32, i32* %26, align 4, !dbg !8530
  %153 = load i32, i32* %23, align 4, !dbg !8531
  %154 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %153, !dbg !8532
  %155 = bitcast %union.PORT_DIR_Type* %154 to i32*, !dbg !8533
  store volatile i32 %152, i32* %155, align 4, !dbg !8534
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8535
  call void @wait_synchronization() #10, !dbg !8536
  %156 = load i32, i32* %21, align 4, !dbg !8537
  store volatile i32 %156, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8538
  %157 = load i32, i32* %25, align 4, !dbg !8539
  store i32 %157, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8540, metadata !DIExpression()) #9, !dbg !8542
  %158 = load i32, i32* %7, align 4, !dbg !8544
  %159 = icmp ne i32 %158, 0, !dbg !8546
  br i1 %159, label %160, label %161, !dbg !8547

160:                                              ; preds = %151
  br label %162, !dbg !8548

161:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8550, !srcloc !8551
  br label %162, !dbg !8552

162:                                              ; preds = %160, %161
  store i32 0, i32* %10, align 4, !dbg !8553
  br label %170, !dbg !8553

163:                                              ; preds = %73
  call void @llvm.dbg.label(metadata !8554), !dbg !8555
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8556
  call void @wait_synchronization() #10, !dbg !8557
  %164 = load i32, i32* %25, align 4, !dbg !8558
  store i32 %164, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8540, metadata !DIExpression()) #9, !dbg !8559
  %165 = load i32, i32* %8, align 4, !dbg !8561
  %166 = icmp ne i32 %165, 0, !dbg !8562
  br i1 %166, label %167, label %168, !dbg !8563

167:                                              ; preds = %163
  br label %169, !dbg !8564

168:                                              ; preds = %163
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8565, !srcloc !8551
  br label %169, !dbg !8566

169:                                              ; preds = %167, %168
  store i32 -16, i32* %10, align 4, !dbg !8567
  br label %170, !dbg !8567

170:                                              ; preds = %169, %162, %35
  %171 = load i32, i32* %10, align 4, !dbg !8568
  ret i32 %171, !dbg !8568
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #1 !dbg !8569 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8574, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.declare(metadata i8* %6, metadata !8576, metadata !DIExpression()), !dbg !8577
  %7 = load i32, i32* %4, align 4, !dbg !8578
  %8 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* @sam0_eic_channels, i32 0, i32 %7, !dbg !8579
  %9 = load i32, i32* %5, align 4, !dbg !8580
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 %9, !dbg !8579
  %11 = load i8, i8* %10, align 1, !dbg !8579
  store i8 %11, i8* %6, align 1, !dbg !8577
  %12 = load i8, i8* %6, align 1, !dbg !8581
  %13 = zext i8 %12 to i32, !dbg !8581
  %14 = icmp eq i32 %13, 255, !dbg !8583
  br i1 %14, label %15, label %16, !dbg !8584

15:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !8585
  br label %19, !dbg !8585

16:                                               ; preds = %2
  %17 = load i8, i8* %6, align 1, !dbg !8587
  %18 = zext i8 %17 to i32, !dbg !8587
  store i32 %18, i32* %3, align 4, !dbg !8588
  br label %19, !dbg !8588

19:                                               ; preds = %16, %15
  %20 = load i32, i32* %3, align 4, !dbg !8589
  ret i32 %20, !dbg !8589
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_release(i32 noundef %0, i32 noundef %1) #1 !dbg !8590 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8591, metadata !DIExpression()), !dbg !8592
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8593, metadata !DIExpression()), !dbg !8594
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !8595, metadata !DIExpression()), !dbg !8596
  store %struct.device.73* @__device_dts_ord_18, %struct.device.73** %8, align 4, !dbg !8596
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !8597, metadata !DIExpression()), !dbg !8598
  %15 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_18, i32 0, i32 4), align 4, !dbg !8599
  %16 = bitcast i8* %15 to %struct.sam0_eic_data*, !dbg !8600
  store %struct.sam0_eic_data* %16, %struct.sam0_eic_data** %9, align 4, !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8601, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8603, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8609, metadata !DIExpression()), !dbg !8610
  %17 = load i32, i32* %6, align 4, !dbg !8611
  %18 = load i32, i32* %7, align 4, !dbg !8612
  %19 = call i32 @sam0_eic_map_to_line(i32 noundef %17, i32 noundef %18) #10, !dbg !8613
  store i32 %19, i32* %11, align 4, !dbg !8614
  %20 = load i32, i32* %11, align 4, !dbg !8615
  %21 = icmp slt i32 %20, 0, !dbg !8617
  br i1 %21, label %22, label %24, !dbg !8618

22:                                               ; preds = %2
  %23 = load i32, i32* %11, align 4, !dbg !8619
  store i32 %23, i32* %5, align 4, !dbg !8621
  br label %65, !dbg !8621

24:                                               ; preds = %2
  %25 = load i32, i32* %11, align 4, !dbg !8622
  %26 = shl i32 1, %25, !dbg !8622
  store i32 %26, i32* %10, align 4, !dbg !8623
  %27 = load i32, i32* %11, align 4, !dbg !8624
  %28 = sdiv i32 %27, 8, !dbg !8625
  store i32 %28, i32* %12, align 4, !dbg !8626
  %29 = load i32, i32* %11, align 4, !dbg !8627
  %30 = srem i32 %29, 8, !dbg !8628
  %31 = mul nsw i32 %30, 4, !dbg !8629
  store i32 %31, i32* %13, align 4, !dbg !8630
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8436, metadata !DIExpression()) #9, !dbg !8631
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8633, !srcloc !8441
  store i32 %32, i32* %4, align 4, !dbg !8633
  %33 = load i32, i32* %4, align 4, !dbg !8634
  store i32 %33, i32* %14, align 4, !dbg !8635
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8636
  call void @wait_synchronization() #10, !dbg !8637
  %34 = load i32, i32* %6, align 4, !dbg !8638
  %35 = load i32, i32* %7, align 4, !dbg !8640
  %36 = load i32, i32* %11, align 4, !dbg !8641
  %37 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %34, i32 noundef %35, i32 noundef %36) #10, !dbg !8642
  br i1 %37, label %39, label %38, !dbg !8643

38:                                               ; preds = %24
  br label %58, !dbg !8644

39:                                               ; preds = %24
  %40 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !8646
  %41 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %40, i32 0, i32 1, !dbg !8647
  %42 = load i32, i32* %11, align 4, !dbg !8648
  %43 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %41, i32 0, i32 %42, !dbg !8646
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8649
  %45 = load i8, i8* %44, align 1, !dbg !8650
  %46 = and i8 %45, 127, !dbg !8650
  %47 = or i8 %46, 0, !dbg !8650
  store i8 %47, i8* %44, align 1, !dbg !8650
  %48 = load i32, i32* %13, align 4, !dbg !8651
  %49 = shl i32 15, %48, !dbg !8652
  %50 = xor i32 %49, -1, !dbg !8653
  %51 = load i32, i32* %12, align 4, !dbg !8654
  %52 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %51, !dbg !8655
  %53 = bitcast %union.PORT_DIR_Type* %52 to i32*, !dbg !8656
  %54 = load volatile i32, i32* %53, align 4, !dbg !8657
  %55 = and i32 %54, %50, !dbg !8657
  store volatile i32 %55, i32* %53, align 4, !dbg !8657
  %56 = load i32, i32* %10, align 4, !dbg !8658
  store volatile i32 %56, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !8659
  %57 = load i32, i32* %10, align 4, !dbg !8660
  store volatile i32 %57, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8661
  br label %58, !dbg !8662

58:                                               ; preds = %39, %38
  call void @llvm.dbg.label(metadata !8663), !dbg !8664
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8665
  call void @wait_synchronization() #10, !dbg !8666
  %59 = load i32, i32* %14, align 4, !dbg !8667
  store i32 %59, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8540, metadata !DIExpression()) #9, !dbg !8668
  %60 = load i32, i32* %3, align 4, !dbg !8670
  %61 = icmp ne i32 %60, 0, !dbg !8671
  br i1 %61, label %62, label %63, !dbg !8672

62:                                               ; preds = %58
  br label %64, !dbg !8673

63:                                               ; preds = %58
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8674, !srcloc !8551
  br label %64, !dbg !8675

64:                                               ; preds = %62, %63
  store i32 0, i32* %5, align 4, !dbg !8676
  br label %65, !dbg !8676

65:                                               ; preds = %64, %22
  %66 = load i32, i32* %5, align 4, !dbg !8677
  ret i32 %66, !dbg !8677
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8678 {
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca %struct.z_thread_stack_element*, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8681, metadata !DIExpression()), !dbg !8682
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8683, metadata !DIExpression()), !dbg !8684
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !8687, metadata !DIExpression()), !dbg !8688
  store %struct.device.73* @__device_dts_ord_18, %struct.device.73** %8, align 4, !dbg !8688
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !8689, metadata !DIExpression()), !dbg !8690
  %11 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_18, i32 0, i32 4), align 4, !dbg !8691
  %12 = bitcast i8* %11 to %struct.sam0_eic_data*, !dbg !8692
  store %struct.sam0_eic_data* %12, %struct.sam0_eic_data** %9, align 4, !dbg !8690
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %10, metadata !8693, metadata !DIExpression()), !dbg !8694
  %13 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !8695
  %14 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %13, i32 0, i32 1, !dbg !8696
  %15 = load i32, i32* %7, align 4, !dbg !8697
  %16 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %14, i32 0, i32 %15, !dbg !8695
  store %struct.z_thread_stack_element* %16, %struct.z_thread_stack_element** %10, align 4, !dbg !8694
  %17 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8698
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !8700
  %19 = load i8, i8* %18, align 1, !dbg !8700
  %20 = lshr i8 %19, 7, !dbg !8700
  %21 = icmp ne i8 %20, 0, !dbg !8698
  br i1 %21, label %23, label %22, !dbg !8701

22:                                               ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !8702
  br label %42, !dbg !8702

23:                                               ; preds = %3
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8704
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !8706
  %26 = load i8, i8* %25, align 1, !dbg !8706
  %27 = lshr i8 %26, 5, !dbg !8706
  %28 = and i8 %27, 3, !dbg !8706
  %29 = zext i8 %28 to i32, !dbg !8704
  %30 = load i32, i32* %5, align 4, !dbg !8707
  %31 = icmp ne i32 %29, %30, !dbg !8708
  br i1 %31, label %40, label %32, !dbg !8709

32:                                               ; preds = %23
  %33 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8710
  %34 = bitcast %struct.z_thread_stack_element* %33 to i8*, !dbg !8711
  %35 = load i8, i8* %34, align 1, !dbg !8711
  %36 = and i8 %35, 31, !dbg !8711
  %37 = zext i8 %36 to i32, !dbg !8710
  %38 = load i32, i32* %6, align 4, !dbg !8712
  %39 = icmp ne i32 %37, %38, !dbg !8713
  br i1 %39, label %40, label %41, !dbg !8714

40:                                               ; preds = %32, %23
  store i1 false, i1* %4, align 1, !dbg !8715
  br label %42, !dbg !8715

41:                                               ; preds = %32
  store i1 true, i1* %4, align 1, !dbg !8717
  br label %42, !dbg !8717

42:                                               ; preds = %41, %40, %22
  %43 = load i1, i1* %4, align 1, !dbg !8718
  ret i1 %43, !dbg !8718
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_enable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !8719 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8720, metadata !DIExpression()), !dbg !8721
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8726, metadata !DIExpression()), !dbg !8727
  %8 = load i32, i32* %4, align 4, !dbg !8728
  %9 = load i32, i32* %5, align 4, !dbg !8729
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !8730
  store i32 %10, i32* %7, align 4, !dbg !8731
  %11 = load i32, i32* %7, align 4, !dbg !8732
  %12 = icmp slt i32 %11, 0, !dbg !8734
  br i1 %12, label %13, label %15, !dbg !8735

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !8736
  store i32 %14, i32* %3, align 4, !dbg !8738
  br label %26, !dbg !8738

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !8739
  %17 = load i32, i32* %5, align 4, !dbg !8741
  %18 = load i32, i32* %7, align 4, !dbg !8742
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !8743
  br i1 %19, label %21, label %20, !dbg !8744

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !8745
  br label %26, !dbg !8745

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !8747
  %23 = shl i32 1, %22, !dbg !8747
  store i32 %23, i32* %6, align 4, !dbg !8748
  %24 = load i32, i32* %6, align 4, !dbg !8749
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8750
  %25 = load i32, i32* %6, align 4, !dbg !8751
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !8752
  store i32 0, i32* %3, align 4, !dbg !8753
  br label %26, !dbg !8753

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !8754
  ret i32 %27, !dbg !8754
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_disable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !8755 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8756, metadata !DIExpression()), !dbg !8757
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8760, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8762, metadata !DIExpression()), !dbg !8763
  %8 = load i32, i32* %4, align 4, !dbg !8764
  %9 = load i32, i32* %5, align 4, !dbg !8765
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !8766
  store i32 %10, i32* %7, align 4, !dbg !8767
  %11 = load i32, i32* %7, align 4, !dbg !8768
  %12 = icmp slt i32 %11, 0, !dbg !8770
  br i1 %12, label %13, label %15, !dbg !8771

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !8772
  store i32 %14, i32* %3, align 4, !dbg !8774
  br label %26, !dbg !8774

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !8775
  %17 = load i32, i32* %5, align 4, !dbg !8777
  %18 = load i32, i32* %7, align 4, !dbg !8778
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !8779
  br i1 %19, label %21, label %20, !dbg !8780

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !8781
  br label %26, !dbg !8781

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !8783
  %23 = shl i32 1, %22, !dbg !8783
  store i32 %23, i32* %6, align 4, !dbg !8784
  %24 = load i32, i32* %6, align 4, !dbg !8785
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !8786
  %25 = load i32, i32* %6, align 4, !dbg !8787
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8788
  store i32 0, i32* %3, align 4, !dbg !8789
  br label %26, !dbg !8789

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !8790
  ret i32 %27, !dbg !8790
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_interrupt_pending(i32 noundef %0) #1 !dbg !8791 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.sam0_eic_data*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8796, metadata !DIExpression()), !dbg !8797
  store %struct.device.73* @__device_dts_ord_18, %struct.device.73** %3, align 4, !dbg !8797
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %4, metadata !8798, metadata !DIExpression()), !dbg !8799
  %9 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_18, i32 0, i32 4), align 4, !dbg !8800
  %10 = bitcast i8* %9 to %struct.sam0_eic_data*, !dbg !8801
  store %struct.sam0_eic_data* %10, %struct.sam0_eic_data** %4, align 4, !dbg !8799
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !8802, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8804, metadata !DIExpression()), !dbg !8805
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8806
  store i32 %11, i32* %6, align 4, !dbg !8805
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8807, metadata !DIExpression()), !dbg !8808
  store i32 0, i32* %7, align 4, !dbg !8808
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8809, metadata !DIExpression()), !dbg !8811
  store i32 0, i32* %8, align 4, !dbg !8811
  br label %12, !dbg !8812

12:                                               ; preds = %52, %1
  %13 = load i32, i32* %8, align 4, !dbg !8813
  %14 = icmp slt i32 %13, 16, !dbg !8815
  br i1 %14, label %15, label %55, !dbg !8816

15:                                               ; preds = %12
  %16 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %4, align 4, !dbg !8817
  %17 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %16, i32 0, i32 1, !dbg !8819
  %18 = load i32, i32* %8, align 4, !dbg !8820
  %19 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %17, i32 0, i32 %18, !dbg !8817
  store %struct.z_thread_stack_element* %19, %struct.z_thread_stack_element** %5, align 4, !dbg !8821
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8822
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !8824
  %22 = load i8, i8* %21, align 1, !dbg !8824
  %23 = lshr i8 %22, 7, !dbg !8824
  %24 = icmp ne i8 %23, 0, !dbg !8822
  br i1 %24, label %26, label %25, !dbg !8825

25:                                               ; preds = %15
  br label %52, !dbg !8826

26:                                               ; preds = %15
  %27 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8828
  %28 = bitcast %struct.z_thread_stack_element* %27 to i8*, !dbg !8830
  %29 = load i8, i8* %28, align 1, !dbg !8830
  %30 = lshr i8 %29, 5, !dbg !8830
  %31 = and i8 %30, 3, !dbg !8830
  %32 = zext i8 %31 to i32, !dbg !8828
  %33 = load i32, i32* %2, align 4, !dbg !8831
  %34 = icmp ne i32 %32, %33, !dbg !8832
  br i1 %34, label %35, label %36, !dbg !8833

35:                                               ; preds = %26
  br label %52, !dbg !8834

36:                                               ; preds = %26
  %37 = load i32, i32* %6, align 4, !dbg !8836
  %38 = load i32, i32* %8, align 4, !dbg !8838
  %39 = shl i32 1, %38, !dbg !8838
  %40 = and i32 %37, %39, !dbg !8839
  %41 = icmp ne i32 %40, 0, !dbg !8839
  br i1 %41, label %43, label %42, !dbg !8840

42:                                               ; preds = %36
  br label %52, !dbg !8841

43:                                               ; preds = %36
  %44 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8843
  %45 = bitcast %struct.z_thread_stack_element* %44 to i8*, !dbg !8843
  %46 = load i8, i8* %45, align 1, !dbg !8843
  %47 = and i8 %46, 31, !dbg !8843
  %48 = zext i8 %47 to i32, !dbg !8843
  %49 = shl i32 1, %48, !dbg !8843
  %50 = load i32, i32* %7, align 4, !dbg !8844
  %51 = or i32 %50, %49, !dbg !8844
  store i32 %51, i32* %7, align 4, !dbg !8844
  br label %52, !dbg !8845

52:                                               ; preds = %43, %42, %35, %25
  %53 = load i32, i32* %8, align 4, !dbg !8846
  %54 = add nsw i32 %53, 1, !dbg !8846
  store i32 %54, i32* %8, align 4, !dbg !8846
  br label %12, !dbg !8847, !llvm.loop !8848

55:                                               ; preds = %12
  %56 = load i32, i32* %7, align 4, !dbg !8850
  ret i32 %56, !dbg !8851
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_console_init(%struct.device.73* noundef %0) #1 !dbg !8852 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8853, metadata !DIExpression()), !dbg !8854
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8855
  %5 = call zeroext i1 @device_is_ready(%struct.device.73* noundef @__device_dts_ord_23) #10, !dbg !8856
  br i1 %5, label %7, label %6, !dbg !8858

6:                                                ; preds = %1
  store i32 -19, i32* %2, align 4, !dbg !8859
  br label %8, !dbg !8859

7:                                                ; preds = %1
  call void @uart_console_hook_install() #10, !dbg !8861
  store i32 0, i32* %2, align 4, !dbg !8862
  br label %8, !dbg !8862

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !8863
  ret i32 %9, !dbg !8863
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @device_is_ready(%struct.device.73* noundef %0) #1 !dbg !8864 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8868, metadata !DIExpression()), !dbg !8869
  br label %3, !dbg !8870

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8871, !srcloc !8873
  br label %4, !dbg !8871

4:                                                ; preds = %3
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8874
  %6 = call zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %5) #10, !dbg !8875
  ret i1 %6, !dbg !8876
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_console_hook_install() #1 !dbg !8877 {
  call void @__stdout_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !8878
  call void @__printk_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: noinline nounwind optnone
define internal i32 @console_out(i32 noundef %0) #1 !dbg !8881 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8882, metadata !DIExpression()), !dbg !8883
  %3 = load i32, i32* %2, align 4, !dbg !8884
  %4 = icmp eq i32 10, %3, !dbg !8886
  br i1 %4, label %5, label %6, !dbg !8887

5:                                                ; preds = %1
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_23, i8 noundef zeroext 13) #10, !dbg !8888
  br label %6, !dbg !8890

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !8891
  %8 = trunc i32 %7 to i8, !dbg !8891
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_23, i8 noundef zeroext %8) #10, !dbg !8892
  %9 = load i32, i32* %2, align 4, !dbg !8893
  ret i32 %9, !dbg !8894
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !8895 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8897, metadata !DIExpression()), !dbg !8898
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8899, metadata !DIExpression()), !dbg !8900
  br label %5, !dbg !8901

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8902, !srcloc !8904
  br label %6, !dbg !8902

6:                                                ; preds = %5
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8905
  %8 = load i8, i8* %4, align 1, !dbg !8906
  call void @z_impl_uart_poll_out(%struct.device.73* noundef %7, i8 noundef zeroext %8) #10, !dbg !8907
  ret void, !dbg !8908
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !8909 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_driver_api*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8910, metadata !DIExpression()), !dbg !8911
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.declare(metadata %struct.uart_driver_api** %5, metadata !8914, metadata !DIExpression()), !dbg !8915
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8916
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 2, !dbg !8917
  %8 = load i8*, i8** %7, align 4, !dbg !8917
  %9 = bitcast i8* %8 to %struct.uart_driver_api*, !dbg !8918
  store %struct.uart_driver_api* %9, %struct.uart_driver_api** %5, align 4, !dbg !8915
  %10 = load %struct.uart_driver_api*, %struct.uart_driver_api** %5, align 4, !dbg !8919
  %11 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %10, i32 0, i32 1, !dbg !8920
  %12 = load void (%struct.device.73*, i8)*, void (%struct.device.73*, i8)** %11, align 4, !dbg !8920
  %13 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8921
  %14 = load i8, i8* %4, align 1, !dbg !8922
  call void %12(%struct.device.73* noundef %13, i8 noundef zeroext %14) #10, !dbg !8919
  ret void, !dbg !8923
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !8924 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8925, metadata !DIExpression()), !dbg !8926
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8927
  %4 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %3) #10, !dbg !8928
  ret i1 %4, !dbg !8929
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) #1 !dbg !8930 {
  %4 = alloca %struct.k_fifo*, align 4
  %5 = alloca %struct.k_fifo*, align 4
  %6 = alloca i8 (i8*, i8)*, align 4
  store %struct.k_fifo* %0, %struct.k_fifo** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %4, metadata !8976, metadata !DIExpression()), !dbg !8977
  store %struct.k_fifo* %1, %struct.k_fifo** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %5, metadata !8978, metadata !DIExpression()), !dbg !8979
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** %6, align 4
  call void @llvm.dbg.declare(metadata i8 (i8*, i8)** %6, metadata !8980, metadata !DIExpression()), !dbg !8981
  %7 = load %struct.k_fifo*, %struct.k_fifo** %4, align 4, !dbg !8982
  %8 = load %struct.k_fifo*, %struct.k_fifo** %5, align 4, !dbg !8983
  %9 = load i8 (i8*, i8)*, i8 (i8*, i8)** %6, align 4, !dbg !8984
  ret void, !dbg !8985
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_poll_in(%struct.device.73* noundef %0, i8* noundef %1) #1 !dbg !8986 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !8987, metadata !DIExpression()), !dbg !8988
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8989, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %6, metadata !8991, metadata !DIExpression()), !dbg !8993
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !8994
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !8995
  %10 = load i8*, i8** %9, align 4, !dbg !8995
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !8994
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !8993
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !8996, metadata !DIExpression()), !dbg !8998
  %12 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !8999
  %13 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %12, i32 0, i32 0, !dbg !9000
  %14 = load %struct.SercomUsart*, %struct.SercomUsart** %13, align 4, !dbg !9000
  store %struct.SercomUsart* %14, %struct.SercomUsart** %7, align 4, !dbg !8998
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9001
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9003
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9004
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9005
  %19 = load volatile i8, i8* %18, align 4, !dbg !9005
  %20 = lshr i8 %19, 2, !dbg !9005
  %21 = and i8 %20, 1, !dbg !9005
  %22 = icmp ne i8 %21, 0, !dbg !9001
  br i1 %22, label %24, label %23, !dbg !9006

23:                                               ; preds = %2
  store i32 -16, i32* %3, align 4, !dbg !9007
  br label %31, !dbg !9007

24:                                               ; preds = %2
  %25 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9009
  %26 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %25, i32 0, i32 15, !dbg !9010
  %27 = bitcast %union.GCLK_CLKCTRL_Type* %26 to i16*, !dbg !9011
  %28 = load volatile i16, i16* %27, align 4, !dbg !9011
  %29 = trunc i16 %28 to i8, !dbg !9012
  %30 = load i8*, i8** %5, align 4, !dbg !9013
  store i8 %29, i8* %30, align 1, !dbg !9014
  store i32 0, i32* %3, align 4, !dbg !9015
  br label %31, !dbg !9015

31:                                               ; preds = %24, %23
  %32 = load i32, i32* %3, align 4, !dbg !9016
  ret i32 %32, !dbg !9016
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !9017 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9018, metadata !DIExpression()), !dbg !9019
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9020, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !9022, metadata !DIExpression()), !dbg !9023
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9024
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 1, !dbg !9025
  %9 = load i8*, i8** %8, align 4, !dbg !9025
  %10 = bitcast i8* %9 to %struct.uart_sam0_dev_cfg*, !dbg !9024
  store %struct.uart_sam0_dev_cfg* %10, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9023
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %6, metadata !9026, metadata !DIExpression()), !dbg !9027
  %11 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9028
  %12 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %11, i32 0, i32 0, !dbg !9029
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %12, align 4, !dbg !9029
  store %struct.SercomUsart* %13, %struct.SercomUsart** %6, align 4, !dbg !9027
  br label %14, !dbg !9030

14:                                               ; preds = %23, %2
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9031
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9032
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9033
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9034
  %19 = load volatile i8, i8* %18, align 4, !dbg !9034
  %20 = and i8 %19, 1, !dbg !9034
  %21 = icmp ne i8 %20, 0, !dbg !9035
  %22 = xor i1 %21, true, !dbg !9035
  br i1 %22, label %23, label %24, !dbg !9030

23:                                               ; preds = %14
  br label %14, !dbg !9030, !llvm.loop !9036

24:                                               ; preds = %14
  %25 = load i8, i8* %4, align 1, !dbg !9038
  %26 = zext i8 %25 to i16, !dbg !9038
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9039
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !9040
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !9041
  store volatile i16 %26, i16* %29, align 4, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_err_check(%struct.device.73* noundef %0) #1 !dbg !9044 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9045, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9047, metadata !DIExpression()), !dbg !9048
  %6 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9049
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9050
  %8 = load i8*, i8** %7, align 4, !dbg !9050
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_cfg*, !dbg !9049
  store %struct.uart_sam0_dev_cfg* %9, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9048
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9051, metadata !DIExpression()), !dbg !9052
  %10 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9053
  %11 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %10, i32 0, i32 0, !dbg !9054
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %11, align 4, !dbg !9054
  store %struct.SercomUsart* %12, %struct.SercomUsart** %4, align 4, !dbg !9052
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9055, metadata !DIExpression()), !dbg !9056
  store i32 0, i32* %5, align 4, !dbg !9056
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9057
  %14 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %13, i32 0, i32 12, !dbg !9059
  %15 = bitcast %union.GCLK_CLKCTRL_Type* %14 to i16*, !dbg !9060
  %16 = load volatile i16, i16* %15, align 2, !dbg !9060
  %17 = zext i16 %16 to i32, !dbg !9057
  %18 = and i32 %17, 4, !dbg !9061
  %19 = icmp ne i32 %18, 0, !dbg !9061
  br i1 %19, label %20, label %23, !dbg !9062

20:                                               ; preds = %1
  %21 = load i32, i32* %5, align 4, !dbg !9063
  %22 = or i32 %21, 1, !dbg !9063
  store i32 %22, i32* %5, align 4, !dbg !9063
  br label %23, !dbg !9065

23:                                               ; preds = %20, %1
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9066
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 12, !dbg !9068
  %26 = bitcast %union.GCLK_CLKCTRL_Type* %25 to i16*, !dbg !9069
  %27 = load volatile i16, i16* %26, align 2, !dbg !9069
  %28 = zext i16 %27 to i32, !dbg !9066
  %29 = and i32 %28, 2, !dbg !9070
  %30 = icmp ne i32 %29, 0, !dbg !9070
  br i1 %30, label %31, label %34, !dbg !9071

31:                                               ; preds = %23
  %32 = load i32, i32* %5, align 4, !dbg !9072
  %33 = or i32 %32, 2, !dbg !9072
  store i32 %33, i32* %5, align 4, !dbg !9072
  br label %34, !dbg !9074

34:                                               ; preds = %31, %23
  %35 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9075
  %36 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %35, i32 0, i32 12, !dbg !9077
  %37 = bitcast %union.GCLK_CLKCTRL_Type* %36 to i16*, !dbg !9078
  %38 = load volatile i16, i16* %37, align 2, !dbg !9078
  %39 = zext i16 %38 to i32, !dbg !9075
  %40 = and i32 %39, 1, !dbg !9079
  %41 = icmp ne i32 %40, 0, !dbg !9079
  br i1 %41, label %42, label %45, !dbg !9080

42:                                               ; preds = %34
  %43 = load i32, i32* %5, align 4, !dbg !9081
  %44 = or i32 %43, 4, !dbg !9081
  store i32 %44, i32* %5, align 4, !dbg !9081
  br label %45, !dbg !9083

45:                                               ; preds = %42, %34
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9084
  %47 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %46, i32 0, i32 12, !dbg !9085
  %48 = bitcast %union.GCLK_CLKCTRL_Type* %47 to i16*, !dbg !9086
  %49 = load volatile i16, i16* %48, align 2, !dbg !9087
  %50 = zext i16 %49 to i32, !dbg !9087
  %51 = or i32 %50, 7, !dbg !9087
  %52 = trunc i32 %51 to i16, !dbg !9087
  store volatile i16 %52, i16* %48, align 2, !dbg !9087
  %53 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9088
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %53) #10, !dbg !9089
  %54 = load i32, i32* %5, align 4, !dbg !9090
  ret i32 %54, !dbg !9091
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_configure(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !9092 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca %struct.uart_config*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %8 = alloca %struct.uart_sam0_dev_data*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca %union.PORT_DIR_Type, align 4
  %11 = alloca %union.PORT_DIR_Type, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9093, metadata !DIExpression()), !dbg !9094
  store %struct.uart_config* %1, %struct.uart_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %5, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %7, metadata !9099, metadata !DIExpression()), !dbg !9101
  %12 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9102
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 1, !dbg !9103
  %14 = load i8*, i8** %13, align 4, !dbg !9103
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_cfg*, !dbg !9102
  store %struct.uart_sam0_dev_cfg* %15, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %8, metadata !9104, metadata !DIExpression()), !dbg !9107
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9108
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 4, !dbg !9109
  %18 = load i8*, i8** %17, align 4, !dbg !9109
  %19 = bitcast i8* %18 to %struct.uart_sam0_dev_data*, !dbg !9108
  store %struct.uart_sam0_dev_data* %19, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9107
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9110, metadata !DIExpression()), !dbg !9111
  %20 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !9112
  %21 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %20, i32 0, i32 0, !dbg !9113
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %21, align 4, !dbg !9113
  store %struct.SercomUsart* %22, %struct.SercomUsart** %9, align 4, !dbg !9111
  %23 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9114
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %23) #10, !dbg !9115
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9116
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 0, !dbg !9117
  %26 = bitcast %union.PORT_DIR_Type* %25 to %union.anon.68*, !dbg !9118
  %27 = bitcast %union.anon.68* %26 to i32*, !dbg !9119
  %28 = load volatile i32, i32* %27, align 4, !dbg !9120
  %29 = and i32 %28, -3, !dbg !9120
  %30 = or i32 %29, 0, !dbg !9120
  store volatile i32 %30, i32* %27, align 4, !dbg !9120
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9121
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %31) #10, !dbg !9122
  %32 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9123
  %33 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %32, i32 0, i32 4, !dbg !9125
  %34 = load i8, i8* %33, align 1, !dbg !9125
  %35 = zext i8 %34 to i32, !dbg !9123
  %36 = icmp ne i32 %35, 0, !dbg !9126
  br i1 %36, label %37, label %38, !dbg !9127

37:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !9128
  br label %193, !dbg !9128

38:                                               ; preds = %2
  %39 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9130
  %40 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %39, i32 0, i32 4, !dbg !9131
  %41 = load i8, i8* %40, align 1, !dbg !9131
  %42 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9132
  %43 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %42, i32 0, i32 0, !dbg !9133
  %44 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %43, i32 0, i32 4, !dbg !9134
  store i8 %41, i8* %44, align 1, !dbg !9135
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %10, metadata !9136, metadata !DIExpression()), !dbg !9137
  %45 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9138
  %46 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %45, i32 0, i32 0, !dbg !9139
  %47 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !9139
  %48 = bitcast %union.PORT_DIR_Type* %46 to i8*, !dbg !9139
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %47, i8* align 4 %48, i32 4, i1 true), !dbg !9139
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %11, metadata !9140, metadata !DIExpression()), !dbg !9141
  %49 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9142
  %50 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %49, i32 0, i32 1, !dbg !9143
  %51 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !9143
  %52 = bitcast %union.PORT_DIR_Type* %50 to i8*, !dbg !9143
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %51, i8* align 4 %52, i32 4, i1 true), !dbg !9143
  %53 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9144
  %54 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %53, i32 0, i32 1, !dbg !9145
  %55 = load i8, i8* %54, align 4, !dbg !9145
  %56 = zext i8 %55 to i32, !dbg !9144
  switch i32 %56, label %85 [
    i32 0, label %57
    i32 1, label %63
    i32 2, label %74
  ], !dbg !9146

57:                                               ; preds = %38
  %58 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9147
  %59 = bitcast %union.anon.68* %58 to i32*, !dbg !9149
  %60 = load i32, i32* %59, align 4, !dbg !9150
  %61 = and i32 %60, -251658241, !dbg !9150
  %62 = or i32 %61, 0, !dbg !9150
  store i32 %62, i32* %59, align 4, !dbg !9150
  br label %86, !dbg !9151

63:                                               ; preds = %38
  %64 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9152
  %65 = bitcast %union.anon.68* %64 to i32*, !dbg !9153
  %66 = load i32, i32* %65, align 4, !dbg !9154
  %67 = and i32 %66, -251658241, !dbg !9154
  %68 = or i32 %67, 16777216, !dbg !9154
  store i32 %68, i32* %65, align 4, !dbg !9154
  %69 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9155
  %70 = bitcast %union.anon.68* %69 to i32*, !dbg !9156
  %71 = load i32, i32* %70, align 4, !dbg !9157
  %72 = and i32 %71, -8193, !dbg !9157
  %73 = or i32 %72, 8192, !dbg !9157
  store i32 %73, i32* %70, align 4, !dbg !9157
  br label %86, !dbg !9158

74:                                               ; preds = %38
  %75 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9159
  %76 = bitcast %union.anon.68* %75 to i32*, !dbg !9160
  %77 = load i32, i32* %76, align 4, !dbg !9161
  %78 = and i32 %77, -251658241, !dbg !9161
  %79 = or i32 %78, 16777216, !dbg !9161
  store i32 %79, i32* %76, align 4, !dbg !9161
  %80 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9162
  %81 = bitcast %union.anon.68* %80 to i32*, !dbg !9163
  %82 = load i32, i32* %81, align 4, !dbg !9164
  %83 = and i32 %82, -8193, !dbg !9164
  %84 = or i32 %83, 0, !dbg !9164
  store i32 %84, i32* %81, align 4, !dbg !9164
  br label %86, !dbg !9165

85:                                               ; preds = %38
  store i32 -134, i32* %3, align 4, !dbg !9166
  br label %193, !dbg !9166

86:                                               ; preds = %74, %63, %57
  %87 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9167
  %88 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %87, i32 0, i32 1, !dbg !9168
  %89 = load i8, i8* %88, align 4, !dbg !9168
  %90 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9169
  %91 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %90, i32 0, i32 0, !dbg !9170
  %92 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %91, i32 0, i32 1, !dbg !9171
  store i8 %89, i8* %92, align 4, !dbg !9172
  %93 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9173
  %94 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %93, i32 0, i32 2, !dbg !9174
  %95 = load i8, i8* %94, align 1, !dbg !9174
  %96 = zext i8 %95 to i32, !dbg !9173
  switch i32 %96, label %109 [
    i32 1, label %97
    i32 3, label %103
  ], !dbg !9175

97:                                               ; preds = %86
  %98 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9176
  %99 = bitcast %union.anon.68* %98 to i32*, !dbg !9178
  %100 = load i32, i32* %99, align 4, !dbg !9179
  %101 = and i32 %100, -65, !dbg !9179
  %102 = or i32 %101, 0, !dbg !9179
  store i32 %102, i32* %99, align 4, !dbg !9179
  br label %110, !dbg !9180

103:                                              ; preds = %86
  %104 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9181
  %105 = bitcast %union.anon.68* %104 to i32*, !dbg !9182
  %106 = load i32, i32* %105, align 4, !dbg !9183
  %107 = and i32 %106, -65, !dbg !9183
  %108 = or i32 %107, 64, !dbg !9183
  store i32 %108, i32* %105, align 4, !dbg !9183
  br label %110, !dbg !9184

109:                                              ; preds = %86
  store i32 -134, i32* %3, align 4, !dbg !9185
  br label %193, !dbg !9185

110:                                              ; preds = %103, %97
  %111 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9186
  %112 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %111, i32 0, i32 2, !dbg !9187
  %113 = load i8, i8* %112, align 1, !dbg !9187
  %114 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9188
  %115 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %114, i32 0, i32 0, !dbg !9189
  %116 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %115, i32 0, i32 2, !dbg !9190
  store i8 %113, i8* %116, align 1, !dbg !9191
  %117 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9192
  %118 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %117, i32 0, i32 3, !dbg !9193
  %119 = load i8, i8* %118, align 2, !dbg !9193
  %120 = zext i8 %119 to i32, !dbg !9192
  switch i32 %120, label %151 [
    i32 0, label %121
    i32 1, label %127
    i32 2, label %133
    i32 3, label %139
    i32 4, label %145
  ], !dbg !9194

121:                                              ; preds = %110
  %122 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9195
  %123 = bitcast %union.anon.68* %122 to i32*, !dbg !9197
  %124 = load i32, i32* %123, align 4, !dbg !9198
  %125 = and i32 %124, -8, !dbg !9198
  %126 = or i32 %125, 5, !dbg !9198
  store i32 %126, i32* %123, align 4, !dbg !9198
  br label %152, !dbg !9199

127:                                              ; preds = %110
  %128 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9200
  %129 = bitcast %union.anon.68* %128 to i32*, !dbg !9201
  %130 = load i32, i32* %129, align 4, !dbg !9202
  %131 = and i32 %130, -8, !dbg !9202
  %132 = or i32 %131, 6, !dbg !9202
  store i32 %132, i32* %129, align 4, !dbg !9202
  br label %152, !dbg !9203

133:                                              ; preds = %110
  %134 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9204
  %135 = bitcast %union.anon.68* %134 to i32*, !dbg !9205
  %136 = load i32, i32* %135, align 4, !dbg !9206
  %137 = and i32 %136, -8, !dbg !9206
  %138 = or i32 %137, 7, !dbg !9206
  store i32 %138, i32* %135, align 4, !dbg !9206
  br label %152, !dbg !9207

139:                                              ; preds = %110
  %140 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9208
  %141 = bitcast %union.anon.68* %140 to i32*, !dbg !9209
  %142 = load i32, i32* %141, align 4, !dbg !9210
  %143 = and i32 %142, -8, !dbg !9210
  %144 = or i32 %143, 0, !dbg !9210
  store i32 %144, i32* %141, align 4, !dbg !9210
  br label %152, !dbg !9211

145:                                              ; preds = %110
  %146 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9212
  %147 = bitcast %union.anon.68* %146 to i32*, !dbg !9213
  %148 = load i32, i32* %147, align 4, !dbg !9214
  %149 = and i32 %148, -8, !dbg !9214
  %150 = or i32 %149, 1, !dbg !9214
  store i32 %150, i32* %147, align 4, !dbg !9214
  br label %152, !dbg !9215

151:                                              ; preds = %110
  store i32 -134, i32* %3, align 4, !dbg !9216
  br label %193, !dbg !9216

152:                                              ; preds = %145, %139, %133, %127, %121
  %153 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9217
  %154 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %153, i32 0, i32 3, !dbg !9218
  %155 = load i8, i8* %154, align 2, !dbg !9218
  %156 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9219
  %157 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %156, i32 0, i32 0, !dbg !9220
  %158 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %157, i32 0, i32 3, !dbg !9221
  store i8 %155, i8* %158, align 2, !dbg !9222
  %159 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9223
  %160 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %159, i32 0, i32 0, !dbg !9224
  %161 = bitcast %union.PORT_DIR_Type* %160 to i8*, !dbg !9225
  %162 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !9225
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %161, i8* align 4 %162, i32 4, i1 true), !dbg !9225
  %163 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9226
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %163) #10, !dbg !9227
  %164 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9228
  %165 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %164, i32 0, i32 1, !dbg !9229
  %166 = bitcast %union.PORT_DIR_Type* %165 to i8*, !dbg !9230
  %167 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !9230
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %166, i8* align 4 %167, i32 4, i1 true), !dbg !9230
  %168 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9231
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %168) #10, !dbg !9232
  %169 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9233
  %170 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9234
  %171 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %170, i32 0, i32 0, !dbg !9235
  %172 = load i32, i32* %171, align 4, !dbg !9235
  %173 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %169, i32 noundef %172, i32 noundef 48000000) #10, !dbg !9236
  store i32 %173, i32* %6, align 4, !dbg !9237
  %174 = load i32, i32* %6, align 4, !dbg !9238
  %175 = icmp ne i32 %174, 0, !dbg !9240
  br i1 %175, label %176, label %178, !dbg !9241

176:                                              ; preds = %152
  %177 = load i32, i32* %6, align 4, !dbg !9242
  store i32 %177, i32* %3, align 4, !dbg !9244
  br label %193, !dbg !9244

178:                                              ; preds = %152
  %179 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9245
  %180 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %179, i32 0, i32 0, !dbg !9246
  %181 = load i32, i32* %180, align 4, !dbg !9246
  %182 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9247
  %183 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %182, i32 0, i32 0, !dbg !9248
  %184 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %183, i32 0, i32 0, !dbg !9249
  store i32 %181, i32* %184, align 4, !dbg !9250
  %185 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9251
  %186 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %185, i32 0, i32 0, !dbg !9252
  %187 = bitcast %union.PORT_DIR_Type* %186 to %union.anon.68*, !dbg !9253
  %188 = bitcast %union.anon.68* %187 to i32*, !dbg !9254
  %189 = load volatile i32, i32* %188, align 4, !dbg !9255
  %190 = and i32 %189, -3, !dbg !9255
  %191 = or i32 %190, 2, !dbg !9255
  store volatile i32 %191, i32* %188, align 4, !dbg !9255
  %192 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9256
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %192) #10, !dbg !9257
  store i32 0, i32* %3, align 4, !dbg !9258
  br label %193, !dbg !9258

193:                                              ; preds = %178, %176, %151, %109, %85, %37
  %194 = load i32, i32* %3, align 4, !dbg !9259
  ret i32 %194, !dbg !9259
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_config_get(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !9260 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.uart_config*, align 4
  %5 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9261, metadata !DIExpression()), !dbg !9262
  store %struct.uart_config* %1, %struct.uart_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %4, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %5, metadata !9265, metadata !DIExpression()), !dbg !9266
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9267
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 4, !dbg !9268
  %8 = load i8*, i8** %7, align 4, !dbg !9268
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_data*, !dbg !9267
  store %struct.uart_sam0_dev_data* %9, %struct.uart_sam0_dev_data** %5, align 4, !dbg !9266
  %10 = load %struct.uart_config*, %struct.uart_config** %4, align 4, !dbg !9269
  %11 = bitcast %struct.uart_config* %10 to i8*, !dbg !9269
  %12 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %5, align 4, !dbg !9270
  %13 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %12, i32 0, i32 0, !dbg !9271
  %14 = bitcast %struct.uart_config* %13 to i8*, !dbg !9272
  %15 = call i8* @memcpy(i8* noundef %11, i8* noundef %14, i32 noundef 8) #10, !dbg !9273
  ret i32 0, !dbg !9274
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_fill(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !9275 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9276, metadata !DIExpression()), !dbg !9277
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9278, metadata !DIExpression()), !dbg !9279
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !9282, metadata !DIExpression()), !dbg !9283
  %10 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9284
  %11 = getelementptr inbounds %struct.device.73, %struct.device.73* %10, i32 0, i32 1, !dbg !9285
  %12 = load i8*, i8** %11, align 4, !dbg !9285
  %13 = bitcast i8* %12 to %struct.uart_sam0_dev_cfg*, !dbg !9284
  store %struct.uart_sam0_dev_cfg* %13, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9283
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9286, metadata !DIExpression()), !dbg !9287
  %14 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9288
  %15 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %14, i32 0, i32 0, !dbg !9289
  %16 = load %struct.SercomUsart*, %struct.SercomUsart** %15, align 4, !dbg !9289
  store %struct.SercomUsart* %16, %struct.SercomUsart** %9, align 4, !dbg !9287
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9290
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !9292
  %19 = bitcast %union.PORT_PMUX_Type* %18 to %struct.z_thread_stack_element*, !dbg !9293
  %20 = bitcast %struct.z_thread_stack_element* %19 to i8*, !dbg !9294
  %21 = load volatile i8, i8* %20, align 4, !dbg !9294
  %22 = and i8 %21, 1, !dbg !9294
  %23 = zext i8 %22 to i32, !dbg !9290
  %24 = icmp ne i32 %23, 0, !dbg !9290
  br i1 %24, label %25, label %36, !dbg !9295

25:                                               ; preds = %3
  %26 = load i32, i32* %7, align 4, !dbg !9296
  %27 = icmp sge i32 %26, 1, !dbg !9297
  br i1 %27, label %28, label %36, !dbg !9298

28:                                               ; preds = %25
  %29 = load i8*, i8** %6, align 4, !dbg !9299
  %30 = getelementptr inbounds i8, i8* %29, i32 0, !dbg !9299
  %31 = load i8, i8* %30, align 1, !dbg !9299
  %32 = zext i8 %31 to i16, !dbg !9299
  %33 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9301
  %34 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %33, i32 0, i32 15, !dbg !9302
  %35 = bitcast %union.GCLK_CLKCTRL_Type* %34 to i16*, !dbg !9303
  store volatile i16 %32, i16* %35, align 4, !dbg !9304
  store i32 1, i32* %4, align 4, !dbg !9305
  br label %37, !dbg !9305

36:                                               ; preds = %25, %3
  store i32 0, i32* %4, align 4, !dbg !9306
  br label %37, !dbg !9306

37:                                               ; preds = %36, %28
  %38 = load i32, i32* %4, align 4, !dbg !9308
  ret i32 %38, !dbg !9308
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_read(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !9309 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9310, metadata !DIExpression()), !dbg !9311
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9312, metadata !DIExpression()), !dbg !9313
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9314, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !9316, metadata !DIExpression()), !dbg !9317
  %11 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9318
  %12 = getelementptr inbounds %struct.device.73, %struct.device.73* %11, i32 0, i32 1, !dbg !9319
  %13 = load i8*, i8** %12, align 4, !dbg !9319
  %14 = bitcast i8* %13 to %struct.uart_sam0_dev_cfg*, !dbg !9318
  store %struct.uart_sam0_dev_cfg* %14, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9317
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9320, metadata !DIExpression()), !dbg !9321
  %15 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9322
  %16 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %15, i32 0, i32 0, !dbg !9323
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %16, align 4, !dbg !9323
  store %struct.SercomUsart* %17, %struct.SercomUsart** %9, align 4, !dbg !9321
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9324
  %19 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %18, i32 0, i32 10, !dbg !9326
  %20 = bitcast %union.PORT_PMUX_Type* %19 to %struct.z_thread_stack_element*, !dbg !9327
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !9328
  %22 = load volatile i8, i8* %21, align 4, !dbg !9328
  %23 = lshr i8 %22, 2, !dbg !9328
  %24 = and i8 %23, 1, !dbg !9328
  %25 = icmp ne i8 %24, 0, !dbg !9324
  br i1 %25, label %26, label %38, !dbg !9329

26:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8* %10, metadata !9330, metadata !DIExpression()), !dbg !9332
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9333
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !9334
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !9335
  %30 = load volatile i16, i16* %29, align 4, !dbg !9335
  %31 = trunc i16 %30 to i8, !dbg !9333
  store i8 %31, i8* %10, align 1, !dbg !9332
  %32 = load i32, i32* %7, align 4, !dbg !9336
  %33 = icmp sge i32 %32, 1, !dbg !9338
  br i1 %33, label %34, label %37, !dbg !9339

34:                                               ; preds = %26
  %35 = load i8, i8* %10, align 1, !dbg !9340
  %36 = load i8*, i8** %6, align 4, !dbg !9342
  store i8 %35, i8* %36, align 1, !dbg !9343
  store i32 1, i32* %4, align 4, !dbg !9344
  br label %39, !dbg !9344

37:                                               ; preds = %26
  store i32 -22, i32* %4, align 4, !dbg !9345
  br label %39, !dbg !9345

38:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !9347
  br label %39, !dbg !9347

39:                                               ; preds = %38, %37, %34
  %40 = load i32, i32* %4, align 4, !dbg !9348
  ret i32 %40, !dbg !9348
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_enable(%struct.device.73* noundef %0) #1 !dbg !9349 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9350, metadata !DIExpression()), !dbg !9351
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9352, metadata !DIExpression()), !dbg !9353
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9354
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9355
  %7 = load i8*, i8** %6, align 4, !dbg !9355
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9354
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9353
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9356, metadata !DIExpression()), !dbg !9357
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9358
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9359
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9359
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9357
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9360
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9361
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9362
  store volatile i8 3, i8* %14, align 2, !dbg !9363
  ret void, !dbg !9364
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_disable(%struct.device.73* noundef %0) #1 !dbg !9365 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9366, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9368, metadata !DIExpression()), !dbg !9369
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9370
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9371
  %7 = load i8*, i8** %6, align 4, !dbg !9371
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9370
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9372, metadata !DIExpression()), !dbg !9373
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9374
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9375
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9375
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9373
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9376
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !9377
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9378
  store volatile i8 3, i8* %14, align 4, !dbg !9379
  ret void, !dbg !9380
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_ready(%struct.device.73* noundef %0) #1 !dbg !9381 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9384, metadata !DIExpression()), !dbg !9385
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9386
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9387
  %7 = load i8*, i8** %6, align 4, !dbg !9387
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9386
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9385
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9388, metadata !DIExpression()), !dbg !9389
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9390
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9391
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9391
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9389
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9392
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9393
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9394
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9395
  %16 = load volatile i8, i8* %15, align 4, !dbg !9395
  %17 = and i8 %16, 1, !dbg !9395
  %18 = zext i8 %17 to i32, !dbg !9392
  %19 = icmp ne i32 %18, 0, !dbg !9396
  br i1 %19, label %20, label %29, !dbg !9397

20:                                               ; preds = %1
  %21 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9398
  %22 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %21, i32 0, i32 8, !dbg !9399
  %23 = bitcast %union.PORT_PMUX_Type* %22 to %struct.z_thread_stack_element*, !dbg !9400
  %24 = bitcast %struct.z_thread_stack_element* %23 to i8*, !dbg !9401
  %25 = load volatile i8, i8* %24, align 2, !dbg !9401
  %26 = and i8 %25, 1, !dbg !9401
  %27 = zext i8 %26 to i32, !dbg !9398
  %28 = icmp ne i32 %27, 0, !dbg !9402
  br label %29

29:                                               ; preds = %20, %1
  %30 = phi i1 [ false, %1 ], [ %28, %20 ], !dbg !9403
  %31 = zext i1 %30 to i32, !dbg !9397
  ret i32 %31, !dbg !9404
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_enable(%struct.device.73* noundef %0) #1 !dbg !9405 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9408, metadata !DIExpression()), !dbg !9409
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9410
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9411
  %7 = load i8*, i8** %6, align 4, !dbg !9411
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9410
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9409
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9412, metadata !DIExpression()), !dbg !9413
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9414
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9415
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9415
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9413
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9416
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9417
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9418
  store volatile i8 4, i8* %14, align 2, !dbg !9419
  ret void, !dbg !9420
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_disable(%struct.device.73* noundef %0) #1 !dbg !9421 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9424, metadata !DIExpression()), !dbg !9425
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9426
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9427
  %7 = load i8*, i8** %6, align 4, !dbg !9427
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9426
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9425
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9428, metadata !DIExpression()), !dbg !9429
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9430
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9431
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9431
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9429
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9432
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !9433
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9434
  store volatile i8 4, i8* %14, align 4, !dbg !9435
  ret void, !dbg !9436
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_complete(%struct.device.73* noundef %0) #1 !dbg !9437 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9438, metadata !DIExpression()), !dbg !9439
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9440, metadata !DIExpression()), !dbg !9441
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9442
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9443
  %7 = load i8*, i8** %6, align 4, !dbg !9443
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9442
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9441
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9444, metadata !DIExpression()), !dbg !9445
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9446
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9447
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9447
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9445
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9448
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9449
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9450
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9451
  %16 = load volatile i8, i8* %15, align 4, !dbg !9451
  %17 = lshr i8 %16, 1, !dbg !9451
  %18 = and i8 %17, 1, !dbg !9451
  %19 = zext i8 %18 to i32, !dbg !9448
  %20 = icmp ne i32 %19, 0, !dbg !9452
  br i1 %20, label %21, label %31, !dbg !9453

21:                                               ; preds = %1
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9454
  %23 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %22, i32 0, i32 8, !dbg !9455
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !9456
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !9457
  %26 = load volatile i8, i8* %25, align 2, !dbg !9457
  %27 = lshr i8 %26, 1, !dbg !9457
  %28 = and i8 %27, 1, !dbg !9457
  %29 = zext i8 %28 to i32, !dbg !9454
  %30 = icmp ne i32 %29, 0, !dbg !9458
  br label %31

31:                                               ; preds = %21, %1
  %32 = phi i1 [ false, %1 ], [ %30, %21 ], !dbg !9459
  %33 = zext i1 %32 to i32, !dbg !9453
  ret i32 %33, !dbg !9460
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_rx_ready(%struct.device.73* noundef %0) #1 !dbg !9461 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9462, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9464, metadata !DIExpression()), !dbg !9465
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9466
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9467
  %7 = load i8*, i8** %6, align 4, !dbg !9467
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9466
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9465
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9470
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9471
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9471
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9469
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9472
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9473
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9474
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9475
  %16 = load volatile i8, i8* %15, align 4, !dbg !9475
  %17 = lshr i8 %16, 2, !dbg !9475
  %18 = and i8 %17, 1, !dbg !9475
  %19 = zext i8 %18 to i32, !dbg !9472
  %20 = icmp ne i32 %19, 0, !dbg !9476
  %21 = zext i1 %20 to i32, !dbg !9476
  ret i32 %21, !dbg !9477
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_is_pending(%struct.device.73* noundef %0) #1 !dbg !9478 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9481, metadata !DIExpression()), !dbg !9482
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9483
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9484
  %7 = load i8*, i8** %6, align 4, !dbg !9484
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9483
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9482
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9485, metadata !DIExpression()), !dbg !9486
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9487
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9488
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9488
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9486
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9489
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9490
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9491
  %15 = load volatile i8, i8* %14, align 2, !dbg !9491
  %16 = zext i8 %15 to i32, !dbg !9489
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9492
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !9493
  %19 = bitcast %union.PORT_PMUX_Type* %18 to i8*, !dbg !9494
  %20 = load volatile i8, i8* %19, align 4, !dbg !9494
  %21 = zext i8 %20 to i32, !dbg !9492
  %22 = and i32 %16, %21, !dbg !9495
  %23 = icmp ne i32 %22, 0, !dbg !9496
  %24 = zext i1 %23 to i32, !dbg !9496
  ret i32 %24, !dbg !9497
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_update(%struct.device.73* noundef %0) #1 !dbg !9498 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9501, metadata !DIExpression()), !dbg !9502
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9503
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9504
  %7 = load i8*, i8** %6, align 4, !dbg !9504
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9503
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9502
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9505, metadata !DIExpression()), !dbg !9506
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9507
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9508
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9508
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9506
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9509
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9510
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9511
  store volatile i8 8, i8* %14, align 4, !dbg !9512
  ret i32 1, !dbg !9513
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_callback_set(%struct.device.73* noundef %0, void (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !9514 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca void (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9515, metadata !DIExpression()), !dbg !9516
  store void (%struct.device.73*, i8*)* %1, void (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.73*, i8*)** %5, metadata !9517, metadata !DIExpression()), !dbg !9518
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9519, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %7, metadata !9521, metadata !DIExpression()), !dbg !9522
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9523
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !9524
  %10 = load i8*, i8** %9, align 4, !dbg !9524
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_data*, !dbg !9523
  store %struct.uart_sam0_dev_data* %11, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9522
  %12 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %5, align 4, !dbg !9525
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9526
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !9527
  store void (%struct.device.73*, i8*)* %12, void (%struct.device.73*, i8*)** %14, align 4, !dbg !9528
  %15 = load i8*, i8** %6, align 4, !dbg !9529
  %16 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9530
  %17 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %16, i32 0, i32 2, !dbg !9531
  store i8* %15, i8** %17, align 4, !dbg !9532
  ret void, !dbg !9533
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization.26(%struct.SercomUsart* noundef %0) #1 !dbg !9534 {
  %2 = alloca %struct.SercomUsart*, align 4
  store %struct.SercomUsart* %0, %struct.SercomUsart** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %2, metadata !9537, metadata !DIExpression()), !dbg !9538
  br label %3, !dbg !9539

3:                                                ; preds = %10, %1
  %4 = load %struct.SercomUsart*, %struct.SercomUsart** %2, align 4, !dbg !9540
  %5 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %4, i32 0, i32 13, !dbg !9541
  %6 = bitcast %union.PORT_DIR_Type* %5 to i32*, !dbg !9542
  %7 = load volatile i32, i32* %6, align 4, !dbg !9542
  %8 = and i32 %7, 7, !dbg !9543
  %9 = icmp ne i32 %8, 0, !dbg !9544
  br i1 %9, label %10, label %11, !dbg !9539

10:                                               ; preds = %3
  br label %3, !dbg !9539, !llvm.loop !9545

11:                                               ; preds = %3
  ret void, !dbg !9547
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9548 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SercomUsart*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i16, align 2
  store %struct.SercomUsart* %0, %struct.SercomUsart** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %5, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9553, metadata !DIExpression()), !dbg !9554
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata i16* %9, metadata !9559, metadata !DIExpression()), !dbg !9560
  %10 = load i32, i32* %6, align 4, !dbg !9561
  %11 = zext i32 %10 to i64, !dbg !9562
  %12 = shl i64 %11, 20, !dbg !9563
  store i64 %12, i64* %8, align 8, !dbg !9564
  %13 = load i64, i64* %8, align 8, !dbg !9565
  %14 = load i32, i32* %7, align 4, !dbg !9566
  %15 = lshr i32 %14, 1, !dbg !9567
  %16 = zext i32 %15 to i64, !dbg !9568
  %17 = add i64 %13, %16, !dbg !9569
  %18 = load i32, i32* %7, align 4, !dbg !9570
  %19 = zext i32 %18 to i64, !dbg !9570
  %20 = udiv i64 %17, %19, !dbg !9571
  store i64 %20, i64* %8, align 8, !dbg !9572
  %21 = load i64, i64* %8, align 8, !dbg !9573
  %22 = icmp ult i64 %21, 1, !dbg !9575
  br i1 %22, label %26, label %23, !dbg !9576

23:                                               ; preds = %3
  %24 = load i64, i64* %8, align 8, !dbg !9577
  %25 = icmp ugt i64 %24, 65535, !dbg !9578
  br i1 %25, label %26, label %27, !dbg !9579

26:                                               ; preds = %23, %3
  store i32 -34, i32* %4, align 4, !dbg !9580
  br label %38, !dbg !9580

27:                                               ; preds = %23
  %28 = load i64, i64* %8, align 8, !dbg !9582
  %29 = trunc i64 %28 to i16, !dbg !9583
  %30 = zext i16 %29 to i32, !dbg !9583
  %31 = sub nsw i32 65536, %30, !dbg !9584
  %32 = trunc i32 %31 to i16, !dbg !9585
  store i16 %32, i16* %9, align 2, !dbg !9586
  %33 = load i16, i16* %9, align 2, !dbg !9587
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9588
  %35 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %34, i32 0, i32 3, !dbg !9589
  %36 = bitcast %union.GCLK_CLKCTRL_Type* %35 to i16*, !dbg !9590
  store volatile i16 %33, i16* %36, align 4, !dbg !9591
  %37 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9592
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %37) #10, !dbg !9593
  store i32 0, i32* %4, align 4, !dbg !9594
  br label %38, !dbg !9594

38:                                               ; preds = %27, %26
  %39 = load i32, i32* %4, align 4, !dbg !9595
  ret i32 %39, !dbg !9595
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_config_0(%struct.device.73* noundef %0) #1 !dbg !2237 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9596, metadata !DIExpression()), !dbg !9597
  br label %3, !dbg !9597

3:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #10, !dbg !9598
  call void @arch_irq_enable(i32 noundef 9) #10, !dbg !9601
  br label %4, !dbg !9601

4:                                                ; preds = %3
  ret void, !dbg !9597
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_isr(%struct.device.73* noundef %0) #1 !dbg !9602 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9603, metadata !DIExpression()), !dbg !9604
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %3, metadata !9605, metadata !DIExpression()), !dbg !9606
  %4 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9607
  %5 = getelementptr inbounds %struct.device.73, %struct.device.73* %4, i32 0, i32 4, !dbg !9608
  %6 = load i8*, i8** %5, align 4, !dbg !9608
  %7 = bitcast i8* %6 to %struct.uart_sam0_dev_data*, !dbg !9607
  store %struct.uart_sam0_dev_data* %7, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9606
  %8 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9609
  %9 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %8, i32 0, i32 1, !dbg !9611
  %10 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %9, align 4, !dbg !9611
  %11 = icmp ne void (%struct.device.73*, i8*)* %10, null, !dbg !9609
  br i1 %11, label %12, label %20, !dbg !9612

12:                                               ; preds = %1
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9613
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !9615
  %15 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %14, align 4, !dbg !9615
  %16 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9616
  %17 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9617
  %18 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %17, i32 0, i32 2, !dbg !9618
  %19 = load i8*, i8** %18, align 4, !dbg !9618
  call void %15(%struct.device.73* noundef %16, i8* noundef %19) #10, !dbg !9613
  br label %20, !dbg !9619

20:                                               ; preds = %12, %1
  ret void, !dbg !9620
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_init(%struct.device.73* noundef %0) #1 !dbg !9621 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.uart_sam0_dev_data*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9622, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9624, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !9626, metadata !DIExpression()), !dbg !9627
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9628
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !9629
  %10 = load i8*, i8** %9, align 4, !dbg !9629
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !9628
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9627
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %6, metadata !9630, metadata !DIExpression()), !dbg !9631
  %12 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9632
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 4, !dbg !9633
  %14 = load i8*, i8** %13, align 4, !dbg !9633
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_data*, !dbg !9632
  store %struct.uart_sam0_dev_data* %15, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9631
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !9634, metadata !DIExpression()), !dbg !9635
  %16 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9636
  %17 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %16, i32 0, i32 0, !dbg !9637
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %17, align 4, !dbg !9637
  store %struct.SercomUsart* %18, %struct.SercomUsart** %7, align 4, !dbg !9635
  %19 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9638
  %20 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %19, i32 0, i32 5, !dbg !9639
  %21 = load i16, i16* %20, align 4, !dbg !9639
  %22 = zext i16 %21 to i32, !dbg !9638
  %23 = or i32 %22, 0, !dbg !9640
  %24 = or i32 %23, 16384, !dbg !9641
  %25 = trunc i32 %24 to i16, !dbg !9638
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !9642
  %26 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9643
  %27 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %26, i32 0, i32 4, !dbg !9644
  %28 = load i32, i32* %27, align 4, !dbg !9644
  %29 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !9645
  %30 = or i32 %29, %28, !dbg !9645
  store volatile i32 %30, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !9645
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9646
  %32 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %31, i32 0, i32 6, !dbg !9647
  %33 = bitcast %union.PORT_PMUX_Type* %32 to i8*, !dbg !9648
  store volatile i8 -65, i8* %33, align 4, !dbg !9649
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9650
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %34) #10, !dbg !9651
  %35 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9652
  %36 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %35, i32 0, i32 2, !dbg !9653
  %37 = load i32, i32* %36, align 4, !dbg !9653
  %38 = or i32 %37, 4, !dbg !9654
  %39 = or i32 %38, 0, !dbg !9655
  %40 = or i32 %39, 0, !dbg !9656
  %41 = or i32 %40, 536870912, !dbg !9657
  %42 = or i32 %41, 1073741824, !dbg !9658
  %43 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9659
  %44 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %43, i32 0, i32 0, !dbg !9660
  %45 = bitcast %union.PORT_DIR_Type* %44 to i32*, !dbg !9661
  store volatile i32 %42, i32* %45, align 4, !dbg !9662
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9663
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %46) #10, !dbg !9664
  %47 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9665
  %48 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %47, i32 0, i32 7, !dbg !9666
  %49 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %48, align 4, !dbg !9666
  %50 = call i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %49, i8 noundef zeroext 0) #10, !dbg !9667
  store i32 %50, i32* %4, align 4, !dbg !9668
  %51 = load i32, i32* %4, align 4, !dbg !9669
  %52 = icmp slt i32 %51, 0, !dbg !9671
  br i1 %52, label %53, label %55, !dbg !9672

53:                                               ; preds = %1
  %54 = load i32, i32* %4, align 4, !dbg !9673
  store i32 %54, i32* %2, align 4, !dbg !9675
  br label %100, !dbg !9675

55:                                               ; preds = %1
  %56 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9676
  %57 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %56, i32 0, i32 0, !dbg !9677
  %58 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %57, i32 0, i32 4, !dbg !9678
  store i8 0, i8* %58, align 1, !dbg !9679
  %59 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9680
  %60 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %59, i32 0, i32 0, !dbg !9681
  %61 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %60, i32 0, i32 1, !dbg !9682
  store i8 0, i8* %61, align 4, !dbg !9683
  %62 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9684
  %63 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %62, i32 0, i32 0, !dbg !9685
  %64 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %63, i32 0, i32 2, !dbg !9686
  store i8 1, i8* %64, align 1, !dbg !9687
  %65 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9688
  %66 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %65, i32 0, i32 0, !dbg !9689
  %67 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %66, i32 0, i32 3, !dbg !9690
  store i8 3, i8* %67, align 2, !dbg !9691
  %68 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9692
  %69 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %68, i32 0, i32 1, !dbg !9693
  %70 = bitcast %union.PORT_DIR_Type* %69 to i32*, !dbg !9694
  store volatile i32 196608, i32* %70, align 4, !dbg !9695
  %71 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9696
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %71) #10, !dbg !9697
  %72 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9698
  %73 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9699
  %74 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %73, i32 0, i32 1, !dbg !9700
  %75 = load i32, i32* %74, align 4, !dbg !9700
  %76 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %72, i32 noundef %75, i32 noundef 48000000) #10, !dbg !9701
  store i32 %76, i32* %4, align 4, !dbg !9702
  %77 = load i32, i32* %4, align 4, !dbg !9703
  %78 = icmp ne i32 %77, 0, !dbg !9705
  br i1 %78, label %79, label %81, !dbg !9706

79:                                               ; preds = %55
  %80 = load i32, i32* %4, align 4, !dbg !9707
  store i32 %80, i32* %2, align 4, !dbg !9709
  br label %100, !dbg !9709

81:                                               ; preds = %55
  %82 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9710
  %83 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %82, i32 0, i32 1, !dbg !9711
  %84 = load i32, i32* %83, align 4, !dbg !9711
  %85 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9712
  %86 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %85, i32 0, i32 0, !dbg !9713
  %87 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %86, i32 0, i32 0, !dbg !9714
  store i32 %84, i32* %87, align 4, !dbg !9715
  %88 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9716
  %89 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %88, i32 0, i32 6, !dbg !9717
  %90 = load void (%struct.device.73*)*, void (%struct.device.73*)** %89, align 4, !dbg !9717
  %91 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9718
  call void %90(%struct.device.73* noundef %91) #10, !dbg !9716
  %92 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9719
  %93 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %92, i32 0, i32 0, !dbg !9720
  %94 = bitcast %union.PORT_DIR_Type* %93 to %union.anon.68*, !dbg !9721
  %95 = bitcast %union.anon.68* %94 to i32*, !dbg !9722
  %96 = load volatile i32, i32* %95, align 4, !dbg !9723
  %97 = and i32 %96, -3, !dbg !9723
  %98 = or i32 %97, 2, !dbg !9723
  store volatile i32 %98, i32* %95, align 4, !dbg !9723
  %99 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9724
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %99) #10, !dbg !9725
  store i32 0, i32* %2, align 4, !dbg !9726
  br label %100, !dbg !9726

100:                                              ; preds = %81, %79, %53
  %101 = load i32, i32* %2, align 4, !dbg !9727
  ret i32 %101, !dbg !9727
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1) #1 !dbg !9728 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pinctrl_dev_config*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.pinctrl_state*, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %4, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9733, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %7, metadata !9737, metadata !DIExpression()), !dbg !9738
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !9739
  %9 = load i8, i8* %5, align 1, !dbg !9740
  %10 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %8, i8 noundef zeroext %9, %struct.pinctrl_state** noundef %7) #10, !dbg !9741
  store i32 %10, i32* %6, align 4, !dbg !9742
  %11 = load i32, i32* %6, align 4, !dbg !9743
  %12 = icmp slt i32 %11, 0, !dbg !9745
  br i1 %12, label %13, label %15, !dbg !9746

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4, !dbg !9747
  store i32 %14, i32* %3, align 4, !dbg !9749
  br label %19, !dbg !9749

15:                                               ; preds = %2
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !9750
  %17 = load %struct.pinctrl_state*, %struct.pinctrl_state** %7, align 4, !dbg !9751
  %18 = call i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %16, %struct.pinctrl_state* noundef %17) #10, !dbg !9752
  store i32 %18, i32* %3, align 4, !dbg !9753
  br label %19, !dbg !9753

19:                                               ; preds = %15, %13
  %20 = load i32, i32* %3, align 4, !dbg !9754
  ret i32 %20, !dbg !9754
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %0, %struct.pinctrl_state* noundef %1) #1 !dbg !9755 {
  %3 = alloca %struct.pinctrl_dev_config*, align 4
  %4 = alloca %struct.pinctrl_state*, align 4
  %5 = alloca i32, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %3, metadata !9758, metadata !DIExpression()), !dbg !9759
  store %struct.pinctrl_state* %1, %struct.pinctrl_state** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %4, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9762, metadata !DIExpression()), !dbg !9763
  %6 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %3, align 4, !dbg !9764
  store i32 0, i32* %5, align 4, !dbg !9765
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9766
  %8 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 0, i32 0, !dbg !9767
  %9 = load i32*, i32** %8, align 4, !dbg !9767
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9768
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, i32 1, !dbg !9769
  %12 = load i8, i8* %11, align 4, !dbg !9769
  %13 = load i32, i32* %5, align 4, !dbg !9770
  %14 = call i32 @pinctrl_configure_pins(i32* noundef %9, i8 noundef zeroext %12, i32 noundef %13) #10, !dbg !9771
  ret i32 %14, !dbg !9772
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_driver_init(%struct.device.73* noundef %0) #1 !dbg !9773 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9774, metadata !DIExpression()), !dbg !9775
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9776
  call void @__NVIC_SetPriority.29(i32 noundef -1, i32 noundef 0) #10, !dbg !9777
  %4 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9778
  %5 = sdiv i32 %4, 10000, !dbg !9778
  %6 = sub nsw i32 %5, 1, !dbg !9779
  store i32 %6, i32* @last_load, align 4, !dbg !9780
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9781
  %7 = load i32, i32* @last_load, align 4, !dbg !9782
  store volatile i32 %7, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !9783
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9784
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9785
  %9 = or i32 %8, 7, !dbg !9785
  store volatile i32 %9, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9785
  ret i32 0, !dbg !9786
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.29(i32 noundef %0, i32 noundef %1) #1 !dbg !9787 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9790, metadata !DIExpression()), !dbg !9791
  %5 = load i32, i32* %3, align 4, !dbg !9792
  %6 = icmp sge i32 %5, 0, !dbg !9794
  br i1 %6, label %7, label %29, !dbg !9795

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !9796
  %9 = lshr i32 %8, 2, !dbg !9796
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !9798
  %11 = load volatile i32, i32* %10, align 4, !dbg !9798
  %12 = load i32, i32* %3, align 4, !dbg !9799
  %13 = and i32 %12, 3, !dbg !9799
  %14 = mul i32 %13, 8, !dbg !9799
  %15 = shl i32 255, %14, !dbg !9800
  %16 = xor i32 %15, -1, !dbg !9801
  %17 = and i32 %11, %16, !dbg !9802
  %18 = load i32, i32* %4, align 4, !dbg !9803
  %19 = shl i32 %18, 6, !dbg !9804
  %20 = and i32 %19, 255, !dbg !9805
  %21 = load i32, i32* %3, align 4, !dbg !9806
  %22 = and i32 %21, 3, !dbg !9806
  %23 = mul i32 %22, 8, !dbg !9806
  %24 = shl i32 %20, %23, !dbg !9807
  %25 = or i32 %17, %24, !dbg !9808
  %26 = load i32, i32* %3, align 4, !dbg !9809
  %27 = lshr i32 %26, 2, !dbg !9809
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !9810
  store volatile i32 %25, i32* %28, align 4, !dbg !9811
  br label %55, !dbg !9812

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !9813
  %31 = and i32 %30, 15, !dbg !9813
  %32 = sub i32 %31, 8, !dbg !9813
  %33 = lshr i32 %32, 2, !dbg !9813
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !9815
  %35 = load volatile i32, i32* %34, align 4, !dbg !9815
  %36 = load i32, i32* %3, align 4, !dbg !9816
  %37 = and i32 %36, 3, !dbg !9816
  %38 = mul i32 %37, 8, !dbg !9816
  %39 = shl i32 255, %38, !dbg !9817
  %40 = xor i32 %39, -1, !dbg !9818
  %41 = and i32 %35, %40, !dbg !9819
  %42 = load i32, i32* %4, align 4, !dbg !9820
  %43 = shl i32 %42, 6, !dbg !9821
  %44 = and i32 %43, 255, !dbg !9822
  %45 = load i32, i32* %3, align 4, !dbg !9823
  %46 = and i32 %45, 3, !dbg !9823
  %47 = mul i32 %46, 8, !dbg !9823
  %48 = shl i32 %44, %47, !dbg !9824
  %49 = or i32 %41, %48, !dbg !9825
  %50 = load i32, i32* %3, align 4, !dbg !9826
  %51 = and i32 %50, 15, !dbg !9826
  %52 = sub i32 %51, 8, !dbg !9826
  %53 = lshr i32 %52, 2, !dbg !9826
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !9827
  store volatile i32 %49, i32* %54, align 4, !dbg !9828
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !9829
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #1 !dbg !9830 {
  ret i32 48000000, !dbg !9832
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_isr(i8* noundef %0) #1 !dbg !9833 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9834, metadata !DIExpression()), !dbg !9835
  %4 = load i8*, i8** %2, align 4, !dbg !9836
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9837, metadata !DIExpression()), !dbg !9838
  %5 = call i32 @elapsed() #10, !dbg !9839
  %6 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9840
  %7 = load i32, i32* @cycle_count, align 4, !dbg !9841
  %8 = add i32 %7, %6, !dbg !9841
  store i32 %8, i32* @cycle_count, align 4, !dbg !9841
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9842
  %9 = load i32, i32* @cycle_count, align 4, !dbg !9843
  %10 = load i32, i32* @announced_cycles, align 4, !dbg !9846
  %11 = sub i32 %9, %10, !dbg !9847
  %12 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9848
  %13 = sdiv i32 %12, 10000, !dbg !9848
  %14 = udiv i32 %11, %13, !dbg !9849
  store i32 %14, i32* %3, align 4, !dbg !9850
  %15 = load i32, i32* %3, align 4, !dbg !9851
  %16 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9852
  %17 = sdiv i32 %16, 10000, !dbg !9852
  %18 = mul i32 %15, %17, !dbg !9853
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !9854
  %20 = add i32 %19, %18, !dbg !9854
  store i32 %20, i32* @announced_cycles, align 4, !dbg !9854
  %21 = load i32, i32* %3, align 4, !dbg !9855
  call void @sys_clock_announce(i32 noundef %21) #10, !dbg !9856
  call void @z_arm_int_exit() #10, !dbg !9857
  ret void, !dbg !9858
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed() #1 !dbg !9859 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9860, metadata !DIExpression()), !dbg !9861
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9862
  store i32 %4, i32* %1, align 4, !dbg !9861
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9863, metadata !DIExpression()), !dbg !9864
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9865
  store i32 %5, i32* %2, align 4, !dbg !9864
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9866, metadata !DIExpression()), !dbg !9867
  %6 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9868
  store i32 %6, i32* %3, align 4, !dbg !9867
  %7 = load i32, i32* %2, align 4, !dbg !9869
  %8 = and i32 %7, 65536, !dbg !9871
  %9 = icmp ne i32 %8, 0, !dbg !9871
  br i1 %9, label %14, label %10, !dbg !9872

10:                                               ; preds = %0
  %11 = load i32, i32* %1, align 4, !dbg !9873
  %12 = load i32, i32* %3, align 4, !dbg !9874
  %13 = icmp ult i32 %11, %12, !dbg !9875
  br i1 %13, label %14, label %19, !dbg !9876

14:                                               ; preds = %10, %0
  %15 = load i32, i32* @last_load, align 4, !dbg !9877
  %16 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9879
  %17 = add i32 %16, %15, !dbg !9879
  store volatile i32 %17, i32* @overflow_cyc, align 4, !dbg !9879
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9880
  br label %19, !dbg !9881

19:                                               ; preds = %14, %10
  %20 = load i32, i32* @last_load, align 4, !dbg !9882
  %21 = load i32, i32* %3, align 4, !dbg !9883
  %22 = sub i32 %20, %21, !dbg !9884
  %23 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9885
  %24 = add i32 %22, %23, !dbg !9886
  ret i32 %24, !dbg !9887
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !9888 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9891, metadata !DIExpression()), !dbg !9892
  %18 = zext i1 %1 to i8
  store i8 %18, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !9893, metadata !DIExpression()), !dbg !9894
  %19 = load i8, i8* %10, align 1, !dbg !9895
  %20 = trunc i8 %19 to i1, !dbg !9895
  br i1 %20, label %21, label %28, !dbg !9897

21:                                               ; preds = %2
  %22 = load i32, i32* %9, align 4, !dbg !9898
  %23 = sext i32 %22 to i64, !dbg !9898
  %24 = icmp eq i64 %23, -1, !dbg !9899
  br i1 %24, label %25, label %28, !dbg !9900

25:                                               ; preds = %21
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9901
  %27 = and i32 %26, -2, !dbg !9901
  store volatile i32 %27, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9901
  store i32 -16777216, i32* @last_load, align 4, !dbg !9903
  br label %201, !dbg !9904

28:                                               ; preds = %21, %2
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9907, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9911, metadata !DIExpression()), !dbg !9912
  %29 = load i32, i32* @last_load, align 4, !dbg !9913
  store i32 %29, i32* %14, align 4, !dbg !9912
  %30 = load i32, i32* %9, align 4, !dbg !9914
  %31 = sext i32 %30 to i64, !dbg !9914
  %32 = icmp eq i64 %31, -1, !dbg !9915
  br i1 %32, label %33, label %38, !dbg !9916

33:                                               ; preds = %28
  %34 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9917
  %35 = sdiv i32 %34, 10000, !dbg !9917
  %36 = sdiv i32 16777215, %35, !dbg !9917
  %37 = sub nsw i32 %36, 1, !dbg !9917
  br label %40, !dbg !9916

38:                                               ; preds = %28
  %39 = load i32, i32* %9, align 4, !dbg !9918
  br label %40, !dbg !9916

40:                                               ; preds = %38, %33
  %41 = phi i32 [ %37, %33 ], [ %39, %38 ], !dbg !9916
  store i32 %41, i32* %9, align 4, !dbg !9919
  %42 = load i32, i32* %9, align 4, !dbg !9920
  %43 = sub nsw i32 %42, 1, !dbg !9920
  %44 = icmp sle i32 %43, 0, !dbg !9920
  br i1 %44, label %45, label %46, !dbg !9920

45:                                               ; preds = %40
  br label %64, !dbg !9920

46:                                               ; preds = %40
  %47 = load i32, i32* %9, align 4, !dbg !9920
  %48 = sub nsw i32 %47, 1, !dbg !9920
  %49 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9920
  %50 = sdiv i32 %49, 10000, !dbg !9920
  %51 = sdiv i32 16777215, %50, !dbg !9920
  %52 = sub nsw i32 %51, 1, !dbg !9920
  %53 = icmp slt i32 %48, %52, !dbg !9920
  br i1 %53, label %54, label %57, !dbg !9920

54:                                               ; preds = %46
  %55 = load i32, i32* %9, align 4, !dbg !9920
  %56 = sub nsw i32 %55, 1, !dbg !9920
  br label %62, !dbg !9920

57:                                               ; preds = %46
  %58 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9920
  %59 = sdiv i32 %58, 10000, !dbg !9920
  %60 = sdiv i32 16777215, %59, !dbg !9920
  %61 = sub nsw i32 %60, 1, !dbg !9920
  br label %62, !dbg !9920

62:                                               ; preds = %57, %54
  %63 = phi i32 [ %56, %54 ], [ %61, %57 ], !dbg !9920
  br label %64, !dbg !9920

64:                                               ; preds = %62, %45
  %65 = phi i32 [ 0, %45 ], [ %63, %62 ], !dbg !9920
  store i32 %65, i32* %9, align 4, !dbg !9921
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !9922, metadata !DIExpression()), !dbg !9927
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !9928, metadata !DIExpression()) #9, !dbg !9933
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !9935
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !9936, metadata !DIExpression()) #9, !dbg !9937
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9938, metadata !DIExpression()) #9, !dbg !9940
  %67 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !9942, !srcloc !9943
  store i32 %67, i32* %4, align 4, !dbg !9942
  %68 = load i32, i32* %4, align 4, !dbg !9944
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !9945
  store i32 %68, i32* %69, align 4, !dbg !9946
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !9947
  %71 = load i32, i32* %70, align 4, !dbg !9947
  %72 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !9948
  store i32 %71, i32* %72, align 4, !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9949, metadata !DIExpression()), !dbg !9950
  %73 = call i32 @elapsed() #10, !dbg !9951
  store i32 %73, i32* %16, align 4, !dbg !9950
  %74 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9952
  store i32 %74, i32* %12, align 4, !dbg !9953
  %75 = load i32, i32* %16, align 4, !dbg !9954
  %76 = load i32, i32* @cycle_count, align 4, !dbg !9955
  %77 = add i32 %76, %75, !dbg !9955
  store i32 %77, i32* @cycle_count, align 4, !dbg !9955
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9956
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9957, metadata !DIExpression()), !dbg !9958
  %78 = load i32, i32* @cycle_count, align 4, !dbg !9959
  %79 = load i32, i32* @announced_cycles, align 4, !dbg !9960
  %80 = sub i32 %78, %79, !dbg !9961
  store i32 %80, i32* %17, align 4, !dbg !9958
  %81 = load i32, i32* %17, align 4, !dbg !9962
  %82 = icmp slt i32 %81, 0, !dbg !9964
  br i1 %82, label %83, label %95, !dbg !9965

83:                                               ; preds = %64
  %84 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9966
  %85 = sdiv i32 %84, 10000, !dbg !9966
  %86 = sdiv i32 %85, 16, !dbg !9966
  %87 = icmp sgt i32 1024, %86, !dbg !9966
  br i1 %87, label %88, label %89, !dbg !9966

88:                                               ; preds = %83
  br label %93, !dbg !9966

89:                                               ; preds = %83
  %90 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9966
  %91 = sdiv i32 %90, 10000, !dbg !9966
  %92 = sdiv i32 %91, 16, !dbg !9966
  br label %93, !dbg !9966

93:                                               ; preds = %89, %88
  %94 = phi i32 [ 1024, %88 ], [ %92, %89 ], !dbg !9966
  store i32 %94, i32* @last_load, align 4, !dbg !9968
  br label %166, !dbg !9969

95:                                               ; preds = %64
  %96 = load i32, i32* %9, align 4, !dbg !9970
  %97 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9972
  %98 = sdiv i32 %97, 10000, !dbg !9972
  %99 = mul nsw i32 %96, %98, !dbg !9973
  store i32 %99, i32* %11, align 4, !dbg !9974
  %100 = load i32, i32* %17, align 4, !dbg !9975
  %101 = load i32, i32* %11, align 4, !dbg !9976
  %102 = add i32 %101, %100, !dbg !9976
  store i32 %102, i32* %11, align 4, !dbg !9976
  %103 = load i32, i32* %11, align 4, !dbg !9977
  %104 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9978
  %105 = sdiv i32 %104, 10000, !dbg !9978
  %106 = add i32 %103, %105, !dbg !9979
  %107 = sub i32 %106, 1, !dbg !9980
  %108 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9981
  %109 = sdiv i32 %108, 10000, !dbg !9981
  %110 = udiv i32 %107, %109, !dbg !9982
  %111 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9983
  %112 = sdiv i32 %111, 10000, !dbg !9983
  %113 = mul i32 %110, %112, !dbg !9984
  store i32 %113, i32* %11, align 4, !dbg !9985
  %114 = load i32, i32* %17, align 4, !dbg !9986
  %115 = load i32, i32* %11, align 4, !dbg !9987
  %116 = sub i32 %115, %114, !dbg !9987
  store i32 %116, i32* %11, align 4, !dbg !9987
  %117 = load i32, i32* %11, align 4, !dbg !9988
  %118 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9988
  %119 = sdiv i32 %118, 10000, !dbg !9988
  %120 = sdiv i32 %119, 16, !dbg !9988
  %121 = icmp sgt i32 1024, %120, !dbg !9988
  br i1 %121, label %122, label %123, !dbg !9988

122:                                              ; preds = %95
  br label %127, !dbg !9988

123:                                              ; preds = %95
  %124 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9988
  %125 = sdiv i32 %124, 10000, !dbg !9988
  %126 = sdiv i32 %125, 16, !dbg !9988
  br label %127, !dbg !9988

127:                                              ; preds = %123, %122
  %128 = phi i32 [ 1024, %122 ], [ %126, %123 ], !dbg !9988
  %129 = icmp ugt i32 %117, %128, !dbg !9988
  br i1 %129, label %130, label %132, !dbg !9988

130:                                              ; preds = %127
  %131 = load i32, i32* %11, align 4, !dbg !9988
  br label %144, !dbg !9988

132:                                              ; preds = %127
  %133 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9988
  %134 = sdiv i32 %133, 10000, !dbg !9988
  %135 = sdiv i32 %134, 16, !dbg !9988
  %136 = icmp sgt i32 1024, %135, !dbg !9988
  br i1 %136, label %137, label %138, !dbg !9988

137:                                              ; preds = %132
  br label %142, !dbg !9988

138:                                              ; preds = %132
  %139 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9988
  %140 = sdiv i32 %139, 10000, !dbg !9988
  %141 = sdiv i32 %140, 16, !dbg !9988
  br label %142, !dbg !9988

142:                                              ; preds = %138, %137
  %143 = phi i32 [ 1024, %137 ], [ %141, %138 ], !dbg !9988
  br label %144, !dbg !9988

144:                                              ; preds = %142, %130
  %145 = phi i32 [ %131, %130 ], [ %143, %142 ], !dbg !9988
  store i32 %145, i32* %11, align 4, !dbg !9989
  %146 = load i32, i32* %11, align 4, !dbg !9990
  %147 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9992
  %148 = sdiv i32 %147, 10000, !dbg !9992
  %149 = sdiv i32 16777215, %148, !dbg !9992
  %150 = sub nsw i32 %149, 1, !dbg !9992
  %151 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9992
  %152 = sdiv i32 %151, 10000, !dbg !9992
  %153 = mul nsw i32 %150, %152, !dbg !9992
  %154 = icmp ugt i32 %146, %153, !dbg !9993
  br i1 %154, label %155, label %163, !dbg !9994

155:                                              ; preds = %144
  %156 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9995
  %157 = sdiv i32 %156, 10000, !dbg !9995
  %158 = sdiv i32 16777215, %157, !dbg !9995
  %159 = sub nsw i32 %158, 1, !dbg !9995
  %160 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9995
  %161 = sdiv i32 %160, 10000, !dbg !9995
  %162 = mul nsw i32 %159, %161, !dbg !9995
  store i32 %162, i32* @last_load, align 4, !dbg !9997
  br label %165, !dbg !9998

163:                                              ; preds = %144
  %164 = load i32, i32* %11, align 4, !dbg !9999
  store i32 %164, i32* @last_load, align 4, !dbg !10001
  br label %165

165:                                              ; preds = %163, %155
  br label %166

166:                                              ; preds = %165, %93
  %167 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10002
  store i32 %167, i32* %13, align 4, !dbg !10003
  %168 = load i32, i32* @last_load, align 4, !dbg !10004
  %169 = sub i32 %168, 1, !dbg !10005
  store volatile i32 %169, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !10006
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10007
  %170 = load i32, i32* %12, align 4, !dbg !10008
  %171 = load i32, i32* %13, align 4, !dbg !10010
  %172 = icmp ult i32 %170, %171, !dbg !10011
  br i1 %172, label %173, label %181, !dbg !10012

173:                                              ; preds = %166
  %174 = load i32, i32* %12, align 4, !dbg !10013
  %175 = load i32, i32* %14, align 4, !dbg !10015
  %176 = load i32, i32* %13, align 4, !dbg !10016
  %177 = sub i32 %175, %176, !dbg !10017
  %178 = add i32 %174, %177, !dbg !10018
  %179 = load i32, i32* @cycle_count, align 4, !dbg !10019
  %180 = add i32 %179, %178, !dbg !10019
  store i32 %180, i32* @cycle_count, align 4, !dbg !10019
  br label %187, !dbg !10020

181:                                              ; preds = %166
  %182 = load i32, i32* %12, align 4, !dbg !10021
  %183 = load i32, i32* %13, align 4, !dbg !10023
  %184 = sub i32 %182, %183, !dbg !10024
  %185 = load i32, i32* @cycle_count, align 4, !dbg !10025
  %186 = add i32 %185, %184, !dbg !10025
  store i32 %186, i32* @cycle_count, align 4, !dbg !10025
  br label %187

187:                                              ; preds = %181, %173
  %188 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !10026
  %189 = bitcast i32* %188 to [1 x i32]*, !dbg !10026
  %190 = load [1 x i32], [1 x i32]* %189, align 4, !dbg !10026
  %191 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %192 = bitcast i32* %191 to [1 x i32]*
  store [1 x i32] %190, [1 x i32]* %192, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !10027, metadata !DIExpression()) #9, !dbg !10031
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !10033, metadata !DIExpression()) #9, !dbg !10034
  %193 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10035
  %194 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10036
  %195 = load i32, i32* %194, align 4, !dbg !10036
  store i32 %195, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10037, metadata !DIExpression()) #9, !dbg !10039
  %196 = load i32, i32* %3, align 4, !dbg !10041
  %197 = icmp ne i32 %196, 0, !dbg !10043
  br i1 %197, label %198, label %199, !dbg !10044

198:                                              ; preds = %187
  br label %200, !dbg !10045

199:                                              ; preds = %187
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10047, !srcloc !10048
  br label %200, !dbg !10049

200:                                              ; preds = %198, %199
  br label %201, !dbg !10050

201:                                              ; preds = %200, %25
  ret void, !dbg !10050
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_elapsed() #1 !dbg !10051 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !10052, metadata !DIExpression()), !dbg !10053
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !9928, metadata !DIExpression()) #9, !dbg !10054
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10056
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !9936, metadata !DIExpression()) #9, !dbg !10057
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9938, metadata !DIExpression()) #9, !dbg !10058
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10060, !srcloc !9943
  store i32 %10, i32* %2, align 4, !dbg !10060
  %11 = load i32, i32* %2, align 4, !dbg !10061
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10062
  store i32 %11, i32* %12, align 4, !dbg !10063
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10064
  %14 = load i32, i32* %13, align 4, !dbg !10064
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10065
  store i32 %14, i32* %15, align 4, !dbg !10065
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10066, metadata !DIExpression()), !dbg !10067
  %16 = call i32 @elapsed() #10, !dbg !10068
  %17 = load i32, i32* @cycle_count, align 4, !dbg !10069
  %18 = add i32 %16, %17, !dbg !10070
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !10071
  %20 = sub i32 %18, %19, !dbg !10072
  store i32 %20, i32* %8, align 4, !dbg !10067
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10073
  %22 = bitcast i32* %21 to [1 x i32]*, !dbg !10073
  %23 = load [1 x i32], [1 x i32]* %22, align 4, !dbg !10073
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %25 = bitcast i32* %24 to [1 x i32]*
  store [1 x i32] %23, [1 x i32]* %25, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10027, metadata !DIExpression()) #9, !dbg !10074
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10033, metadata !DIExpression()) #9, !dbg !10076
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !10077
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !10078
  %28 = load i32, i32* %27, align 4, !dbg !10078
  store i32 %28, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10037, metadata !DIExpression()) #9, !dbg !10079
  %29 = load i32, i32* %1, align 4, !dbg !10081
  %30 = icmp ne i32 %29, 0, !dbg !10082
  br i1 %30, label %31, label %32, !dbg !10083

31:                                               ; preds = %0
  br label %33, !dbg !10084

32:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10085, !srcloc !10048
  br label %33, !dbg !10086

33:                                               ; preds = %31, %32
  %34 = load i32, i32* %8, align 4, !dbg !10087
  %35 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10088
  %36 = sdiv i32 %35, 10000, !dbg !10088
  %37 = udiv i32 %34, %36, !dbg !10089
  ret i32 %37, !dbg !10090
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_cycle_get_32() #1 !dbg !10091 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !10092, metadata !DIExpression()), !dbg !10093
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !9928, metadata !DIExpression()) #9, !dbg !10094
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10096
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !9936, metadata !DIExpression()) #9, !dbg !10097
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9938, metadata !DIExpression()) #9, !dbg !10098
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10100, !srcloc !9943
  store i32 %10, i32* %2, align 4, !dbg !10100
  %11 = load i32, i32* %2, align 4, !dbg !10101
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10102
  store i32 %11, i32* %12, align 4, !dbg !10103
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10104
  %14 = load i32, i32* %13, align 4, !dbg !10104
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10105
  store i32 %14, i32* %15, align 4, !dbg !10105
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10106, metadata !DIExpression()), !dbg !10107
  %16 = call i32 @elapsed() #10, !dbg !10108
  %17 = load i32, i32* @cycle_count, align 4, !dbg !10109
  %18 = add i32 %16, %17, !dbg !10110
  store i32 %18, i32* %8, align 4, !dbg !10107
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10111
  %20 = bitcast i32* %19 to [1 x i32]*, !dbg !10111
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !10111
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %23 = bitcast i32* %22 to [1 x i32]*
  store [1 x i32] %21, [1 x i32]* %23, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10027, metadata !DIExpression()) #9, !dbg !10112
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10033, metadata !DIExpression()) #9, !dbg !10114
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !10115
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !10116
  %26 = load i32, i32* %25, align 4, !dbg !10116
  store i32 %26, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10037, metadata !DIExpression()) #9, !dbg !10117
  %27 = load i32, i32* %1, align 4, !dbg !10119
  %28 = icmp ne i32 %27, 0, !dbg !10120
  br i1 %28, label %29, label %30, !dbg !10121

29:                                               ; preds = %0
  br label %31, !dbg !10122

30:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10123, !srcloc !10048
  br label %31, !dbg !10124

31:                                               ; preds = %29, %30
  %32 = load i32, i32* %8, align 4, !dbg !10125
  ret i32 %32, !dbg !10126
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_idle_exit() #1 !dbg !10127 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10128
  %2 = icmp eq i32 %1, -16777216, !dbg !10130
  br i1 %2, label %3, label %6, !dbg !10131

3:                                                ; preds = %0
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10132
  %5 = or i32 %4, 1, !dbg !10132
  store volatile i32 %5, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10132
  br label %6, !dbg !10134

6:                                                ; preds = %3, %0
  ret void, !dbg !10135
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_disable() #1 !dbg !10136 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10137
  %2 = and i32 %1, -2, !dbg !10137
  store volatile i32 %2, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10137
  ret void, !dbg !10138
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1, %struct.pinctrl_state** noundef %2) #1 !dbg !10139 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pinctrl_dev_config*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pinctrl_state**, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %5, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10159, metadata !DIExpression()), !dbg !10160
  store %struct.pinctrl_state** %2, %struct.pinctrl_state*** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state*** %7, metadata !10161, metadata !DIExpression()), !dbg !10162
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10163
  %9 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %8, i32 0, i32 0, !dbg !10164
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %9, align 4, !dbg !10164
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, !dbg !10163
  %12 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10165
  store %struct.pinctrl_state* %11, %struct.pinctrl_state** %12, align 4, !dbg !10166
  br label %13, !dbg !10167

13:                                               ; preds = %35, %3
  %14 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10168
  %15 = load %struct.pinctrl_state*, %struct.pinctrl_state** %14, align 4, !dbg !10169
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10170
  %17 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %16, i32 0, i32 0, !dbg !10171
  %18 = load %struct.pinctrl_state*, %struct.pinctrl_state** %17, align 4, !dbg !10171
  %19 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10172
  %20 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %19, i32 0, i32 1, !dbg !10173
  %21 = load i8, i8* %20, align 4, !dbg !10173
  %22 = zext i8 %21 to i32, !dbg !10170
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %18, i32 %22, !dbg !10170
  %24 = icmp ult %struct.pinctrl_state* %15, %23, !dbg !10174
  br i1 %24, label %25, label %39, !dbg !10167

25:                                               ; preds = %13
  %26 = load i8, i8* %6, align 1, !dbg !10175
  %27 = zext i8 %26 to i32, !dbg !10175
  %28 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10178
  %29 = load %struct.pinctrl_state*, %struct.pinctrl_state** %28, align 4, !dbg !10179
  %30 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %29, i32 0, i32 2, !dbg !10180
  %31 = load i8, i8* %30, align 1, !dbg !10180
  %32 = zext i8 %31 to i32, !dbg !10181
  %33 = icmp eq i32 %27, %32, !dbg !10182
  br i1 %33, label %34, label %35, !dbg !10183

34:                                               ; preds = %25
  store i32 0, i32* %4, align 4, !dbg !10184
  br label %40, !dbg !10184

35:                                               ; preds = %25
  %36 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10186
  %37 = load %struct.pinctrl_state*, %struct.pinctrl_state** %36, align 4, !dbg !10187
  %38 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %37, i32 1, !dbg !10187
  store %struct.pinctrl_state* %38, %struct.pinctrl_state** %36, align 4, !dbg !10187
  br label %13, !dbg !10167, !llvm.loop !10188

39:                                               ; preds = %13
  store i32 -2, i32* %4, align 4, !dbg !10190
  br label %40, !dbg !10190

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4, !dbg !10191
  ret i32 %41, !dbg !10191
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_configure_pins(i32* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10192 {
  %4 = alloca i32*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10195, metadata !DIExpression()), !dbg !10196
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10197, metadata !DIExpression()), !dbg !10198
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10199, metadata !DIExpression()), !dbg !10200
  %8 = load i32, i32* %6, align 4, !dbg !10201
  call void @llvm.dbg.declare(metadata i8* %7, metadata !10202, metadata !DIExpression()), !dbg !10204
  store i8 0, i8* %7, align 1, !dbg !10204
  br label %9, !dbg !10205

9:                                                ; preds = %19, %3
  %10 = load i8, i8* %7, align 1, !dbg !10206
  %11 = zext i8 %10 to i32, !dbg !10206
  %12 = load i8, i8* %5, align 1, !dbg !10208
  %13 = zext i8 %12 to i32, !dbg !10208
  %14 = icmp slt i32 %11, %13, !dbg !10209
  br i1 %14, label %15, label %22, !dbg !10210

15:                                               ; preds = %9
  %16 = load i32*, i32** %4, align 4, !dbg !10211
  %17 = getelementptr inbounds i32, i32* %16, i32 1, !dbg !10211
  store i32* %17, i32** %4, align 4, !dbg !10211
  %18 = load i32, i32* %16, align 4, !dbg !10213
  call void @pinctrl_configure_pin(i32 noundef %18) #10, !dbg !10214
  br label %19, !dbg !10215

19:                                               ; preds = %15
  %20 = load i8, i8* %7, align 1, !dbg !10216
  %21 = add i8 %20, 1, !dbg !10216
  store i8 %21, i8* %7, align 1, !dbg !10216
  br label %9, !dbg !10217, !llvm.loop !10218

22:                                               ; preds = %9
  ret i32 0, !dbg !10220
}

; Function Attrs: noinline nounwind optnone
define internal void @pinctrl_configure_pin(i32 noundef %0) #1 !dbg !10221 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.soc_port_pin, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10224, metadata !DIExpression()), !dbg !10225
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin* %3, metadata !10226, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10235, metadata !DIExpression()), !dbg !10236
  %6 = load i32, i32* %2, align 4, !dbg !10237
  %7 = lshr i32 %6, 16, !dbg !10237
  %8 = and i32 %7, 65535, !dbg !10237
  %9 = lshr i32 %8, 0, !dbg !10237
  %10 = and i32 %9, 15, !dbg !10237
  %11 = trunc i32 %10 to i8, !dbg !10237
  store i8 %11, i8* %4, align 1, !dbg !10238
  %12 = load i32, i32* %2, align 4, !dbg !10239
  %13 = lshr i32 %12, 16, !dbg !10239
  %14 = and i32 %13, 65535, !dbg !10239
  %15 = lshr i32 %14, 9, !dbg !10239
  %16 = and i32 %15, 7, !dbg !10239
  %17 = trunc i32 %16 to i8, !dbg !10239
  store i8 %17, i8* %5, align 1, !dbg !10240
  %18 = load i8, i8* %4, align 1, !dbg !10241
  %19 = zext i8 %18 to i32, !dbg !10242
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* @sam_port_addrs, i32 0, i32 %19, !dbg !10242
  %21 = load i32, i32* %20, align 4, !dbg !10242
  %22 = inttoptr i32 %21 to %struct.PortGroup*, !dbg !10243
  %23 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 0, !dbg !10244
  store %struct.PortGroup* %22, %struct.PortGroup** %23, align 4, !dbg !10245
  %24 = load i32, i32* %2, align 4, !dbg !10246
  %25 = lshr i32 %24, 16, !dbg !10246
  %26 = and i32 %25, 65535, !dbg !10246
  %27 = lshr i32 %26, 4, !dbg !10246
  %28 = and i32 %27, 31, !dbg !10246
  %29 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 1, !dbg !10247
  store i32 %28, i32* %29, align 4, !dbg !10248
  %30 = load i32, i32* %2, align 4, !dbg !10249
  %31 = lshr i32 %30, 0, !dbg !10249
  %32 = and i32 %31, 63, !dbg !10249
  %33 = shl i32 %32, 0, !dbg !10250
  %34 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !10251
  store i32 %33, i32* %34, align 4, !dbg !10252
  %35 = load i8, i8* %5, align 1, !dbg !10253
  %36 = zext i8 %35 to i32, !dbg !10253
  %37 = icmp eq i32 %36, 1, !dbg !10255
  br i1 %37, label %38, label %49, !dbg !10256

38:                                               ; preds = %1
  %39 = load i32, i32* %2, align 4, !dbg !10257
  %40 = lshr i32 %39, 16, !dbg !10257
  %41 = and i32 %40, 65535, !dbg !10257
  %42 = lshr i32 %41, 12, !dbg !10257
  %43 = and i32 %42, 15, !dbg !10257
  %44 = shl i32 %43, 16, !dbg !10259
  %45 = or i32 %44, 64, !dbg !10260
  %46 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !10261
  %47 = load i32, i32* %46, align 4, !dbg !10262
  %48 = or i32 %47, %45, !dbg !10262
  store i32 %48, i32* %46, align 4, !dbg !10262
  br label %49, !dbg !10263

49:                                               ; preds = %38, %1
  call void @soc_port_configure(%struct.soc_port_pin* noundef %3) #10, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_device_state_init() #1 !dbg !10266 {
  %1 = alloca %struct.device.73*, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %1, metadata !10268, metadata !DIExpression()), !dbg !10284
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %1, align 4, !dbg !10284
  br label %2, !dbg !10285

2:                                                ; preds = %5, %0
  %3 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10286
  %4 = icmp ult %struct.device.73* %3, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10287
  br i1 %4, label %5, label %10, !dbg !10285

5:                                                ; preds = %2
  %6 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10288
  %7 = bitcast %struct.device.73* %6 to i8*, !dbg !10288
  call void @z_object_init(i8* noundef %7) #10, !dbg !10290
  %8 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10291
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 1, !dbg !10291
  store %struct.device.73* %9, %struct.device.73** %1, align 4, !dbg !10291
  br label %2, !dbg !10285, !llvm.loop !10292

10:                                               ; preds = %2
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init(i8* noundef %0) #1 !dbg !10295 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10296, metadata !DIExpression()), !dbg !10297
  %3 = load i8*, i8** %2, align 4, !dbg !10298
  ret void, !dbg !10299
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.device.73* @z_impl_device_get_binding(i8* noundef %0) #1 !dbg !10300 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca i8*, align 4
  %4 = alloca %struct.device.73*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10303, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10305, metadata !DIExpression()), !dbg !10306
  %5 = load i8*, i8** %3, align 4, !dbg !10307
  %6 = icmp eq i8* %5, null, !dbg !10309
  br i1 %6, label %13, label %7, !dbg !10310

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 4, !dbg !10311
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !10311
  %10 = load i8, i8* %9, align 1, !dbg !10311
  %11 = zext i8 %10 to i32, !dbg !10311
  %12 = icmp eq i32 %11, 0, !dbg !10312
  br i1 %12, label %13, label %14, !dbg !10313

13:                                               ; preds = %7, %1
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !10314
  br label %54, !dbg !10314

14:                                               ; preds = %7
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !10316
  br label %15, !dbg !10318

15:                                               ; preds = %30, %14
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10319
  %17 = icmp ne %struct.device.73* %16, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10321
  br i1 %17, label %18, label %33, !dbg !10322

18:                                               ; preds = %15
  %19 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10323
  %20 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %19) #10, !dbg !10326
  br i1 %20, label %21, label %29, !dbg !10327

21:                                               ; preds = %18
  %22 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10328
  %23 = getelementptr inbounds %struct.device.73, %struct.device.73* %22, i32 0, i32 0, !dbg !10329
  %24 = load i8*, i8** %23, align 4, !dbg !10329
  %25 = load i8*, i8** %3, align 4, !dbg !10330
  %26 = icmp eq i8* %24, %25, !dbg !10331
  br i1 %26, label %27, label %29, !dbg !10332

27:                                               ; preds = %21
  %28 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10333
  store %struct.device.73* %28, %struct.device.73** %2, align 4, !dbg !10335
  br label %54, !dbg !10335

29:                                               ; preds = %21, %18
  br label %30, !dbg !10336

30:                                               ; preds = %29
  %31 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10337
  %32 = getelementptr inbounds %struct.device.73, %struct.device.73* %31, i32 1, !dbg !10337
  store %struct.device.73* %32, %struct.device.73** %4, align 4, !dbg !10337
  br label %15, !dbg !10338, !llvm.loop !10339

33:                                               ; preds = %15
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !10341
  br label %34, !dbg !10343

34:                                               ; preds = %50, %33
  %35 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10344
  %36 = icmp ne %struct.device.73* %35, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10346
  br i1 %36, label %37, label %53, !dbg !10347

37:                                               ; preds = %34
  %38 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10348
  %39 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %38) #10, !dbg !10351
  br i1 %39, label %40, label %49, !dbg !10352

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 4, !dbg !10353
  %42 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10354
  %43 = getelementptr inbounds %struct.device.73, %struct.device.73* %42, i32 0, i32 0, !dbg !10355
  %44 = load i8*, i8** %43, align 4, !dbg !10355
  %45 = call i32 @strcmp(i8* noundef %41, i8* noundef %44) #10, !dbg !10356
  %46 = icmp eq i32 %45, 0, !dbg !10357
  br i1 %46, label %47, label %49, !dbg !10358

47:                                               ; preds = %40
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10359
  store %struct.device.73* %48, %struct.device.73** %2, align 4, !dbg !10361
  br label %54, !dbg !10361

49:                                               ; preds = %40, %37
  br label %50, !dbg !10362

50:                                               ; preds = %49
  %51 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10363
  %52 = getelementptr inbounds %struct.device.73, %struct.device.73* %51, i32 1, !dbg !10363
  store %struct.device.73* %52, %struct.device.73** %4, align 4, !dbg !10363
  br label %34, !dbg !10364, !llvm.loop !10365

53:                                               ; preds = %34
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !10367
  br label %54, !dbg !10367

54:                                               ; preds = %53, %47, %27, %13
  %55 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10368
  ret %struct.device.73* %55, !dbg !10368
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !10369 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10372, metadata !DIExpression()), !dbg !10373
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10374
  %5 = icmp eq %struct.device.73* %4, null, !dbg !10376
  br i1 %5, label %6, label %7, !dbg !10377

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !10378
  br label %25, !dbg !10378

7:                                                ; preds = %1
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10380
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 3, !dbg !10381
  %10 = load %struct.device_state.72*, %struct.device_state.72** %9, align 4, !dbg !10381
  %11 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %10, i32 0, i32 1, !dbg !10382
  %12 = load i8, i8* %11, align 1, !dbg !10382
  %13 = and i8 %12, 1, !dbg !10382
  %14 = trunc i8 %13 to i1, !dbg !10382
  br i1 %14, label %15, label %23, !dbg !10383

15:                                               ; preds = %7
  %16 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10384
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 3, !dbg !10385
  %18 = load %struct.device_state.72*, %struct.device_state.72** %17, align 4, !dbg !10385
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !10386
  %20 = load i8, i8* %19, align 1, !dbg !10386
  %21 = zext i8 %20 to i32, !dbg !10384
  %22 = icmp eq i32 %21, 0, !dbg !10387
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi i1 [ false, %7 ], [ %22, %15 ], !dbg !10388
  store i1 %24, i1* %2, align 1, !dbg !10389
  br label %25, !dbg !10389

25:                                               ; preds = %23, %6
  %26 = load i1, i1* %2, align 1, !dbg !10390
  ret i1 %26, !dbg !10390
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_device_get_all_static(%struct.device.73** noundef %0) #1 !dbg !10391 {
  %2 = alloca %struct.device.73**, align 4
  store %struct.device.73** %0, %struct.device.73*** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73*** %2, metadata !10395, metadata !DIExpression()), !dbg !10396
  %3 = load %struct.device.73**, %struct.device.73*** %2, align 4, !dbg !10397
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %3, align 4, !dbg !10398
  ret i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), !dbg !10399
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_required_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10400 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10407, metadata !DIExpression()), !dbg !10408
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !10409, metadata !DIExpression()), !dbg !10410
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10411, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10413, metadata !DIExpression()), !dbg !10414
  store i32 0, i32* %7, align 4, !dbg !10414
  call void @llvm.dbg.declare(metadata i16** %8, metadata !10415, metadata !DIExpression()), !dbg !10416
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10417
  %10 = call i16* @device_required_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !10418
  store i16* %10, i16** %8, align 4, !dbg !10416
  %11 = load i16*, i16** %8, align 4, !dbg !10419
  %12 = load i32, i32* %7, align 4, !dbg !10420
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !10421
  %14 = load i8*, i8** %6, align 4, !dbg !10422
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !10423
  ret i32 %15, !dbg !10424
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_required_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !10425 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10428, metadata !DIExpression()), !dbg !10429
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10430, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.declare(metadata i16** %5, metadata !10432, metadata !DIExpression()), !dbg !10433
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10434
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 5, !dbg !10435
  %9 = load i16*, i16** %8, align 4, !dbg !10435
  store i16* %9, i16** %5, align 4, !dbg !10433
  %10 = load i16*, i16** %5, align 4, !dbg !10436
  %11 = icmp ne i16* %10, null, !dbg !10438
  br i1 %11, label %12, label %35, !dbg !10439

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10440, metadata !DIExpression()), !dbg !10442
  store i32 0, i32* %6, align 4, !dbg !10442
  br label %13, !dbg !10443

13:                                               ; preds = %29, %12
  %14 = load i16*, i16** %5, align 4, !dbg !10444
  %15 = load i32, i32* %6, align 4, !dbg !10445
  %16 = getelementptr inbounds i16, i16* %14, i32 %15, !dbg !10444
  %17 = load i16, i16* %16, align 2, !dbg !10444
  %18 = sext i16 %17 to i32, !dbg !10444
  %19 = icmp ne i32 %18, 32767, !dbg !10446
  br i1 %19, label %20, label %27, !dbg !10447

20:                                               ; preds = %13
  %21 = load i16*, i16** %5, align 4, !dbg !10448
  %22 = load i32, i32* %6, align 4, !dbg !10449
  %23 = getelementptr inbounds i16, i16* %21, i32 %22, !dbg !10448
  %24 = load i16, i16* %23, align 2, !dbg !10448
  %25 = sext i16 %24 to i32, !dbg !10448
  %26 = icmp ne i32 %25, -32768, !dbg !10450
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ false, %13 ], [ %26, %20 ], !dbg !10451
  br i1 %28, label %29, label %32, !dbg !10443

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4, !dbg !10452
  %31 = add i32 %30, 1, !dbg !10452
  store i32 %31, i32* %6, align 4, !dbg !10452
  br label %13, !dbg !10443, !llvm.loop !10454

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4, !dbg !10456
  %34 = load i32*, i32** %4, align 4, !dbg !10457
  store i32 %33, i32* %34, align 4, !dbg !10458
  br label %35, !dbg !10459

35:                                               ; preds = %32, %2
  %36 = load i16*, i16** %5, align 4, !dbg !10460
  ret i16* %36, !dbg !10461
}

; Function Attrs: noinline nounwind optnone
define internal i32 @device_visitor(i16* noundef %0, i32 noundef %1, i32 (%struct.device.73*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !10462 {
  %5 = alloca i32, align 4
  %6 = alloca i16*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.device.73*, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 4
  call void @llvm.dbg.declare(metadata i16** %6, metadata !10465, metadata !DIExpression()), !dbg !10466
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10467, metadata !DIExpression()), !dbg !10468
  store i32 (%struct.device.73*, i8*)* %2, i32 (%struct.device.73*, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %8, metadata !10469, metadata !DIExpression()), !dbg !10470
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10471, metadata !DIExpression()), !dbg !10472
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10473, metadata !DIExpression()), !dbg !10475
  store i32 0, i32* %10, align 4, !dbg !10475
  br label %14, !dbg !10476

14:                                               ; preds = %34, %4
  %15 = load i32, i32* %10, align 4, !dbg !10477
  %16 = load i32, i32* %7, align 4, !dbg !10479
  %17 = icmp ult i32 %15, %16, !dbg !10480
  br i1 %17, label %18, label %37, !dbg !10481

18:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i16* %11, metadata !10482, metadata !DIExpression()), !dbg !10484
  %19 = load i16*, i16** %6, align 4, !dbg !10485
  %20 = load i32, i32* %10, align 4, !dbg !10486
  %21 = getelementptr inbounds i16, i16* %19, i32 %20, !dbg !10485
  %22 = load i16, i16* %21, align 2, !dbg !10485
  store i16 %22, i16* %11, align 2, !dbg !10484
  call void @llvm.dbg.declare(metadata %struct.device.73** %12, metadata !10487, metadata !DIExpression()), !dbg !10488
  %23 = load i16, i16* %11, align 2, !dbg !10489
  %24 = call %struct.device.73* @device_from_handle(i16 noundef signext %23) #10, !dbg !10490
  store %struct.device.73* %24, %struct.device.73** %12, align 4, !dbg !10488
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10491, metadata !DIExpression()), !dbg !10492
  %25 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %8, align 4, !dbg !10493
  %26 = load %struct.device.73*, %struct.device.73** %12, align 4, !dbg !10494
  %27 = load i8*, i8** %9, align 4, !dbg !10495
  %28 = call i32 %25(%struct.device.73* noundef %26, i8* noundef %27) #10, !dbg !10493
  store i32 %28, i32* %13, align 4, !dbg !10492
  %29 = load i32, i32* %13, align 4, !dbg !10496
  %30 = icmp slt i32 %29, 0, !dbg !10498
  br i1 %30, label %31, label %33, !dbg !10499

31:                                               ; preds = %18
  %32 = load i32, i32* %13, align 4, !dbg !10500
  store i32 %32, i32* %5, align 4, !dbg !10502
  br label %39, !dbg !10502

33:                                               ; preds = %18
  br label %34, !dbg !10503

34:                                               ; preds = %33
  %35 = load i32, i32* %10, align 4, !dbg !10504
  %36 = add i32 %35, 1, !dbg !10504
  store i32 %36, i32* %10, align 4, !dbg !10504
  br label %14, !dbg !10505, !llvm.loop !10506

37:                                               ; preds = %14
  %38 = load i32, i32* %7, align 4, !dbg !10508
  store i32 %38, i32* %5, align 4, !dbg !10509
  br label %39, !dbg !10509

39:                                               ; preds = %37, %31
  %40 = load i32, i32* %5, align 4, !dbg !10510
  ret i32 %40, !dbg !10510
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.73* @device_from_handle(i16 noundef signext %0) #1 !dbg !10511 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  store i16 %0, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10516, metadata !DIExpression()), !dbg !10517
  store %struct.device.73* null, %struct.device.73** %3, align 4, !dbg !10517
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10518, metadata !DIExpression()), !dbg !10519
  store i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), i32* %4, align 4, !dbg !10519
  %5 = load i16, i16* %2, align 2, !dbg !10520
  %6 = sext i16 %5 to i32, !dbg !10520
  %7 = icmp sgt i32 %6, 0, !dbg !10522
  br i1 %7, label %8, label %18, !dbg !10523

8:                                                ; preds = %1
  %9 = load i16, i16* %2, align 2, !dbg !10524
  %10 = sext i16 %9 to i32, !dbg !10525
  %11 = load i32, i32* %4, align 4, !dbg !10526
  %12 = icmp ule i32 %10, %11, !dbg !10527
  br i1 %12, label %13, label %18, !dbg !10528

13:                                               ; preds = %8
  %14 = load i16, i16* %2, align 2, !dbg !10529
  %15 = sext i16 %14 to i32, !dbg !10529
  %16 = sub nsw i32 %15, 1, !dbg !10531
  %17 = getelementptr inbounds [0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 %16, !dbg !10532
  store %struct.device.73* %17, %struct.device.73** %3, align 4, !dbg !10533
  br label %18, !dbg !10534

18:                                               ; preds = %13, %8, %1
  %19 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10535
  ret %struct.device.73* %19, !dbg !10536
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_supported_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10537 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10538, metadata !DIExpression()), !dbg !10539
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !10540, metadata !DIExpression()), !dbg !10541
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10542, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10544, metadata !DIExpression()), !dbg !10545
  store i32 0, i32* %7, align 4, !dbg !10545
  call void @llvm.dbg.declare(metadata i16** %8, metadata !10546, metadata !DIExpression()), !dbg !10547
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10548
  %10 = call i16* @device_supported_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !10549
  store i16* %10, i16** %8, align 4, !dbg !10547
  %11 = load i16*, i16** %8, align 4, !dbg !10550
  %12 = load i32, i32* %7, align 4, !dbg !10551
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !10552
  %14 = load i8*, i8** %6, align 4, !dbg !10553
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !10554
  ret i32 %15, !dbg !10555
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_supported_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !10556 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10557, metadata !DIExpression()), !dbg !10558
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10559, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.declare(metadata i16** %5, metadata !10561, metadata !DIExpression()), !dbg !10562
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10563
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 5, !dbg !10564
  %10 = load i16*, i16** %9, align 4, !dbg !10564
  store i16* %10, i16** %5, align 4, !dbg !10562
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10565, metadata !DIExpression()), !dbg !10566
  store i32 0, i32* %6, align 4, !dbg !10566
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10567, metadata !DIExpression()), !dbg !10568
  store i32 0, i32* %7, align 4, !dbg !10568
  %11 = load i16*, i16** %5, align 4, !dbg !10569
  %12 = icmp ne i16* %11, null, !dbg !10571
  br i1 %12, label %13, label %42, !dbg !10572

13:                                               ; preds = %2
  br label %14, !dbg !10573

14:                                               ; preds = %25, %13
  %15 = load i32, i32* %6, align 4, !dbg !10575
  %16 = icmp ne i32 %15, 2, !dbg !10576
  br i1 %16, label %17, label %28, !dbg !10573

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 4, !dbg !10577
  %19 = load i16, i16* %18, align 2, !dbg !10580
  %20 = sext i16 %19 to i32, !dbg !10580
  %21 = icmp eq i32 %20, -32768, !dbg !10581
  br i1 %21, label %22, label %25, !dbg !10582

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4, !dbg !10583
  %24 = add i32 %23, 1, !dbg !10583
  store i32 %24, i32* %6, align 4, !dbg !10583
  br label %25, !dbg !10585

25:                                               ; preds = %22, %17
  %26 = load i16*, i16** %5, align 4, !dbg !10586
  %27 = getelementptr inbounds i16, i16* %26, i32 1, !dbg !10586
  store i16* %27, i16** %5, align 4, !dbg !10586
  br label %14, !dbg !10573, !llvm.loop !10587

28:                                               ; preds = %14
  br label %29, !dbg !10589

29:                                               ; preds = %36, %28
  %30 = load i16*, i16** %5, align 4, !dbg !10590
  %31 = load i32, i32* %7, align 4, !dbg !10591
  %32 = getelementptr inbounds i16, i16* %30, i32 %31, !dbg !10590
  %33 = load i16, i16* %32, align 2, !dbg !10590
  %34 = sext i16 %33 to i32, !dbg !10590
  %35 = icmp ne i32 %34, 32767, !dbg !10592
  br i1 %35, label %36, label %39, !dbg !10589

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4, !dbg !10593
  %38 = add i32 %37, 1, !dbg !10593
  store i32 %38, i32* %7, align 4, !dbg !10593
  br label %29, !dbg !10589, !llvm.loop !10595

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4, !dbg !10597
  %41 = load i32*, i32** %4, align 4, !dbg !10598
  store i32 %40, i32* %41, align 4, !dbg !10599
  br label %42, !dbg !10600

42:                                               ; preds = %39, %2
  %43 = load i16*, i16** %5, align 4, !dbg !10601
  ret i16* %43, !dbg !10602
}

; Function Attrs: noinline nounwind optnone
define dso_local i32* @z_impl_z_errno() #1 !dbg !10603 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10606
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 4, !dbg !10607
  ret i32* %2, !dbg !10608
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump(i32 noundef %0, %struct.__esf* noundef %1, %struct.k_thread.60* noundef %2) #1 !dbg !10609 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca %struct.k_thread.60*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10750, metadata !DIExpression()), !dbg !10751
  store %struct.__esf* %1, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !10752, metadata !DIExpression()), !dbg !10753
  store %struct.k_thread.60* %2, %struct.k_thread.60** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %6, metadata !10754, metadata !DIExpression()), !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) #1 !dbg !10757 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10760, metadata !DIExpression()), !dbg !10761
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10762, metadata !DIExpression()), !dbg !10763
  ret void, !dbg !10764
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_buffer_output(i8* noundef %0, i32 noundef %1) #1 !dbg !10765 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10768, metadata !DIExpression()), !dbg !10769
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10770, metadata !DIExpression()), !dbg !10771
  ret void, !dbg !10772
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_query(i32 noundef %0, i8* noundef %1) #1 !dbg !10773 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10778, metadata !DIExpression()), !dbg !10779
  ret i32 -134, !dbg !10780
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* noundef %1) #1 !dbg !10781 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10784, metadata !DIExpression()), !dbg !10785
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  ret i32 -134, !dbg !10788
}

; Function Attrs: noinline noreturn nounwind optnone
define weak dso_local void @arch_system_halt(i32 noundef %0) #5 !dbg !10789 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10791, metadata !DIExpression()), !dbg !10792
  %4 = load i32, i32* %3, align 4, !dbg !10793
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10794, metadata !DIExpression()) #9, !dbg !10796
  %5 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10798, !srcloc !10799
  store i32 %5, i32* %2, align 4, !dbg !10798
  %6 = load i32, i32* %2, align 4, !dbg !10800
  br label %7, !dbg !10801

7:                                                ; preds = %7, %1
  br label %7, !dbg !10802, !llvm.loop !10805
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !10808 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10811, metadata !DIExpression()), !dbg !10812
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !10813, metadata !DIExpression()), !dbg !10814
  %9 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !10815
  br label %10, !dbg !10816

10:                                               ; preds = %2
  br label %11, !dbg !10817

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4, !dbg !10821
  call void @arch_system_halt(i32 noundef %12) #12, !dbg !10822
  unreachable, !dbg !10822
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_fatal_halt(i32 noundef %0) #5 !dbg !10823 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10824, metadata !DIExpression()), !dbg !10825
  %3 = load i32, i32* %2, align 4, !dbg !10826
  call void @arch_system_halt(i32 noundef %3) #12, !dbg !10827
  unreachable, !dbg !10827
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !10828 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.__esf*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.k_thread.60*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10829, metadata !DIExpression()), !dbg !10830
  store %struct.__esf* %1, %struct.__esf** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %8, metadata !10831, metadata !DIExpression()), !dbg !10832
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10833, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10794, metadata !DIExpression()) #9, !dbg !10835
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10837, !srcloc !10799
  store i32 %23, i32* %6, align 4, !dbg !10837
  %24 = load i32, i32* %6, align 4, !dbg !10838
  store i32 %24, i32* %9, align 4, !dbg !10834
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %10, metadata !10839, metadata !DIExpression()), !dbg !10840
  %25 = call %struct.k_thread.60* @k_current_get.40() #11, !dbg !10841
  store %struct.k_thread.60* %25, %struct.k_thread.60** %10, align 4, !dbg !10840
  br label %26, !dbg !10842

26:                                               ; preds = %2
  br label %27, !dbg !10843

27:                                               ; preds = %26
  %28 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10847
  %29 = icmp ne %struct.__esf* %28, null, !dbg !10849
  br i1 %29, label %30, label %43, !dbg !10850

30:                                               ; preds = %27
  %31 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10851
  store %struct.__esf* %31, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !10852, metadata !DIExpression()), !dbg !10856
  %32 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !10858
  %33 = getelementptr inbounds %struct.__esf, %struct.__esf* %32, i32 0, i32 0, !dbg !10859
  %34 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %33, i32 0, i32 7, !dbg !10860
  %35 = load i32, i32* %34, align 4, !dbg !10860
  %36 = and i32 %35, 511, !dbg !10861
  %37 = icmp ne i32 %36, 0, !dbg !10862
  %38 = zext i1 %37 to i64, !dbg !10862
  %39 = select i1 %37, i32 1, i32 0, !dbg !10862
  br i1 %37, label %40, label %43, !dbg !10863

40:                                               ; preds = %30
  br label %41, !dbg !10864

41:                                               ; preds = %40
  br label %42, !dbg !10866

42:                                               ; preds = %41
  br label %43, !dbg !10870

43:                                               ; preds = %42, %30, %27
  br label %44, !dbg !10871

44:                                               ; preds = %43
  br label %45, !dbg !10872

45:                                               ; preds = %44
  %46 = load i32, i32* %7, align 4, !dbg !10876
  %47 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10877
  %48 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !10878
  call void @coredump(i32 noundef %46, %struct.__esf* noundef %47, %struct.k_thread.60* noundef %48) #10, !dbg !10879
  %49 = load i32, i32* %7, align 4, !dbg !10880
  %50 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10881
  call void @k_sys_fatal_error_handler(i32 noundef %49, %struct.__esf* noundef %50) #10, !dbg !10882
  %51 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10883
  %52 = icmp ne %struct.__esf* %51, null, !dbg !10887
  br i1 %52, label %53, label %64, !dbg !10888

53:                                               ; preds = %45
  %54 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10889
  store %struct.__esf* %54, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !10852, metadata !DIExpression()), !dbg !10890
  %55 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !10892
  %56 = getelementptr inbounds %struct.__esf, %struct.__esf* %55, i32 0, i32 0, !dbg !10893
  %57 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %56, i32 0, i32 7, !dbg !10894
  %58 = load i32, i32* %57, align 4, !dbg !10894
  %59 = and i32 %58, 511, !dbg !10895
  %60 = icmp ne i32 %59, 0, !dbg !10896
  %61 = zext i1 %60 to i64, !dbg !10896
  %62 = select i1 %60, i32 1, i32 0, !dbg !10896
  br i1 %60, label %63, label %64, !dbg !10897

63:                                               ; preds = %53
  br label %64, !dbg !10898

64:                                               ; preds = %63, %53, %45
  %65 = load i32, i32* %9, align 4, !dbg !10900
  store i32 %65, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10901, metadata !DIExpression()) #9, !dbg !10903
  %66 = load i32, i32* %3, align 4, !dbg !10905
  %67 = icmp ne i32 %66, 0, !dbg !10907
  br i1 %67, label %68, label %69, !dbg !10908

68:                                               ; preds = %64
  br label %70, !dbg !10909

69:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10911, !srcloc !10912
  br label %70, !dbg !10913

70:                                               ; preds = %68, %69
  %71 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !10914
  call void @k_thread_abort.41(%struct.k_thread.60* noundef %71) #10, !dbg !10917
  ret void, !dbg !10918
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get.40() #6 !dbg !10919 {
  %1 = call %struct.k_thread.60* @z_current_get.42() #11, !dbg !10923
  ret %struct.k_thread.60* %1, !dbg !10924
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort.41(%struct.k_thread.60* noundef %0) #1 !dbg !10925 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !10928, metadata !DIExpression()), !dbg !10929
  br label %3, !dbg !10930

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10931, !srcloc !10933
  br label %4, !dbg !10931

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !10934
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !10935
  ret void, !dbg !10936
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get.42() #6 !dbg !10937 {
  br label %1, !dbg !10938

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10939, !srcloc !10941
  br label %2, !dbg !10939

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !10942
  ret %struct.k_thread.60* %3, !dbg !10943
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !10944 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10947, metadata !DIExpression()), !dbg !10948
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10949, metadata !DIExpression()), !dbg !10950
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10951, metadata !DIExpression()), !dbg !10952
  %7 = load i8*, i8** %4, align 4, !dbg !10953
  %8 = load i32, i32* %5, align 4, !dbg !10954
  %9 = load i32, i32* %6, align 4, !dbg !10955
  %10 = call i8* @memset(i8* noundef %7, i32 noundef %8, i32 noundef %9) #10, !dbg !10956
  ret void, !dbg !10957
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10958 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10961, metadata !DIExpression()), !dbg !10962
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10963, metadata !DIExpression()), !dbg !10964
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10965, metadata !DIExpression()), !dbg !10966
  %7 = load i8*, i8** %4, align 4, !dbg !10967
  %8 = load i8*, i8** %5, align 4, !dbg !10968
  %9 = load i32, i32* %6, align 4, !dbg !10969
  %10 = call i8* @memcpy(i8* noundef %7, i8* noundef %8, i32 noundef %9) #10, !dbg !10970
  ret void, !dbg !10971
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_bss_zero() #1 !dbg !10972 {
  call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #10, !dbg !10973
  ret void, !dbg !10974
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_cpu(i32 noundef %0) #1 !dbg !10975 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10978, metadata !DIExpression()), !dbg !10979
  %3 = load i32, i32* %2, align 4, !dbg !10980
  call void @init_idle_thread(i32 noundef %3) #10, !dbg !10981
  %4 = load i32, i32* %2, align 4, !dbg !10982
  %5 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %4, !dbg !10983
  %6 = load i32, i32* %2, align 4, !dbg !10984
  %7 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %6, !dbg !10985
  %8 = getelementptr inbounds %struct._cpu, %struct._cpu* %7, i32 0, i32 3, !dbg !10986
  store %struct.k_thread.203* %5, %struct.k_thread.203** %8, align 4, !dbg !10987
  %9 = load i32, i32* %2, align 4, !dbg !10988
  %10 = trunc i32 %9 to i8, !dbg !10988
  %11 = load i32, i32* %2, align 4, !dbg !10989
  %12 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %11, !dbg !10990
  %13 = getelementptr inbounds %struct._cpu, %struct._cpu* %12, i32 0, i32 5, !dbg !10991
  store i8 %10, i8* %13, align 4, !dbg !10992
  %14 = load i32, i32* %2, align 4, !dbg !10993
  %15 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %14, !dbg !10994
  %16 = getelementptr inbounds [2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* %15, i32 0, i32 0, !dbg !10994
  %17 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %16) #10, !dbg !10995
  %18 = getelementptr inbounds i8, i8* %17, i32 2048, !dbg !10996
  %19 = load i32, i32* %2, align 4, !dbg !10997
  %20 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %19, !dbg !10998
  %21 = getelementptr inbounds %struct._cpu, %struct._cpu* %20, i32 0, i32 1, !dbg !10999
  store i8* %18, i8** %21, align 4, !dbg !11000
  ret void, !dbg !11001
}

; Function Attrs: noinline nounwind optnone
define internal void @init_idle_thread(i32 noundef %0) #1 !dbg !11002 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.z_thread_stack_element*, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11003, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !11005, metadata !DIExpression()), !dbg !11006
  %6 = load i32, i32* %2, align 4, !dbg !11007
  %7 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %6, !dbg !11008
  store %struct.k_thread.203* %7, %struct.k_thread.203** %3, align 4, !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %4, metadata !11009, metadata !DIExpression()), !dbg !11012
  %8 = load i32, i32* %2, align 4, !dbg !11013
  %9 = getelementptr inbounds [1 x [256 x %struct.z_thread_stack_element]], [1 x [256 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %8, !dbg !11014
  %10 = getelementptr inbounds [256 x %struct.z_thread_stack_element], [256 x %struct.z_thread_stack_element]* %9, i32 0, i32 0, !dbg !11014
  store %struct.z_thread_stack_element* %10, %struct.z_thread_stack_element** %4, align 4, !dbg !11012
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11015, metadata !DIExpression()), !dbg !11016
  store i8* null, i8** %5, align 4, !dbg !11016
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11017
  %12 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %4, align 4, !dbg !11018
  %13 = load i32, i32* %2, align 4, !dbg !11019
  %14 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %13, !dbg !11020
  %15 = bitcast %struct._cpu* %14 to i8*, !dbg !11021
  %16 = load i8*, i8** %5, align 4, !dbg !11022
  %17 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %11, %struct.z_thread_stack_element* noundef %12, i32 noundef 256, void (i8*, i8*, i8*)* noundef @idle, i8* noundef %15, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef %16) #10, !dbg !11023
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11024
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef %18) #10, !dbg !11025
  ret void, !dbg !11026
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11027 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11030, metadata !DIExpression()), !dbg !11031
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11032
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11033
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11034
  ret i8* %5, !dbg !11035
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started(%struct.k_thread.203* noundef %0) #1 !dbg !11036 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11040, metadata !DIExpression()), !dbg !11041
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11042
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !11043
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !11044
  %6 = load i8, i8* %5, align 1, !dbg !11045
  %7 = zext i8 %6 to i32, !dbg !11045
  %8 = and i32 %7, -5, !dbg !11045
  %9 = trunc i32 %8 to i8, !dbg !11045
  store i8 %9, i8* %5, align 1, !dbg !11045
  ret void, !dbg !11046
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_cstart() #5 !dbg !11047 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203, align 8
  call void @gcov_static_init() #10, !dbg !11048
  call void @z_sys_init_run_level(i32 noundef 0) #10, !dbg !11049
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11050, metadata !DIExpression()) #9, !dbg !11053
  %4 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #13, !dbg !11058
  %5 = ptrtoint i8* %4 to i32, !dbg !11059
  %6 = add i32 %5, 2048, !dbg !11060
  store i32 %6, i32* %2, align 4, !dbg !11053
  %7 = load i32, i32* %2, align 4, !dbg !11061
  store i32 %7, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11062, metadata !DIExpression()) #9, !dbg !11066
  %8 = load i32, i32* %1, align 4, !dbg !11068
  call void asm sideeffect "MSR msp, $0", "r"(i32 %8) #9, !dbg !11069, !srcloc !11070
  call void @__NVIC_SetPriority.49(i32 noundef -2, i32 noundef 255) #13, !dbg !11071
  call void @z_arm_fault_init() #13, !dbg !11074
  call void @z_arm_cpu_idle_init() #13, !dbg !11075
  br label %9, !dbg !11076

9:                                                ; preds = %0
  br label %10, !dbg !11077

10:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.k_thread.203* %3, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @z_dummy_thread_init(%struct.k_thread.203* noundef %3) #10, !dbg !11081
  call void @z_device_state_init() #10, !dbg !11082
  call void @z_sys_init_run_level(i32 noundef 1) #10, !dbg !11083
  call void @z_sys_init_run_level(i32 noundef 2) #10, !dbg !11084
  %11 = call i8* @prepare_multithreading() #10, !dbg !11085
  call void @switch_to_main_thread(i8* noundef %11) #12, !dbg !11086
  unreachable, !dbg !11086
}

; Function Attrs: noinline nounwind optnone
define internal void @gcov_static_init() #1 !dbg !11087 {
  ret void, !dbg !11089
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sys_init_run_level(i32 noundef %0) #1 !dbg !2968 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.init_entry*, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11090, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.declare(metadata %struct.init_entry** %3, metadata !11092, metadata !DIExpression()), !dbg !11093
  %6 = load i32, i32* %2, align 4, !dbg !11094
  %7 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %6, !dbg !11096
  %8 = load %struct.init_entry*, %struct.init_entry** %7, align 4, !dbg !11096
  store %struct.init_entry* %8, %struct.init_entry** %3, align 4, !dbg !11097
  br label %9, !dbg !11098

9:                                                ; preds = %56, %1
  %10 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11099
  %11 = load i32, i32* %2, align 4, !dbg !11101
  %12 = add i32 %11, 1, !dbg !11102
  %13 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %12, !dbg !11103
  %14 = load %struct.init_entry*, %struct.init_entry** %13, align 4, !dbg !11103
  %15 = icmp ult %struct.init_entry* %10, %14, !dbg !11104
  br i1 %15, label %16, label %59, !dbg !11105

16:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !11106, metadata !DIExpression()), !dbg !11108
  %17 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11109
  %18 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %17, i32 0, i32 1, !dbg !11110
  %19 = load %struct.device.73*, %struct.device.73** %18, align 4, !dbg !11110
  store %struct.device.73* %19, %struct.device.73** %4, align 4, !dbg !11108
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11111, metadata !DIExpression()), !dbg !11112
  %20 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11113
  %21 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %20, i32 0, i32 0, !dbg !11114
  %22 = load i32 (%struct.device.73*)*, i32 (%struct.device.73*)** %21, align 4, !dbg !11114
  %23 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11115
  %24 = call i32 %22(%struct.device.73* noundef %23) #10, !dbg !11113
  store i32 %24, i32* %5, align 4, !dbg !11112
  %25 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11116
  %26 = icmp ne %struct.device.73* %25, null, !dbg !11118
  br i1 %26, label %27, label %55, !dbg !11119

27:                                               ; preds = %16
  %28 = load i32, i32* %5, align 4, !dbg !11120
  %29 = icmp ne i32 %28, 0, !dbg !11123
  br i1 %29, label %30, label %47, !dbg !11124

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4, !dbg !11125
  %32 = icmp slt i32 %31, 0, !dbg !11128
  br i1 %32, label %33, label %36, !dbg !11129

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !11130
  %35 = sub nsw i32 0, %34, !dbg !11132
  store i32 %35, i32* %5, align 4, !dbg !11133
  br label %36, !dbg !11134

36:                                               ; preds = %33, %30
  %37 = load i32, i32* %5, align 4, !dbg !11135
  %38 = icmp sgt i32 %37, 255, !dbg !11137
  br i1 %38, label %39, label %40, !dbg !11138

39:                                               ; preds = %36
  store i32 255, i32* %5, align 4, !dbg !11139
  br label %40, !dbg !11141

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %5, align 4, !dbg !11142
  %42 = trunc i32 %41 to i8, !dbg !11142
  %43 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11143
  %44 = getelementptr inbounds %struct.device.73, %struct.device.73* %43, i32 0, i32 3, !dbg !11144
  %45 = load %struct.device_state.72*, %struct.device_state.72** %44, align 4, !dbg !11144
  %46 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %45, i32 0, i32 0, !dbg !11145
  store i8 %42, i8* %46, align 1, !dbg !11146
  br label %47, !dbg !11147

47:                                               ; preds = %40, %27
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11148
  %49 = getelementptr inbounds %struct.device.73, %struct.device.73* %48, i32 0, i32 3, !dbg !11149
  %50 = load %struct.device_state.72*, %struct.device_state.72** %49, align 4, !dbg !11149
  %51 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %50, i32 0, i32 1, !dbg !11150
  %52 = load i8, i8* %51, align 1, !dbg !11151
  %53 = and i8 %52, -2, !dbg !11151
  %54 = or i8 %53, 1, !dbg !11151
  store i8 %54, i8* %51, align 1, !dbg !11151
  br label %55, !dbg !11152

55:                                               ; preds = %47, %16
  br label %56, !dbg !11153

56:                                               ; preds = %55
  %57 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11154
  %58 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %57, i32 1, !dbg !11154
  store %struct.init_entry* %58, %struct.init_entry** %3, align 4, !dbg !11154
  br label %9, !dbg !11155, !llvm.loop !11156

59:                                               ; preds = %9
  ret void, !dbg !11158
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.49(i32 noundef %0, i32 noundef %1) #1 !dbg !11159 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11160, metadata !DIExpression()), !dbg !11161
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11162, metadata !DIExpression()), !dbg !11163
  %5 = load i32, i32* %3, align 4, !dbg !11164
  %6 = icmp sge i32 %5, 0, !dbg !11166
  br i1 %6, label %7, label %29, !dbg !11167

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !11168
  %9 = lshr i32 %8, 2, !dbg !11168
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !11170
  %11 = load volatile i32, i32* %10, align 4, !dbg !11170
  %12 = load i32, i32* %3, align 4, !dbg !11171
  %13 = and i32 %12, 3, !dbg !11171
  %14 = mul i32 %13, 8, !dbg !11171
  %15 = shl i32 255, %14, !dbg !11172
  %16 = xor i32 %15, -1, !dbg !11173
  %17 = and i32 %11, %16, !dbg !11174
  %18 = load i32, i32* %4, align 4, !dbg !11175
  %19 = shl i32 %18, 6, !dbg !11176
  %20 = and i32 %19, 255, !dbg !11177
  %21 = load i32, i32* %3, align 4, !dbg !11178
  %22 = and i32 %21, 3, !dbg !11178
  %23 = mul i32 %22, 8, !dbg !11178
  %24 = shl i32 %20, %23, !dbg !11179
  %25 = or i32 %17, %24, !dbg !11180
  %26 = load i32, i32* %3, align 4, !dbg !11181
  %27 = lshr i32 %26, 2, !dbg !11181
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !11182
  store volatile i32 %25, i32* %28, align 4, !dbg !11183
  br label %55, !dbg !11184

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !11185
  %31 = and i32 %30, 15, !dbg !11185
  %32 = sub i32 %31, 8, !dbg !11185
  %33 = lshr i32 %32, 2, !dbg !11185
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !11187
  %35 = load volatile i32, i32* %34, align 4, !dbg !11187
  %36 = load i32, i32* %3, align 4, !dbg !11188
  %37 = and i32 %36, 3, !dbg !11188
  %38 = mul i32 %37, 8, !dbg !11188
  %39 = shl i32 255, %38, !dbg !11189
  %40 = xor i32 %39, -1, !dbg !11190
  %41 = and i32 %35, %40, !dbg !11191
  %42 = load i32, i32* %4, align 4, !dbg !11192
  %43 = shl i32 %42, 6, !dbg !11193
  %44 = and i32 %43, 255, !dbg !11194
  %45 = load i32, i32* %3, align 4, !dbg !11195
  %46 = and i32 %45, 3, !dbg !11195
  %47 = mul i32 %46, 8, !dbg !11195
  %48 = shl i32 %44, %47, !dbg !11196
  %49 = or i32 %41, %48, !dbg !11197
  %50 = load i32, i32* %3, align 4, !dbg !11198
  %51 = and i32 %50, 15, !dbg !11198
  %52 = sub i32 %51, 8, !dbg !11198
  %53 = lshr i32 %52, 2, !dbg !11198
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !11199
  store volatile i32 %49, i32* %54, align 4, !dbg !11200
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !11201
}

declare dso_local void @z_arm_cpu_idle_init() #0

; Function Attrs: noinline nounwind optnone
define internal void @z_dummy_thread_init(%struct.k_thread.203* noundef %0) #1 !dbg !11202 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11204, metadata !DIExpression()), !dbg !11205
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11206
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !11207
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !11208
  store i8 1, i8* %5, align 1, !dbg !11209
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11210
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !11211
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 2, !dbg !11212
  store i8 1, i8* %8, align 4, !dbg !11213
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11214
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 5, !dbg !11215
  store %struct.k_heap.201* null, %struct.k_heap.201** %10, align 4, !dbg !11216
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11217
  store %struct.k_thread.203* %11, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11218
  ret void, !dbg !11219
}

; Function Attrs: noinline nounwind optnone
define internal i8* @prepare_multithreading() #1 !dbg !11220 {
  %1 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11223, metadata !DIExpression()), !dbg !11224
  call void @z_sched_init() #10, !dbg !11225
  store %struct.k_thread.203* @z_main_thread, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11226
  %2 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0)) #10, !dbg !11227
  store i8* %2, i8** %1, align 4, !dbg !11228
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !11229
  call void @z_ready_thread(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !11230
  call void @z_init_cpu(i32 noundef 0) #10, !dbg !11231
  %3 = load i8*, i8** %1, align 4, !dbg !11232
  ret i8* %3, !dbg !11233
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @switch_to_main_thread(i8* noundef %0) #5 !dbg !11234 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11237, metadata !DIExpression()), !dbg !11238
  %3 = load i8*, i8** %2, align 4, !dbg !11239
  call void @arch_switch_to_main_thread(%struct.k_thread.203* noundef @z_main_thread, i8* noundef %3, void (i8*, i8*, i8*)* noundef @bg_thread_main) #10, !dbg !11240
  unreachable, !dbg !11241
}

; Function Attrs: noinline nounwind optnone
define internal void @bg_thread_main(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !11242 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11243, metadata !DIExpression()), !dbg !11244
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11245, metadata !DIExpression()), !dbg !11246
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11247, metadata !DIExpression()), !dbg !11248
  %7 = load i8*, i8** %4, align 4, !dbg !11249
  %8 = load i8*, i8** %5, align 4, !dbg !11250
  %9 = load i8*, i8** %6, align 4, !dbg !11251
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11252
  call void @z_sys_init_run_level(i32 noundef 3) #10, !dbg !11253
  call void @boot_banner() #10, !dbg !11254
  call void @z_sys_init_run_level(i32 noundef 4) #10, !dbg !11255
  call void @z_init_static_threads() #10, !dbg !11256
  call void @main() #10, !dbg !11257
  %10 = load i8, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11258
  %11 = zext i8 %10 to i32, !dbg !11258
  %12 = and i32 %11, -2, !dbg !11258
  %13 = trunc i32 %12 to i8, !dbg !11258
  store i8 %13, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11258
  ret void, !dbg !11259
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11260 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !11269, metadata !DIExpression()), !dbg !11270
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11271, metadata !DIExpression()), !dbg !11272
  ret void, !dbg !11273
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11274 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !11275, metadata !DIExpression()), !dbg !11276
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11277, metadata !DIExpression()), !dbg !11278
  ret void, !dbg !11279
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_is_in_isr() #1 !dbg !11280 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11281, metadata !DIExpression()) #9, !dbg !11283
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !11287, !srcloc !11288
  store i32 %2, i32* %1, align 4, !dbg !11287
  %3 = load i32, i32* %1, align 4, !dbg !11289
  %4 = icmp ne i32 %3, 0, !dbg !11290
  %5 = zext i1 %4 to i64, !dbg !11290
  %6 = select i1 %4, i32 1, i32 0, !dbg !11290
  ret i1 %4, !dbg !11291
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_set() #1 !dbg !11292 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11293
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11294
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11295
  %4 = load i8, i8* %3, align 4, !dbg !11296
  %5 = zext i8 %4 to i32, !dbg !11296
  %6 = or i32 %5, 1, !dbg !11296
  %7 = trunc i32 %6 to i8, !dbg !11296
  store i8 %7, i8* %3, align 4, !dbg !11296
  ret void, !dbg !11297
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_clear() #1 !dbg !11298 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11299
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11300
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11301
  %4 = load i8, i8* %3, align 4, !dbg !11302
  %5 = zext i8 %4 to i32, !dbg !11302
  %6 = and i32 %5, -2, !dbg !11302
  %7 = trunc i32 %6 to i8, !dbg !11302
  store i8 %7, i8* %3, align 4, !dbg !11302
  ret void, !dbg !11303
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_is_thread_essential() #1 !dbg !11304 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11305
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11306
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11307
  %4 = load i8, i8* %3, align 4, !dbg !11307
  %5 = zext i8 %4 to i32, !dbg !11305
  %6 = and i32 %5, 1, !dbg !11308
  %7 = icmp eq i32 %6, 1, !dbg !11309
  ret i1 %7, !dbg !11310
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread.203* noundef %0, i8* noundef %1) #1 !dbg !11311 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !11314, metadata !DIExpression()), !dbg !11315
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11316, metadata !DIExpression()), !dbg !11317
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11318
  %6 = load i8*, i8** %4, align 4, !dbg !11319
  br label %7, !dbg !11320

7:                                                ; preds = %2
  br label %8, !dbg !11321

8:                                                ; preds = %7
  ret i32 -88, !dbg !11323
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_name_get(%struct.k_thread.203* noundef %0) #1 !dbg !11324 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11327, metadata !DIExpression()), !dbg !11328
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11329
  ret i8* null, !dbg !11330
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !11331 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11334, metadata !DIExpression()), !dbg !11335
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11336, metadata !DIExpression()), !dbg !11337
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11338, metadata !DIExpression()), !dbg !11339
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11340
  %8 = load i8*, i8** %5, align 4, !dbg !11341
  %9 = load i32, i32* %6, align 4, !dbg !11342
  ret i32 -88, !dbg !11343
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_state_str(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !2986 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11346, metadata !DIExpression()), !dbg !11347
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11348, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11350, metadata !DIExpression()), !dbg !11351
  store i32 0, i32* %8, align 4, !dbg !11351
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11352, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11354, metadata !DIExpression()), !dbg !11355
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !11356
  %13 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %12, i32 0, i32 0, !dbg !11357
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 3, !dbg !11358
  %15 = load i8, i8* %14, align 1, !dbg !11358
  store i8 %15, i8* %10, align 1, !dbg !11355
  %16 = load i8*, i8** %6, align 4, !dbg !11359
  %17 = icmp eq i8* %16, null, !dbg !11361
  br i1 %17, label %21, label %18, !dbg !11362

18:                                               ; preds = %3
  %19 = load i32, i32* %7, align 4, !dbg !11363
  %20 = icmp eq i32 %19, 0, !dbg !11364
  br i1 %20, label %21, label %22, !dbg !11365

21:                                               ; preds = %18, %3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8** %4, align 4, !dbg !11366
  br label %88, !dbg !11366

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !11368
  %24 = add i32 %23, -1, !dbg !11368
  store i32 %24, i32* %7, align 4, !dbg !11368
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11369, metadata !DIExpression()), !dbg !11371
  store i8 0, i8* %11, align 1, !dbg !11371
  br label %25, !dbg !11372

25:                                               ; preds = %80, %22
  %26 = load i8, i8* %10, align 1, !dbg !11373
  %27 = zext i8 %26 to i32, !dbg !11373
  %28 = icmp ne i32 %27, 0, !dbg !11375
  br i1 %28, label %29, label %83, !dbg !11376

29:                                               ; preds = %25
  %30 = load i8, i8* %11, align 1, !dbg !11377
  %31 = zext i8 %30 to i32, !dbg !11377
  %32 = shl i32 1, %31, !dbg !11377
  %33 = trunc i32 %32 to i8, !dbg !11377
  store i8 %33, i8* %9, align 1, !dbg !11379
  %34 = load i8, i8* %10, align 1, !dbg !11380
  %35 = zext i8 %34 to i32, !dbg !11380
  %36 = load i8, i8* %9, align 1, !dbg !11382
  %37 = zext i8 %36 to i32, !dbg !11382
  %38 = and i32 %35, %37, !dbg !11383
  %39 = icmp eq i32 %38, 0, !dbg !11384
  br i1 %39, label %40, label %41, !dbg !11385

40:                                               ; preds = %29
  br label %80, !dbg !11386

41:                                               ; preds = %29
  %42 = load i8*, i8** %6, align 4, !dbg !11388
  %43 = load i32, i32* %8, align 4, !dbg !11389
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !11390
  %45 = load i32, i32* %7, align 4, !dbg !11391
  %46 = load i32, i32* %8, align 4, !dbg !11392
  %47 = sub i32 %45, %46, !dbg !11393
  %48 = load i8, i8* %11, align 1, !dbg !11394
  %49 = zext i8 %48 to i32, !dbg !11395
  %50 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %49, !dbg !11395
  %51 = load i8*, i8** %50, align 4, !dbg !11395
  %52 = load i8, i8* %11, align 1, !dbg !11396
  %53 = zext i8 %52 to i32, !dbg !11397
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %53, !dbg !11397
  %55 = load i32, i32* %54, align 4, !dbg !11397
  %56 = call i32 @copy_bytes(i8* noundef %44, i32 noundef %47, i8* noundef %51, i32 noundef %55) #10, !dbg !11398
  %57 = load i32, i32* %8, align 4, !dbg !11399
  %58 = add i32 %57, %56, !dbg !11399
  store i32 %58, i32* %8, align 4, !dbg !11399
  %59 = load i8, i8* %9, align 1, !dbg !11400
  %60 = zext i8 %59 to i32, !dbg !11400
  %61 = xor i32 %60, -1, !dbg !11401
  %62 = load i8, i8* %10, align 1, !dbg !11402
  %63 = zext i8 %62 to i32, !dbg !11402
  %64 = and i32 %63, %61, !dbg !11402
  %65 = trunc i32 %64 to i8, !dbg !11402
  store i8 %65, i8* %10, align 1, !dbg !11402
  %66 = load i8, i8* %10, align 1, !dbg !11403
  %67 = zext i8 %66 to i32, !dbg !11403
  %68 = icmp ne i32 %67, 0, !dbg !11405
  br i1 %68, label %69, label %79, !dbg !11406

69:                                               ; preds = %41
  %70 = load i8*, i8** %6, align 4, !dbg !11407
  %71 = load i32, i32* %8, align 4, !dbg !11409
  %72 = getelementptr inbounds i8, i8* %70, i32 %71, !dbg !11410
  %73 = load i32, i32* %7, align 4, !dbg !11411
  %74 = load i32, i32* %8, align 4, !dbg !11412
  %75 = sub i32 %73, %74, !dbg !11413
  %76 = call i32 @copy_bytes(i8* noundef %72, i32 noundef %75, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #10, !dbg !11414
  %77 = load i32, i32* %8, align 4, !dbg !11415
  %78 = add i32 %77, %76, !dbg !11415
  store i32 %78, i32* %8, align 4, !dbg !11415
  br label %79, !dbg !11416

79:                                               ; preds = %69, %41
  br label %80, !dbg !11417

80:                                               ; preds = %79, %40
  %81 = load i8, i8* %11, align 1, !dbg !11418
  %82 = add i8 %81, 1, !dbg !11418
  store i8 %82, i8* %11, align 1, !dbg !11418
  br label %25, !dbg !11419, !llvm.loop !11420

83:                                               ; preds = %25
  %84 = load i8*, i8** %6, align 4, !dbg !11422
  %85 = load i32, i32* %8, align 4, !dbg !11423
  %86 = getelementptr inbounds i8, i8* %84, i32 %85, !dbg !11422
  store i8 0, i8* %86, align 1, !dbg !11424
  %87 = load i8*, i8** %6, align 4, !dbg !11425
  store i8* %87, i8** %4, align 4, !dbg !11426
  br label %88, !dbg !11426

88:                                               ; preds = %83, %21
  %89 = load i8*, i8** %4, align 4, !dbg !11427
  ret i8* %89, !dbg !11427
}

; Function Attrs: noinline nounwind optnone
define internal i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #1 !dbg !11428 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11431, metadata !DIExpression()), !dbg !11432
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11433, metadata !DIExpression()), !dbg !11434
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11435, metadata !DIExpression()), !dbg !11436
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11437, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11439, metadata !DIExpression()), !dbg !11440
  %10 = load i32, i32* %6, align 4, !dbg !11441
  %11 = load i32, i32* %8, align 4, !dbg !11441
  %12 = icmp ult i32 %10, %11, !dbg !11441
  br i1 %12, label %13, label %15, !dbg !11441

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !11441
  br label %17, !dbg !11441

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 4, !dbg !11441
  br label %17, !dbg !11441

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ], !dbg !11441
  store i32 %18, i32* %9, align 4, !dbg !11442
  %19 = load i8*, i8** %5, align 4, !dbg !11443
  %20 = load i8*, i8** %7, align 4, !dbg !11444
  %21 = load i32, i32* %9, align 4, !dbg !11445
  %22 = call i8* @memcpy(i8* noundef %19, i8* noundef %20, i32 noundef %21) #10, !dbg !11446
  %23 = load i32, i32* %9, align 4, !dbg !11447
  ret i32 %23, !dbg !11448
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !11449 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11452, metadata !DIExpression()), !dbg !11453
  br label %3, !dbg !11454

3:                                                ; preds = %1
  br label %4, !dbg !11455

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11457
  call void @z_sched_start(%struct.k_thread.203* noundef %5) #10, !dbg !11458
  ret void, !dbg !11459
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_setup_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) #1 !dbg !11460 {
  %11 = alloca i8*, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !11468, metadata !DIExpression()), !dbg !11469
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !11470, metadata !DIExpression()), !dbg !11471
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11472, metadata !DIExpression()), !dbg !11473
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !11476, metadata !DIExpression()), !dbg !11477
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !11478, metadata !DIExpression()), !dbg !11479
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !11480, metadata !DIExpression()), !dbg !11481
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !11482, metadata !DIExpression()), !dbg !11483
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11484, metadata !DIExpression()), !dbg !11485
  store i8* %9, i8** %21, align 4
  call void @llvm.dbg.declare(metadata i8** %21, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata i8** %22, metadata !11488, metadata !DIExpression()), !dbg !11489
  br label %23, !dbg !11490

23:                                               ; preds = %10
  br label %24, !dbg !11491

24:                                               ; preds = %23
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11493
  %26 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %25, i32 0, i32 3, !dbg !11494
  call void @z_waitq_init(%union.anon.192* noundef %26) #10, !dbg !11495
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11496
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !11497
  %29 = load i32, i32* %19, align 4, !dbg !11498
  %30 = load i32, i32* %20, align 4, !dbg !11499
  call void @z_init_thread_base(%struct._thread_base.196* noundef %28, i32 noundef %29, i32 noundef 4, i32 noundef %30) #10, !dbg !11500
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11501
  %32 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11502
  %33 = load i32, i32* %14, align 4, !dbg !11503
  %34 = call i8* @setup_thread_stack(%struct.k_thread.203* noundef %31, %struct.z_thread_stack_element* noundef %32, i32 noundef %33) #10, !dbg !11504
  store i8* %34, i8** %22, align 4, !dbg !11505
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11506
  %36 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11507
  %37 = load i8*, i8** %22, align 4, !dbg !11508
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !11509
  %39 = load i8*, i8** %16, align 4, !dbg !11510
  %40 = load i8*, i8** %17, align 4, !dbg !11511
  %41 = load i8*, i8** %18, align 4, !dbg !11512
  call void @arch_new_thread(%struct.k_thread.203* noundef %35, %struct.z_thread_stack_element* noundef %36, i8* noundef %37, void (i8*, i8*, i8*)* noundef %38, i8* noundef %39, i8* noundef %40, i8* noundef %41) #10, !dbg !11513
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11514
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 2, !dbg !11515
  store i8* null, i8** %43, align 4, !dbg !11516
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11517
  %45 = icmp ne %struct.k_thread.203* %44, null, !dbg !11517
  br i1 %45, label %50, label %46, !dbg !11519

46:                                               ; preds = %24
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11520
  %48 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %47, i32 0, i32 5, !dbg !11522
  store %struct.k_heap.201* null, %struct.k_heap.201** %48, align 4, !dbg !11523
  %49 = load i8*, i8** %22, align 4, !dbg !11524
  store i8* %49, i8** %11, align 4, !dbg !11525
  br label %59, !dbg !11525

50:                                               ; preds = %24
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11526
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 5, !dbg !11527
  %53 = load %struct.k_heap.201*, %struct.k_heap.201** %52, align 4, !dbg !11527
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11528
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 5, !dbg !11529
  store %struct.k_heap.201* %53, %struct.k_heap.201** %55, align 4, !dbg !11530
  br label %56, !dbg !11531

56:                                               ; preds = %50
  br label %57, !dbg !11532

57:                                               ; preds = %56
  %58 = load i8*, i8** %22, align 4, !dbg !11534
  store i8* %58, i8** %11, align 4, !dbg !11535
  br label %59, !dbg !11535

59:                                               ; preds = %57, %46
  %60 = load i8*, i8** %11, align 4, !dbg !11536
  ret i8* %60, !dbg !11536
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init(%union.anon.192* noundef %0) #1 !dbg !11537 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !11541, metadata !DIExpression()), !dbg !11542
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !11543
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !11544
  call void @sys_dlist_init(%struct._dnode.191* noundef %4) #10, !dbg !11545
  ret void, !dbg !11546
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_thread_base(%struct._thread_base.196* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11547 {
  %5 = alloca %struct._thread_base.196*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %5, metadata !11551, metadata !DIExpression()), !dbg !11552
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11553, metadata !DIExpression()), !dbg !11554
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11555, metadata !DIExpression()), !dbg !11556
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11557, metadata !DIExpression()), !dbg !11558
  %9 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11559
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !11560
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !11561
  %11 = load i32, i32* %8, align 4, !dbg !11562
  %12 = trunc i32 %11 to i8, !dbg !11563
  %13 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11564
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 2, !dbg !11565
  store i8 %12, i8* %14, align 4, !dbg !11566
  %15 = load i32, i32* %7, align 4, !dbg !11567
  %16 = trunc i32 %15 to i8, !dbg !11568
  %17 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11569
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !11570
  store i8 %16, i8* %18, align 1, !dbg !11571
  %19 = load i32, i32* %6, align 4, !dbg !11572
  %20 = trunc i32 %19 to i8, !dbg !11572
  %21 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11573
  %22 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %21, i32 0, i32 4, !dbg !11574
  %23 = bitcast %union.anon.2.7* %22 to %struct.device_state.72*, !dbg !11574
  %24 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %23, i32 0, i32 0, !dbg !11574
  store i8 %20, i8* %24, align 2, !dbg !11575
  %25 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11576
  %26 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %25, i32 0, i32 4, !dbg !11577
  %27 = bitcast %union.anon.2.7* %26 to %struct.device_state.72*, !dbg !11577
  %28 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %27, i32 0, i32 1, !dbg !11577
  store i8 0, i8* %28, align 1, !dbg !11578
  %29 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11579
  call void @z_init_thread_timeout(%struct._thread_base.196* noundef %29) #10, !dbg !11580
  ret void, !dbg !11581
}

; Function Attrs: noinline nounwind optnone
define internal i8* @setup_thread_stack(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #1 !dbg !11582 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11585, metadata !DIExpression()), !dbg !11586
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !11587, metadata !DIExpression()), !dbg !11588
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11589, metadata !DIExpression()), !dbg !11590
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11591, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11593, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.declare(metadata i8** %9, metadata !11595, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11597, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11599, metadata !DIExpression()), !dbg !11600
  store i32 0, i32* %11, align 4, !dbg !11600
  %16 = load i32, i32* %6, align 4, !dbg !11601
  %17 = add i32 %16, 7, !dbg !11601
  %18 = and i32 %17, -8, !dbg !11601
  %19 = add i32 %18, 0, !dbg !11601
  store i32 %19, i32* %7, align 4, !dbg !11603
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !11604
  %21 = call i8* @Z_KERNEL_STACK_BUFFER.57(%struct.z_thread_stack_element* noundef %20) #10, !dbg !11605
  store i8* %21, i8** %10, align 4, !dbg !11606
  %22 = load i32, i32* %7, align 4, !dbg !11607
  %23 = sub i32 %22, 0, !dbg !11608
  store i32 %23, i32* %8, align 4, !dbg !11609
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !11610
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !11611
  %26 = load i32, i32* %7, align 4, !dbg !11612
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !11613
  store i8* %27, i8** %9, align 4, !dbg !11614
  br label %28, !dbg !11615

28:                                               ; preds = %3
  br label %29, !dbg !11616

29:                                               ; preds = %28
  %30 = load i32, i32* %11, align 4, !dbg !11620
  %31 = add i32 %30, 7, !dbg !11620
  %32 = and i32 %31, -8, !dbg !11620
  store i32 %32, i32* %11, align 4, !dbg !11621
  %33 = load i32, i32* %11, align 4, !dbg !11622
  %34 = load i8*, i8** %9, align 4, !dbg !11623
  %35 = sub i32 0, %33, !dbg !11623
  %36 = getelementptr inbounds i8, i8* %34, i32 %35, !dbg !11623
  store i8* %36, i8** %9, align 4, !dbg !11623
  %37 = load i8*, i8** %9, align 4, !dbg !11624
  ret i8* %37, !dbg !11625
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER.57(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11626 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11629, metadata !DIExpression()), !dbg !11630
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11631
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11632
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11633
  ret i8* %5, !dbg !11634
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_thread_timeout(%struct._thread_base.196* noundef %0) #1 !dbg !11635 {
  %2 = alloca %struct._thread_base.196*, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %2, metadata !11639, metadata !DIExpression()), !dbg !11640
  %3 = load %struct._thread_base.196*, %struct._thread_base.196** %2, align 4, !dbg !11641
  %4 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %3, i32 0, i32 7, !dbg !11642
  call void @z_init_timeout(%struct._timeout.195* noundef %4) #10, !dbg !11643
  ret void, !dbg !11644
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_timeout(%struct._timeout.195* noundef %0) #1 !dbg !11645 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !11646, metadata !DIExpression()), !dbg !11647
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !11648
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !11649
  call void @sys_dnode_init(%struct._dnode.191* noundef %4) #10, !dbg !11650
  ret void, !dbg !11651
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init(%struct._dnode.191* noundef %0) #1 !dbg !11652 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !11655, metadata !DIExpression()), !dbg !11656
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11657
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !11658
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !11658
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !11659
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11660
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !11661
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !11661
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !11662
  ret void, !dbg !11663
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init(%struct._dnode.191* noundef %0) #1 !dbg !11664 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !11668, metadata !DIExpression()), !dbg !11669
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11670
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11671
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !11672
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !11672
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !11673
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11674
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11675
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !11676
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !11676
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !11677
  ret void, !dbg !11678
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_k_thread_create(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) #1 !dbg !11679 {
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %union.argument_value, align 8
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %23 = bitcast i64* %22 to [1 x i64]*
  store [1 x i64] %9, [1 x i64]* %23, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !11686, metadata !DIExpression()), !dbg !11687
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !11688, metadata !DIExpression()), !dbg !11689
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11690, metadata !DIExpression()), !dbg !11691
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !11692, metadata !DIExpression()), !dbg !11693
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !11694, metadata !DIExpression()), !dbg !11695
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !11696, metadata !DIExpression()), !dbg !11697
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !11698, metadata !DIExpression()), !dbg !11699
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !11700, metadata !DIExpression()), !dbg !11701
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !11704, metadata !DIExpression()), !dbg !11705
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11706
  %25 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11707
  %26 = load i32, i32* %14, align 4, !dbg !11708
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !11709
  %28 = load i8*, i8** %16, align 4, !dbg !11710
  %29 = load i8*, i8** %17, align 4, !dbg !11711
  %30 = load i8*, i8** %18, align 4, !dbg !11712
  %31 = load i32, i32* %19, align 4, !dbg !11713
  %32 = load i32, i32* %20, align 4, !dbg !11714
  %33 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %24, %struct.z_thread_stack_element* noundef %25, i32 noundef %26, void (i8*, i8*, i8*)* noundef %27, i8* noundef %28, i8* noundef %29, i8* noundef %30, i32 noundef %31, i32 noundef %32, i8* noundef null) #10, !dbg !11715
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !11716
  %35 = load i64, i64* %34, align 8, !dbg !11716
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %21, i32 0, i32 0, !dbg !11716
  store i64 -1, i64* %36, align 8, !dbg !11716
  %37 = icmp eq i64 %35, -1, !dbg !11716
  br i1 %37, label %43, label %38, !dbg !11718

38:                                               ; preds = %10
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11719
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !11721
  %41 = bitcast i64* %40 to [1 x i64]*, !dbg !11721
  %42 = load [1 x i64], [1 x i64]* %41, align 8, !dbg !11721
  call void @schedule_new_thread(%struct.k_thread.203* noundef %39, [1 x i64] %42) #10, !dbg !11721
  br label %43, !dbg !11722

43:                                               ; preds = %38, %10
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11723
  ret %struct.k_thread.203* %44, !dbg !11724
}

; Function Attrs: noinline nounwind optnone
define internal void @schedule_new_thread(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !11725 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11728, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !11730, metadata !DIExpression()), !dbg !11731
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11732
  %9 = load i64, i64* %8, align 8, !dbg !11732
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11732
  store i64 0, i64* %10, align 8, !dbg !11732
  %11 = icmp eq i64 %9, 0, !dbg !11732
  br i1 %11, label %12, label %14, !dbg !11734

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11735
  call void @k_thread_start(%struct.k_thread.203* noundef %13) #10, !dbg !11737
  br label %19, !dbg !11738

14:                                               ; preds = %2
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11739
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11741
  %17 = bitcast i64* %16 to [1 x i64]*, !dbg !11741
  %18 = load [1 x i64], [1 x i64]* %17, align 8, !dbg !11741
  call void @z_add_thread_timeout(%struct.k_thread.203* noundef %15, [1 x i64] %18) #10, !dbg !11741
  br label %19

19:                                               ; preds = %14, %12
  ret void, !dbg !11742
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !11743 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11746, metadata !DIExpression()), !dbg !11747
  br label %3, !dbg !11748

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11749, !srcloc !11751
  br label %4, !dbg !11749

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11752
  call void @z_impl_k_thread_start(%struct.k_thread.203* noundef %5) #10, !dbg !11753
  ret void, !dbg !11754
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !11755 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11756, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !11758, metadata !DIExpression()), !dbg !11759
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11760
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !11761
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !11762
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11763
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !11763
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !11763
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !11763
  ret void, !dbg !11764
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_static_threads() #1 !dbg !11765 {
  %1 = alloca %struct._static_thread_data.499*, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._static_thread_data.499*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.499** %1, metadata !11766, metadata !DIExpression()), !dbg !11783
  store %struct._static_thread_data.499* getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.499** %1, align 4, !dbg !11783
  br label %6, !dbg !11783

6:                                                ; preds = %50, %0
  %7 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11784
  %8 = icmp ult %struct._static_thread_data.499* %7, getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11784
  %9 = zext i1 %8 to i32, !dbg !11784
  store i32 %9, i32* %2, align 4, !dbg !11787
  %10 = load i32, i32* %2, align 4, !dbg !11784
  %11 = icmp ne i32 %10, 0, !dbg !11783
  br i1 %11, label %12, label %53, !dbg !11783

12:                                               ; preds = %6
  %13 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11789
  %14 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %13, i32 0, i32 0, !dbg !11791
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !11791
  %16 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11792
  %17 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %16, i32 0, i32 1, !dbg !11793
  %18 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %17, align 4, !dbg !11793
  %19 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11794
  %20 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %19, i32 0, i32 2, !dbg !11795
  %21 = load i32, i32* %20, align 4, !dbg !11795
  %22 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11796
  %23 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %22, i32 0, i32 3, !dbg !11797
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %23, align 4, !dbg !11797
  %25 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11798
  %26 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %25, i32 0, i32 4, !dbg !11799
  %27 = load i8*, i8** %26, align 4, !dbg !11799
  %28 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11800
  %29 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %28, i32 0, i32 5, !dbg !11801
  %30 = load i8*, i8** %29, align 4, !dbg !11801
  %31 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11802
  %32 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %31, i32 0, i32 6, !dbg !11803
  %33 = load i8*, i8** %32, align 4, !dbg !11803
  %34 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11804
  %35 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %34, i32 0, i32 7, !dbg !11805
  %36 = load i32, i32* %35, align 4, !dbg !11805
  %37 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11806
  %38 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %37, i32 0, i32 8, !dbg !11807
  %39 = load i32, i32* %38, align 4, !dbg !11807
  %40 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11808
  %41 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %40, i32 0, i32 11, !dbg !11809
  %42 = load i8*, i8** %41, align 4, !dbg !11809
  %43 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %15, %struct.z_thread_stack_element* noundef %18, i32 noundef %21, void (i8*, i8*, i8*)* noundef %24, i8* noundef %27, i8* noundef %30, i8* noundef %33, i32 noundef %36, i32 noundef %39, i8* noundef %42) #10, !dbg !11810
  %44 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11811
  %45 = bitcast %struct._static_thread_data.499* %44 to i8*, !dbg !11811
  %46 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11812
  %47 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %46, i32 0, i32 0, !dbg !11813
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %47, align 4, !dbg !11813
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 2, !dbg !11814
  store i8* %45, i8** %49, align 4, !dbg !11815
  br label %50, !dbg !11816

50:                                               ; preds = %12
  %51 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11817
  %52 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %51, i32 1, !dbg !11817
  store %struct._static_thread_data.499* %52, %struct._static_thread_data.499** %1, align 4, !dbg !11817
  br label %6, !dbg !11817, !llvm.loop !11818

53:                                               ; preds = %6
  call void @k_sched_lock() #10, !dbg !11820
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.499** %3, metadata !11821, metadata !DIExpression()), !dbg !11823
  store %struct._static_thread_data.499* getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.499** %3, align 4, !dbg !11823
  br label %54, !dbg !11823

54:                                               ; preds = %88, %53
  %55 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11824
  %56 = icmp ult %struct._static_thread_data.499* %55, getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11824
  %57 = zext i1 %56 to i32, !dbg !11824
  store i32 %57, i32* %4, align 4, !dbg !11827
  %58 = load i32, i32* %4, align 4, !dbg !11824
  %59 = icmp ne i32 %58, 0, !dbg !11823
  br i1 %59, label %60, label %91, !dbg !11823

60:                                               ; preds = %54
  %61 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11829
  %62 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %61, i32 0, i32 9, !dbg !11832
  %63 = load i32, i32* %62, align 4, !dbg !11832
  %64 = sext i32 %63 to i64, !dbg !11829
  %65 = icmp ne i64 %64, -1, !dbg !11833
  br i1 %65, label %66, label %87, !dbg !11834

66:                                               ; preds = %60
  %67 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11835
  %68 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %67, i32 0, i32 0, !dbg !11837
  %69 = load %struct.k_thread.203*, %struct.k_thread.203** %68, align 4, !dbg !11837
  %70 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11838
  %71 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11838
  %72 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %71, i32 0, i32 9, !dbg !11838
  %73 = load i32, i32* %72, align 4, !dbg !11838
  %74 = icmp sgt i32 %73, 0, !dbg !11838
  br i1 %74, label %75, label %79, !dbg !11838

75:                                               ; preds = %66
  %76 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11838
  %77 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %76, i32 0, i32 9, !dbg !11838
  %78 = load i32, i32* %77, align 4, !dbg !11838
  br label %80, !dbg !11838

79:                                               ; preds = %66
  br label %80, !dbg !11838

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 0, %79 ], !dbg !11838
  %82 = sext i32 %81 to i64, !dbg !11838
  %83 = call i64 @k_ms_to_ticks_ceil64(i64 noundef %82) #10, !dbg !11838
  store i64 %83, i64* %70, align 8, !dbg !11838
  %84 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11839
  %85 = bitcast i64* %84 to [1 x i64]*, !dbg !11839
  %86 = load [1 x i64], [1 x i64]* %85, align 8, !dbg !11839
  call void @schedule_new_thread(%struct.k_thread.203* noundef %69, [1 x i64] %86) #10, !dbg !11839
  br label %87, !dbg !11840

87:                                               ; preds = %80, %60
  br label %88, !dbg !11841

88:                                               ; preds = %87
  %89 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11842
  %90 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %89, i32 1, !dbg !11842
  store %struct._static_thread_data.499* %90, %struct._static_thread_data.499** %3, align 4, !dbg !11842
  br label %54, !dbg !11842, !llvm.loop !11843

91:                                               ; preds = %54
  call void @k_sched_unlock() #10, !dbg !11845
  ret void, !dbg !11846
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64 noundef %0) #1 !dbg !11847 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !11850, metadata !DIExpression()), !dbg !11851
  %15 = load i64, i64* %14, align 8, !dbg !11852
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11853, metadata !DIExpression()), !dbg !11857
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11859, metadata !DIExpression()), !dbg !11860
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11861, metadata !DIExpression()), !dbg !11862
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11863, metadata !DIExpression()), !dbg !11864
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !11865, metadata !DIExpression()), !dbg !11866
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !11867, metadata !DIExpression()), !dbg !11868
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11869, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11871, metadata !DIExpression()), !dbg !11872
  %16 = load i8, i8* %6, align 1, !dbg !11873
  %17 = trunc i8 %16 to i1, !dbg !11873
  br i1 %17, label %18, label %27, !dbg !11874

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !11875
  %20 = load i32, i32* %4, align 4, !dbg !11876
  %21 = icmp ugt i32 %19, %20, !dbg !11877
  br i1 %21, label %22, label %27, !dbg !11878

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !11879
  %24 = load i32, i32* %4, align 4, !dbg !11880
  %25 = urem i32 %23, %24, !dbg !11881
  %26 = icmp eq i32 %25, 0, !dbg !11882
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !11883
  %29 = zext i1 %28 to i8, !dbg !11872
  store i8 %29, i8* %10, align 1, !dbg !11872
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11884, metadata !DIExpression()), !dbg !11885
  %30 = load i8, i8* %6, align 1, !dbg !11886
  %31 = trunc i8 %30 to i1, !dbg !11886
  br i1 %31, label %32, label %41, !dbg !11887

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !11888
  %34 = load i32, i32* %5, align 4, !dbg !11889
  %35 = icmp ugt i32 %33, %34, !dbg !11890
  br i1 %35, label %36, label %41, !dbg !11891

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !11892
  %38 = load i32, i32* %5, align 4, !dbg !11893
  %39 = urem i32 %37, %38, !dbg !11894
  %40 = icmp eq i32 %39, 0, !dbg !11895
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !11883
  %43 = zext i1 %42 to i8, !dbg !11885
  store i8 %43, i8* %11, align 1, !dbg !11885
  %44 = load i32, i32* %4, align 4, !dbg !11896
  %45 = load i32, i32* %5, align 4, !dbg !11898
  %46 = icmp eq i32 %44, %45, !dbg !11899
  br i1 %46, label %47, label %58, !dbg !11900

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !11901
  %49 = trunc i8 %48 to i1, !dbg !11901
  br i1 %49, label %50, label %54, !dbg !11901

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !11903
  %52 = trunc i64 %51 to i32, !dbg !11904
  %53 = zext i32 %52 to i64, !dbg !11905
  br label %56, !dbg !11901

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !11906
  br label %56, !dbg !11901

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !11901
  store i64 %57, i64* %2, align 8, !dbg !11907
  br label %195, !dbg !11907

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !11908, metadata !DIExpression()), !dbg !11909
  store i64 0, i64* %12, align 8, !dbg !11909
  %59 = load i8, i8* %10, align 1, !dbg !11910
  %60 = trunc i8 %59 to i1, !dbg !11910
  br i1 %60, label %86, label %61, !dbg !11912

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11913, metadata !DIExpression()), !dbg !11915
  %62 = load i8, i8* %11, align 1, !dbg !11916
  %63 = trunc i8 %62 to i1, !dbg !11916
  br i1 %63, label %64, label %68, !dbg !11916

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !11917
  %66 = load i32, i32* %5, align 4, !dbg !11918
  %67 = udiv i32 %65, %66, !dbg !11919
  br label %70, !dbg !11916

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !11920
  br label %70, !dbg !11916

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !11916
  store i32 %71, i32* %13, align 4, !dbg !11915
  %72 = load i8, i8* %8, align 1, !dbg !11921
  %73 = trunc i8 %72 to i1, !dbg !11921
  br i1 %73, label %74, label %78, !dbg !11923

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !11924
  %76 = sub i32 %75, 1, !dbg !11926
  %77 = zext i32 %76 to i64, !dbg !11924
  store i64 %77, i64* %12, align 8, !dbg !11927
  br label %78, !dbg !11928

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !11929
  %80 = trunc i8 %79 to i1, !dbg !11929
  br i1 %80, label %81, label %85, !dbg !11931

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !11932
  %83 = udiv i32 %82, 2, !dbg !11934
  %84 = zext i32 %83 to i64, !dbg !11932
  store i64 %84, i64* %12, align 8, !dbg !11935
  br label %85, !dbg !11936

85:                                               ; preds = %81, %78
  br label %86, !dbg !11937

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !11938
  %88 = trunc i8 %87 to i1, !dbg !11938
  br i1 %88, label %89, label %114, !dbg !11940

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !11941
  %91 = load i64, i64* %3, align 8, !dbg !11943
  %92 = add i64 %91, %90, !dbg !11943
  store i64 %92, i64* %3, align 8, !dbg !11943
  %93 = load i8, i8* %7, align 1, !dbg !11944
  %94 = trunc i8 %93 to i1, !dbg !11944
  br i1 %94, label %95, label %106, !dbg !11946

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !11947
  %97 = icmp ult i64 %96, 4294967296, !dbg !11948
  br i1 %97, label %98, label %106, !dbg !11949

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !11950
  %100 = trunc i64 %99 to i32, !dbg !11952
  %101 = load i32, i32* %4, align 4, !dbg !11953
  %102 = load i32, i32* %5, align 4, !dbg !11954
  %103 = udiv i32 %101, %102, !dbg !11955
  %104 = udiv i32 %100, %103, !dbg !11956
  %105 = zext i32 %104 to i64, !dbg !11957
  store i64 %105, i64* %2, align 8, !dbg !11958
  br label %195, !dbg !11958

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !11959
  %108 = load i32, i32* %4, align 4, !dbg !11961
  %109 = zext i32 %108 to i64, !dbg !11962
  %110 = load i32, i32* %5, align 4, !dbg !11963
  %111 = zext i32 %110 to i64, !dbg !11963
  %112 = udiv i64 %109, %111, !dbg !11964
  %113 = udiv i64 %107, %112, !dbg !11965
  store i64 %113, i64* %2, align 8, !dbg !11966
  br label %195, !dbg !11966

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !11967
  %116 = trunc i8 %115 to i1, !dbg !11967
  br i1 %116, label %117, label %136, !dbg !11969

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !11970
  %119 = trunc i8 %118 to i1, !dbg !11970
  br i1 %119, label %120, label %128, !dbg !11973

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !11974
  %122 = trunc i64 %121 to i32, !dbg !11976
  %123 = load i32, i32* %5, align 4, !dbg !11977
  %124 = load i32, i32* %4, align 4, !dbg !11978
  %125 = udiv i32 %123, %124, !dbg !11979
  %126 = mul i32 %122, %125, !dbg !11980
  %127 = zext i32 %126 to i64, !dbg !11981
  store i64 %127, i64* %2, align 8, !dbg !11982
  br label %195, !dbg !11982

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !11983
  %130 = load i32, i32* %5, align 4, !dbg !11985
  %131 = zext i32 %130 to i64, !dbg !11986
  %132 = load i32, i32* %4, align 4, !dbg !11987
  %133 = zext i32 %132 to i64, !dbg !11987
  %134 = udiv i64 %131, %133, !dbg !11988
  %135 = mul i64 %129, %134, !dbg !11989
  store i64 %135, i64* %2, align 8, !dbg !11990
  br label %195, !dbg !11990

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !11991
  %138 = trunc i8 %137 to i1, !dbg !11991
  br i1 %138, label %139, label %151, !dbg !11994

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !11995
  %141 = load i32, i32* %5, align 4, !dbg !11997
  %142 = zext i32 %141 to i64, !dbg !11997
  %143 = mul i64 %140, %142, !dbg !11998
  %144 = load i64, i64* %12, align 8, !dbg !11999
  %145 = add i64 %143, %144, !dbg !12000
  %146 = load i32, i32* %4, align 4, !dbg !12001
  %147 = zext i32 %146 to i64, !dbg !12001
  %148 = udiv i64 %145, %147, !dbg !12002
  %149 = trunc i64 %148 to i32, !dbg !12003
  %150 = zext i32 %149 to i64, !dbg !12003
  store i64 %150, i64* %2, align 8, !dbg !12004
  br label %195, !dbg !12004

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !12005
  %153 = trunc i8 %152 to i1, !dbg !12005
  br i1 %153, label %154, label %174, !dbg !12007

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !12008
  %156 = zext i32 %155 to i64, !dbg !12008
  %157 = mul i64 31536000, %156, !dbg !12008
  %158 = add i64 %157, 4294967294, !dbg !12008
  %159 = udiv i64 %158, 4294967295, !dbg !12008
  %160 = load i32, i32* %5, align 4, !dbg !12008
  %161 = zext i32 %160 to i64, !dbg !12008
  %162 = mul i64 %159, %161, !dbg !12008
  %163 = icmp ule i64 %162, 4294967295, !dbg !12008
  br i1 %163, label %164, label %174, !dbg !12009

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !12010
  %166 = load i32, i32* %5, align 4, !dbg !12012
  %167 = zext i32 %166 to i64, !dbg !12012
  %168 = mul i64 %165, %167, !dbg !12013
  %169 = load i64, i64* %12, align 8, !dbg !12014
  %170 = add i64 %168, %169, !dbg !12015
  %171 = load i32, i32* %4, align 4, !dbg !12016
  %172 = zext i32 %171 to i64, !dbg !12016
  %173 = udiv i64 %170, %172, !dbg !12017
  store i64 %173, i64* %2, align 8, !dbg !12018
  br label %195, !dbg !12018

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !12019
  %176 = load i32, i32* %4, align 4, !dbg !12021
  %177 = zext i32 %176 to i64, !dbg !12021
  %178 = udiv i64 %175, %177, !dbg !12022
  %179 = load i32, i32* %5, align 4, !dbg !12023
  %180 = zext i32 %179 to i64, !dbg !12023
  %181 = mul i64 %178, %180, !dbg !12024
  %182 = load i64, i64* %3, align 8, !dbg !12025
  %183 = load i32, i32* %4, align 4, !dbg !12026
  %184 = zext i32 %183 to i64, !dbg !12026
  %185 = urem i64 %182, %184, !dbg !12027
  %186 = load i32, i32* %5, align 4, !dbg !12028
  %187 = zext i32 %186 to i64, !dbg !12028
  %188 = mul i64 %185, %187, !dbg !12029
  %189 = load i64, i64* %12, align 8, !dbg !12030
  %190 = add i64 %188, %189, !dbg !12031
  %191 = load i32, i32* %4, align 4, !dbg !12032
  %192 = zext i32 %191 to i64, !dbg !12032
  %193 = udiv i64 %190, %192, !dbg !12033
  %194 = add i64 %181, %193, !dbg !12034
  store i64 %194, i64* %2, align 8, !dbg !12035
  br label %195, !dbg !12035

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !12036
  ret i64 %196, !dbg !12037
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !12038 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !12039, metadata !DIExpression()), !dbg !12040
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12041, metadata !DIExpression()), !dbg !12042
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12043, metadata !DIExpression()), !dbg !12044
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12045, metadata !DIExpression()), !dbg !12046
  br label %9, !dbg !12047

9:                                                ; preds = %4
  br label %10, !dbg !12048

10:                                               ; preds = %9
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12050
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !12051
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 2, !dbg !12052
  %14 = load i8, i8* %13, align 4, !dbg !12053
  %15 = zext i8 %14 to i32, !dbg !12053
  %16 = or i32 %15, 4, !dbg !12053
  %17 = trunc i32 %16 to i8, !dbg !12053
  store i8 %17, i8* %13, align 4, !dbg !12053
  call void @z_thread_essential_clear() #10, !dbg !12054
  %18 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !12055
  %19 = load i8*, i8** %6, align 4, !dbg !12056
  %20 = load i8*, i8** %7, align 4, !dbg !12057
  %21 = load i8*, i8** %8, align 4, !dbg !12058
  call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %18, i8* noundef %19, i8* noundef %20, i8* noundef %21) #12, !dbg !12059
  unreachable, !dbg !12059
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread.203* noundef %0) #1 !dbg !12060 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12063, metadata !DIExpression()), !dbg !12064
  ret i32 -134, !dbg !12065
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !12066 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12069, metadata !DIExpression()), !dbg !12070
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12071, metadata !DIExpression()), !dbg !12072
  ret i32 -134, !dbg !12073
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread.203* noundef %0, %struct.k_spinlock.13* noundef %1) #1 !dbg !12074 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12080, metadata !DIExpression()), !dbg !12081
  store %struct.k_spinlock.13* %1, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12082, metadata !DIExpression()), !dbg !12083
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12084
  %8 = icmp eq %struct.k_thread.203* %7, null, !dbg !12086
  br i1 %8, label %12, label %9, !dbg !12087

9:                                                ; preds = %2
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12088
  %11 = icmp eq %struct.k_spinlock.13* %10, null, !dbg !12089
  br i1 %11, label %12, label %13, !dbg !12090

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !12091
  br label %17, !dbg !12091

13:                                               ; preds = %9
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12093
  %15 = bitcast %struct.k_spinlock.13* %14 to i8*, !dbg !12094
  %16 = bitcast %struct.k_spinlock.13* %6 to i8*, !dbg !12094
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %15, i8* align 1 %16, i32 0, i1 false), !dbg !12094
  store i32 0, i32* %3, align 4, !dbg !12095
  br label %17, !dbg !12095

17:                                               ; preds = %13, %12
  %18 = load i32, i32* %3, align 4, !dbg !12096
  ret i32 %18, !dbg !12096
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock.13* noundef %0) #1 !dbg !12097 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !12100, metadata !DIExpression()), !dbg !12101
  %5 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12102
  %6 = icmp eq %struct.k_spinlock.13* %5, null, !dbg !12104
  br i1 %6, label %7, label %8, !dbg !12105

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !12106
  br label %12, !dbg !12106

8:                                                ; preds = %1
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12108
  %10 = bitcast %struct.k_spinlock.13* %9 to i8*, !dbg !12109
  %11 = bitcast %struct.k_spinlock.13* %4 to i8*, !dbg !12109
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %11, i32 0, i1 false), !dbg !12109
  store i32 0, i32* %2, align 4, !dbg !12110
  br label %12, !dbg !12110

12:                                               ; preds = %8, %7
  %13 = load i32, i32* %2, align 4, !dbg !12111
  ret i32 %13, !dbg !12111
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pm_save_idle_exit() #1 !dbg !12112 {
  call void @sys_clock_idle_exit() #10, !dbg !12114
  ret void, !dbg !12115
}

; Function Attrs: noinline nounwind optnone
define dso_local void @idle(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !12116 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12117, metadata !DIExpression()), !dbg !12118
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12119, metadata !DIExpression()), !dbg !12120
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12121, metadata !DIExpression()), !dbg !12122
  %8 = load i8*, i8** %5, align 4, !dbg !12123
  %9 = load i8*, i8** %6, align 4, !dbg !12124
  %10 = load i8*, i8** %7, align 4, !dbg !12125
  br label %11, !dbg !12126

11:                                               ; preds = %3, %11
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12127, metadata !DIExpression()) #9, !dbg !12129
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12132, !srcloc !12133
  store i32 %12, i32* %4, align 4, !dbg !12132
  %13 = load i32, i32* %4, align 4, !dbg !12134
  call void @k_cpu_idle() #10, !dbg !12135
  br label %11, !dbg !12126, !llvm.loop !12136
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_idle() #1 !dbg !12138 {
  call void @arch_cpu_idle() #10, !dbg !12139
  ret void, !dbg !12140
}

declare dso_local void @arch_cpu_idle() #0

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !12141 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12144, metadata !DIExpression()), !dbg !12145
  store %struct.k_thread.203* %1, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12146, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12148, metadata !DIExpression()), !dbg !12149
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12150
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !12151
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 4, !dbg !12152
  %11 = bitcast %union.anon.2.7* %10 to %struct.device_state.72*, !dbg !12152
  %12 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %11, i32 0, i32 0, !dbg !12152
  %13 = load i8, i8* %12, align 2, !dbg !12152
  %14 = sext i8 %13 to i32, !dbg !12150
  store i32 %14, i32* %6, align 4, !dbg !12149
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12153, metadata !DIExpression()), !dbg !12154
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12155
  %16 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %15, i32 0, i32 0, !dbg !12156
  %17 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %16, i32 0, i32 4, !dbg !12157
  %18 = bitcast %union.anon.2.7* %17 to %struct.device_state.72*, !dbg !12157
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !12157
  %20 = load i8, i8* %19, align 2, !dbg !12157
  %21 = sext i8 %20 to i32, !dbg !12155
  store i32 %21, i32* %7, align 4, !dbg !12154
  %22 = load i32, i32* %6, align 4, !dbg !12158
  %23 = load i32, i32* %7, align 4, !dbg !12160
  %24 = icmp ne i32 %22, %23, !dbg !12161
  br i1 %24, label %25, label %29, !dbg !12162

25:                                               ; preds = %2
  %26 = load i32, i32* %7, align 4, !dbg !12163
  %27 = load i32, i32* %6, align 4, !dbg !12165
  %28 = sub nsw i32 %26, %27, !dbg !12166
  store i32 %28, i32* %3, align 4, !dbg !12167
  br label %30, !dbg !12167

29:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !12168
  br label %30, !dbg !12168

30:                                               ; preds = %29, %25
  %31 = load i32, i32* %3, align 4, !dbg !12169
  ret i32 %31, !dbg !12169
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reset_time_slice(%struct.k_thread.203* noundef %0) #1 !dbg !12170 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12173, metadata !DIExpression()), !dbg !12174
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12175
  %4 = call i32 @slice_time(%struct.k_thread.203* noundef %3) #10, !dbg !12177
  %5 = icmp ne i32 %4, 0, !dbg !12178
  br i1 %5, label %6, label %13, !dbg !12179

6:                                                ; preds = %1
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12180
  %8 = call i32 @slice_time(%struct.k_thread.203* noundef %7) #10, !dbg !12182
  %9 = call i32 @sys_clock_elapsed() #10, !dbg !12183
  %10 = add i32 %8, %9, !dbg !12184
  store i32 %10, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12185
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12186
  %12 = call i32 @slice_time(%struct.k_thread.203* noundef %11) #10, !dbg !12187
  call void @z_set_timeout_expiry(i32 noundef %12, i1 noundef zeroext false) #10, !dbg !12188
  br label %13, !dbg !12189

13:                                               ; preds = %6, %1
  ret void, !dbg !12190
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_time(%struct.k_thread.203* noundef %0) #1 !dbg !12191 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12196, metadata !DIExpression()), !dbg !12197
  %4 = load i32, i32* @slice_ticks, align 4, !dbg !12198
  store i32 %4, i32* %3, align 4, !dbg !12197
  %5 = load i32, i32* %3, align 4, !dbg !12199
  ret i32 %5, !dbg !12200
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) #1 !dbg !12201 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12204, metadata !DIExpression()), !dbg !12205
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12206, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12208, metadata !DIExpression()), !dbg !12214
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !12214
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !12214
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12215, metadata !DIExpression()), !dbg !12214
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12216, metadata !DIExpression()) #9, !dbg !12221
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !12223
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12224, metadata !DIExpression()) #9, !dbg !12225
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12226, metadata !DIExpression()) #9, !dbg !12228
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12230, !srcloc !12231
  store i32 %15, i32* %3, align 4, !dbg !12230
  %16 = load i32, i32* %3, align 4, !dbg !12232
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12233
  store i32 %16, i32* %17, align 4, !dbg !12234
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12235
  %19 = load i32, i32* %18, align 4, !dbg !12235
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12214
  store i32 %19, i32* %20, align 4, !dbg !12214
  br label %21, !dbg !12214

21:                                               ; preds = %55, %2
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !12236
  %23 = load i32, i32* %22, align 4, !dbg !12236
  %24 = icmp ne i32 %23, 0, !dbg !12236
  %25 = xor i1 %24, true, !dbg !12236
  br i1 %25, label %26, label %57, !dbg !12214

26:                                               ; preds = %21
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12238
  %27 = load i32, i32* %9, align 4, !dbg !12240
  %28 = call i32 @k_ms_to_ticks_ceil32(i32 noundef %27) #10, !dbg !12241
  store i32 %28, i32* @slice_ticks, align 4, !dbg !12242
  %29 = load i32, i32* %9, align 4, !dbg !12243
  %30 = icmp sgt i32 %29, 0, !dbg !12245
  br i1 %30, label %31, label %39, !dbg !12246

31:                                               ; preds = %26
  %32 = load i32, i32* @slice_ticks, align 4, !dbg !12247
  %33 = icmp sgt i32 2, %32, !dbg !12247
  br i1 %33, label %34, label %35, !dbg !12247

34:                                               ; preds = %31
  br label %37, !dbg !12247

35:                                               ; preds = %31
  %36 = load i32, i32* @slice_ticks, align 4, !dbg !12247
  br label %37, !dbg !12247

37:                                               ; preds = %35, %34
  %38 = phi i32 [ 2, %34 ], [ %36, %35 ], !dbg !12247
  store i32 %38, i32* @slice_ticks, align 4, !dbg !12249
  br label %39, !dbg !12250

39:                                               ; preds = %37, %26
  %40 = load i32, i32* %10, align 4, !dbg !12251
  store i32 %40, i32* @slice_max_prio, align 4, !dbg !12252
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12253
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %41) #10, !dbg !12254
  br label %42, !dbg !12255

42:                                               ; preds = %39
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12236
  %44 = bitcast i32* %43 to [1 x i32]*, !dbg !12236
  %45 = load [1 x i32], [1 x i32]* %44, align 4, !dbg !12236
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %47 = bitcast i32* %46 to [1 x i32]*
  store [1 x i32] %45, [1 x i32]* %47, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12256, metadata !DIExpression()) #9, !dbg !12260
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12262, metadata !DIExpression()) #9, !dbg !12263
  %48 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !12264
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !12265
  %50 = load i32, i32* %49, align 4, !dbg !12265
  store i32 %50, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12266, metadata !DIExpression()) #9, !dbg !12268
  %51 = load i32, i32* %4, align 4, !dbg !12270
  %52 = icmp ne i32 %51, 0, !dbg !12272
  br i1 %52, label %53, label %54, !dbg !12273

53:                                               ; preds = %42
  br label %55, !dbg !12274

54:                                               ; preds = %42
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12276, !srcloc !12277
  br label %55, !dbg !12278

55:                                               ; preds = %53, %54
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !12236
  store i32 1, i32* %56, align 4, !dbg !12236
  br label %21, !dbg !12236, !llvm.loop !12279

57:                                               ; preds = %21
  ret void, !dbg !12281
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #1 !dbg !12282 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12285, metadata !DIExpression()), !dbg !12286
  %15 = load i32, i32* %14, align 4, !dbg !12287
  %16 = zext i32 %15 to i64, !dbg !12287
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12288, metadata !DIExpression()), !dbg !12290
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12292, metadata !DIExpression()), !dbg !12293
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12294, metadata !DIExpression()), !dbg !12295
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12296, metadata !DIExpression()), !dbg !12297
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12298, metadata !DIExpression()), !dbg !12299
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12300, metadata !DIExpression()), !dbg !12301
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12302, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12304, metadata !DIExpression()), !dbg !12305
  %17 = load i8, i8* %6, align 1, !dbg !12306
  %18 = trunc i8 %17 to i1, !dbg !12306
  br i1 %18, label %19, label %28, !dbg !12307

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !12308
  %21 = load i32, i32* %4, align 4, !dbg !12309
  %22 = icmp ugt i32 %20, %21, !dbg !12310
  br i1 %22, label %23, label %28, !dbg !12311

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !12312
  %25 = load i32, i32* %4, align 4, !dbg !12313
  %26 = urem i32 %24, %25, !dbg !12314
  %27 = icmp eq i32 %26, 0, !dbg !12315
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !12316
  %30 = zext i1 %29 to i8, !dbg !12305
  store i8 %30, i8* %10, align 1, !dbg !12305
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12317, metadata !DIExpression()), !dbg !12318
  %31 = load i8, i8* %6, align 1, !dbg !12319
  %32 = trunc i8 %31 to i1, !dbg !12319
  br i1 %32, label %33, label %42, !dbg !12320

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !12321
  %35 = load i32, i32* %5, align 4, !dbg !12322
  %36 = icmp ugt i32 %34, %35, !dbg !12323
  br i1 %36, label %37, label %42, !dbg !12324

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !12325
  %39 = load i32, i32* %5, align 4, !dbg !12326
  %40 = urem i32 %38, %39, !dbg !12327
  %41 = icmp eq i32 %40, 0, !dbg !12328
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !12316
  %44 = zext i1 %43 to i8, !dbg !12318
  store i8 %44, i8* %11, align 1, !dbg !12318
  %45 = load i32, i32* %4, align 4, !dbg !12329
  %46 = load i32, i32* %5, align 4, !dbg !12331
  %47 = icmp eq i32 %45, %46, !dbg !12332
  br i1 %47, label %48, label %59, !dbg !12333

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !12334
  %50 = trunc i8 %49 to i1, !dbg !12334
  br i1 %50, label %51, label %55, !dbg !12334

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !12336
  %53 = trunc i64 %52 to i32, !dbg !12337
  %54 = zext i32 %53 to i64, !dbg !12338
  br label %57, !dbg !12334

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !12339
  br label %57, !dbg !12334

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !12334
  store i64 %58, i64* %2, align 8, !dbg !12340
  br label %196, !dbg !12340

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12341, metadata !DIExpression()), !dbg !12342
  store i64 0, i64* %12, align 8, !dbg !12342
  %60 = load i8, i8* %10, align 1, !dbg !12343
  %61 = trunc i8 %60 to i1, !dbg !12343
  br i1 %61, label %87, label %62, !dbg !12345

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12346, metadata !DIExpression()), !dbg !12348
  %63 = load i8, i8* %11, align 1, !dbg !12349
  %64 = trunc i8 %63 to i1, !dbg !12349
  br i1 %64, label %65, label %69, !dbg !12349

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !12350
  %67 = load i32, i32* %5, align 4, !dbg !12351
  %68 = udiv i32 %66, %67, !dbg !12352
  br label %71, !dbg !12349

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !12353
  br label %71, !dbg !12349

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !12349
  store i32 %72, i32* %13, align 4, !dbg !12348
  %73 = load i8, i8* %8, align 1, !dbg !12354
  %74 = trunc i8 %73 to i1, !dbg !12354
  br i1 %74, label %75, label %79, !dbg !12356

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !12357
  %77 = sub i32 %76, 1, !dbg !12359
  %78 = zext i32 %77 to i64, !dbg !12357
  store i64 %78, i64* %12, align 8, !dbg !12360
  br label %79, !dbg !12361

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !12362
  %81 = trunc i8 %80 to i1, !dbg !12362
  br i1 %81, label %82, label %86, !dbg !12364

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !12365
  %84 = udiv i32 %83, 2, !dbg !12367
  %85 = zext i32 %84 to i64, !dbg !12365
  store i64 %85, i64* %12, align 8, !dbg !12368
  br label %86, !dbg !12369

86:                                               ; preds = %82, %79
  br label %87, !dbg !12370

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !12371
  %89 = trunc i8 %88 to i1, !dbg !12371
  br i1 %89, label %90, label %115, !dbg !12373

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !12374
  %92 = load i64, i64* %3, align 8, !dbg !12376
  %93 = add i64 %92, %91, !dbg !12376
  store i64 %93, i64* %3, align 8, !dbg !12376
  %94 = load i8, i8* %7, align 1, !dbg !12377
  %95 = trunc i8 %94 to i1, !dbg !12377
  br i1 %95, label %96, label %107, !dbg !12379

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !12380
  %98 = icmp ult i64 %97, 4294967296, !dbg !12381
  br i1 %98, label %99, label %107, !dbg !12382

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !12383
  %101 = trunc i64 %100 to i32, !dbg !12385
  %102 = load i32, i32* %4, align 4, !dbg !12386
  %103 = load i32, i32* %5, align 4, !dbg !12387
  %104 = udiv i32 %102, %103, !dbg !12388
  %105 = udiv i32 %101, %104, !dbg !12389
  %106 = zext i32 %105 to i64, !dbg !12390
  store i64 %106, i64* %2, align 8, !dbg !12391
  br label %196, !dbg !12391

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !12392
  %109 = load i32, i32* %4, align 4, !dbg !12394
  %110 = zext i32 %109 to i64, !dbg !12395
  %111 = load i32, i32* %5, align 4, !dbg !12396
  %112 = zext i32 %111 to i64, !dbg !12396
  %113 = udiv i64 %110, %112, !dbg !12397
  %114 = udiv i64 %108, %113, !dbg !12398
  store i64 %114, i64* %2, align 8, !dbg !12399
  br label %196, !dbg !12399

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !12400
  %117 = trunc i8 %116 to i1, !dbg !12400
  br i1 %117, label %118, label %137, !dbg !12402

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !12403
  %120 = trunc i8 %119 to i1, !dbg !12403
  br i1 %120, label %121, label %129, !dbg !12406

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !12407
  %123 = trunc i64 %122 to i32, !dbg !12409
  %124 = load i32, i32* %5, align 4, !dbg !12410
  %125 = load i32, i32* %4, align 4, !dbg !12411
  %126 = udiv i32 %124, %125, !dbg !12412
  %127 = mul i32 %123, %126, !dbg !12413
  %128 = zext i32 %127 to i64, !dbg !12414
  store i64 %128, i64* %2, align 8, !dbg !12415
  br label %196, !dbg !12415

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !12416
  %131 = load i32, i32* %5, align 4, !dbg !12418
  %132 = zext i32 %131 to i64, !dbg !12419
  %133 = load i32, i32* %4, align 4, !dbg !12420
  %134 = zext i32 %133 to i64, !dbg !12420
  %135 = udiv i64 %132, %134, !dbg !12421
  %136 = mul i64 %130, %135, !dbg !12422
  store i64 %136, i64* %2, align 8, !dbg !12423
  br label %196, !dbg !12423

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !12424
  %139 = trunc i8 %138 to i1, !dbg !12424
  br i1 %139, label %140, label %152, !dbg !12427

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !12428
  %142 = load i32, i32* %5, align 4, !dbg !12430
  %143 = zext i32 %142 to i64, !dbg !12430
  %144 = mul i64 %141, %143, !dbg !12431
  %145 = load i64, i64* %12, align 8, !dbg !12432
  %146 = add i64 %144, %145, !dbg !12433
  %147 = load i32, i32* %4, align 4, !dbg !12434
  %148 = zext i32 %147 to i64, !dbg !12434
  %149 = udiv i64 %146, %148, !dbg !12435
  %150 = trunc i64 %149 to i32, !dbg !12436
  %151 = zext i32 %150 to i64, !dbg !12436
  store i64 %151, i64* %2, align 8, !dbg !12437
  br label %196, !dbg !12437

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !12438
  %154 = trunc i8 %153 to i1, !dbg !12438
  br i1 %154, label %155, label %175, !dbg !12440

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !12441
  %157 = zext i32 %156 to i64, !dbg !12441
  %158 = mul i64 31536000, %157, !dbg !12441
  %159 = add i64 %158, 4294967294, !dbg !12441
  %160 = udiv i64 %159, 4294967295, !dbg !12441
  %161 = load i32, i32* %5, align 4, !dbg !12441
  %162 = zext i32 %161 to i64, !dbg !12441
  %163 = mul i64 %160, %162, !dbg !12441
  %164 = icmp ule i64 %163, 4294967295, !dbg !12441
  br i1 %164, label %165, label %175, !dbg !12442

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !12443
  %167 = load i32, i32* %5, align 4, !dbg !12445
  %168 = zext i32 %167 to i64, !dbg !12445
  %169 = mul i64 %166, %168, !dbg !12446
  %170 = load i64, i64* %12, align 8, !dbg !12447
  %171 = add i64 %169, %170, !dbg !12448
  %172 = load i32, i32* %4, align 4, !dbg !12449
  %173 = zext i32 %172 to i64, !dbg !12449
  %174 = udiv i64 %171, %173, !dbg !12450
  store i64 %174, i64* %2, align 8, !dbg !12451
  br label %196, !dbg !12451

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !12452
  %177 = load i32, i32* %4, align 4, !dbg !12454
  %178 = zext i32 %177 to i64, !dbg !12454
  %179 = udiv i64 %176, %178, !dbg !12455
  %180 = load i32, i32* %5, align 4, !dbg !12456
  %181 = zext i32 %180 to i64, !dbg !12456
  %182 = mul i64 %179, %181, !dbg !12457
  %183 = load i64, i64* %3, align 8, !dbg !12458
  %184 = load i32, i32* %4, align 4, !dbg !12459
  %185 = zext i32 %184 to i64, !dbg !12459
  %186 = urem i64 %183, %185, !dbg !12460
  %187 = load i32, i32* %5, align 4, !dbg !12461
  %188 = zext i32 %187 to i64, !dbg !12461
  %189 = mul i64 %186, %188, !dbg !12462
  %190 = load i64, i64* %12, align 8, !dbg !12463
  %191 = add i64 %189, %190, !dbg !12464
  %192 = load i32, i32* %4, align 4, !dbg !12465
  %193 = zext i32 %192 to i64, !dbg !12465
  %194 = udiv i64 %191, %193, !dbg !12466
  %195 = add i64 %182, %194, !dbg !12467
  store i64 %195, i64* %2, align 8, !dbg !12468
  br label %196, !dbg !12468

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !12469
  %198 = trunc i64 %197 to i32, !dbg !12470
  ret i32 %198, !dbg !12471
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_time_slice(i32 noundef %0) #1 !dbg !12472 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12475, metadata !DIExpression()), !dbg !12476
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12216, metadata !DIExpression()) #9, !dbg !12477
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !12479
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12224, metadata !DIExpression()) #9, !dbg !12480
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !12481
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12483, !srcloc !12231
  store i32 %15, i32* %2, align 4, !dbg !12483
  %16 = load i32, i32* %2, align 4, !dbg !12484
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !12485
  store i32 %16, i32* %17, align 4, !dbg !12486
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !12487
  %19 = load i32, i32* %18, align 4, !dbg !12487
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12488
  store i32 %19, i32* %20, align 4, !dbg !12488
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !12489
  %22 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12491
  %23 = icmp eq %struct.k_thread.203* %21, %22, !dbg !12492
  br i1 %23, label %24, label %39, !dbg !12493

24:                                               ; preds = %1
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12494
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %25) #10, !dbg !12496
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12497
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !12497
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !12497
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12256, metadata !DIExpression()) #9, !dbg !12498
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12262, metadata !DIExpression()) #9, !dbg !12500
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !12501
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !12502
  %33 = load i32, i32* %32, align 4, !dbg !12502
  store i32 %33, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12266, metadata !DIExpression()) #9, !dbg !12503
  %34 = load i32, i32* %4, align 4, !dbg !12505
  %35 = icmp ne i32 %34, 0, !dbg !12506
  br i1 %35, label %36, label %37, !dbg !12507

36:                                               ; preds = %24
  br label %38, !dbg !12508

37:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12509, !srcloc !12277
  br label %38, !dbg !12510

38:                                               ; preds = %36, %37
  br label %78, !dbg !12511

39:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !12512
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12513
  %41 = call i32 @slice_time(%struct.k_thread.203* noundef %40) #10, !dbg !12515
  %42 = icmp ne i32 %41, 0, !dbg !12515
  br i1 %42, label %43, label %63, !dbg !12516

43:                                               ; preds = %39
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12517
  %45 = call zeroext i1 @sliceable(%struct.k_thread.203* noundef %44) #10, !dbg !12518
  br i1 %45, label %46, label %63, !dbg !12519

46:                                               ; preds = %43
  %47 = load i32, i32* %11, align 4, !dbg !12520
  %48 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12523
  %49 = icmp sge i32 %47, %48, !dbg !12524
  br i1 %49, label %50, label %58, !dbg !12525

50:                                               ; preds = %46
  %51 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12526
  %52 = bitcast i32* %51 to [1 x i32]*, !dbg !12526
  %53 = load [1 x i32], [1 x i32]* %52, align 4, !dbg !12526
  %54 = call i32 @slice_expired_locked([1 x i32] %53) #10, !dbg !12526
  %55 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !12526
  store i32 %54, i32* %55, align 4, !dbg !12526
  %56 = bitcast %union.anon.68* %12 to i8*, !dbg !12526
  %57 = bitcast %union.anon.68* %13 to i8*, !dbg !12526
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 4, i1 false), !dbg !12526
  br label %62, !dbg !12528

58:                                               ; preds = %46
  %59 = load i32, i32* %11, align 4, !dbg !12529
  %60 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12531
  %61 = sub nsw i32 %60, %59, !dbg !12531
  store i32 %61, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12531
  br label %62

62:                                               ; preds = %58, %50
  br label %64, !dbg !12532

63:                                               ; preds = %43, %39
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12533
  br label %64

64:                                               ; preds = %63, %62
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12535
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !12535
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !12535
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12256, metadata !DIExpression()) #9, !dbg !12536
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12262, metadata !DIExpression()) #9, !dbg !12538
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !12539
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12540
  %72 = load i32, i32* %71, align 4, !dbg !12540
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !12541
  %73 = load i32, i32* %3, align 4, !dbg !12543
  %74 = icmp ne i32 %73, 0, !dbg !12544
  br i1 %74, label %75, label %76, !dbg !12545

75:                                               ; preds = %64
  br label %77, !dbg !12546

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12547, !srcloc !12277
  br label %77, !dbg !12548

77:                                               ; preds = %75, %76
  br label %78, !dbg !12549

78:                                               ; preds = %77, %38
  ret void, !dbg !12549
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sliceable(%struct.k_thread.203* noundef %0) #1 !dbg !12550 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i8* %3, metadata !12555, metadata !DIExpression()), !dbg !12556
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12557
  %5 = call i32 @is_preempt(%struct.k_thread.203* noundef %4) #10, !dbg !12558
  %6 = icmp ne i32 %5, 0, !dbg !12558
  br i1 %6, label %7, label %24, !dbg !12559

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12560
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !12561
  br i1 %9, label %24, label %10, !dbg !12562

10:                                               ; preds = %7
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12563
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !12564
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 4, !dbg !12565
  %14 = bitcast %union.anon.2.7* %13 to %struct.device_state.72*, !dbg !12565
  %15 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %14, i32 0, i32 0, !dbg !12565
  %16 = load i8, i8* %15, align 2, !dbg !12565
  %17 = sext i8 %16 to i32, !dbg !12563
  %18 = load i32, i32* @slice_max_prio, align 4, !dbg !12566
  %19 = call zeroext i1 @z_is_prio_higher(i32 noundef %17, i32 noundef %18) #10, !dbg !12567
  br i1 %19, label %24, label %20, !dbg !12568

20:                                               ; preds = %10
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12569
  %22 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %21) #10, !dbg !12570
  %23 = xor i1 %22, true, !dbg !12571
  br label %24

24:                                               ; preds = %20, %10, %7, %1
  %25 = phi i1 [ false, %10 ], [ false, %7 ], [ false, %1 ], [ %23, %20 ], !dbg !12572
  %26 = zext i1 %25 to i8, !dbg !12556
  store i8 %26, i8* %3, align 1, !dbg !12556
  %27 = load i8, i8* %3, align 1, !dbg !12573
  %28 = trunc i8 %27 to i1, !dbg !12573
  ret i1 %28, !dbg !12574
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_expired_locked([1 x i32] %0) #1 !dbg !12575 {
  %2 = alloca %union.anon.68, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %6 = bitcast i32* %5 to [1 x i32]*
  store [1 x i32] %0, [1 x i32]* %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12578, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12580, metadata !DIExpression()), !dbg !12581
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12582
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !12581
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12583
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !12585
  br i1 %9, label %12, label %10, !dbg !12586

10:                                               ; preds = %1
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12587
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %11) #10, !dbg !12589
  br label %12, !dbg !12590

12:                                               ; preds = %10, %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12591
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %13) #10, !dbg !12592
  %14 = bitcast %union.anon.68* %2 to i8*, !dbg !12593
  %15 = bitcast %union.anon.68* %3 to i8*, !dbg !12593
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %14, i8* align 4 %15, i32 4, i1 false), !dbg !12593
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %2, i32 0, i32 0, !dbg !12594
  %17 = load i32, i32* %16, align 4, !dbg !12594
  ret i32 %17, !dbg !12594
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %0) #1 !dbg !12595 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12596, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.declare(metadata i8* %3, metadata !12598, metadata !DIExpression()), !dbg !12599
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12600
  %5 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %4, i32 0, i32 0, !dbg !12601
  %6 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %5, i32 0, i32 3, !dbg !12602
  %7 = load i8, i8* %6, align 1, !dbg !12602
  store i8 %7, i8* %3, align 1, !dbg !12599
  %8 = load i8, i8* %3, align 1, !dbg !12603
  %9 = zext i8 %8 to i32, !dbg !12603
  %10 = and i32 %9, 31, !dbg !12604
  %11 = icmp ne i32 %10, 0, !dbg !12605
  ret i1 %11, !dbg !12606
}

; Function Attrs: noinline nounwind optnone
define internal void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !12607 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_thread.203*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !12608, metadata !DIExpression()), !dbg !12609
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12610
  %13 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %12) #10, !dbg !12612
  br i1 %13, label %14, label %31, !dbg !12613

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12614
  store %struct.k_thread.203* %15, %struct.k_thread.203** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %10, metadata !12616, metadata !DIExpression()) #9, !dbg !12618
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12620
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !12621
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !12622
  %19 = load i8, i8* %18, align 1, !dbg !12623
  %20 = zext i8 %19 to i32, !dbg !12623
  %21 = and i32 %20, -129, !dbg !12623
  %22 = trunc i32 %21 to i8, !dbg !12623
  store i8 %22, i8* %18, align 1, !dbg !12623
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12624
  %24 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %23) #13, !dbg !12626
  br i1 %24, label %25, label %30, !dbg !12627

25:                                               ; preds = %14
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12628
  store %struct.k_thread.203* %26, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !12630, metadata !DIExpression()) #9, !dbg !12632
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !12634
  store %struct.k_thread.203* %27, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12635, metadata !DIExpression()), !dbg !12639
  %28 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !12641
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !12642
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %28, %struct.k_thread.203* noundef %29) #13, !dbg !12643
  br label %30, !dbg !12644

30:                                               ; preds = %14, %25
  br label %31, !dbg !12645

31:                                               ; preds = %30, %1
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12646
  store %struct.k_thread.203* %32, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12647, metadata !DIExpression()) #9, !dbg !12649
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12651
  %34 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %33, i32 0, i32 0, !dbg !12652
  %35 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %34, i32 0, i32 3, !dbg !12653
  %36 = load i8, i8* %35, align 1, !dbg !12654
  %37 = zext i8 %36 to i32, !dbg !12654
  %38 = or i32 %37, 128, !dbg !12654
  %39 = trunc i32 %38 to i8, !dbg !12654
  store i8 %39, i8* %35, align 1, !dbg !12654
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12655
  %41 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %40) #13, !dbg !12657
  br i1 %41, label %42, label %107, !dbg !12658

42:                                               ; preds = %31
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12659
  store %struct.k_thread.203* %43, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12661, metadata !DIExpression()) #9, !dbg !12663
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !12665
  store %struct.k_thread.203* %44, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12635, metadata !DIExpression()) #9, !dbg !12666
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !12668
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12669, metadata !DIExpression()) #9, !dbg !12674
  store %struct.k_thread.203* %45, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12676, metadata !DIExpression()) #9, !dbg !12677
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12678, metadata !DIExpression()) #9, !dbg !12679
  %46 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12680
  %47 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %46) #13, !dbg !12680
  %48 = icmp ne %struct._dnode.191* %47, null, !dbg !12680
  br i1 %48, label %49, label %54, !dbg !12680

49:                                               ; preds = %42
  %50 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12680
  %51 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %50) #13, !dbg !12680
  %52 = bitcast %struct._dnode.191* %51 to i8*, !dbg !12680
  %53 = bitcast i8* %52 to %struct.k_thread.203*, !dbg !12680
  br label %55, !dbg !12680

54:                                               ; preds = %42
  br label %55, !dbg !12680

55:                                               ; preds = %54, %49
  %56 = phi %struct.k_thread.203* [ %53, %49 ], [ null, %54 ], !dbg !12680
  store %struct.k_thread.203* %56, %struct.k_thread.203** %4, align 4, !dbg !12680
  br label %57, !dbg !12680

57:                                               ; preds = %98, %55
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12682
  %59 = icmp ne %struct.k_thread.203* %58, null, !dbg !12682
  br i1 %59, label %60, label %100, !dbg !12680

60:                                               ; preds = %57
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12684
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12687
  %63 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %61, %struct.k_thread.203* noundef %62) #13, !dbg !12688
  %64 = icmp sgt i32 %63, 0, !dbg !12689
  br i1 %64, label %65, label %74, !dbg !12690

65:                                               ; preds = %60
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12691
  %67 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %66, i32 0, i32 0, !dbg !12693
  %68 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %67, i32 0, i32 0, !dbg !12694
  %69 = bitcast %union.anon.192* %68 to %struct._dnode.191*, !dbg !12694
  %70 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12695
  %71 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %70, i32 0, i32 0, !dbg !12696
  %72 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %71, i32 0, i32 0, !dbg !12697
  %73 = bitcast %union.anon.192* %72 to %struct._dnode.191*, !dbg !12697
  call void @sys_dlist_insert(%struct._dnode.191* noundef %69, %struct._dnode.191* noundef %73) #13, !dbg !12698
  br label %106, !dbg !12699

74:                                               ; preds = %60
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12682
  %76 = icmp ne %struct.k_thread.203* %75, null, !dbg !12682
  br i1 %76, label %77, label %97, !dbg !12682

77:                                               ; preds = %74
  %78 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12682
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12682
  %80 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %79, i32 0, i32 0, !dbg !12682
  %81 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %80, i32 0, i32 0, !dbg !12682
  %82 = bitcast %union.anon.192* %81 to %struct._dnode.191*, !dbg !12682
  %83 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %78, %struct._dnode.191* noundef %82) #13, !dbg !12682
  %84 = icmp ne %struct._dnode.191* %83, null, !dbg !12682
  br i1 %84, label %85, label %94, !dbg !12682

85:                                               ; preds = %77
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12682
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12682
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !12682
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !12682
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !12682
  %91 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !12682
  %92 = bitcast %struct._dnode.191* %91 to i8*, !dbg !12682
  %93 = bitcast i8* %92 to %struct.k_thread.203*, !dbg !12682
  br label %95, !dbg !12682

94:                                               ; preds = %77
  br label %95, !dbg !12682

95:                                               ; preds = %94, %85
  %96 = phi %struct.k_thread.203* [ %93, %85 ], [ null, %94 ], !dbg !12682
  br label %98, !dbg !12682

97:                                               ; preds = %74
  br label %98, !dbg !12682

98:                                               ; preds = %97, %95
  %99 = phi %struct.k_thread.203* [ %96, %95 ], [ null, %97 ], !dbg !12682
  store %struct.k_thread.203* %99, %struct.k_thread.203** %4, align 4, !dbg !12682
  br label %57, !dbg !12682, !llvm.loop !12700

100:                                              ; preds = %57
  %101 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12702
  %102 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12703
  %103 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %102, i32 0, i32 0, !dbg !12704
  %104 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %103, i32 0, i32 0, !dbg !12705
  %105 = bitcast %union.anon.192* %104 to %struct._dnode.191*, !dbg !12705
  call void @sys_dlist_append(%struct._dnode.191* noundef %101, %struct._dnode.191* noundef %105) #13, !dbg !12706
  br label %106, !dbg !12707

106:                                              ; preds = %65, %100
  br label %107, !dbg !12708

107:                                              ; preds = %31, %106
  %108 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12709
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12710
  %110 = icmp eq %struct.k_thread.203* %108, %109, !dbg !12711
  %111 = zext i1 %110 to i32, !dbg !12711
  call void @update_cache(i32 noundef %111) #10, !dbg !12712
  ret void, !dbg !12713
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %0) #1 !dbg !12714 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12715, metadata !DIExpression()), !dbg !12716
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12717
  %4 = call zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %3, i32 noundef 128) #10, !dbg !12718
  ret i1 %4, !dbg !12719
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %0) #1 !dbg !12720 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12721, metadata !DIExpression()), !dbg !12722
  ret i1 true, !dbg !12723
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_dumb_remove(%struct._dnode.191* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !12724 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12725, metadata !DIExpression()), !dbg !12726
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12727, metadata !DIExpression()), !dbg !12728
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12729
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !12730
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 0, !dbg !12731
  %8 = bitcast %union.anon.192* %7 to %struct._dnode.191*, !dbg !12731
  call void @sys_dlist_remove(%struct._dnode.191* noundef %8) #10, !dbg !12732
  ret void, !dbg !12733
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %0) #1 !dbg !12734 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12737, metadata !DIExpression()), !dbg !12738
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12739
  %4 = call zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %3) #10, !dbg !12740
  br i1 %4, label %5, label %6, !dbg !12740

5:                                                ; preds = %1
  br label %11, !dbg !12740

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12741
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !12742
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !12742
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !12742
  br label %11, !dbg !12740

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !12740
  ret %struct._dnode.191* %12, !dbg !12743
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12744 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12747, metadata !DIExpression()), !dbg !12748
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12749, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !12751, metadata !DIExpression()), !dbg !12753
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12754
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12755
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12755
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12755
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !12753
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12756
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12757
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !12758
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !12758
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !12759
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12760
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12761
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !12762
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !12762
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !12763
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12764
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12765
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !12766
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !12766
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !12767
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12768
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12769
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !12770
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !12770
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12773 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12776, metadata !DIExpression()), !dbg !12777
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12778, metadata !DIExpression()), !dbg !12779
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12780
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !12781
  br i1 %6, label %7, label %11, !dbg !12782

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12783
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12784
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !12785
  br label %12, !dbg !12782

11:                                               ; preds = %2
  br label %12, !dbg !12782

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !12782
  ret %struct._dnode.191* %13, !dbg !12786
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12787 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12790, metadata !DIExpression()), !dbg !12791
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12792, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !12794, metadata !DIExpression()), !dbg !12795
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12796
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12797
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12797
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12797
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !12795
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12798
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12799
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !12800
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !12800
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !12801
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12802
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12803
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !12804
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !12804
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !12805
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12806
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12807
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !12808
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !12808
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !12809
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12810
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12811
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !12812
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !12812
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !12813
  ret void, !dbg !12814
}

; Function Attrs: noinline nounwind optnone
define internal void @update_cache(i32 noundef %0) #1 !dbg !12815 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12816, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12818, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12820, metadata !DIExpression()) #9, !dbg !12824
  %8 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !12826
  %9 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %8) #13, !dbg !12829
  store %struct.k_thread.203* %9, %struct.k_thread.203** %5, align 4, !dbg !12824
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12830
  %11 = icmp ne %struct.k_thread.203* %10, null, !dbg !12831
  br i1 %11, label %12, label %14, !dbg !12832

12:                                               ; preds = %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12833
  br label %16, !dbg !12832

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12834
  br label %16, !dbg !12832

16:                                               ; preds = %12, %14
  %17 = phi %struct.k_thread.203* [ %13, %12 ], [ %15, %14 ], !dbg !12832
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4, !dbg !12819
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12835
  %19 = load i32, i32* %6, align 4, !dbg !12837
  store %struct.k_thread.203* %18, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12838, metadata !DIExpression()) #9, !dbg !12842
  store i32 %19, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12844, metadata !DIExpression()) #9, !dbg !12845
  %20 = load i32, i32* %4, align 4, !dbg !12846
  %21 = icmp ne i32 %20, 0, !dbg !12848
  br i1 %21, label %22, label %23, !dbg !12849

22:                                               ; preds = %16
  store i1 true, i1* %2, align 1, !dbg !12850
  br label %41, !dbg !12850

23:                                               ; preds = %16
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12852
  %25 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %24) #13, !dbg !12854
  br i1 %25, label %26, label %27, !dbg !12855

26:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !12856
  br label %41, !dbg !12856

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12858
  %29 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %28) #13, !dbg !12860
  br i1 %29, label %30, label %31, !dbg !12861

30:                                               ; preds = %27
  store i1 true, i1* %2, align 1, !dbg !12862
  br label %41, !dbg !12862

31:                                               ; preds = %27
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12864
  %33 = call i32 @is_preempt(%struct.k_thread.203* noundef %32) #13, !dbg !12866
  %34 = icmp ne i32 %33, 0, !dbg !12866
  br i1 %34, label %39, label %35, !dbg !12867

35:                                               ; preds = %31
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12868
  %37 = call i32 @is_metairq(%struct.k_thread.203* noundef %36) #13, !dbg !12869
  %38 = icmp ne i32 %37, 0, !dbg !12869
  br i1 %38, label %39, label %40, !dbg !12870

39:                                               ; preds = %35, %31
  store i1 true, i1* %2, align 1, !dbg !12871
  br label %41, !dbg !12871

40:                                               ; preds = %35
  store i1 false, i1* %2, align 1, !dbg !12873
  br label %41, !dbg !12873

41:                                               ; preds = %22, %26, %30, %39, %40
  %42 = load i1, i1* %2, align 1, !dbg !12874
  br i1 %42, label %43, label %52, !dbg !12875

43:                                               ; preds = %41
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12876
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12879
  %46 = icmp ne %struct.k_thread.203* %44, %45, !dbg !12880
  br i1 %46, label %47, label %49, !dbg !12881

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12882
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %48) #10, !dbg !12884
  br label %49, !dbg !12885

49:                                               ; preds = %47, %43
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12886
  call void @update_metairq_preempt(%struct.k_thread.203* noundef %50) #10, !dbg !12887
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12888
  store %struct.k_thread.203* %51, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12889
  br label %54, !dbg !12890

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12891
  store %struct.k_thread.203* %53, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12893
  br label %54

54:                                               ; preds = %52, %49
  ret void, !dbg !12894
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %0) #1 !dbg !12895 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12898, metadata !DIExpression()), !dbg !12899
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12900, metadata !DIExpression()), !dbg !12901
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !12901
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12902, metadata !DIExpression()), !dbg !12903
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12904
  %6 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %5) #10, !dbg !12905
  store %struct._dnode.191* %6, %struct._dnode.191** %4, align 4, !dbg !12903
  %7 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12906
  %8 = icmp ne %struct._dnode.191* %7, null, !dbg !12908
  br i1 %8, label %9, label %14, !dbg !12909

9:                                                ; preds = %1
  %10 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12910
  %11 = bitcast %struct._dnode.191* %10 to i8*, !dbg !12910
  %12 = getelementptr inbounds i8, i8* %11, i32 0, !dbg !12910
  %13 = bitcast i8* %12 to %struct.k_thread.203*, !dbg !12910
  store %struct.k_thread.203* %13, %struct.k_thread.203** %3, align 4, !dbg !12912
  br label %14, !dbg !12913

14:                                               ; preds = %9, %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12914
  ret %struct.k_thread.203* %15, !dbg !12915
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %0) #1 !dbg !12916 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12917, metadata !DIExpression()), !dbg !12918
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12919
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !12920
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !12921
  %6 = call zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %5) #10, !dbg !12922
  %7 = xor i1 %6, true, !dbg !12923
  ret i1 %7, !dbg !12924
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !12925 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12926, metadata !DIExpression()), !dbg !12927
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12928
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !12929
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !12930
  %6 = bitcast %union.anon.2.7* %5 to i16*, !dbg !12930
  %7 = load i16, i16* %6, align 2, !dbg !12930
  %8 = zext i16 %7 to i32, !dbg !12928
  %9 = icmp ule i32 %8, 127, !dbg !12931
  %10 = zext i1 %9 to i32, !dbg !12931
  ret i32 %10, !dbg !12932
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_metairq(%struct.k_thread.203* noundef %0) #1 !dbg !12933 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12934, metadata !DIExpression()), !dbg !12935
  ret i32 0, !dbg !12936
}

; Function Attrs: noinline nounwind optnone
define internal void @update_metairq_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !12937 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12938, metadata !DIExpression()), !dbg !12939
  ret void, !dbg !12940
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %0) #1 !dbg !12941 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !12946, metadata !DIExpression()), !dbg !12947
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !12948
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !12949
  %5 = call zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %4) #10, !dbg !12950
  %6 = xor i1 %5, true, !dbg !12951
  ret i1 %6, !dbg !12952
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %0) #1 !dbg !12953 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12958, metadata !DIExpression()), !dbg !12959
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12960
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !12961
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !12961
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12961
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !12962
  ret i1 %7, !dbg !12963
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12964 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12965, metadata !DIExpression()), !dbg !12966
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12967, metadata !DIExpression()), !dbg !12968
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12969
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12970
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12971
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12971
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12971
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !12972
  br i1 %10, label %11, label %12, !dbg !12973

11:                                               ; preds = %2
  br label %17, !dbg !12973

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12974
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !12975
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !12975
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !12975
  br label %17, !dbg !12973

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !12973
  ret %struct._dnode.191* %18, !dbg !12976
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %0) #1 !dbg !12977 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12980, metadata !DIExpression()), !dbg !12981
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12982
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !12983
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !12983
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12983
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12984
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !12985
  ret i1 %8, !dbg !12986
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove(%struct._dnode.191* noundef %0) #1 !dbg !12987 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12992, metadata !DIExpression()), !dbg !12993
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12994
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !12995
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !12995
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !12995
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !12993
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12996, metadata !DIExpression()), !dbg !12997
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12998
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !12999
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !12999
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !12999
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !12997
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13000
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13001
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !13002
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !13002
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !13003
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13004
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13005
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !13006
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !13006
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !13007
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13008
  call void @sys_dnode_init.62(%struct._dnode.191* noundef %21) #10, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.62(%struct._dnode.191* noundef %0) #1 !dbg !13011 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13012, metadata !DIExpression()), !dbg !13013
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13014
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13015
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13015
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !13016
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13017
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13018
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13018
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !13021 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13024, metadata !DIExpression()), !dbg !13025
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13026, metadata !DIExpression()), !dbg !13027
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13028
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !13029
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 3, !dbg !13030
  %8 = load i8, i8* %7, align 1, !dbg !13030
  %9 = zext i8 %8 to i32, !dbg !13028
  %10 = load i32, i32* %4, align 4, !dbg !13031
  %11 = and i32 %9, %10, !dbg !13032
  %12 = icmp ne i32 %11, 0, !dbg !13033
  ret i1 %12, !dbg !13034
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #1 !dbg !13035 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13038, metadata !DIExpression()), !dbg !13039
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13040, metadata !DIExpression()), !dbg !13041
  %5 = load i32, i32* %3, align 4, !dbg !13042
  %6 = load i32, i32* %4, align 4, !dbg !13043
  %7 = call zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %5, i32 noundef %6) #10, !dbg !13044
  ret i1 %7, !dbg !13045
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %0) #1 !dbg !13046 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13047, metadata !DIExpression()), !dbg !13048
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13049
  %4 = icmp eq %struct.k_thread.203* %3, getelementptr inbounds ([1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 0), !dbg !13050
  ret i1 %4, !dbg !13051
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #1 !dbg !13052 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13053, metadata !DIExpression()), !dbg !13054
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13055, metadata !DIExpression()), !dbg !13056
  %5 = load i32, i32* %3, align 4, !dbg !13057
  %6 = load i32, i32* %4, align 4, !dbg !13058
  %7 = icmp slt i32 %5, %6, !dbg !13059
  ret i1 %7, !dbg !13060
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13061 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13062, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13064, metadata !DIExpression()), !dbg !13066
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13066
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13066
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13067, metadata !DIExpression()), !dbg !13066
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13068
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13070
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13071
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13072
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13074, !srcloc !12231
  store i32 %13, i32* %2, align 4, !dbg !13074
  %14 = load i32, i32* %2, align 4, !dbg !13075
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13076
  store i32 %14, i32* %15, align 4, !dbg !13077
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13078
  %17 = load i32, i32* %16, align 4, !dbg !13078
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13066
  store i32 %17, i32* %18, align 4, !dbg !13066
  br label %19, !dbg !13066

19:                                               ; preds = %43, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13079
  %21 = load i32, i32* %20, align 4, !dbg !13079
  %22 = icmp ne i32 %21, 0, !dbg !13079
  %23 = xor i1 %22, true, !dbg !13079
  br i1 %23, label %24, label %45, !dbg !13066

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13081
  %26 = call zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %25) #10, !dbg !13084
  br i1 %26, label %29, label %27, !dbg !13085

27:                                               ; preds = %24
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13086
  call void @ready_thread(%struct.k_thread.203* noundef %28) #10, !dbg !13088
  br label %29, !dbg !13089

29:                                               ; preds = %27, %24
  br label %30, !dbg !13090

30:                                               ; preds = %29
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13079
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !13079
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !13079
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13091
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13093
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13094
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13095
  %38 = load i32, i32* %37, align 4, !dbg !13095
  store i32 %38, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13096
  %39 = load i32, i32* %3, align 4, !dbg !13098
  %40 = icmp ne i32 %39, 0, !dbg !13099
  br i1 %40, label %41, label %42, !dbg !13100

41:                                               ; preds = %30
  br label %43, !dbg !13101

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13102, !srcloc !12277
  br label %43, !dbg !13103

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13079
  store i32 1, i32* %44, align 4, !dbg !13079
  br label %19, !dbg !13079, !llvm.loop !13104

45:                                               ; preds = %19
  ret void, !dbg !13106
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %0) #1 !dbg !13107 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13108, metadata !DIExpression()), !dbg !13109
  ret i1 false, !dbg !13110
}

; Function Attrs: noinline nounwind optnone
define internal void @ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13111 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13112, metadata !DIExpression()), !dbg !13113
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13114
  %10 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %9) #10, !dbg !13116
  br i1 %10, label %93, label %11, !dbg !13117

11:                                               ; preds = %1
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13118
  %13 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %12) #10, !dbg !13119
  br i1 %13, label %14, label %93, !dbg !13120

14:                                               ; preds = %11
  br label %15, !dbg !13121

15:                                               ; preds = %14
  br label %16, !dbg !13123

16:                                               ; preds = %15
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13125
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12647, metadata !DIExpression()) #9, !dbg !13126
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13128
  %19 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %18, i32 0, i32 0, !dbg !13129
  %20 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %19, i32 0, i32 3, !dbg !13130
  %21 = load i8, i8* %20, align 1, !dbg !13131
  %22 = zext i8 %21 to i32, !dbg !13131
  %23 = or i32 %22, 128, !dbg !13131
  %24 = trunc i32 %23 to i8, !dbg !13131
  store i8 %24, i8* %20, align 1, !dbg !13131
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13132
  %26 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %25) #13, !dbg !13133
  br i1 %26, label %27, label %92, !dbg !13134

27:                                               ; preds = %16
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13135
  store %struct.k_thread.203* %28, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12661, metadata !DIExpression()) #9, !dbg !13136
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13138
  store %struct.k_thread.203* %29, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12635, metadata !DIExpression()) #9, !dbg !13139
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13141
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12669, metadata !DIExpression()) #9, !dbg !13142
  store %struct.k_thread.203* %30, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12676, metadata !DIExpression()) #9, !dbg !13144
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12678, metadata !DIExpression()) #9, !dbg !13145
  %31 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13146
  %32 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %31) #13, !dbg !13146
  %33 = icmp ne %struct._dnode.191* %32, null, !dbg !13146
  br i1 %33, label %34, label %39, !dbg !13146

34:                                               ; preds = %27
  %35 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13146
  %36 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %35) #13, !dbg !13146
  %37 = bitcast %struct._dnode.191* %36 to i8*, !dbg !13146
  %38 = bitcast i8* %37 to %struct.k_thread.203*, !dbg !13146
  br label %40, !dbg !13146

39:                                               ; preds = %27
  br label %40, !dbg !13146

40:                                               ; preds = %39, %34
  %41 = phi %struct.k_thread.203* [ %38, %34 ], [ null, %39 ], !dbg !13146
  store %struct.k_thread.203* %41, %struct.k_thread.203** %4, align 4, !dbg !13146
  br label %42, !dbg !13146

42:                                               ; preds = %83, %40
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13147
  %44 = icmp ne %struct.k_thread.203* %43, null, !dbg !13147
  br i1 %44, label %45, label %85, !dbg !13146

45:                                               ; preds = %42
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13148
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13149
  %48 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %46, %struct.k_thread.203* noundef %47) #13, !dbg !13150
  %49 = icmp sgt i32 %48, 0, !dbg !13151
  br i1 %49, label %50, label %59, !dbg !13152

50:                                               ; preds = %45
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13153
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 0, !dbg !13154
  %53 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %52, i32 0, i32 0, !dbg !13155
  %54 = bitcast %union.anon.192* %53 to %struct._dnode.191*, !dbg !13155
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13156
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !13157
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !13158
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !13158
  call void @sys_dlist_insert(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !13159
  br label %91, !dbg !13160

59:                                               ; preds = %45
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13147
  %61 = icmp ne %struct.k_thread.203* %60, null, !dbg !13147
  br i1 %61, label %62, label %82, !dbg !13147

62:                                               ; preds = %59
  %63 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13147
  %64 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13147
  %65 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %64, i32 0, i32 0, !dbg !13147
  %66 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %65, i32 0, i32 0, !dbg !13147
  %67 = bitcast %union.anon.192* %66 to %struct._dnode.191*, !dbg !13147
  %68 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %63, %struct._dnode.191* noundef %67) #13, !dbg !13147
  %69 = icmp ne %struct._dnode.191* %68, null, !dbg !13147
  br i1 %69, label %70, label %79, !dbg !13147

70:                                               ; preds = %62
  %71 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13147
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13147
  %73 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %72, i32 0, i32 0, !dbg !13147
  %74 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %73, i32 0, i32 0, !dbg !13147
  %75 = bitcast %union.anon.192* %74 to %struct._dnode.191*, !dbg !13147
  %76 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %71, %struct._dnode.191* noundef %75) #13, !dbg !13147
  %77 = bitcast %struct._dnode.191* %76 to i8*, !dbg !13147
  %78 = bitcast i8* %77 to %struct.k_thread.203*, !dbg !13147
  br label %80, !dbg !13147

79:                                               ; preds = %62
  br label %80, !dbg !13147

80:                                               ; preds = %79, %70
  %81 = phi %struct.k_thread.203* [ %78, %70 ], [ null, %79 ], !dbg !13147
  br label %83, !dbg !13147

82:                                               ; preds = %59
  br label %83, !dbg !13147

83:                                               ; preds = %82, %80
  %84 = phi %struct.k_thread.203* [ %81, %80 ], [ null, %82 ], !dbg !13147
  store %struct.k_thread.203* %84, %struct.k_thread.203** %4, align 4, !dbg !13147
  br label %42, !dbg !13147, !llvm.loop !13161

85:                                               ; preds = %42
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13163
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13164
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !13165
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !13166
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !13166
  call void @sys_dlist_append(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !13167
  br label %91, !dbg !13168

91:                                               ; preds = %50, %85
  br label %92, !dbg !13169

92:                                               ; preds = %16, %91
  call void @update_cache(i32 noundef 0) #10, !dbg !13170
  call void @flag_ipi() #10, !dbg !13171
  br label %93, !dbg !13172

93:                                               ; preds = %92, %11, %1
  ret void, !dbg !13173
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %0) #1 !dbg !13174 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13175, metadata !DIExpression()), !dbg !13176
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13177
  %4 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %3) #10, !dbg !13178
  %5 = zext i1 %4 to i32, !dbg !13179
  %6 = icmp ne i32 %5, 0, !dbg !13180
  br i1 %6, label %10, label %7, !dbg !13181

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13182
  %9 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %8) #10, !dbg !13183
  br label %10, !dbg !13181

10:                                               ; preds = %7, %1
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  %12 = xor i1 %11, true, !dbg !13184
  ret i1 %12, !dbg !13185
}

; Function Attrs: noinline nounwind optnone
define internal void @flag_ipi() #1 !dbg !13186 {
  ret void, !dbg !13187
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !13188 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13191, metadata !DIExpression()), !dbg !13193
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13193
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13193
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13194, metadata !DIExpression()), !dbg !13193
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13195
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13197
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13198
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13199
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13201, !srcloc !12231
  store i32 %13, i32* %2, align 4, !dbg !13201
  %14 = load i32, i32* %2, align 4, !dbg !13202
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13203
  store i32 %14, i32* %15, align 4, !dbg !13204
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13205
  %17 = load i32, i32* %16, align 4, !dbg !13205
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13193
  store i32 %17, i32* %18, align 4, !dbg !13193
  br label %19, !dbg !13193

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13206
  %21 = load i32, i32* %20, align 4, !dbg !13206
  %22 = icmp ne i32 %21, 0, !dbg !13206
  %23 = xor i1 %22, true, !dbg !13206
  br i1 %23, label %24, label %41, !dbg !13193

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13208
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %25) #10, !dbg !13210
  br label %26, !dbg !13211

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13206
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !13206
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !13206
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13212
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13214
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13215
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13216
  %34 = load i32, i32* %33, align 4, !dbg !13216
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13217
  %35 = load i32, i32* %3, align 4, !dbg !13219
  %36 = icmp ne i32 %35, 0, !dbg !13220
  br i1 %36, label %37, label %38, !dbg !13221

37:                                               ; preds = %26
  br label %39, !dbg !13222

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13223, !srcloc !12277
  br label %39, !dbg !13224

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13206
  store i32 1, i32* %40, align 4, !dbg !13206
  br label %19, !dbg !13206, !llvm.loop !13225

41:                                               ; preds = %19
  ret void, !dbg !13227
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_start(%struct.k_thread.203* noundef %0) #1 !dbg !13228 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13229, metadata !DIExpression()), !dbg !13230
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13231, metadata !DIExpression()), !dbg !13232
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13233
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13235
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13236
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13237
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13239, !srcloc !12231
  store i32 %11, i32* %2, align 4, !dbg !13239
  %12 = load i32, i32* %2, align 4, !dbg !13240
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13241
  store i32 %12, i32* %13, align 4, !dbg !13242
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13243
  %15 = load i32, i32* %14, align 4, !dbg !13243
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13244
  store i32 %15, i32* %16, align 4, !dbg !13244
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13245
  %18 = call zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %17) #10, !dbg !13247
  br i1 %18, label %19, label %33, !dbg !13248

19:                                               ; preds = %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13249
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !13249
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !13249
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13251
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13253
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13254
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13255
  %27 = load i32, i32* %26, align 4, !dbg !13255
  store i32 %27, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13256
  %28 = load i32, i32* %3, align 4, !dbg !13258
  %29 = icmp ne i32 %28, 0, !dbg !13259
  br i1 %29, label %30, label %31, !dbg !13260

30:                                               ; preds = %19
  br label %32, !dbg !13261

31:                                               ; preds = %19
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13262, !srcloc !12277
  br label %32, !dbg !13263

32:                                               ; preds = %30, %31
  br label %39, !dbg !13264

33:                                               ; preds = %1
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13265
  call void @z_mark_thread_as_started.67(%struct.k_thread.203* noundef %34) #10, !dbg !13266
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13267
  call void @ready_thread(%struct.k_thread.203* noundef %35) #10, !dbg !13268
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13269
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !13269
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !13269
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %38) #10, !dbg !13269
  br label %39, !dbg !13270

39:                                               ; preds = %33, %32
  ret void, !dbg !13270
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %0) #1 !dbg !13271 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13272, metadata !DIExpression()), !dbg !13273
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13274
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13275
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13276
  %6 = load i8, i8* %5, align 1, !dbg !13276
  %7 = zext i8 %6 to i32, !dbg !13274
  %8 = and i32 %7, 4, !dbg !13277
  %9 = icmp eq i32 %8, 0, !dbg !13278
  ret i1 %9, !dbg !13279
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started.67(%struct.k_thread.203* noundef %0) #1 !dbg !13280 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13281, metadata !DIExpression()), !dbg !13282
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13283
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13284
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13285
  %6 = load i8, i8* %5, align 1, !dbg !13286
  %7 = zext i8 %6 to i32, !dbg !13286
  %8 = and i32 %7, -5, !dbg !13286
  %9 = trunc i32 %8 to i8, !dbg !13286
  store i8 %9, i8* %5, align 1, !dbg !13286
  ret void, !dbg !13287
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule(%struct.k_spinlock.13* noundef %0, [1 x i32] %1) #1 !dbg !13288 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %12 = bitcast i32* %11 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %12, align 4
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13289, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13291, metadata !DIExpression()), !dbg !13292
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13293
  %14 = load i32, i32* %13, align 4, !dbg !13293
  %15 = call zeroext i1 @resched(i32 noundef %14) #10, !dbg !13295
  br i1 %15, label %16, label %30, !dbg !13296

16:                                               ; preds = %2
  %17 = call zeroext i1 @need_swap() #10, !dbg !13297
  br i1 %17, label %18, label %30, !dbg !13298

18:                                               ; preds = %16
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13299
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13301
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !13301
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !13301
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* %19, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13302, metadata !DIExpression()) #9, !dbg !13306
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13308, metadata !DIExpression()) #9, !dbg !13309
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13310
  store %struct.k_spinlock.13* %25, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13311, metadata !DIExpression()) #9, !dbg !13315
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !13317
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13318
  %28 = load i32, i32* %27, align 4, !dbg !13318
  %29 = call i32 @z_swap_irqlock(i32 noundef %28) #13, !dbg !13319
  br label %45, !dbg !13320

30:                                               ; preds = %16, %2
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13321
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13323
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !13323
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !13323
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* %31, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12256, metadata !DIExpression()) #9, !dbg !13324
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12262, metadata !DIExpression()) #9, !dbg !13326
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13327
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13328
  %39 = load i32, i32* %38, align 4, !dbg !13328
  store i32 %39, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13329
  %40 = load i32, i32* %3, align 4, !dbg !13331
  %41 = icmp ne i32 %40, 0, !dbg !13332
  br i1 %41, label %42, label %43, !dbg !13333

42:                                               ; preds = %30
  br label %44, !dbg !13334

43:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13335, !srcloc !12277
  br label %44, !dbg !13336

44:                                               ; preds = %42, %43
  call void @signal_pending_ipi() #10, !dbg !13337
  br label %45

45:                                               ; preds = %44, %18
  ret void, !dbg !13338
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @resched(i32 noundef %0) #1 !dbg !13339 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13342, metadata !DIExpression()), !dbg !13343
  %5 = load i32, i32* %4, align 4, !dbg !13344
  store i32 %5, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13345, metadata !DIExpression()), !dbg !13349
  %6 = load i32, i32* %3, align 4, !dbg !13351
  %7 = icmp eq i32 %6, 0, !dbg !13352
  br i1 %7, label %8, label %15, !dbg !13353

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13354, metadata !DIExpression()) #9, !dbg !13356
  %9 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !13360, !srcloc !13361
  store i32 %9, i32* %2, align 4, !dbg !13360
  %10 = load i32, i32* %2, align 4, !dbg !13362
  %11 = icmp ne i32 %10, 0, !dbg !13363
  %12 = zext i1 %11 to i64, !dbg !13363
  %13 = select i1 %11, i32 1, i32 0, !dbg !13363
  %14 = xor i1 %11, true, !dbg !13364
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i1 [ false, %1 ], [ %14, %8 ], !dbg !13365
  ret i1 %16, !dbg !13366
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @need_swap() #1 !dbg !13367 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !13368, metadata !DIExpression()), !dbg !13369
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13370
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !13371
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !13372
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13373
  %5 = icmp ne %struct.k_thread.203* %3, %4, !dbg !13374
  ret i1 %5, !dbg !13375
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_swap_irqlock(i32 noundef %0) #1 !dbg !13376 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13377, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13379, metadata !DIExpression()), !dbg !13380
  %4 = load i32, i32* %2, align 4, !dbg !13381
  %5 = call i32 @arch_swap(i32 noundef %4) #10, !dbg !13382
  store i32 %5, i32* %3, align 4, !dbg !13383
  %6 = load i32, i32* %3, align 4, !dbg !13384
  ret i32 %6, !dbg !13385
}

; Function Attrs: noinline nounwind optnone
define internal void @signal_pending_ipi() #1 !dbg !13386 {
  ret void, !dbg !13387
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !13388 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !13389, metadata !DIExpression()), !dbg !13390
  br label %14, !dbg !13391

14:                                               ; preds = %1
  br label %15, !dbg !13392

15:                                               ; preds = %14
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13394
  %17 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %16) #10, !dbg !13395
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13396, metadata !DIExpression()), !dbg !13398
  %18 = bitcast %union.anon.68* %12 to i8*, !dbg !13398
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !13398
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13399, metadata !DIExpression()), !dbg !13398
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12216, metadata !DIExpression()) #9, !dbg !13400
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13402
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12224, metadata !DIExpression()) #9, !dbg !13403
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12226, metadata !DIExpression()) #9, !dbg !13404
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13406, !srcloc !12231
  store i32 %20, i32* %4, align 4, !dbg !13406
  %21 = load i32, i32* %4, align 4, !dbg !13407
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13408
  store i32 %21, i32* %22, align 4, !dbg !13409
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13410
  %24 = load i32, i32* %23, align 4, !dbg !13410
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13398
  store i32 %24, i32* %25, align 4, !dbg !13398
  br label %26, !dbg !13398

26:                                               ; preds = %70, %15
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13411
  %28 = load i32, i32* %27, align 4, !dbg !13411
  %29 = icmp ne i32 %28, 0, !dbg !13411
  %30 = xor i1 %29, true, !dbg !13411
  br i1 %30, label %31, label %72, !dbg !13398

31:                                               ; preds = %26
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13413
  %33 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %32) #10, !dbg !13416
  br i1 %33, label %34, label %51, !dbg !13417

34:                                               ; preds = %31
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13418
  store %struct.k_thread.203* %35, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12616, metadata !DIExpression()) #9, !dbg !13420
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13422
  %37 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %36, i32 0, i32 0, !dbg !13423
  %38 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %37, i32 0, i32 3, !dbg !13424
  %39 = load i8, i8* %38, align 1, !dbg !13425
  %40 = zext i8 %39 to i32, !dbg !13425
  %41 = and i32 %40, -129, !dbg !13425
  %42 = trunc i32 %41 to i8, !dbg !13425
  store i8 %42, i8* %38, align 1, !dbg !13425
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13426
  %44 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %43) #13, !dbg !13427
  br i1 %44, label %45, label %50, !dbg !13428

45:                                               ; preds = %34
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13429
  store %struct.k_thread.203* %46, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12630, metadata !DIExpression()) #9, !dbg !13430
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13432
  store %struct.k_thread.203* %47, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12635, metadata !DIExpression()), !dbg !13433
  %48 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13435
  %49 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13436
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %48, %struct.k_thread.203* noundef %49) #13, !dbg !13437
  br label %50, !dbg !13438

50:                                               ; preds = %34, %45
  br label %51, !dbg !13439

51:                                               ; preds = %50, %31
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13440
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !13441
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13442
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13443
  %55 = icmp eq %struct.k_thread.203* %53, %54, !dbg !13444
  %56 = zext i1 %55 to i32, !dbg !13444
  call void @update_cache(i32 noundef %56) #10, !dbg !13445
  br label %57, !dbg !13446

57:                                               ; preds = %51
  %58 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13411
  %59 = bitcast i32* %58 to [1 x i32]*, !dbg !13411
  %60 = load [1 x i32], [1 x i32]* %59, align 4, !dbg !13411
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %62 = bitcast i32* %61 to [1 x i32]*
  store [1 x i32] %60, [1 x i32]* %62, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12256, metadata !DIExpression()) #9, !dbg !13447
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12262, metadata !DIExpression()) #9, !dbg !13449
  %63 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13450
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13451
  %65 = load i32, i32* %64, align 4, !dbg !13451
  store i32 %65, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12266, metadata !DIExpression()) #9, !dbg !13452
  %66 = load i32, i32* %5, align 4, !dbg !13454
  %67 = icmp ne i32 %66, 0, !dbg !13455
  br i1 %67, label %68, label %69, !dbg !13456

68:                                               ; preds = %57
  br label %70, !dbg !13457

69:                                               ; preds = %57
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13458, !srcloc !12277
  br label %70, !dbg !13459

70:                                               ; preds = %68, %69
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13411
  store i32 1, i32* %71, align 4, !dbg !13411
  br label %26, !dbg !13411, !llvm.loop !13460

72:                                               ; preds = %26
  %73 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13462
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13464
  %75 = icmp eq %struct.k_thread.203* %73, %74, !dbg !13465
  br i1 %75, label %76, label %77, !dbg !13466

76:                                               ; preds = %72
  call void @z_reschedule_unlocked() #10, !dbg !13467
  br label %77, !dbg !13469

77:                                               ; preds = %76, %72
  br label %78, !dbg !13470

78:                                               ; preds = %77
  br label %79, !dbg !13471

79:                                               ; preds = %78
  ret void, !dbg !13473
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !13474 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13475, metadata !DIExpression()), !dbg !13476
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13477
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13478
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !13479
  %6 = call i32 @z_abort_timeout(%struct._timeout.195* noundef %5) #10, !dbg !13480
  ret i32 %6, !dbg !13481
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13482 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13483, metadata !DIExpression()), !dbg !13484
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13485
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13486
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13487
  %6 = load i8, i8* %5, align 1, !dbg !13488
  %7 = zext i8 %6 to i32, !dbg !13488
  %8 = or i32 %7, 16, !dbg !13488
  %9 = trunc i32 %8 to i8, !dbg !13488
  store i8 %9, i8* %5, align 1, !dbg !13488
  br label %10, !dbg !13489

10:                                               ; preds = %1
  br label %11, !dbg !13490

11:                                               ; preds = %10
  ret void, !dbg !13492
}

; Function Attrs: noinline nounwind optnone
define internal void @z_reschedule_unlocked() #1 !dbg !13493 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12226, metadata !DIExpression()) #9, !dbg !13494
  %2 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13496, !srcloc !12231
  store i32 %2, i32* %1, align 4, !dbg !13496
  %3 = load i32, i32* %1, align 4, !dbg !13497
  call void @z_reschedule_irqlock(i32 noundef %3) #10, !dbg !13498
  ret void, !dbg !13499
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule_irqlock(i32 noundef %0) #1 !dbg !13500 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13501, metadata !DIExpression()), !dbg !13502
  %4 = load i32, i32* %3, align 4, !dbg !13503
  %5 = call zeroext i1 @resched(i32 noundef %4) #10, !dbg !13505
  br i1 %5, label %6, label %9, !dbg !13506

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !13507
  %8 = call i32 @z_swap_irqlock(i32 noundef %7) #10, !dbg !13509
  br label %16, !dbg !13510

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !13511
  store i32 %10, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12266, metadata !DIExpression()) #9, !dbg !13513
  %11 = load i32, i32* %2, align 4, !dbg !13515
  %12 = icmp ne i32 %11, 0, !dbg !13516
  br i1 %12, label %13, label %14, !dbg !13517

13:                                               ; preds = %9
  br label %15, !dbg !13518

14:                                               ; preds = %9
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13519, !srcloc !12277
  br label %15, !dbg !13520

15:                                               ; preds = %13, %14
  call void @signal_pending_ipi() #10, !dbg !13521
  br label %16

16:                                               ; preds = %15, %6
  ret void, !dbg !13522
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_resume(%struct.k_thread.203* noundef %0) #1 !dbg !13523 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13524, metadata !DIExpression()), !dbg !13525
  br label %10, !dbg !13526

10:                                               ; preds = %1
  br label %11, !dbg !13527

11:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13529, metadata !DIExpression()), !dbg !13530
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13531
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13533
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13534
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13535
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13537, !srcloc !12231
  store i32 %13, i32* %2, align 4, !dbg !13537
  %14 = load i32, i32* %2, align 4, !dbg !13538
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13539
  store i32 %14, i32* %15, align 4, !dbg !13540
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13541
  %17 = load i32, i32* %16, align 4, !dbg !13541
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13542
  store i32 %17, i32* %18, align 4, !dbg !13542
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13543
  %20 = call zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %19) #10, !dbg !13545
  br i1 %20, label %35, label %21, !dbg !13546

21:                                               ; preds = %11
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13547
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !13547
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !13547
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13549
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13551
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13552
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13553
  %29 = load i32, i32* %28, align 4, !dbg !13553
  store i32 %29, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13554
  %30 = load i32, i32* %3, align 4, !dbg !13556
  %31 = icmp ne i32 %30, 0, !dbg !13557
  br i1 %31, label %32, label %33, !dbg !13558

32:                                               ; preds = %21
  br label %34, !dbg !13559

33:                                               ; preds = %21
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13560, !srcloc !12277
  br label %34, !dbg !13561

34:                                               ; preds = %32, %33
  br label %42, !dbg !13562

35:                                               ; preds = %11
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13563
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %36) #10, !dbg !13564
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13565
  call void @ready_thread(%struct.k_thread.203* noundef %37) #10, !dbg !13566
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13567
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !13567
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !13567
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %40) #10, !dbg !13567
  br label %41, !dbg !13568

41:                                               ; preds = %35
  br label %42, !dbg !13569

42:                                               ; preds = %34, %41
  ret void, !dbg !13571
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13572 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13573, metadata !DIExpression()), !dbg !13574
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13575
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13576
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13577
  %6 = load i8, i8* %5, align 1, !dbg !13577
  %7 = zext i8 %6 to i32, !dbg !13575
  %8 = and i32 %7, 16, !dbg !13578
  %9 = icmp ne i32 %8, 0, !dbg !13579
  ret i1 %9, !dbg !13580
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13581 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13582, metadata !DIExpression()), !dbg !13583
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13584
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13585
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13586
  %6 = load i8, i8* %5, align 1, !dbg !13587
  %7 = zext i8 %6 to i32, !dbg !13587
  %8 = and i32 %7, -17, !dbg !13587
  %9 = trunc i32 %8 to i8, !dbg !13587
  store i8 %9, i8* %5, align 1, !dbg !13587
  br label %10, !dbg !13588

10:                                               ; preds = %1
  br label %11, !dbg !13589

11:                                               ; preds = %10
  ret void, !dbg !13591
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pend_thread(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13592 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %16 = bitcast i64* %15 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %16, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !13599, metadata !DIExpression()), !dbg !13600
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !13601, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !13603, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13605, metadata !DIExpression()), !dbg !13607
  %17 = bitcast %union.anon.68* %13 to i8*, !dbg !13607
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !13607
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13608, metadata !DIExpression()), !dbg !13607
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12216, metadata !DIExpression()) #9, !dbg !13609
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !13611
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12224, metadata !DIExpression()) #9, !dbg !13612
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12226, metadata !DIExpression()) #9, !dbg !13613
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13615, !srcloc !12231
  store i32 %19, i32* %4, align 4, !dbg !13615
  %20 = load i32, i32* %4, align 4, !dbg !13616
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13617
  store i32 %20, i32* %21, align 4, !dbg !13618
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13619
  %23 = load i32, i32* %22, align 4, !dbg !13619
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13607
  store i32 %23, i32* %24, align 4, !dbg !13607
  br label %25, !dbg !13607

25:                                               ; preds = %49, %3
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13620
  %27 = load i32, i32* %26, align 4, !dbg !13620
  %28 = icmp ne i32 %27, 0, !dbg !13620
  %29 = xor i1 %28, true, !dbg !13620
  br i1 %29, label %30, label %51, !dbg !13607

30:                                               ; preds = %25
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13622
  %32 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !13624
  %33 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !13625
  %34 = bitcast i64* %33 to [1 x i64]*, !dbg !13625
  %35 = load [1 x i64], [1 x i64]* %34, align 8, !dbg !13625
  call void @pend_locked(%struct.k_thread.203* noundef %31, %union.anon.192* noundef %32, [1 x i64] %35) #10, !dbg !13625
  br label %36, !dbg !13626

36:                                               ; preds = %30
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13620
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !13620
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !13620
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12256, metadata !DIExpression()) #9, !dbg !13627
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12262, metadata !DIExpression()) #9, !dbg !13629
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13630
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13631
  %44 = load i32, i32* %43, align 4, !dbg !13631
  store i32 %44, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12266, metadata !DIExpression()) #9, !dbg !13632
  %45 = load i32, i32* %5, align 4, !dbg !13634
  %46 = icmp ne i32 %45, 0, !dbg !13635
  br i1 %46, label %47, label %48, !dbg !13636

47:                                               ; preds = %36
  br label %49, !dbg !13637

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13638, !srcloc !12277
  br label %49, !dbg !13639

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13620
  store i32 1, i32* %50, align 4, !dbg !13620
  br label %25, !dbg !13620, !llvm.loop !13640

51:                                               ; preds = %25
  ret void, !dbg !13642
}

; Function Attrs: noinline nounwind optnone
define internal void @pend_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13643 {
  %4 = alloca %union.argument_value, align 8
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %union.anon.192*, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13644, metadata !DIExpression()), !dbg !13645
  store %union.anon.192* %1, %union.anon.192** %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %6, metadata !13646, metadata !DIExpression()), !dbg !13647
  call void @llvm.dbg.declare(metadata %union.argument_value* %4, metadata !13648, metadata !DIExpression()), !dbg !13649
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13650
  %10 = load %union.anon.192*, %union.anon.192** %6, align 4, !dbg !13651
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %9, %union.anon.192* noundef %10) #10, !dbg !13652
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13653
  %12 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0, !dbg !13654
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !13654
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !13654
  call void @add_thread_timeout(%struct.k_thread.203* noundef %11, [1 x i64] %14) #10, !dbg !13654
  ret void, !dbg !13655
}

; Function Attrs: noinline nounwind optnone
define internal void @add_to_waitq_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1) #1 !dbg !13656 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.192*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13659, metadata !DIExpression()), !dbg !13660
  store %union.anon.192* %1, %union.anon.192** %7, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %7, metadata !13661, metadata !DIExpression()), !dbg !13662
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13663
  call void @unready_thread(%struct.k_thread.203* noundef %8) #10, !dbg !13664
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13665
  call void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %9) #10, !dbg !13666
  br label %10, !dbg !13667

10:                                               ; preds = %2
  br label %11, !dbg !13668

11:                                               ; preds = %10
  %12 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13670
  %13 = icmp ne %union.anon.192* %12, null, !dbg !13672
  br i1 %13, label %14, label %83, !dbg !13673

14:                                               ; preds = %11
  %15 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13674
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13676
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !13677
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 1, !dbg !13678
  store %union.anon.192* %15, %union.anon.192** %18, align 8, !dbg !13679
  %19 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13680
  %20 = getelementptr inbounds %union.anon.192, %union.anon.192* %19, i32 0, i32 0, !dbg !13681
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13682
  store %struct._dnode.191* %20, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12669, metadata !DIExpression()) #9, !dbg !13683
  store %struct.k_thread.203* %21, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12676, metadata !DIExpression()) #9, !dbg !13685
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12678, metadata !DIExpression()) #9, !dbg !13686
  %22 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13687
  %23 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %22) #13, !dbg !13687
  %24 = icmp ne %struct._dnode.191* %23, null, !dbg !13687
  br i1 %24, label %25, label %30, !dbg !13687

25:                                               ; preds = %14
  %26 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13687
  %27 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %26) #13, !dbg !13687
  %28 = bitcast %struct._dnode.191* %27 to i8*, !dbg !13687
  %29 = bitcast i8* %28 to %struct.k_thread.203*, !dbg !13687
  br label %31, !dbg !13687

30:                                               ; preds = %14
  br label %31, !dbg !13687

31:                                               ; preds = %30, %25
  %32 = phi %struct.k_thread.203* [ %29, %25 ], [ null, %30 ], !dbg !13687
  store %struct.k_thread.203* %32, %struct.k_thread.203** %5, align 4, !dbg !13687
  br label %33, !dbg !13687

33:                                               ; preds = %74, %31
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13688
  %35 = icmp ne %struct.k_thread.203* %34, null, !dbg !13688
  br i1 %35, label %36, label %76, !dbg !13687

36:                                               ; preds = %33
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13689
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13690
  %39 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %37, %struct.k_thread.203* noundef %38) #13, !dbg !13691
  %40 = icmp sgt i32 %39, 0, !dbg !13692
  br i1 %40, label %41, label %50, !dbg !13693

41:                                               ; preds = %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13694
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 0, !dbg !13695
  %44 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %43, i32 0, i32 0, !dbg !13696
  %45 = bitcast %union.anon.192* %44 to %struct._dnode.191*, !dbg !13696
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13697
  %47 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %46, i32 0, i32 0, !dbg !13698
  %48 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %47, i32 0, i32 0, !dbg !13699
  %49 = bitcast %union.anon.192* %48 to %struct._dnode.191*, !dbg !13699
  call void @sys_dlist_insert(%struct._dnode.191* noundef %45, %struct._dnode.191* noundef %49) #13, !dbg !13700
  br label %82, !dbg !13701

50:                                               ; preds = %36
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13688
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !13688
  br i1 %52, label %53, label %73, !dbg !13688

53:                                               ; preds = %50
  %54 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13688
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13688
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !13688
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !13688
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !13688
  %59 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !13688
  %60 = icmp ne %struct._dnode.191* %59, null, !dbg !13688
  br i1 %60, label %61, label %70, !dbg !13688

61:                                               ; preds = %53
  %62 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13688
  %63 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13688
  %64 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %63, i32 0, i32 0, !dbg !13688
  %65 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %64, i32 0, i32 0, !dbg !13688
  %66 = bitcast %union.anon.192* %65 to %struct._dnode.191*, !dbg !13688
  %67 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %62, %struct._dnode.191* noundef %66) #13, !dbg !13688
  %68 = bitcast %struct._dnode.191* %67 to i8*, !dbg !13688
  %69 = bitcast i8* %68 to %struct.k_thread.203*, !dbg !13688
  br label %71, !dbg !13688

70:                                               ; preds = %53
  br label %71, !dbg !13688

71:                                               ; preds = %70, %61
  %72 = phi %struct.k_thread.203* [ %69, %61 ], [ null, %70 ], !dbg !13688
  br label %74, !dbg !13688

73:                                               ; preds = %50
  br label %74, !dbg !13688

74:                                               ; preds = %73, %71
  %75 = phi %struct.k_thread.203* [ %72, %71 ], [ null, %73 ], !dbg !13688
  store %struct.k_thread.203* %75, %struct.k_thread.203** %5, align 4, !dbg !13688
  br label %33, !dbg !13688, !llvm.loop !13702

76:                                               ; preds = %33
  %77 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13704
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13705
  %79 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %78, i32 0, i32 0, !dbg !13706
  %80 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %79, i32 0, i32 0, !dbg !13707
  %81 = bitcast %union.anon.192* %80 to %struct._dnode.191*, !dbg !13707
  call void @sys_dlist_append(%struct._dnode.191* noundef %77, %struct._dnode.191* noundef %81) #13, !dbg !13708
  br label %82, !dbg !13709

82:                                               ; preds = %41, %76
  br label %83, !dbg !13710

83:                                               ; preds = %82, %11
  ret void, !dbg !13711
}

; Function Attrs: noinline nounwind optnone
define internal void @add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !13712 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13715, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !13717, metadata !DIExpression()), !dbg !13718
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13719
  %9 = load i64, i64* %8, align 8, !dbg !13719
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !13719
  store i64 -1, i64* %10, align 8, !dbg !13719
  %11 = icmp eq i64 %9, -1, !dbg !13719
  br i1 %11, label %17, label %12, !dbg !13721

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13722
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13724
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !13724
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !13724
  call void @z_add_thread_timeout.68(%struct.k_thread.203* noundef %13, [1 x i64] %16) #10, !dbg !13724
  br label %17, !dbg !13725

17:                                               ; preds = %12, %2
  ret void, !dbg !13726
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout.68(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !13727 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13728, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !13730, metadata !DIExpression()), !dbg !13731
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13732
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !13733
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !13734
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13735
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !13735
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !13735
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_timeout(%struct._timeout.195* noundef %0) #1 !dbg !13737 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca i8, align 1
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !13738, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !13740, metadata !DIExpression()), !dbg !13741
  %13 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !13742
  %14 = bitcast %struct._timeout.195* %13 to i8*, !dbg !13742
  %15 = getelementptr inbounds i8, i8* %14, i32 -24, !dbg !13742
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !13742
  store %struct.k_thread.203* %16, %struct.k_thread.203** %9, align 4, !dbg !13741
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13743, metadata !DIExpression()), !dbg !13745
  %17 = bitcast %union.anon.68* %10 to i8*, !dbg !13745
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !13745
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13746, metadata !DIExpression()), !dbg !13745
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13747
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13749
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13750
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13751
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13753, !srcloc !12231
  store i32 %19, i32* %2, align 4, !dbg !13753
  %20 = load i32, i32* %2, align 4, !dbg !13754
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13755
  store i32 %20, i32* %21, align 4, !dbg !13756
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13757
  %23 = load i32, i32* %22, align 4, !dbg !13757
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13745
  store i32 %23, i32* %24, align 4, !dbg !13745
  br label %25, !dbg !13745

25:                                               ; preds = %77, %1
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13758
  %27 = load i32, i32* %26, align 4, !dbg !13758
  %28 = icmp ne i32 %27, 0, !dbg !13758
  %29 = xor i1 %28, true, !dbg !13758
  br i1 %29, label %30, label %79, !dbg !13745

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i8* %12, metadata !13760, metadata !DIExpression()), !dbg !13762
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13763
  %32 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %31, i32 0, i32 0, !dbg !13764
  %33 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %32, i32 0, i32 3, !dbg !13765
  %34 = load i8, i8* %33, align 1, !dbg !13765
  %35 = zext i8 %34 to i32, !dbg !13763
  %36 = and i32 %35, 8, !dbg !13766
  %37 = icmp ne i32 %36, 0, !dbg !13766
  br i1 %37, label %46, label %38, !dbg !13767

38:                                               ; preds = %30
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13768
  %40 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %39, i32 0, i32 0, !dbg !13769
  %41 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %40, i32 0, i32 3, !dbg !13770
  %42 = load i8, i8* %41, align 1, !dbg !13770
  %43 = zext i8 %42 to i32, !dbg !13768
  %44 = and i32 %43, 32, !dbg !13771
  %45 = icmp ne i32 %44, 0, !dbg !13767
  br label %46, !dbg !13767

46:                                               ; preds = %38, %30
  %47 = phi i1 [ true, %30 ], [ %45, %38 ]
  %48 = zext i1 %47 to i8, !dbg !13762
  store i8 %48, i8* %12, align 1, !dbg !13762
  %49 = load i8, i8* %12, align 1, !dbg !13772
  %50 = trunc i8 %49 to i1, !dbg !13772
  br i1 %50, label %63, label %51, !dbg !13774

51:                                               ; preds = %46
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13775
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !13778
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 1, !dbg !13779
  %55 = load %union.anon.192*, %union.anon.192** %54, align 8, !dbg !13779
  %56 = icmp ne %union.anon.192* %55, null, !dbg !13780
  br i1 %56, label %57, label %59, !dbg !13781

57:                                               ; preds = %51
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13782
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %58) #10, !dbg !13784
  br label %59, !dbg !13785

59:                                               ; preds = %57, %51
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13786
  call void @z_mark_thread_as_started.67(%struct.k_thread.203* noundef %60) #10, !dbg !13787
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13788
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %61) #10, !dbg !13789
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13790
  call void @ready_thread(%struct.k_thread.203* noundef %62) #10, !dbg !13791
  br label %63, !dbg !13792

63:                                               ; preds = %59, %46
  br label %64, !dbg !13793

64:                                               ; preds = %63
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13758
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !13758
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !13758
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13794
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13796
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13797
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13798
  %72 = load i32, i32* %71, align 4, !dbg !13798
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13799
  %73 = load i32, i32* %3, align 4, !dbg !13801
  %74 = icmp ne i32 %73, 0, !dbg !13802
  br i1 %74, label %75, label %76, !dbg !13803

75:                                               ; preds = %64
  br label %77, !dbg !13804

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13805, !srcloc !12277
  br label %77, !dbg !13806

77:                                               ; preds = %75, %76
  %78 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13758
  store i32 1, i32* %78, align 4, !dbg !13758
  br label %25, !dbg !13758, !llvm.loop !13807

79:                                               ; preds = %25
  ret void, !dbg !13809
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !13810 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13811, metadata !DIExpression()), !dbg !13812
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13813
  %4 = call %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %3) #10, !dbg !13814
  %5 = getelementptr inbounds %union.anon.192, %union.anon.192* %4, i32 0, i32 0, !dbg !13815
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13816
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %5, %struct.k_thread.203* noundef %6) #10, !dbg !13817
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13818
  call void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %7) #10, !dbg !13819
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13820
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !13821
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !13822
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !13823
  ret void, !dbg !13824
}

; Function Attrs: noinline nounwind optnone
define internal %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13825 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13828, metadata !DIExpression()), !dbg !13829
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13830
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13831
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 1, !dbg !13832
  %6 = load %union.anon.192*, %union.anon.192** %5, align 8, !dbg !13832
  ret %union.anon.192* %6, !dbg !13833
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %0) #1 !dbg !13834 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13835, metadata !DIExpression()), !dbg !13836
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13837
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13838
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13839
  %6 = load i8, i8* %5, align 1, !dbg !13840
  %7 = zext i8 %6 to i32, !dbg !13840
  %8 = and i32 %7, -3, !dbg !13840
  %9 = trunc i32 %8 to i8, !dbg !13840
  store i8 %9, i8* %5, align 1, !dbg !13840
  ret void, !dbg !13841
}

; Function Attrs: noinline nounwind optnone
define internal void @unready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13842 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13843, metadata !DIExpression()), !dbg !13844
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13845
  %7 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %6) #10, !dbg !13847
  br i1 %7, label %8, label %25, !dbg !13848

8:                                                ; preds = %1
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13849
  store %struct.k_thread.203* %9, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12616, metadata !DIExpression()) #9, !dbg !13851
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13853
  %11 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %10, i32 0, i32 0, !dbg !13854
  %12 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %11, i32 0, i32 3, !dbg !13855
  %13 = load i8, i8* %12, align 1, !dbg !13856
  %14 = zext i8 %13 to i32, !dbg !13856
  %15 = and i32 %14, -129, !dbg !13856
  %16 = trunc i32 %15 to i8, !dbg !13856
  store i8 %16, i8* %12, align 1, !dbg !13856
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13857
  %18 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %17) #13, !dbg !13858
  br i1 %18, label %19, label %24, !dbg !13859

19:                                               ; preds = %8
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13860
  store %struct.k_thread.203* %20, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12630, metadata !DIExpression()) #9, !dbg !13861
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13863
  store %struct.k_thread.203* %21, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12635, metadata !DIExpression()), !dbg !13864
  %22 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13866
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13867
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %22, %struct.k_thread.203* noundef %23) #13, !dbg !13868
  br label %24, !dbg !13869

24:                                               ; preds = %8, %19
  br label %25, !dbg !13870

25:                                               ; preds = %24, %1
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13871
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13872
  %28 = icmp eq %struct.k_thread.203* %26, %27, !dbg !13873
  %29 = zext i1 %28 to i32, !dbg !13873
  call void @update_cache(i32 noundef %29) #10, !dbg !13874
  ret void, !dbg !13875
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %0) #1 !dbg !13876 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13877, metadata !DIExpression()), !dbg !13878
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13879
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13880
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13881
  %6 = load i8, i8* %5, align 1, !dbg !13882
  %7 = zext i8 %6 to i32, !dbg !13882
  %8 = or i32 %7, 2, !dbg !13882
  %9 = trunc i32 %8 to i8, !dbg !13882
  store i8 %9, i8* %5, align 1, !dbg !13882
  ret void, !dbg !13883
}

; Function Attrs: alwaysinline nounwind
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #8 !dbg !13884 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13885, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13887, metadata !DIExpression()), !dbg !13889
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13889
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13889
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13890, metadata !DIExpression()), !dbg !13889
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !13891
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13893
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !13894
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !13895
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13897, !srcloc !12231
  store i32 %13, i32* %2, align 4, !dbg !13897
  %14 = load i32, i32* %2, align 4, !dbg !13898
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13899
  store i32 %14, i32* %15, align 4, !dbg !13900
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13901
  %17 = load i32, i32* %16, align 4, !dbg !13901
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13889
  store i32 %17, i32* %18, align 4, !dbg !13889
  br label %19, !dbg !13889

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13902
  %21 = load i32, i32* %20, align 4, !dbg !13902
  %22 = icmp ne i32 %21, 0, !dbg !13902
  %23 = xor i1 %22, true, !dbg !13902
  br i1 %23, label %24, label %41, !dbg !13889

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13904
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %25) #10, !dbg !13906
  br label %26, !dbg !13907

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13902
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !13902
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !13902
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !13908
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !13910
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13911
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13912
  %34 = load i32, i32* %33, align 4, !dbg !13912
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !13913
  %35 = load i32, i32* %3, align 4, !dbg !13915
  %36 = icmp ne i32 %35, 0, !dbg !13916
  br i1 %36, label %37, label %38, !dbg !13917

37:                                               ; preds = %26
  br label %39, !dbg !13918

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13919, !srcloc !12277
  br label %39, !dbg !13920

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13902
  store i32 1, i32* %40, align 4, !dbg !13902
  br label %19, !dbg !13902, !llvm.loop !13921

41:                                               ; preds = %19
  ret void, !dbg !13923
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13924 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca i32, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %17 = bitcast i64* %16 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %17, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13927, metadata !DIExpression()), !dbg !13928
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !13929, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !13931, metadata !DIExpression()), !dbg !13932
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13933
  %19 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !13934
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !13935
  %21 = bitcast i64* %20 to [1 x i64]*, !dbg !13935
  %22 = load [1 x i64], [1 x i64]* %21, align 8, !dbg !13935
  call void @pend_locked(%struct.k_thread.203* noundef %18, %union.anon.192* noundef %19, [1 x i64] %22) #10, !dbg !13935
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13936
  store %struct.k_thread.203* %23, %struct.k_thread.203** @pending_current, align 4, !dbg !13937
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13938, metadata !DIExpression()), !dbg !13939
  %24 = load i32, i32* %11, align 4, !dbg !13940
  %25 = call i32 @z_swap_irqlock(i32 noundef %24) #10, !dbg !13941
  store i32 %25, i32* %13, align 4, !dbg !13939
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13942, metadata !DIExpression()), !dbg !13944
  %26 = bitcast %union.anon.68* %14 to i8*, !dbg !13944
  call void @llvm.memset.p0i8.i32(i8* align 4 %26, i8 0, i32 4, i1 false), !dbg !13944
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !13945, metadata !DIExpression()), !dbg !13944
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12216, metadata !DIExpression()) #9, !dbg !13946
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !13948
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12224, metadata !DIExpression()) #9, !dbg !13949
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12226, metadata !DIExpression()) #9, !dbg !13950
  %28 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13952, !srcloc !12231
  store i32 %28, i32* %4, align 4, !dbg !13952
  %29 = load i32, i32* %4, align 4, !dbg !13953
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13954
  store i32 %29, i32* %30, align 4, !dbg !13955
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13956
  %32 = load i32, i32* %31, align 4, !dbg !13956
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !13944
  store i32 %32, i32* %33, align 4, !dbg !13944
  br label %34, !dbg !13944

34:                                               ; preds = %58, %3
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13957
  %36 = load i32, i32* %35, align 4, !dbg !13957
  %37 = icmp ne i32 %36, 0, !dbg !13957
  %38 = xor i1 %37, true, !dbg !13957
  br i1 %38, label %39, label %60, !dbg !13944

39:                                               ; preds = %34
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !13959
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13962
  %42 = icmp eq %struct.k_thread.203* %40, %41, !dbg !13963
  br i1 %42, label %43, label %44, !dbg !13964

43:                                               ; preds = %39
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !13965
  br label %44, !dbg !13967

44:                                               ; preds = %43, %39
  br label %45, !dbg !13968

45:                                               ; preds = %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !13957
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !13957
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !13957
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12256, metadata !DIExpression()) #9, !dbg !13969
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12262, metadata !DIExpression()) #9, !dbg !13971
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13972
  %52 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13973
  %53 = load i32, i32* %52, align 4, !dbg !13973
  store i32 %53, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12266, metadata !DIExpression()) #9, !dbg !13974
  %54 = load i32, i32* %5, align 4, !dbg !13976
  %55 = icmp ne i32 %54, 0, !dbg !13977
  br i1 %55, label %56, label %57, !dbg !13978

56:                                               ; preds = %45
  br label %58, !dbg !13979

57:                                               ; preds = %45
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13980, !srcloc !12277
  br label %58, !dbg !13981

58:                                               ; preds = %56, %57
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13957
  store i32 1, i32* %59, align 4, !dbg !13957
  br label %34, !dbg !13957, !llvm.loop !13982

60:                                               ; preds = %34
  %61 = load i32, i32* %13, align 4, !dbg !13984
  ret i32 %61, !dbg !13985
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3) #1 !dbg !13986 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %18 = bitcast i32* %17 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %18, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %20, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !13989, metadata !DIExpression()), !dbg !13990
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13991, metadata !DIExpression()), !dbg !13992
  store %union.anon.192* %2, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !13993, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !13995, metadata !DIExpression()), !dbg !13996
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13997
  store %struct.k_thread.203* %21, %struct.k_thread.203** @pending_current, align 4, !dbg !13998
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12216, metadata !DIExpression()) #9, !dbg !13999
  %22 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !14001
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12224, metadata !DIExpression()) #9, !dbg !14002
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12226, metadata !DIExpression()) #9, !dbg !14003
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14005, !srcloc !12231
  store i32 %23, i32* %5, align 4, !dbg !14005
  %24 = load i32, i32* %5, align 4, !dbg !14006
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14007
  store i32 %24, i32* %25, align 4, !dbg !14008
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14009
  %27 = load i32, i32* %26, align 4, !dbg !14009
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14010
  store i32 %27, i32* %28, align 4, !dbg !14010
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14011
  %30 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !14012
  %31 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !14013
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !14013
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !14013
  call void @pend_locked(%struct.k_thread.203* noundef %29, %union.anon.192* noundef %30, [1 x i64] %33) #10, !dbg !14013
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !14014
  store %struct.k_spinlock.13* %34, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13311, metadata !DIExpression()), !dbg !14015
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14017
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14018
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !14018
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !14018
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13302, metadata !DIExpression()) #9, !dbg !14019
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13308, metadata !DIExpression()) #9, !dbg !14021
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14022
  store %struct.k_spinlock.13* %41, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13311, metadata !DIExpression()) #9, !dbg !14023
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14025
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14026
  %44 = load i32, i32* %43, align 4, !dbg !14026
  %45 = call i32 @z_swap_irqlock(i32 noundef %44) #13, !dbg !14027
  ret i32 %45, !dbg !14028
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend1_no_timeout(%union.anon.192* noundef %0) #1 !dbg !14029 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !14032, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14034, metadata !DIExpression()), !dbg !14035
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !14035
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14036, metadata !DIExpression()), !dbg !14038
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14038
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14038
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14039, metadata !DIExpression()), !dbg !14038
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !14040
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14042
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !14043
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !14044
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14046, !srcloc !12231
  store i32 %14, i32* %2, align 4, !dbg !14046
  %15 = load i32, i32* %2, align 4, !dbg !14047
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14048
  store i32 %15, i32* %16, align 4, !dbg !14049
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14050
  %18 = load i32, i32* %17, align 4, !dbg !14050
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14038
  store i32 %18, i32* %19, align 4, !dbg !14038
  br label %20, !dbg !14038

20:                                               ; preds = %47, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14051
  %22 = load i32, i32* %21, align 4, !dbg !14051
  %23 = icmp ne i32 %22, 0, !dbg !14051
  %24 = xor i1 %23, true, !dbg !14051
  br i1 %24, label %25, label %49, !dbg !14038

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !14053
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !14055
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !14056
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !14057
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14058
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !14060
  br i1 %30, label %31, label %33, !dbg !14061

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14062
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !14064
  br label %33, !dbg !14065

33:                                               ; preds = %31, %25
  br label %34, !dbg !14066

34:                                               ; preds = %33
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14051
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !14051
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !14051
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !14067
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !14069
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14070
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14071
  %42 = load i32, i32* %41, align 4, !dbg !14071
  store i32 %42, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !14072
  %43 = load i32, i32* %3, align 4, !dbg !14074
  %44 = icmp ne i32 %43, 0, !dbg !14075
  br i1 %44, label %45, label %46, !dbg !14076

45:                                               ; preds = %34
  br label %47, !dbg !14077

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14078, !srcloc !12277
  br label %47, !dbg !14079

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14051
  store i32 1, i32* %48, align 4, !dbg !14051
  br label %20, !dbg !14051, !llvm.loop !14080

49:                                               ; preds = %20
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14082
  ret %struct.k_thread.203* %50, !dbg !14083
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend_first_thread(%union.anon.192* noundef %0) #1 !dbg !14084 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !14085, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14087, metadata !DIExpression()), !dbg !14088
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !14088
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14089, metadata !DIExpression()), !dbg !14091
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14091
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14091
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14092, metadata !DIExpression()), !dbg !14091
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !14093
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14095
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !14096
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !14097
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14099, !srcloc !12231
  store i32 %14, i32* %2, align 4, !dbg !14099
  %15 = load i32, i32* %2, align 4, !dbg !14100
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14101
  store i32 %15, i32* %16, align 4, !dbg !14102
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14103
  %18 = load i32, i32* %17, align 4, !dbg !14103
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14091
  store i32 %18, i32* %19, align 4, !dbg !14091
  br label %20, !dbg !14091

20:                                               ; preds = %49, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14104
  %22 = load i32, i32* %21, align 4, !dbg !14104
  %23 = icmp ne i32 %22, 0, !dbg !14104
  %24 = xor i1 %23, true, !dbg !14104
  br i1 %24, label %25, label %51, !dbg !14091

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !14106
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !14108
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !14109
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !14110
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14111
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !14113
  br i1 %30, label %31, label %35, !dbg !14114

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14115
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !14117
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14118
  %34 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %33) #10, !dbg !14119
  br label %35, !dbg !14120

35:                                               ; preds = %31, %25
  br label %36, !dbg !14121

36:                                               ; preds = %35
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14104
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !14104
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !14104
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !14122
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !14124
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14125
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14126
  %44 = load i32, i32* %43, align 4, !dbg !14126
  store i32 %44, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !14127
  %45 = load i32, i32* %3, align 4, !dbg !14129
  %46 = icmp ne i32 %45, 0, !dbg !14130
  br i1 %46, label %47, label %48, !dbg !14131

47:                                               ; preds = %36
  br label %49, !dbg !14132

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14133, !srcloc !12277
  br label %49, !dbg !14134

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14104
  store i32 1, i32* %50, align 4, !dbg !14104
  br label %20, !dbg !14104, !llvm.loop !14135

51:                                               ; preds = %20
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14137
  ret %struct.k_thread.203* %52, !dbg !14138
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_unpend_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14139 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !14140, metadata !DIExpression()), !dbg !14141
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14142
  store %struct.k_thread.203* %12, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13885, metadata !DIExpression()) #9, !dbg !14143
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13887, metadata !DIExpression()) #9, !dbg !14145
  %13 = bitcast %union.anon.68* %9 to i8*, !dbg !14145
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false) #9, !dbg !14145
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13890, metadata !DIExpression()) #9, !dbg !14145
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !14146
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14148
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !14149
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !14150
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14152, !srcloc !12231
  store i32 %15, i32* %2, align 4, !dbg !14152
  %16 = load i32, i32* %2, align 4, !dbg !14153
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14154
  store i32 %16, i32* %17, align 4, !dbg !14155
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14156
  %19 = load i32, i32* %18, align 4, !dbg !14156
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14145
  store i32 %19, i32* %20, align 4, !dbg !14145
  br label %21, !dbg !14145

21:                                               ; preds = %40, %1
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14157
  %23 = load i32, i32* %22, align 4, !dbg !14157
  %24 = icmp ne i32 %23, 0, !dbg !14157
  %25 = xor i1 %24, true, !dbg !14157
  br i1 %25, label %26, label %42, !dbg !14145

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14158
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %27) #13, !dbg !14159
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14157
  %29 = bitcast i32* %28 to [1 x i32]*, !dbg !14157
  %30 = load [1 x i32], [1 x i32]* %29, align 4, !dbg !14157
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %32 = bitcast i32* %31 to [1 x i32]*
  store [1 x i32] %30, [1 x i32]* %32, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12256, metadata !DIExpression()) #9, !dbg !14160
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12262, metadata !DIExpression()) #9, !dbg !14162
  %33 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14163
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14164
  %35 = load i32, i32* %34, align 4, !dbg !14164
  store i32 %35, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12266, metadata !DIExpression()) #9, !dbg !14165
  %36 = load i32, i32* %3, align 4, !dbg !14167
  %37 = icmp ne i32 %36, 0, !dbg !14168
  br i1 %37, label %38, label %39, !dbg !14169

38:                                               ; preds = %26
  br label %40, !dbg !14170

39:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14171, !srcloc !12277
  br label %40, !dbg !14172

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14157
  store i32 1, i32* %41, align 4, !dbg !14157
  br label %21, !dbg !14157, !llvm.loop !14173

42:                                               ; preds = %21
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14175
  %44 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %43) #10, !dbg !14176
  ret void, !dbg !14177
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14178 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca %union.anon.68, align 4
  %22 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !14179, metadata !DIExpression()), !dbg !14180
  store i32 %1, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.declare(metadata i8* %20, metadata !14183, metadata !DIExpression()), !dbg !14184
  store i8 0, i8* %20, align 1, !dbg !14184
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !14185, metadata !DIExpression()), !dbg !14187
  %23 = bitcast %union.anon.68* %21 to i8*, !dbg !14187
  call void @llvm.memset.p0i8.i32(i8* align 4 %23, i8 0, i32 4, i1 false), !dbg !14187
  call void @llvm.dbg.declare(metadata %union.anon.68* %22, metadata !14188, metadata !DIExpression()), !dbg !14187
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !12216, metadata !DIExpression()) #9, !dbg !14189
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !14191
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !12224, metadata !DIExpression()) #9, !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12226, metadata !DIExpression()) #9, !dbg !14193
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14195, !srcloc !12231
  store i32 %25, i32* %10, align 4, !dbg !14195
  %26 = load i32, i32* %10, align 4, !dbg !14196
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14197
  store i32 %26, i32* %27, align 4, !dbg !14198
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14199
  %29 = load i32, i32* %28, align 4, !dbg !14199
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14187
  store i32 %29, i32* %30, align 4, !dbg !14187
  br label %31, !dbg !14187

31:                                               ; preds = %164, %2
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !14200
  %33 = load i32, i32* %32, align 4, !dbg !14200
  %34 = icmp ne i32 %33, 0, !dbg !14200
  %35 = xor i1 %34, true, !dbg !14200
  br i1 %35, label %36, label %166, !dbg !14187

36:                                               ; preds = %31
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14202
  %38 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %37) #10, !dbg !14204
  %39 = zext i1 %38 to i8, !dbg !14205
  store i8 %39, i8* %20, align 1, !dbg !14205
  %40 = load i8, i8* %20, align 1, !dbg !14206
  %41 = trunc i8 %40 to i1, !dbg !14206
  br i1 %41, label %42, label %142, !dbg !14208

42:                                               ; preds = %36
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14209
  store %struct.k_thread.203* %43, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !12616, metadata !DIExpression()) #9, !dbg !14213
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14215
  %45 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %44, i32 0, i32 0, !dbg !14216
  %46 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %45, i32 0, i32 3, !dbg !14217
  %47 = load i8, i8* %46, align 1, !dbg !14218
  %48 = zext i8 %47 to i32, !dbg !14218
  %49 = and i32 %48, -129, !dbg !14218
  %50 = trunc i32 %49 to i8, !dbg !14218
  store i8 %50, i8* %46, align 1, !dbg !14218
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14219
  %52 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %51) #13, !dbg !14220
  br i1 %52, label %53, label %58, !dbg !14221

53:                                               ; preds = %42
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14222
  store %struct.k_thread.203* %54, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12630, metadata !DIExpression()) #9, !dbg !14223
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14225
  store %struct.k_thread.203* %55, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !12635, metadata !DIExpression()), !dbg !14226
  %56 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14228
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14229
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %56, %struct.k_thread.203* noundef %57) #13, !dbg !14230
  br label %58, !dbg !14231

58:                                               ; preds = %42, %53
  %59 = load i32, i32* %19, align 4, !dbg !14232
  %60 = trunc i32 %59 to i8, !dbg !14232
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14233
  %62 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %61, i32 0, i32 0, !dbg !14234
  %63 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %62, i32 0, i32 4, !dbg !14235
  %64 = bitcast %union.anon.2.7* %63 to %struct.device_state.72*, !dbg !14235
  %65 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %64, i32 0, i32 0, !dbg !14235
  store i8 %60, i8* %65, align 2, !dbg !14236
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14237
  store %struct.k_thread.203* %66, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !12647, metadata !DIExpression()) #9, !dbg !14238
  %67 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14240
  %68 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %67, i32 0, i32 0, !dbg !14241
  %69 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %68, i32 0, i32 3, !dbg !14242
  %70 = load i8, i8* %69, align 1, !dbg !14243
  %71 = zext i8 %70 to i32, !dbg !14243
  %72 = or i32 %71, 128, !dbg !14243
  %73 = trunc i32 %72 to i8, !dbg !14243
  store i8 %73, i8* %69, align 1, !dbg !14243
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14244
  %75 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %74) #13, !dbg !14245
  br i1 %75, label %76, label %141, !dbg !14246

76:                                               ; preds = %58
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14247
  store %struct.k_thread.203* %77, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12661, metadata !DIExpression()) #9, !dbg !14248
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14250
  store %struct.k_thread.203* %78, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12635, metadata !DIExpression()) #9, !dbg !14251
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14253
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12669, metadata !DIExpression()) #9, !dbg !14254
  store %struct.k_thread.203* %79, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12676, metadata !DIExpression()) #9, !dbg !14256
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12678, metadata !DIExpression()) #9, !dbg !14257
  %80 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14258
  %81 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %80) #13, !dbg !14258
  %82 = icmp ne %struct._dnode.191* %81, null, !dbg !14258
  br i1 %82, label %83, label %88, !dbg !14258

83:                                               ; preds = %76
  %84 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14258
  %85 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %84) #13, !dbg !14258
  %86 = bitcast %struct._dnode.191* %85 to i8*, !dbg !14258
  %87 = bitcast i8* %86 to %struct.k_thread.203*, !dbg !14258
  br label %89, !dbg !14258

88:                                               ; preds = %76
  br label %89, !dbg !14258

89:                                               ; preds = %88, %83
  %90 = phi %struct.k_thread.203* [ %87, %83 ], [ null, %88 ], !dbg !14258
  store %struct.k_thread.203* %90, %struct.k_thread.203** %5, align 4, !dbg !14258
  br label %91, !dbg !14258

91:                                               ; preds = %132, %89
  %92 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14259
  %93 = icmp ne %struct.k_thread.203* %92, null, !dbg !14259
  br i1 %93, label %94, label %134, !dbg !14258

94:                                               ; preds = %91
  %95 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14260
  %96 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14261
  %97 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %95, %struct.k_thread.203* noundef %96) #13, !dbg !14262
  %98 = icmp sgt i32 %97, 0, !dbg !14263
  br i1 %98, label %99, label %108, !dbg !14264

99:                                               ; preds = %94
  %100 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14265
  %101 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %100, i32 0, i32 0, !dbg !14266
  %102 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %101, i32 0, i32 0, !dbg !14267
  %103 = bitcast %union.anon.192* %102 to %struct._dnode.191*, !dbg !14267
  %104 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14268
  %105 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %104, i32 0, i32 0, !dbg !14269
  %106 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %105, i32 0, i32 0, !dbg !14270
  %107 = bitcast %union.anon.192* %106 to %struct._dnode.191*, !dbg !14270
  call void @sys_dlist_insert(%struct._dnode.191* noundef %103, %struct._dnode.191* noundef %107) #13, !dbg !14271
  br label %140, !dbg !14272

108:                                              ; preds = %94
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14259
  %110 = icmp ne %struct.k_thread.203* %109, null, !dbg !14259
  br i1 %110, label %111, label %131, !dbg !14259

111:                                              ; preds = %108
  %112 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14259
  %113 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14259
  %114 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %113, i32 0, i32 0, !dbg !14259
  %115 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %114, i32 0, i32 0, !dbg !14259
  %116 = bitcast %union.anon.192* %115 to %struct._dnode.191*, !dbg !14259
  %117 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %112, %struct._dnode.191* noundef %116) #13, !dbg !14259
  %118 = icmp ne %struct._dnode.191* %117, null, !dbg !14259
  br i1 %118, label %119, label %128, !dbg !14259

119:                                              ; preds = %111
  %120 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14259
  %121 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14259
  %122 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %121, i32 0, i32 0, !dbg !14259
  %123 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %122, i32 0, i32 0, !dbg !14259
  %124 = bitcast %union.anon.192* %123 to %struct._dnode.191*, !dbg !14259
  %125 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %120, %struct._dnode.191* noundef %124) #13, !dbg !14259
  %126 = bitcast %struct._dnode.191* %125 to i8*, !dbg !14259
  %127 = bitcast i8* %126 to %struct.k_thread.203*, !dbg !14259
  br label %129, !dbg !14259

128:                                              ; preds = %111
  br label %129, !dbg !14259

129:                                              ; preds = %128, %119
  %130 = phi %struct.k_thread.203* [ %127, %119 ], [ null, %128 ], !dbg !14259
  br label %132, !dbg !14259

131:                                              ; preds = %108
  br label %132, !dbg !14259

132:                                              ; preds = %131, %129
  %133 = phi %struct.k_thread.203* [ %130, %129 ], [ null, %131 ], !dbg !14259
  store %struct.k_thread.203* %133, %struct.k_thread.203** %5, align 4, !dbg !14259
  br label %91, !dbg !14259, !llvm.loop !14273

134:                                              ; preds = %91
  %135 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14275
  %136 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14276
  %137 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %136, i32 0, i32 0, !dbg !14277
  %138 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %137, i32 0, i32 0, !dbg !14278
  %139 = bitcast %union.anon.192* %138 to %struct._dnode.191*, !dbg !14278
  call void @sys_dlist_append(%struct._dnode.191* noundef %135, %struct._dnode.191* noundef %139) #13, !dbg !14279
  br label %140, !dbg !14280

140:                                              ; preds = %99, %134
  br label %141, !dbg !14281

141:                                              ; preds = %58, %140
  call void @update_cache(i32 noundef 1) #10, !dbg !14282
  br label %150, !dbg !14283

142:                                              ; preds = %36
  %143 = load i32, i32* %19, align 4, !dbg !14284
  %144 = trunc i32 %143 to i8, !dbg !14284
  %145 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14286
  %146 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %145, i32 0, i32 0, !dbg !14287
  %147 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %146, i32 0, i32 4, !dbg !14288
  %148 = bitcast %union.anon.2.7* %147 to %struct.device_state.72*, !dbg !14288
  %149 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %148, i32 0, i32 0, !dbg !14288
  store i8 %144, i8* %149, align 2, !dbg !14289
  br label %150

150:                                              ; preds = %142, %141
  br label %151, !dbg !14290

151:                                              ; preds = %150
  %152 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14200
  %153 = bitcast i32* %152 to [1 x i32]*, !dbg !14200
  %154 = load [1 x i32], [1 x i32]* %153, align 4, !dbg !14200
  %155 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %156 = bitcast i32* %155 to [1 x i32]*
  store [1 x i32] %154, [1 x i32]* %156, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12256, metadata !DIExpression()) #9, !dbg !14291
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12262, metadata !DIExpression()) #9, !dbg !14293
  %157 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !14294
  %158 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14295
  %159 = load i32, i32* %158, align 4, !dbg !14295
  store i32 %159, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12266, metadata !DIExpression()) #9, !dbg !14296
  %160 = load i32, i32* %11, align 4, !dbg !14298
  %161 = icmp ne i32 %160, 0, !dbg !14299
  br i1 %161, label %162, label %163, !dbg !14300

162:                                              ; preds = %151
  br label %164, !dbg !14301

163:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14302, !srcloc !12277
  br label %164, !dbg !14303

164:                                              ; preds = %162, %163
  %165 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !14200
  store i32 1, i32* %165, align 4, !dbg !14200
  br label %31, !dbg !14200, !llvm.loop !14304

166:                                              ; preds = %31
  br label %167, !dbg !14306

167:                                              ; preds = %166
  br label %168, !dbg !14307

168:                                              ; preds = %167
  %169 = load i8, i8* %20, align 1, !dbg !14309
  %170 = trunc i8 %169 to i1, !dbg !14309
  ret i1 %170, !dbg !14310
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14311 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14318, metadata !DIExpression()), !dbg !14319
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14320
  %7 = load i32, i32* %4, align 4, !dbg !14321
  %8 = call zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %6, i32 noundef %7) #10, !dbg !14322
  %9 = zext i1 %8 to i8, !dbg !14319
  store i8 %9, i8* %5, align 1, !dbg !14319
  call void @flag_ipi() #10, !dbg !14323
  %10 = load i8, i8* %5, align 1, !dbg !14324
  %11 = trunc i8 %10 to i1, !dbg !14324
  br i1 %11, label %12, label %22, !dbg !14326

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14327
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !14328
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 4, !dbg !14329
  %16 = bitcast %union.anon.2.7* %15 to %struct.device_state.72*, !dbg !14329
  %17 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %16, i32 0, i32 1, !dbg !14329
  %18 = load i8, i8* %17, align 1, !dbg !14329
  %19 = zext i8 %18 to i32, !dbg !14327
  %20 = icmp eq i32 %19, 0, !dbg !14330
  br i1 %20, label %21, label %22, !dbg !14331

21:                                               ; preds = %12
  call void @z_reschedule_unlocked() #10, !dbg !14332
  br label %22, !dbg !14334

22:                                               ; preds = %21, %12, %2
  ret void, !dbg !14335
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_lock() #1 !dbg !14336 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !14337, metadata !DIExpression()), !dbg !14339
  %9 = bitcast %union.anon.68* %7 to i8*, !dbg !14339
  call void @llvm.memset.p0i8.i32(i8* align 4 %9, i8 0, i32 4, i1 false), !dbg !14339
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14340, metadata !DIExpression()), !dbg !14339
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12216, metadata !DIExpression()) #9, !dbg !14341
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14343
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12224, metadata !DIExpression()) #9, !dbg !14344
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12226, metadata !DIExpression()) #9, !dbg !14345
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14347, !srcloc !12231
  store i32 %11, i32* %1, align 4, !dbg !14347
  %12 = load i32, i32* %1, align 4, !dbg !14348
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14349
  store i32 %12, i32* %13, align 4, !dbg !14350
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14351
  %15 = load i32, i32* %14, align 4, !dbg !14351
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14339
  store i32 %15, i32* %16, align 4, !dbg !14339
  br label %17, !dbg !14339

17:                                               ; preds = %38, %0
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14352
  %19 = load i32, i32* %18, align 4, !dbg !14352
  %20 = icmp ne i32 %19, 0, !dbg !14352
  %21 = xor i1 %20, true, !dbg !14352
  br i1 %21, label %22, label %40, !dbg !14339

22:                                               ; preds = %17
  br label %23, !dbg !14354

23:                                               ; preds = %22
  br label %24, !dbg !14356

24:                                               ; preds = %23
  call void @z_sched_lock() #10, !dbg !14358
  br label %25, !dbg !14359

25:                                               ; preds = %24
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14352
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !14352
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !14352
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !12256, metadata !DIExpression()) #9, !dbg !14360
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12262, metadata !DIExpression()) #9, !dbg !14362
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !14363
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !14364
  %33 = load i32, i32* %32, align 4, !dbg !14364
  store i32 %33, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12266, metadata !DIExpression()) #9, !dbg !14365
  %34 = load i32, i32* %2, align 4, !dbg !14367
  %35 = icmp ne i32 %34, 0, !dbg !14368
  br i1 %35, label %36, label %37, !dbg !14369

36:                                               ; preds = %25
  br label %38, !dbg !14370

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14371, !srcloc !12277
  br label %38, !dbg !14372

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14352
  store i32 1, i32* %39, align 4, !dbg !14352
  br label %17, !dbg !14352, !llvm.loop !14373

40:                                               ; preds = %17
  ret void, !dbg !14375
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sched_lock() #1 !dbg !14376 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14377
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !14378
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 4, !dbg !14379
  %4 = bitcast %union.anon.2.7* %3 to %struct.device_state.72*, !dbg !14379
  %5 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %4, i32 0, i32 1, !dbg !14379
  %6 = load i8, i8* %5, align 1, !dbg !14380
  %7 = add i8 %6, -1, !dbg !14380
  store i8 %7, i8* %5, align 1, !dbg !14380
  br label %8, !dbg !14381

8:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14382, !srcloc !14384
  br label %9, !dbg !14382

9:                                                ; preds = %8
  ret void, !dbg !14385
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_unlock() #1 !dbg !14386 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !14387, metadata !DIExpression()), !dbg !14389
  %13 = bitcast %union.anon.68* %7 to i8*, !dbg !14389
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !14389
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14390, metadata !DIExpression()), !dbg !14389
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12216, metadata !DIExpression()) #9, !dbg !14391
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14393
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12224, metadata !DIExpression()) #9, !dbg !14394
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12226, metadata !DIExpression()) #9, !dbg !14395
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14397, !srcloc !12231
  store i32 %15, i32* %1, align 4, !dbg !14397
  %16 = load i32, i32* %1, align 4, !dbg !14398
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14399
  store i32 %16, i32* %17, align 4, !dbg !14400
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14401
  %19 = load i32, i32* %18, align 4, !dbg !14401
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14389
  store i32 %19, i32* %20, align 4, !dbg !14389
  br label %21, !dbg !14389

21:                                               ; preds = %47, %0
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14402
  %23 = load i32, i32* %22, align 4, !dbg !14402
  %24 = icmp ne i32 %23, 0, !dbg !14402
  %25 = xor i1 %24, true, !dbg !14402
  br i1 %25, label %26, label %49, !dbg !14389

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14404
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !14406
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 4, !dbg !14407
  %30 = bitcast %union.anon.2.7* %29 to %struct.device_state.72*, !dbg !14407
  %31 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %30, i32 0, i32 1, !dbg !14407
  %32 = load i8, i8* %31, align 1, !dbg !14408
  %33 = add i8 %32, 1, !dbg !14408
  store i8 %33, i8* %31, align 1, !dbg !14408
  call void @update_cache(i32 noundef 0) #10, !dbg !14409
  br label %34, !dbg !14410

34:                                               ; preds = %26
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14402
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !14402
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !14402
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !12256, metadata !DIExpression()) #9, !dbg !14411
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12262, metadata !DIExpression()) #9, !dbg !14413
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !14414
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !14415
  %42 = load i32, i32* %41, align 4, !dbg !14415
  store i32 %42, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12266, metadata !DIExpression()) #9, !dbg !14416
  %43 = load i32, i32* %2, align 4, !dbg !14418
  %44 = icmp ne i32 %43, 0, !dbg !14419
  br i1 %44, label %45, label %46, !dbg !14420

45:                                               ; preds = %34
  br label %47, !dbg !14421

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14422, !srcloc !12277
  br label %47, !dbg !14423

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14402
  store i32 1, i32* %48, align 4, !dbg !14402
  br label %21, !dbg !14402, !llvm.loop !14424

49:                                               ; preds = %21
  br label %50, !dbg !14426

50:                                               ; preds = %49
  br label %51, !dbg !14427

51:                                               ; preds = %50
  br label %52, !dbg !14431

52:                                               ; preds = %51
  br label %53, !dbg !14432

53:                                               ; preds = %52
  call void @z_reschedule_unlocked() #10, !dbg !14434
  ret void, !dbg !14435
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_swap_next_thread() #1 !dbg !14436 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14437
  ret %struct.k_thread.203* %1, !dbg !14438
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* noundef %0, %struct.rbnode* noundef %1) #1 !dbg !14439 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.rbnode*, align 4
  %5 = alloca %struct.rbnode*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  store %struct.rbnode* %0, %struct.rbnode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !14442, metadata !DIExpression()), !dbg !14443
  store %struct.rbnode* %1, %struct.rbnode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %5, metadata !14444, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !14448, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14450, metadata !DIExpression()), !dbg !14451
  %9 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14452
  %10 = bitcast %struct.rbnode* %9 to i8*, !dbg !14452
  %11 = getelementptr inbounds i8, i8* %10, i32 0, !dbg !14452
  %12 = bitcast i8* %11 to %struct.k_thread.203*, !dbg !14452
  store %struct.k_thread.203* %12, %struct.k_thread.203** %6, align 4, !dbg !14453
  %13 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14454
  %14 = bitcast %struct.rbnode* %13 to i8*, !dbg !14454
  %15 = getelementptr inbounds i8, i8* %14, i32 0, !dbg !14454
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !14454
  store %struct.k_thread.203* %16, %struct.k_thread.203** %7, align 4, !dbg !14455
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14456
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14457
  %19 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %17, %struct.k_thread.203* noundef %18) #10, !dbg !14458
  store i32 %19, i32* %8, align 4, !dbg !14459
  %20 = load i32, i32* %8, align 4, !dbg !14460
  %21 = icmp sgt i32 %20, 0, !dbg !14462
  br i1 %21, label %22, label %23, !dbg !14463

22:                                               ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !14464
  br label %40, !dbg !14464

23:                                               ; preds = %2
  %24 = load i32, i32* %8, align 4, !dbg !14466
  %25 = icmp slt i32 %24, 0, !dbg !14468
  br i1 %25, label %26, label %27, !dbg !14469

26:                                               ; preds = %23
  store i1 false, i1* %3, align 1, !dbg !14470
  br label %40, !dbg !14470

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14472
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !14474
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 5, !dbg !14475
  %31 = load i32, i32* %30, align 8, !dbg !14475
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14476
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !14477
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 5, !dbg !14478
  %35 = load i32, i32* %34, align 8, !dbg !14478
  %36 = icmp ult i32 %31, %35, !dbg !14479
  %37 = zext i1 %36 to i64, !dbg !14472
  %38 = select i1 %36, i32 1, i32 0, !dbg !14472
  %39 = icmp ne i32 %38, 0, !dbg !14472
  store i1 %39, i1* %3, align 1, !dbg !14480
  br label %40, !dbg !14480

40:                                               ; preds = %27, %26, %22
  %41 = load i1, i1* %3, align 1, !dbg !14481
  ret i1 %41, !dbg !14481
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !14482 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct._rb_foreach, align 4
  %7 = alloca %struct.rbnode*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !14498, metadata !DIExpression()), !dbg !14499
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14500, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14502, metadata !DIExpression()), !dbg !14503
  %9 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14504
  %10 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %9, i32 0, i32 1, !dbg !14505
  %11 = load i32, i32* %10, align 4, !dbg !14506
  %12 = add nsw i32 %11, 1, !dbg !14506
  store i32 %12, i32* %10, align 4, !dbg !14506
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14507
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !14508
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 5, !dbg !14509
  store i32 %11, i32* %15, align 8, !dbg !14510
  %16 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14511
  %17 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %16, i32 0, i32 1, !dbg !14513
  %18 = load i32, i32* %17, align 4, !dbg !14513
  %19 = icmp ne i32 %18, 0, !dbg !14511
  br i1 %19, label %62, label %20, !dbg !14514

20:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %6, metadata !14515, metadata !DIExpression()), !dbg !14523
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 0, !dbg !14523
  %22 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14523
  %23 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %22, i32 0, i32 0, !dbg !14523
  %24 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %23, i32 0, i32 2, !dbg !14523
  %25 = load i32, i32* %24, align 4, !dbg !14523
  %26 = mul i32 %25, 4, !dbg !14523
  %27 = alloca i8, i32 %26, align 8, !dbg !14523
  %28 = bitcast i8* %27 to %struct.rbnode**, !dbg !14523
  store %struct.rbnode** %28, %struct.rbnode*** %21, align 4, !dbg !14523
  %29 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 1, !dbg !14523
  %30 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14523
  %31 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %30, i32 0, i32 0, !dbg !14523
  %32 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %31, i32 0, i32 2, !dbg !14523
  %33 = load i32, i32* %32, align 4, !dbg !14523
  %34 = mul i32 %33, 1, !dbg !14523
  %35 = alloca i8, i32 %34, align 8, !dbg !14523
  store i8* %35, i8** %29, align 4, !dbg !14523
  %36 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 2, !dbg !14523
  store i32 -1, i32* %36, align 4, !dbg !14523
  br label %37, !dbg !14523

37:                                               ; preds = %53, %20
  call void @llvm.dbg.declare(metadata %struct.rbnode** %7, metadata !14524, metadata !DIExpression()), !dbg !14527
  %38 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14527
  %39 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %38, i32 0, i32 0, !dbg !14527
  %40 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef %39, %struct._rb_foreach* noundef %6) #10, !dbg !14527
  store %struct.rbnode* %40, %struct.rbnode** %7, align 4, !dbg !14527
  %41 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !14527
  %42 = icmp ne %struct.rbnode* %41, null, !dbg !14527
  br i1 %42, label %43, label %48, !dbg !14527

43:                                               ; preds = %37
  %44 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !14527
  %45 = bitcast %struct.rbnode* %44 to i8*, !dbg !14527
  %46 = getelementptr inbounds i8, i8* %45, i32 0, !dbg !14527
  %47 = bitcast i8* %46 to %struct.k_thread.203*, !dbg !14527
  br label %49, !dbg !14527

48:                                               ; preds = %37
  br label %49, !dbg !14527

49:                                               ; preds = %48, %43
  %50 = phi %struct.k_thread.203* [ %47, %43 ], [ null, %48 ], !dbg !14527
  store %struct.k_thread.203* %50, %struct.k_thread.203** %5, align 4, !dbg !14527
  store %struct.k_thread.203* %50, %struct.k_thread.203** %8, align 4, !dbg !14527
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14527
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !14528
  br i1 %52, label %53, label %61, !dbg !14523

53:                                               ; preds = %49
  %54 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14529
  %55 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %54, i32 0, i32 1, !dbg !14531
  %56 = load i32, i32* %55, align 4, !dbg !14532
  %57 = add nsw i32 %56, 1, !dbg !14532
  store i32 %57, i32* %55, align 4, !dbg !14532
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14533
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 0, !dbg !14534
  %60 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %59, i32 0, i32 5, !dbg !14535
  store i32 %56, i32* %60, align 8, !dbg !14536
  br label %37, !dbg !14528, !llvm.loop !14537

61:                                               ; preds = %49
  br label %62, !dbg !14539

62:                                               ; preds = %61, %2
  %63 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14540
  %64 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %63, i32 0, i32 0, !dbg !14541
  %65 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14542
  %66 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %65, i32 0, i32 0, !dbg !14543
  %67 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %66, i32 0, i32 0, !dbg !14544
  %68 = bitcast %union.anon.192* %67 to %struct.rbnode*, !dbg !14544
  call void @rb_insert(%struct.rbtree* noundef %64, %struct.rbnode* noundef %68) #10, !dbg !14545
  ret void, !dbg !14546
}

declare dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) #0

declare dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !14547 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !14548, metadata !DIExpression()), !dbg !14549
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14550, metadata !DIExpression()), !dbg !14551
  %5 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14552
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !14553
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14554
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !14555
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 0, !dbg !14556
  %10 = bitcast %union.anon.192* %9 to %struct.rbnode*, !dbg !14556
  call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %10) #10, !dbg !14557
  %11 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14558
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %11, i32 0, i32 0, !dbg !14560
  %13 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %12, i32 0, i32 0, !dbg !14561
  %14 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !14561
  %15 = icmp ne %struct.rbnode* %14, null, !dbg !14558
  br i1 %15, label %19, label %16, !dbg !14562

16:                                               ; preds = %2
  %17 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14563
  %18 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %17, i32 0, i32 1, !dbg !14565
  store i32 0, i32* %18, align 4, !dbg !14566
  br label %19, !dbg !14567

19:                                               ; preds = %16, %2
  ret void, !dbg !14568
}

declare dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_rb_best(%struct._priq_rb* noundef %0) #1 !dbg !14569 {
  %2 = alloca %struct._priq_rb*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.rbnode*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %2, metadata !14572, metadata !DIExpression()), !dbg !14573
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14574, metadata !DIExpression()), !dbg !14575
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !14575
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !14576, metadata !DIExpression()), !dbg !14577
  %5 = load %struct._priq_rb*, %struct._priq_rb** %2, align 4, !dbg !14578
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !14579
  %7 = call %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %6) #10, !dbg !14580
  store %struct.rbnode* %7, %struct.rbnode** %4, align 4, !dbg !14577
  %8 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14581
  %9 = icmp ne %struct.rbnode* %8, null, !dbg !14583
  br i1 %9, label %10, label %15, !dbg !14584

10:                                               ; preds = %1
  %11 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14585
  %12 = bitcast %struct.rbnode* %11 to i8*, !dbg !14585
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !14585
  %14 = bitcast i8* %13 to %struct.k_thread.203*, !dbg !14585
  store %struct.k_thread.203* %14, %struct.k_thread.203** %3, align 4, !dbg !14587
  br label %15, !dbg !14588

15:                                               ; preds = %10, %1
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14589
  ret %struct.k_thread.203* %16, !dbg !14590
}

; Function Attrs: noinline nounwind optnone
define internal %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) #1 !dbg !14591 {
  %2 = alloca %struct.rbtree*, align 4
  store %struct.rbtree* %0, %struct.rbtree** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.rbtree** %2, metadata !14595, metadata !DIExpression()), !dbg !14596
  %3 = load %struct.rbtree*, %struct.rbtree** %2, align 4, !dbg !14597
  %4 = call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %3, i8 noundef zeroext 0) #10, !dbg !14598
  ret %struct.rbnode* %4, !dbg !14599
}

declare dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_mq_best(%struct._priq_mq* noundef %0) #1 !dbg !14600 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct._priq_mq*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  %6 = alloca %struct._dnode.191*, align 4
  store %struct._priq_mq* %0, %struct._priq_mq** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_mq** %3, metadata !14609, metadata !DIExpression()), !dbg !14610
  %7 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14611
  %8 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %7, i32 0, i32 1, !dbg !14613
  %9 = load i32, i32* %8, align 4, !dbg !14613
  %10 = icmp ne i32 %9, 0, !dbg !14611
  br i1 %10, label %12, label %11, !dbg !14614

11:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** %2, align 4, !dbg !14615
  br label %31, !dbg !14615

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14617, metadata !DIExpression()), !dbg !14618
  store %struct.k_thread.203* null, %struct.k_thread.203** %4, align 4, !dbg !14618
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !14619, metadata !DIExpression()), !dbg !14620
  %13 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14621
  %14 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %13, i32 0, i32 0, !dbg !14622
  %15 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14623
  %16 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %15, i32 0, i32 1, !dbg !14624
  %17 = load i32, i32* %16, align 4, !dbg !14624
  %18 = call i32 @llvm.cttz.i32(i32 %17, i1 false), !dbg !14625
  %19 = getelementptr inbounds [32 x %struct._dnode.191], [32 x %struct._dnode.191]* %14, i32 0, i32 %18, !dbg !14621
  store %struct._dnode.191* %19, %struct._dnode.191** %5, align 4, !dbg !14620
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %6, metadata !14626, metadata !DIExpression()), !dbg !14627
  %20 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !14628
  %21 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %20) #10, !dbg !14629
  store %struct._dnode.191* %21, %struct._dnode.191** %6, align 4, !dbg !14627
  %22 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !14630
  %23 = icmp ne %struct._dnode.191* %22, null, !dbg !14632
  br i1 %23, label %24, label %29, !dbg !14633

24:                                               ; preds = %12
  %25 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !14634
  %26 = bitcast %struct._dnode.191* %25 to i8*, !dbg !14634
  %27 = getelementptr inbounds i8, i8* %26, i32 0, !dbg !14634
  %28 = bitcast i8* %27 to %struct.k_thread.203*, !dbg !14634
  store %struct.k_thread.203* %28, %struct.k_thread.203** %4, align 4, !dbg !14636
  br label %29, !dbg !14637

29:                                               ; preds = %24, %12
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14638
  store %struct.k_thread.203* %30, %struct.k_thread.203** %2, align 4, !dbg !14639
  br label %31, !dbg !14639

31:                                               ; preds = %29, %11
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14640
  ret %struct.k_thread.203* %32, !dbg !14640
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_unpend_all(%union.anon.192* noundef %0) #1 !dbg !14641 {
  %2 = alloca %union.anon.192*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !14644, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14646, metadata !DIExpression()), !dbg !14647
  store i32 0, i32* %3, align 4, !dbg !14647
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14648, metadata !DIExpression()), !dbg !14649
  br label %5, !dbg !14650

5:                                                ; preds = %9, %1
  %6 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !14651
  %7 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %6) #10, !dbg !14652
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !14653
  %8 = icmp ne %struct.k_thread.203* %7, null, !dbg !14654
  br i1 %8, label %9, label %12, !dbg !14650

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14655
  call void @z_unpend_thread(%struct.k_thread.203* noundef %10) #10, !dbg !14657
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14658
  call void @z_ready_thread(%struct.k_thread.203* noundef %11) #10, !dbg !14659
  store i32 1, i32* %3, align 4, !dbg !14660
  br label %5, !dbg !14650, !llvm.loop !14661

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4, !dbg !14663
  ret i32 %13, !dbg !14664
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %0) #1 !dbg !14665 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !14666, metadata !DIExpression()), !dbg !14667
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !14668
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !14669
  %5 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %4) #10, !dbg !14670
  %6 = bitcast %struct._dnode.191* %5 to %struct.k_thread.203*, !dbg !14671
  ret %struct.k_thread.203* %6, !dbg !14672
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) #1 !dbg !14673 {
  %2 = alloca %struct._ready_q*, align 4
  store %struct._ready_q* %0, %struct._ready_q** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._ready_q** %2, metadata !14681, metadata !DIExpression()), !dbg !14682
  %3 = load %struct._ready_q*, %struct._ready_q** %2, align 4, !dbg !14683
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %3, i32 0, i32 1, !dbg !14684
  call void @sys_dlist_init.75(%struct._dnode.191* noundef %4) #10, !dbg !14685
  ret void, !dbg !14686
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.75(%struct._dnode.191* noundef %0) #1 !dbg !14687 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !14690, metadata !DIExpression()), !dbg !14691
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14692
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14693
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !14694
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !14694
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !14695
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14696
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14697
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !14698
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !14698
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_init() #1 !dbg !14701 {
  call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #10, !dbg !14702
  call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #10, !dbg !14703
  ret void, !dbg !14704
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.203* noundef %0) #1 !dbg !14705 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14709, metadata !DIExpression()), !dbg !14710
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14711
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14712
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !14713
  %6 = bitcast %union.anon.2.7* %5 to %struct.device_state.72*, !dbg !14713
  %7 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %6, i32 0, i32 0, !dbg !14713
  %8 = load i8, i8* %7, align 2, !dbg !14713
  %9 = sext i8 %8 to i32, !dbg !14711
  ret i32 %9, !dbg !14714
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14715 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14718, metadata !DIExpression()), !dbg !14719
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14720, metadata !DIExpression()), !dbg !14721
  br label %6, !dbg !14722

6:                                                ; preds = %2
  br label %7, !dbg !14723

7:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14725, metadata !DIExpression()), !dbg !14726
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14727
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !14726
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14728
  %10 = load i32, i32* %4, align 4, !dbg !14729
  call void @z_thread_priority_set(%struct.k_thread.203* noundef %9, i32 noundef %10) #10, !dbg !14730
  ret void, !dbg !14731
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_can_yield() #1 !dbg !14732 {
  %1 = call zeroext i1 @k_is_pre_kernel() #10, !dbg !14733
  br i1 %1, label %7, label %2, !dbg !14734

2:                                                ; preds = %0
  %3 = call zeroext i1 @k_is_in_isr() #10, !dbg !14735
  br i1 %3, label %7, label %4, !dbg !14736

4:                                                ; preds = %2
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14737
  %6 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %5) #10, !dbg !14738
  br label %7, !dbg !14736

7:                                                ; preds = %4, %2, %0
  %8 = phi i1 [ true, %2 ], [ true, %0 ], [ %6, %4 ]
  %9 = xor i1 %8, true, !dbg !14739
  ret i1 %9, !dbg !14740
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel() #1 !dbg !14741 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14742
  %2 = trunc i8 %1 to i1, !dbg !14742
  %3 = xor i1 %2, true, !dbg !14743
  ret i1 %3, !dbg !14744
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_yield() #1 !dbg !14745 {
  %1 = alloca %struct._dnode.191*, align 4
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  br label %17, !dbg !14746

17:                                               ; preds = %0
  br label %18, !dbg !14747

18:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !14749, metadata !DIExpression()), !dbg !14750
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12216, metadata !DIExpression()) #9, !dbg !14751
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !14753
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12224, metadata !DIExpression()) #9, !dbg !14754
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12226, metadata !DIExpression()) #9, !dbg !14755
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14757, !srcloc !12231
  store i32 %20, i32* %8, align 4, !dbg !14757
  %21 = load i32, i32* %8, align 4, !dbg !14758
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14759
  store i32 %21, i32* %22, align 4, !dbg !14760
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14761
  %24 = load i32, i32* %23, align 4, !dbg !14761
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14762
  store i32 %24, i32* %25, align 4, !dbg !14762
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14763
  store %struct.k_thread.203* %26, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !12616, metadata !DIExpression()) #9, !dbg !14766
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14768
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !14769
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 3, !dbg !14770
  %30 = load i8, i8* %29, align 1, !dbg !14771
  %31 = zext i8 %30 to i32, !dbg !14771
  %32 = and i32 %31, -129, !dbg !14771
  %33 = trunc i32 %32 to i8, !dbg !14771
  store i8 %33, i8* %29, align 1, !dbg !14771
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14772
  %35 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %34) #13, !dbg !14773
  br i1 %35, label %36, label %41, !dbg !14774

36:                                               ; preds = %18
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14775
  store %struct.k_thread.203* %37, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12630, metadata !DIExpression()) #9, !dbg !14776
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14778
  store %struct.k_thread.203* %38, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12635, metadata !DIExpression()), !dbg !14779
  %39 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14781
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14782
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %39, %struct.k_thread.203* noundef %40) #13, !dbg !14783
  br label %41, !dbg !14784

41:                                               ; preds = %18, %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14785
  store %struct.k_thread.203* %42, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12647, metadata !DIExpression()) #9, !dbg !14786
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14788
  %44 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %43, i32 0, i32 0, !dbg !14789
  %45 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %44, i32 0, i32 3, !dbg !14790
  %46 = load i8, i8* %45, align 1, !dbg !14791
  %47 = zext i8 %46 to i32, !dbg !14791
  %48 = or i32 %47, 128, !dbg !14791
  %49 = trunc i32 %48 to i8, !dbg !14791
  store i8 %49, i8* %45, align 1, !dbg !14791
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14792
  %51 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %50) #13, !dbg !14793
  br i1 %51, label %52, label %117, !dbg !14794

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14795
  store %struct.k_thread.203* %53, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12661, metadata !DIExpression()) #9, !dbg !14796
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14798
  store %struct.k_thread.203* %54, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12635, metadata !DIExpression()) #9, !dbg !14799
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14801
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %1, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !12669, metadata !DIExpression()) #9, !dbg !14802
  store %struct.k_thread.203* %55, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12676, metadata !DIExpression()) #9, !dbg !14804
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12678, metadata !DIExpression()) #9, !dbg !14805
  %56 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14806
  %57 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %56) #13, !dbg !14806
  %58 = icmp ne %struct._dnode.191* %57, null, !dbg !14806
  br i1 %58, label %59, label %64, !dbg !14806

59:                                               ; preds = %52
  %60 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14806
  %61 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %60) #13, !dbg !14806
  %62 = bitcast %struct._dnode.191* %61 to i8*, !dbg !14806
  %63 = bitcast i8* %62 to %struct.k_thread.203*, !dbg !14806
  br label %65, !dbg !14806

64:                                               ; preds = %52
  br label %65, !dbg !14806

65:                                               ; preds = %64, %59
  %66 = phi %struct.k_thread.203* [ %63, %59 ], [ null, %64 ], !dbg !14806
  store %struct.k_thread.203* %66, %struct.k_thread.203** %3, align 4, !dbg !14806
  br label %67, !dbg !14806

67:                                               ; preds = %108, %65
  %68 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14807
  %69 = icmp ne %struct.k_thread.203* %68, null, !dbg !14807
  br i1 %69, label %70, label %110, !dbg !14806

70:                                               ; preds = %67
  %71 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14808
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14809
  %73 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %71, %struct.k_thread.203* noundef %72) #13, !dbg !14810
  %74 = icmp sgt i32 %73, 0, !dbg !14811
  br i1 %74, label %75, label %84, !dbg !14812

75:                                               ; preds = %70
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14813
  %77 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %76, i32 0, i32 0, !dbg !14814
  %78 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %77, i32 0, i32 0, !dbg !14815
  %79 = bitcast %union.anon.192* %78 to %struct._dnode.191*, !dbg !14815
  %80 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14816
  %81 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %80, i32 0, i32 0, !dbg !14817
  %82 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %81, i32 0, i32 0, !dbg !14818
  %83 = bitcast %union.anon.192* %82 to %struct._dnode.191*, !dbg !14818
  call void @sys_dlist_insert(%struct._dnode.191* noundef %79, %struct._dnode.191* noundef %83) #13, !dbg !14819
  br label %116, !dbg !14820

84:                                               ; preds = %70
  %85 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14807
  %86 = icmp ne %struct.k_thread.203* %85, null, !dbg !14807
  br i1 %86, label %87, label %107, !dbg !14807

87:                                               ; preds = %84
  %88 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14807
  %89 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14807
  %90 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %89, i32 0, i32 0, !dbg !14807
  %91 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %90, i32 0, i32 0, !dbg !14807
  %92 = bitcast %union.anon.192* %91 to %struct._dnode.191*, !dbg !14807
  %93 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %88, %struct._dnode.191* noundef %92) #13, !dbg !14807
  %94 = icmp ne %struct._dnode.191* %93, null, !dbg !14807
  br i1 %94, label %95, label %104, !dbg !14807

95:                                               ; preds = %87
  %96 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14807
  %97 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14807
  %98 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %97, i32 0, i32 0, !dbg !14807
  %99 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %98, i32 0, i32 0, !dbg !14807
  %100 = bitcast %union.anon.192* %99 to %struct._dnode.191*, !dbg !14807
  %101 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %96, %struct._dnode.191* noundef %100) #13, !dbg !14807
  %102 = bitcast %struct._dnode.191* %101 to i8*, !dbg !14807
  %103 = bitcast i8* %102 to %struct.k_thread.203*, !dbg !14807
  br label %105, !dbg !14807

104:                                              ; preds = %87
  br label %105, !dbg !14807

105:                                              ; preds = %104, %95
  %106 = phi %struct.k_thread.203* [ %103, %95 ], [ null, %104 ], !dbg !14807
  br label %108, !dbg !14807

107:                                              ; preds = %84
  br label %108, !dbg !14807

108:                                              ; preds = %107, %105
  %109 = phi %struct.k_thread.203* [ %106, %105 ], [ null, %107 ], !dbg !14807
  store %struct.k_thread.203* %109, %struct.k_thread.203** %3, align 4, !dbg !14807
  br label %67, !dbg !14807, !llvm.loop !14821

110:                                              ; preds = %67
  %111 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14823
  %112 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14824
  %113 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %112, i32 0, i32 0, !dbg !14825
  %114 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %113, i32 0, i32 0, !dbg !14826
  %115 = bitcast %union.anon.192* %114 to %struct._dnode.191*, !dbg !14826
  call void @sys_dlist_append(%struct._dnode.191* noundef %111, %struct._dnode.191* noundef %115) #13, !dbg !14827
  br label %116, !dbg !14828

116:                                              ; preds = %75, %110
  br label %117, !dbg !14829

117:                                              ; preds = %41, %116
  call void @update_cache(i32 noundef 1) #10, !dbg !14830
  %118 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14831
  %119 = bitcast i32* %118 to [1 x i32]*, !dbg !14831
  %120 = load [1 x i32], [1 x i32]* %119, align 4, !dbg !14831
  %121 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %122 = bitcast i32* %121 to [1 x i32]*
  store [1 x i32] %120, [1 x i32]* %122, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !13302, metadata !DIExpression()) #9, !dbg !14832
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13308, metadata !DIExpression()) #9, !dbg !14834
  %123 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !14835
  store %struct.k_spinlock.13* %123, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13311, metadata !DIExpression()) #9, !dbg !14836
  %124 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14838
  %125 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14839
  %126 = load i32, i32* %125, align 4, !dbg !14839
  %127 = call i32 @z_swap_irqlock(i32 noundef %126) #13, !dbg !14840
  ret void, !dbg !14841
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) #1 !dbg !14842 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14845, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.declare(metadata i64* %4, metadata !14847, metadata !DIExpression()), !dbg !14848
  br label %9, !dbg !14849

9:                                                ; preds = %1
  br label %10, !dbg !14850

10:                                               ; preds = %9
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14852
  %12 = load i64, i64* %11, align 8, !dbg !14852
  %13 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !14852
  store i64 -1, i64* %13, align 8, !dbg !14852
  %14 = icmp eq i64 %12, -1, !dbg !14852
  br i1 %14, label %15, label %19, !dbg !14854

15:                                               ; preds = %10
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14855
  call void @k_thread_suspend(%struct.k_thread.203* noundef %16) #10, !dbg !14857
  br label %17, !dbg !14858

17:                                               ; preds = %15
  br label %18, !dbg !14859

18:                                               ; preds = %17
  store i32 -1, i32* %2, align 4, !dbg !14861
  br label %31, !dbg !14861

19:                                               ; preds = %10
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14862
  %21 = load i64, i64* %20, align 8, !dbg !14862
  store i64 %21, i64* %4, align 8, !dbg !14863
  %22 = load i64, i64* %4, align 8, !dbg !14864
  %23 = call i32 @z_tick_sleep(i64 noundef %22) #10, !dbg !14865
  %24 = sext i32 %23 to i64, !dbg !14865
  store i64 %24, i64* %4, align 8, !dbg !14866
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14867, metadata !DIExpression()), !dbg !14868
  %25 = load i64, i64* %4, align 8, !dbg !14869
  %26 = call i64 @k_ticks_to_ms_floor64(i64 noundef %25) #10, !dbg !14870
  %27 = trunc i64 %26 to i32, !dbg !14870
  store i32 %27, i32* %6, align 4, !dbg !14868
  br label %28, !dbg !14871

28:                                               ; preds = %19
  br label %29, !dbg !14872

29:                                               ; preds = %28
  %30 = load i32, i32* %6, align 4, !dbg !14874
  store i32 %30, i32* %2, align 4, !dbg !14875
  br label %31, !dbg !14875

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %2, align 4, !dbg !14876
  ret i32 %32, !dbg !14876
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !14877 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14880, metadata !DIExpression()), !dbg !14881
  br label %3, !dbg !14882

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14883, !srcloc !14885
  br label %4, !dbg !14883

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14886
  call void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %5) #10, !dbg !14887
  ret void, !dbg !14888
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_tick_sleep(i64 noundef %0) #1 !dbg !14889 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %union.argument_value, align 8
  %16 = alloca %union.anon.68, align 4
  store i64 %0, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !14892, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14894, metadata !DIExpression()), !dbg !14895
  br label %17, !dbg !14896

17:                                               ; preds = %1
  br label %18, !dbg !14897

18:                                               ; preds = %17
  %19 = load i64, i64* %9, align 8, !dbg !14901
  %20 = icmp eq i64 %19, 0, !dbg !14903
  br i1 %20, label %21, label %22, !dbg !14904

21:                                               ; preds = %18
  call void @k_yield() #10, !dbg !14905
  store i32 0, i32* %8, align 4, !dbg !14907
  br label %74, !dbg !14907

22:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %union.argument_value* %15, metadata !14908, metadata !DIExpression()), !dbg !14909
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !14910
  %24 = load i64, i64* %9, align 8, !dbg !14910
  store i64 %24, i64* %23, align 8, !dbg !14910
  %25 = load i64, i64* %9, align 8, !dbg !14911
  %26 = sub nsw i64 -2, %25, !dbg !14911
  %27 = icmp sle i64 %26, 0, !dbg !14913
  br i1 %27, label %28, label %34, !dbg !14914

28:                                               ; preds = %22
  %29 = load i64, i64* %9, align 8, !dbg !14915
  %30 = call i32 @sys_clock_tick_get_32() #10, !dbg !14917
  %31 = zext i32 %30 to i64, !dbg !14917
  %32 = add nsw i64 %29, %31, !dbg !14918
  %33 = trunc i64 %32 to i32, !dbg !14915
  store i32 %33, i32* %10, align 4, !dbg !14919
  br label %38, !dbg !14920

34:                                               ; preds = %22
  %35 = load i64, i64* %9, align 8, !dbg !14921
  %36 = sub nsw i64 -2, %35, !dbg !14921
  %37 = trunc i64 %36 to i32, !dbg !14921
  store i32 %37, i32* %10, align 4, !dbg !14923
  br label %38

38:                                               ; preds = %34, %28
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !14924, metadata !DIExpression()), !dbg !14925
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12216, metadata !DIExpression()) #9, !dbg !14926
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14928
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12224, metadata !DIExpression()) #9, !dbg !14929
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12226, metadata !DIExpression()) #9, !dbg !14930
  %40 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14932, !srcloc !12231
  store i32 %40, i32* %2, align 4, !dbg !14932
  %41 = load i32, i32* %2, align 4, !dbg !14933
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14934
  store i32 %41, i32* %42, align 4, !dbg !14935
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14936
  %44 = load i32, i32* %43, align 4, !dbg !14936
  %45 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14937
  store i32 %44, i32* %45, align 4, !dbg !14937
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14938
  store %struct.k_thread.203* %46, %struct.k_thread.203** @pending_current, align 4, !dbg !14939
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14940
  call void @unready_thread(%struct.k_thread.203* noundef %47) #10, !dbg !14941
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14942
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !14943
  %50 = bitcast i64* %49 to [1 x i64]*, !dbg !14943
  %51 = load [1 x i64], [1 x i64]* %50, align 8, !dbg !14943
  call void @z_add_thread_timeout.68(%struct.k_thread.203* noundef %48, [1 x i64] %51) #10, !dbg !14943
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14944
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !14945
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14946
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !14946
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !14946
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13302, metadata !DIExpression()) #9, !dbg !14947
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13308, metadata !DIExpression()) #9, !dbg !14949
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14950
  store %struct.k_spinlock.13* %58, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !13311, metadata !DIExpression()) #9, !dbg !14951
  %59 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !14953
  %60 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14954
  %61 = load i32, i32* %60, align 4, !dbg !14954
  %62 = call i32 @z_swap_irqlock(i32 noundef %61) #13, !dbg !14955
  %63 = load i32, i32* %10, align 4, !dbg !14956
  %64 = zext i32 %63 to i64, !dbg !14957
  %65 = call i32 @sys_clock_tick_get_32() #10, !dbg !14958
  %66 = zext i32 %65 to i64, !dbg !14958
  %67 = sub nsw i64 %64, %66, !dbg !14959
  store i64 %67, i64* %9, align 8, !dbg !14960
  %68 = load i64, i64* %9, align 8, !dbg !14961
  %69 = icmp sgt i64 %68, 0, !dbg !14963
  br i1 %69, label %70, label %73, !dbg !14964

70:                                               ; preds = %38
  %71 = load i64, i64* %9, align 8, !dbg !14965
  %72 = trunc i64 %71 to i32, !dbg !14965
  store i32 %72, i32* %8, align 4, !dbg !14967
  br label %74, !dbg !14967

73:                                               ; preds = %38
  store i32 0, i32* %8, align 4, !dbg !14968
  br label %74, !dbg !14968

74:                                               ; preds = %73, %70, %21
  %75 = load i32, i32* %8, align 4, !dbg !14969
  ret i32 %75, !dbg !14969
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64 noundef %0) #1 !dbg !14970 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !14971, metadata !DIExpression()), !dbg !14972
  %15 = load i64, i64* %14, align 8, !dbg !14973
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12288, metadata !DIExpression()), !dbg !14974
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12292, metadata !DIExpression()), !dbg !14976
  store i32 1000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12294, metadata !DIExpression()), !dbg !14977
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12296, metadata !DIExpression()), !dbg !14978
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12298, metadata !DIExpression()), !dbg !14979
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12300, metadata !DIExpression()), !dbg !14980
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12302, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12304, metadata !DIExpression()), !dbg !14982
  %16 = load i8, i8* %6, align 1, !dbg !14983
  %17 = trunc i8 %16 to i1, !dbg !14983
  br i1 %17, label %18, label %27, !dbg !14984

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !14985
  %20 = load i32, i32* %4, align 4, !dbg !14986
  %21 = icmp ugt i32 %19, %20, !dbg !14987
  br i1 %21, label %22, label %27, !dbg !14988

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !14989
  %24 = load i32, i32* %4, align 4, !dbg !14990
  %25 = urem i32 %23, %24, !dbg !14991
  %26 = icmp eq i32 %25, 0, !dbg !14992
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !14993
  %29 = zext i1 %28 to i8, !dbg !14982
  store i8 %29, i8* %10, align 1, !dbg !14982
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12317, metadata !DIExpression()), !dbg !14994
  %30 = load i8, i8* %6, align 1, !dbg !14995
  %31 = trunc i8 %30 to i1, !dbg !14995
  br i1 %31, label %32, label %41, !dbg !14996

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !14997
  %34 = load i32, i32* %5, align 4, !dbg !14998
  %35 = icmp ugt i32 %33, %34, !dbg !14999
  br i1 %35, label %36, label %41, !dbg !15000

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15001
  %38 = load i32, i32* %5, align 4, !dbg !15002
  %39 = urem i32 %37, %38, !dbg !15003
  %40 = icmp eq i32 %39, 0, !dbg !15004
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !14993
  %43 = zext i1 %42 to i8, !dbg !14994
  store i8 %43, i8* %11, align 1, !dbg !14994
  %44 = load i32, i32* %4, align 4, !dbg !15005
  %45 = load i32, i32* %5, align 4, !dbg !15006
  %46 = icmp eq i32 %44, %45, !dbg !15007
  br i1 %46, label %47, label %58, !dbg !15008

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15009
  %49 = trunc i8 %48 to i1, !dbg !15009
  br i1 %49, label %50, label %54, !dbg !15009

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15010
  %52 = trunc i64 %51 to i32, !dbg !15011
  %53 = zext i32 %52 to i64, !dbg !15012
  br label %56, !dbg !15009

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15013
  br label %56, !dbg !15009

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15009
  store i64 %57, i64* %2, align 8, !dbg !15014
  br label %195, !dbg !15014

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12341, metadata !DIExpression()), !dbg !15015
  store i64 0, i64* %12, align 8, !dbg !15015
  %59 = load i8, i8* %10, align 1, !dbg !15016
  %60 = trunc i8 %59 to i1, !dbg !15016
  br i1 %60, label %86, label %61, !dbg !15017

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12346, metadata !DIExpression()), !dbg !15018
  %62 = load i8, i8* %11, align 1, !dbg !15019
  %63 = trunc i8 %62 to i1, !dbg !15019
  br i1 %63, label %64, label %68, !dbg !15019

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15020
  %66 = load i32, i32* %5, align 4, !dbg !15021
  %67 = udiv i32 %65, %66, !dbg !15022
  br label %70, !dbg !15019

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15023
  br label %70, !dbg !15019

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15019
  store i32 %71, i32* %13, align 4, !dbg !15018
  %72 = load i8, i8* %8, align 1, !dbg !15024
  %73 = trunc i8 %72 to i1, !dbg !15024
  br i1 %73, label %74, label %78, !dbg !15025

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15026
  %76 = sub i32 %75, 1, !dbg !15027
  %77 = zext i32 %76 to i64, !dbg !15026
  store i64 %77, i64* %12, align 8, !dbg !15028
  br label %78, !dbg !15029

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15030
  %80 = trunc i8 %79 to i1, !dbg !15030
  br i1 %80, label %81, label %85, !dbg !15031

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15032
  %83 = udiv i32 %82, 2, !dbg !15033
  %84 = zext i32 %83 to i64, !dbg !15032
  store i64 %84, i64* %12, align 8, !dbg !15034
  br label %85, !dbg !15035

85:                                               ; preds = %81, %78
  br label %86, !dbg !15036

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15037
  %88 = trunc i8 %87 to i1, !dbg !15037
  br i1 %88, label %89, label %114, !dbg !15038

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15039
  %91 = load i64, i64* %3, align 8, !dbg !15040
  %92 = add i64 %91, %90, !dbg !15040
  store i64 %92, i64* %3, align 8, !dbg !15040
  %93 = load i8, i8* %7, align 1, !dbg !15041
  %94 = trunc i8 %93 to i1, !dbg !15041
  br i1 %94, label %95, label %106, !dbg !15042

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15043
  %97 = icmp ult i64 %96, 4294967296, !dbg !15044
  br i1 %97, label %98, label %106, !dbg !15045

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15046
  %100 = trunc i64 %99 to i32, !dbg !15047
  %101 = load i32, i32* %4, align 4, !dbg !15048
  %102 = load i32, i32* %5, align 4, !dbg !15049
  %103 = udiv i32 %101, %102, !dbg !15050
  %104 = udiv i32 %100, %103, !dbg !15051
  %105 = zext i32 %104 to i64, !dbg !15052
  store i64 %105, i64* %2, align 8, !dbg !15053
  br label %195, !dbg !15053

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15054
  %108 = load i32, i32* %4, align 4, !dbg !15055
  %109 = zext i32 %108 to i64, !dbg !15056
  %110 = load i32, i32* %5, align 4, !dbg !15057
  %111 = zext i32 %110 to i64, !dbg !15057
  %112 = udiv i64 %109, %111, !dbg !15058
  %113 = udiv i64 %107, %112, !dbg !15059
  store i64 %113, i64* %2, align 8, !dbg !15060
  br label %195, !dbg !15060

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15061
  %116 = trunc i8 %115 to i1, !dbg !15061
  br i1 %116, label %117, label %136, !dbg !15062

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15063
  %119 = trunc i8 %118 to i1, !dbg !15063
  br i1 %119, label %120, label %128, !dbg !15064

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15065
  %122 = trunc i64 %121 to i32, !dbg !15066
  %123 = load i32, i32* %5, align 4, !dbg !15067
  %124 = load i32, i32* %4, align 4, !dbg !15068
  %125 = udiv i32 %123, %124, !dbg !15069
  %126 = mul i32 %122, %125, !dbg !15070
  %127 = zext i32 %126 to i64, !dbg !15071
  store i64 %127, i64* %2, align 8, !dbg !15072
  br label %195, !dbg !15072

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15073
  %130 = load i32, i32* %5, align 4, !dbg !15074
  %131 = zext i32 %130 to i64, !dbg !15075
  %132 = load i32, i32* %4, align 4, !dbg !15076
  %133 = zext i32 %132 to i64, !dbg !15076
  %134 = udiv i64 %131, %133, !dbg !15077
  %135 = mul i64 %129, %134, !dbg !15078
  store i64 %135, i64* %2, align 8, !dbg !15079
  br label %195, !dbg !15079

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15080
  %138 = trunc i8 %137 to i1, !dbg !15080
  br i1 %138, label %139, label %151, !dbg !15081

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15082
  %141 = load i32, i32* %5, align 4, !dbg !15083
  %142 = zext i32 %141 to i64, !dbg !15083
  %143 = mul i64 %140, %142, !dbg !15084
  %144 = load i64, i64* %12, align 8, !dbg !15085
  %145 = add i64 %143, %144, !dbg !15086
  %146 = load i32, i32* %4, align 4, !dbg !15087
  %147 = zext i32 %146 to i64, !dbg !15087
  %148 = udiv i64 %145, %147, !dbg !15088
  %149 = trunc i64 %148 to i32, !dbg !15089
  %150 = zext i32 %149 to i64, !dbg !15089
  store i64 %150, i64* %2, align 8, !dbg !15090
  br label %195, !dbg !15090

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15091
  %153 = trunc i8 %152 to i1, !dbg !15091
  br i1 %153, label %154, label %174, !dbg !15092

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15093
  %156 = zext i32 %155 to i64, !dbg !15093
  %157 = mul i64 31536000, %156, !dbg !15093
  %158 = add i64 %157, 4294967294, !dbg !15093
  %159 = udiv i64 %158, 4294967295, !dbg !15093
  %160 = load i32, i32* %5, align 4, !dbg !15093
  %161 = zext i32 %160 to i64, !dbg !15093
  %162 = mul i64 %159, %161, !dbg !15093
  %163 = icmp ule i64 %162, 4294967295, !dbg !15093
  br i1 %163, label %164, label %174, !dbg !15094

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15095
  %166 = load i32, i32* %5, align 4, !dbg !15096
  %167 = zext i32 %166 to i64, !dbg !15096
  %168 = mul i64 %165, %167, !dbg !15097
  %169 = load i64, i64* %12, align 8, !dbg !15098
  %170 = add i64 %168, %169, !dbg !15099
  %171 = load i32, i32* %4, align 4, !dbg !15100
  %172 = zext i32 %171 to i64, !dbg !15100
  %173 = udiv i64 %170, %172, !dbg !15101
  store i64 %173, i64* %2, align 8, !dbg !15102
  br label %195, !dbg !15102

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15103
  %176 = load i32, i32* %4, align 4, !dbg !15104
  %177 = zext i32 %176 to i64, !dbg !15104
  %178 = udiv i64 %175, %177, !dbg !15105
  %179 = load i32, i32* %5, align 4, !dbg !15106
  %180 = zext i32 %179 to i64, !dbg !15106
  %181 = mul i64 %178, %180, !dbg !15107
  %182 = load i64, i64* %3, align 8, !dbg !15108
  %183 = load i32, i32* %4, align 4, !dbg !15109
  %184 = zext i32 %183 to i64, !dbg !15109
  %185 = urem i64 %182, %184, !dbg !15110
  %186 = load i32, i32* %5, align 4, !dbg !15111
  %187 = zext i32 %186 to i64, !dbg !15111
  %188 = mul i64 %185, %187, !dbg !15112
  %189 = load i64, i64* %12, align 8, !dbg !15113
  %190 = add i64 %188, %189, !dbg !15114
  %191 = load i32, i32* %4, align 4, !dbg !15115
  %192 = zext i32 %191 to i64, !dbg !15115
  %193 = udiv i64 %190, %192, !dbg !15116
  %194 = add i64 %181, %193, !dbg !15117
  store i64 %194, i64* %2, align 8, !dbg !15118
  br label %195, !dbg !15118

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15119
  ret i64 %196, !dbg !15120
}

; Function Attrs: noinline nounwind optnone
define internal void @k_yield() #1 !dbg !15121 {
  br label %1, !dbg !15122

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15123, !srcloc !15125
  br label %2, !dbg !15123

2:                                                ; preds = %1
  call void @z_impl_k_yield() #10, !dbg !15126
  ret void, !dbg !15127
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) #1 !dbg !15128 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15131, metadata !DIExpression()), !dbg !15132
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15133, metadata !DIExpression()), !dbg !15134
  br label %4, !dbg !15135

4:                                                ; preds = %1
  br label %5, !dbg !15136

5:                                                ; preds = %4
  %6 = load i32, i32* %2, align 4, !dbg !15138
  %7 = sext i32 %6 to i64, !dbg !15138
  %8 = call i64 @k_us_to_ticks_ceil64(i64 noundef %7) #10, !dbg !15139
  %9 = trunc i64 %8 to i32, !dbg !15139
  store i32 %9, i32* %3, align 4, !dbg !15140
  %10 = load i32, i32* %3, align 4, !dbg !15141
  %11 = sext i32 %10 to i64, !dbg !15141
  %12 = call i32 @z_tick_sleep(i64 noundef %11) #10, !dbg !15142
  store i32 %12, i32* %3, align 4, !dbg !15143
  br label %13, !dbg !15144

13:                                               ; preds = %5
  br label %14, !dbg !15145

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4, !dbg !15147
  %16 = sext i32 %15 to i64, !dbg !15147
  %17 = call i64 @k_ticks_to_us_floor64(i64 noundef %16) #10, !dbg !15148
  %18 = trunc i64 %17 to i32, !dbg !15148
  ret i32 %18, !dbg !15149
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_us_to_ticks_ceil64(i64 noundef %0) #1 !dbg !15150 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15151, metadata !DIExpression()), !dbg !15152
  %15 = load i64, i64* %14, align 8, !dbg !15153
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12288, metadata !DIExpression()), !dbg !15154
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12292, metadata !DIExpression()), !dbg !15156
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12294, metadata !DIExpression()), !dbg !15157
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12296, metadata !DIExpression()), !dbg !15158
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12298, metadata !DIExpression()), !dbg !15159
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12300, metadata !DIExpression()), !dbg !15160
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12302, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12304, metadata !DIExpression()), !dbg !15162
  %16 = load i8, i8* %6, align 1, !dbg !15163
  %17 = trunc i8 %16 to i1, !dbg !15163
  br i1 %17, label %18, label %27, !dbg !15164

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15165
  %20 = load i32, i32* %4, align 4, !dbg !15166
  %21 = icmp ugt i32 %19, %20, !dbg !15167
  br i1 %21, label %22, label %27, !dbg !15168

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15169
  %24 = load i32, i32* %4, align 4, !dbg !15170
  %25 = urem i32 %23, %24, !dbg !15171
  %26 = icmp eq i32 %25, 0, !dbg !15172
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15173
  %29 = zext i1 %28 to i8, !dbg !15162
  store i8 %29, i8* %10, align 1, !dbg !15162
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12317, metadata !DIExpression()), !dbg !15174
  %30 = load i8, i8* %6, align 1, !dbg !15175
  %31 = trunc i8 %30 to i1, !dbg !15175
  br i1 %31, label %32, label %41, !dbg !15176

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15177
  %34 = load i32, i32* %5, align 4, !dbg !15178
  %35 = icmp ugt i32 %33, %34, !dbg !15179
  br i1 %35, label %36, label %41, !dbg !15180

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15181
  %38 = load i32, i32* %5, align 4, !dbg !15182
  %39 = urem i32 %37, %38, !dbg !15183
  %40 = icmp eq i32 %39, 0, !dbg !15184
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15173
  %43 = zext i1 %42 to i8, !dbg !15174
  store i8 %43, i8* %11, align 1, !dbg !15174
  %44 = load i32, i32* %4, align 4, !dbg !15185
  %45 = load i32, i32* %5, align 4, !dbg !15186
  %46 = icmp eq i32 %44, %45, !dbg !15187
  br i1 %46, label %47, label %58, !dbg !15188

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15189
  %49 = trunc i8 %48 to i1, !dbg !15189
  br i1 %49, label %50, label %54, !dbg !15189

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15190
  %52 = trunc i64 %51 to i32, !dbg !15191
  %53 = zext i32 %52 to i64, !dbg !15192
  br label %56, !dbg !15189

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15193
  br label %56, !dbg !15189

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15189
  store i64 %57, i64* %2, align 8, !dbg !15194
  br label %195, !dbg !15194

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12341, metadata !DIExpression()), !dbg !15195
  store i64 0, i64* %12, align 8, !dbg !15195
  %59 = load i8, i8* %10, align 1, !dbg !15196
  %60 = trunc i8 %59 to i1, !dbg !15196
  br i1 %60, label %86, label %61, !dbg !15197

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12346, metadata !DIExpression()), !dbg !15198
  %62 = load i8, i8* %11, align 1, !dbg !15199
  %63 = trunc i8 %62 to i1, !dbg !15199
  br i1 %63, label %64, label %68, !dbg !15199

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15200
  %66 = load i32, i32* %5, align 4, !dbg !15201
  %67 = udiv i32 %65, %66, !dbg !15202
  br label %70, !dbg !15199

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15203
  br label %70, !dbg !15199

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15199
  store i32 %71, i32* %13, align 4, !dbg !15198
  %72 = load i8, i8* %8, align 1, !dbg !15204
  %73 = trunc i8 %72 to i1, !dbg !15204
  br i1 %73, label %74, label %78, !dbg !15205

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15206
  %76 = sub i32 %75, 1, !dbg !15207
  %77 = zext i32 %76 to i64, !dbg !15206
  store i64 %77, i64* %12, align 8, !dbg !15208
  br label %78, !dbg !15209

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15210
  %80 = trunc i8 %79 to i1, !dbg !15210
  br i1 %80, label %81, label %85, !dbg !15211

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15212
  %83 = udiv i32 %82, 2, !dbg !15213
  %84 = zext i32 %83 to i64, !dbg !15212
  store i64 %84, i64* %12, align 8, !dbg !15214
  br label %85, !dbg !15215

85:                                               ; preds = %81, %78
  br label %86, !dbg !15216

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15217
  %88 = trunc i8 %87 to i1, !dbg !15217
  br i1 %88, label %89, label %114, !dbg !15218

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15219
  %91 = load i64, i64* %3, align 8, !dbg !15220
  %92 = add i64 %91, %90, !dbg !15220
  store i64 %92, i64* %3, align 8, !dbg !15220
  %93 = load i8, i8* %7, align 1, !dbg !15221
  %94 = trunc i8 %93 to i1, !dbg !15221
  br i1 %94, label %95, label %106, !dbg !15222

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15223
  %97 = icmp ult i64 %96, 4294967296, !dbg !15224
  br i1 %97, label %98, label %106, !dbg !15225

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15226
  %100 = trunc i64 %99 to i32, !dbg !15227
  %101 = load i32, i32* %4, align 4, !dbg !15228
  %102 = load i32, i32* %5, align 4, !dbg !15229
  %103 = udiv i32 %101, %102, !dbg !15230
  %104 = udiv i32 %100, %103, !dbg !15231
  %105 = zext i32 %104 to i64, !dbg !15232
  store i64 %105, i64* %2, align 8, !dbg !15233
  br label %195, !dbg !15233

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15234
  %108 = load i32, i32* %4, align 4, !dbg !15235
  %109 = zext i32 %108 to i64, !dbg !15236
  %110 = load i32, i32* %5, align 4, !dbg !15237
  %111 = zext i32 %110 to i64, !dbg !15237
  %112 = udiv i64 %109, %111, !dbg !15238
  %113 = udiv i64 %107, %112, !dbg !15239
  store i64 %113, i64* %2, align 8, !dbg !15240
  br label %195, !dbg !15240

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15241
  %116 = trunc i8 %115 to i1, !dbg !15241
  br i1 %116, label %117, label %136, !dbg !15242

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15243
  %119 = trunc i8 %118 to i1, !dbg !15243
  br i1 %119, label %120, label %128, !dbg !15244

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15245
  %122 = trunc i64 %121 to i32, !dbg !15246
  %123 = load i32, i32* %5, align 4, !dbg !15247
  %124 = load i32, i32* %4, align 4, !dbg !15248
  %125 = udiv i32 %123, %124, !dbg !15249
  %126 = mul i32 %122, %125, !dbg !15250
  %127 = zext i32 %126 to i64, !dbg !15251
  store i64 %127, i64* %2, align 8, !dbg !15252
  br label %195, !dbg !15252

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15253
  %130 = load i32, i32* %5, align 4, !dbg !15254
  %131 = zext i32 %130 to i64, !dbg !15255
  %132 = load i32, i32* %4, align 4, !dbg !15256
  %133 = zext i32 %132 to i64, !dbg !15256
  %134 = udiv i64 %131, %133, !dbg !15257
  %135 = mul i64 %129, %134, !dbg !15258
  store i64 %135, i64* %2, align 8, !dbg !15259
  br label %195, !dbg !15259

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15260
  %138 = trunc i8 %137 to i1, !dbg !15260
  br i1 %138, label %139, label %151, !dbg !15261

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15262
  %141 = load i32, i32* %5, align 4, !dbg !15263
  %142 = zext i32 %141 to i64, !dbg !15263
  %143 = mul i64 %140, %142, !dbg !15264
  %144 = load i64, i64* %12, align 8, !dbg !15265
  %145 = add i64 %143, %144, !dbg !15266
  %146 = load i32, i32* %4, align 4, !dbg !15267
  %147 = zext i32 %146 to i64, !dbg !15267
  %148 = udiv i64 %145, %147, !dbg !15268
  %149 = trunc i64 %148 to i32, !dbg !15269
  %150 = zext i32 %149 to i64, !dbg !15269
  store i64 %150, i64* %2, align 8, !dbg !15270
  br label %195, !dbg !15270

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15271
  %153 = trunc i8 %152 to i1, !dbg !15271
  br i1 %153, label %154, label %174, !dbg !15272

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15273
  %156 = zext i32 %155 to i64, !dbg !15273
  %157 = mul i64 31536000, %156, !dbg !15273
  %158 = add i64 %157, 4294967294, !dbg !15273
  %159 = udiv i64 %158, 4294967295, !dbg !15273
  %160 = load i32, i32* %5, align 4, !dbg !15273
  %161 = zext i32 %160 to i64, !dbg !15273
  %162 = mul i64 %159, %161, !dbg !15273
  %163 = icmp ule i64 %162, 4294967295, !dbg !15273
  br i1 %163, label %164, label %174, !dbg !15274

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15275
  %166 = load i32, i32* %5, align 4, !dbg !15276
  %167 = zext i32 %166 to i64, !dbg !15276
  %168 = mul i64 %165, %167, !dbg !15277
  %169 = load i64, i64* %12, align 8, !dbg !15278
  %170 = add i64 %168, %169, !dbg !15279
  %171 = load i32, i32* %4, align 4, !dbg !15280
  %172 = zext i32 %171 to i64, !dbg !15280
  %173 = udiv i64 %170, %172, !dbg !15281
  store i64 %173, i64* %2, align 8, !dbg !15282
  br label %195, !dbg !15282

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15283
  %176 = load i32, i32* %4, align 4, !dbg !15284
  %177 = zext i32 %176 to i64, !dbg !15284
  %178 = udiv i64 %175, %177, !dbg !15285
  %179 = load i32, i32* %5, align 4, !dbg !15286
  %180 = zext i32 %179 to i64, !dbg !15286
  %181 = mul i64 %178, %180, !dbg !15287
  %182 = load i64, i64* %3, align 8, !dbg !15288
  %183 = load i32, i32* %4, align 4, !dbg !15289
  %184 = zext i32 %183 to i64, !dbg !15289
  %185 = urem i64 %182, %184, !dbg !15290
  %186 = load i32, i32* %5, align 4, !dbg !15291
  %187 = zext i32 %186 to i64, !dbg !15291
  %188 = mul i64 %185, %187, !dbg !15292
  %189 = load i64, i64* %12, align 8, !dbg !15293
  %190 = add i64 %188, %189, !dbg !15294
  %191 = load i32, i32* %4, align 4, !dbg !15295
  %192 = zext i32 %191 to i64, !dbg !15295
  %193 = udiv i64 %190, %192, !dbg !15296
  %194 = add i64 %181, %193, !dbg !15297
  store i64 %194, i64* %2, align 8, !dbg !15298
  br label %195, !dbg !15298

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15299
  ret i64 %196, !dbg !15300
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_us_floor64(i64 noundef %0) #1 !dbg !15301 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15302, metadata !DIExpression()), !dbg !15303
  %15 = load i64, i64* %14, align 8, !dbg !15304
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12288, metadata !DIExpression()), !dbg !15305
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12292, metadata !DIExpression()), !dbg !15307
  store i32 1000000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12294, metadata !DIExpression()), !dbg !15308
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12296, metadata !DIExpression()), !dbg !15309
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12298, metadata !DIExpression()), !dbg !15310
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12300, metadata !DIExpression()), !dbg !15311
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12302, metadata !DIExpression()), !dbg !15312
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12304, metadata !DIExpression()), !dbg !15313
  %16 = load i8, i8* %6, align 1, !dbg !15314
  %17 = trunc i8 %16 to i1, !dbg !15314
  br i1 %17, label %18, label %27, !dbg !15315

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15316
  %20 = load i32, i32* %4, align 4, !dbg !15317
  %21 = icmp ugt i32 %19, %20, !dbg !15318
  br i1 %21, label %22, label %27, !dbg !15319

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15320
  %24 = load i32, i32* %4, align 4, !dbg !15321
  %25 = urem i32 %23, %24, !dbg !15322
  %26 = icmp eq i32 %25, 0, !dbg !15323
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15324
  %29 = zext i1 %28 to i8, !dbg !15313
  store i8 %29, i8* %10, align 1, !dbg !15313
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12317, metadata !DIExpression()), !dbg !15325
  %30 = load i8, i8* %6, align 1, !dbg !15326
  %31 = trunc i8 %30 to i1, !dbg !15326
  br i1 %31, label %32, label %41, !dbg !15327

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15328
  %34 = load i32, i32* %5, align 4, !dbg !15329
  %35 = icmp ugt i32 %33, %34, !dbg !15330
  br i1 %35, label %36, label %41, !dbg !15331

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15332
  %38 = load i32, i32* %5, align 4, !dbg !15333
  %39 = urem i32 %37, %38, !dbg !15334
  %40 = icmp eq i32 %39, 0, !dbg !15335
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15324
  %43 = zext i1 %42 to i8, !dbg !15325
  store i8 %43, i8* %11, align 1, !dbg !15325
  %44 = load i32, i32* %4, align 4, !dbg !15336
  %45 = load i32, i32* %5, align 4, !dbg !15337
  %46 = icmp eq i32 %44, %45, !dbg !15338
  br i1 %46, label %47, label %58, !dbg !15339

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15340
  %49 = trunc i8 %48 to i1, !dbg !15340
  br i1 %49, label %50, label %54, !dbg !15340

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15341
  %52 = trunc i64 %51 to i32, !dbg !15342
  %53 = zext i32 %52 to i64, !dbg !15343
  br label %56, !dbg !15340

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15344
  br label %56, !dbg !15340

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15340
  store i64 %57, i64* %2, align 8, !dbg !15345
  br label %195, !dbg !15345

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12341, metadata !DIExpression()), !dbg !15346
  store i64 0, i64* %12, align 8, !dbg !15346
  %59 = load i8, i8* %10, align 1, !dbg !15347
  %60 = trunc i8 %59 to i1, !dbg !15347
  br i1 %60, label %86, label %61, !dbg !15348

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12346, metadata !DIExpression()), !dbg !15349
  %62 = load i8, i8* %11, align 1, !dbg !15350
  %63 = trunc i8 %62 to i1, !dbg !15350
  br i1 %63, label %64, label %68, !dbg !15350

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15351
  %66 = load i32, i32* %5, align 4, !dbg !15352
  %67 = udiv i32 %65, %66, !dbg !15353
  br label %70, !dbg !15350

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15354
  br label %70, !dbg !15350

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15350
  store i32 %71, i32* %13, align 4, !dbg !15349
  %72 = load i8, i8* %8, align 1, !dbg !15355
  %73 = trunc i8 %72 to i1, !dbg !15355
  br i1 %73, label %74, label %78, !dbg !15356

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15357
  %76 = sub i32 %75, 1, !dbg !15358
  %77 = zext i32 %76 to i64, !dbg !15357
  store i64 %77, i64* %12, align 8, !dbg !15359
  br label %78, !dbg !15360

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15361
  %80 = trunc i8 %79 to i1, !dbg !15361
  br i1 %80, label %81, label %85, !dbg !15362

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15363
  %83 = udiv i32 %82, 2, !dbg !15364
  %84 = zext i32 %83 to i64, !dbg !15363
  store i64 %84, i64* %12, align 8, !dbg !15365
  br label %85, !dbg !15366

85:                                               ; preds = %81, %78
  br label %86, !dbg !15367

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15368
  %88 = trunc i8 %87 to i1, !dbg !15368
  br i1 %88, label %89, label %114, !dbg !15369

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15370
  %91 = load i64, i64* %3, align 8, !dbg !15371
  %92 = add i64 %91, %90, !dbg !15371
  store i64 %92, i64* %3, align 8, !dbg !15371
  %93 = load i8, i8* %7, align 1, !dbg !15372
  %94 = trunc i8 %93 to i1, !dbg !15372
  br i1 %94, label %95, label %106, !dbg !15373

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15374
  %97 = icmp ult i64 %96, 4294967296, !dbg !15375
  br i1 %97, label %98, label %106, !dbg !15376

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15377
  %100 = trunc i64 %99 to i32, !dbg !15378
  %101 = load i32, i32* %4, align 4, !dbg !15379
  %102 = load i32, i32* %5, align 4, !dbg !15380
  %103 = udiv i32 %101, %102, !dbg !15381
  %104 = udiv i32 %100, %103, !dbg !15382
  %105 = zext i32 %104 to i64, !dbg !15383
  store i64 %105, i64* %2, align 8, !dbg !15384
  br label %195, !dbg !15384

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15385
  %108 = load i32, i32* %4, align 4, !dbg !15386
  %109 = zext i32 %108 to i64, !dbg !15387
  %110 = load i32, i32* %5, align 4, !dbg !15388
  %111 = zext i32 %110 to i64, !dbg !15388
  %112 = udiv i64 %109, %111, !dbg !15389
  %113 = udiv i64 %107, %112, !dbg !15390
  store i64 %113, i64* %2, align 8, !dbg !15391
  br label %195, !dbg !15391

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15392
  %116 = trunc i8 %115 to i1, !dbg !15392
  br i1 %116, label %117, label %136, !dbg !15393

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15394
  %119 = trunc i8 %118 to i1, !dbg !15394
  br i1 %119, label %120, label %128, !dbg !15395

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15396
  %122 = trunc i64 %121 to i32, !dbg !15397
  %123 = load i32, i32* %5, align 4, !dbg !15398
  %124 = load i32, i32* %4, align 4, !dbg !15399
  %125 = udiv i32 %123, %124, !dbg !15400
  %126 = mul i32 %122, %125, !dbg !15401
  %127 = zext i32 %126 to i64, !dbg !15402
  store i64 %127, i64* %2, align 8, !dbg !15403
  br label %195, !dbg !15403

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15404
  %130 = load i32, i32* %5, align 4, !dbg !15405
  %131 = zext i32 %130 to i64, !dbg !15406
  %132 = load i32, i32* %4, align 4, !dbg !15407
  %133 = zext i32 %132 to i64, !dbg !15407
  %134 = udiv i64 %131, %133, !dbg !15408
  %135 = mul i64 %129, %134, !dbg !15409
  store i64 %135, i64* %2, align 8, !dbg !15410
  br label %195, !dbg !15410

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15411
  %138 = trunc i8 %137 to i1, !dbg !15411
  br i1 %138, label %139, label %151, !dbg !15412

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15413
  %141 = load i32, i32* %5, align 4, !dbg !15414
  %142 = zext i32 %141 to i64, !dbg !15414
  %143 = mul i64 %140, %142, !dbg !15415
  %144 = load i64, i64* %12, align 8, !dbg !15416
  %145 = add i64 %143, %144, !dbg !15417
  %146 = load i32, i32* %4, align 4, !dbg !15418
  %147 = zext i32 %146 to i64, !dbg !15418
  %148 = udiv i64 %145, %147, !dbg !15419
  %149 = trunc i64 %148 to i32, !dbg !15420
  %150 = zext i32 %149 to i64, !dbg !15420
  store i64 %150, i64* %2, align 8, !dbg !15421
  br label %195, !dbg !15421

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15422
  %153 = trunc i8 %152 to i1, !dbg !15422
  br i1 %153, label %154, label %174, !dbg !15423

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15424
  %156 = zext i32 %155 to i64, !dbg !15424
  %157 = mul i64 31536000, %156, !dbg !15424
  %158 = add i64 %157, 4294967294, !dbg !15424
  %159 = udiv i64 %158, 4294967295, !dbg !15424
  %160 = load i32, i32* %5, align 4, !dbg !15424
  %161 = zext i32 %160 to i64, !dbg !15424
  %162 = mul i64 %159, %161, !dbg !15424
  %163 = icmp ule i64 %162, 4294967295, !dbg !15424
  br i1 %163, label %164, label %174, !dbg !15425

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15426
  %166 = load i32, i32* %5, align 4, !dbg !15427
  %167 = zext i32 %166 to i64, !dbg !15427
  %168 = mul i64 %165, %167, !dbg !15428
  %169 = load i64, i64* %12, align 8, !dbg !15429
  %170 = add i64 %168, %169, !dbg !15430
  %171 = load i32, i32* %4, align 4, !dbg !15431
  %172 = zext i32 %171 to i64, !dbg !15431
  %173 = udiv i64 %170, %172, !dbg !15432
  store i64 %173, i64* %2, align 8, !dbg !15433
  br label %195, !dbg !15433

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15434
  %176 = load i32, i32* %4, align 4, !dbg !15435
  %177 = zext i32 %176 to i64, !dbg !15435
  %178 = udiv i64 %175, %177, !dbg !15436
  %179 = load i32, i32* %5, align 4, !dbg !15437
  %180 = zext i32 %179 to i64, !dbg !15437
  %181 = mul i64 %178, %180, !dbg !15438
  %182 = load i64, i64* %3, align 8, !dbg !15439
  %183 = load i32, i32* %4, align 4, !dbg !15440
  %184 = zext i32 %183 to i64, !dbg !15440
  %185 = urem i64 %182, %184, !dbg !15441
  %186 = load i32, i32* %5, align 4, !dbg !15442
  %187 = zext i32 %186 to i64, !dbg !15442
  %188 = mul i64 %185, %187, !dbg !15443
  %189 = load i64, i64* %12, align 8, !dbg !15444
  %190 = add i64 %188, %189, !dbg !15445
  %191 = load i32, i32* %4, align 4, !dbg !15446
  %192 = zext i32 %191 to i64, !dbg !15446
  %193 = udiv i64 %190, %192, !dbg !15447
  %194 = add i64 %181, %193, !dbg !15448
  store i64 %194, i64* %2, align 8, !dbg !15449
  br label %195, !dbg !15449

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15450
  ret i64 %196, !dbg !15451
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_wakeup(%struct.k_thread.203* noundef %0) #1 !dbg !15452 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !15453, metadata !DIExpression()), !dbg !15454
  br label %4, !dbg !15455

4:                                                ; preds = %1
  br label %5, !dbg !15456

5:                                                ; preds = %4
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15458
  %7 = call zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %6) #10, !dbg !15460
  br i1 %7, label %8, label %9, !dbg !15461

8:                                                ; preds = %5
  br label %31, !dbg !15462

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15464
  %11 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %10) #10, !dbg !15466
  %12 = icmp slt i32 %11, 0, !dbg !15467
  br i1 %12, label %13, label %22, !dbg !15468

13:                                               ; preds = %9
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15469
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !15472
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !15473
  %17 = load i8, i8* %16, align 1, !dbg !15473
  %18 = zext i8 %17 to i32, !dbg !15469
  %19 = icmp ne i32 %18, 16, !dbg !15474
  br i1 %19, label %20, label %21, !dbg !15475

20:                                               ; preds = %13
  br label %31, !dbg !15476

21:                                               ; preds = %13
  br label %22, !dbg !15478

22:                                               ; preds = %21, %9
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15479
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %23) #10, !dbg !15480
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15481
  call void @z_ready_thread(%struct.k_thread.203* noundef %24) #10, !dbg !15482
  call void @flag_ipi() #10, !dbg !15483
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13354, metadata !DIExpression()) #9, !dbg !15484
  %25 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15488, !srcloc !13361
  store i32 %25, i32* %2, align 4, !dbg !15488
  %26 = load i32, i32* %2, align 4, !dbg !15489
  %27 = icmp ne i32 %26, 0, !dbg !15490
  %28 = zext i1 %27 to i64, !dbg !15490
  %29 = select i1 %27, i32 1, i32 0, !dbg !15490
  br i1 %27, label %31, label %30, !dbg !15491

30:                                               ; preds = %22
  call void @z_reschedule_unlocked() #10, !dbg !15492
  br label %31, !dbg !15494

31:                                               ; preds = %8, %20, %30, %22
  ret void, !dbg !15495
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %0) #1 !dbg !15496 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15497, metadata !DIExpression()), !dbg !15498
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15499
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !15500
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !15501
  %6 = load i8, i8* %5, align 1, !dbg !15501
  %7 = zext i8 %6 to i32, !dbg !15499
  %8 = and i32 %7, 2, !dbg !15502
  %9 = icmp ne i32 %8, 0, !dbg !15503
  ret i1 %9, !dbg !15504
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_z_current_get() #1 !dbg !15505 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !15508, metadata !DIExpression()), !dbg !15509
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15510
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !15509
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !15511
  ret %struct.k_thread.203* %3, !dbg !15512
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_is_preempt_thread() #1 !dbg !15513 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13354, metadata !DIExpression()) #9, !dbg !15514
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15517, !srcloc !13361
  store i32 %2, i32* %1, align 4, !dbg !15517
  %3 = load i32, i32* %1, align 4, !dbg !15518
  %4 = icmp ne i32 %3, 0, !dbg !15519
  %5 = zext i1 %4 to i64, !dbg !15519
  %6 = select i1 %4, i32 1, i32 0, !dbg !15519
  br i1 %4, label %11, label %7, !dbg !15520

7:                                                ; preds = %0
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15521
  %9 = call i32 @is_preempt(%struct.k_thread.203* noundef %8) #10, !dbg !15522
  %10 = icmp ne i32 %9, 0, !dbg !15520
  br label %11

11:                                               ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ], !dbg !15523
  %13 = zext i1 %12 to i32, !dbg !15520
  ret i32 %13, !dbg !15524
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !15525 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca %union.anon.68, align 4
  %20 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !15526, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.declare(metadata %union.anon.68* %19, metadata !15528, metadata !DIExpression()), !dbg !15529
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !12216, metadata !DIExpression()) #9, !dbg !15530
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !15532
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !12224, metadata !DIExpression()) #9, !dbg !15533
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12226, metadata !DIExpression()) #9, !dbg !15534
  %22 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15536, !srcloc !12231
  store i32 %22, i32* %3, align 4, !dbg !15536
  %23 = load i32, i32* %3, align 4, !dbg !15537
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15538
  store i32 %23, i32* %24, align 4, !dbg !15539
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15540
  %26 = load i32, i32* %25, align 4, !dbg !15540
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15541
  store i32 %26, i32* %27, align 4, !dbg !15541
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15542
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !15544
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 2, !dbg !15545
  %31 = load i8, i8* %30, align 4, !dbg !15545
  %32 = zext i8 %31 to i32, !dbg !15542
  %33 = and i32 %32, 1, !dbg !15546
  %34 = icmp ne i32 %33, 0, !dbg !15547
  br i1 %34, label %35, label %52, !dbg !15548

35:                                               ; preds = %1
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15549
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !15549
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !15549
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12256, metadata !DIExpression()) #9, !dbg !15551
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12262, metadata !DIExpression()) #9, !dbg !15553
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !15554
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15555
  %43 = load i32, i32* %42, align 4, !dbg !15555
  store i32 %43, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12266, metadata !DIExpression()) #9, !dbg !15556
  %44 = load i32, i32* %6, align 4, !dbg !15558
  %45 = icmp ne i32 %44, 0, !dbg !15559
  br i1 %45, label %46, label %47, !dbg !15560

46:                                               ; preds = %35
  br label %48, !dbg !15561

47:                                               ; preds = %35
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15562, !srcloc !12277
  br label %48, !dbg !15563

48:                                               ; preds = %46, %47
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15564, metadata !DIExpression()), !dbg !15565
  store i32 4, i32* %20, align 4, !dbg !15565
  br label %49, !dbg !15565

49:                                               ; preds = %48
  %50 = load i32, i32* %20, align 4, !dbg !15566
  call void asm sideeffect "cpsie i\0A\09svc $1\0A\09", "{r0},i,~{memory}"(i32 %50, i32 2) #9, !dbg !15566, !srcloc !15568
  br label %51, !dbg !15566

51:                                               ; preds = %49
  br label %110, !dbg !15569

52:                                               ; preds = %1
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15570
  %54 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %53, i32 0, i32 0, !dbg !15572
  %55 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %54, i32 0, i32 3, !dbg !15573
  %56 = load i8, i8* %55, align 1, !dbg !15573
  %57 = zext i8 %56 to i32, !dbg !15570
  %58 = and i32 %57, 8, !dbg !15574
  %59 = icmp ne i32 %58, 0, !dbg !15575
  br i1 %59, label %60, label %74, !dbg !15576

60:                                               ; preds = %52
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15577
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !15577
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !15577
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !12256, metadata !DIExpression()) #9, !dbg !15579
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12262, metadata !DIExpression()) #9, !dbg !15581
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !15582
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !15583
  %68 = load i32, i32* %67, align 4, !dbg !15583
  store i32 %68, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12266, metadata !DIExpression()) #9, !dbg !15584
  %69 = load i32, i32* %5, align 4, !dbg !15586
  %70 = icmp ne i32 %69, 0, !dbg !15587
  br i1 %70, label %71, label %72, !dbg !15588

71:                                               ; preds = %60
  br label %73, !dbg !15589

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15590, !srcloc !12277
  br label %73, !dbg !15591

73:                                               ; preds = %71, %72
  br label %110, !dbg !15592

74:                                               ; preds = %52
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15593
  call void @end_thread(%struct.k_thread.203* noundef %75) #10, !dbg !15594
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15595
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15597
  %78 = icmp eq %struct.k_thread.203* %76, %77, !dbg !15598
  br i1 %78, label %79, label %96, !dbg !15599

79:                                               ; preds = %74
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13354, metadata !DIExpression()) #9, !dbg !15600
  %80 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15603, !srcloc !13361
  store i32 %80, i32* %2, align 4, !dbg !15603
  %81 = load i32, i32* %2, align 4, !dbg !15604
  %82 = icmp ne i32 %81, 0, !dbg !15605
  %83 = zext i1 %82 to i64, !dbg !15605
  %84 = select i1 %82, i32 1, i32 0, !dbg !15605
  br i1 %82, label %96, label %85, !dbg !15606

85:                                               ; preds = %79
  %86 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15607
  %87 = bitcast i32* %86 to [1 x i32]*, !dbg !15607
  %88 = load [1 x i32], [1 x i32]* %87, align 4, !dbg !15607
  %89 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %90 = bitcast i32* %89 to [1 x i32]*
  store [1 x i32] %88, [1 x i32]* %90, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13302, metadata !DIExpression()) #9, !dbg !15609
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13308, metadata !DIExpression()) #9, !dbg !15611
  %91 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !15612
  store %struct.k_spinlock.13* %91, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13311, metadata !DIExpression()) #9, !dbg !15613
  %92 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15615
  %93 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15616
  %94 = load i32, i32* %93, align 4, !dbg !15616
  %95 = call i32 @z_swap_irqlock(i32 noundef %94) #13, !dbg !15617
  br label %96, !dbg !15618

96:                                               ; preds = %85, %79, %74
  %97 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15619
  %98 = bitcast i32* %97 to [1 x i32]*, !dbg !15619
  %99 = load [1 x i32], [1 x i32]* %98, align 4, !dbg !15619
  %100 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %101 = bitcast i32* %100 to [1 x i32]*
  store [1 x i32] %99, [1 x i32]* %101, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12256, metadata !DIExpression()) #9, !dbg !15620
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12262, metadata !DIExpression()) #9, !dbg !15622
  %102 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !15623
  %103 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !15624
  %104 = load i32, i32* %103, align 4, !dbg !15624
  store i32 %104, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12266, metadata !DIExpression()) #9, !dbg !15625
  %105 = load i32, i32* %4, align 4, !dbg !15627
  %106 = icmp ne i32 %105, 0, !dbg !15628
  br i1 %106, label %107, label %108, !dbg !15629

107:                                              ; preds = %96
  br label %109, !dbg !15630

108:                                              ; preds = %96
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15631, !srcloc !12277
  br label %109, !dbg !15632

109:                                              ; preds = %107, %108
  br label %110, !dbg !15633

110:                                              ; preds = %109, %73, %51
  ret void, !dbg !15633
}

; Function Attrs: noinline nounwind optnone
define internal void @end_thread(%struct.k_thread.203* noundef %0) #1 !dbg !15634 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15635, metadata !DIExpression()), !dbg !15636
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15637
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !15639
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 3, !dbg !15640
  %9 = load i8, i8* %8, align 1, !dbg !15640
  %10 = zext i8 %9 to i32, !dbg !15637
  %11 = and i32 %10, 8, !dbg !15641
  %12 = icmp eq i32 %11, 0, !dbg !15642
  br i1 %12, label %13, label %64, !dbg !15643

13:                                               ; preds = %1
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15644
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !15646
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !15647
  %17 = load i8, i8* %16, align 1, !dbg !15648
  %18 = zext i8 %17 to i32, !dbg !15648
  %19 = or i32 %18, 8, !dbg !15648
  %20 = trunc i32 %19 to i8, !dbg !15648
  store i8 %20, i8* %16, align 1, !dbg !15648
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15649
  %22 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %21, i32 0, i32 0, !dbg !15650
  %23 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %22, i32 0, i32 3, !dbg !15651
  %24 = load i8, i8* %23, align 1, !dbg !15652
  %25 = zext i8 %24 to i32, !dbg !15652
  %26 = and i32 %25, -33, !dbg !15652
  %27 = trunc i32 %26 to i8, !dbg !15652
  store i8 %27, i8* %23, align 1, !dbg !15652
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15653
  %29 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %28) #10, !dbg !15655
  br i1 %29, label %30, label %47, !dbg !15656

30:                                               ; preds = %13
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15657
  store %struct.k_thread.203* %31, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12616, metadata !DIExpression()) #9, !dbg !15659
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15661
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !15662
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 3, !dbg !15663
  %35 = load i8, i8* %34, align 1, !dbg !15664
  %36 = zext i8 %35 to i32, !dbg !15664
  %37 = and i32 %36, -129, !dbg !15664
  %38 = trunc i32 %37 to i8, !dbg !15664
  store i8 %38, i8* %34, align 1, !dbg !15664
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15665
  %40 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %39) #13, !dbg !15666
  br i1 %40, label %41, label %46, !dbg !15667

41:                                               ; preds = %30
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15668
  store %struct.k_thread.203* %42, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12630, metadata !DIExpression()) #9, !dbg !15669
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15671
  store %struct.k_thread.203* %43, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12635, metadata !DIExpression()), !dbg !15672
  %44 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !15674
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15675
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %44, %struct.k_thread.203* noundef %45) #13, !dbg !15676
  br label %46, !dbg !15677

46:                                               ; preds = %30, %41
  br label %47, !dbg !15678

47:                                               ; preds = %46, %13
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15679
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !15681
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !15682
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !15682
  %52 = icmp ne %union.anon.192* %51, null, !dbg !15683
  br i1 %52, label %53, label %55, !dbg !15684

53:                                               ; preds = %47
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15685
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %54) #10, !dbg !15687
  br label %55, !dbg !15688

55:                                               ; preds = %53, %47
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15689
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !15690
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15691
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !15692
  call void @unpend_all(%union.anon.192* noundef %59) #10, !dbg !15693
  call void @update_cache(i32 noundef 1) #10, !dbg !15694
  br label %60, !dbg !15695

60:                                               ; preds = %55
  br label %61, !dbg !15696

61:                                               ; preds = %60
  br label %62, !dbg !15698

62:                                               ; preds = %61
  br label %63, !dbg !15699

63:                                               ; preds = %62
  br label %64, !dbg !15701

64:                                               ; preds = %63, %1
  ret void, !dbg !15702
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_all(%union.anon.192* noundef %0) #1 !dbg !15703 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.192*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %4, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %4, metadata !15706, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15708, metadata !DIExpression()), !dbg !15709
  br label %6, !dbg !15710

6:                                                ; preds = %10, %1
  %7 = load %union.anon.192*, %union.anon.192** %4, align 4, !dbg !15711
  %8 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %7) #10, !dbg !15712
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !15713
  %9 = icmp ne %struct.k_thread.203* %8, null, !dbg !15714
  br i1 %9, label %10, label %20, !dbg !15710

10:                                               ; preds = %6
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15715
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %11) #10, !dbg !15717
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15718
  %13 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %12) #10, !dbg !15719
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15720
  store %struct.k_thread.203* %14, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15721, metadata !DIExpression()), !dbg !15725
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15727, metadata !DIExpression()), !dbg !15728
  %15 = load i32, i32* %3, align 4, !dbg !15729
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15730
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 6, !dbg !15731
  %18 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %17, i32 0, i32 1, !dbg !15732
  store i32 %15, i32* %18, align 4, !dbg !15733
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15734
  call void @ready_thread(%struct.k_thread.203* noundef %19) #10, !dbg !15735
  br label %6, !dbg !15710, !llvm.loop !15736

20:                                               ; preds = %6
  ret void, !dbg !15738
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !15739 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_thread.203*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca %union.argument_value, align 8
  %18 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %19 = bitcast i64* %18 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %19, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %14, metadata !15742, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !15744, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !15746, metadata !DIExpression()), !dbg !15747
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12216, metadata !DIExpression()) #9, !dbg !15748
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !15750
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12224, metadata !DIExpression()) #9, !dbg !15751
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12226, metadata !DIExpression()) #9, !dbg !15752
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15754, !srcloc !12231
  store i32 %21, i32* %3, align 4, !dbg !15754
  %22 = load i32, i32* %3, align 4, !dbg !15755
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15756
  store i32 %22, i32* %23, align 4, !dbg !15757
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15758
  %25 = load i32, i32* %24, align 4, !dbg !15758
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15759
  store i32 %25, i32* %26, align 4, !dbg !15759
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15760, metadata !DIExpression()), !dbg !15761
  store i32 0, i32* %16, align 4, !dbg !15761
  br label %27, !dbg !15762

27:                                               ; preds = %2
  br label %28, !dbg !15763

28:                                               ; preds = %27
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15765
  %30 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %29, i32 0, i32 0, !dbg !15767
  %31 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %30, i32 0, i32 3, !dbg !15768
  %32 = load i8, i8* %31, align 1, !dbg !15768
  %33 = zext i8 %32 to i32, !dbg !15765
  %34 = and i32 %33, 8, !dbg !15769
  %35 = icmp ne i32 %34, 0, !dbg !15770
  br i1 %35, label %36, label %37, !dbg !15771

36:                                               ; preds = %28
  store i32 0, i32* %16, align 4, !dbg !15772
  br label %81, !dbg !15774

37:                                               ; preds = %28
  %38 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !15775
  %39 = load i64, i64* %38, align 8, !dbg !15775
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %17, i32 0, i32 0, !dbg !15775
  store i64 0, i64* %40, align 8, !dbg !15775
  %41 = icmp eq i64 %39, 0, !dbg !15775
  br i1 %41, label %42, label %43, !dbg !15777

42:                                               ; preds = %37
  store i32 -16, i32* %16, align 4, !dbg !15778
  br label %80, !dbg !15780

43:                                               ; preds = %37
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15781
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15783
  %46 = icmp eq %struct.k_thread.203* %44, %45, !dbg !15784
  br i1 %46, label %55, label %47, !dbg !15785

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15786
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !15787
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !15788
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !15788
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15789
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 3, !dbg !15790
  %54 = icmp eq %union.anon.192* %51, %53, !dbg !15791
  br i1 %54, label %55, label %56, !dbg !15792

55:                                               ; preds = %47, %43
  store i32 -45, i32* %16, align 4, !dbg !15793
  br label %79, !dbg !15795

56:                                               ; preds = %47
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15796
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15798
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !15799
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %57, %union.anon.192* noundef %59) #10, !dbg !15800
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15801
  %61 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !15802
  %62 = bitcast i64* %61 to [1 x i64]*, !dbg !15802
  %63 = load [1 x i64], [1 x i64]* %62, align 8, !dbg !15802
  call void @add_thread_timeout(%struct.k_thread.203* noundef %60, [1 x i64] %63) #10, !dbg !15802
  br label %64, !dbg !15803

64:                                               ; preds = %56
  br label %65, !dbg !15804

65:                                               ; preds = %64
  %66 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15806
  %67 = bitcast i32* %66 to [1 x i32]*, !dbg !15806
  %68 = load [1 x i32], [1 x i32]* %67, align 4, !dbg !15806
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %70 = bitcast i32* %69 to [1 x i32]*
  store [1 x i32] %68, [1 x i32]* %70, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13302, metadata !DIExpression()) #9, !dbg !15807
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13308, metadata !DIExpression()) #9, !dbg !15809
  %71 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15810
  store %struct.k_spinlock.13* %71, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13311, metadata !DIExpression()) #9, !dbg !15811
  %72 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15813
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15814
  %74 = load i32, i32* %73, align 4, !dbg !15814
  %75 = call i32 @z_swap_irqlock(i32 noundef %74) #13, !dbg !15815
  store i32 %75, i32* %16, align 4, !dbg !15816
  br label %76, !dbg !15817

76:                                               ; preds = %65
  br label %77, !dbg !15818

77:                                               ; preds = %76
  %78 = load i32, i32* %16, align 4, !dbg !15820
  store i32 %78, i32* %12, align 4, !dbg !15821
  br label %98, !dbg !15821

79:                                               ; preds = %55
  br label %80

80:                                               ; preds = %79, %42
  br label %81

81:                                               ; preds = %80, %36
  br label %82, !dbg !15822

82:                                               ; preds = %81
  br label %83, !dbg !15823

83:                                               ; preds = %82
  %84 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15825
  %85 = bitcast i32* %84 to [1 x i32]*, !dbg !15825
  %86 = load [1 x i32], [1 x i32]* %85, align 4, !dbg !15825
  %87 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %88 = bitcast i32* %87 to [1 x i32]*
  store [1 x i32] %86, [1 x i32]* %88, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12256, metadata !DIExpression()) #9, !dbg !15826
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12262, metadata !DIExpression()) #9, !dbg !15828
  %89 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !15829
  %90 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15830
  %91 = load i32, i32* %90, align 4, !dbg !15830
  store i32 %91, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12266, metadata !DIExpression()) #9, !dbg !15831
  %92 = load i32, i32* %4, align 4, !dbg !15833
  %93 = icmp ne i32 %92, 0, !dbg !15834
  br i1 %93, label %94, label %95, !dbg !15835

94:                                               ; preds = %83
  br label %96, !dbg !15836

95:                                               ; preds = %83
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15837, !srcloc !12277
  br label %96, !dbg !15838

96:                                               ; preds = %94, %95
  %97 = load i32, i32* %16, align 4, !dbg !15839
  store i32 %97, i32* %12, align 4, !dbg !15840
  br label %98, !dbg !15840

98:                                               ; preds = %96, %77
  %99 = load i32, i32* %12, align 4, !dbg !15841
  ret i32 %99, !dbg !15841
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_sched_wake(%union.anon.192* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !15842 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i8, align 1
  %20 = alloca %union.anon.68, align 4
  %21 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !15845, metadata !DIExpression()), !dbg !15846
  store i32 %1, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15847, metadata !DIExpression()), !dbg !15848
  store i8* %2, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !15849, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !15851, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.declare(metadata i8* %19, metadata !15853, metadata !DIExpression()), !dbg !15854
  store i8 0, i8* %19, align 1, !dbg !15854
  call void @llvm.dbg.declare(metadata %union.anon.68* %20, metadata !15855, metadata !DIExpression()), !dbg !15857
  %22 = bitcast %union.anon.68* %20 to i8*, !dbg !15857
  call void @llvm.memset.p0i8.i32(i8* align 4 %22, i8 0, i32 4, i1 false), !dbg !15857
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !15858, metadata !DIExpression()), !dbg !15857
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !12216, metadata !DIExpression()) #9, !dbg !15859
  %23 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !15861
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !12224, metadata !DIExpression()) #9, !dbg !15862
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12226, metadata !DIExpression()) #9, !dbg !15863
  %24 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15865, !srcloc !12231
  store i32 %24, i32* %6, align 4, !dbg !15865
  %25 = load i32, i32* %6, align 4, !dbg !15866
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !15867
  store i32 %25, i32* %26, align 4, !dbg !15868
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !15869
  %28 = load i32, i32* %27, align 4, !dbg !15869
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15857
  store i32 %28, i32* %29, align 4, !dbg !15857
  br label %30, !dbg !15857

30:                                               ; preds = %73, %3
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !15870
  %32 = load i32, i32* %31, align 4, !dbg !15870
  %33 = icmp ne i32 %32, 0, !dbg !15870
  %34 = xor i1 %33, true, !dbg !15870
  br i1 %34, label %35, label %75, !dbg !15857

35:                                               ; preds = %30
  %36 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !15872
  %37 = getelementptr inbounds %union.anon.192, %union.anon.192* %36, i32 0, i32 0, !dbg !15874
  %38 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %37) #10, !dbg !15875
  store %struct.k_thread.203* %38, %struct.k_thread.203** %18, align 4, !dbg !15876
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15877
  %40 = icmp ne %struct.k_thread.203* %39, null, !dbg !15879
  br i1 %40, label %41, label %59, !dbg !15880

41:                                               ; preds = %35
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15881
  %43 = load i32, i32* %16, align 4, !dbg !15883
  %44 = load i8*, i8** %17, align 4, !dbg !15884
  store %struct.k_thread.203* %42, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !15885, metadata !DIExpression()) #9, !dbg !15890
  store i32 %43, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15892, metadata !DIExpression()) #9, !dbg !15893
  store i8* %44, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !15894, metadata !DIExpression()) #9, !dbg !15895
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15896
  %46 = load i32, i32* %8, align 4, !dbg !15897
  store %struct.k_thread.203* %45, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15721, metadata !DIExpression()), !dbg !15898
  store i32 %46, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15727, metadata !DIExpression()), !dbg !15900
  %47 = load i32, i32* %5, align 4, !dbg !15901
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15902
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 6, !dbg !15903
  %50 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %49, i32 0, i32 1, !dbg !15904
  store i32 %47, i32* %50, align 4, !dbg !15905
  %51 = load i8*, i8** %9, align 4, !dbg !15906
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15907
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !15908
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 6, !dbg !15909
  store i8* %51, i8** %54, align 4, !dbg !15910
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15911
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %55) #10, !dbg !15912
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15913
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !15914
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15915
  call void @ready_thread(%struct.k_thread.203* noundef %58) #10, !dbg !15916
  store i8 1, i8* %19, align 1, !dbg !15917
  br label %59, !dbg !15918

59:                                               ; preds = %41, %35
  br label %60, !dbg !15919

60:                                               ; preds = %59
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15870
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !15870
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !15870
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !12256, metadata !DIExpression()) #9, !dbg !15920
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12262, metadata !DIExpression()) #9, !dbg !15922
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !15923
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15924
  %68 = load i32, i32* %67, align 4, !dbg !15924
  store i32 %68, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12266, metadata !DIExpression()) #9, !dbg !15925
  %69 = load i32, i32* %10, align 4, !dbg !15927
  %70 = icmp ne i32 %69, 0, !dbg !15928
  br i1 %70, label %71, label %72, !dbg !15929

71:                                               ; preds = %60
  br label %73, !dbg !15930

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15931, !srcloc !12277
  br label %73, !dbg !15932

73:                                               ; preds = %71, %72
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !15870
  store i32 1, i32* %74, align 4, !dbg !15870
  br label %30, !dbg !15870, !llvm.loop !15933

75:                                               ; preds = %30
  %76 = load i8, i8* %19, align 1, !dbg !15935
  %77 = trunc i8 %76 to i1, !dbg !15935
  ret i1 %77, !dbg !15936
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_wait(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3, i8** noundef %4) #1 !dbg !15937 {
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %union.argument_value, align 8
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.192*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %13 = bitcast i32* %12 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %13, align 4
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0
  %15 = bitcast i64* %14 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %15, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !15941, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !15943, metadata !DIExpression()), !dbg !15944
  store %union.anon.192* %2, %union.anon.192** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %9, metadata !15945, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.declare(metadata %union.argument_value* %7, metadata !15947, metadata !DIExpression()), !dbg !15948
  store i8** %4, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !15949, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15951, metadata !DIExpression()), !dbg !15952
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !15953
  %17 = load %union.anon.192*, %union.anon.192** %9, align 4, !dbg !15954
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15955
  %19 = bitcast i32* %18 to [1 x i32]*, !dbg !15955
  %20 = load [1 x i32], [1 x i32]* %19, align 4, !dbg !15955
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0, !dbg !15955
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !15955
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !15955
  %24 = call i32 @z_pend_curr(%struct.k_spinlock.13* noundef %16, [1 x i32] %20, %union.anon.192* noundef %17, [1 x i64] %23) #10, !dbg !15955
  store i32 %24, i32* %11, align 4, !dbg !15952
  %25 = load i8**, i8*** %10, align 4, !dbg !15956
  %26 = icmp ne i8** %25, null, !dbg !15958
  br i1 %26, label %27, label %33, !dbg !15959

27:                                               ; preds = %5
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15960
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !15962
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 6, !dbg !15963
  %31 = load i8*, i8** %30, align 4, !dbg !15963
  %32 = load i8**, i8*** %10, align 4, !dbg !15964
  store i8* %31, i8** %32, align 4, !dbg !15965
  br label %33, !dbg !15966

33:                                               ; preds = %27, %5
  %34 = load i32, i32* %11, align 4, !dbg !15967
  ret i32 %34, !dbg !15968
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_data_copy() #1 !dbg !15969 {
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #10, !dbg !15971
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #10, !dbg !15972
  ret void, !dbg !15973
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_add_timeout(%struct._timeout.195* noundef %0, void (%struct._timeout.195*)* noundef %1, [1 x i64] %2) #1 !dbg !15974 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct._timeout.195*, align 4
  %12 = alloca void (%struct._timeout.195*)*, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %20, align 8
  store %struct._timeout.195* %0, %struct._timeout.195** %11, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %11, metadata !15981, metadata !DIExpression()), !dbg !15982
  store void (%struct._timeout.195*)* %1, void (%struct._timeout.195*)** %12, align 4
  call void @llvm.dbg.declare(metadata void (%struct._timeout.195*)** %12, metadata !15983, metadata !DIExpression()), !dbg !15984
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !15985, metadata !DIExpression()), !dbg !15986
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !15987
  %22 = load i64, i64* %21, align 8, !dbg !15987
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !15987
  store i64 -1, i64* %23, align 8, !dbg !15987
  %24 = icmp eq i64 %22, -1, !dbg !15987
  br i1 %24, label %25, label %26, !dbg !15989

25:                                               ; preds = %3
  br label %145, !dbg !15990

26:                                               ; preds = %3
  %27 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %12, align 4, !dbg !15992
  %28 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !15993
  %29 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %28, i32 0, i32 1, !dbg !15994
  store void (%struct._timeout.195*)* %27, void (%struct._timeout.195*)** %29, align 8, !dbg !15995
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !15996, metadata !DIExpression()), !dbg !16002
  %30 = bitcast %union.anon.68* %14 to i8*, !dbg !16002
  call void @llvm.memset.p0i8.i32(i8* align 4 %30, i8 0, i32 4, i1 false), !dbg !16002
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16003, metadata !DIExpression()), !dbg !16002
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16004, metadata !DIExpression()) #9, !dbg !16009
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16011
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16012, metadata !DIExpression()) #9, !dbg !16013
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16014, metadata !DIExpression()) #9, !dbg !16016
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16018, !srcloc !16019
  store i32 %32, i32* %5, align 4, !dbg !16018
  %33 = load i32, i32* %5, align 4, !dbg !16020
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16021
  store i32 %33, i32* %34, align 4, !dbg !16022
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16023
  %36 = load i32, i32* %35, align 4, !dbg !16023
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16002
  store i32 %36, i32* %37, align 4, !dbg !16002
  br label %38, !dbg !16002

38:                                               ; preds = %143, %26
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16024
  %40 = load i32, i32* %39, align 4, !dbg !16024
  %41 = icmp ne i32 %40, 0, !dbg !16024
  %42 = xor i1 %41, true, !dbg !16024
  br i1 %42, label %43, label %145, !dbg !16002

43:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !16026, metadata !DIExpression()), !dbg !16028
  %44 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16029
  %45 = load i64, i64* %44, align 8, !dbg !16029
  %46 = sub nsw i64 -2, %45, !dbg !16029
  %47 = icmp sge i64 %46, 0, !dbg !16031
  br i1 %47, label %48, label %63, !dbg !16032

48:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i64* %17, metadata !16033, metadata !DIExpression()), !dbg !16035
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16036
  %50 = load i64, i64* %49, align 8, !dbg !16036
  %51 = sub nsw i64 -2, %50, !dbg !16036
  %52 = load i64, i64* @curr_tick, align 8, !dbg !16037
  %53 = sub i64 %51, %52, !dbg !16038
  store i64 %53, i64* %17, align 8, !dbg !16035
  %54 = load i64, i64* %17, align 8, !dbg !16039
  %55 = icmp sgt i64 1, %54, !dbg !16039
  br i1 %55, label %56, label %57, !dbg !16039

56:                                               ; preds = %48
  br label %59, !dbg !16039

57:                                               ; preds = %48
  %58 = load i64, i64* %17, align 8, !dbg !16039
  br label %59, !dbg !16039

59:                                               ; preds = %57, %56
  %60 = phi i64 [ 1, %56 ], [ %58, %57 ], !dbg !16039
  %61 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16040
  %62 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %61, i32 0, i32 2, !dbg !16041
  store i64 %60, i64* %62, align 8, !dbg !16042
  br label %72, !dbg !16043

63:                                               ; preds = %43
  %64 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16044
  %65 = load i64, i64* %64, align 8, !dbg !16044
  %66 = add nsw i64 %65, 1, !dbg !16046
  %67 = call i32 @elapsed.86() #10, !dbg !16047
  %68 = sext i32 %67 to i64, !dbg !16047
  %69 = add nsw i64 %66, %68, !dbg !16048
  %70 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16049
  %71 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %70, i32 0, i32 2, !dbg !16050
  store i64 %69, i64* %71, align 8, !dbg !16051
  br label %72

72:                                               ; preds = %63, %59
  %73 = call %struct._timeout.195* @first() #10, !dbg !16052
  store %struct._timeout.195* %73, %struct._timeout.195** %16, align 4, !dbg !16054
  br label %74, !dbg !16055

74:                                               ; preds = %105, %72
  %75 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16056
  %76 = icmp ne %struct._timeout.195* %75, null, !dbg !16058
  br i1 %76, label %77, label %108, !dbg !16059

77:                                               ; preds = %74
  %78 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16060
  %79 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %78, i32 0, i32 2, !dbg !16063
  %80 = load i64, i64* %79, align 8, !dbg !16063
  %81 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16064
  %82 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %81, i32 0, i32 2, !dbg !16065
  %83 = load i64, i64* %82, align 8, !dbg !16065
  %84 = icmp sgt i64 %80, %83, !dbg !16066
  br i1 %84, label %85, label %97, !dbg !16067

85:                                               ; preds = %77
  %86 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16068
  %87 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %86, i32 0, i32 2, !dbg !16070
  %88 = load i64, i64* %87, align 8, !dbg !16070
  %89 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16071
  %90 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %89, i32 0, i32 2, !dbg !16072
  %91 = load i64, i64* %90, align 8, !dbg !16073
  %92 = sub nsw i64 %91, %88, !dbg !16073
  store i64 %92, i64* %90, align 8, !dbg !16073
  %93 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16074
  %94 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %93, i32 0, i32 0, !dbg !16075
  %95 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16076
  %96 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %95, i32 0, i32 0, !dbg !16077
  call void @sys_dlist_insert.87(%struct._dnode.191* noundef %94, %struct._dnode.191* noundef %96) #10, !dbg !16078
  br label %108, !dbg !16079

97:                                               ; preds = %77
  %98 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16080
  %99 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %98, i32 0, i32 2, !dbg !16081
  %100 = load i64, i64* %99, align 8, !dbg !16081
  %101 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16082
  %102 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %101, i32 0, i32 2, !dbg !16083
  %103 = load i64, i64* %102, align 8, !dbg !16084
  %104 = sub nsw i64 %103, %100, !dbg !16084
  store i64 %104, i64* %102, align 8, !dbg !16084
  br label %105, !dbg !16085

105:                                              ; preds = %97
  %106 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16086
  %107 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %106) #10, !dbg !16087
  store %struct._timeout.195* %107, %struct._timeout.195** %16, align 4, !dbg !16088
  br label %74, !dbg !16089, !llvm.loop !16090

108:                                              ; preds = %85, %74
  %109 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16092
  %110 = icmp eq %struct._timeout.195* %109, null, !dbg !16094
  br i1 %110, label %111, label %114, !dbg !16095

111:                                              ; preds = %108
  %112 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16096
  %113 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %112, i32 0, i32 0, !dbg !16098
  call void @sys_dlist_append.88(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %113) #10, !dbg !16099
  br label %114, !dbg !16100

114:                                              ; preds = %111, %108
  %115 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16101
  %116 = call %struct._timeout.195* @first() #10, !dbg !16103
  %117 = icmp eq %struct._timeout.195* %115, %116, !dbg !16104
  br i1 %117, label %118, label %129, !dbg !16105

118:                                              ; preds = %114
  call void @llvm.dbg.declare(metadata i32* %18, metadata !16106, metadata !DIExpression()), !dbg !16108
  %119 = call i32 @next_timeout() #10, !dbg !16109
  store i32 %119, i32* %18, align 4, !dbg !16108
  %120 = load i32, i32* %18, align 4, !dbg !16110
  %121 = icmp eq i32 %120, 0, !dbg !16112
  br i1 %121, label %126, label %122, !dbg !16113

122:                                              ; preds = %118
  %123 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16114
  %124 = load i32, i32* %18, align 4, !dbg !16115
  %125 = icmp ne i32 %123, %124, !dbg !16116
  br i1 %125, label %126, label %128, !dbg !16117

126:                                              ; preds = %122, %118
  %127 = load i32, i32* %18, align 4, !dbg !16118
  call void @sys_clock_set_timeout(i32 noundef %127, i1 noundef zeroext false) #10, !dbg !16120
  br label %128, !dbg !16121

128:                                              ; preds = %126, %122
  br label %129, !dbg !16122

129:                                              ; preds = %128, %114
  br label %130, !dbg !16123

130:                                              ; preds = %129
  %131 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16024
  %132 = bitcast i32* %131 to [1 x i32]*, !dbg !16024
  %133 = load [1 x i32], [1 x i32]* %132, align 4, !dbg !16024
  %134 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %135 = bitcast i32* %134 to [1 x i32]*
  store [1 x i32] %133, [1 x i32]* %135, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16124, metadata !DIExpression()) #9, !dbg !16128
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16130, metadata !DIExpression()) #9, !dbg !16131
  %136 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16132
  %137 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16133
  %138 = load i32, i32* %137, align 4, !dbg !16133
  store i32 %138, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16134, metadata !DIExpression()) #9, !dbg !16136
  %139 = load i32, i32* %4, align 4, !dbg !16138
  %140 = icmp ne i32 %139, 0, !dbg !16140
  br i1 %140, label %141, label %142, !dbg !16141

141:                                              ; preds = %130
  br label %143, !dbg !16142

142:                                              ; preds = %130
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16144, !srcloc !16145
  br label %143, !dbg !16146

143:                                              ; preds = %141, %142
  %144 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16024
  store i32 1, i32* %144, align 4, !dbg !16024
  br label %38, !dbg !16024, !llvm.loop !16147

145:                                              ; preds = %25, %38
  ret void, !dbg !16149
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed.86() #1 !dbg !16150 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16153
  %2 = icmp eq i32 %1, 0, !dbg !16154
  br i1 %2, label %3, label %5, !dbg !16153

3:                                                ; preds = %0
  %4 = call i32 @sys_clock_elapsed() #10, !dbg !16155
  br label %6, !dbg !16153

5:                                                ; preds = %0
  br label %6, !dbg !16153

6:                                                ; preds = %5, %3
  %7 = phi i32 [ %4, %3 ], [ 0, %5 ], !dbg !16153
  ret i32 %7, !dbg !16156
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @first() #1 !dbg !16157 {
  %1 = alloca %struct._dnode.191*, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !16160, metadata !DIExpression()), !dbg !16162
  %2 = call %struct._dnode.191* @sys_dlist_peek_head.91(%struct._dnode.191* noundef @timeout_list) #10, !dbg !16163
  store %struct._dnode.191* %2, %struct._dnode.191** %1, align 4, !dbg !16162
  %3 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !16164
  %4 = icmp eq %struct._dnode.191* %3, null, !dbg !16165
  br i1 %4, label %5, label %6, !dbg !16164

5:                                                ; preds = %0
  br label %11, !dbg !16164

6:                                                ; preds = %0
  %7 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !16166
  %8 = bitcast %struct._dnode.191* %7 to i8*, !dbg !16166
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !16166
  %10 = bitcast i8* %9 to %struct._timeout.195*, !dbg !16166
  br label %11, !dbg !16164

11:                                               ; preds = %6, %5
  %12 = phi %struct._timeout.195* [ null, %5 ], [ %10, %6 ], !dbg !16164
  ret %struct._timeout.195* %12, !dbg !16167
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert.87(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16168 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16171, metadata !DIExpression()), !dbg !16172
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16173, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !16175, metadata !DIExpression()), !dbg !16177
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16178
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16179
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16179
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16179
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !16177
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16180
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16181
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !16182
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !16182
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !16183
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16184
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16185
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !16186
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !16186
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !16187
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16188
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16189
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !16190
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !16190
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !16191
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16192
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16193
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !16194
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !16194
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !16195
  ret void, !dbg !16196
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @next(%struct._timeout.195* noundef %0) #1 !dbg !16197 {
  %2 = alloca %struct._timeout.195*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16200, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16202, metadata !DIExpression()), !dbg !16203
  %4 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16204
  %5 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %4, i32 0, i32 0, !dbg !16205
  %6 = call %struct._dnode.191* @sys_dlist_peek_next.89(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %5) #10, !dbg !16206
  store %struct._dnode.191* %6, %struct._dnode.191** %3, align 4, !dbg !16203
  %7 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16207
  %8 = icmp eq %struct._dnode.191* %7, null, !dbg !16208
  br i1 %8, label %9, label %10, !dbg !16207

9:                                                ; preds = %1
  br label %15, !dbg !16207

10:                                               ; preds = %1
  %11 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16209
  %12 = bitcast %struct._dnode.191* %11 to i8*, !dbg !16209
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !16209
  %14 = bitcast i8* %13 to %struct._timeout.195*, !dbg !16209
  br label %15, !dbg !16207

15:                                               ; preds = %10, %9
  %16 = phi %struct._timeout.195* [ null, %9 ], [ %14, %10 ], !dbg !16207
  ret %struct._timeout.195* %16, !dbg !16210
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append.88(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16211 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16215, metadata !DIExpression()), !dbg !16216
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16217, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !16219, metadata !DIExpression()), !dbg !16220
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16221
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16222
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16222
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16222
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !16220
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16223
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16224
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !16225
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !16225
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !16226
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16227
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16228
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !16229
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !16229
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !16230
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16231
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16232
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !16233
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !16233
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !16234
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16235
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16236
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !16237
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !16237
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !16238
  ret void, !dbg !16239
}

; Function Attrs: noinline nounwind optnone
define internal i32 @next_timeout() #1 !dbg !16240 {
  %1 = alloca %struct._timeout.195*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %1, metadata !16241, metadata !DIExpression()), !dbg !16242
  %4 = call %struct._timeout.195* @first() #10, !dbg !16243
  store %struct._timeout.195* %4, %struct._timeout.195** %1, align 4, !dbg !16242
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16244, metadata !DIExpression()), !dbg !16245
  %5 = call i32 @elapsed.86() #10, !dbg !16246
  store i32 %5, i32* %2, align 4, !dbg !16245
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16247, metadata !DIExpression()), !dbg !16248
  %6 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16249
  %7 = icmp eq %struct._timeout.195* %6, null, !dbg !16251
  br i1 %7, label %16, label %8, !dbg !16252

8:                                                ; preds = %0
  %9 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16253
  %10 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %9, i32 0, i32 2, !dbg !16254
  %11 = load i64, i64* %10, align 8, !dbg !16254
  %12 = load i32, i32* %2, align 4, !dbg !16255
  %13 = sext i32 %12 to i64, !dbg !16255
  %14 = sub nsw i64 %11, %13, !dbg !16256
  %15 = icmp sgt i64 %14, 2147483647, !dbg !16257
  br i1 %15, label %16, label %17, !dbg !16258

16:                                               ; preds = %8, %0
  store i32 2147483647, i32* %3, align 4, !dbg !16259
  br label %36, !dbg !16261

17:                                               ; preds = %8
  %18 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16262
  %19 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %18, i32 0, i32 2, !dbg !16262
  %20 = load i64, i64* %19, align 8, !dbg !16262
  %21 = load i32, i32* %2, align 4, !dbg !16262
  %22 = sext i32 %21 to i64, !dbg !16262
  %23 = sub nsw i64 %20, %22, !dbg !16262
  %24 = icmp sgt i64 0, %23, !dbg !16262
  br i1 %24, label %25, label %26, !dbg !16262

25:                                               ; preds = %17
  br label %33, !dbg !16262

26:                                               ; preds = %17
  %27 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16262
  %28 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %27, i32 0, i32 2, !dbg !16262
  %29 = load i64, i64* %28, align 8, !dbg !16262
  %30 = load i32, i32* %2, align 4, !dbg !16262
  %31 = sext i32 %30 to i64, !dbg !16262
  %32 = sub nsw i64 %29, %31, !dbg !16262
  br label %33, !dbg !16262

33:                                               ; preds = %26, %25
  %34 = phi i64 [ 0, %25 ], [ %32, %26 ], !dbg !16262
  %35 = trunc i64 %34 to i32, !dbg !16262
  store i32 %35, i32* %3, align 4, !dbg !16264
  br label %36

36:                                               ; preds = %33, %16
  %37 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16265
  %38 = icmp ne i32 %37, 0, !dbg !16267
  br i1 %38, label %39, label %45, !dbg !16268

39:                                               ; preds = %36
  %40 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16269
  %41 = load i32, i32* %3, align 4, !dbg !16270
  %42 = icmp slt i32 %40, %41, !dbg !16271
  br i1 %42, label %43, label %45, !dbg !16272

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16273
  store i32 %44, i32* %3, align 4, !dbg !16275
  br label %45, !dbg !16276

45:                                               ; preds = %43, %39, %36
  %46 = load i32, i32* %3, align 4, !dbg !16277
  ret i32 %46, !dbg !16278
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next.89(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16279 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16282, metadata !DIExpression()), !dbg !16283
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16284, metadata !DIExpression()), !dbg !16285
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16286
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !16287
  br i1 %6, label %7, label %11, !dbg !16288

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16289
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16290
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check.90(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !16291
  br label %12, !dbg !16288

11:                                               ; preds = %2
  br label %12, !dbg !16288

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !16288
  ret %struct._dnode.191* %13, !dbg !16292
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check.90(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16293 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16294, metadata !DIExpression()), !dbg !16295
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16296, metadata !DIExpression()), !dbg !16297
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16298
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16299
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16300
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16300
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16300
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !16301
  br i1 %10, label %11, label %12, !dbg !16302

11:                                               ; preds = %2
  br label %17, !dbg !16302

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16303
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !16304
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !16304
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !16304
  br label %17, !dbg !16302

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !16302
  ret %struct._dnode.191* %18, !dbg !16305
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head.91(%struct._dnode.191* noundef %0) #1 !dbg !16306 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16309, metadata !DIExpression()), !dbg !16310
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16311
  %4 = call zeroext i1 @sys_dlist_is_empty.92(%struct._dnode.191* noundef %3) #10, !dbg !16312
  br i1 %4, label %5, label %6, !dbg !16312

5:                                                ; preds = %1
  br label %11, !dbg !16312

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16313
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !16314
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !16314
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !16314
  br label %11, !dbg !16312

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !16312
  ret %struct._dnode.191* %12, !dbg !16315
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty.92(%struct._dnode.191* noundef %0) #1 !dbg !16316 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16319, metadata !DIExpression()), !dbg !16320
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16321
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16322
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16322
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16322
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16323
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !16324
  ret i1 %8, !dbg !16325
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_abort_timeout(%struct._timeout.195* noundef %0) #1 !dbg !16326 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16329, metadata !DIExpression()), !dbg !16330
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16331, metadata !DIExpression()), !dbg !16332
  store i32 -22, i32* %9, align 4, !dbg !16332
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16333, metadata !DIExpression()), !dbg !16335
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16335
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16335
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16336, metadata !DIExpression()), !dbg !16335
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16004, metadata !DIExpression()) #9, !dbg !16337
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16339
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16012, metadata !DIExpression()) #9, !dbg !16340
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16014, metadata !DIExpression()) #9, !dbg !16341
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16343, !srcloc !16019
  store i32 %14, i32* %3, align 4, !dbg !16343
  %15 = load i32, i32* %3, align 4, !dbg !16344
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16345
  store i32 %15, i32* %16, align 4, !dbg !16346
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16347
  %18 = load i32, i32* %17, align 4, !dbg !16347
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16335
  store i32 %18, i32* %19, align 4, !dbg !16335
  br label %20, !dbg !16335

20:                                               ; preds = %45, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16348
  %22 = load i32, i32* %21, align 4, !dbg !16348
  %23 = icmp ne i32 %22, 0, !dbg !16348
  %24 = xor i1 %23, true, !dbg !16348
  br i1 %24, label %25, label %47, !dbg !16335

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16350
  %27 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %26, i32 0, i32 0, !dbg !16353
  %28 = call zeroext i1 @sys_dnode_is_linked.95(%struct._dnode.191* noundef %27) #10, !dbg !16354
  br i1 %28, label %29, label %31, !dbg !16355

29:                                               ; preds = %25
  %30 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16356
  call void @remove_timeout(%struct._timeout.195* noundef %30) #10, !dbg !16358
  store i32 0, i32* %9, align 4, !dbg !16359
  br label %31, !dbg !16360

31:                                               ; preds = %29, %25
  br label %32, !dbg !16361

32:                                               ; preds = %31
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16348
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !16348
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !16348
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16124, metadata !DIExpression()) #9, !dbg !16362
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16130, metadata !DIExpression()) #9, !dbg !16364
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16365
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16366
  %40 = load i32, i32* %39, align 4, !dbg !16366
  store i32 %40, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16134, metadata !DIExpression()) #9, !dbg !16367
  %41 = load i32, i32* %2, align 4, !dbg !16369
  %42 = icmp ne i32 %41, 0, !dbg !16370
  br i1 %42, label %43, label %44, !dbg !16371

43:                                               ; preds = %32
  br label %45, !dbg !16372

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16373, !srcloc !16145
  br label %45, !dbg !16374

45:                                               ; preds = %43, %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16348
  store i32 1, i32* %46, align 4, !dbg !16348
  br label %20, !dbg !16348, !llvm.loop !16375

47:                                               ; preds = %20
  %48 = load i32, i32* %9, align 4, !dbg !16377
  ret i32 %48, !dbg !16378
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked.95(%struct._dnode.191* noundef %0) #1 !dbg !16379 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16384, metadata !DIExpression()), !dbg !16385
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16386
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16387
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16387
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16387
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !16388
  ret i1 %7, !dbg !16389
}

; Function Attrs: noinline nounwind optnone
define internal void @remove_timeout(%struct._timeout.195* noundef %0) #1 !dbg !16390 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16391, metadata !DIExpression()), !dbg !16392
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16393
  %4 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %3) #10, !dbg !16395
  %5 = icmp ne %struct._timeout.195* %4, null, !dbg !16396
  br i1 %5, label %6, label %15, !dbg !16397

6:                                                ; preds = %1
  %7 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16398
  %8 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %7, i32 0, i32 2, !dbg !16400
  %9 = load i64, i64* %8, align 8, !dbg !16400
  %10 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16401
  %11 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %10) #10, !dbg !16402
  %12 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %11, i32 0, i32 2, !dbg !16403
  %13 = load i64, i64* %12, align 8, !dbg !16404
  %14 = add nsw i64 %13, %9, !dbg !16404
  store i64 %14, i64* %12, align 8, !dbg !16404
  br label %15, !dbg !16405

15:                                               ; preds = %6, %1
  %16 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16406
  %17 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %16, i32 0, i32 0, !dbg !16407
  call void @sys_dlist_remove.96(%struct._dnode.191* noundef %17) #10, !dbg !16408
  ret void, !dbg !16409
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove.96(%struct._dnode.191* noundef %0) #1 !dbg !16410 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16413, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16415, metadata !DIExpression()), !dbg !16416
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16417
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !16418
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !16418
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !16418
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !16416
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16419, metadata !DIExpression()), !dbg !16420
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16421
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !16422
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !16422
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !16422
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !16420
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16423
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16424
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !16425
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !16425
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !16426
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16427
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16428
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !16429
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !16429
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !16430
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16431
  call void @sys_dnode_init.97(%struct._dnode.191* noundef %21) #10, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.97(%struct._dnode.191* noundef %0) #1 !dbg !16434 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16435, metadata !DIExpression()), !dbg !16436
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16437
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16438
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16438
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !16439
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16440
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16441
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16441
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !16442
  ret void, !dbg !16443
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_remaining(%struct._timeout.195* noundef %0) #1 !dbg !16444 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16449, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.declare(metadata i64* %9, metadata !16451, metadata !DIExpression()), !dbg !16452
  store i64 0, i64* %9, align 8, !dbg !16452
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16453, metadata !DIExpression()), !dbg !16455
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16455
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16455
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16456, metadata !DIExpression()), !dbg !16455
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16004, metadata !DIExpression()) #9, !dbg !16457
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16459
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16012, metadata !DIExpression()) #9, !dbg !16460
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16014, metadata !DIExpression()) #9, !dbg !16461
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16463, !srcloc !16019
  store i32 %14, i32* %3, align 4, !dbg !16463
  %15 = load i32, i32* %3, align 4, !dbg !16464
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16465
  store i32 %15, i32* %16, align 4, !dbg !16466
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16467
  %18 = load i32, i32* %17, align 4, !dbg !16467
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16455
  store i32 %18, i32* %19, align 4, !dbg !16455
  br label %20, !dbg !16455

20:                                               ; preds = %41, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16468
  %22 = load i32, i32* %21, align 4, !dbg !16468
  %23 = icmp ne i32 %22, 0, !dbg !16468
  %24 = xor i1 %23, true, !dbg !16468
  br i1 %24, label %25, label %43, !dbg !16455

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16470
  %27 = call i64 @timeout_rem(%struct._timeout.195* noundef %26) #10, !dbg !16472
  store i64 %27, i64* %9, align 8, !dbg !16473
  br label %28, !dbg !16474

28:                                               ; preds = %25
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16468
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !16468
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !16468
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16124, metadata !DIExpression()) #9, !dbg !16475
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16130, metadata !DIExpression()) #9, !dbg !16477
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16478
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16479
  %36 = load i32, i32* %35, align 4, !dbg !16479
  store i32 %36, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16134, metadata !DIExpression()) #9, !dbg !16480
  %37 = load i32, i32* %2, align 4, !dbg !16482
  %38 = icmp ne i32 %37, 0, !dbg !16483
  br i1 %38, label %39, label %40, !dbg !16484

39:                                               ; preds = %28
  br label %41, !dbg !16485

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16486, !srcloc !16145
  br label %41, !dbg !16487

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16468
  store i32 1, i32* %42, align 4, !dbg !16468
  br label %20, !dbg !16468, !llvm.loop !16488

43:                                               ; preds = %20
  %44 = load i64, i64* %9, align 8, !dbg !16490
  ret i64 %44, !dbg !16491
}

; Function Attrs: noinline nounwind optnone
define internal i64 @timeout_rem(%struct._timeout.195* noundef %0) #1 !dbg !16492 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._timeout.195*, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %3, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16495, metadata !DIExpression()), !dbg !16496
  store i64 0, i64* %4, align 8, !dbg !16496
  %6 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !16497
  %7 = call zeroext i1 @z_is_inactive_timeout.98(%struct._timeout.195* noundef %6) #10, !dbg !16499
  br i1 %7, label %8, label %9, !dbg !16500

8:                                                ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !16501
  br label %33, !dbg !16501

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %5, metadata !16503, metadata !DIExpression()), !dbg !16505
  %10 = call %struct._timeout.195* @first() #10, !dbg !16506
  store %struct._timeout.195* %10, %struct._timeout.195** %5, align 4, !dbg !16505
  br label %11, !dbg !16507

11:                                               ; preds = %25, %9
  %12 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16508
  %13 = icmp ne %struct._timeout.195* %12, null, !dbg !16510
  br i1 %13, label %14, label %28, !dbg !16511

14:                                               ; preds = %11
  %15 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16512
  %16 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %15, i32 0, i32 2, !dbg !16514
  %17 = load i64, i64* %16, align 8, !dbg !16514
  %18 = load i64, i64* %4, align 8, !dbg !16515
  %19 = add nsw i64 %18, %17, !dbg !16515
  store i64 %19, i64* %4, align 8, !dbg !16515
  %20 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !16516
  %21 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16518
  %22 = icmp eq %struct._timeout.195* %20, %21, !dbg !16519
  br i1 %22, label %23, label %24, !dbg !16520

23:                                               ; preds = %14
  br label %28, !dbg !16521

24:                                               ; preds = %14
  br label %25, !dbg !16523

25:                                               ; preds = %24
  %26 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16524
  %27 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %26) #10, !dbg !16525
  store %struct._timeout.195* %27, %struct._timeout.195** %5, align 4, !dbg !16526
  br label %11, !dbg !16527, !llvm.loop !16528

28:                                               ; preds = %23, %11
  %29 = load i64, i64* %4, align 8, !dbg !16530
  %30 = call i32 @elapsed.86() #10, !dbg !16531
  %31 = sext i32 %30 to i64, !dbg !16531
  %32 = sub nsw i64 %29, %31, !dbg !16532
  store i64 %32, i64* %2, align 8, !dbg !16533
  br label %33, !dbg !16533

33:                                               ; preds = %28, %8
  %34 = load i64, i64* %2, align 8, !dbg !16534
  ret i64 %34, !dbg !16534
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout.98(%struct._timeout.195* noundef %0) #1 !dbg !16535 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16538, metadata !DIExpression()), !dbg !16539
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16540
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !16541
  %5 = call zeroext i1 @sys_dnode_is_linked.95(%struct._dnode.191* noundef %4) #10, !dbg !16542
  %6 = xor i1 %5, true, !dbg !16543
  ret i1 %6, !dbg !16544
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_expires(%struct._timeout.195* noundef %0) #1 !dbg !16545 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16546, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.declare(metadata i64* %9, metadata !16548, metadata !DIExpression()), !dbg !16549
  store i64 0, i64* %9, align 8, !dbg !16549
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16550, metadata !DIExpression()), !dbg !16552
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16552
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16552
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16553, metadata !DIExpression()), !dbg !16552
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16004, metadata !DIExpression()) #9, !dbg !16554
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16556
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16012, metadata !DIExpression()) #9, !dbg !16557
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16014, metadata !DIExpression()) #9, !dbg !16558
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16560, !srcloc !16019
  store i32 %14, i32* %3, align 4, !dbg !16560
  %15 = load i32, i32* %3, align 4, !dbg !16561
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16562
  store i32 %15, i32* %16, align 4, !dbg !16563
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16564
  %18 = load i32, i32* %17, align 4, !dbg !16564
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16552
  store i32 %18, i32* %19, align 4, !dbg !16552
  br label %20, !dbg !16552

20:                                               ; preds = %43, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16565
  %22 = load i32, i32* %21, align 4, !dbg !16565
  %23 = icmp ne i32 %22, 0, !dbg !16565
  %24 = xor i1 %23, true, !dbg !16565
  br i1 %24, label %25, label %45, !dbg !16552

25:                                               ; preds = %20
  %26 = load i64, i64* @curr_tick, align 8, !dbg !16567
  %27 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16569
  %28 = call i64 @timeout_rem(%struct._timeout.195* noundef %27) #10, !dbg !16570
  %29 = add i64 %26, %28, !dbg !16571
  store i64 %29, i64* %9, align 8, !dbg !16572
  br label %30, !dbg !16573

30:                                               ; preds = %25
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16565
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !16565
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !16565
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16124, metadata !DIExpression()) #9, !dbg !16574
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16130, metadata !DIExpression()) #9, !dbg !16576
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16577
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16578
  %38 = load i32, i32* %37, align 4, !dbg !16578
  store i32 %38, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16134, metadata !DIExpression()) #9, !dbg !16579
  %39 = load i32, i32* %2, align 4, !dbg !16581
  %40 = icmp ne i32 %39, 0, !dbg !16582
  br i1 %40, label %41, label %42, !dbg !16583

41:                                               ; preds = %30
  br label %43, !dbg !16584

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16585, !srcloc !16145
  br label %43, !dbg !16586

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16565
  store i32 1, i32* %44, align 4, !dbg !16565
  br label %20, !dbg !16565, !llvm.loop !16587

45:                                               ; preds = %20
  %46 = load i64, i64* %9, align 8, !dbg !16589
  ret i64 %46, !dbg !16590
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_get_next_timeout_expiry() #1 !dbg !16591 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16592, metadata !DIExpression()), !dbg !16593
  store i32 -1, i32* %7, align 4, !dbg !16593
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16594, metadata !DIExpression()), !dbg !16596
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !16596
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !16596
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !16597, metadata !DIExpression()), !dbg !16596
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16004, metadata !DIExpression()) #9, !dbg !16598
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16600
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16012, metadata !DIExpression()) #9, !dbg !16601
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16014, metadata !DIExpression()) #9, !dbg !16602
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16604, !srcloc !16019
  store i32 %12, i32* %2, align 4, !dbg !16604
  %13 = load i32, i32* %2, align 4, !dbg !16605
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16606
  store i32 %13, i32* %14, align 4, !dbg !16607
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16608
  %16 = load i32, i32* %15, align 4, !dbg !16608
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16596
  store i32 %16, i32* %17, align 4, !dbg !16596
  br label %18, !dbg !16596

18:                                               ; preds = %38, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16609
  %20 = load i32, i32* %19, align 4, !dbg !16609
  %21 = icmp ne i32 %20, 0, !dbg !16609
  %22 = xor i1 %21, true, !dbg !16609
  br i1 %22, label %23, label %40, !dbg !16596

23:                                               ; preds = %18
  %24 = call i32 @next_timeout() #10, !dbg !16611
  store i32 %24, i32* %7, align 4, !dbg !16613
  br label %25, !dbg !16614

25:                                               ; preds = %23
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16609
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !16609
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !16609
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !16124, metadata !DIExpression()) #9, !dbg !16615
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !16130, metadata !DIExpression()) #9, !dbg !16617
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !16618
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !16619
  %33 = load i32, i32* %32, align 4, !dbg !16619
  store i32 %33, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16134, metadata !DIExpression()) #9, !dbg !16620
  %34 = load i32, i32* %1, align 4, !dbg !16622
  %35 = icmp ne i32 %34, 0, !dbg !16623
  br i1 %35, label %36, label %37, !dbg !16624

36:                                               ; preds = %25
  br label %38, !dbg !16625

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16626, !srcloc !16145
  br label %38, !dbg !16627

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16609
  store i32 1, i32* %39, align 4, !dbg !16609
  br label %18, !dbg !16609, !llvm.loop !16628

40:                                               ; preds = %18
  %41 = load i32, i32* %7, align 4, !dbg !16630
  ret i32 %41, !dbg !16631
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !16632 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16633, metadata !DIExpression()), !dbg !16634
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !16635, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16637, metadata !DIExpression()), !dbg !16639
  %17 = bitcast %union.anon.68* %11 to i8*, !dbg !16639
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !16639
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16640, metadata !DIExpression()), !dbg !16639
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16004, metadata !DIExpression()) #9, !dbg !16641
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16643
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16012, metadata !DIExpression()) #9, !dbg !16644
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16014, metadata !DIExpression()) #9, !dbg !16645
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16647, !srcloc !16019
  store i32 %19, i32* %4, align 4, !dbg !16647
  %20 = load i32, i32* %4, align 4, !dbg !16648
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16649
  store i32 %20, i32* %21, align 4, !dbg !16650
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16651
  %23 = load i32, i32* %22, align 4, !dbg !16651
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16639
  store i32 %23, i32* %24, align 4, !dbg !16639
  br label %25, !dbg !16639

25:                                               ; preds = %76, %2
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16652
  %27 = load i32, i32* %26, align 4, !dbg !16652
  %28 = icmp ne i32 %27, 0, !dbg !16652
  %29 = xor i1 %28, true, !dbg !16652
  br i1 %29, label %30, label %78, !dbg !16639

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %13, metadata !16654, metadata !DIExpression()), !dbg !16656
  %31 = call i32 @next_timeout() #10, !dbg !16657
  store i32 %31, i32* %13, align 4, !dbg !16656
  call void @llvm.dbg.declare(metadata i8* %14, metadata !16658, metadata !DIExpression()), !dbg !16659
  %32 = load i32, i32* %13, align 4, !dbg !16660
  %33 = sext i32 %32 to i64, !dbg !16660
  %34 = icmp eq i64 %33, -1, !dbg !16661
  br i1 %34, label %39, label %35, !dbg !16662

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !16663
  %37 = load i32, i32* %13, align 4, !dbg !16664
  %38 = icmp sle i32 %36, %37, !dbg !16665
  br label %39, !dbg !16662

39:                                               ; preds = %35, %30
  %40 = phi i1 [ true, %30 ], [ %38, %35 ]
  %41 = zext i1 %40 to i8, !dbg !16659
  store i8 %41, i8* %14, align 1, !dbg !16659
  call void @llvm.dbg.declare(metadata i8* %15, metadata !16666, metadata !DIExpression()), !dbg !16667
  %42 = load i32, i32* %13, align 4, !dbg !16668
  %43 = icmp sle i32 %42, 1, !dbg !16669
  %44 = zext i1 %43 to i8, !dbg !16667
  store i8 %44, i8* %15, align 1, !dbg !16667
  %45 = load i8, i8* %15, align 1, !dbg !16670
  %46 = trunc i8 %45 to i1, !dbg !16670
  br i1 %46, label %62, label %47, !dbg !16672

47:                                               ; preds = %39
  %48 = load i8, i8* %14, align 1, !dbg !16673
  %49 = trunc i8 %48 to i1, !dbg !16673
  br i1 %49, label %50, label %62, !dbg !16674

50:                                               ; preds = %47
  %51 = load i32, i32* %9, align 4, !dbg !16675
  %52 = load i32, i32* %13, align 4, !dbg !16675
  %53 = icmp slt i32 %51, %52, !dbg !16675
  br i1 %53, label %54, label %56, !dbg !16675

54:                                               ; preds = %50
  %55 = load i32, i32* %9, align 4, !dbg !16675
  br label %58, !dbg !16675

56:                                               ; preds = %50
  %57 = load i32, i32* %13, align 4, !dbg !16675
  br label %58, !dbg !16675

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ], !dbg !16675
  %60 = load i8, i8* %10, align 1, !dbg !16677
  %61 = trunc i8 %60 to i1, !dbg !16677
  call void @sys_clock_set_timeout(i32 noundef %59, i1 noundef zeroext %61) #10, !dbg !16678
  br label %62, !dbg !16679

62:                                               ; preds = %58, %47, %39
  br label %63, !dbg !16680

63:                                               ; preds = %62
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16652
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !16652
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !16652
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16124, metadata !DIExpression()) #9, !dbg !16681
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16130, metadata !DIExpression()) #9, !dbg !16683
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16684
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16685
  %71 = load i32, i32* %70, align 4, !dbg !16685
  store i32 %71, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16134, metadata !DIExpression()) #9, !dbg !16686
  %72 = load i32, i32* %3, align 4, !dbg !16688
  %73 = icmp ne i32 %72, 0, !dbg !16689
  br i1 %73, label %74, label %75, !dbg !16690

74:                                               ; preds = %63
  br label %76, !dbg !16691

75:                                               ; preds = %63
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16692, !srcloc !16145
  br label %76, !dbg !16693

76:                                               ; preds = %74, %75
  %77 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16652
  store i32 1, i32* %77, align 4, !dbg !16652
  br label %25, !dbg !16652, !llvm.loop !16694

78:                                               ; preds = %25
  ret void, !dbg !16696
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_announce(i32 noundef %0) #1 !dbg !16697 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i32, align 4
  %18 = alloca %union.anon.68, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !16700, metadata !DIExpression()), !dbg !16701
  %19 = load i32, i32* %14, align 4, !dbg !16702
  call void @z_time_slice(i32 noundef %19) #10, !dbg !16703
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16704, metadata !DIExpression()), !dbg !16705
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !16004, metadata !DIExpression()) #9, !dbg !16706
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !16708
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16012, metadata !DIExpression()) #9, !dbg !16709
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16014, metadata !DIExpression()) #9, !dbg !16710
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16712, !srcloc !16019
  store i32 %21, i32* %5, align 4, !dbg !16712
  %22 = load i32, i32* %5, align 4, !dbg !16713
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16714
  store i32 %22, i32* %23, align 4, !dbg !16715
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16716
  %25 = load i32, i32* %24, align 4, !dbg !16716
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16717
  store i32 %25, i32* %26, align 4, !dbg !16717
  %27 = load i32, i32* %14, align 4, !dbg !16718
  store i32 %27, i32* @announce_remaining, align 4, !dbg !16719
  br label %28, !dbg !16720

28:                                               ; preds = %65, %1
  %29 = call %struct._timeout.195* @first() #10, !dbg !16721
  %30 = icmp ne %struct._timeout.195* %29, null, !dbg !16722
  br i1 %30, label %31, label %38, !dbg !16723

31:                                               ; preds = %28
  %32 = call %struct._timeout.195* @first() #10, !dbg !16724
  %33 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %32, i32 0, i32 2, !dbg !16725
  %34 = load i64, i64* %33, align 8, !dbg !16725
  %35 = load i32, i32* @announce_remaining, align 4, !dbg !16726
  %36 = sext i32 %35 to i64, !dbg !16726
  %37 = icmp sle i64 %34, %36, !dbg !16727
  br label %38

38:                                               ; preds = %31, %28
  %39 = phi i1 [ false, %28 ], [ %37, %31 ], !dbg !16728
  br i1 %39, label %40, label %82, !dbg !16720

40:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !16729, metadata !DIExpression()), !dbg !16731
  %41 = call %struct._timeout.195* @first() #10, !dbg !16732
  store %struct._timeout.195* %41, %struct._timeout.195** %16, align 4, !dbg !16731
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16733, metadata !DIExpression()), !dbg !16734
  %42 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16735
  %43 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %42, i32 0, i32 2, !dbg !16736
  %44 = load i64, i64* %43, align 8, !dbg !16736
  %45 = trunc i64 %44 to i32, !dbg !16735
  store i32 %45, i32* %17, align 4, !dbg !16734
  %46 = load i32, i32* %17, align 4, !dbg !16737
  %47 = sext i32 %46 to i64, !dbg !16737
  %48 = load i64, i64* @curr_tick, align 8, !dbg !16738
  %49 = add i64 %48, %47, !dbg !16738
  store i64 %49, i64* @curr_tick, align 8, !dbg !16738
  %50 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16739
  %51 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %50, i32 0, i32 2, !dbg !16740
  store i64 0, i64* %51, align 8, !dbg !16741
  %52 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16742
  call void @remove_timeout(%struct._timeout.195* noundef %52) #10, !dbg !16743
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16744
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !16744
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !16744
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16124, metadata !DIExpression()) #9, !dbg !16745
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16130, metadata !DIExpression()) #9, !dbg !16747
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16748
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16749
  %60 = load i32, i32* %59, align 4, !dbg !16749
  store i32 %60, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16134, metadata !DIExpression()) #9, !dbg !16750
  %61 = load i32, i32* %3, align 4, !dbg !16752
  %62 = icmp ne i32 %61, 0, !dbg !16753
  br i1 %62, label %63, label %64, !dbg !16754

63:                                               ; preds = %40
  br label %65, !dbg !16755

64:                                               ; preds = %40
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16756, !srcloc !16145
  br label %65, !dbg !16757

65:                                               ; preds = %63, %64
  %66 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16758
  %67 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %66, i32 0, i32 1, !dbg !16759
  %68 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %67, align 8, !dbg !16759
  %69 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16760
  call void %68(%struct._timeout.195* noundef %69) #10, !dbg !16758
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !16004, metadata !DIExpression()) #9, !dbg !16761
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !16763
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16012, metadata !DIExpression()) #9, !dbg !16764
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16014, metadata !DIExpression()) #9, !dbg !16765
  %71 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16767, !srcloc !16019
  store i32 %71, i32* %4, align 4, !dbg !16767
  %72 = load i32, i32* %4, align 4, !dbg !16768
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16769
  store i32 %72, i32* %73, align 4, !dbg !16770
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16771
  %75 = load i32, i32* %74, align 4, !dbg !16771
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %18, i32 0, i32 0, !dbg !16772
  store i32 %75, i32* %76, align 4, !dbg !16772
  %77 = bitcast %union.anon.68* %15 to i8*, !dbg !16772
  %78 = bitcast %union.anon.68* %18 to i8*, !dbg !16772
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %77, i8* align 4 %78, i32 4, i1 false), !dbg !16772
  %79 = load i32, i32* %17, align 4, !dbg !16773
  %80 = load i32, i32* @announce_remaining, align 4, !dbg !16774
  %81 = sub nsw i32 %80, %79, !dbg !16774
  store i32 %81, i32* @announce_remaining, align 4, !dbg !16774
  br label %28, !dbg !16720, !llvm.loop !16775

82:                                               ; preds = %38
  %83 = call %struct._timeout.195* @first() #10, !dbg !16777
  %84 = icmp ne %struct._timeout.195* %83, null, !dbg !16779
  br i1 %84, label %85, label %92, !dbg !16780

85:                                               ; preds = %82
  %86 = load i32, i32* @announce_remaining, align 4, !dbg !16781
  %87 = sext i32 %86 to i64, !dbg !16781
  %88 = call %struct._timeout.195* @first() #10, !dbg !16783
  %89 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %88, i32 0, i32 2, !dbg !16784
  %90 = load i64, i64* %89, align 8, !dbg !16785
  %91 = sub nsw i64 %90, %87, !dbg !16785
  store i64 %91, i64* %89, align 8, !dbg !16785
  br label %92, !dbg !16786

92:                                               ; preds = %85, %82
  %93 = load i32, i32* @announce_remaining, align 4, !dbg !16787
  %94 = sext i32 %93 to i64, !dbg !16787
  %95 = load i64, i64* @curr_tick, align 8, !dbg !16788
  %96 = add i64 %95, %94, !dbg !16788
  store i64 %96, i64* @curr_tick, align 8, !dbg !16788
  store i32 0, i32* @announce_remaining, align 4, !dbg !16789
  %97 = call i32 @next_timeout() #10, !dbg !16790
  call void @sys_clock_set_timeout(i32 noundef %97, i1 noundef zeroext false) #10, !dbg !16791
  %98 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16792
  %99 = bitcast i32* %98 to [1 x i32]*, !dbg !16792
  %100 = load [1 x i32], [1 x i32]* %99, align 4, !dbg !16792
  %101 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %102 = bitcast i32* %101 to [1 x i32]*
  store [1 x i32] %100, [1 x i32]* %102, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16124, metadata !DIExpression()) #9, !dbg !16793
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16130, metadata !DIExpression()) #9, !dbg !16795
  %103 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16796
  %104 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16797
  %105 = load i32, i32* %104, align 4, !dbg !16797
  store i32 %105, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16134, metadata !DIExpression()) #9, !dbg !16798
  %106 = load i32, i32* %2, align 4, !dbg !16800
  %107 = icmp ne i32 %106, 0, !dbg !16801
  br i1 %107, label %108, label %109, !dbg !16802

108:                                              ; preds = %92
  br label %110, !dbg !16803

109:                                              ; preds = %92
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16804, !srcloc !16145
  br label %110, !dbg !16805

110:                                              ; preds = %108, %109
  ret void, !dbg !16806
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_tick_get() #1 !dbg !16807 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i64, align 8
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i64* %7, metadata !16810, metadata !DIExpression()), !dbg !16811
  store i64 0, i64* %7, align 8, !dbg !16811
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16812, metadata !DIExpression()), !dbg !16814
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !16814
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !16814
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !16815, metadata !DIExpression()), !dbg !16814
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16004, metadata !DIExpression()) #9, !dbg !16816
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16818
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16012, metadata !DIExpression()) #9, !dbg !16819
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16014, metadata !DIExpression()) #9, !dbg !16820
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16822, !srcloc !16019
  store i32 %12, i32* %2, align 4, !dbg !16822
  %13 = load i32, i32* %2, align 4, !dbg !16823
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16824
  store i32 %13, i32* %14, align 4, !dbg !16825
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16826
  %16 = load i32, i32* %15, align 4, !dbg !16826
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16814
  store i32 %16, i32* %17, align 4, !dbg !16814
  br label %18, !dbg !16814

18:                                               ; preds = %41, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16827
  %20 = load i32, i32* %19, align 4, !dbg !16827
  %21 = icmp ne i32 %20, 0, !dbg !16827
  %22 = xor i1 %21, true, !dbg !16827
  br i1 %22, label %23, label %43, !dbg !16814

23:                                               ; preds = %18
  %24 = load i64, i64* @curr_tick, align 8, !dbg !16829
  %25 = call i32 @elapsed.86() #10, !dbg !16831
  %26 = sext i32 %25 to i64, !dbg !16831
  %27 = add i64 %24, %26, !dbg !16832
  store i64 %27, i64* %7, align 8, !dbg !16833
  br label %28, !dbg !16834

28:                                               ; preds = %23
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16827
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !16827
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !16827
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !16124, metadata !DIExpression()) #9, !dbg !16835
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !16130, metadata !DIExpression()) #9, !dbg !16837
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !16838
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !16839
  %36 = load i32, i32* %35, align 4, !dbg !16839
  store i32 %36, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16134, metadata !DIExpression()) #9, !dbg !16840
  %37 = load i32, i32* %1, align 4, !dbg !16842
  %38 = icmp ne i32 %37, 0, !dbg !16843
  br i1 %38, label %39, label %40, !dbg !16844

39:                                               ; preds = %28
  br label %41, !dbg !16845

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16846, !srcloc !16145
  br label %41, !dbg !16847

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16827
  store i32 1, i32* %42, align 4, !dbg !16827
  br label %18, !dbg !16827, !llvm.loop !16848

43:                                               ; preds = %18
  %44 = load i64, i64* %7, align 8, !dbg !16850
  ret i64 %44, !dbg !16851
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_tick_get_32() #1 !dbg !16852 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !16853
  %2 = trunc i64 %1 to i32, !dbg !16854
  ret i32 %2, !dbg !16855
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_impl_k_uptime_ticks() #1 !dbg !16856 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !16857
  ret i64 %1, !dbg !16858
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) #1 !dbg !16859 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16860, metadata !DIExpression()), !dbg !16861
  br label %6, !dbg !16862

6:                                                ; preds = %1
  br label %7, !dbg !16863

7:                                                ; preds = %6
  %8 = load i32, i32* %2, align 4, !dbg !16865
  %9 = icmp eq i32 %8, 0, !dbg !16867
  br i1 %9, label %10, label %13, !dbg !16868

10:                                               ; preds = %7
  br label %11, !dbg !16869

11:                                               ; preds = %10
  br label %12, !dbg !16871

12:                                               ; preds = %11
  br label %33, !dbg !16873

13:                                               ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16874, metadata !DIExpression()), !dbg !16875
  %14 = call i32 @k_cycle_get_32() #10, !dbg !16876
  store i32 %14, i32* %3, align 4, !dbg !16875
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16877, metadata !DIExpression()), !dbg !16878
  %15 = load i32, i32* %2, align 4, !dbg !16879
  %16 = zext i32 %15 to i64, !dbg !16880
  %17 = call i32 @sys_clock_hw_cycles_per_sec.105() #10, !dbg !16881
  %18 = sext i32 %17 to i64, !dbg !16882
  %19 = mul i64 %16, %18, !dbg !16883
  %20 = udiv i64 %19, 1000000, !dbg !16884
  %21 = trunc i64 %20 to i32, !dbg !16885
  store i32 %21, i32* %4, align 4, !dbg !16878
  br label %22, !dbg !16886

22:                                               ; preds = %30, %13
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16887, metadata !DIExpression()), !dbg !16891
  %23 = call i32 @k_cycle_get_32() #10, !dbg !16892
  store i32 %23, i32* %5, align 4, !dbg !16891
  %24 = load i32, i32* %5, align 4, !dbg !16893
  %25 = load i32, i32* %3, align 4, !dbg !16895
  %26 = sub i32 %24, %25, !dbg !16896
  %27 = load i32, i32* %4, align 4, !dbg !16897
  %28 = icmp uge i32 %26, %27, !dbg !16898
  br i1 %28, label %29, label %30, !dbg !16899

29:                                               ; preds = %22
  br label %31, !dbg !16900

30:                                               ; preds = %22
  br label %22, !dbg !16902, !llvm.loop !16903

31:                                               ; preds = %29
  br label %32, !dbg !16906

32:                                               ; preds = %31
  br label %33, !dbg !16907

33:                                               ; preds = %12, %32
  ret void, !dbg !16909
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32() #1 !dbg !16910 {
  %1 = call i32 @arch_k_cycle_get_32() #10, !dbg !16911
  ret i32 %1, !dbg !16912
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.105() #1 !dbg !16913 {
  ret i32 48000000, !dbg !16914
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32() #1 !dbg !16915 {
  %1 = call i32 @sys_clock_cycle_get_32() #10, !dbg !16917
  ret i32 %1, !dbg !16918
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) #1 !dbg !16919 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca %union.argument_value, align 8
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !16922, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16924, metadata !DIExpression()), !dbg !16925
  %9 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16926
  %10 = load i64, i64* %9, align 8, !dbg !16926
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !16926
  store i64 -1, i64* %11, align 8, !dbg !16926
  %12 = icmp eq i64 %10, -1, !dbg !16926
  br i1 %12, label %13, label %14, !dbg !16928

13:                                               ; preds = %1
  store i64 -1, i64* %2, align 8, !dbg !16929
  br label %40, !dbg !16929

14:                                               ; preds = %1
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16931
  %16 = load i64, i64* %15, align 8, !dbg !16931
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %6, i32 0, i32 0, !dbg !16931
  store i64 0, i64* %17, align 8, !dbg !16931
  %18 = icmp eq i64 %16, 0, !dbg !16931
  br i1 %18, label %19, label %21, !dbg !16933

19:                                               ; preds = %14
  %20 = call i64 @sys_clock_tick_get() #10, !dbg !16934
  store i64 %20, i64* %2, align 8, !dbg !16936
  br label %40, !dbg !16936

21:                                               ; preds = %14
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16937
  %23 = load i64, i64* %22, align 8, !dbg !16937
  store i64 %23, i64* %4, align 8, !dbg !16939
  %24 = load i64, i64* %4, align 8, !dbg !16940
  %25 = sub nsw i64 -2, %24, !dbg !16940
  %26 = icmp sge i64 %25, 0, !dbg !16942
  br i1 %26, label %27, label %30, !dbg !16943

27:                                               ; preds = %21
  %28 = load i64, i64* %4, align 8, !dbg !16944
  %29 = sub nsw i64 -2, %28, !dbg !16944
  store i64 %29, i64* %2, align 8, !dbg !16946
  br label %40, !dbg !16946

30:                                               ; preds = %21
  %31 = call i64 @sys_clock_tick_get() #10, !dbg !16947
  %32 = load i64, i64* %4, align 8, !dbg !16948
  %33 = icmp sgt i64 1, %32, !dbg !16948
  br i1 %33, label %34, label %35, !dbg !16948

34:                                               ; preds = %30
  br label %37, !dbg !16948

35:                                               ; preds = %30
  %36 = load i64, i64* %4, align 8, !dbg !16948
  br label %37, !dbg !16948

37:                                               ; preds = %35, %34
  %38 = phi i64 [ 1, %34 ], [ %36, %35 ], !dbg !16948
  %39 = add nsw i64 %31, %38, !dbg !16949
  store i64 %39, i64* %2, align 8, !dbg !16950
  br label %40, !dbg !16950

40:                                               ; preds = %37, %27, %19, %13
  %41 = load i64, i64* %2, align 8, !dbg !16951
  ret i64 %41, !dbg !16951
}

; Function Attrs: noinline nounwind optnone
define dso_local void @boot_banner() #1 !dbg !16952 {
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.108, i32 0, i32 0)) #10, !dbg !16954
  ret void, !dbg !16955
}

attributes #0 = { "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { noinline noreturn nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { noinline nounwind optnone readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { alwaysinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin "no-builtins" }
attributes #11 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #12 = { nobuiltin noreturn "no-builtins" }
attributes #13 = { nobuiltin nounwind "no-builtins" }

!llvm.dbg.cu = !{!1614, !2, !3252, !27, !269, !3254, !3256, !3293, !3295, !278, !3297, !3299, !3331, !3333, !3349, !3365, !3408, !3468, !3498, !3514, !1046, !1056, !1623, !1722, !2467, !3524, !2590, !3526, !2753, !3529, !2759, !3085, !3547, !3097, !3549, !3215, !3552}
!llvm.ident = !{!3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554, !3554}
!llvm.module.flags = !{!3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 40, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1792, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 28)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 896, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread", scope: !27, file: !107, line: 36, type: !113, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !258, !262, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "_k_thread_data_thread", scope: !27, file: !107, line: 36, type: !108, isLocal: false, isDefinition: true, align: 32)
!107 = !DIFile(filename: "zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !{!111, !229, !238, !239, !244, !245, !246, !247, !248, !249, !251, !255}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !108, file: !109, line: 621, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !188, !201, !202, !203, !204, !224}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !113, file: !114, line: 247, baseType: !117, size: 384)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !118)
!118 = !{!119, !147, !155, !158, !159, !172, !174, !175}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 60, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 60, size: 64, elements: !121)
!121 = !{!122, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !120, file: !114, line: 61, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !126)
!126 = !{!127, !133}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 38, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 38, size: 32, elements: !129)
!129 = !{!130, !132}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !128, file: !124, line: 39, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !128, file: !124, line: 40, baseType: !131, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 42, baseType: !134, size: 32, offset: 32)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 42, size: 32, elements: !135)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !134, file: !124, line: 43, baseType: !131, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !134, file: !124, line: 44, baseType: !131, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !120, file: !114, line: 62, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !141)
!140 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !139, file: !140, line: 50, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!145 = !{!146}
!146 = !DISubrange(count: 2)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !117, file: !114, line: 68, baseType: !148, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !151)
!150 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !152)
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !151, file: !150, line: 232, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !125)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !117, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !117, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 90, baseType: !160, size: 16, offset: 112)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 90, size: 16, elements: !161)
!161 = !{!162, !169}
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !114, line: 91, baseType: !163, size: 16)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !160, file: !114, line: 91, size: 16, elements: !164)
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !163, file: !114, line: 96, baseType: !166, size: 8)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !167)
!167 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !163, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !160, file: !114, line: 100, baseType: !170, size: 16)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !171)
!171 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !117, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !117, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !117, file: !114, line: 131, baseType: !176, size: 192, offset: 192)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !177)
!177 = !{!178, !179, !185}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !176, file: !150, line: 245, baseType: !123, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !176, file: !150, line: 246, baseType: !180, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !176, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !187)
!187 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !113, file: !114, line: 250, baseType: !189, size: 288, offset: 384)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !191)
!190 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !189, file: !190, line: 26, baseType: !173, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !189, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !189, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !189, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !189, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !189, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !189, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !189, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !189, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !113, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !113, file: !114, line: 256, baseType: !149, size: 64, offset: 704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !113, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !113, file: !114, line: 325, baseType: !205, size: 32, offset: 800)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !207)
!207 = !{!208, !219, !220}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !206, file: !109, line: 5074, baseType: !209, size: 96)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !209, file: !210, line: 57, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !210, line: 57, flags: DIFlagFwdDecl)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !209, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !209, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !206, file: !109, line: 5075, baseType: !149, size: 64, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !206, file: !109, line: 5076, baseType: !221, offset: 160)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !113, file: !114, line: 343, baseType: !225, size: 64, offset: 832)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !225, file: !190, line: 63, baseType: !173, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !225, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !108, file: !109, line: 622, baseType: !230, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !234, line: 48, baseType: !237, size: 8)
!237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !108, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !108, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !232, line: 46, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !102, !102, !102}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !108, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !108, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !108, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !108, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !108, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !108, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !108, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{null}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !108, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "thread", scope: !27, file: !107, line: 36, type: !260, isLocal: false, isDefinition: true)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !112)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread", scope: !27, file: !107, line: 36, type: !264, isLocal: false, isDefinition: true, align: 64)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 4096, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 512)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "_char_out", scope: !269, file: !272, line: 54, type: !273, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !271, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!271 = !{!267}
!272 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !103}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "__init_atmel_samd_init", scope: !278, file: !1012, line: 202, type: !1013, isLocal: true, isDefinition: true, align: 32)
!278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !279, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !280, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!280 = !{!102, !103, !281, !403, !742, !743, !810}
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nvmctrl", file: !283, line: 335, baseType: !284)
!283 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/nvmctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 320, size: 288, elements: !285)
!285 = !{!286, !297, !303, !317, !328, !339, !343, !354, !355, !366, !367, !382, !383, !393}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !284, file: !283, line: 321, baseType: !287, size: 16)
!287 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLA_Type", file: !283, line: 50, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 43, size: 16, elements: !290)
!290 = !{!291, !296}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !289, file: !283, line: 48, baseType: !292, size: 16)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !289, file: !283, line: 44, size: 16, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !292, file: !283, line: 45, baseType: !170, size: 7, flags: DIFlagBitField, extraData: i64 0)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "CMDEX", scope: !292, file: !283, line: 47, baseType: !170, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !289, file: !283, line: 49, baseType: !170, size: 16)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !284, file: !283, line: 322, baseType: !298, size: 16, offset: 16)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 16, elements: !145)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "RoReg8", file: !300, line: 52, baseType: !301)
!300 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/samd21g18a.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !284, file: !283, line: 323, baseType: !304, size: 32, offset: 32)
!304 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLB_Type", file: !283, line: 107, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 94, size: 32, elements: !307)
!307 = !{!308, !316}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !306, file: !283, line: 105, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !306, file: !283, line: 95, size: 32, elements: !310)
!310 = !{!311, !312, !313, !314, !315}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "RWS", scope: !309, file: !283, line: 97, baseType: !173, size: 4, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "MANW", scope: !309, file: !283, line: 99, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPPRM", scope: !309, file: !283, line: 100, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "READMODE", scope: !309, file: !283, line: 102, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "CACHEDIS", scope: !309, file: !283, line: 103, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !306, file: !283, line: 106, baseType: !173, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "PARAM", scope: !284, file: !283, line: 324, baseType: !318, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_PARAM_Type", file: !283, line: 155, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 148, size: 32, elements: !321)
!321 = !{!322, !327}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !320, file: !283, line: 153, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !320, file: !283, line: 149, size: 32, elements: !324)
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "NVMP", scope: !323, file: !283, line: 150, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "PSZ", scope: !323, file: !283, line: 151, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !320, file: !283, line: 154, baseType: !173, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !284, file: !283, line: 325, baseType: !329, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENCLR_Type", file: !283, line: 194, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 187, size: 8, elements: !332)
!332 = !{!333, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !331, file: !283, line: 192, baseType: !334, size: 8)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !331, file: !283, line: 188, size: 8, elements: !335)
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !334, file: !283, line: 189, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !334, file: !283, line: 190, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !331, file: !283, line: 193, baseType: !156, size: 8)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !284, file: !283, line: 326, baseType: !340, size: 24, offset: 104)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 24, elements: !341)
!341 = !{!342}
!342 = !DISubrange(count: 3)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !284, file: !283, line: 327, baseType: !344, size: 8, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENSET_Type", file: !283, line: 215, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 208, size: 8, elements: !347)
!347 = !{!348, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !346, file: !283, line: 213, baseType: !349, size: 8)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !283, line: 209, size: 8, elements: !350)
!350 = !{!351, !352}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !349, file: !283, line: 210, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !349, file: !283, line: 211, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !346, file: !283, line: 214, baseType: !156, size: 8)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !284, file: !283, line: 328, baseType: !340, size: 24, offset: 136)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !284, file: !283, line: 329, baseType: !356, size: 8, offset: 160)
!356 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTFLAG_Type", file: !283, line: 236, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 229, size: 8, elements: !359)
!359 = !{!360, !365}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !358, file: !283, line: 234, baseType: !361, size: 8)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !358, file: !283, line: 230, size: 8, elements: !362)
!362 = !{!363, !364}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !361, file: !283, line: 231, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !361, file: !283, line: 232, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !358, file: !283, line: 235, baseType: !156, size: 8)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !284, file: !283, line: 330, baseType: !340, size: 24, offset: 168)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !284, file: !283, line: 331, baseType: !368, size: 16, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_STATUS_Type", file: !283, line: 262, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 250, size: 16, elements: !371)
!371 = !{!372, !381}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !370, file: !283, line: 260, baseType: !373, size: 16)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !283, line: 251, size: 16, elements: !374)
!374 = !{!375, !376, !377, !378, !379, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "PRM", scope: !373, file: !283, line: 252, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !373, file: !283, line: 253, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "PROGE", scope: !373, file: !283, line: 254, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "LOCKE", scope: !373, file: !283, line: 255, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "NVME", scope: !373, file: !283, line: 256, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "SB", scope: !373, file: !283, line: 258, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !370, file: !283, line: 261, baseType: !170, size: 16)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !284, file: !283, line: 332, baseType: !298, size: 16, offset: 208)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !284, file: !283, line: 333, baseType: !384, size: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_ADDR_Type", file: !283, line: 290, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 284, size: 32, elements: !387)
!387 = !{!388, !392}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !386, file: !283, line: 288, baseType: !389, size: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !386, file: !283, line: 285, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !389, file: !283, line: 286, baseType: !173, size: 22, flags: DIFlagBitField, extraData: i64 0)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !386, file: !283, line: 289, baseType: !173, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !284, file: !283, line: 334, baseType: !394, size: 16, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_LOCK_Type", file: !283, line: 308, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 303, size: 16, elements: !397)
!397 = !{!398, !402}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !396, file: !283, line: 306, baseType: !399, size: 16)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !283, line: 304, size: 16, elements: !400)
!400 = !{!401}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !399, file: !283, line: 305, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !396, file: !283, line: 307, baseType: !170, size: 16)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sysctrl", file: !405, line: 928, baseType: !406)
!405 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sysctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 899, size: 672, elements: !407)
!407 = !{!408, !432, !456, !482, !507, !523, !524, !542, !543, !560, !571, !572, !587, !607, !608, !620, !632, !642, !643, !660, !664, !675, !676, !688, !700, !701, !712, !728}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !406, file: !405, line: 900, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENCLR_Type", file: !405, line: 64, baseType: !411)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 43, size: 32, elements: !412)
!412 = !{!413, !431}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !411, file: !405, line: 62, baseType: !414, size: 32)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !405, line: 44, size: 32, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !414, file: !405, line: 45, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !414, file: !405, line: 46, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !414, file: !405, line: 47, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !414, file: !405, line: 48, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !414, file: !405, line: 49, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !414, file: !405, line: 50, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !414, file: !405, line: 51, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !414, file: !405, line: 52, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !414, file: !405, line: 53, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !414, file: !405, line: 54, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !414, file: !405, line: 55, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !414, file: !405, line: 56, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !414, file: !405, line: 58, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !414, file: !405, line: 59, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !414, file: !405, line: 60, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !411, file: !405, line: 63, baseType: !173, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !406, file: !405, line: 901, baseType: !433, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENSET_Type", file: !405, line: 125, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 104, size: 32, elements: !436)
!436 = !{!437, !455}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !435, file: !405, line: 123, baseType: !438, size: 32)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !405, line: 105, size: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !438, file: !405, line: 106, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !438, file: !405, line: 107, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !438, file: !405, line: 108, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !438, file: !405, line: 109, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !438, file: !405, line: 110, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !438, file: !405, line: 111, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !438, file: !405, line: 112, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !438, file: !405, line: 113, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !438, file: !405, line: 114, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !438, file: !405, line: 115, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !438, file: !405, line: 116, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !438, file: !405, line: 117, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !438, file: !405, line: 119, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !438, file: !405, line: 120, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !438, file: !405, line: 121, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !435, file: !405, line: 124, baseType: !173, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !406, file: !405, line: 902, baseType: !457, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTFLAG_Type", file: !405, line: 186, baseType: !459)
!459 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 165, size: 32, elements: !460)
!460 = !{!461, !481}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !459, file: !405, line: 184, baseType: !462, size: 32)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !459, file: !405, line: 166, size: 32, elements: !463)
!463 = !{!464, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !462, file: !405, line: 167, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !462, file: !405, line: 168, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !462, file: !405, line: 169, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !462, file: !405, line: 170, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !462, file: !405, line: 171, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !462, file: !405, line: 172, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !462, file: !405, line: 173, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !462, file: !405, line: 174, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !462, file: !405, line: 175, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !462, file: !405, line: 176, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !462, file: !405, line: 177, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !462, file: !405, line: 178, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !462, file: !405, line: 180, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !462, file: !405, line: 181, baseType: !465, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !462, file: !405, line: 182, baseType: !465, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !459, file: !405, line: 185, baseType: !173, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "PCLKSR", scope: !406, file: !405, line: 903, baseType: !483, size: 32, offset: 96)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_PCLKSR_Type", file: !405, line: 247, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 226, size: 32, elements: !487)
!487 = !{!488, !506}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !486, file: !405, line: 245, baseType: !489, size: 32)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !486, file: !405, line: 227, size: 32, elements: !490)
!490 = !{!491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !489, file: !405, line: 228, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !489, file: !405, line: 229, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !489, file: !405, line: 230, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !489, file: !405, line: 231, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !489, file: !405, line: 232, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !489, file: !405, line: 233, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !489, file: !405, line: 234, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !489, file: !405, line: 235, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !489, file: !405, line: 236, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !489, file: !405, line: 237, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !489, file: !405, line: 238, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !489, file: !405, line: 239, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !489, file: !405, line: 241, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !489, file: !405, line: 242, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !489, file: !405, line: 243, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !486, file: !405, line: 246, baseType: !173, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC", scope: !406, file: !405, line: 904, baseType: !508, size: 16, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC_Type", file: !405, line: 300, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 287, size: 16, elements: !511)
!511 = !{!512, !522}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !510, file: !405, line: 298, baseType: !513, size: 16)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !510, file: !405, line: 288, size: 16, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !521}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !513, file: !405, line: 290, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !513, file: !405, line: 291, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !513, file: !405, line: 293, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !513, file: !405, line: 294, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GAIN", scope: !513, file: !405, line: 295, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "AMPGC", scope: !513, file: !405, line: 296, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !513, file: !405, line: 297, baseType: !170, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !510, file: !405, line: 299, baseType: !170, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !406, file: !405, line: 905, baseType: !298, size: 16, offset: 144)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32K", scope: !406, file: !405, line: 906, baseType: !525, size: 16, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC32K_Type", file: !405, line: 352, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 336, size: 16, elements: !528)
!528 = !{!529, !541}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !527, file: !405, line: 350, baseType: !530, size: 16)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !405, line: 337, size: 16, elements: !531)
!531 = !{!532, !533, !534, !535, !536, !537, !538, !539, !540}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !530, file: !405, line: 339, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !530, file: !405, line: 340, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !530, file: !405, line: 341, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !530, file: !405, line: 342, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "AAMPEN", scope: !530, file: !405, line: 343, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !530, file: !405, line: 344, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !530, file: !405, line: 345, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !530, file: !405, line: 346, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !530, file: !405, line: 348, baseType: !170, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !527, file: !405, line: 351, baseType: !170, size: 16)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !406, file: !405, line: 907, baseType: !298, size: 16, offset: 176)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32K", scope: !406, file: !405, line: 908, baseType: !544, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC32K_Type", file: !405, line: 398, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 381, size: 32, elements: !547)
!547 = !{!548, !559}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !546, file: !405, line: 396, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !546, file: !405, line: 382, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !549, file: !405, line: 384, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !549, file: !405, line: 385, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !549, file: !405, line: 386, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !549, file: !405, line: 388, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !549, file: !405, line: 389, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !549, file: !405, line: 390, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !549, file: !405, line: 392, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !549, file: !405, line: 394, baseType: !173, size: 7, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !546, file: !405, line: 397, baseType: !173, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "OSCULP32K", scope: !406, file: !405, line: 909, baseType: !561, size: 8, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !562)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSCULP32K_Type", file: !405, line: 433, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 426, size: 8, elements: !564)
!564 = !{!565, !570}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !563, file: !405, line: 431, baseType: !566, size: 8)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !563, file: !405, line: 427, size: 8, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !566, file: !405, line: 428, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !566, file: !405, line: 430, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !563, file: !405, line: 432, baseType: !156, size: 8)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !406, file: !405, line: 910, baseType: !340, size: 24, offset: 232)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8M", scope: !406, file: !405, line: 911, baseType: !573, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC8M_Type", file: !405, line: 462, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 448, size: 32, elements: !576)
!576 = !{!577, !586}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !575, file: !405, line: 460, baseType: !578, size: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !405, line: 449, size: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !578, file: !405, line: 451, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !578, file: !405, line: 453, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !578, file: !405, line: 454, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "PRESC", scope: !578, file: !405, line: 455, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !578, file: !405, line: 457, baseType: !173, size: 12, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "FRANGE", scope: !578, file: !405, line: 459, baseType: !173, size: 2, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !575, file: !405, line: 461, baseType: !173, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRL", scope: !406, file: !405, line: 912, baseType: !588, size: 16, offset: 288)
!588 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLCTRL_Type", file: !405, line: 520, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 503, size: 16, elements: !591)
!591 = !{!592, !606}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !590, file: !405, line: 518, baseType: !593, size: 16)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !590, file: !405, line: 504, size: 16, elements: !594)
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !593, file: !405, line: 506, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !593, file: !405, line: 507, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "STABLE", scope: !593, file: !405, line: 508, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "LLAW", scope: !593, file: !405, line: 509, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "USBCRM", scope: !593, file: !405, line: 510, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !593, file: !405, line: 511, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !593, file: !405, line: 512, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "CCDIS", scope: !593, file: !405, line: 513, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "QLDIS", scope: !593, file: !405, line: 514, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "BPLCKC", scope: !593, file: !405, line: 515, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "WAITLOCK", scope: !593, file: !405, line: 516, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !590, file: !405, line: 519, baseType: !170, size: 16)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !406, file: !405, line: 913, baseType: !298, size: 16, offset: 304)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !406, file: !405, line: 914, baseType: !609, size: 32, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !610)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLVAL_Type", file: !405, line: 559, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 552, size: 32, elements: !612)
!612 = !{!613, !619}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !611, file: !405, line: 557, baseType: !614, size: 32)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !405, line: 553, size: 32, elements: !615)
!615 = !{!616, !617, !618}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "FINE", scope: !614, file: !405, line: 554, baseType: !173, size: 10, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "COARSE", scope: !614, file: !405, line: 555, baseType: !173, size: 6, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "DIFF", scope: !614, file: !405, line: 556, baseType: !173, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !611, file: !405, line: 558, baseType: !173, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !406, file: !405, line: 915, baseType: !621, size: 32, offset: 352)
!621 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !622)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLMUL_Type", file: !405, line: 585, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 578, size: 32, elements: !624)
!624 = !{!625, !631}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !623, file: !405, line: 583, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !623, file: !405, line: 579, size: 32, elements: !627)
!627 = !{!628, !629, !630}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "MUL", scope: !626, file: !405, line: 580, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "FSTEP", scope: !626, file: !405, line: 581, baseType: !173, size: 10, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "CSTEP", scope: !626, file: !405, line: 582, baseType: !173, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !623, file: !405, line: 584, baseType: !173, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLSYNC", scope: !406, file: !405, line: 916, baseType: !633, size: 8, offset: 384)
!633 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLSYNC_Type", file: !405, line: 610, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 604, size: 8, elements: !636)
!636 = !{!637, !641}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !635, file: !405, line: 608, baseType: !638, size: 8)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !635, file: !405, line: 605, size: 8, elements: !639)
!639 = !{!640}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "READREQ", scope: !638, file: !405, line: 607, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !635, file: !405, line: 609, baseType: !156, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !406, file: !405, line: 917, baseType: !340, size: 24, offset: 392)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !406, file: !405, line: 918, baseType: !644, size: 32, offset: 416)
!644 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_BOD33_Type", file: !405, line: 639, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 622, size: 32, elements: !647)
!647 = !{!648, !659}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !646, file: !405, line: 637, baseType: !649, size: 32)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !405, line: 623, size: 32, elements: !650)
!650 = !{!651, !652, !653, !654, !655, !656, !657, !658}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !649, file: !405, line: 625, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "HYST", scope: !649, file: !405, line: 626, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ACTION", scope: !649, file: !405, line: 627, baseType: !173, size: 2, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !649, file: !405, line: 629, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !649, file: !405, line: 631, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "CEN", scope: !649, file: !405, line: 632, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "PSEL", scope: !649, file: !405, line: 634, baseType: !173, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "LEVEL", scope: !649, file: !405, line: 635, baseType: !173, size: 6, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !646, file: !405, line: 638, baseType: !173, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !406, file: !405, line: 919, baseType: !661, size: 32, offset: 448)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 32, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 4)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "VREG", scope: !406, file: !405, line: 920, baseType: !665, size: 16, offset: 480)
!665 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREG_Type", file: !405, line: 715, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 706, size: 16, elements: !668)
!668 = !{!669, !674}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !667, file: !405, line: 713, baseType: !670, size: 16)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !667, file: !405, line: 707, size: 16, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !670, file: !405, line: 709, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "FORCELDO", scope: !670, file: !405, line: 711, baseType: !170, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !667, file: !405, line: 714, baseType: !170, size: 16)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !406, file: !405, line: 921, baseType: !298, size: 16, offset: 496)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "VREF", scope: !406, file: !405, line: 922, baseType: !677, size: 32, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREF_Type", file: !405, line: 739, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 729, size: 32, elements: !680)
!680 = !{!681, !687}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !679, file: !405, line: 737, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !679, file: !405, line: 730, size: 32, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "TSEN", scope: !682, file: !405, line: 732, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "BGOUTEN", scope: !682, file: !405, line: 733, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !682, file: !405, line: 735, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !679, file: !405, line: 738, baseType: !173, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLA", scope: !406, file: !405, line: 923, baseType: !689, size: 8, offset: 544)
!689 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !690)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLA_Type", file: !405, line: 765, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 756, size: 8, elements: !692)
!692 = !{!693, !699}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !691, file: !405, line: 763, baseType: !694, size: 8)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !405, line: 757, size: 8, elements: !695)
!695 = !{!696, !697, !698}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !694, file: !405, line: 759, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !694, file: !405, line: 761, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !694, file: !405, line: 762, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !691, file: !405, line: 764, baseType: !156, size: 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !406, file: !405, line: 924, baseType: !340, size: 24, offset: 552)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !406, file: !405, line: 925, baseType: !702, size: 32, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !703)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLRATIO_Type", file: !405, line: 789, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 781, size: 32, elements: !705)
!705 = !{!706, !711}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !704, file: !405, line: 787, baseType: !707, size: 32)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !704, file: !405, line: 782, size: 32, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "LDR", scope: !707, file: !405, line: 783, baseType: !173, size: 12, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "LDRFRAC", scope: !707, file: !405, line: 785, baseType: !173, size: 4, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !704, file: !405, line: 788, baseType: !173, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLB", scope: !406, file: !405, line: 926, baseType: !713, size: 32, offset: 608)
!713 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !714)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLB_Type", file: !405, line: 820, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 805, size: 32, elements: !716)
!716 = !{!717, !727}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !715, file: !405, line: 818, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !405, line: 806, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724, !725, !726}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "FILTER", scope: !718, file: !405, line: 807, baseType: !173, size: 2, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "LPEN", scope: !718, file: !405, line: 808, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "WUF", scope: !718, file: !405, line: 809, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "REFCLK", scope: !718, file: !405, line: 810, baseType: !173, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "LTIME", scope: !718, file: !405, line: 812, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "LBYPASS", scope: !718, file: !405, line: 814, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !718, file: !405, line: 816, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !715, file: !405, line: 819, baseType: !173, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSTATUS", scope: !406, file: !405, line: 927, baseType: !729, size: 8, offset: 640)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !731)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLSTATUS_Type", file: !405, line: 881, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 872, size: 8, elements: !733)
!733 = !{!734, !741}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !732, file: !405, line: 879, baseType: !735, size: 8)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !732, file: !405, line: 873, size: 8, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !735, file: !405, line: 874, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "CLKRDY", scope: !735, file: !405, line: 875, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !735, file: !405, line: 876, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !735, file: !405, line: 877, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !732, file: !405, line: 880, baseType: !156, size: 8)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !746)
!745 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/gclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !747)
!747 = !{!748, !758, !769, !782, !799}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !746, file: !745, line: 285, baseType: !749, size: 8)
!749 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !752)
!752 = !{!753, !757}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !751, file: !745, line: 47, baseType: !754, size: 8)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !751, file: !745, line: 44, size: 8, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !754, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !751, file: !745, line: 48, baseType: !156, size: 8)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !746, file: !745, line: 286, baseType: !759, size: 8, offset: 8)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !763)
!763 = !{!764, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !762, file: !745, line: 65, baseType: !765, size: 8)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !762, file: !745, line: 62, size: 8, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !765, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !762, file: !745, line: 66, baseType: !156, size: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !746, file: !745, line: 287, baseType: !770, size: 16, offset: 16)
!770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !773)
!773 = !{!774, !781}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !772, file: !745, line: 87, baseType: !775, size: 16)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !772, file: !745, line: 80, size: 16, elements: !776)
!776 = !{!777, !778, !779, !780}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !775, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !775, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !775, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !775, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !772, file: !745, line: 88, baseType: !170, size: 16)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !746, file: !745, line: 288, baseType: !783, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !786)
!786 = !{!787, !798}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !785, file: !745, line: 212, baseType: !788, size: 32)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !785, file: !745, line: 200, size: 32, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796, !797}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !788, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !788, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !788, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !788, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !788, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !788, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !788, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !788, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !785, file: !745, line: 213, baseType: !173, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !746, file: !745, line: 289, baseType: !800, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !803)
!803 = !{!804, !809}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !802, file: !745, line: 266, baseType: !805, size: 32)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !745, line: 261, size: 32, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !805, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !805, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !802, file: !745, line: 267, baseType: !173, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !813)
!812 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/pm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !814)
!814 = !{!815, !821, !831, !835, !845, !855, !865, !875, !879, !895, !911, !927, !957, !961, !971, !981, !991, !995}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !813, file: !812, line: 495, baseType: !816, size: 8)
!816 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !818, file: !812, line: 44, baseType: !156, size: 8)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !813, file: !812, line: 496, baseType: !822, size: 8, offset: 8)
!822 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !825)
!825 = !{!826, !830}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !824, file: !812, line: 59, baseType: !827, size: 8)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !812, line: 56, size: 8, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !827, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !824, file: !812, line: 60, baseType: !156, size: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !813, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 48, elements: !833)
!833 = !{!834}
!834 = !DISubrange(count: 6)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !813, file: !812, line: 498, baseType: !836, size: 8, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !837)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !839)
!839 = !{!840, !844}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !838, file: !812, line: 84, baseType: !841, size: 8)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !838, file: !812, line: 81, size: 8, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !841, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !838, file: !812, line: 85, baseType: !156, size: 8)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !813, file: !812, line: 499, baseType: !846, size: 8, offset: 72)
!846 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !849)
!849 = !{!850, !854}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !848, file: !812, line: 119, baseType: !851, size: 8)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !848, file: !812, line: 116, size: 8, elements: !852)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !851, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !848, file: !812, line: 120, baseType: !156, size: 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !813, file: !812, line: 500, baseType: !856, size: 8, offset: 80)
!856 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !859)
!859 = !{!860, !864}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !858, file: !812, line: 154, baseType: !861, size: 8)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !812, line: 151, size: 8, elements: !862)
!862 = !{!863}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !861, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !858, file: !812, line: 155, baseType: !156, size: 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !813, file: !812, line: 501, baseType: !866, size: 8, offset: 88)
!866 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !869)
!869 = !{!870, !874}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !868, file: !812, line: 189, baseType: !871, size: 8)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !868, file: !812, line: 186, size: 8, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !871, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !868, file: !812, line: 190, baseType: !156, size: 8)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !813, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 64, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !813, file: !812, line: 503, baseType: !880, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !883)
!883 = !{!884, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !882, file: !812, line: 230, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !882, file: !812, line: 221, size: 32, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !885, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !885, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !885, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !885, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !885, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !885, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !885, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !882, file: !812, line: 231, baseType: !173, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !813, file: !812, line: 504, baseType: !896, size: 32, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !899)
!899 = !{!900, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !898, file: !812, line: 266, baseType: !901, size: 32)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !898, file: !812, line: 257, size: 32, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !901, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !901, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !901, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !901, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !901, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !901, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !901, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !898, file: !812, line: 267, baseType: !173, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !813, file: !812, line: 505, baseType: !912, size: 32, offset: 224)
!912 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !915)
!915 = !{!916, !926}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !914, file: !812, line: 302, baseType: !917, size: 32)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !914, file: !812, line: 293, size: 32, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !917, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !917, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !917, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !917, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !917, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !917, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !917, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !914, file: !812, line: 303, baseType: !173, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !813, file: !812, line: 506, baseType: !928, size: 32, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !931)
!931 = !{!932, !956}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !930, file: !812, line: 352, baseType: !933, size: 32)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !812, line: 329, size: 32, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !933, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !933, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !933, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !933, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !933, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !933, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !933, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !933, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !933, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !933, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !933, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !933, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !933, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !933, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !933, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !933, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !933, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !933, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !933, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !933, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !933, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !930, file: !812, line: 353, baseType: !173, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !813, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 128, elements: !959)
!959 = !{!960}
!960 = !DISubrange(count: 16)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !813, file: !812, line: 508, baseType: !962, size: 8, offset: 416)
!962 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !965)
!965 = !{!966, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !964, file: !812, line: 410, baseType: !967, size: 8)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !964, file: !812, line: 407, size: 8, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !967, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !964, file: !812, line: 411, baseType: !156, size: 8)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !813, file: !812, line: 509, baseType: !972, size: 8, offset: 424)
!972 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !975)
!975 = !{!976, !980}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !974, file: !812, line: 428, baseType: !977, size: 8)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !974, file: !812, line: 425, size: 8, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !977, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !974, file: !812, line: 429, baseType: !156, size: 8)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !813, file: !812, line: 510, baseType: !982, size: 8, offset: 432)
!982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !983)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !985)
!985 = !{!986, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !984, file: !812, line: 446, baseType: !987, size: 8)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !984, file: !812, line: 443, size: 8, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !987, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !984, file: !812, line: 447, baseType: !156, size: 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !813, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 8, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 1)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !813, file: !812, line: 512, baseType: !996, size: 8, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1000)
!1000 = !{!1001, !1010}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !999, file: !812, line: 470, baseType: !1002, size: 8)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !999, file: !812, line: 461, size: 8, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1002, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1002, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1002, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1002, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1002, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1002, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !999, file: !812, line: 471, baseType: !156, size: 8)
!1011 = !{!276}
!1012 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1016)
!1015 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1043}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1014, file: !1015, line: 60, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1025)
!1024 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = !{!1026, !1027, !1028, !1029, !1036, !1037}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !1024, line: 380, baseType: !256, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1023, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1023, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1023, file: !1024, line: 386, baseType: !1030, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1031, file: !1024, line: 359, baseType: !156, size: 8)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1031, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1035 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1023, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1023, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1024, line: 43, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1042)
!1042 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1014, file: !1015, line: 65, baseType: !1021, size: 32, offset: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1046, file: !1053, line: 21, type: !273, isLocal: true, isDefinition: true)
!1046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1047, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1048, globals: !1052, splitDebugInlining: false, nameTableKind: None)
!1047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1048 = !{!1049, !103, !102}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1051, line: 22, baseType: !103)
!1051 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !{!1044}
!1053 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__device_dts_ord_18", scope: !1056, file: !1544, line: 411, type: !1558, isLocal: false, isDefinition: true, align: 32)
!1056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1057, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1058, retainedTypes: !1067, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1057 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1058 = !{!1059}
!1059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sam0_eic_trigger", file: !1060, line: 19, baseType: !32, size: 32, elements: !1061)
!1060 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/sam0_eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1061 = !{!1062, !1063, !1064, !1065, !1066}
!1062 = !DIEnumerator(name: "SAM0_EIC_RISING", value: 0)
!1063 = !DIEnumerator(name: "SAM0_EIC_FALLING", value: 1)
!1064 = !DIEnumerator(name: "SAM0_EIC_BOTH", value: 2)
!1065 = !DIEnumerator(name: "SAM0_EIC_HIGH", value: 3)
!1066 = !DIEnumerator(name: "SAM0_EIC_LOW", value: 4)
!1067 = !{!1068, !1287, !1475}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eic", file: !1070, line: 661, baseType: !1071)
!1070 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1070, line: 650, size: 256, elements: !1072)
!1072 = !{!1073, !1084, !1095, !1106, !1116, !1145, !1174, !1203, !1232, !1261}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1071, file: !1070, line: 651, baseType: !1074, size: 8)
!1074 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CTRL_Type", file: !1070, line: 50, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 43, size: 8, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1076, file: !1070, line: 48, baseType: !1079, size: 8)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1076, file: !1070, line: 44, size: 8, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1079, file: !1070, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1079, file: !1070, line: 46, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1076, file: !1070, line: 49, baseType: !156, size: 8)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1071, file: !1070, line: 652, baseType: !1085, size: 8, offset: 8)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_STATUS_Type", file: !1070, line: 70, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 64, size: 8, elements: !1089)
!1089 = !{!1090, !1094}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1088, file: !1070, line: 68, baseType: !1091, size: 8)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1088, file: !1070, line: 65, size: 8, elements: !1092)
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1091, file: !1070, line: 67, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1088, file: !1070, line: 69, baseType: !156, size: 8)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "NMICTRL", scope: !1071, file: !1070, line: 653, baseType: !1096, size: 8, offset: 16)
!1096 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMICTRL_Type", file: !1070, line: 89, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 82, size: 8, elements: !1099)
!1099 = !{!1100, !1105}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1098, file: !1070, line: 87, baseType: !1101, size: 8)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1098, file: !1070, line: 83, size: 8, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "NMISENSE", scope: !1101, file: !1070, line: 84, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFILTEN", scope: !1101, file: !1070, line: 85, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1098, file: !1070, line: 88, baseType: !156, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFLAG", scope: !1071, file: !1070, line: 654, baseType: !1107, size: 8, offset: 24)
!1107 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMIFLAG_Type", file: !1070, line: 122, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 116, size: 8, elements: !1110)
!1110 = !{!1111, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1109, file: !1070, line: 120, baseType: !1112, size: 8)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1109, file: !1070, line: 117, size: 8, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "NMI", scope: !1112, file: !1070, line: 118, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1109, file: !1070, line: 121, baseType: !156, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !1071, file: !1070, line: 655, baseType: !1117, size: 32, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_EVCTRL_Type", file: !1070, line: 159, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 134, size: 32, elements: !1120)
!1120 = !{!1121, !1140, !1144}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1119, file: !1070, line: 153, baseType: !1122, size: 32)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 135, size: 32, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO0", scope: !1122, file: !1070, line: 136, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO1", scope: !1122, file: !1070, line: 137, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO2", scope: !1122, file: !1070, line: 138, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO3", scope: !1122, file: !1070, line: 139, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO4", scope: !1122, file: !1070, line: 140, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO5", scope: !1122, file: !1070, line: 141, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO6", scope: !1122, file: !1070, line: 142, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO7", scope: !1122, file: !1070, line: 143, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO8", scope: !1122, file: !1070, line: 144, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO9", scope: !1122, file: !1070, line: 145, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO10", scope: !1122, file: !1070, line: 146, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO11", scope: !1122, file: !1070, line: 147, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO12", scope: !1122, file: !1070, line: 148, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO13", scope: !1122, file: !1070, line: 149, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO14", scope: !1122, file: !1070, line: 150, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO15", scope: !1122, file: !1070, line: 151, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1119, file: !1070, line: 157, baseType: !1141, size: 32)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 154, size: 32, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO", scope: !1141, file: !1070, line: 155, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1119, file: !1070, line: 158, baseType: !173, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1071, file: !1070, line: 656, baseType: !1146, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENCLR_Type", file: !1070, line: 229, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 204, size: 32, elements: !1149)
!1149 = !{!1150, !1169, !1173}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1148, file: !1070, line: 223, baseType: !1151, size: 32)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 205, size: 32, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1151, file: !1070, line: 206, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1151, file: !1070, line: 207, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1151, file: !1070, line: 208, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1151, file: !1070, line: 209, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1151, file: !1070, line: 210, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1151, file: !1070, line: 211, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1151, file: !1070, line: 212, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1151, file: !1070, line: 213, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1151, file: !1070, line: 214, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1151, file: !1070, line: 215, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1151, file: !1070, line: 216, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1151, file: !1070, line: 217, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1151, file: !1070, line: 218, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1151, file: !1070, line: 219, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1151, file: !1070, line: 220, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1151, file: !1070, line: 221, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1148, file: !1070, line: 227, baseType: !1170, size: 32)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 224, size: 32, elements: !1171)
!1171 = !{!1172}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1170, file: !1070, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1148, file: !1070, line: 228, baseType: !173, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1071, file: !1070, line: 657, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENSET_Type", file: !1070, line: 299, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 274, size: 32, elements: !1178)
!1178 = !{!1179, !1198, !1202}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1177, file: !1070, line: 293, baseType: !1180, size: 32)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 275, size: 32, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1180, file: !1070, line: 276, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1180, file: !1070, line: 277, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1180, file: !1070, line: 278, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1180, file: !1070, line: 279, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1180, file: !1070, line: 280, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1180, file: !1070, line: 281, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1180, file: !1070, line: 282, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1180, file: !1070, line: 283, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1180, file: !1070, line: 284, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1180, file: !1070, line: 285, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1180, file: !1070, line: 286, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1180, file: !1070, line: 287, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1180, file: !1070, line: 288, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1180, file: !1070, line: 289, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1180, file: !1070, line: 290, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1180, file: !1070, line: 291, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1177, file: !1070, line: 297, baseType: !1199, size: 32)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 294, size: 32, elements: !1200)
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1199, file: !1070, line: 295, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1177, file: !1070, line: 298, baseType: !173, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1071, file: !1070, line: 658, baseType: !1204, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTFLAG_Type", file: !1070, line: 369, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 344, size: 32, elements: !1207)
!1207 = !{!1208, !1227, !1231}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1206, file: !1070, line: 363, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 345, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1209, file: !1070, line: 346, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1209, file: !1070, line: 347, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1209, file: !1070, line: 348, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1209, file: !1070, line: 349, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1209, file: !1070, line: 350, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1209, file: !1070, line: 351, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1209, file: !1070, line: 352, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1209, file: !1070, line: 353, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1209, file: !1070, line: 354, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1209, file: !1070, line: 355, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1209, file: !1070, line: 356, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1209, file: !1070, line: 357, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1209, file: !1070, line: 358, baseType: !465, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1209, file: !1070, line: 359, baseType: !465, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1209, file: !1070, line: 360, baseType: !465, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1209, file: !1070, line: 361, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1206, file: !1070, line: 367, baseType: !1228, size: 32)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 364, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1228, file: !1070, line: 365, baseType: !465, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1206, file: !1070, line: 368, baseType: !173, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUP", scope: !1071, file: !1070, line: 659, baseType: !1233, size: 32, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_WAKEUP_Type", file: !1070, line: 439, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 414, size: 32, elements: !1236)
!1236 = !{!1237, !1256, !1260}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1235, file: !1070, line: 433, baseType: !1238, size: 32)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 415, size: 32, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN0", scope: !1238, file: !1070, line: 416, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN1", scope: !1238, file: !1070, line: 417, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN2", scope: !1238, file: !1070, line: 418, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN3", scope: !1238, file: !1070, line: 419, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN4", scope: !1238, file: !1070, line: 420, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN5", scope: !1238, file: !1070, line: 421, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN6", scope: !1238, file: !1070, line: 422, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN7", scope: !1238, file: !1070, line: 423, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN8", scope: !1238, file: !1070, line: 424, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN9", scope: !1238, file: !1070, line: 425, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN10", scope: !1238, file: !1070, line: 426, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN11", scope: !1238, file: !1070, line: 427, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN12", scope: !1238, file: !1070, line: 428, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN13", scope: !1238, file: !1070, line: 429, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN14", scope: !1238, file: !1070, line: 430, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN15", scope: !1238, file: !1070, line: 431, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1235, file: !1070, line: 437, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 434, size: 32, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN", scope: !1257, file: !1070, line: 435, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1235, file: !1070, line: 438, baseType: !173, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1071, file: !1070, line: 660, baseType: !1262, size: 64, offset: 192)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 64, elements: !145)
!1263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CONFIG_Type", file: !1070, line: 504, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 484, size: 32, elements: !1266)
!1266 = !{!1267, !1286}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1265, file: !1070, line: 502, baseType: !1268, size: 32)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !1070, line: 485, size: 32, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE0", scope: !1268, file: !1070, line: 486, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN0", scope: !1268, file: !1070, line: 487, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE1", scope: !1268, file: !1070, line: 488, baseType: !173, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN1", scope: !1268, file: !1070, line: 489, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE2", scope: !1268, file: !1070, line: 490, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN2", scope: !1268, file: !1070, line: 491, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE3", scope: !1268, file: !1070, line: 492, baseType: !173, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN3", scope: !1268, file: !1070, line: 493, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE4", scope: !1268, file: !1070, line: 494, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN4", scope: !1268, file: !1070, line: 495, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE5", scope: !1268, file: !1070, line: 496, baseType: !173, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN5", scope: !1268, file: !1070, line: 497, baseType: !173, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE6", scope: !1268, file: !1070, line: 498, baseType: !173, size: 3, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN6", scope: !1268, file: !1070, line: 499, baseType: !173, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE7", scope: !1268, file: !1070, line: 500, baseType: !173, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN7", scope: !1268, file: !1070, line: 501, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1265, file: !1070, line: 503, baseType: !173, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !1290)
!1290 = !{!1291, !1297, !1307, !1308, !1318, !1328, !1338, !1348, !1349, !1365, !1381, !1397, !1427, !1428, !1438, !1448, !1458, !1459}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1289, file: !812, line: 495, baseType: !1292, size: 8)
!1292 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !1295)
!1295 = !{!1296}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1294, file: !812, line: 44, baseType: !156, size: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !1289, file: !812, line: 496, baseType: !1298, size: 8, offset: 8)
!1298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !1301)
!1301 = !{!1302, !1306}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1300, file: !812, line: 59, baseType: !1303, size: 8)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1300, file: !812, line: 56, size: 8, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !1303, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1300, file: !812, line: 60, baseType: !156, size: 8)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1289, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !1289, file: !812, line: 498, baseType: !1309, size: 8, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !1312)
!1312 = !{!1313, !1317}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1311, file: !812, line: 84, baseType: !1314, size: 8)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1311, file: !812, line: 81, size: 8, elements: !1315)
!1315 = !{!1316}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !1314, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1311, file: !812, line: 85, baseType: !156, size: 8)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !1289, file: !812, line: 499, baseType: !1319, size: 8, offset: 72)
!1319 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1321, file: !812, line: 119, baseType: !1324, size: 8)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1321, file: !812, line: 116, size: 8, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !1324, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1321, file: !812, line: 120, baseType: !156, size: 8)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !1289, file: !812, line: 500, baseType: !1329, size: 8, offset: 80)
!1329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !1332)
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1331, file: !812, line: 154, baseType: !1334, size: 8)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1331, file: !812, line: 151, size: 8, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !1334, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1331, file: !812, line: 155, baseType: !156, size: 8)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !1289, file: !812, line: 501, baseType: !1339, size: 8, offset: 88)
!1339 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !1342)
!1342 = !{!1343, !1347}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1341, file: !812, line: 189, baseType: !1344, size: 8)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1341, file: !812, line: 186, size: 8, elements: !1345)
!1345 = !{!1346}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !1344, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1341, file: !812, line: 190, baseType: !156, size: 8)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1289, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !1289, file: !812, line: 503, baseType: !1350, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !1353)
!1353 = !{!1354, !1364}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1352, file: !812, line: 230, baseType: !1355, size: 32)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1352, file: !812, line: 221, size: 32, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !1355, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !1355, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !1355, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1355, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1355, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1355, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1355, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1352, file: !812, line: 231, baseType: !173, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !1289, file: !812, line: 504, baseType: !1366, size: 32, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !1369)
!1369 = !{!1370, !1380}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1368, file: !812, line: 266, baseType: !1371, size: 32)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1368, file: !812, line: 257, size: 32, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !1371, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !1371, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !1371, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !1371, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !1371, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !1371, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !1371, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1368, file: !812, line: 267, baseType: !173, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !1289, file: !812, line: 505, baseType: !1382, size: 32, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !1385)
!1385 = !{!1386, !1396}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1384, file: !812, line: 302, baseType: !1387, size: 32)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1384, file: !812, line: 293, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !1387, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1387, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1387, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !1387, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1387, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1387, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1387, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1384, file: !812, line: 303, baseType: !173, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !1289, file: !812, line: 506, baseType: !1398, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !1401)
!1401 = !{!1402, !1426}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1400, file: !812, line: 352, baseType: !1403, size: 32)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !812, line: 329, size: 32, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !1403, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !1403, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !1403, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !1403, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !1403, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !1403, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !1403, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !1403, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !1403, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !1403, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !1403, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !1403, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !1403, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !1403, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !1403, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !1403, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !1403, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !1403, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !1403, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !1403, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !1403, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1400, file: !812, line: 353, baseType: !173, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1289, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1289, file: !812, line: 508, baseType: !1429, size: 8, offset: 416)
!1429 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !1432)
!1432 = !{!1433, !1437}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1431, file: !812, line: 410, baseType: !1434, size: 8)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !812, line: 407, size: 8, elements: !1435)
!1435 = !{!1436}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1434, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1431, file: !812, line: 411, baseType: !156, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1289, file: !812, line: 509, baseType: !1439, size: 8, offset: 424)
!1439 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !1442)
!1442 = !{!1443, !1447}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1441, file: !812, line: 428, baseType: !1444, size: 8)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1441, file: !812, line: 425, size: 8, elements: !1445)
!1445 = !{!1446}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1444, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1441, file: !812, line: 429, baseType: !156, size: 8)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1289, file: !812, line: 510, baseType: !1449, size: 8, offset: 432)
!1449 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !1452)
!1452 = !{!1453, !1457}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1451, file: !812, line: 446, baseType: !1454, size: 8)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1451, file: !812, line: 443, size: 8, elements: !1455)
!1455 = !{!1456}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1454, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1451, file: !812, line: 447, baseType: !156, size: 8)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1289, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !1289, file: !812, line: 512, baseType: !1460, size: 8, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1464)
!1464 = !{!1465, !1474}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1463, file: !812, line: 470, baseType: !1466, size: 8)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1463, file: !812, line: 461, size: 8, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1466, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1466, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1466, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1466, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1466, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1466, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1463, file: !812, line: 471, baseType: !156, size: 8)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !1478)
!1478 = !{!1479, !1489, !1500, !1513, !1530}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1477, file: !745, line: 285, baseType: !1480, size: 8)
!1480 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !1483)
!1483 = !{!1484, !1488}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1482, file: !745, line: 47, baseType: !1485, size: 8)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1482, file: !745, line: 44, size: 8, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1485, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1482, file: !745, line: 48, baseType: !156, size: 8)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1477, file: !745, line: 286, baseType: !1490, size: 8, offset: 8)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !1494)
!1494 = !{!1495, !1499}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1493, file: !745, line: 65, baseType: !1496, size: 8)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !745, line: 62, size: 8, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1496, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1493, file: !745, line: 66, baseType: !156, size: 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !1477, file: !745, line: 287, baseType: !1501, size: 16, offset: 16)
!1501 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !1504)
!1504 = !{!1505, !1512}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1503, file: !745, line: 87, baseType: !1506, size: 16)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !745, line: 80, size: 16, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1506, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1506, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !1506, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1506, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1503, file: !745, line: 88, baseType: !170, size: 16)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1477, file: !745, line: 288, baseType: !1514, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !1517)
!1517 = !{!1518, !1529}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1516, file: !745, line: 212, baseType: !1519, size: 32)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1516, file: !745, line: 200, size: 32, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1519, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1519, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1519, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1519, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1519, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1519, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1519, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1519, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1516, file: !745, line: 213, baseType: !173, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !1477, file: !745, line: 289, baseType: !1531, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !1534)
!1534 = !{!1535, !1540}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1533, file: !745, line: 266, baseType: !1536, size: 32)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1533, file: !745, line: 261, size: 32, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1536, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1536, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1533, file: !745, line: 267, baseType: !173, size: 32)
!1541 = !{!1542, !1054, !1548, !1573, !1594, !1596, !1603}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_18", scope: !1056, file: !1544, line: 411, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 80, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 5)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_18", scope: !1056, file: !1544, line: 411, type: !1550, isLocal: true, isDefinition: true, align: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1552)
!1552 = !{!1553, !1572}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1551, file: !1015, line: 60, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!103, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1570, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !1024, line: 380, baseType: !256, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1559, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1559, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1559, file: !1024, line: 386, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1566, file: !1024, line: 359, baseType: !156, size: 8)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1566, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1559, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1559, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1551, file: !1015, line: 65, baseType: !1557, size: 32, offset: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "eic_data", scope: !1056, file: !1544, line: 410, type: !1575, isLocal: true, isDefinition: true)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_data", file: !1544, line: 26, size: 256, elements: !1576)
!1576 = !{!1577, !1587}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1575, file: !1544, line: 27, baseType: !1578, size: 128)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 128, elements: !145)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_port_data", file: !1544, line: 21, size: 64, elements: !1580)
!1580 = !{!1581, !1586}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1579, file: !1544, line: 22, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sam0_eic_callback_t", file: !1060, line: 14, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !173, !102}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1579, file: !1544, line: 23, baseType: !102, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1575, file: !1544, line: 28, baseType: !1588, size: 128, offset: 128)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 128, elements: !959)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_line_assignment", file: !1544, line: 15, size: 8, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1589, file: !1544, line: 16, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1589, file: !1544, line: 17, baseType: !156, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1589, file: !1544, line: 18, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_18", scope: !1056, file: !1544, line: 411, type: !1566, isLocal: true, isDefinition: true, align: 8)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "sam0_eic_channels", scope: !1056, file: !1598, line: 29, type: !1599, isLocal: true, isDefinition: true)
!1598 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1600, size: 512, elements: !1601)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!1601 = !{!146, !1602}
!1602 = !DISubrange(count: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_0", scope: !1605, file: !1544, line: 356, type: !1606, isLocal: true, isDefinition: true, align: 32)
!1605 = distinct !DISubprogram(name: "sam0_eic_init", scope: !1544, file: !1544, line: 335, type: !1555, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1606, file: !10, line: 55, baseType: !250, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1606, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1606, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1606, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_18", scope: !1614, file: !1619, line: 7, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !1616, splitDebugInlining: false, nameTableKind: None)
!1615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1616 = !{!1612, !1617}
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1614, file: !1619, line: 12, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 48, elements: !341)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1623, file: !1713, line: 603, type: !1715, isLocal: true, isDefinition: true, align: 32)
!1623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1624, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1625, globals: !1710, splitDebugInlining: false, nameTableKind: None)
!1624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1625 = !{!102, !103, !1626}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1629, line: 336, size: 608, elements: !1630)
!1629 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1630 = !{!1631, !1651, !1655, !1659, !1672, !1677, !1682, !1688, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1628, file: !1629, line: 365, baseType: !1632, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!103, !1635, !1650}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1648, !1649}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1637, file: !1024, line: 380, baseType: !256, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1637, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1637, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1637, file: !1024, line: 386, baseType: !1643, size: 32, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1644, file: !1024, line: 359, baseType: !156, size: 8)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1644, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1637, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1637, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1628, file: !1629, line: 366, baseType: !1652, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1635, !157}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1628, file: !1629, line: 374, baseType: !1656, size: 32, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!103, !1635}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1628, file: !1629, line: 377, baseType: !1660, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!103, !1635, !1663}
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1629, line: 122, size: 64, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1665, file: !1629, line: 123, baseType: !173, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1665, file: !1629, line: 124, baseType: !156, size: 8, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1665, file: !1629, line: 125, baseType: !156, size: 8, offset: 40)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1665, file: !1629, line: 126, baseType: !156, size: 8, offset: 48)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1665, file: !1629, line: 127, baseType: !156, size: 8, offset: 56)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1628, file: !1629, line: 379, baseType: !1673, size: 32, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!103, !1635, !1676}
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1628, file: !1629, line: 384, baseType: !1678, size: 32, offset: 160)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!103, !1635, !1681, !103}
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1628, file: !1629, line: 393, baseType: !1683, size: 32, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!103, !1635, !1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1628, file: !1629, line: 402, baseType: !1689, size: 32, offset: 224)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 32)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1635}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1628, file: !1629, line: 405, baseType: !1689, size: 32, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1628, file: !1629, line: 408, baseType: !1656, size: 32, offset: 288)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1628, file: !1629, line: 411, baseType: !1689, size: 32, offset: 320)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1628, file: !1629, line: 414, baseType: !1689, size: 32, offset: 352)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1628, file: !1629, line: 417, baseType: !1656, size: 32, offset: 384)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1628, file: !1629, line: 420, baseType: !1656, size: 32, offset: 416)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1628, file: !1629, line: 423, baseType: !1689, size: 32, offset: 448)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1628, file: !1629, line: 426, baseType: !1689, size: 32, offset: 480)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1628, file: !1629, line: 429, baseType: !1656, size: 32, offset: 512)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1628, file: !1629, line: 432, baseType: !1656, size: 32, offset: 544)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1628, file: !1629, line: 435, baseType: !1703, size: 32, offset: 576)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1635, !1706, !102}
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1629, line: 142, baseType: !1707)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !1635, !102}
!1710 = !{!1621, !1711}
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1623, file: !1713, line: 38, type: !1714, isLocal: true, isDefinition: true)
!1713 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1635)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1716, file: !1015, line: 60, baseType: !1656, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1716, file: !1015, line: 65, baseType: !1635, size: 32, offset: 32)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "uart_sam0_config_0", scope: !1722, file: !2215, line: 1293, type: !2271, isLocal: true, isDefinition: true)
!1722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1723, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1724, retainedTypes: !1769, globals: !2212, splitDebugInlining: false, nameTableKind: None)
!1723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!1724 = !{!30, !1725, !1737, !1744, !1749, !1756, !1762}
!1725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_channel_direction", file: !1726, line: 31, baseType: !32, size: 32, elements: !1727)
!1726 = !DIFile(filename: "zephyr/include/zephyr/drivers/dma.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1727 = !{!1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736}
!1728 = !DIEnumerator(name: "MEMORY_TO_MEMORY", value: 0)
!1729 = !DIEnumerator(name: "MEMORY_TO_PERIPHERAL", value: 1)
!1730 = !DIEnumerator(name: "PERIPHERAL_TO_MEMORY", value: 2)
!1731 = !DIEnumerator(name: "PERIPHERAL_TO_PERIPHERAL", value: 3)
!1732 = !DIEnumerator(name: "HOST_TO_MEMORY", value: 4)
!1733 = !DIEnumerator(name: "MEMORY_TO_HOST", value: 5)
!1734 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_COMMON_COUNT", value: 6)
!1735 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_PRIV_START", value: 6)
!1736 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_MAX", value: 7)
!1737 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1629, line: 47, baseType: !32, size: 32, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743}
!1739 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1740 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1741 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1742 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1743 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1744 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1629, line: 107, baseType: !32, size: 32, elements: !1745)
!1745 = !{!1746, !1747, !1748}
!1746 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1747 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1748 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1749 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1629, line: 75, baseType: !32, size: 32, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755}
!1751 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1752 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1753 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1754 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1755 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1756 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1629, line: 84, baseType: !32, size: 32, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1759 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1760 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1761 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1629, line: 92, baseType: !32, size: 32, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768}
!1764 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1765 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1766 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1767 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1768 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1769 = !{!1770, !102, !103, !1849, !1948, !24, !157, !1936, !170, !1958, !2024}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1629, line: 336, size: 608, elements: !1773)
!1773 = !{!1774, !1793, !1797, !1801, !1814, !1819, !1823, !1827, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1772, file: !1629, line: 365, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!103, !1778, !1650}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1791, !1792}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1780, file: !1024, line: 380, baseType: !256, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1780, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1780, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1780, file: !1024, line: 386, baseType: !1786, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1788)
!1788 = !{!1789, !1790}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1787, file: !1024, line: 359, baseType: !156, size: 8)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1787, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1780, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1780, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1772, file: !1629, line: 366, baseType: !1794, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{null, !1778, !157}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1772, file: !1629, line: 374, baseType: !1798, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!103, !1778}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1772, file: !1629, line: 377, baseType: !1802, size: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!103, !1778, !1805}
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1629, line: 122, size: 64, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1807, file: !1629, line: 123, baseType: !173, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1807, file: !1629, line: 124, baseType: !156, size: 8, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1807, file: !1629, line: 125, baseType: !156, size: 8, offset: 40)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1807, file: !1629, line: 126, baseType: !156, size: 8, offset: 48)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1807, file: !1629, line: 127, baseType: !156, size: 8, offset: 56)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1772, file: !1629, line: 379, baseType: !1815, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!103, !1778, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1772, file: !1629, line: 384, baseType: !1820, size: 32, offset: 160)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!103, !1778, !1681, !103}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1772, file: !1629, line: 393, baseType: !1824, size: 32, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!103, !1778, !1686, !1687}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1772, file: !1629, line: 402, baseType: !1828, size: 32, offset: 224)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{null, !1778}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1772, file: !1629, line: 405, baseType: !1828, size: 32, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1772, file: !1629, line: 408, baseType: !1798, size: 32, offset: 288)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1772, file: !1629, line: 411, baseType: !1828, size: 32, offset: 320)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1772, file: !1629, line: 414, baseType: !1828, size: 32, offset: 352)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1772, file: !1629, line: 417, baseType: !1798, size: 32, offset: 384)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1772, file: !1629, line: 420, baseType: !1798, size: 32, offset: 416)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1772, file: !1629, line: 423, baseType: !1828, size: 32, offset: 448)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1772, file: !1629, line: 426, baseType: !1828, size: 32, offset: 480)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1772, file: !1629, line: 429, baseType: !1798, size: 32, offset: 512)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1772, file: !1629, line: 432, baseType: !1798, size: 32, offset: 544)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1772, file: !1629, line: 435, baseType: !1842, size: 32, offset: 576)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1778, !1845, !102}
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1629, line: 142, baseType: !1846)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{null, !1778, !102}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_driver_api", file: !1726, line: 304, size: 288, elements: !1852)
!1852 = !{!1853, !1905, !1910, !1915, !1917, !1919, !1921, !1938, !1943}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1851, file: !1726, line: 305, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_config", file: !1726, line: 264, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!103, !1778, !173, !1858}
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_config", file: !1726, line: 194, size: 224, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1899, !1900}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slot", scope: !1859, file: !1726, line: 195, baseType: !173, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "channel_direction", scope: !1859, file: !1726, line: 196, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "complete_callback_en", scope: !1859, file: !1726, line: 197, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_en", scope: !1859, file: !1726, line: 198, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "source_handshake", scope: !1859, file: !1726, line: 199, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "dest_handshake", scope: !1859, file: !1726, line: 200, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "channel_priority", scope: !1859, file: !1726, line: 201, baseType: !173, size: 4, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "source_chaining_en", scope: !1859, file: !1726, line: 202, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chaining_en", scope: !1859, file: !1726, line: 203, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "linked_channel", scope: !1859, file: !1726, line: 204, baseType: !173, size: 7, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !1859, file: !1726, line: 205, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1859, file: !1726, line: 206, baseType: !173, size: 3, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "source_data_size", scope: !1859, file: !1726, line: 207, baseType: !173, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "dest_data_size", scope: !1859, file: !1726, line: 208, baseType: !173, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 0)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "source_burst_length", scope: !1859, file: !1726, line: 209, baseType: !173, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 0)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "dest_burst_length", scope: !1859, file: !1726, line: 210, baseType: !173, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 0)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !1859, file: !1726, line: 211, baseType: !173, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "head_block", scope: !1859, file: !1726, line: 212, baseType: !1879, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_block_config", file: !1726, line: 113, size: 256, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "source_address", scope: !1880, file: !1726, line: 118, baseType: !173, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "dest_address", scope: !1880, file: !1726, line: 119, baseType: !173, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_interval", scope: !1880, file: !1726, line: 121, baseType: !173, size: 32, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_interval", scope: !1880, file: !1726, line: 122, baseType: !173, size: 32, offset: 96)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_count", scope: !1880, file: !1726, line: 123, baseType: !170, size: 16, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_count", scope: !1880, file: !1726, line: 124, baseType: !170, size: 16, offset: 144)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1880, file: !1726, line: 125, baseType: !173, size: 32, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "next_block", scope: !1880, file: !1726, line: 126, baseType: !1879, size: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_en", scope: !1880, file: !1726, line: 127, baseType: !170, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_en", scope: !1880, file: !1726, line: 128, baseType: !170, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "source_addr_adj", scope: !1880, file: !1726, line: 129, baseType: !170, size: 2, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_adj", scope: !1880, file: !1726, line: 130, baseType: !170, size: 2, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "source_reload_en", scope: !1880, file: !1726, line: 131, baseType: !170, size: 1, offset: 230, flags: DIFlagBitField, extraData: i64 224)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "dest_reload_en", scope: !1880, file: !1726, line: 132, baseType: !170, size: 1, offset: 231, flags: DIFlagBitField, extraData: i64 224)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_mode_control", scope: !1880, file: !1726, line: 133, baseType: !170, size: 4, offset: 232, flags: DIFlagBitField, extraData: i64 224)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control_mode", scope: !1880, file: !1726, line: 134, baseType: !170, size: 1, offset: 236, flags: DIFlagBitField, extraData: i64 224)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1880, file: !1726, line: 135, baseType: !170, size: 3, offset: 237, flags: DIFlagBitField, extraData: i64 224)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1859, file: !1726, line: 213, baseType: !102, size: 32, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "dma_callback", scope: !1859, file: !1726, line: 214, baseType: !1901, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_callback_t", file: !1726, line: 150, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !1778, !102, !173, !103}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "reload", scope: !1851, file: !1726, line: 306, baseType: !1906, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_reload", file: !1726, line: 271, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!103, !1778, !173, !173, !173, !217}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1851, file: !1726, line: 307, baseType: !1911, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_start", file: !1726, line: 275, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!103, !1778, !173}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1851, file: !1726, line: 308, baseType: !1916, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_stop", file: !1726, line: 277, baseType: !1912)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1851, file: !1726, line: 309, baseType: !1918, size: 32, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_suspend", file: !1726, line: 279, baseType: !1912)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1851, file: !1726, line: 310, baseType: !1920, size: 32, offset: 160)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_resume", file: !1726, line: 281, baseType: !1912)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1851, file: !1726, line: 311, baseType: !1922, size: 32, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_status", file: !1726, line: 283, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!103, !1778, !173, !1926}
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_status", file: !1726, line: 229, size: 256, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !1927, file: !1726, line: 230, baseType: !1035, size: 8)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1927, file: !1726, line: 231, baseType: !1725, size: 32, offset: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pending_length", scope: !1927, file: !1726, line: 232, baseType: !173, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1927, file: !1726, line: 233, baseType: !173, size: 32, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "write_position", scope: !1927, file: !1726, line: 234, baseType: !173, size: 32, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "read_position", scope: !1927, file: !1726, line: 235, baseType: !173, size: 32, offset: 160)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "total_copied", scope: !1927, file: !1726, line: 236, baseType: !1936, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1937)
!1937 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "get_attribute", scope: !1851, file: !1726, line: 312, baseType: !1939, size: 32, offset: 224)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_attribute", file: !1726, line: 286, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!103, !1778, !173, !742}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "chan_filter", scope: !1851, file: !1726, line: 313, baseType: !1944, size: 32, offset: 256)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_chan_filter", file: !1726, line: 301, baseType: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1035, !1778, !103, !102}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_context", file: !1726, line: 249, size: 96, elements: !1950)
!1950 = !{!1951, !1952, !1953}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1949, file: !1726, line: 250, baseType: !250, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channels", scope: !1949, file: !1726, line: 251, baseType: !103, size: 32, offset: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !1949, file: !1726, line: 252, baseType: !1954, size: 32, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1956, line: 22, baseType: !1957)
!1956 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1957 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !1961)
!1961 = !{!1962, !1972, !1983, !1996, !2013}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1960, file: !745, line: 285, baseType: !1963, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !1966)
!1966 = !{!1967, !1971}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1965, file: !745, line: 47, baseType: !1968, size: 8)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1965, file: !745, line: 44, size: 8, elements: !1969)
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1968, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1965, file: !745, line: 48, baseType: !156, size: 8)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1960, file: !745, line: 286, baseType: !1973, size: 8, offset: 8)
!1973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1974)
!1974 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !1977)
!1977 = !{!1978, !1982}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1976, file: !745, line: 65, baseType: !1979, size: 8)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !745, line: 62, size: 8, elements: !1980)
!1980 = !{!1981}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1979, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1976, file: !745, line: 66, baseType: !156, size: 8)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !1960, file: !745, line: 287, baseType: !1984, size: 16, offset: 16)
!1984 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1985)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !1987)
!1987 = !{!1988, !1995}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1986, file: !745, line: 87, baseType: !1989, size: 16)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1986, file: !745, line: 80, size: 16, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1989, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1989, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !1989, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1989, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1986, file: !745, line: 88, baseType: !170, size: 16)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1960, file: !745, line: 288, baseType: !1997, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !2000)
!2000 = !{!2001, !2012}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1999, file: !745, line: 212, baseType: !2002, size: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !745, line: 200, size: 32, elements: !2003)
!2003 = !{!2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2002, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !2002, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !2002, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !2002, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !2002, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !2002, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !2002, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2002, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1999, file: !745, line: 213, baseType: !173, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !1960, file: !745, line: 289, baseType: !2014, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !2017)
!2017 = !{!2018, !2023}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2016, file: !745, line: 266, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2016, file: !745, line: 261, size: 32, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2019, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !2019, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2016, file: !745, line: 267, baseType: !173, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !2027)
!2027 = !{!2028, !2034, !2044, !2045, !2055, !2065, !2075, !2085, !2086, !2102, !2118, !2134, !2164, !2165, !2175, !2185, !2195, !2196}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2026, file: !812, line: 495, baseType: !2029, size: 8)
!2029 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2030)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !2032)
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2031, file: !812, line: 44, baseType: !156, size: 8)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !2026, file: !812, line: 496, baseType: !2035, size: 8, offset: 8)
!2035 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2036)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !2038)
!2038 = !{!2039, !2043}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2037, file: !812, line: 59, baseType: !2040, size: 8)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2037, file: !812, line: 56, size: 8, elements: !2041)
!2041 = !{!2042}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !2040, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2037, file: !812, line: 60, baseType: !156, size: 8)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2026, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !2026, file: !812, line: 498, baseType: !2046, size: 8, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !2049)
!2049 = !{!2050, !2054}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2048, file: !812, line: 84, baseType: !2051, size: 8)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2048, file: !812, line: 81, size: 8, elements: !2052)
!2052 = !{!2053}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !2051, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2048, file: !812, line: 85, baseType: !156, size: 8)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !2026, file: !812, line: 499, baseType: !2056, size: 8, offset: 72)
!2056 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !2059)
!2059 = !{!2060, !2064}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2058, file: !812, line: 119, baseType: !2061, size: 8)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !812, line: 116, size: 8, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !2061, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2058, file: !812, line: 120, baseType: !156, size: 8)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !2026, file: !812, line: 500, baseType: !2066, size: 8, offset: 80)
!2066 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !2069)
!2069 = !{!2070, !2074}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2068, file: !812, line: 154, baseType: !2071, size: 8)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2068, file: !812, line: 151, size: 8, elements: !2072)
!2072 = !{!2073}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !2071, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2068, file: !812, line: 155, baseType: !156, size: 8)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !2026, file: !812, line: 501, baseType: !2076, size: 8, offset: 88)
!2076 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2077)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !2079)
!2079 = !{!2080, !2084}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2078, file: !812, line: 189, baseType: !2081, size: 8)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2078, file: !812, line: 186, size: 8, elements: !2082)
!2082 = !{!2083}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !2081, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2078, file: !812, line: 190, baseType: !156, size: 8)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2026, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !2026, file: !812, line: 503, baseType: !2087, size: 32, offset: 160)
!2087 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2088)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !2090)
!2090 = !{!2091, !2101}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2089, file: !812, line: 230, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2089, file: !812, line: 221, size: 32, elements: !2093)
!2093 = !{!2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !2092, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !2092, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !2092, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2092, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2092, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2092, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2092, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2089, file: !812, line: 231, baseType: !173, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !2026, file: !812, line: 504, baseType: !2103, size: 32, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2104)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !2106)
!2106 = !{!2107, !2117}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2105, file: !812, line: 266, baseType: !2108, size: 32)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2105, file: !812, line: 257, size: 32, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2116}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !2108, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !2108, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !2108, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !2108, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !2108, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !2108, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !2108, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2105, file: !812, line: 267, baseType: !173, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !2026, file: !812, line: 505, baseType: !2119, size: 32, offset: 224)
!2119 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2120)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !2122)
!2122 = !{!2123, !2133}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2121, file: !812, line: 302, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2121, file: !812, line: 293, size: 32, elements: !2125)
!2125 = !{!2126, !2127, !2128, !2129, !2130, !2131, !2132}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !2124, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2124, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2124, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !2124, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2124, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2124, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !2124, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2121, file: !812, line: 303, baseType: !173, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !2026, file: !812, line: 506, baseType: !2135, size: 32, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2136)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !2138)
!2138 = !{!2139, !2163}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2137, file: !812, line: 352, baseType: !2140, size: 32)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2137, file: !812, line: 329, size: 32, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !2140, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !2140, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !2140, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !2140, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !2140, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !2140, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !2140, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !2140, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !2140, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !2140, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !2140, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !2140, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !2140, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !2140, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !2140, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !2140, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !2140, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !2140, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !2140, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !2140, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !2140, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2137, file: !812, line: 353, baseType: !173, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2026, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2026, file: !812, line: 508, baseType: !2166, size: 8, offset: 416)
!2166 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !2169)
!2169 = !{!2170, !2174}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2168, file: !812, line: 410, baseType: !2171, size: 8)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2168, file: !812, line: 407, size: 8, elements: !2172)
!2172 = !{!2173}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2171, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2168, file: !812, line: 411, baseType: !156, size: 8)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2026, file: !812, line: 509, baseType: !2176, size: 8, offset: 424)
!2176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2177)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !2179)
!2179 = !{!2180, !2184}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2178, file: !812, line: 428, baseType: !2181, size: 8)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2178, file: !812, line: 425, size: 8, elements: !2182)
!2182 = !{!2183}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2181, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2178, file: !812, line: 429, baseType: !156, size: 8)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2026, file: !812, line: 510, baseType: !2186, size: 8, offset: 432)
!2186 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !2189)
!2189 = !{!2190, !2194}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2188, file: !812, line: 446, baseType: !2191, size: 8)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2188, file: !812, line: 443, size: 8, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2191, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2188, file: !812, line: 447, baseType: !156, size: 8)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2026, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !2026, file: !812, line: 512, baseType: !2197, size: 8, offset: 448)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2198)
!2198 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2199)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !2201)
!2201 = !{!2202, !2211}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2200, file: !812, line: 470, baseType: !2203, size: 8)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !812, line: 461, size: 8, elements: !2204)
!2204 = !{!2205, !2206, !2207, !2208, !2209, !2210}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !2203, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !2203, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !2203, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !2203, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !2203, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !2203, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2200, file: !812, line: 471, baseType: !156, size: 8)
!2212 = !{!2213, !2217, !2219, !2226, !2233, !1720, !2235, !2244, !2263, !2266, !2269}
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !2216, isLocal: false, isDefinition: true, align: 16)
!2215 = !DIFile(filename: "zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, elements: !877)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !1779, isLocal: false, isDefinition: true, align: 32)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !2221, isLocal: true, isDefinition: true, align: 32)
!2221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2222, file: !1015, line: 60, baseType: !1798, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2222, file: !1015, line: 65, baseType: !1778, size: 32, offset: 32)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "uart_sam0_data_0", scope: !1722, file: !2215, line: 1293, type: !2228, isLocal: true, isDefinition: true)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_data", file: !2215, line: 60, size: 128, elements: !2229)
!2229 = !{!2230, !2231, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "config_cache", scope: !2228, file: !2215, line: 61, baseType: !1807, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2228, file: !2215, line: 63, baseType: !1845, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !2228, file: !2215, line: 64, baseType: !102, size: 32, offset: 96)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !1787, isLocal: true, isDefinition: true, align: 8)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_0", scope: !2237, file: !2215, line: 1293, type: !2238, isLocal: true, isDefinition: true, align: 32)
!2237 = distinct !DISubprogram(name: "uart_sam0_irq_config_0", scope: !2215, file: !2215, line: 1293, type: !1829, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !2239)
!2239 = !{!2240, !2241, !2242, !2243}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2238, file: !10, line: 55, baseType: !250, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2238, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2238, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2238, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !2246, isLocal: true, isDefinition: true)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2248, line: 60, size: 64, elements: !2249)
!2248 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2249 = !{!2250, !2262}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2247, file: !2248, line: 69, baseType: !2251, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2248, line: 50, size: 64, elements: !2254)
!2254 = !{!2255, !2260, !2261}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2253, file: !2248, line: 52, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2259, line: 32, baseType: !173)
!2259 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2253, file: !2248, line: 54, baseType: !156, size: 8, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2253, file: !2248, line: 56, baseType: !156, size: 8, offset: 40)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2247, file: !2248, line: 71, baseType: !156, size: 8, offset: 32)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !2265, isLocal: true, isDefinition: true)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 64, elements: !993)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_23", scope: !1722, file: !2215, line: 1293, type: !2268, isLocal: true, isDefinition: true)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 64, elements: !145)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "uart_sam0_driver_api", scope: !1722, file: !2215, line: 1160, type: !1771, isLocal: true, isDefinition: true)
!2271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_cfg", file: !2215, line: 33, size: 256, elements: !2273)
!2273 = !{!2274, !2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2272, file: !2215, line: 34, baseType: !2275, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "SercomUsart", file: !2277, line: 1479, baseType: !2278)
!2277 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sercom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2277, line: 1460, size: 416, elements: !2279)
!2279 = !{!2280, !2302, !2319, !2320, !2344, !2354, !2356, !2372, !2373, !2389, !2390, !2406, !2407, !2422, !2435, !2436, !2446, !2447}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !2278, file: !2277, line: 1461, baseType: !2281, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2282)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLA_Type", file: !2277, line: 269, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 248, size: 32, elements: !2284)
!2284 = !{!2285, !2301}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2283, file: !2277, line: 267, baseType: !2286, size: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2283, file: !2277, line: 249, size: 32, elements: !2287)
!2287 = !{!2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2286, file: !2277, line: 250, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2286, file: !2277, line: 251, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !2286, file: !2277, line: 252, baseType: !173, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2286, file: !2277, line: 254, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "IBON", scope: !2286, file: !2277, line: 255, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPR", scope: !2286, file: !2277, line: 257, baseType: !173, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "TXPO", scope: !2286, file: !2277, line: 258, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "RXPO", scope: !2286, file: !2277, line: 260, baseType: !173, size: 2, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPA", scope: !2286, file: !2277, line: 261, baseType: !173, size: 2, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "FORM", scope: !2286, file: !2277, line: 262, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "CMODE", scope: !2286, file: !2277, line: 263, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "CPOL", scope: !2286, file: !2277, line: 264, baseType: !173, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "DORD", scope: !2286, file: !2277, line: 265, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2283, file: !2277, line: 268, baseType: !173, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2278, file: !2277, line: 1462, baseType: !2303, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLB_Type", file: !2277, line: 446, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 429, size: 32, elements: !2306)
!2306 = !{!2307, !2318}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2305, file: !2277, line: 444, baseType: !2308, size: 32)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2305, file: !2277, line: 430, size: 32, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "CHSIZE", scope: !2308, file: !2277, line: 431, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "SBMODE", scope: !2308, file: !2277, line: 433, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "COLDEN", scope: !2308, file: !2277, line: 435, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "SFDE", scope: !2308, file: !2277, line: 436, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ENC", scope: !2308, file: !2277, line: 437, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "PMODE", scope: !2308, file: !2277, line: 439, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "TXEN", scope: !2308, file: !2277, line: 441, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "RXEN", scope: !2308, file: !2277, line: 442, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2305, file: !2277, line: 445, baseType: !173, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2278, file: !2277, line: 1463, baseType: !661, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2278, file: !2277, line: 1464, baseType: !2321, size: 16, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_BAUD_Type", file: !2277, line: 537, baseType: !2323)
!2323 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 521, size: 16, elements: !2324)
!2324 = !{!2325, !2329, !2334, !2339, !2343}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2323, file: !2277, line: 524, baseType: !2326, size: 16)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2323, file: !2277, line: 522, size: 16, elements: !2327)
!2327 = !{!2328}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2326, file: !2277, line: 523, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "FRAC", scope: !2323, file: !2277, line: 528, baseType: !2330, size: 16)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2323, file: !2277, line: 525, size: 16, elements: !2331)
!2331 = !{!2332, !2333}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2330, file: !2277, line: 526, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2330, file: !2277, line: 527, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "FRACFP", scope: !2323, file: !2277, line: 532, baseType: !2335, size: 16)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2323, file: !2277, line: 529, size: 16, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2335, file: !2277, line: 530, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2335, file: !2277, line: 531, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "USARTFP", scope: !2323, file: !2277, line: 535, baseType: !2340, size: 16)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2323, file: !2277, line: 533, size: 16, elements: !2341)
!2341 = !{!2342}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2340, file: !2277, line: 534, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2323, file: !2277, line: 536, baseType: !170, size: 16)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2278, file: !2277, line: 1465, baseType: !2345, size: 8, offset: 112)
!2345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2346)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXPL_Type", file: !2277, line: 579, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 574, size: 8, elements: !2348)
!2348 = !{!2349, !2353}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2347, file: !2277, line: 577, baseType: !2350, size: 8)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2347, file: !2277, line: 575, size: 8, elements: !2351)
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2350, file: !2277, line: 576, baseType: !156, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2347, file: !2277, line: 578, baseType: !156, size: 8)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2278, file: !2277, line: 1466, baseType: !2355, size: 40, offset: 120)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 40, elements: !1546)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2278, file: !2277, line: 1467, baseType: !2357, size: 8, offset: 160)
!2357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENCLR_Type", file: !2277, line: 685, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 673, size: 8, elements: !2360)
!2360 = !{!2361, !2371}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2359, file: !2277, line: 683, baseType: !2362, size: 8)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2359, file: !2277, line: 674, size: 8, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2362, file: !2277, line: 675, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2362, file: !2277, line: 676, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2362, file: !2277, line: 677, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2362, file: !2277, line: 678, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2362, file: !2277, line: 679, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2362, file: !2277, line: 680, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2362, file: !2277, line: 682, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2359, file: !2277, line: 684, baseType: !156, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2278, file: !2277, line: 1468, baseType: !992, size: 8, offset: 168)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2278, file: !2277, line: 1469, baseType: !2374, size: 8, offset: 176)
!2374 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENSET_Type", file: !2277, line: 802, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 790, size: 8, elements: !2377)
!2377 = !{!2378, !2388}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2376, file: !2277, line: 800, baseType: !2379, size: 8)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2376, file: !2277, line: 791, size: 8, elements: !2380)
!2380 = !{!2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2379, file: !2277, line: 792, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2379, file: !2277, line: 793, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2379, file: !2277, line: 794, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2379, file: !2277, line: 795, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2379, file: !2277, line: 796, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2379, file: !2277, line: 797, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2379, file: !2277, line: 799, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2376, file: !2277, line: 801, baseType: !156, size: 8)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2278, file: !2277, line: 1470, baseType: !992, size: 8, offset: 184)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2278, file: !2277, line: 1471, baseType: !2391, size: 8, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTFLAG_Type", file: !2277, line: 919, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 907, size: 8, elements: !2394)
!2394 = !{!2395, !2405}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2393, file: !2277, line: 917, baseType: !2396, size: 8)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2393, file: !2277, line: 908, size: 8, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2396, file: !2277, line: 909, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2396, file: !2277, line: 910, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2396, file: !2277, line: 911, baseType: !301, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2396, file: !2277, line: 912, baseType: !301, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2396, file: !2277, line: 913, baseType: !301, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2396, file: !2277, line: 914, baseType: !301, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2396, file: !2277, line: 916, baseType: !301, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2393, file: !2277, line: 918, baseType: !156, size: 8)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2278, file: !2277, line: 1472, baseType: !992, size: 8, offset: 200)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2278, file: !2277, line: 1473, baseType: !2408, size: 16, offset: 208)
!2408 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_STATUS_Type", file: !2277, line: 1061, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 1050, size: 16, elements: !2411)
!2411 = !{!2412, !2421}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2410, file: !2277, line: 1059, baseType: !2413, size: 16)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2410, file: !2277, line: 1051, size: 16, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "PERR", scope: !2413, file: !2277, line: 1052, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "FERR", scope: !2413, file: !2277, line: 1053, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "BUFOVF", scope: !2413, file: !2277, line: 1054, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "CTS", scope: !2413, file: !2277, line: 1055, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ISF", scope: !2413, file: !2277, line: 1056, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "COLL", scope: !2413, file: !2277, line: 1057, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2410, file: !2277, line: 1060, baseType: !170, size: 16)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2278, file: !2277, line: 1474, baseType: !2423, size: 32, offset: 224)
!2423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!2424 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_SYNCBUSY_Type", file: !2277, line: 1160, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 1152, size: 32, elements: !2427)
!2427 = !{!2428, !2434}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2426, file: !2277, line: 1158, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2426, file: !2277, line: 1153, size: 32, elements: !2430)
!2430 = !{!2431, !2432, !2433}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2429, file: !2277, line: 1154, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2429, file: !2277, line: 1155, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2429, file: !2277, line: 1156, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2426, file: !2277, line: 1159, baseType: !173, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2278, file: !2277, line: 1475, baseType: !876, size: 64, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2278, file: !2277, line: 1476, baseType: !2437, size: 16, offset: 320)
!2437 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DATA_Type", file: !2277, line: 1325, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 1319, size: 16, elements: !2440)
!2440 = !{!2441, !2445}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2439, file: !2277, line: 1323, baseType: !2442, size: 16)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2439, file: !2277, line: 1320, size: 16, elements: !2443)
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2442, file: !2277, line: 1321, baseType: !170, size: 9, flags: DIFlagBitField, extraData: i64 0)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2439, file: !2277, line: 1324, baseType: !170, size: 16)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2278, file: !2277, line: 1477, baseType: !832, size: 48, offset: 336)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "DBGCTRL", scope: !2278, file: !2277, line: 1478, baseType: !2448, size: 8, offset: 384)
!2448 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2449)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DBGCTRL_Type", file: !2277, line: 1380, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2277, line: 1374, size: 8, elements: !2451)
!2451 = !{!2452, !2456}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2450, file: !2277, line: 1378, baseType: !2453, size: 8)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2450, file: !2277, line: 1375, size: 8, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "DBGSTOP", scope: !2453, file: !2277, line: 1376, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2450, file: !2277, line: 1379, baseType: !156, size: 8)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2272, file: !2215, line: 35, baseType: !173, size: 32, offset: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !2272, file: !2215, line: 36, baseType: !173, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "collision_detect", scope: !2272, file: !2215, line: 37, baseType: !1035, size: 8, offset: 96)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "pm_apbcmask", scope: !2272, file: !2215, line: 43, baseType: !173, size: 32, offset: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "gclk_clkctrl_id", scope: !2272, file: !2215, line: 44, baseType: !170, size: 16, offset: 160)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !2272, file: !2215, line: 47, baseType: !1828, size: 32, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2272, file: !2215, line: 56, baseType: !2464, size: 32, offset: 224)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2467, file: !2555, line: 65, type: !466, isLocal: true, isDefinition: true)
!2467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2468, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2469, retainedTypes: !2504, globals: !2552, splitDebugInlining: false, nameTableKind: None)
!2468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!2469 = !{!2470}
!2470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !300, line: 90, baseType: !103, size: 32, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2472 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2473 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2474 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2475 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2476 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2477 = !DIEnumerator(name: "PM_IRQn", value: 0)
!2478 = !DIEnumerator(name: "SYSCTRL_IRQn", value: 1)
!2479 = !DIEnumerator(name: "WDT_IRQn", value: 2)
!2480 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!2481 = !DIEnumerator(name: "EIC_IRQn", value: 4)
!2482 = !DIEnumerator(name: "NVMCTRL_IRQn", value: 5)
!2483 = !DIEnumerator(name: "DMAC_IRQn", value: 6)
!2484 = !DIEnumerator(name: "USB_IRQn", value: 7)
!2485 = !DIEnumerator(name: "EVSYS_IRQn", value: 8)
!2486 = !DIEnumerator(name: "SERCOM0_IRQn", value: 9)
!2487 = !DIEnumerator(name: "SERCOM1_IRQn", value: 10)
!2488 = !DIEnumerator(name: "SERCOM2_IRQn", value: 11)
!2489 = !DIEnumerator(name: "SERCOM3_IRQn", value: 12)
!2490 = !DIEnumerator(name: "SERCOM4_IRQn", value: 13)
!2491 = !DIEnumerator(name: "SERCOM5_IRQn", value: 14)
!2492 = !DIEnumerator(name: "TCC0_IRQn", value: 15)
!2493 = !DIEnumerator(name: "TCC1_IRQn", value: 16)
!2494 = !DIEnumerator(name: "TCC2_IRQn", value: 17)
!2495 = !DIEnumerator(name: "TC3_IRQn", value: 18)
!2496 = !DIEnumerator(name: "TC4_IRQn", value: 19)
!2497 = !DIEnumerator(name: "TC5_IRQn", value: 20)
!2498 = !DIEnumerator(name: "ADC_IRQn", value: 23)
!2499 = !DIEnumerator(name: "AC_IRQn", value: 24)
!2500 = !DIEnumerator(name: "DAC_IRQn", value: 25)
!2501 = !DIEnumerator(name: "PTC_IRQn", value: 26)
!2502 = !DIEnumerator(name: "I2S_IRQn", value: 27)
!2503 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 28)
!2504 = !{!2505, !2507, !250, !173, !2516, !2538}
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2506, line: 46, baseType: !186)
!2506 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !2509, line: 478, baseType: !2510)
!2509 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm0plus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 472, size: 128, elements: !2511)
!2511 = !{!2512, !2513, !2514, !2515}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2510, file: !2509, line: 474, baseType: !466, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2510, file: !2509, line: 475, baseType: !466, size: 32, offset: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2510, file: !2509, line: 476, baseType: !466, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2510, file: !2509, line: 477, baseType: !465, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2509, line: 340, baseType: !2518)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 328, size: 6400, elements: !2519)
!2519 = !{!2520, !2522, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2536}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2518, file: !2509, line: 330, baseType: !2521, size: 32)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 32, elements: !993)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2518, file: !2509, line: 331, baseType: !2523, size: 992, offset: 32)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 992, elements: !2524)
!2524 = !{!2525}
!2525 = !DISubrange(count: 31)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2518, file: !2509, line: 332, baseType: !2521, size: 32, offset: 1024)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2518, file: !2509, line: 333, baseType: !2523, size: 992, offset: 1056)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2518, file: !2509, line: 334, baseType: !2521, size: 32, offset: 2048)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2518, file: !2509, line: 335, baseType: !2523, size: 992, offset: 2080)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2518, file: !2509, line: 336, baseType: !2521, size: 32, offset: 3072)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2518, file: !2509, line: 337, baseType: !2523, size: 992, offset: 3104)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2518, file: !2509, line: 338, baseType: !2533, size: 2048, offset: 4096)
!2533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 2048, elements: !2534)
!2534 = !{!2535}
!2535 = !DISubrange(count: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2518, file: !2509, line: 339, baseType: !2537, size: 256, offset: 6144)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 256, elements: !877)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !2541)
!2541 = !{!2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2551}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2540, file: !2509, line: 357, baseType: !465, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2540, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2540, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2540, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2540, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2540, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2540, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2540, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !145)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2540, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!2552 = !{!2553, !2579, !2582, !2584, !2586, !2465}
!2553 = !DIGlobalVariableExpression(var: !2554, expr: !DIExpression())
!2554 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2467, file: !2555, line: 285, type: !2556, isLocal: true, isDefinition: true, align: 32)
!2555 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2558)
!2558 = !{!2559, !2578}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2557, file: !1015, line: 60, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!103, !2563}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2566)
!2566 = !{!2567, !2568, !2569, !2570, !2576, !2577}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2565, file: !1024, line: 380, baseType: !256, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2565, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2565, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2565, file: !1024, line: 386, baseType: !2571, size: 32, offset: 96)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2572, file: !1024, line: 359, baseType: !156, size: 8)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2572, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2565, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2565, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2557, file: !1015, line: 65, baseType: !2563, size: 32, offset: 32)
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "lock", scope: !2467, file: !2555, line: 34, type: !2581, isLocal: true, isDefinition: true)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2582 = !DIGlobalVariableExpression(var: !2583, expr: !DIExpression())
!2583 = distinct !DIGlobalVariable(name: "last_load", scope: !2467, file: !2555, line: 36, type: !173, isLocal: true, isDefinition: true)
!2584 = !DIGlobalVariableExpression(var: !2585, expr: !DIExpression())
!2585 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2467, file: !2555, line: 48, type: !173, isLocal: true, isDefinition: true)
!2586 = !DIGlobalVariableExpression(var: !2587, expr: !DIExpression())
!2587 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2467, file: !2555, line: 54, type: !173, isLocal: true, isDefinition: true)
!2588 = !DIGlobalVariableExpression(var: !2589, expr: !DIExpression())
!2589 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !2590, file: !2748, line: 16, type: !2749, isLocal: true, isDefinition: true)
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2591, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2592, globals: !2747, splitDebugInlining: false, nameTableKind: None)
!2591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!2592 = !{!2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2595, line: 367, baseType: !2596)
!2595 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2595, line: 351, size: 1024, elements: !2597)
!2597 = !{!2598, !2608, !2618, !2628, !2638, !2648, !2658, !2668, !2678, !2689, !2699, !2717, !2718, !2730, !2745}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2596, file: !2595, line: 352, baseType: !2599, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2600)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2595, line: 48, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 43, size: 32, elements: !2602)
!2602 = !{!2603, !2607}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2601, file: !2595, line: 46, baseType: !2604, size: 32)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2601, file: !2595, line: 44, size: 32, elements: !2605)
!2605 = !{!2606}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2604, file: !2595, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2601, file: !2595, line: 47, baseType: !173, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2596, file: !2595, line: 353, baseType: !2609, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2610)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2595, line: 66, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 61, size: 32, elements: !2612)
!2612 = !{!2613, !2617}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2611, file: !2595, line: 64, baseType: !2614, size: 32)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2611, file: !2595, line: 62, size: 32, elements: !2615)
!2615 = !{!2616}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2614, file: !2595, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2611, file: !2595, line: 65, baseType: !173, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2596, file: !2595, line: 354, baseType: !2619, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2620)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2595, line: 84, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 79, size: 32, elements: !2622)
!2622 = !{!2623, !2627}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2621, file: !2595, line: 82, baseType: !2624, size: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2621, file: !2595, line: 80, size: 32, elements: !2625)
!2625 = !{!2626}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2624, file: !2595, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2621, file: !2595, line: 83, baseType: !173, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2596, file: !2595, line: 355, baseType: !2629, size: 32, offset: 96)
!2629 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2595, line: 102, baseType: !2631)
!2631 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 97, size: 32, elements: !2632)
!2632 = !{!2633, !2637}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2631, file: !2595, line: 100, baseType: !2634, size: 32)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2631, file: !2595, line: 98, size: 32, elements: !2635)
!2635 = !{!2636}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2634, file: !2595, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2631, file: !2595, line: 101, baseType: !173, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2596, file: !2595, line: 356, baseType: !2639, size: 32, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2640)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2595, line: 120, baseType: !2641)
!2641 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 115, size: 32, elements: !2642)
!2642 = !{!2643, !2647}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2641, file: !2595, line: 118, baseType: !2644, size: 32)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2641, file: !2595, line: 116, size: 32, elements: !2645)
!2645 = !{!2646}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2644, file: !2595, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2641, file: !2595, line: 119, baseType: !173, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2596, file: !2595, line: 357, baseType: !2649, size: 32, offset: 160)
!2649 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2650)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2595, line: 138, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 133, size: 32, elements: !2652)
!2652 = !{!2653, !2657}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2651, file: !2595, line: 136, baseType: !2654, size: 32)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2651, file: !2595, line: 134, size: 32, elements: !2655)
!2655 = !{!2656}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2654, file: !2595, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2651, file: !2595, line: 137, baseType: !173, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2596, file: !2595, line: 358, baseType: !2659, size: 32, offset: 192)
!2659 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2660)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2595, line: 156, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 151, size: 32, elements: !2662)
!2662 = !{!2663, !2667}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2661, file: !2595, line: 154, baseType: !2664, size: 32)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2661, file: !2595, line: 152, size: 32, elements: !2665)
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2664, file: !2595, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2661, file: !2595, line: 155, baseType: !173, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2596, file: !2595, line: 359, baseType: !2669, size: 32, offset: 224)
!2669 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2670)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2595, line: 174, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 169, size: 32, elements: !2672)
!2672 = !{!2673, !2677}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2671, file: !2595, line: 172, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2671, file: !2595, line: 170, size: 32, elements: !2675)
!2675 = !{!2676}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2674, file: !2595, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2671, file: !2595, line: 173, baseType: !173, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2596, file: !2595, line: 360, baseType: !2679, size: 32, offset: 256)
!2679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2681)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2595, line: 192, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 187, size: 32, elements: !2683)
!2683 = !{!2684, !2688}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2682, file: !2595, line: 190, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2682, file: !2595, line: 188, size: 32, elements: !2686)
!2686 = !{!2687}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2685, file: !2595, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2682, file: !2595, line: 191, baseType: !173, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2596, file: !2595, line: 361, baseType: !2690, size: 32, offset: 288)
!2690 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2691)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2595, line: 210, baseType: !2692)
!2692 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 205, size: 32, elements: !2693)
!2693 = !{!2694, !2698}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2692, file: !2595, line: 208, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2692, file: !2595, line: 206, size: 32, elements: !2696)
!2696 = !{!2697}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !2695, file: !2595, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2692, file: !2595, line: 209, baseType: !173, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !2596, file: !2595, line: 362, baseType: !2700, size: 32, offset: 320)
!2700 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2701)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2595, line: 239, baseType: !2702)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 223, size: 32, elements: !2703)
!2703 = !{!2704, !2716}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2702, file: !2595, line: 237, baseType: !2705, size: 32)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2702, file: !2595, line: 224, size: 32, elements: !2706)
!2706 = !{!2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !2705, file: !2595, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2705, file: !2595, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2705, file: !2595, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2705, file: !2595, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2705, file: !2595, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2705, file: !2595, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !2705, file: !2595, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !2705, file: !2595, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !2705, file: !2595, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2702, file: !2595, line: 238, baseType: !173, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2596, file: !2595, line: 363, baseType: !661, size: 32, offset: 352)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2596, file: !2595, line: 364, baseType: !2719, size: 128, offset: 384)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2720, size: 128, elements: !959)
!2720 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2721)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2595, line: 275, baseType: !2722)
!2722 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 269, size: 8, elements: !2723)
!2723 = !{!2724, !2729}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2722, file: !2595, line: 273, baseType: !2725, size: 8)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2722, file: !2595, line: 270, size: 8, elements: !2726)
!2726 = !{!2727, !2728}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !2725, file: !2595, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !2725, file: !2595, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2722, file: !2595, line: 274, baseType: !156, size: 8)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !2596, file: !2595, line: 365, baseType: !2731, size: 256, offset: 512)
!2731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2732, size: 256, elements: !2744)
!2732 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2733)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2595, line: 333, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 323, size: 8, elements: !2735)
!2735 = !{!2736, !2743}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2734, file: !2595, line: 331, baseType: !2737, size: 8)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2734, file: !2595, line: 324, size: 8, elements: !2738)
!2738 = !{!2739, !2740, !2741, !2742}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2737, file: !2595, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2737, file: !2595, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2737, file: !2595, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2737, file: !2595, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2734, file: !2595, line: 332, baseType: !156, size: 8)
!2744 = !{!1602}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2596, file: !2595, line: 366, baseType: !2746, size: 256, offset: 768)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 256, elements: !2744)
!2747 = !{!2588}
!2748 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2750, size: 64, elements: !145)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!2751 = !DIGlobalVariableExpression(var: !2752, expr: !DIExpression())
!2752 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2753, file: !2756, line: 23, type: !1687, isLocal: false, isDefinition: true)
!2753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2754, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2755, splitDebugInlining: false, nameTableKind: None)
!2754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!2755 = !{!2751}
!2756 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2757 = !DIGlobalVariableExpression(var: !2758, expr: !DIExpression())
!2758 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2759, file: !2763, line: 86, type: !2981, isLocal: false, isDefinition: true, align: 64)
!2759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2760, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2761, retainedTypes: !2770, globals: !2829, splitDebugInlining: false, nameTableKind: None)
!2760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!2761 = !{!2762, !30, !2470}
!2762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2763, line: 63, baseType: !32, size: 32, elements: !2764)
!2763 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2764 = !{!2765, !2766, !2767, !2768, !2769}
!2765 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2766 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2767 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2768 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2769 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2770 = !{!217, !102, !103, !2771, !2801, !173, !250, !2802, !2816}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2774, line: 51, size: 64, elements: !2775)
!2774 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2775 = !{!2776, !2796}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2773, file: !2774, line: 52, baseType: !2777, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2774, line: 38, baseType: !2778)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 32)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!103, !2781, !1686, !170}
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2784)
!2784 = !{!2785, !2786, !2787, !2788, !2794, !2795}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2783, file: !1024, line: 380, baseType: !256, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2783, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2783, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2783, file: !1024, line: 386, baseType: !2789, size: 32, offset: 96)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2790, file: !1024, line: 359, baseType: !156, size: 8)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2790, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2783, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2783, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2773, file: !2774, line: 53, baseType: !2797, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2774, line: 47, baseType: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!103, !2781, !1686, !170, !173}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2509, line: 340, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 328, size: 6400, elements: !2805)
!2805 = !{!2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2804, file: !2509, line: 330, baseType: !2521, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2804, file: !2509, line: 331, baseType: !2523, size: 992, offset: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2804, file: !2509, line: 332, baseType: !2521, size: 32, offset: 1024)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2804, file: !2509, line: 333, baseType: !2523, size: 992, offset: 1056)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2804, file: !2509, line: 334, baseType: !2521, size: 32, offset: 2048)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2804, file: !2509, line: 335, baseType: !2523, size: 992, offset: 2080)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2804, file: !2509, line: 336, baseType: !2521, size: 32, offset: 3072)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2804, file: !2509, line: 337, baseType: !2523, size: 992, offset: 3104)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2804, file: !2509, line: 338, baseType: !2533, size: 2048, offset: 4096)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2804, file: !2509, line: 339, baseType: !2537, size: 256, offset: 6144)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2818, file: !2509, line: 357, baseType: !465, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2818, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2818, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2818, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2818, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2818, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2818, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2818, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2818, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!2829 = !{!2830, !2946, !2954, !2956, !2757, !2959, !2961, !2966}
!2830 = !DIGlobalVariableExpression(var: !2831, expr: !DIExpression())
!2831 = distinct !DIGlobalVariable(name: "_kernel", scope: !2759, file: !2763, line: 40, type: !2832, isLocal: false, isDefinition: true)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !150, line: 158, size: 288, elements: !2833)
!2833 = !{!2834, !2941}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2832, file: !150, line: 159, baseType: !2835, size: 192)
!2835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2836, size: 192, elements: !993)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !150, line: 100, size: 192, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2935, !2936, !2937, !2938}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2836, file: !150, line: 102, baseType: !173, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2836, file: !150, line: 105, baseType: !2801, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2836, file: !150, line: 108, baseType: !2841, size: 32, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !2843)
!2843 = !{!2844, !2902, !2914, !2915, !2916, !2917, !2930}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2842, file: !114, line: 247, baseType: !2845, size: 384)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !2846)
!2846 = !{!2847, !2871, !2878, !2879, !2880, !2889, !2890, !2891}
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2845, file: !114, line: 60, baseType: !2848, size: 64)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2845, file: !114, line: 60, size: 64, elements: !2849)
!2849 = !{!2850, !2865}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2848, file: !114, line: 61, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2853)
!2853 = !{!2854, !2860}
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2852, file: !124, line: 38, baseType: !2855, size: 32)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2852, file: !124, line: 38, size: 32, elements: !2856)
!2856 = !{!2857, !2859}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2855, file: !124, line: 39, baseType: !2858, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2855, file: !124, line: 40, baseType: !2858, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2852, file: !124, line: 42, baseType: !2861, size: 32, offset: 32)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2852, file: !124, line: 42, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2861, file: !124, line: 43, baseType: !2858, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2861, file: !124, line: 44, baseType: !2858, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2848, file: !114, line: 62, baseType: !2866, size: 64)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !2867)
!2867 = !{!2868}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2866, file: !140, line: 50, baseType: !2869, size: 64)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2870, size: 64, elements: !145)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2845, file: !114, line: 68, baseType: !2872, size: 32, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !2875)
!2875 = !{!2876}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2874, file: !150, line: 232, baseType: !2877, size: 64)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2852)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2845, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2845, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2845, file: !114, line: 90, baseType: !2881, size: 16, offset: 112)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2845, file: !114, line: 90, size: 16, elements: !2882)
!2882 = !{!2883, !2888}
!2883 = !DIDerivedType(tag: DW_TAG_member, scope: !2881, file: !114, line: 91, baseType: !2884, size: 16)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2881, file: !114, line: 91, size: 16, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2884, file: !114, line: 96, baseType: !166, size: 8)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2884, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2881, file: !114, line: 100, baseType: !170, size: 16)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2845, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2845, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2845, file: !114, line: 131, baseType: !2892, size: 192, offset: 192)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2893)
!2893 = !{!2894, !2895, !2901}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2892, file: !150, line: 245, baseType: !2851, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2892, file: !150, line: 246, baseType: !2896, size: 32, offset: 64)
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2897)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{null, !2900}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2892, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2842, file: !114, line: 250, baseType: !2903, size: 288, offset: 384)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2903, file: !190, line: 26, baseType: !173, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2903, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2903, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2903, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2903, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2903, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2903, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2903, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2903, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2842, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2842, file: !114, line: 256, baseType: !2873, size: 64, offset: 704)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2842, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2842, file: !114, line: 325, baseType: !2918, size: 32, offset: 800)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !2920)
!2920 = !{!2921, !2927, !2928}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2919, file: !109, line: 5074, baseType: !2922, size: 96)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !2923)
!2923 = !{!2924, !2925, !2926}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2922, file: !210, line: 57, baseType: !213, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2922, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2922, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2919, file: !109, line: 5075, baseType: !2873, size: 64, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2919, file: !109, line: 5076, baseType: !2929, offset: 160)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2842, file: !114, line: 343, baseType: !2931, size: 64, offset: 832)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2931, file: !190, line: 63, baseType: !173, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2931, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2836, file: !150, line: 111, baseType: !2841, size: 32, offset: 96)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2836, file: !150, line: 124, baseType: !103, size: 32, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2836, file: !150, line: 127, baseType: !156, size: 8, offset: 160)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2836, file: !150, line: 153, baseType: !2939, offset: 168)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2940, line: 33, elements: !223)
!2940 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2832, file: !150, line: 170, baseType: !2942, size: 96, offset: 192)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2942, file: !150, line: 86, baseType: !2841, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2942, file: !150, line: 90, baseType: !2877, size: 64, offset: 32)
!2946 = !DIGlobalVariableExpression(var: !2947, expr: !DIExpression())
!2947 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2759, file: !2763, line: 43, type: !2948, isLocal: false, isDefinition: true, align: 64)
!2948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2949, size: 8192, elements: !2952)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !2950)
!2950 = !{!2951}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2949, file: !234, line: 48, baseType: !237, size: 8)
!2952 = !{!2953}
!2953 = !DISubrange(count: 1024)
!2954 = !DIGlobalVariableExpression(var: !2955, expr: !DIExpression())
!2955 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2759, file: !2763, line: 44, type: !2842, isLocal: false, isDefinition: true)
!2956 = !DIGlobalVariableExpression(var: !2957, expr: !DIExpression())
!2957 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2759, file: !2763, line: 48, type: !2958, isLocal: false, isDefinition: true)
!2958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2842, size: 896, elements: !993)
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2759, file: !2763, line: 217, type: !1035, isLocal: false, isDefinition: true)
!2961 = !DIGlobalVariableExpression(var: !2962, expr: !DIExpression())
!2962 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2759, file: !2763, line: 50, type: !2963, isLocal: true, isDefinition: true, align: 64)
!2963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2949, size: 2048, elements: !2964)
!2964 = !{!994, !2965}
!2965 = !DISubrange(count: 256)
!2966 = !DIGlobalVariableExpression(var: !2967, expr: !DIExpression())
!2967 = distinct !DIGlobalVariable(name: "levels", scope: !2968, file: !2763, line: 232, type: !2971, isLocal: true, isDefinition: true)
!2968 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2763, file: !2763, line: 230, type: !2969, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !2762}
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2972, size: 192, elements: !833)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2975)
!2975 = !{!2976, !2980}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2974, file: !1015, line: 60, baseType: !2977, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 32)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!103, !2781}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2974, file: !1015, line: 65, baseType: !2781, size: 32, offset: 32)
!2981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2949, size: 16384, elements: !2982)
!2982 = !{!994, !2983}
!2983 = !DISubrange(count: 2048)
!2984 = !DIGlobalVariableExpression(var: !2985, expr: !DIExpression())
!2985 = distinct !DIGlobalVariable(name: "states_str", scope: !2986, file: !2987, line: 276, type: !3094, isLocal: true, isDefinition: true)
!2986 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2987, file: !2987, line: 271, type: !2988, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!2987 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!256, !2990, !2801, !217}
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !2991)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !2993)
!2993 = !{!2994, !3052, !3064, !3065, !3066, !3067, !3080}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2992, file: !114, line: 247, baseType: !2995, size: 384)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !2996)
!2996 = !{!2997, !3021, !3028, !3029, !3030, !3039, !3040, !3041}
!2997 = !DIDerivedType(tag: DW_TAG_member, scope: !2995, file: !114, line: 60, baseType: !2998, size: 64)
!2998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2995, file: !114, line: 60, size: 64, elements: !2999)
!2999 = !{!3000, !3015}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2998, file: !114, line: 61, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3003)
!3003 = !{!3004, !3010}
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !3002, file: !124, line: 38, baseType: !3005, size: 32)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3002, file: !124, line: 38, size: 32, elements: !3006)
!3006 = !{!3007, !3009}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3005, file: !124, line: 39, baseType: !3008, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3005, file: !124, line: 40, baseType: !3008, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, scope: !3002, file: !124, line: 42, baseType: !3011, size: 32, offset: 32)
!3011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3002, file: !124, line: 42, size: 32, elements: !3012)
!3012 = !{!3013, !3014}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3011, file: !124, line: 43, baseType: !3008, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3011, file: !124, line: 44, baseType: !3008, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2998, file: !114, line: 62, baseType: !3016, size: 64)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3017)
!3017 = !{!3018}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3016, file: !140, line: 50, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3020, size: 64, elements: !145)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2995, file: !114, line: 68, baseType: !3022, size: 32, offset: 64)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3025)
!3025 = !{!3026}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3024, file: !150, line: 232, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3002)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2995, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2995, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3030 = !DIDerivedType(tag: DW_TAG_member, scope: !2995, file: !114, line: 90, baseType: !3031, size: 16, offset: 112)
!3031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2995, file: !114, line: 90, size: 16, elements: !3032)
!3032 = !{!3033, !3038}
!3033 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !114, line: 91, baseType: !3034, size: 16)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3031, file: !114, line: 91, size: 16, elements: !3035)
!3035 = !{!3036, !3037}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3034, file: !114, line: 96, baseType: !166, size: 8)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3034, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3031, file: !114, line: 100, baseType: !170, size: 16)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2995, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2995, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2995, file: !114, line: 131, baseType: !3042, size: 192, offset: 192)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3043)
!3043 = !{!3044, !3045, !3051}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3042, file: !150, line: 245, baseType: !3001, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3042, file: !150, line: 246, baseType: !3046, size: 32, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3047)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{null, !3050}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3042, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2992, file: !114, line: 250, baseType: !3053, size: 288, offset: 384)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3054)
!3054 = !{!3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3053, file: !190, line: 26, baseType: !173, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3053, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3053, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3053, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3053, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3053, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3053, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3053, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3053, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2992, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2992, file: !114, line: 256, baseType: !3023, size: 64, offset: 704)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2992, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2992, file: !114, line: 325, baseType: !3068, size: 32, offset: 800)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 32)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3070)
!3070 = !{!3071, !3077, !3078}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3069, file: !109, line: 5074, baseType: !3072, size: 96)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3073)
!3073 = !{!3074, !3075, !3076}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3072, file: !210, line: 57, baseType: !213, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3072, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3072, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3069, file: !109, line: 5075, baseType: !3023, size: 64, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3069, file: !109, line: 5076, baseType: !3079, offset: 160)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2992, file: !114, line: 343, baseType: !3081, size: 64, offset: 832)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3082)
!3082 = !{!3083, !3084}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3081, file: !190, line: 63, baseType: !173, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3081, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3086, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3087, globals: !3089, splitDebugInlining: false, nameTableKind: None)
!3086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3087 = !{!102, !256, !2505, !156, !103, !3088, !24, !217, !2801, !173, !1936}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3089 = !{!2984, !3090}
!3090 = !DIGlobalVariableExpression(var: !3091, expr: !DIExpression())
!3091 = distinct !DIGlobalVariable(name: "states_sz", scope: !2986, file: !2987, line: 279, type: !3092, isLocal: true, isDefinition: true)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3093, size: 256, elements: !877)
!3093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!3094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !877)
!3095 = !DIGlobalVariableExpression(var: !3096, expr: !DIExpression())
!3096 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3097, file: !3208, line: 56, type: !3197, isLocal: false, isDefinition: true)
!3097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3098, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3099, retainedTypes: !3108, globals: !3205, splitDebugInlining: false, nameTableKind: None)
!3098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3099 = !{!3100, !30}
!3100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3101, line: 27, baseType: !32, size: 32, elements: !3102)
!3101 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3102 = !{!3103, !3104, !3105, !3106, !3107}
!3103 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3104 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3105 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3106 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3107 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3108 = !{!3109, !2801, !102, !3203, !1686, !2505, !250, !103, !173, !1936, !3204}
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 32)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3111)
!3111 = !{!3112, !3170, !3182, !3183, !3184, !3185, !3198}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3110, file: !114, line: 247, baseType: !3113, size: 384)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3114)
!3114 = !{!3115, !3139, !3146, !3147, !3148, !3157, !3158, !3159}
!3115 = !DIDerivedType(tag: DW_TAG_member, scope: !3113, file: !114, line: 60, baseType: !3116, size: 64)
!3116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3113, file: !114, line: 60, size: 64, elements: !3117)
!3117 = !{!3118, !3133}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3116, file: !114, line: 61, baseType: !3119, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3120)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3121)
!3121 = !{!3122, !3128}
!3122 = !DIDerivedType(tag: DW_TAG_member, scope: !3120, file: !124, line: 38, baseType: !3123, size: 32)
!3123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3120, file: !124, line: 38, size: 32, elements: !3124)
!3124 = !{!3125, !3127}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3123, file: !124, line: 39, baseType: !3126, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3123, file: !124, line: 40, baseType: !3126, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, scope: !3120, file: !124, line: 42, baseType: !3129, size: 32, offset: 32)
!3129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3120, file: !124, line: 42, size: 32, elements: !3130)
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3129, file: !124, line: 43, baseType: !3126, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3129, file: !124, line: 44, baseType: !3126, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3116, file: !114, line: 62, baseType: !3134, size: 64)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3135)
!3135 = !{!3136}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3134, file: !140, line: 50, baseType: !3137, size: 64)
!3137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3138, size: 64, elements: !145)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3113, file: !114, line: 68, baseType: !3140, size: 32, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3143)
!3143 = !{!3144}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3142, file: !150, line: 232, baseType: !3145, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3120)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3113, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3113, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3148 = !DIDerivedType(tag: DW_TAG_member, scope: !3113, file: !114, line: 90, baseType: !3149, size: 16, offset: 112)
!3149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3113, file: !114, line: 90, size: 16, elements: !3150)
!3150 = !{!3151, !3156}
!3151 = !DIDerivedType(tag: DW_TAG_member, scope: !3149, file: !114, line: 91, baseType: !3152, size: 16)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3149, file: !114, line: 91, size: 16, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3152, file: !114, line: 96, baseType: !166, size: 8)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3152, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3149, file: !114, line: 100, baseType: !170, size: 16)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3113, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3113, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3113, file: !114, line: 131, baseType: !3160, size: 192, offset: 192)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3161)
!3161 = !{!3162, !3163, !3169}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3160, file: !150, line: 245, baseType: !3119, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3160, file: !150, line: 246, baseType: !3164, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3165)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{null, !3168}
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3160, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3110, file: !114, line: 250, baseType: !3171, size: 288, offset: 384)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3171, file: !190, line: 26, baseType: !173, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3171, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3171, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3171, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3171, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3171, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3171, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3171, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3171, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3110, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3110, file: !114, line: 256, baseType: !3141, size: 64, offset: 704)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3110, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3110, file: !114, line: 325, baseType: !3186, size: 32, offset: 800)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 32)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3188)
!3188 = !{!3189, !3195, !3196}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3187, file: !109, line: 5074, baseType: !3190, size: 96)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3191)
!3191 = !{!3192, !3193, !3194}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3190, file: !210, line: 57, baseType: !213, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3190, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3190, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3187, file: !109, line: 5075, baseType: !3141, size: 64, offset: 96)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3187, file: !109, line: 5076, baseType: !3197, offset: 160)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3110, file: !114, line: 343, baseType: !3199, size: 64, offset: 832)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3200)
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3199, file: !190, line: 63, baseType: !173, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3199, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 32)
!3205 = !{!3095, !3206, !3209, !3211}
!3206 = !DIGlobalVariableExpression(var: !3207, expr: !DIExpression())
!3207 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3097, file: !3208, line: 404, type: !103, isLocal: true, isDefinition: true)
!3208 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3209 = !DIGlobalVariableExpression(var: !3210, expr: !DIExpression())
!3210 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3097, file: !3208, line: 405, type: !103, isLocal: true, isDefinition: true)
!3211 = !DIGlobalVariableExpression(var: !3212, expr: !DIExpression())
!3212 = distinct !DIGlobalVariable(name: "pending_current", scope: !3097, file: !3208, line: 425, type: !3109, isLocal: true, isDefinition: true)
!3213 = !DIGlobalVariableExpression(var: !3214, expr: !DIExpression())
!3214 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3215, file: !3245, line: 19, type: !3251, isLocal: true, isDefinition: true)
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3217, globals: !3242, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3217 = !{!2505, !102, !250, !173, !1936, !103, !3218, !2801, !186}
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 32)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3220)
!3220 = !{!3221, !3236, !3241}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3219, file: !150, line: 245, baseType: !3222, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3223)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3224)
!3224 = !{!3225, !3231}
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3223, file: !124, line: 38, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3223, file: !124, line: 38, size: 32, elements: !3227)
!3227 = !{!3228, !3230}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3226, file: !124, line: 39, baseType: !3229, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3226, file: !124, line: 40, baseType: !3229, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, scope: !3223, file: !124, line: 42, baseType: !3232, size: 32, offset: 32)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3223, file: !124, line: 42, size: 32, elements: !3233)
!3233 = !{!3234, !3235}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3232, file: !124, line: 43, baseType: !3229, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3232, file: !124, line: 44, baseType: !3229, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3219, file: !150, line: 246, baseType: !3237, size: 32, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3238)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 32)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{null, !3218}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3219, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3242 = !{!3243, !3213, !3246, !3248}
!3243 = !DIGlobalVariableExpression(var: !3244, expr: !DIExpression())
!3244 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3215, file: !3245, line: 15, type: !1936, isLocal: true, isDefinition: true)
!3245 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3246 = !DIGlobalVariableExpression(var: !3247, expr: !DIExpression())
!3247 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3215, file: !3245, line: 25, type: !103, isLocal: true, isDefinition: true)
!3248 = !DIGlobalVariableExpression(var: !3249, expr: !DIExpression())
!3249 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3215, file: !3245, line: 17, type: !3250, isLocal: true, isDefinition: true)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3223)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3253, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3253 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3255, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3257, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3258, retainedTypes: !3278, splitDebugInlining: false, nameTableKind: None)
!3257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3258 = !{!3259, !3267}
!3259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3260, line: 69, baseType: !32, size: 32, elements: !3261)
!3260 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3261 = !{!3262, !3263, !3264, !3265, !3266}
!3262 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3263 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3264 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3265 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3266 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3260, line: 56, baseType: !32, size: 32, elements: !3268)
!3268 = !{!3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277}
!3269 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3270 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3271 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3272 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3273 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3274 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3275 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3276 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3277 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3278 = !{!103, !3259, !3267, !3279, !167, !1042, !3281, !3282, !157, !171, !256, !217, !102, !22, !32, !3284, !3285, !3286, !1957, !3287, !187, !3288, !3280, !3289, !3290, !3291, !3292}
!3279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3260, line: 31, baseType: !3280)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !187)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3260, line: 32, baseType: !3283)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1937)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 32)
!3293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3294, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3294 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3296, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3298, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3099, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3300, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3301, retainedTypes: !3302, splitDebugInlining: false, nameTableKind: None)
!3300 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3301 = !{!2470, !3100, !30}
!3302 = !{!3303, !3304, !102, !103, !250, !173, !3318}
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !300, line: 127, baseType: !2470)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2509, line: 340, baseType: !3306)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 328, size: 6400, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3306, file: !2509, line: 330, baseType: !2521, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3306, file: !2509, line: 331, baseType: !2523, size: 992, offset: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3306, file: !2509, line: 332, baseType: !2521, size: 32, offset: 1024)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3306, file: !2509, line: 333, baseType: !2523, size: 992, offset: 1056)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3306, file: !2509, line: 334, baseType: !2521, size: 32, offset: 2048)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3306, file: !2509, line: 335, baseType: !2523, size: 992, offset: 2080)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3306, file: !2509, line: 336, baseType: !2521, size: 32, offset: 3072)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3306, file: !2509, line: 337, baseType: !2523, size: 992, offset: 3104)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3306, file: !2509, line: 338, baseType: !2533, size: 2048, offset: 4096)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3306, file: !2509, line: 339, baseType: !2537, size: 256, offset: 6144)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3320)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3321)
!3321 = !{!3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3320, file: !2509, line: 357, baseType: !465, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3320, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3320, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3320, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3320, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3320, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3320, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3320, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3320, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3332, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3334, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3335, splitDebugInlining: false, nameTableKind: None)
!3334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3335 = !{!102, !103, !22, !3336}
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 32)
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3338)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3338, file: !2509, line: 357, baseType: !465, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3338, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3338, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3338, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3338, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3338, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3338, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3338, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3338, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3350, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3351, splitDebugInlining: false, nameTableKind: None)
!3350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3351 = !{!3352, !102, !103}
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 32)
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3354)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3354, file: !2509, line: 357, baseType: !465, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3354, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3354, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3354, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3354, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3354, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3354, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3354, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3354, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3366, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3367, splitDebugInlining: false, nameTableKind: None)
!3366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3367 = !{!3368, !173, !102, !103}
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 32)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3370, line: 98, size: 256, elements: !3371)
!3370 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3371 = !{!3372, !3377, !3382, !3387, !3392, !3397, !3402, !3407}
!3372 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 99, baseType: !3373, size: 32)
!3373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 99, size: 32, elements: !3374)
!3374 = !{!3375, !3376}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3373, file: !3370, line: 99, baseType: !173, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3373, file: !3370, line: 99, baseType: !173, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 100, baseType: !3378, size: 32, offset: 32)
!3378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 100, size: 32, elements: !3379)
!3379 = !{!3380, !3381}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3378, file: !3370, line: 100, baseType: !173, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3378, file: !3370, line: 100, baseType: !173, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 101, baseType: !3383, size: 32, offset: 64)
!3383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 101, size: 32, elements: !3384)
!3384 = !{!3385, !3386}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3383, file: !3370, line: 101, baseType: !173, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3383, file: !3370, line: 101, baseType: !173, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 102, baseType: !3388, size: 32, offset: 96)
!3388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 102, size: 32, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3388, file: !3370, line: 102, baseType: !173, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3388, file: !3370, line: 102, baseType: !173, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 103, baseType: !3393, size: 32, offset: 128)
!3393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 103, size: 32, elements: !3394)
!3394 = !{!3395, !3396}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3393, file: !3370, line: 103, baseType: !173, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3393, file: !3370, line: 103, baseType: !173, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 104, baseType: !3398, size: 32, offset: 160)
!3398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 104, size: 32, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3398, file: !3370, line: 104, baseType: !173, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3398, file: !3370, line: 104, baseType: !173, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, scope: !3369, file: !3370, line: 105, baseType: !3403, size: 32, offset: 192)
!3403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3369, file: !3370, line: 105, size: 32, elements: !3404)
!3404 = !{!3405, !3406}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3403, file: !3370, line: 105, baseType: !173, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3403, file: !3370, line: 105, baseType: !173, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3369, file: !3370, line: 106, baseType: !173, size: 32, offset: 224)
!3408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3409, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3099, retainedTypes: !3410, splitDebugInlining: false, nameTableKind: None)
!3409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3410 = !{!3411, !102, !103, !3424, !3467}
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 32)
!3412 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3413, file: !2509, line: 357, baseType: !465, size: 32)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3413, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3413, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3413, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3413, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3413, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3413, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3413, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3413, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3370, line: 141, baseType: !3426)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3370, line: 97, size: 256, elements: !3427)
!3427 = !{!3428}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3426, file: !3370, line: 107, baseType: !3429, size: 256)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3370, line: 98, size: 256, elements: !3430)
!3430 = !{!3431, !3436, !3441, !3446, !3451, !3456, !3461, !3466}
!3431 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 99, baseType: !3432, size: 32)
!3432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 99, size: 32, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3432, file: !3370, line: 99, baseType: !173, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3432, file: !3370, line: 99, baseType: !173, size: 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 100, baseType: !3437, size: 32, offset: 32)
!3437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 100, size: 32, elements: !3438)
!3438 = !{!3439, !3440}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3437, file: !3370, line: 100, baseType: !173, size: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3437, file: !3370, line: 100, baseType: !173, size: 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 101, baseType: !3442, size: 32, offset: 64)
!3442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 101, size: 32, elements: !3443)
!3443 = !{!3444, !3445}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3442, file: !3370, line: 101, baseType: !173, size: 32)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3442, file: !3370, line: 101, baseType: !173, size: 32)
!3446 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 102, baseType: !3447, size: 32, offset: 96)
!3447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 102, size: 32, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3447, file: !3370, line: 102, baseType: !173, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3447, file: !3370, line: 102, baseType: !173, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 103, baseType: !3452, size: 32, offset: 128)
!3452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 103, size: 32, elements: !3453)
!3453 = !{!3454, !3455}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3452, file: !3370, line: 103, baseType: !173, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3452, file: !3370, line: 103, baseType: !173, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 104, baseType: !3457, size: 32, offset: 160)
!3457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 104, size: 32, elements: !3458)
!3458 = !{!3459, !3460}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3457, file: !3370, line: 104, baseType: !173, size: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3457, file: !3370, line: 104, baseType: !173, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, scope: !3429, file: !3370, line: 105, baseType: !3462, size: 32, offset: 192)
!3462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3429, file: !3370, line: 105, size: 32, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3462, file: !3370, line: 105, baseType: !173, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3462, file: !3370, line: 105, baseType: !173, size: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3429, file: !3370, line: 106, baseType: !173, size: 32, offset: 224)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!3468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3469, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2469, retainedTypes: !3470, splitDebugInlining: false, nameTableKind: None)
!3469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3470 = !{!3303, !250, !173, !3471, !3485}
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 32)
!3472 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2509, line: 340, baseType: !3473)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 328, size: 6400, elements: !3474)
!3474 = !{!3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3473, file: !2509, line: 330, baseType: !2521, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3473, file: !2509, line: 331, baseType: !2523, size: 992, offset: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3473, file: !2509, line: 332, baseType: !2521, size: 32, offset: 1024)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3473, file: !2509, line: 333, baseType: !2523, size: 992, offset: 1056)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3473, file: !2509, line: 334, baseType: !2521, size: 32, offset: 2048)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3473, file: !2509, line: 335, baseType: !2523, size: 992, offset: 2080)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3473, file: !2509, line: 336, baseType: !2521, size: 32, offset: 3072)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3473, file: !2509, line: 337, baseType: !2523, size: 992, offset: 3104)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3473, file: !2509, line: 338, baseType: !2533, size: 2048, offset: 4096)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3473, file: !2509, line: 339, baseType: !2537, size: 256, offset: 6144)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3487)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3488)
!3488 = !{!3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3487, file: !2509, line: 357, baseType: !465, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3487, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3487, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3487, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3487, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3487, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3487, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3487, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3487, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3499, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3500, splitDebugInlining: false, nameTableKind: None)
!3499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3500 = !{!3501, !102, !103}
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 32)
!3502 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2509, line: 370, baseType: !3503)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 355, size: 320, elements: !3504)
!3504 = !{!3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3503, file: !2509, line: 357, baseType: !465, size: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3503, file: !2509, line: 358, baseType: !466, size: 32, offset: 32)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3503, file: !2509, line: 360, baseType: !466, size: 32, offset: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3503, file: !2509, line: 364, baseType: !466, size: 32, offset: 96)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3503, file: !2509, line: 365, baseType: !466, size: 32, offset: 128)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3503, file: !2509, line: 366, baseType: !466, size: 32, offset: 160)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3503, file: !2509, line: 367, baseType: !173, size: 32, offset: 192)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3503, file: !2509, line: 368, baseType: !2550, size: 64, offset: 224)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3503, file: !2509, line: 369, baseType: !466, size: 32, offset: 288)
!3514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3515, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3516, splitDebugInlining: false, nameTableKind: None)
!3515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3516 = !{!237, !2801, !217, !1650, !3517, !22, !3519, !3522, !157, !3520, !102}
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 32)
!3518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_word_t", file: !3521, line: 57, baseType: !22)
!3521 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 32)
!3523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3520)
!3524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3525, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3525 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3527, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3528, splitDebugInlining: false, nameTableKind: None)
!3527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3528 = !{!102, !217}
!3529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3530, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3531, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3531 = !{!3532, !3539, !30}
!3532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3533, line: 14, baseType: !32, size: 32, elements: !3534)
!3533 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3534 = !{!3535, !3536, !3537, !3538}
!3535 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3536 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3537 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3538 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3539 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3533, line: 42, baseType: !32, size: 32, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3544, !3545, !3546}
!3541 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3542 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3543 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3544 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3545 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3546 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3548, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3550, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3551, splitDebugInlining: false, nameTableKind: None)
!3550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3551 = !{!22, !102, !103}
!3552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3553, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3554 = !{!"Ubuntu clang version 14.0.6"}
!3555 = !{i32 7, !"Dwarf Version", i32 4}
!3556 = !{i32 2, !"Debug Info Version", i32 3}
!3557 = !{i32 1, !"wchar_size", i32 4}
!3558 = !{i32 1, !"min_enum_size", i32 4}
!3559 = !{i32 1, !"branch-target-enforcement", i32 0}
!3560 = !{i32 1, !"sign-return-address", i32 0}
!3561 = !{i32 1, !"sign-return-address-all", i32 0}
!3562 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3563 = !{i32 7, !"frame-pointer", i32 2}
!3564 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3565, file: !3565, line: 26, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3252, retainedNodes: !223)
!3565 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3566 = !DILocation(line: 28, column: 1, scope: !3564)
!3567 = !{i64 2151547876, i64 2151547896, i64 2151547959}
!3568 = !DILocation(line: 29, column: 1, scope: !3564)
!3569 = !{i64 2151548291, i64 2151548311, i64 2151548374}
!3570 = !DILocation(line: 30, column: 1, scope: !3564)
!3571 = !{i64 2151548710, i64 2151548730, i64 2151548793}
!3572 = !DILocation(line: 31, column: 1, scope: !3564)
!3573 = !{i64 2151553190, i64 2151553210, i64 2151553273}
!3574 = !DILocation(line: 33, column: 1, scope: !3564)
!3575 = !{i64 2151553482, i64 2151553502, i64 2151553565}
!3576 = !DILocation(line: 35, column: 1, scope: !3564)
!3577 = !{i64 2151553807, i64 2151553827, i64 2151553890}
!3578 = !DILocation(line: 50, column: 1, scope: !3564)
!3579 = !{i64 2151554234, i64 2151554254, i64 2151554317}
!3580 = !DILocation(line: 54, column: 1, scope: !3564)
!3581 = !{i64 2151554673, i64 2151554693, i64 2151554756}
!3582 = !DILocation(line: 61, column: 1, scope: !3564)
!3583 = !{i64 2151554990, i64 2151555010, i64 2151555073}
!3584 = !DILocation(line: 63, column: 1, scope: !3564)
!3585 = !{i64 2151555370, i64 2151555390, i64 2151555453}
!3586 = !DILocation(line: 64, column: 1, scope: !3564)
!3587 = !{i64 2151555892, i64 2151555912, i64 2151555975}
!3588 = !DILocation(line: 65, column: 1, scope: !3564)
!3589 = !{i64 2151556390, i64 2151556410, i64 2151556473}
!3590 = !DILocation(line: 66, column: 1, scope: !3564)
!3591 = !{i64 2151556872, i64 2151556892, i64 2151556955}
!3592 = !DILocation(line: 67, column: 1, scope: !3564)
!3593 = !{i64 2151557379, i64 2151557399, i64 2151557462}
!3594 = !DILocation(line: 68, column: 1, scope: !3564)
!3595 = !{i64 2151557867, i64 2151557887, i64 2151557950}
!3596 = !DILocation(line: 70, column: 1, scope: !3564)
!3597 = !{i64 2151558335, i64 2151558355, i64 2151558418}
!3598 = !DILocation(line: 71, column: 1, scope: !3564)
!3599 = !{i64 2151558777, i64 2151558797, i64 2151558860}
!3600 = !DILocation(line: 72, column: 1, scope: !3564)
!3601 = !{i64 2151559235, i64 2151559255, i64 2151559318}
!3602 = !DILocation(line: 97, column: 1, scope: !3564)
!3603 = !{i64 2151559542, i64 2151559562, i64 2151559625}
!3604 = !DILocation(line: 99, column: 1, scope: !3564)
!3605 = !{i64 2151559760, i64 2151559780, i64 2151559843}
!3606 = !DILocation(line: 102, column: 1, scope: !3564)
!3607 = !{i64 2151560017, i64 2151560037, i64 2151560100}
!3608 = !DILocation(line: 105, column: 1, scope: !3564)
!3609 = !{i64 2151560257, i64 2151560277, i64 2151560340}
!3610 = !DILocation(line: 115, column: 1, scope: !3564)
!3611 = !{i64 2151560596, i64 2151560616, i64 2151560679}
!3612 = !DILocation(line: 118, column: 1, scope: !3564)
!3613 = !{i64 2151560940, i64 2151560960, i64 2151561023}
!3614 = !DILocation(line: 32, column: 1, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3564, file: !3616, discriminator: 0)
!3616 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3617 = !{i64 2151561296, i64 2151561316, i64 2151561379}
!3618 = !DILocation(line: 33, column: 1, scope: !3615)
!3619 = !{i64 2151561808, i64 2151561828, i64 2151561891}
!3620 = !DILocation(line: 53, column: 1, scope: !3615)
!3621 = !{i64 2151562316, i64 2151562336, i64 2151562399}
!3622 = !DILocation(line: 54, column: 1, scope: !3615)
!3623 = !{i64 2151562734, i64 2151562754, i64 2151562817}
!3624 = !DILocation(line: 55, column: 1, scope: !3615)
!3625 = !{i64 2151567213, i64 2151567233, i64 2151567296}
!3626 = !DILocation(line: 56, column: 1, scope: !3615)
!3627 = !{i64 2151567631, i64 2151567651, i64 2151567714}
!3628 = !DILocation(line: 57, column: 1, scope: !3615)
!3629 = !{i64 2151568049, i64 2151568069, i64 2151568132}
!3630 = !DILocation(line: 58, column: 1, scope: !3615)
!3631 = !{i64 2151568467, i64 2151568487, i64 2151568550}
!3632 = !DILocation(line: 59, column: 1, scope: !3615)
!3633 = !{i64 2151568885, i64 2151568905, i64 2151568968}
!3634 = !DILocation(line: 60, column: 1, scope: !3615)
!3635 = !{i64 2151569309, i64 2151569329, i64 2151569392}
!3636 = !DILocation(line: 61, column: 1, scope: !3615)
!3637 = !{i64 2151569626, i64 2151569646, i64 2151569709}
!3638 = !DILocation(line: 70, column: 1, scope: !3615)
!3639 = !{i64 2151569855, i64 2151569875, i64 2151569938}
!3640 = !DILocation(line: 72, column: 1, scope: !3615)
!3641 = !{i64 2151570187, i64 2151570207, i64 2151570270}
!3642 = !DILocation(line: 73, column: 1, scope: !3615)
!3643 = !{i64 2151570637, i64 2151570657, i64 2151570720}
!3644 = !DILocation(line: 74, column: 1, scope: !3615)
!3645 = !{i64 2151571087, i64 2151571107, i64 2151571170}
!3646 = !DILocation(line: 75, column: 1, scope: !3615)
!3647 = !{i64 2151571537, i64 2151571557, i64 2151571620}
!3648 = !DILocation(line: 76, column: 1, scope: !3615)
!3649 = !{i64 2151571987, i64 2151572007, i64 2151572070}
!3650 = !DILocation(line: 77, column: 1, scope: !3615)
!3651 = !{i64 2151572437, i64 2151572457, i64 2151572520}
!3652 = !DILocation(line: 78, column: 1, scope: !3615)
!3653 = !{i64 2151572887, i64 2151572907, i64 2151572970}
!3654 = !DILocation(line: 79, column: 1, scope: !3615)
!3655 = !{i64 2151573337, i64 2151573357, i64 2151573420}
!3656 = !DILocation(line: 80, column: 1, scope: !3615)
!3657 = !{i64 2151573790, i64 2151573810, i64 2151573873}
!3658 = !DILocation(line: 84, column: 1, scope: !3615)
!3659 = !{i64 2151574122, i64 2151574142, i64 2151574205}
!3660 = !DILocation(line: 106, column: 1, scope: !3615)
!3661 = !{i64 2151574372, i64 2151574392, i64 2151574455}
!3662 = !DILocation(line: 11, column: 1, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3564, file: !3664, discriminator: 0)
!3664 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3665 = distinct !DISubprogram(name: "thread_entry", scope: !107, file: !107, line: 23, type: !242, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3666 = !DILocalVariable(name: "p1", arg: 1, scope: !3665, file: !107, line: 23, type: !102)
!3667 = !DILocation(line: 23, column: 32, scope: !3665)
!3668 = !DILocalVariable(name: "p2", arg: 2, scope: !3665, file: !107, line: 23, type: !102)
!3669 = !DILocation(line: 23, column: 42, scope: !3665)
!3670 = !DILocalVariable(name: "p3", arg: 3, scope: !3665, file: !107, line: 23, type: !102)
!3671 = !DILocation(line: 23, column: 52, scope: !3665)
!3672 = !DILocation(line: 25, column: 2, scope: !3665)
!3673 = !DILocation(line: 26, column: 1, scope: !3665)
!3674 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 28, type: !253, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3675 = !DILocalVariable(name: "ret", scope: !3674, file: !107, line: 30, type: !103)
!3676 = !DILocation(line: 30, column: 6, scope: !3674)
!3677 = !DILocation(line: 32, column: 8, scope: !3674)
!3678 = !DILocation(line: 32, column: 6, scope: !3674)
!3679 = !DILocation(line: 33, column: 17, scope: !3674)
!3680 = !DILocation(line: 33, column: 2, scope: !3674)
!3681 = !DILocation(line: 34, column: 1, scope: !3674)
!3682 = distinct !DISubprogram(name: "test", scope: !107, file: !107, line: 12, type: !3683, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!103}
!3685 = !DILocalVariable(name: "a", scope: !3682, file: !107, line: 14, type: !103)
!3686 = !DILocation(line: 14, column: 6, scope: !3682)
!3687 = !DILocalVariable(name: "b", scope: !3682, file: !107, line: 15, type: !103)
!3688 = !DILocation(line: 15, column: 6, scope: !3682)
!3689 = !DILocation(line: 17, column: 4, scope: !3682)
!3690 = !DILocation(line: 18, column: 6, scope: !3682)
!3691 = !DILocation(line: 18, column: 8, scope: !3682)
!3692 = !DILocation(line: 18, column: 4, scope: !3682)
!3693 = !DILocation(line: 20, column: 9, scope: !3682)
!3694 = !DILocation(line: 20, column: 13, scope: !3682)
!3695 = !DILocation(line: 20, column: 11, scope: !3682)
!3696 = !DILocation(line: 20, column: 2, scope: !3682)
!3697 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !272, file: !272, line: 45, type: !274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3698 = !DILocalVariable(name: "c", arg: 1, scope: !3697, file: !272, line: 45, type: !103)
!3699 = !DILocation(line: 45, column: 52, scope: !3697)
!3700 = !DILocation(line: 47, column: 2, scope: !3697)
!3701 = !DILocation(line: 50, column: 2, scope: !3697)
!3702 = distinct !DISubprogram(name: "__printk_hook_install", scope: !272, file: !272, line: 63, type: !3703, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{null, !273}
!3705 = !DILocalVariable(name: "fn", arg: 1, scope: !3702, file: !272, line: 63, type: !273)
!3706 = !DILocation(line: 63, column: 34, scope: !3702)
!3707 = !DILocation(line: 65, column: 14, scope: !3702)
!3708 = !DILocation(line: 65, column: 12, scope: !3702)
!3709 = !DILocation(line: 66, column: 1, scope: !3702)
!3710 = distinct !DISubprogram(name: "__printk_get_hook", scope: !272, file: !272, line: 76, type: !3711, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!102}
!3713 = !DILocation(line: 78, column: 9, scope: !3710)
!3714 = !DILocation(line: 78, column: 2, scope: !3710)
!3715 = distinct !DISubprogram(name: "vprintk", scope: !272, file: !272, line: 113, type: !3716, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{null, !256, !3718}
!3718 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3719, line: 99, baseType: !3720)
!3719 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3719, line: 40, baseType: !3721)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !272, baseType: !3722)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3723)
!3723 = !{!3724}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3722, file: !272, line: 79, baseType: !102, size: 32)
!3725 = !DILocalVariable(name: "fmt", arg: 1, scope: !3715, file: !272, line: 113, type: !256)
!3726 = !DILocation(line: 113, column: 26, scope: !3715)
!3727 = !DILocalVariable(name: "ap", arg: 2, scope: !3715, file: !272, line: 113, type: !3718)
!3728 = !DILocation(line: 113, column: 39, scope: !3715)
!3729 = !DILocation(line: 120, column: 6, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3715, file: !272, line: 120, column: 6)
!3731 = !DILocation(line: 120, column: 6, scope: !3715)
!3732 = !DILocalVariable(name: "ctx", scope: !3733, file: !272, line: 121, type: !3734)
!3733 = distinct !DILexicalBlock(scope: !3730, file: !272, line: 120, column: 27)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !272, line: 81, size: 32, elements: !3735)
!3735 = !{!3736, !3737}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3734, file: !272, line: 85, baseType: !32, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3734, file: !272, line: 86, baseType: !3738, offset: 32)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, elements: !3739)
!3739 = !{!3740}
!3740 = !DISubrange(count: 0)
!3741 = !DILocation(line: 121, column: 26, scope: !3733)
!3742 = !DILocation(line: 133, column: 27, scope: !3733)
!3743 = !DILocation(line: 133, column: 33, scope: !3733)
!3744 = !DILocation(line: 133, column: 3, scope: !3733)
!3745 = !DILocation(line: 135, column: 11, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3733, file: !272, line: 135, column: 7)
!3747 = !DILocation(line: 135, column: 7, scope: !3746)
!3748 = !DILocation(line: 135, column: 7, scope: !3733)
!3749 = !DILocation(line: 136, column: 4, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3746, file: !272, line: 135, column: 22)
!3751 = !DILocation(line: 137, column: 3, scope: !3750)
!3752 = !DILocation(line: 138, column: 2, scope: !3733)
!3753 = !DILocation(line: 148, column: 29, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3730, file: !272, line: 138, column: 9)
!3755 = !DILocation(line: 148, column: 3, scope: !3754)
!3756 = !DILocation(line: 155, column: 1, scope: !3715)
!3757 = distinct !DISubprogram(name: "k_is_user_context", scope: !3758, file: !3758, line: 115, type: !3759, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3758 = !DIFile(filename: "zephyr/include/zephyr/syscall.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!1035}
!3761 = !DILocation(line: 120, column: 2, scope: !3757)
!3762 = distinct !DISubprogram(name: "buf_char_out", scope: !272, file: !272, line: 95, type: !3763, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!103, !103, !102}
!3765 = !DILocalVariable(name: "c", arg: 1, scope: !3762, file: !272, line: 95, type: !103)
!3766 = !DILocation(line: 95, column: 29, scope: !3762)
!3767 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3762, file: !272, line: 95, type: !102)
!3768 = !DILocation(line: 95, column: 38, scope: !3762)
!3769 = !DILocalVariable(name: "ctx", scope: !3762, file: !272, line: 97, type: !3770)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 32)
!3771 = !DILocation(line: 97, column: 26, scope: !3762)
!3772 = !DILocation(line: 97, column: 32, scope: !3762)
!3773 = !DILocation(line: 99, column: 31, scope: !3762)
!3774 = !DILocation(line: 99, column: 2, scope: !3762)
!3775 = !DILocation(line: 99, column: 7, scope: !3762)
!3776 = !DILocation(line: 99, column: 11, scope: !3762)
!3777 = !DILocation(line: 99, column: 16, scope: !3762)
!3778 = !DILocation(line: 99, column: 25, scope: !3762)
!3779 = !DILocation(line: 99, column: 29, scope: !3762)
!3780 = !DILocation(line: 100, column: 6, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3762, file: !272, line: 100, column: 6)
!3782 = !DILocation(line: 100, column: 11, scope: !3781)
!3783 = !DILocation(line: 100, column: 21, scope: !3781)
!3784 = !DILocation(line: 100, column: 6, scope: !3762)
!3785 = !DILocation(line: 101, column: 13, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3781, file: !272, line: 100, column: 51)
!3787 = !DILocation(line: 101, column: 3, scope: !3786)
!3788 = !DILocation(line: 102, column: 2, scope: !3786)
!3789 = !DILocation(line: 104, column: 9, scope: !3762)
!3790 = !DILocation(line: 104, column: 2, scope: !3762)
!3791 = distinct !DISubprogram(name: "cbvprintf", scope: !3792, file: !3792, line: 739, type: !3793, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3792 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!103, !3795, !102, !256, !3718}
!3795 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3792, line: 297, baseType: !3796)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 32)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!103, null}
!3799 = !DILocalVariable(name: "out", arg: 1, scope: !3791, file: !3792, line: 739, type: !3795)
!3800 = !DILocation(line: 739, column: 27, scope: !3791)
!3801 = !DILocalVariable(name: "ctx", arg: 2, scope: !3791, file: !3792, line: 739, type: !102)
!3802 = !DILocation(line: 739, column: 38, scope: !3791)
!3803 = !DILocalVariable(name: "format", arg: 3, scope: !3791, file: !3792, line: 739, type: !256)
!3804 = !DILocation(line: 739, column: 55, scope: !3791)
!3805 = !DILocalVariable(name: "ap", arg: 4, scope: !3791, file: !3792, line: 739, type: !3718)
!3806 = !DILocation(line: 739, column: 71, scope: !3791)
!3807 = !DILocation(line: 741, column: 26, scope: !3791)
!3808 = !DILocation(line: 741, column: 31, scope: !3791)
!3809 = !DILocation(line: 741, column: 36, scope: !3791)
!3810 = !DILocation(line: 741, column: 9, scope: !3791)
!3811 = !DILocation(line: 741, column: 2, scope: !3791)
!3812 = distinct !DISubprogram(name: "buf_flush", scope: !272, file: !272, line: 89, type: !3813, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{null, !3770}
!3815 = !DILocalVariable(name: "ctx", arg: 1, scope: !3812, file: !272, line: 89, type: !3770)
!3816 = !DILocation(line: 89, column: 47, scope: !3812)
!3817 = !DILocation(line: 91, column: 12, scope: !3812)
!3818 = !DILocation(line: 91, column: 17, scope: !3812)
!3819 = !DILocation(line: 91, column: 22, scope: !3812)
!3820 = !DILocation(line: 91, column: 27, scope: !3812)
!3821 = !DILocation(line: 91, column: 2, scope: !3812)
!3822 = !DILocation(line: 92, column: 2, scope: !3812)
!3823 = !DILocation(line: 92, column: 7, scope: !3812)
!3824 = !DILocation(line: 92, column: 17, scope: !3812)
!3825 = !DILocation(line: 93, column: 1, scope: !3812)
!3826 = distinct !DISubprogram(name: "char_out", scope: !272, file: !272, line: 107, type: !3763, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3827 = !DILocalVariable(name: "c", arg: 1, scope: !3826, file: !272, line: 107, type: !103)
!3828 = !DILocation(line: 107, column: 25, scope: !3826)
!3829 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3826, file: !272, line: 107, type: !102)
!3830 = !DILocation(line: 107, column: 34, scope: !3826)
!3831 = !DILocation(line: 109, column: 9, scope: !3826)
!3832 = !DILocation(line: 110, column: 9, scope: !3826)
!3833 = !DILocation(line: 110, column: 19, scope: !3826)
!3834 = !DILocation(line: 110, column: 2, scope: !3826)
!3835 = distinct !DISubprogram(name: "k_str_out", scope: !3836, file: !3836, line: 1470, type: !3837, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3836 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !2801, !217}
!3839 = !DILocalVariable(name: "c", arg: 1, scope: !3835, file: !3836, line: 1470, type: !2801)
!3840 = !DILocation(line: 1470, column: 37, scope: !3835)
!3841 = !DILocalVariable(name: "n", arg: 2, scope: !3835, file: !3836, line: 1470, type: !217)
!3842 = !DILocation(line: 1470, column: 47, scope: !3835)
!3843 = !DILocation(line: 1480, column: 2, scope: !3835)
!3844 = !DILocation(line: 1480, column: 2, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3835, file: !3836, line: 1480, column: 2)
!3846 = !{i64 2149618150}
!3847 = !DILocation(line: 1481, column: 19, scope: !3835)
!3848 = !DILocation(line: 1481, column: 22, scope: !3835)
!3849 = !DILocation(line: 1481, column: 2, scope: !3835)
!3850 = !DILocation(line: 1482, column: 1, scope: !3835)
!3851 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !272, file: !272, line: 157, type: !3837, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3852 = !DILocalVariable(name: "c", arg: 1, scope: !3851, file: !272, line: 157, type: !2801)
!3853 = !DILocation(line: 157, column: 29, scope: !3851)
!3854 = !DILocalVariable(name: "n", arg: 2, scope: !3851, file: !272, line: 157, type: !217)
!3855 = !DILocation(line: 157, column: 39, scope: !3851)
!3856 = !DILocalVariable(name: "i", scope: !3851, file: !272, line: 159, type: !217)
!3857 = !DILocation(line: 159, column: 9, scope: !3851)
!3858 = !DILocation(line: 164, column: 9, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3851, file: !272, line: 164, column: 2)
!3860 = !DILocation(line: 164, column: 7, scope: !3859)
!3861 = !DILocation(line: 164, column: 14, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !272, line: 164, column: 2)
!3863 = !DILocation(line: 164, column: 18, scope: !3862)
!3864 = !DILocation(line: 164, column: 16, scope: !3862)
!3865 = !DILocation(line: 164, column: 2, scope: !3859)
!3866 = !DILocation(line: 165, column: 3, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3862, file: !272, line: 164, column: 26)
!3868 = !DILocation(line: 165, column: 13, scope: !3867)
!3869 = !DILocation(line: 165, column: 15, scope: !3867)
!3870 = !DILocation(line: 166, column: 2, scope: !3867)
!3871 = !DILocation(line: 164, column: 22, scope: !3862)
!3872 = !DILocation(line: 164, column: 2, scope: !3862)
!3873 = distinct !{!3873, !3865, !3874}
!3874 = !DILocation(line: 166, column: 2, scope: !3859)
!3875 = !DILocation(line: 171, column: 1, scope: !3851)
!3876 = distinct !DISubprogram(name: "printk", scope: !272, file: !272, line: 203, type: !3877, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{null, !256, null}
!3879 = !DILocalVariable(name: "fmt", arg: 1, scope: !3876, file: !272, line: 203, type: !256)
!3880 = !DILocation(line: 203, column: 25, scope: !3876)
!3881 = !DILocalVariable(name: "ap", scope: !3876, file: !272, line: 205, type: !3718)
!3882 = !DILocation(line: 205, column: 10, scope: !3876)
!3883 = !DILocation(line: 207, column: 2, scope: !3876)
!3884 = !DILocation(line: 209, column: 10, scope: !3876)
!3885 = !DILocation(line: 209, column: 2, scope: !3876)
!3886 = !DILocation(line: 211, column: 2, scope: !3876)
!3887 = !DILocation(line: 212, column: 1, scope: !3876)
!3888 = distinct !DISubprogram(name: "snprintk", scope: !272, file: !272, line: 239, type: !3889, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!103, !2801, !217, !256, null}
!3891 = !DILocalVariable(name: "str", arg: 1, scope: !3888, file: !272, line: 239, type: !2801)
!3892 = !DILocation(line: 239, column: 20, scope: !3888)
!3893 = !DILocalVariable(name: "size", arg: 2, scope: !3888, file: !272, line: 239, type: !217)
!3894 = !DILocation(line: 239, column: 32, scope: !3888)
!3895 = !DILocalVariable(name: "fmt", arg: 3, scope: !3888, file: !272, line: 239, type: !256)
!3896 = !DILocation(line: 239, column: 50, scope: !3888)
!3897 = !DILocalVariable(name: "ap", scope: !3888, file: !272, line: 241, type: !3718)
!3898 = !DILocation(line: 241, column: 10, scope: !3888)
!3899 = !DILocalVariable(name: "ret", scope: !3888, file: !272, line: 242, type: !103)
!3900 = !DILocation(line: 242, column: 6, scope: !3888)
!3901 = !DILocation(line: 244, column: 2, scope: !3888)
!3902 = !DILocation(line: 245, column: 18, scope: !3888)
!3903 = !DILocation(line: 245, column: 23, scope: !3888)
!3904 = !DILocation(line: 245, column: 29, scope: !3888)
!3905 = !DILocation(line: 245, column: 8, scope: !3888)
!3906 = !DILocation(line: 245, column: 6, scope: !3888)
!3907 = !DILocation(line: 246, column: 2, scope: !3888)
!3908 = !DILocation(line: 248, column: 9, scope: !3888)
!3909 = !DILocation(line: 248, column: 2, scope: !3888)
!3910 = distinct !DISubprogram(name: "vsnprintk", scope: !272, file: !272, line: 251, type: !3911, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!103, !2801, !217, !256, !3718}
!3913 = !DILocalVariable(name: "str", arg: 1, scope: !3910, file: !272, line: 251, type: !2801)
!3914 = !DILocation(line: 251, column: 21, scope: !3910)
!3915 = !DILocalVariable(name: "size", arg: 2, scope: !3910, file: !272, line: 251, type: !217)
!3916 = !DILocation(line: 251, column: 33, scope: !3910)
!3917 = !DILocalVariable(name: "fmt", arg: 3, scope: !3910, file: !272, line: 251, type: !256)
!3918 = !DILocation(line: 251, column: 51, scope: !3910)
!3919 = !DILocalVariable(name: "ap", arg: 4, scope: !3910, file: !272, line: 251, type: !3718)
!3920 = !DILocation(line: 251, column: 64, scope: !3910)
!3921 = !DILocalVariable(name: "ctx", scope: !3910, file: !272, line: 253, type: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !272, line: 217, size: 96, elements: !3923)
!3923 = !{!3924, !3925, !3926}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3922, file: !272, line: 218, baseType: !2801, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3922, file: !272, line: 219, baseType: !103, size: 32, offset: 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3922, file: !272, line: 220, baseType: !103, size: 32, offset: 64)
!3927 = !DILocation(line: 253, column: 21, scope: !3910)
!3928 = !DILocation(line: 253, column: 27, scope: !3910)
!3929 = !DILocation(line: 253, column: 29, scope: !3910)
!3930 = !DILocation(line: 253, column: 34, scope: !3910)
!3931 = !DILocation(line: 255, column: 21, scope: !3910)
!3932 = !DILocation(line: 255, column: 27, scope: !3910)
!3933 = !DILocation(line: 255, column: 2, scope: !3910)
!3934 = !DILocation(line: 257, column: 10, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3910, file: !272, line: 257, column: 6)
!3936 = !DILocation(line: 257, column: 22, scope: !3935)
!3937 = !DILocation(line: 257, column: 16, scope: !3935)
!3938 = !DILocation(line: 257, column: 6, scope: !3910)
!3939 = !DILocation(line: 258, column: 3, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3935, file: !272, line: 257, column: 27)
!3941 = !DILocation(line: 258, column: 11, scope: !3940)
!3942 = !DILocation(line: 258, column: 18, scope: !3940)
!3943 = !DILocation(line: 259, column: 2, scope: !3940)
!3944 = !DILocation(line: 261, column: 13, scope: !3910)
!3945 = !DILocation(line: 261, column: 2, scope: !3910)
!3946 = distinct !DISubprogram(name: "str_out", scope: !272, file: !272, line: 223, type: !3947, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!103, !103, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 32)
!3950 = !DILocalVariable(name: "c", arg: 1, scope: !3946, file: !272, line: 223, type: !103)
!3951 = !DILocation(line: 223, column: 24, scope: !3946)
!3952 = !DILocalVariable(name: "ctx", arg: 2, scope: !3946, file: !272, line: 223, type: !3949)
!3953 = !DILocation(line: 223, column: 47, scope: !3946)
!3954 = !DILocation(line: 225, column: 6, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3946, file: !272, line: 225, column: 6)
!3956 = !DILocation(line: 225, column: 11, scope: !3955)
!3957 = !DILocation(line: 225, column: 15, scope: !3955)
!3958 = !DILocation(line: 225, column: 23, scope: !3955)
!3959 = !DILocation(line: 225, column: 26, scope: !3955)
!3960 = !DILocation(line: 225, column: 31, scope: !3955)
!3961 = !DILocation(line: 225, column: 40, scope: !3955)
!3962 = !DILocation(line: 225, column: 45, scope: !3955)
!3963 = !DILocation(line: 225, column: 37, scope: !3955)
!3964 = !DILocation(line: 225, column: 6, scope: !3946)
!3965 = !DILocation(line: 226, column: 3, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3955, file: !272, line: 225, column: 50)
!3967 = !DILocation(line: 226, column: 8, scope: !3966)
!3968 = !DILocation(line: 226, column: 13, scope: !3966)
!3969 = !DILocation(line: 227, column: 10, scope: !3966)
!3970 = !DILocation(line: 227, column: 3, scope: !3966)
!3971 = !DILocation(line: 230, column: 6, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3946, file: !272, line: 230, column: 6)
!3973 = !DILocation(line: 230, column: 11, scope: !3972)
!3974 = !DILocation(line: 230, column: 20, scope: !3972)
!3975 = !DILocation(line: 230, column: 25, scope: !3972)
!3976 = !DILocation(line: 230, column: 29, scope: !3972)
!3977 = !DILocation(line: 230, column: 17, scope: !3972)
!3978 = !DILocation(line: 230, column: 6, scope: !3946)
!3979 = !DILocation(line: 231, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3972, file: !272, line: 230, column: 34)
!3981 = !DILocation(line: 231, column: 8, scope: !3980)
!3982 = !DILocation(line: 231, column: 12, scope: !3980)
!3983 = !DILocation(line: 231, column: 17, scope: !3980)
!3984 = !DILocation(line: 231, column: 22, scope: !3980)
!3985 = !DILocation(line: 231, column: 26, scope: !3980)
!3986 = !DILocation(line: 232, column: 2, scope: !3980)
!3987 = !DILocation(line: 233, column: 28, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3972, file: !272, line: 232, column: 9)
!3989 = !DILocation(line: 233, column: 3, scope: !3988)
!3990 = !DILocation(line: 233, column: 8, scope: !3988)
!3991 = !DILocation(line: 233, column: 12, scope: !3988)
!3992 = !DILocation(line: 233, column: 17, scope: !3988)
!3993 = !DILocation(line: 233, column: 22, scope: !3988)
!3994 = !DILocation(line: 233, column: 26, scope: !3988)
!3995 = !DILocation(line: 236, column: 9, scope: !3946)
!3996 = !DILocation(line: 236, column: 2, scope: !3946)
!3997 = !DILocation(line: 237, column: 1, scope: !3946)
!3998 = distinct !DISubprogram(name: "z_thread_entry", scope: !3999, file: !3999, line: 30, type: !4000, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3254, retainedNodes: !223)
!3999 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !240, !102, !102, !102}
!4002 = !DILocalVariable(name: "entry", arg: 1, scope: !3998, file: !3999, line: 30, type: !240)
!4003 = !DILocation(line: 30, column: 52, scope: !3998)
!4004 = !DILocalVariable(name: "p1", arg: 2, scope: !3998, file: !3999, line: 31, type: !102)
!4005 = !DILocation(line: 31, column: 12, scope: !3998)
!4006 = !DILocalVariable(name: "p2", arg: 3, scope: !3998, file: !3999, line: 31, type: !102)
!4007 = !DILocation(line: 31, column: 22, scope: !3998)
!4008 = !DILocalVariable(name: "p3", arg: 4, scope: !3998, file: !3999, line: 31, type: !102)
!4009 = !DILocation(line: 31, column: 32, scope: !3998)
!4010 = !DILocation(line: 36, column: 2, scope: !3998)
!4011 = !DILocation(line: 36, column: 8, scope: !3998)
!4012 = !DILocation(line: 36, column: 12, scope: !3998)
!4013 = !DILocation(line: 36, column: 16, scope: !3998)
!4014 = !DILocation(line: 38, column: 17, scope: !3998)
!4015 = !DILocation(line: 38, column: 2, scope: !3998)
!4016 = !DILocation(line: 45, column: 2, scope: !3998)
!4017 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !4018, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3254, retainedNodes: !223)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!4020}
!4020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !4021)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 32)
!4022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !4023)
!4023 = !{!4024, !4082, !4094, !4095, !4096, !4097, !4110}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4022, file: !114, line: 247, baseType: !4025, size: 384)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !4026)
!4026 = !{!4027, !4051, !4058, !4059, !4060, !4069, !4070, !4071}
!4027 = !DIDerivedType(tag: DW_TAG_member, scope: !4025, file: !114, line: 60, baseType: !4028, size: 64)
!4028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !114, line: 60, size: 64, elements: !4029)
!4029 = !{!4030, !4045}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4028, file: !114, line: 61, baseType: !4031, size: 64)
!4031 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !4032)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !4033)
!4033 = !{!4034, !4040}
!4034 = !DIDerivedType(tag: DW_TAG_member, scope: !4032, file: !124, line: 38, baseType: !4035, size: 32)
!4035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4032, file: !124, line: 38, size: 32, elements: !4036)
!4036 = !{!4037, !4039}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4035, file: !124, line: 39, baseType: !4038, size: 32)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !124, line: 40, baseType: !4038, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, scope: !4032, file: !124, line: 42, baseType: !4041, size: 32, offset: 32)
!4041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4032, file: !124, line: 42, size: 32, elements: !4042)
!4042 = !{!4043, !4044}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4041, file: !124, line: 43, baseType: !4038, size: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4041, file: !124, line: 44, baseType: !4038, size: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4028, file: !114, line: 62, baseType: !4046, size: 64)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !4047)
!4047 = !{!4048}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4046, file: !140, line: 50, baseType: !4049, size: 64)
!4049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4050, size: 64, elements: !145)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4025, file: !114, line: 68, baseType: !4052, size: 32, offset: 64)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 32)
!4053 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !4054)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !4055)
!4055 = !{!4056}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4054, file: !150, line: 232, baseType: !4057, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !4032)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4025, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4025, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!4060 = !DIDerivedType(tag: DW_TAG_member, scope: !4025, file: !114, line: 90, baseType: !4061, size: 16, offset: 112)
!4061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !114, line: 90, size: 16, elements: !4062)
!4062 = !{!4063, !4068}
!4063 = !DIDerivedType(tag: DW_TAG_member, scope: !4061, file: !114, line: 91, baseType: !4064, size: 16)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4061, file: !114, line: 91, size: 16, elements: !4065)
!4065 = !{!4066, !4067}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4064, file: !114, line: 96, baseType: !166, size: 8)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4064, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4061, file: !114, line: 100, baseType: !170, size: 16)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4025, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4025, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4025, file: !114, line: 131, baseType: !4072, size: 192, offset: 192)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !4073)
!4073 = !{!4074, !4075, !4081}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4072, file: !150, line: 245, baseType: !4031, size: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4072, file: !150, line: 246, baseType: !4076, size: 32, offset: 64)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !4077)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 32)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !4080}
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 32)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4072, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4022, file: !114, line: 250, baseType: !4083, size: 288, offset: 384)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !4084)
!4084 = !{!4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4083, file: !190, line: 26, baseType: !173, size: 32)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4083, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4083, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4083, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4083, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4083, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4083, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4083, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4083, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4022, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4022, file: !114, line: 256, baseType: !4053, size: 64, offset: 704)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4022, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4022, file: !114, line: 325, baseType: !4098, size: 32, offset: 800)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 32)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !4100)
!4100 = !{!4101, !4107, !4108}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4099, file: !109, line: 5074, baseType: !4102, size: 96)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !4103)
!4103 = !{!4104, !4105, !4106}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4102, file: !210, line: 57, baseType: !213, size: 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4102, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4102, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4099, file: !109, line: 5075, baseType: !4053, size: 64, offset: 96)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4099, file: !109, line: 5076, baseType: !4109, offset: 160)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4022, file: !114, line: 343, baseType: !4111, size: 64, offset: 832)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !4112)
!4112 = !{!4113, !4114}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4111, file: !190, line: 63, baseType: !173, size: 32)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4111, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!4115 = !DILocation(line: 535, column: 9, scope: !4017)
!4116 = !DILocation(line: 535, column: 2, scope: !4017)
!4117 = distinct !DISubprogram(name: "k_thread_abort", scope: !3836, file: !3836, line: 188, type: !4118, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3254, retainedNodes: !223)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !4020}
!4120 = !DILocalVariable(name: "thread", arg: 1, scope: !4117, file: !3836, line: 188, type: !4020)
!4121 = !DILocation(line: 188, column: 43, scope: !4117)
!4122 = !DILocation(line: 197, column: 2, scope: !4117)
!4123 = !DILocation(line: 197, column: 2, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4117, file: !3836, line: 197, column: 2)
!4125 = !{i64 2149608811}
!4126 = !DILocation(line: 198, column: 24, scope: !4117)
!4127 = !DILocation(line: 198, column: 2, scope: !4117)
!4128 = !DILocation(line: 199, column: 1, scope: !4117)
!4129 = distinct !DISubprogram(name: "z_current_get", scope: !3836, file: !3836, line: 173, type: !4018, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3254, retainedNodes: !223)
!4130 = !DILocation(line: 180, column: 2, scope: !4129)
!4131 = !DILocation(line: 180, column: 2, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !3836, line: 180, column: 2)
!4133 = !{i64 2149608743}
!4134 = !DILocation(line: 181, column: 9, scope: !4129)
!4135 = !DILocation(line: 181, column: 2, scope: !4129)
!4136 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3260, file: !3260, line: 1338, type: !4137, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!103, !3795, !102, !256, !4139, !173}
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3719, line: 99, baseType: !4140)
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3719, line: 40, baseType: !4141)
!4141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3260, baseType: !4142)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4143)
!4143 = !{!4144}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4142, file: !3260, baseType: !102, size: 32)
!4145 = !DILocalVariable(name: "out", arg: 1, scope: !4136, file: !3260, line: 1338, type: !3795)
!4146 = !DILocation(line: 1338, column: 34, scope: !4136)
!4147 = !DILocalVariable(name: "ctx", arg: 2, scope: !4136, file: !3260, line: 1338, type: !102)
!4148 = !DILocation(line: 1338, column: 45, scope: !4136)
!4149 = !DILocalVariable(name: "fp", arg: 3, scope: !4136, file: !3260, line: 1338, type: !256)
!4150 = !DILocation(line: 1338, column: 62, scope: !4136)
!4151 = !DILocalVariable(name: "ap", arg: 4, scope: !4136, file: !3260, line: 1339, type: !4139)
!4152 = !DILocation(line: 1339, column: 16, scope: !4136)
!4153 = !DILocalVariable(name: "flags", arg: 5, scope: !4136, file: !3260, line: 1339, type: !173)
!4154 = !DILocation(line: 1339, column: 29, scope: !4136)
!4155 = !DILocalVariable(name: "buf", scope: !4136, file: !3260, line: 1341, type: !4156)
!4156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 176, elements: !4157)
!4157 = !{!4158}
!4158 = !DISubrange(count: 22)
!4159 = !DILocation(line: 1341, column: 7, scope: !4136)
!4160 = !DILocalVariable(name: "count", scope: !4136, file: !3260, line: 1342, type: !217)
!4161 = !DILocation(line: 1342, column: 9, scope: !4136)
!4162 = !DILocalVariable(name: "sint", scope: !4136, file: !3260, line: 1343, type: !3279)
!4163 = !DILocation(line: 1343, column: 18, scope: !4136)
!4164 = !DILocalVariable(name: "tagged_ap", scope: !4136, file: !3260, line: 1345, type: !4165)
!4165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!4166 = !DILocation(line: 1345, column: 13, scope: !4136)
!4167 = !DILocation(line: 1345, column: 26, scope: !4136)
!4168 = !DILocation(line: 1345, column: 32, scope: !4136)
!4169 = !DILocation(line: 1346, column: 11, scope: !4136)
!4170 = !DILocation(line: 1375, column: 2, scope: !4136)
!4171 = !DILocation(line: 1375, column: 10, scope: !4136)
!4172 = !DILocation(line: 1375, column: 9, scope: !4136)
!4173 = !DILocation(line: 1375, column: 13, scope: !4136)
!4174 = !DILocation(line: 1376, column: 8, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1376, column: 7)
!4176 = distinct !DILexicalBlock(scope: !4136, file: !3260, line: 1375, column: 19)
!4177 = !DILocation(line: 1376, column: 7, scope: !4175)
!4178 = !DILocation(line: 1376, column: 11, scope: !4175)
!4179 = !DILocation(line: 1376, column: 7, scope: !4176)
!4180 = !DILocation(line: 1377, column: 4, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4175, file: !3260, line: 1376, column: 19)
!4182 = !DILocalVariable(name: "rc", scope: !4183, file: !3260, line: 1377, type: !103)
!4183 = distinct !DILexicalBlock(scope: !4181, file: !3260, line: 1377, column: 4)
!4184 = !DILocation(line: 1377, column: 4, scope: !4183)
!4185 = !DILocation(line: 1377, column: 4, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4183, file: !3260, line: 1377, column: 4)
!4187 = !DILocation(line: 1377, column: 4, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4186, file: !3260, line: 1377, column: 4)
!4189 = !DILocation(line: 1378, column: 4, scope: !4181)
!4190 = distinct !{!4190, !4170, !4191}
!4191 = !DILocation(line: 1839, column: 2, scope: !4136)
!4192 = !DILocalVariable(name: "state", scope: !4176, file: !3260, line: 1395, type: !4193)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4136, file: !3260, line: 1392, size: 192, elements: !4194)
!4194 = !{!4195, !4205}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4193, file: !3260, line: 1393, baseType: !4196, size: 64)
!4196 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3260, line: 166, size: 64, elements: !4197)
!4197 = !{!4198, !4199, !4200, !4202, !4204}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4196, file: !3260, line: 168, baseType: !3279, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4196, file: !3260, line: 171, baseType: !3282, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4196, file: !3260, line: 174, baseType: !4201, size: 64)
!4201 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4196, file: !3260, line: 177, baseType: !4203, size: 64)
!4203 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4196, file: !3260, line: 180, baseType: !102, size: 32)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4193, file: !3260, line: 1394, baseType: !4206, size: 96, offset: 64)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3260, line: 189, size: 96, elements: !4207)
!4207 = !{!4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4232}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4206, file: !3260, line: 191, baseType: !1035, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4206, file: !3260, line: 194, baseType: !1035, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4206, file: !3260, line: 197, baseType: !1035, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4206, file: !3260, line: 200, baseType: !1035, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4206, file: !3260, line: 203, baseType: !1035, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4206, file: !3260, line: 206, baseType: !1035, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4206, file: !3260, line: 209, baseType: !1035, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4206, file: !3260, line: 212, baseType: !1035, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4206, file: !3260, line: 219, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4206, file: !3260, line: 222, baseType: !1035, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4206, file: !3260, line: 229, baseType: !1035, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4206, file: !3260, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4206, file: !3260, line: 238, baseType: !1035, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4206, file: !3260, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4206, file: !3260, line: 244, baseType: !1035, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4206, file: !3260, line: 247, baseType: !1035, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4206, file: !3260, line: 252, baseType: !1035, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4206, file: !3260, line: 257, baseType: !1035, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4206, file: !3260, line: 260, baseType: !157, size: 8, offset: 24)
!4227 = !DIDerivedType(tag: DW_TAG_member, scope: !4206, file: !3260, line: 262, baseType: !4228, size: 32, offset: 32)
!4228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4206, file: !3260, line: 262, size: 32, elements: !4229)
!4229 = !{!4230, !4231}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4228, file: !3260, line: 267, baseType: !103, size: 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4228, file: !3260, line: 289, baseType: !103, size: 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, scope: !4206, file: !3260, line: 292, baseType: !4233, size: 32, offset: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4206, file: !3260, line: 292, size: 32, elements: !4234)
!4234 = !{!4235, !4236}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4233, file: !3260, line: 297, baseType: !103, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4233, file: !3260, line: 306, baseType: !103, size: 32)
!4237 = !DILocation(line: 1395, column: 5, scope: !4176)
!4238 = !DILocalVariable(name: "conv", scope: !4176, file: !3260, line: 1400, type: !4239)
!4239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4240)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 32)
!4241 = !DILocation(line: 1400, column: 28, scope: !4176)
!4242 = !DILocation(line: 1400, column: 42, scope: !4176)
!4243 = !DILocalVariable(name: "value", scope: !4176, file: !3260, line: 1401, type: !4244)
!4244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4245)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 32)
!4246 = !DILocation(line: 1401, column: 31, scope: !4176)
!4247 = !DILocation(line: 1401, column: 46, scope: !4176)
!4248 = !DILocalVariable(name: "sp", scope: !4176, file: !3260, line: 1402, type: !256)
!4249 = !DILocation(line: 1402, column: 15, scope: !4176)
!4250 = !DILocation(line: 1402, column: 20, scope: !4176)
!4251 = !DILocalVariable(name: "width", scope: !4176, file: !3260, line: 1403, type: !103)
!4252 = !DILocation(line: 1403, column: 7, scope: !4176)
!4253 = !DILocalVariable(name: "precision", scope: !4176, file: !3260, line: 1404, type: !103)
!4254 = !DILocation(line: 1404, column: 7, scope: !4176)
!4255 = !DILocalVariable(name: "bps", scope: !4176, file: !3260, line: 1405, type: !256)
!4256 = !DILocation(line: 1405, column: 15, scope: !4176)
!4257 = !DILocalVariable(name: "bpe", scope: !4176, file: !3260, line: 1406, type: !256)
!4258 = !DILocation(line: 1406, column: 15, scope: !4176)
!4259 = !DILocation(line: 1406, column: 21, scope: !4176)
!4260 = !DILocation(line: 1406, column: 25, scope: !4176)
!4261 = !DILocalVariable(name: "sign", scope: !4176, file: !3260, line: 1407, type: !237)
!4262 = !DILocation(line: 1407, column: 8, scope: !4176)
!4263 = !DILocation(line: 1409, column: 27, scope: !4176)
!4264 = !DILocation(line: 1409, column: 33, scope: !4176)
!4265 = !DILocation(line: 1409, column: 8, scope: !4176)
!4266 = !DILocation(line: 1409, column: 6, scope: !4176)
!4267 = !DILocation(line: 1414, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1414, column: 7)
!4269 = !DILocation(line: 1414, column: 13, scope: !4268)
!4270 = !DILocation(line: 1414, column: 7, scope: !4176)
!4271 = !DILocation(line: 1415, column: 12, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4268, file: !3260, line: 1414, column: 25)
!4273 = !DILocation(line: 1415, column: 10, scope: !4272)
!4274 = !DILocation(line: 1417, column: 8, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4272, file: !3260, line: 1417, column: 8)
!4276 = !DILocation(line: 1417, column: 14, scope: !4275)
!4277 = !DILocation(line: 1417, column: 8, scope: !4272)
!4278 = !DILocation(line: 1418, column: 5, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4275, file: !3260, line: 1417, column: 19)
!4280 = !DILocation(line: 1418, column: 11, scope: !4279)
!4281 = !DILocation(line: 1418, column: 21, scope: !4279)
!4282 = !DILocation(line: 1419, column: 14, scope: !4279)
!4283 = !DILocation(line: 1419, column: 13, scope: !4279)
!4284 = !DILocation(line: 1419, column: 11, scope: !4279)
!4285 = !DILocation(line: 1420, column: 4, scope: !4279)
!4286 = !DILocation(line: 1421, column: 3, scope: !4272)
!4287 = !DILocation(line: 1421, column: 14, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4268, file: !3260, line: 1421, column: 14)
!4289 = !DILocation(line: 1421, column: 20, scope: !4288)
!4290 = !DILocation(line: 1421, column: 14, scope: !4268)
!4291 = !DILocation(line: 1422, column: 12, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !3260, line: 1421, column: 35)
!4293 = !DILocation(line: 1422, column: 18, scope: !4292)
!4294 = !DILocation(line: 1422, column: 10, scope: !4292)
!4295 = !DILocation(line: 1423, column: 3, scope: !4292)
!4296 = !DILocation(line: 1431, column: 7, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1431, column: 7)
!4298 = !DILocation(line: 1431, column: 13, scope: !4297)
!4299 = !DILocation(line: 1431, column: 7, scope: !4176)
!4300 = !DILocalVariable(name: "arg", scope: !4301, file: !3260, line: 1432, type: !103)
!4301 = distinct !DILexicalBlock(scope: !4297, file: !3260, line: 1431, column: 24)
!4302 = !DILocation(line: 1432, column: 8, scope: !4301)
!4303 = !DILocation(line: 1432, column: 14, scope: !4301)
!4304 = !DILocation(line: 1434, column: 8, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4301, file: !3260, line: 1434, column: 8)
!4306 = !DILocation(line: 1434, column: 12, scope: !4305)
!4307 = !DILocation(line: 1434, column: 8, scope: !4301)
!4308 = !DILocation(line: 1435, column: 5, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !3260, line: 1434, column: 17)
!4310 = !DILocation(line: 1435, column: 11, scope: !4309)
!4311 = !DILocation(line: 1435, column: 24, scope: !4309)
!4312 = !DILocation(line: 1436, column: 4, scope: !4309)
!4313 = !DILocation(line: 1437, column: 17, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4305, file: !3260, line: 1436, column: 11)
!4315 = !DILocation(line: 1437, column: 15, scope: !4314)
!4316 = !DILocation(line: 1439, column: 3, scope: !4301)
!4317 = !DILocation(line: 1439, column: 14, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4297, file: !3260, line: 1439, column: 14)
!4319 = !DILocation(line: 1439, column: 20, scope: !4318)
!4320 = !DILocation(line: 1439, column: 14, scope: !4297)
!4321 = !DILocation(line: 1440, column: 16, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !3260, line: 1439, column: 34)
!4323 = !DILocation(line: 1440, column: 22, scope: !4322)
!4324 = !DILocation(line: 1440, column: 14, scope: !4322)
!4325 = !DILocation(line: 1441, column: 3, scope: !4322)
!4326 = !DILocation(line: 1448, column: 3, scope: !4176)
!4327 = !DILocation(line: 1448, column: 9, scope: !4176)
!4328 = !DILocation(line: 1448, column: 20, scope: !4176)
!4329 = !DILocation(line: 1449, column: 3, scope: !4176)
!4330 = !DILocation(line: 1449, column: 9, scope: !4176)
!4331 = !DILocation(line: 1449, column: 22, scope: !4176)
!4332 = !DILocalVariable(name: "specifier_cat", scope: !4176, file: !3260, line: 1468, type: !3259)
!4333 = !DILocation(line: 1468, column: 27, scope: !4176)
!4334 = !DILocation(line: 1469, column: 31, scope: !4176)
!4335 = !DILocation(line: 1469, column: 37, scope: !4176)
!4336 = !DILocalVariable(name: "length_mod", scope: !4176, file: !3260, line: 1470, type: !3267)
!4337 = !DILocation(line: 1470, column: 24, scope: !4176)
!4338 = !DILocation(line: 1471, column: 28, scope: !4176)
!4339 = !DILocation(line: 1471, column: 34, scope: !4176)
!4340 = !DILocation(line: 1478, column: 7, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1478, column: 7)
!4342 = !DILocation(line: 1478, column: 21, scope: !4341)
!4343 = !DILocation(line: 1478, column: 7, scope: !4176)
!4344 = !DILocation(line: 1479, column: 12, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4341, file: !3260, line: 1478, column: 40)
!4346 = !DILocation(line: 1479, column: 4, scope: !4345)
!4347 = !DILocation(line: 1479, column: 24, scope: !4345)
!4348 = !DILocation(line: 1484, column: 19, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !3260, line: 1479, column: 24)
!4350 = !DILocation(line: 1484, column: 5, scope: !4349)
!4351 = !DILocation(line: 1484, column: 12, scope: !4349)
!4352 = !DILocation(line: 1484, column: 17, scope: !4349)
!4353 = !DILocation(line: 1485, column: 5, scope: !4349)
!4354 = !DILocation(line: 1492, column: 20, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !3260, line: 1491, column: 12)
!4356 = distinct !DILexicalBlock(scope: !4349, file: !3260, line: 1487, column: 9)
!4357 = !DILocation(line: 1492, column: 6, scope: !4355)
!4358 = !DILocation(line: 1492, column: 13, scope: !4355)
!4359 = !DILocation(line: 1492, column: 18, scope: !4355)
!4360 = !DILocation(line: 1494, column: 5, scope: !4349)
!4361 = !DILocation(line: 1497, column: 23, scope: !4349)
!4362 = !DILocation(line: 1496, column: 5, scope: !4349)
!4363 = !DILocation(line: 1496, column: 12, scope: !4349)
!4364 = !DILocation(line: 1496, column: 17, scope: !4349)
!4365 = !DILocation(line: 1498, column: 5, scope: !4349)
!4366 = !DILocation(line: 1501, column: 23, scope: !4349)
!4367 = !DILocation(line: 1500, column: 5, scope: !4349)
!4368 = !DILocation(line: 1500, column: 12, scope: !4349)
!4369 = !DILocation(line: 1500, column: 17, scope: !4349)
!4370 = !DILocation(line: 1502, column: 5, scope: !4349)
!4371 = !DILocation(line: 1513, column: 23, scope: !4349)
!4372 = !DILocation(line: 1513, column: 6, scope: !4349)
!4373 = !DILocation(line: 1512, column: 5, scope: !4349)
!4374 = !DILocation(line: 1512, column: 12, scope: !4349)
!4375 = !DILocation(line: 1512, column: 17, scope: !4349)
!4376 = !DILocation(line: 1514, column: 5, scope: !4349)
!4377 = !DILocation(line: 1516, column: 8, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4345, file: !3260, line: 1516, column: 8)
!4379 = !DILocation(line: 1516, column: 19, scope: !4378)
!4380 = !DILocation(line: 1516, column: 8, scope: !4345)
!4381 = !DILocation(line: 1517, column: 32, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4378, file: !3260, line: 1516, column: 33)
!4383 = !DILocation(line: 1517, column: 39, scope: !4382)
!4384 = !DILocation(line: 1517, column: 19, scope: !4382)
!4385 = !DILocation(line: 1517, column: 5, scope: !4382)
!4386 = !DILocation(line: 1517, column: 12, scope: !4382)
!4387 = !DILocation(line: 1517, column: 17, scope: !4382)
!4388 = !DILocation(line: 1518, column: 4, scope: !4382)
!4389 = !DILocation(line: 1518, column: 15, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4378, file: !3260, line: 1518, column: 15)
!4391 = !DILocation(line: 1518, column: 26, scope: !4390)
!4392 = !DILocation(line: 1518, column: 15, scope: !4378)
!4393 = !DILocation(line: 1519, column: 26, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4390, file: !3260, line: 1518, column: 39)
!4395 = !DILocation(line: 1519, column: 33, scope: !4394)
!4396 = !DILocation(line: 1519, column: 19, scope: !4394)
!4397 = !DILocation(line: 1519, column: 5, scope: !4394)
!4398 = !DILocation(line: 1519, column: 12, scope: !4394)
!4399 = !DILocation(line: 1519, column: 17, scope: !4394)
!4400 = !DILocation(line: 1520, column: 4, scope: !4394)
!4401 = !DILocation(line: 1521, column: 3, scope: !4345)
!4402 = !DILocation(line: 1521, column: 14, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4341, file: !3260, line: 1521, column: 14)
!4404 = !DILocation(line: 1521, column: 28, scope: !4403)
!4405 = !DILocation(line: 1521, column: 14, scope: !4341)
!4406 = !DILocation(line: 1522, column: 12, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4403, file: !3260, line: 1521, column: 47)
!4408 = !DILocation(line: 1522, column: 4, scope: !4407)
!4409 = !DILocation(line: 1522, column: 24, scope: !4407)
!4410 = !DILocation(line: 1527, column: 19, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4407, file: !3260, line: 1522, column: 24)
!4412 = !DILocation(line: 1527, column: 5, scope: !4411)
!4413 = !DILocation(line: 1527, column: 12, scope: !4411)
!4414 = !DILocation(line: 1527, column: 17, scope: !4411)
!4415 = !DILocation(line: 1528, column: 5, scope: !4411)
!4416 = !DILocation(line: 1531, column: 13, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4411, file: !3260, line: 1530, column: 9)
!4418 = !DILocation(line: 1531, column: 19, scope: !4417)
!4419 = !DILocation(line: 1531, column: 29, scope: !4417)
!4420 = !DILocation(line: 1530, column: 9, scope: !4411)
!4421 = !DILocation(line: 1532, column: 29, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4417, file: !3260, line: 1531, column: 38)
!4423 = !DILocation(line: 1532, column: 20, scope: !4422)
!4424 = !DILocation(line: 1532, column: 6, scope: !4422)
!4425 = !DILocation(line: 1532, column: 13, scope: !4422)
!4426 = !DILocation(line: 1532, column: 18, scope: !4422)
!4427 = !DILocation(line: 1534, column: 5, scope: !4422)
!4428 = !DILocation(line: 1535, column: 20, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4417, file: !3260, line: 1534, column: 12)
!4430 = !DILocation(line: 1535, column: 6, scope: !4429)
!4431 = !DILocation(line: 1535, column: 13, scope: !4429)
!4432 = !DILocation(line: 1535, column: 18, scope: !4429)
!4433 = !DILocation(line: 1537, column: 5, scope: !4411)
!4434 = !DILocation(line: 1540, column: 23, scope: !4411)
!4435 = !DILocation(line: 1539, column: 5, scope: !4411)
!4436 = !DILocation(line: 1539, column: 12, scope: !4411)
!4437 = !DILocation(line: 1539, column: 17, scope: !4411)
!4438 = !DILocation(line: 1542, column: 5, scope: !4411)
!4439 = !DILocation(line: 1545, column: 23, scope: !4411)
!4440 = !DILocation(line: 1544, column: 5, scope: !4411)
!4441 = !DILocation(line: 1544, column: 12, scope: !4411)
!4442 = !DILocation(line: 1544, column: 17, scope: !4411)
!4443 = !DILocation(line: 1547, column: 5, scope: !4411)
!4444 = !DILocation(line: 1551, column: 23, scope: !4411)
!4445 = !DILocation(line: 1551, column: 6, scope: !4411)
!4446 = !DILocation(line: 1550, column: 5, scope: !4411)
!4447 = !DILocation(line: 1550, column: 12, scope: !4411)
!4448 = !DILocation(line: 1550, column: 17, scope: !4411)
!4449 = !DILocation(line: 1552, column: 5, scope: !4411)
!4450 = !DILocation(line: 1554, column: 8, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4407, file: !3260, line: 1554, column: 8)
!4452 = !DILocation(line: 1554, column: 19, scope: !4451)
!4453 = !DILocation(line: 1554, column: 8, scope: !4407)
!4454 = !DILocation(line: 1555, column: 34, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4451, file: !3260, line: 1554, column: 33)
!4456 = !DILocation(line: 1555, column: 41, scope: !4455)
!4457 = !DILocation(line: 1555, column: 19, scope: !4455)
!4458 = !DILocation(line: 1555, column: 5, scope: !4455)
!4459 = !DILocation(line: 1555, column: 12, scope: !4455)
!4460 = !DILocation(line: 1555, column: 17, scope: !4455)
!4461 = !DILocation(line: 1556, column: 4, scope: !4455)
!4462 = !DILocation(line: 1556, column: 15, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4451, file: !3260, line: 1556, column: 15)
!4464 = !DILocation(line: 1556, column: 26, scope: !4463)
!4465 = !DILocation(line: 1556, column: 15, scope: !4451)
!4466 = !DILocation(line: 1557, column: 35, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !3260, line: 1556, column: 39)
!4468 = !DILocation(line: 1557, column: 42, scope: !4467)
!4469 = !DILocation(line: 1557, column: 19, scope: !4467)
!4470 = !DILocation(line: 1557, column: 5, scope: !4467)
!4471 = !DILocation(line: 1557, column: 12, scope: !4467)
!4472 = !DILocation(line: 1557, column: 17, scope: !4467)
!4473 = !DILocation(line: 1558, column: 4, scope: !4467)
!4474 = !DILocation(line: 1559, column: 3, scope: !4407)
!4475 = !DILocation(line: 1559, column: 14, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4403, file: !3260, line: 1559, column: 14)
!4477 = !DILocation(line: 1559, column: 28, scope: !4476)
!4478 = !DILocation(line: 1559, column: 14, scope: !4403)
!4479 = !DILocation(line: 1560, column: 8, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !3260, line: 1560, column: 8)
!4481 = distinct !DILexicalBlock(scope: !4476, file: !3260, line: 1559, column: 45)
!4482 = !DILocation(line: 1560, column: 19, scope: !4480)
!4483 = !DILocation(line: 1560, column: 8, scope: !4481)
!4484 = !DILocation(line: 1561, column: 19, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4480, file: !3260, line: 1560, column: 38)
!4486 = !DILocation(line: 1561, column: 5, scope: !4485)
!4487 = !DILocation(line: 1561, column: 12, scope: !4485)
!4488 = !DILocation(line: 1561, column: 17, scope: !4485)
!4489 = !DILocation(line: 1562, column: 4, scope: !4485)
!4490 = !DILocation(line: 1563, column: 18, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4480, file: !3260, line: 1562, column: 11)
!4492 = !DILocation(line: 1563, column: 5, scope: !4491)
!4493 = !DILocation(line: 1563, column: 12, scope: !4491)
!4494 = !DILocation(line: 1563, column: 16, scope: !4491)
!4495 = !DILocation(line: 1565, column: 3, scope: !4481)
!4496 = !DILocation(line: 1565, column: 14, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4476, file: !3260, line: 1565, column: 14)
!4498 = !DILocation(line: 1565, column: 28, scope: !4497)
!4499 = !DILocation(line: 1565, column: 14, scope: !4476)
!4500 = !DILocation(line: 1566, column: 17, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4497, file: !3260, line: 1565, column: 46)
!4502 = !DILocation(line: 1566, column: 4, scope: !4501)
!4503 = !DILocation(line: 1566, column: 11, scope: !4501)
!4504 = !DILocation(line: 1566, column: 15, scope: !4501)
!4505 = !DILocation(line: 1567, column: 3, scope: !4501)
!4506 = !DILocation(line: 1574, column: 7, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1574, column: 7)
!4508 = !DILocation(line: 1574, column: 13, scope: !4507)
!4509 = !DILocation(line: 1574, column: 21, scope: !4507)
!4510 = !DILocation(line: 1574, column: 24, scope: !4507)
!4511 = !DILocation(line: 1574, column: 30, scope: !4507)
!4512 = !DILocation(line: 1574, column: 7, scope: !4176)
!4513 = !DILocation(line: 1575, column: 4, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4507, file: !3260, line: 1574, column: 43)
!4515 = !DILocalVariable(name: "rc", scope: !4516, file: !3260, line: 1575, type: !103)
!4516 = distinct !DILexicalBlock(scope: !4514, file: !3260, line: 1575, column: 4)
!4517 = !DILocation(line: 1575, column: 4, scope: !4516)
!4518 = !DILocation(line: 1575, column: 4, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !3260, line: 1575, column: 4)
!4520 = !DILocation(line: 1575, column: 4, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4519, file: !3260, line: 1575, column: 4)
!4522 = !DILocation(line: 1576, column: 4, scope: !4514)
!4523 = !DILocation(line: 1582, column: 11, scope: !4176)
!4524 = !DILocation(line: 1582, column: 17, scope: !4176)
!4525 = !DILocation(line: 1582, column: 3, scope: !4176)
!4526 = !DILocation(line: 1584, column: 4, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1582, column: 28)
!4528 = !DILocalVariable(name: "rc", scope: !4529, file: !3260, line: 1584, type: !103)
!4529 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1584, column: 4)
!4530 = !DILocation(line: 1584, column: 4, scope: !4529)
!4531 = !DILocation(line: 1584, column: 4, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !3260, line: 1584, column: 4)
!4533 = !DILocation(line: 1584, column: 4, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !3260, line: 1584, column: 4)
!4535 = !DILocation(line: 1585, column: 4, scope: !4527)
!4536 = !DILocation(line: 1587, column: 24, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1586, column: 13)
!4538 = !DILocation(line: 1587, column: 31, scope: !4537)
!4539 = !DILocation(line: 1587, column: 8, scope: !4537)
!4540 = !DILocalVariable(name: "len", scope: !4537, file: !3260, line: 1589, type: !217)
!4541 = !DILocation(line: 1589, column: 11, scope: !4537)
!4542 = !DILocation(line: 1591, column: 8, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4537, file: !3260, line: 1591, column: 8)
!4544 = !DILocation(line: 1591, column: 18, scope: !4543)
!4545 = !DILocation(line: 1591, column: 8, scope: !4537)
!4546 = !DILocation(line: 1592, column: 19, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4543, file: !3260, line: 1591, column: 24)
!4548 = !DILocation(line: 1592, column: 24, scope: !4547)
!4549 = !DILocation(line: 1592, column: 11, scope: !4547)
!4550 = !DILocation(line: 1592, column: 9, scope: !4547)
!4551 = !DILocation(line: 1593, column: 4, scope: !4547)
!4552 = !DILocation(line: 1594, column: 18, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4543, file: !3260, line: 1593, column: 11)
!4554 = !DILocation(line: 1594, column: 11, scope: !4553)
!4555 = !DILocation(line: 1594, column: 9, scope: !4553)
!4556 = !DILocation(line: 1597, column: 10, scope: !4537)
!4557 = !DILocation(line: 1597, column: 16, scope: !4537)
!4558 = !DILocation(line: 1597, column: 14, scope: !4537)
!4559 = !DILocation(line: 1597, column: 8, scope: !4537)
!4560 = !DILocation(line: 1598, column: 14, scope: !4537)
!4561 = !DILocation(line: 1600, column: 4, scope: !4537)
!4562 = !DILocation(line: 1603, column: 10, scope: !4527)
!4563 = !DILocation(line: 1603, column: 8, scope: !4527)
!4564 = !DILocation(line: 1604, column: 44, scope: !4527)
!4565 = !DILocation(line: 1604, column: 51, scope: !4527)
!4566 = !DILocation(line: 1604, column: 13, scope: !4527)
!4567 = !DILocation(line: 1604, column: 4, scope: !4527)
!4568 = !DILocation(line: 1604, column: 11, scope: !4527)
!4569 = !DILocation(line: 1605, column: 10, scope: !4527)
!4570 = !DILocation(line: 1605, column: 14, scope: !4527)
!4571 = !DILocation(line: 1605, column: 8, scope: !4527)
!4572 = !DILocation(line: 1606, column: 4, scope: !4527)
!4573 = !DILocation(line: 1609, column: 8, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1609, column: 8)
!4575 = !DILocation(line: 1609, column: 14, scope: !4574)
!4576 = !DILocation(line: 1609, column: 8, scope: !4527)
!4577 = !DILocation(line: 1610, column: 10, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !3260, line: 1609, column: 25)
!4579 = !DILocation(line: 1611, column: 4, scope: !4578)
!4580 = !DILocation(line: 1611, column: 15, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4574, file: !3260, line: 1611, column: 15)
!4582 = !DILocation(line: 1611, column: 21, scope: !4581)
!4583 = !DILocation(line: 1611, column: 15, scope: !4574)
!4584 = !DILocation(line: 1612, column: 10, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3260, line: 1611, column: 33)
!4586 = !DILocation(line: 1613, column: 4, scope: !4585)
!4587 = !DILocation(line: 1619, column: 11, scope: !4527)
!4588 = !DILocation(line: 1619, column: 18, scope: !4527)
!4589 = !DILocation(line: 1619, column: 9, scope: !4527)
!4590 = !DILocation(line: 1620, column: 8, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1620, column: 8)
!4592 = !DILocation(line: 1620, column: 13, scope: !4591)
!4593 = !DILocation(line: 1620, column: 8, scope: !4527)
!4594 = !DILocation(line: 1621, column: 10, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !3260, line: 1620, column: 18)
!4596 = !DILocation(line: 1622, column: 37, scope: !4595)
!4597 = !DILocation(line: 1622, column: 36, scope: !4595)
!4598 = !DILocation(line: 1622, column: 5, scope: !4595)
!4599 = !DILocation(line: 1622, column: 12, scope: !4595)
!4600 = !DILocation(line: 1622, column: 17, scope: !4595)
!4601 = !DILocation(line: 1623, column: 4, scope: !4595)
!4602 = !DILocation(line: 1624, column: 36, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4591, file: !3260, line: 1623, column: 11)
!4604 = !DILocation(line: 1624, column: 5, scope: !4603)
!4605 = !DILocation(line: 1624, column: 12, scope: !4603)
!4606 = !DILocation(line: 1624, column: 17, scope: !4603)
!4607 = !DILocation(line: 1620, column: 15, scope: !4591)
!4608 = !DILocation(line: 1632, column: 22, scope: !4527)
!4609 = !DILocation(line: 1632, column: 29, scope: !4527)
!4610 = !DILocation(line: 1632, column: 35, scope: !4527)
!4611 = !DILocation(line: 1632, column: 41, scope: !4527)
!4612 = !DILocation(line: 1632, column: 46, scope: !4527)
!4613 = !DILocation(line: 1632, column: 10, scope: !4527)
!4614 = !DILocation(line: 1632, column: 8, scope: !4527)
!4615 = !DILocation(line: 1632, column: 4, scope: !4527)
!4616 = !DILabel(scope: !4527, name: "prec_int_pad0", file: !3260, line: 1634)
!4617 = !DILocation(line: 1634, column: 3, scope: !4527)
!4618 = !DILocation(line: 1640, column: 8, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1640, column: 8)
!4620 = !DILocation(line: 1640, column: 18, scope: !4619)
!4621 = !DILocation(line: 1640, column: 8, scope: !4527)
!4622 = !DILocalVariable(name: "len", scope: !4623, file: !3260, line: 1641, type: !217)
!4623 = distinct !DILexicalBlock(scope: !4619, file: !3260, line: 1640, column: 24)
!4624 = !DILocation(line: 1641, column: 12, scope: !4623)
!4625 = !DILocation(line: 1641, column: 18, scope: !4623)
!4626 = !DILocation(line: 1641, column: 24, scope: !4623)
!4627 = !DILocation(line: 1641, column: 22, scope: !4623)
!4628 = !DILocation(line: 1646, column: 5, scope: !4623)
!4629 = !DILocation(line: 1646, column: 11, scope: !4623)
!4630 = !DILocation(line: 1646, column: 21, scope: !4623)
!4631 = !DILocation(line: 1649, column: 9, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4623, file: !3260, line: 1649, column: 9)
!4633 = !DILocation(line: 1649, column: 23, scope: !4632)
!4634 = !DILocation(line: 1649, column: 13, scope: !4632)
!4635 = !DILocation(line: 1649, column: 9, scope: !4623)
!4636 = !DILocation(line: 1650, column: 25, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !3260, line: 1649, column: 34)
!4638 = !DILocation(line: 1650, column: 42, scope: !4637)
!4639 = !DILocation(line: 1650, column: 35, scope: !4637)
!4640 = !DILocation(line: 1650, column: 6, scope: !4637)
!4641 = !DILocation(line: 1650, column: 12, scope: !4637)
!4642 = !DILocation(line: 1650, column: 23, scope: !4637)
!4643 = !DILocation(line: 1651, column: 5, scope: !4637)
!4644 = !DILocation(line: 1652, column: 4, scope: !4623)
!4645 = !DILocation(line: 1654, column: 4, scope: !4527)
!4646 = !DILocation(line: 1660, column: 8, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1660, column: 8)
!4648 = !DILocation(line: 1660, column: 15, scope: !4647)
!4649 = !DILocation(line: 1660, column: 19, scope: !4647)
!4650 = !DILocation(line: 1660, column: 8, scope: !4527)
!4651 = !DILocation(line: 1661, column: 34, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !3260, line: 1660, column: 28)
!4653 = !DILocation(line: 1661, column: 41, scope: !4652)
!4654 = !DILocation(line: 1661, column: 23, scope: !4652)
!4655 = !DILocation(line: 1661, column: 46, scope: !4652)
!4656 = !DILocation(line: 1662, column: 9, scope: !4652)
!4657 = !DILocation(line: 1662, column: 14, scope: !4652)
!4658 = !DILocation(line: 1661, column: 11, scope: !4652)
!4659 = !DILocation(line: 1661, column: 9, scope: !4652)
!4660 = !DILocation(line: 1665, column: 5, scope: !4652)
!4661 = !DILocation(line: 1665, column: 11, scope: !4652)
!4662 = !DILocation(line: 1665, column: 22, scope: !4652)
!4663 = !DILocation(line: 1666, column: 5, scope: !4652)
!4664 = !DILocation(line: 1666, column: 11, scope: !4652)
!4665 = !DILocation(line: 1666, column: 21, scope: !4652)
!4666 = !DILocation(line: 1668, column: 5, scope: !4652)
!4667 = !DILocation(line: 1671, column: 8, scope: !4527)
!4668 = !DILocation(line: 1672, column: 10, scope: !4527)
!4669 = !DILocation(line: 1672, column: 14, scope: !4527)
!4670 = !DILocation(line: 1672, column: 8, scope: !4527)
!4671 = !DILocation(line: 1674, column: 4, scope: !4527)
!4672 = !DILocation(line: 1677, column: 17, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !3260, line: 1676, column: 49)
!4674 = distinct !DILexicalBlock(scope: !4527, file: !3260, line: 1676, column: 8)
!4675 = !DILocation(line: 1677, column: 23, scope: !4673)
!4676 = !DILocation(line: 1677, column: 30, scope: !4673)
!4677 = !DILocation(line: 1677, column: 35, scope: !4673)
!4678 = !DILocation(line: 1677, column: 5, scope: !4673)
!4679 = !DILocation(line: 1680, column: 4, scope: !4527)
!4680 = !DILocation(line: 1687, column: 4, scope: !4527)
!4681 = !DILocation(line: 1693, column: 4, scope: !4527)
!4682 = !DILocation(line: 1699, column: 7, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1699, column: 7)
!4684 = !DILocation(line: 1699, column: 11, scope: !4683)
!4685 = !DILocation(line: 1699, column: 7, scope: !4176)
!4686 = !DILocation(line: 1700, column: 4, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !3260, line: 1699, column: 20)
!4688 = !DILocalVariable(name: "nj_len", scope: !4176, file: !3260, line: 1722, type: !217)
!4689 = !DILocation(line: 1722, column: 10, scope: !4176)
!4690 = !DILocation(line: 1722, column: 20, scope: !4176)
!4691 = !DILocation(line: 1722, column: 26, scope: !4176)
!4692 = !DILocation(line: 1722, column: 24, scope: !4176)
!4693 = !DILocalVariable(name: "pad_len", scope: !4176, file: !3260, line: 1723, type: !103)
!4694 = !DILocation(line: 1723, column: 7, scope: !4176)
!4695 = !DILocation(line: 1725, column: 7, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1725, column: 7)
!4697 = !DILocation(line: 1725, column: 12, scope: !4696)
!4698 = !DILocation(line: 1725, column: 7, scope: !4176)
!4699 = !DILocation(line: 1726, column: 11, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4696, file: !3260, line: 1725, column: 18)
!4701 = !DILocation(line: 1727, column: 3, scope: !4700)
!4702 = !DILocation(line: 1729, column: 7, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1729, column: 7)
!4704 = !DILocation(line: 1729, column: 13, scope: !4703)
!4705 = !DILocation(line: 1729, column: 7, scope: !4176)
!4706 = !DILocation(line: 1730, column: 11, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4703, file: !3260, line: 1729, column: 25)
!4708 = !DILocation(line: 1731, column: 3, scope: !4707)
!4709 = !DILocation(line: 1731, column: 14, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4703, file: !3260, line: 1731, column: 14)
!4711 = !DILocation(line: 1731, column: 20, scope: !4710)
!4712 = !DILocation(line: 1731, column: 14, scope: !4703)
!4713 = !DILocation(line: 1732, column: 11, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4710, file: !3260, line: 1731, column: 31)
!4715 = !DILocation(line: 1733, column: 3, scope: !4714)
!4716 = !DILocation(line: 1735, column: 13, scope: !4176)
!4717 = !DILocation(line: 1735, column: 19, scope: !4176)
!4718 = !DILocation(line: 1735, column: 10, scope: !4176)
!4719 = !DILocation(line: 1736, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1736, column: 7)
!4721 = !DILocation(line: 1736, column: 13, scope: !4720)
!4722 = !DILocation(line: 1736, column: 7, scope: !4176)
!4723 = !DILocation(line: 1737, column: 14, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4720, file: !3260, line: 1736, column: 21)
!4725 = !DILocation(line: 1737, column: 20, scope: !4724)
!4726 = !DILocation(line: 1737, column: 11, scope: !4724)
!4727 = !DILocation(line: 1738, column: 3, scope: !4724)
!4728 = !DILocation(line: 1747, column: 7, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1747, column: 7)
!4730 = !DILocation(line: 1747, column: 13, scope: !4729)
!4731 = !DILocation(line: 1747, column: 7, scope: !4176)
!4732 = !DILocation(line: 1748, column: 18, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !3260, line: 1747, column: 18)
!4734 = !DILocation(line: 1748, column: 10, scope: !4733)
!4735 = !DILocation(line: 1750, column: 9, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !3260, line: 1750, column: 8)
!4737 = !DILocation(line: 1750, column: 15, scope: !4736)
!4738 = !DILocation(line: 1750, column: 8, scope: !4733)
!4739 = !DILocalVariable(name: "pad", scope: !4740, file: !3260, line: 1751, type: !237)
!4740 = distinct !DILexicalBlock(scope: !4736, file: !3260, line: 1750, column: 26)
!4741 = !DILocation(line: 1751, column: 10, scope: !4740)
!4742 = !DILocation(line: 1756, column: 9, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4740, file: !3260, line: 1756, column: 9)
!4744 = !DILocation(line: 1756, column: 15, scope: !4743)
!4745 = !DILocation(line: 1756, column: 9, scope: !4740)
!4746 = !DILocation(line: 1757, column: 10, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !3260, line: 1757, column: 10)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !3260, line: 1756, column: 26)
!4749 = !DILocation(line: 1757, column: 15, scope: !4747)
!4750 = !DILocation(line: 1757, column: 10, scope: !4748)
!4751 = !DILocation(line: 1758, column: 7, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4747, file: !3260, line: 1757, column: 21)
!4753 = !DILocalVariable(name: "rc", scope: !4754, file: !3260, line: 1758, type: !103)
!4754 = distinct !DILexicalBlock(scope: !4752, file: !3260, line: 1758, column: 7)
!4755 = !DILocation(line: 1758, column: 7, scope: !4754)
!4756 = !DILocation(line: 1758, column: 7, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3260, line: 1758, column: 7)
!4758 = !DILocation(line: 1758, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4757, file: !3260, line: 1758, column: 7)
!4760 = !DILocation(line: 1759, column: 12, scope: !4752)
!4761 = !DILocation(line: 1760, column: 6, scope: !4752)
!4762 = !DILocation(line: 1761, column: 10, scope: !4748)
!4763 = !DILocation(line: 1762, column: 5, scope: !4748)
!4764 = !DILocation(line: 1764, column: 5, scope: !4740)
!4765 = !DILocation(line: 1764, column: 17, scope: !4740)
!4766 = !DILocation(line: 1764, column: 20, scope: !4740)
!4767 = !DILocation(line: 1765, column: 6, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4740, file: !3260, line: 1764, column: 25)
!4769 = !DILocalVariable(name: "rc", scope: !4770, file: !3260, line: 1765, type: !103)
!4770 = distinct !DILexicalBlock(scope: !4768, file: !3260, line: 1765, column: 6)
!4771 = !DILocation(line: 1765, column: 6, scope: !4770)
!4772 = !DILocation(line: 1765, column: 6, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !3260, line: 1765, column: 6)
!4774 = !DILocation(line: 1765, column: 6, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4773, file: !3260, line: 1765, column: 6)
!4776 = distinct !{!4776, !4764, !4777}
!4777 = !DILocation(line: 1766, column: 5, scope: !4740)
!4778 = !DILocation(line: 1767, column: 4, scope: !4740)
!4779 = !DILocation(line: 1768, column: 3, scope: !4733)
!4780 = !DILocation(line: 1773, column: 7, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1773, column: 7)
!4782 = !DILocation(line: 1773, column: 12, scope: !4781)
!4783 = !DILocation(line: 1773, column: 7, scope: !4176)
!4784 = !DILocation(line: 1774, column: 4, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4781, file: !3260, line: 1773, column: 18)
!4786 = !DILocalVariable(name: "rc", scope: !4787, file: !3260, line: 1774, type: !103)
!4787 = distinct !DILexicalBlock(scope: !4785, file: !3260, line: 1774, column: 4)
!4788 = !DILocation(line: 1774, column: 4, scope: !4787)
!4789 = !DILocation(line: 1774, column: 4, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !3260, line: 1774, column: 4)
!4791 = !DILocation(line: 1774, column: 4, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4790, file: !3260, line: 1774, column: 4)
!4793 = !DILocation(line: 1775, column: 3, scope: !4785)
!4794 = !DILocation(line: 1818, column: 8, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !3260, line: 1818, column: 8)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !3260, line: 1817, column: 10)
!4797 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1777, column: 7)
!4798 = !DILocation(line: 1818, column: 14, scope: !4795)
!4799 = !DILocation(line: 1818, column: 27, scope: !4795)
!4800 = !DILocation(line: 1818, column: 33, scope: !4795)
!4801 = !DILocation(line: 1818, column: 25, scope: !4795)
!4802 = !DILocation(line: 1818, column: 8, scope: !4796)
!4803 = !DILocation(line: 1819, column: 5, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4795, file: !3260, line: 1818, column: 44)
!4805 = !DILocalVariable(name: "rc", scope: !4806, file: !3260, line: 1819, type: !103)
!4806 = distinct !DILexicalBlock(scope: !4804, file: !3260, line: 1819, column: 5)
!4807 = !DILocation(line: 1819, column: 5, scope: !4806)
!4808 = !DILocation(line: 1819, column: 5, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !3260, line: 1819, column: 5)
!4810 = !DILocation(line: 1819, column: 5, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4809, file: !3260, line: 1819, column: 5)
!4812 = !DILocation(line: 1820, column: 4, scope: !4804)
!4813 = !DILocation(line: 1822, column: 8, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4796, file: !3260, line: 1822, column: 8)
!4815 = !DILocation(line: 1822, column: 14, scope: !4814)
!4816 = !DILocation(line: 1822, column: 8, scope: !4796)
!4817 = !DILocation(line: 1823, column: 5, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4814, file: !3260, line: 1822, column: 26)
!4819 = !DILocalVariable(name: "rc", scope: !4820, file: !3260, line: 1823, type: !103)
!4820 = distinct !DILexicalBlock(scope: !4818, file: !3260, line: 1823, column: 5)
!4821 = !DILocation(line: 1823, column: 5, scope: !4820)
!4822 = !DILocation(line: 1823, column: 5, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3260, line: 1823, column: 5)
!4824 = !DILocation(line: 1823, column: 5, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4823, file: !3260, line: 1823, column: 5)
!4826 = !DILocation(line: 1824, column: 4, scope: !4818)
!4827 = !DILocation(line: 1826, column: 14, scope: !4796)
!4828 = !DILocation(line: 1826, column: 20, scope: !4796)
!4829 = !DILocation(line: 1826, column: 12, scope: !4796)
!4830 = !DILocation(line: 1827, column: 4, scope: !4796)
!4831 = !DILocation(line: 1827, column: 18, scope: !4796)
!4832 = !DILocation(line: 1827, column: 21, scope: !4796)
!4833 = !DILocation(line: 1828, column: 5, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4796, file: !3260, line: 1827, column: 26)
!4835 = !DILocalVariable(name: "rc", scope: !4836, file: !3260, line: 1828, type: !103)
!4836 = distinct !DILexicalBlock(scope: !4834, file: !3260, line: 1828, column: 5)
!4837 = !DILocation(line: 1828, column: 5, scope: !4836)
!4838 = !DILocation(line: 1828, column: 5, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4836, file: !3260, line: 1828, column: 5)
!4840 = !DILocation(line: 1828, column: 5, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4839, file: !3260, line: 1828, column: 5)
!4842 = distinct !{!4842, !4830, !4843}
!4843 = !DILocation(line: 1829, column: 4, scope: !4796)
!4844 = !DILocation(line: 1831, column: 4, scope: !4796)
!4845 = !DILocalVariable(name: "rc", scope: !4846, file: !3260, line: 1831, type: !103)
!4846 = distinct !DILexicalBlock(scope: !4796, file: !3260, line: 1831, column: 4)
!4847 = !DILocation(line: 1831, column: 4, scope: !4846)
!4848 = !DILocation(line: 1831, column: 4, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4846, file: !3260, line: 1831, column: 4)
!4850 = !DILocation(line: 1831, column: 4, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4849, file: !3260, line: 1831, column: 4)
!4852 = !DILocation(line: 1835, column: 3, scope: !4176)
!4853 = !DILocation(line: 1835, column: 10, scope: !4176)
!4854 = !DILocation(line: 1835, column: 16, scope: !4176)
!4855 = !DILocation(line: 1836, column: 4, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4176, file: !3260, line: 1835, column: 21)
!4857 = !DILocalVariable(name: "rc", scope: !4858, file: !3260, line: 1836, type: !103)
!4858 = distinct !DILexicalBlock(scope: !4856, file: !3260, line: 1836, column: 4)
!4859 = !DILocation(line: 1836, column: 4, scope: !4858)
!4860 = !DILocation(line: 1836, column: 4, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !3260, line: 1836, column: 4)
!4862 = !DILocation(line: 1836, column: 4, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4861, file: !3260, line: 1836, column: 4)
!4864 = !DILocation(line: 1837, column: 4, scope: !4856)
!4865 = distinct !{!4865, !4852, !4866}
!4866 = !DILocation(line: 1838, column: 3, scope: !4176)
!4867 = !DILocation(line: 1841, column: 9, scope: !4136)
!4868 = !DILocation(line: 1841, column: 2, scope: !4136)
!4869 = !DILocation(line: 1844, column: 1, scope: !4136)
!4870 = distinct !DISubprogram(name: "extract_conversion", scope: !3260, file: !3260, line: 642, type: !4871, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!256, !4240, !256}
!4873 = !DILocalVariable(name: "conv", arg: 1, scope: !4870, file: !3260, line: 642, type: !4240)
!4874 = !DILocation(line: 642, column: 65, scope: !4870)
!4875 = !DILocalVariable(name: "sp", arg: 2, scope: !4870, file: !3260, line: 643, type: !256)
!4876 = !DILocation(line: 643, column: 23, scope: !4870)
!4877 = !DILocation(line: 645, column: 3, scope: !4870)
!4878 = !DILocation(line: 645, column: 30, scope: !4870)
!4879 = !DILocation(line: 645, column: 10, scope: !4870)
!4880 = !DILocation(line: 653, column: 2, scope: !4870)
!4881 = !DILocation(line: 654, column: 7, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4870, file: !3260, line: 654, column: 6)
!4883 = !DILocation(line: 654, column: 6, scope: !4882)
!4884 = !DILocation(line: 654, column: 10, scope: !4882)
!4885 = !DILocation(line: 654, column: 6, scope: !4870)
!4886 = !DILocation(line: 655, column: 24, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4882, file: !3260, line: 654, column: 18)
!4888 = !DILocation(line: 655, column: 21, scope: !4887)
!4889 = !DILocation(line: 655, column: 3, scope: !4887)
!4890 = !DILocation(line: 655, column: 9, scope: !4887)
!4891 = !DILocation(line: 655, column: 19, scope: !4887)
!4892 = !DILocation(line: 656, column: 10, scope: !4887)
!4893 = !DILocation(line: 656, column: 3, scope: !4887)
!4894 = !DILocation(line: 659, column: 21, scope: !4870)
!4895 = !DILocation(line: 659, column: 27, scope: !4870)
!4896 = !DILocation(line: 659, column: 7, scope: !4870)
!4897 = !DILocation(line: 659, column: 5, scope: !4870)
!4898 = !DILocation(line: 660, column: 21, scope: !4870)
!4899 = !DILocation(line: 660, column: 27, scope: !4870)
!4900 = !DILocation(line: 660, column: 7, scope: !4870)
!4901 = !DILocation(line: 660, column: 5, scope: !4870)
!4902 = !DILocation(line: 661, column: 20, scope: !4870)
!4903 = !DILocation(line: 661, column: 26, scope: !4870)
!4904 = !DILocation(line: 661, column: 7, scope: !4870)
!4905 = !DILocation(line: 661, column: 5, scope: !4870)
!4906 = !DILocation(line: 662, column: 22, scope: !4870)
!4907 = !DILocation(line: 662, column: 28, scope: !4870)
!4908 = !DILocation(line: 662, column: 7, scope: !4870)
!4909 = !DILocation(line: 662, column: 5, scope: !4870)
!4910 = !DILocation(line: 663, column: 25, scope: !4870)
!4911 = !DILocation(line: 663, column: 31, scope: !4870)
!4912 = !DILocation(line: 663, column: 7, scope: !4870)
!4913 = !DILocation(line: 663, column: 5, scope: !4870)
!4914 = !DILocation(line: 665, column: 9, scope: !4870)
!4915 = !DILocation(line: 665, column: 2, scope: !4870)
!4916 = !DILocation(line: 666, column: 1, scope: !4870)
!4917 = distinct !DISubprogram(name: "outs", scope: !3260, file: !3260, line: 1319, type: !4918, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!103, !3795, !102, !256, !256}
!4920 = !DILocalVariable(name: "out", arg: 1, scope: !4917, file: !3260, line: 1319, type: !3795)
!4921 = !DILocation(line: 1319, column: 29, scope: !4917)
!4922 = !DILocalVariable(name: "ctx", arg: 2, scope: !4917, file: !3260, line: 1320, type: !102)
!4923 = !DILocation(line: 1320, column: 9, scope: !4917)
!4924 = !DILocalVariable(name: "sp", arg: 3, scope: !4917, file: !3260, line: 1321, type: !256)
!4925 = !DILocation(line: 1321, column: 15, scope: !4917)
!4926 = !DILocalVariable(name: "ep", arg: 4, scope: !4917, file: !3260, line: 1322, type: !256)
!4927 = !DILocation(line: 1322, column: 15, scope: !4917)
!4928 = !DILocalVariable(name: "count", scope: !4917, file: !3260, line: 1324, type: !217)
!4929 = !DILocation(line: 1324, column: 9, scope: !4917)
!4930 = !DILocation(line: 1326, column: 2, scope: !4917)
!4931 = !DILocation(line: 1326, column: 10, scope: !4917)
!4932 = !DILocation(line: 1326, column: 15, scope: !4917)
!4933 = !DILocation(line: 1326, column: 13, scope: !4917)
!4934 = !DILocation(line: 1326, column: 19, scope: !4917)
!4935 = !DILocation(line: 1326, column: 24, scope: !4917)
!4936 = !DILocation(line: 1326, column: 27, scope: !4917)
!4937 = !DILocation(line: 1326, column: 36, scope: !4917)
!4938 = !DILocation(line: 1326, column: 40, scope: !4917)
!4939 = !DILocation(line: 1326, column: 39, scope: !4917)
!4940 = !DILocation(line: 0, scope: !4917)
!4941 = !DILocalVariable(name: "rc", scope: !4942, file: !3260, line: 1327, type: !103)
!4942 = distinct !DILexicalBlock(scope: !4917, file: !3260, line: 1326, column: 45)
!4943 = !DILocation(line: 1327, column: 7, scope: !4942)
!4944 = !DILocation(line: 1327, column: 12, scope: !4942)
!4945 = !DILocation(line: 1327, column: 24, scope: !4942)
!4946 = !DILocation(line: 1327, column: 21, scope: !4942)
!4947 = !DILocation(line: 1327, column: 16, scope: !4942)
!4948 = !DILocation(line: 1327, column: 28, scope: !4942)
!4949 = !DILocation(line: 1329, column: 7, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4942, file: !3260, line: 1329, column: 7)
!4951 = !DILocation(line: 1329, column: 10, scope: !4950)
!4952 = !DILocation(line: 1329, column: 7, scope: !4942)
!4953 = !DILocation(line: 1330, column: 11, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4950, file: !3260, line: 1329, column: 15)
!4955 = !DILocation(line: 1330, column: 4, scope: !4954)
!4956 = !DILocation(line: 1332, column: 3, scope: !4942)
!4957 = distinct !{!4957, !4930, !4958}
!4958 = !DILocation(line: 1333, column: 2, scope: !4917)
!4959 = !DILocation(line: 1335, column: 14, scope: !4917)
!4960 = !DILocation(line: 1335, column: 2, scope: !4917)
!4961 = !DILocation(line: 1336, column: 1, scope: !4917)
!4962 = distinct !DISubprogram(name: "encode_uint", scope: !3260, file: !3260, line: 788, type: !4963, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!2801, !3282, !4240, !2801, !256}
!4965 = !DILocalVariable(name: "value", arg: 1, scope: !4962, file: !3260, line: 788, type: !3282)
!4966 = !DILocation(line: 788, column: 42, scope: !4962)
!4967 = !DILocalVariable(name: "conv", arg: 2, scope: !4962, file: !3260, line: 789, type: !4240)
!4968 = !DILocation(line: 789, column: 24, scope: !4962)
!4969 = !DILocalVariable(name: "bps", arg: 3, scope: !4962, file: !3260, line: 790, type: !2801)
!4970 = !DILocation(line: 790, column: 11, scope: !4962)
!4971 = !DILocalVariable(name: "bpe", arg: 4, scope: !4962, file: !3260, line: 791, type: !256)
!4972 = !DILocation(line: 791, column: 17, scope: !4962)
!4973 = !DILocalVariable(name: "upcase", scope: !4962, file: !3260, line: 793, type: !1035)
!4974 = !DILocation(line: 793, column: 7, scope: !4962)
!4975 = !DILocation(line: 793, column: 29, scope: !4962)
!4976 = !DILocation(line: 793, column: 35, scope: !4962)
!4977 = !DILocation(line: 793, column: 24, scope: !4962)
!4978 = !DILocation(line: 793, column: 16, scope: !4962)
!4979 = !DILocalVariable(name: "radix", scope: !4962, file: !3260, line: 794, type: !4980)
!4980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4981 = !DILocation(line: 794, column: 21, scope: !4962)
!4982 = !DILocation(line: 794, column: 46, scope: !4962)
!4983 = !DILocation(line: 794, column: 52, scope: !4962)
!4984 = !DILocation(line: 794, column: 29, scope: !4962)
!4985 = !DILocalVariable(name: "bp", scope: !4962, file: !3260, line: 795, type: !2801)
!4986 = !DILocation(line: 795, column: 8, scope: !4962)
!4987 = !DILocation(line: 795, column: 13, scope: !4962)
!4988 = !DILocation(line: 795, column: 20, scope: !4962)
!4989 = !DILocation(line: 795, column: 26, scope: !4962)
!4990 = !DILocation(line: 795, column: 24, scope: !4962)
!4991 = !DILocation(line: 795, column: 17, scope: !4962)
!4992 = !DILocation(line: 797, column: 2, scope: !4962)
!4993 = !DILocalVariable(name: "lsv", scope: !4994, file: !3260, line: 798, type: !32)
!4994 = distinct !DILexicalBlock(scope: !4962, file: !3260, line: 797, column: 5)
!4995 = !DILocation(line: 798, column: 16, scope: !4994)
!4996 = !DILocation(line: 798, column: 37, scope: !4994)
!4997 = !DILocation(line: 798, column: 45, scope: !4994)
!4998 = !DILocation(line: 798, column: 43, scope: !4994)
!4999 = !DILocation(line: 798, column: 22, scope: !4994)
!5000 = !DILocation(line: 800, column: 12, scope: !4994)
!5001 = !DILocation(line: 800, column: 16, scope: !4994)
!5002 = !DILocation(line: 800, column: 11, scope: !4994)
!5003 = !DILocation(line: 800, column: 31, scope: !4994)
!5004 = !DILocation(line: 800, column: 29, scope: !4994)
!5005 = !DILocation(line: 801, column: 6, scope: !4994)
!5006 = !DILocation(line: 801, column: 22, scope: !4994)
!5007 = !DILocation(line: 801, column: 20, scope: !4994)
!5008 = !DILocation(line: 801, column: 26, scope: !4994)
!5009 = !DILocation(line: 801, column: 41, scope: !4994)
!5010 = !DILocation(line: 801, column: 39, scope: !4994)
!5011 = !DILocation(line: 801, column: 45, scope: !4994)
!5012 = !DILocation(line: 800, column: 4, scope: !4994)
!5013 = !DILocation(line: 800, column: 9, scope: !4994)
!5014 = !DILocation(line: 802, column: 12, scope: !4994)
!5015 = !DILocation(line: 802, column: 9, scope: !4994)
!5016 = !DILocation(line: 803, column: 2, scope: !4994)
!5017 = !DILocation(line: 803, column: 12, scope: !4962)
!5018 = !DILocation(line: 803, column: 18, scope: !4962)
!5019 = !DILocation(line: 803, column: 24, scope: !4962)
!5020 = !DILocation(line: 803, column: 28, scope: !4962)
!5021 = !DILocation(line: 803, column: 34, scope: !4962)
!5022 = !DILocation(line: 803, column: 32, scope: !4962)
!5023 = !DILocation(line: 0, scope: !4962)
!5024 = distinct !{!5024, !4992, !5025}
!5025 = !DILocation(line: 803, column: 37, scope: !4962)
!5026 = !DILocation(line: 808, column: 6, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4962, file: !3260, line: 808, column: 6)
!5028 = !DILocation(line: 808, column: 12, scope: !5027)
!5029 = !DILocation(line: 808, column: 6, scope: !4962)
!5030 = !DILocation(line: 809, column: 7, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !3260, line: 809, column: 7)
!5032 = distinct !DILexicalBlock(scope: !5027, file: !3260, line: 808, column: 23)
!5033 = !DILocation(line: 809, column: 13, scope: !5031)
!5034 = !DILocation(line: 809, column: 7, scope: !5032)
!5035 = !DILocation(line: 810, column: 4, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5031, file: !3260, line: 809, column: 19)
!5037 = !DILocation(line: 810, column: 10, scope: !5036)
!5038 = !DILocation(line: 810, column: 20, scope: !5036)
!5039 = !DILocation(line: 811, column: 3, scope: !5036)
!5040 = !DILocation(line: 811, column: 14, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5031, file: !3260, line: 811, column: 14)
!5042 = !DILocation(line: 811, column: 20, scope: !5041)
!5043 = !DILocation(line: 811, column: 14, scope: !5031)
!5044 = !DILocation(line: 812, column: 4, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !3260, line: 811, column: 27)
!5046 = !DILocation(line: 812, column: 10, scope: !5045)
!5047 = !DILocation(line: 812, column: 21, scope: !5045)
!5048 = !DILocation(line: 813, column: 3, scope: !5045)
!5049 = !DILocation(line: 816, column: 2, scope: !5032)
!5050 = !DILocation(line: 818, column: 9, scope: !4962)
!5051 = !DILocation(line: 818, column: 2, scope: !4962)
!5052 = distinct !DISubprogram(name: "store_count", scope: !3260, file: !3260, line: 1280, type: !5053, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{null, !5055, !102, !103}
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 32)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4206)
!5057 = !DILocalVariable(name: "conv", arg: 1, scope: !5052, file: !3260, line: 1280, type: !5055)
!5058 = !DILocation(line: 1280, column: 57, scope: !5052)
!5059 = !DILocalVariable(name: "dp", arg: 2, scope: !5052, file: !3260, line: 1281, type: !102)
!5060 = !DILocation(line: 1281, column: 17, scope: !5052)
!5061 = !DILocalVariable(name: "count", arg: 3, scope: !5052, file: !3260, line: 1282, type: !103)
!5062 = !DILocation(line: 1282, column: 15, scope: !5052)
!5063 = !DILocation(line: 1284, column: 32, scope: !5052)
!5064 = !DILocation(line: 1284, column: 38, scope: !5052)
!5065 = !DILocation(line: 1284, column: 2, scope: !5052)
!5066 = !DILocation(line: 1286, column: 16, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5052, file: !3260, line: 1284, column: 50)
!5068 = !DILocation(line: 1286, column: 11, scope: !5067)
!5069 = !DILocation(line: 1286, column: 4, scope: !5067)
!5070 = !DILocation(line: 1286, column: 14, scope: !5067)
!5071 = !DILocation(line: 1287, column: 3, scope: !5067)
!5072 = !DILocation(line: 1289, column: 37, scope: !5067)
!5073 = !DILocation(line: 1289, column: 24, scope: !5067)
!5074 = !DILocation(line: 1289, column: 19, scope: !5067)
!5075 = !DILocation(line: 1289, column: 22, scope: !5067)
!5076 = !DILocation(line: 1290, column: 3, scope: !5067)
!5077 = !DILocation(line: 1292, column: 25, scope: !5067)
!5078 = !DILocation(line: 1292, column: 18, scope: !5067)
!5079 = !DILocation(line: 1292, column: 13, scope: !5067)
!5080 = !DILocation(line: 1292, column: 4, scope: !5067)
!5081 = !DILocation(line: 1292, column: 16, scope: !5067)
!5082 = !DILocation(line: 1293, column: 3, scope: !5067)
!5083 = !DILocation(line: 1295, column: 23, scope: !5067)
!5084 = !DILocation(line: 1295, column: 12, scope: !5067)
!5085 = !DILocation(line: 1295, column: 4, scope: !5067)
!5086 = !DILocation(line: 1295, column: 15, scope: !5067)
!5087 = !DILocation(line: 1296, column: 3, scope: !5067)
!5088 = !DILocation(line: 1298, column: 33, scope: !5067)
!5089 = !DILocation(line: 1298, column: 22, scope: !5067)
!5090 = !DILocation(line: 1298, column: 17, scope: !5067)
!5091 = !DILocation(line: 1298, column: 4, scope: !5067)
!5092 = !DILocation(line: 1298, column: 20, scope: !5067)
!5093 = !DILocation(line: 1299, column: 3, scope: !5067)
!5094 = !DILocation(line: 1301, column: 31, scope: !5067)
!5095 = !DILocation(line: 1301, column: 21, scope: !5067)
!5096 = !DILocation(line: 1301, column: 16, scope: !5067)
!5097 = !DILocation(line: 1301, column: 4, scope: !5067)
!5098 = !DILocation(line: 1301, column: 19, scope: !5067)
!5099 = !DILocation(line: 1302, column: 3, scope: !5067)
!5100 = !DILocation(line: 1304, column: 27, scope: !5067)
!5101 = !DILocation(line: 1304, column: 14, scope: !5067)
!5102 = !DILocation(line: 1304, column: 4, scope: !5067)
!5103 = !DILocation(line: 1304, column: 17, scope: !5067)
!5104 = !DILocation(line: 1305, column: 3, scope: !5067)
!5105 = !DILocation(line: 1307, column: 33, scope: !5067)
!5106 = !DILocation(line: 1307, column: 17, scope: !5067)
!5107 = !DILocation(line: 1307, column: 4, scope: !5067)
!5108 = !DILocation(line: 1307, column: 20, scope: !5067)
!5109 = !DILocation(line: 1308, column: 3, scope: !5067)
!5110 = !DILocation(line: 1314, column: 3, scope: !5067)
!5111 = !DILocation(line: 1316, column: 1, scope: !5052)
!5112 = distinct !DISubprogram(name: "isupper", scope: !5113, file: !5113, line: 16, type: !274, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5113 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5114 = !DILocalVariable(name: "a", arg: 1, scope: !5112, file: !5113, line: 16, type: !103)
!5115 = !DILocation(line: 16, column: 31, scope: !5112)
!5116 = !DILocation(line: 18, column: 27, scope: !5112)
!5117 = !DILocation(line: 18, column: 29, scope: !5112)
!5118 = !DILocation(line: 18, column: 45, scope: !5112)
!5119 = !DILocation(line: 18, column: 2, scope: !5112)
!5120 = distinct !DISubprogram(name: "conversion_radix", scope: !3260, file: !3260, line: 761, type: !5121, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!217, !237}
!5123 = !DILocalVariable(name: "specifier", arg: 1, scope: !5120, file: !3260, line: 761, type: !237)
!5124 = !DILocation(line: 761, column: 44, scope: !5120)
!5125 = !DILocation(line: 763, column: 10, scope: !5120)
!5126 = !DILocation(line: 763, column: 2, scope: !5120)
!5127 = !DILocation(line: 763, column: 21, scope: !5120)
!5128 = !DILocation(line: 768, column: 3, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5120, file: !3260, line: 763, column: 21)
!5130 = !DILocation(line: 770, column: 3, scope: !5129)
!5131 = !DILocation(line: 774, column: 3, scope: !5129)
!5132 = !DILocation(line: 776, column: 1, scope: !5120)
!5133 = distinct !DISubprogram(name: "extract_flags", scope: !3260, file: !3260, line: 339, type: !4871, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5134 = !DILocalVariable(name: "conv", arg: 1, scope: !5133, file: !3260, line: 339, type: !4240)
!5135 = !DILocation(line: 339, column: 60, scope: !5133)
!5136 = !DILocalVariable(name: "sp", arg: 2, scope: !5133, file: !3260, line: 340, type: !256)
!5137 = !DILocation(line: 340, column: 18, scope: !5133)
!5138 = !DILocalVariable(name: "loop", scope: !5133, file: !3260, line: 342, type: !1035)
!5139 = !DILocation(line: 342, column: 7, scope: !5133)
!5140 = !DILocation(line: 344, column: 2, scope: !5133)
!5141 = !DILocation(line: 345, column: 12, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5133, file: !3260, line: 344, column: 5)
!5143 = !DILocation(line: 345, column: 11, scope: !5142)
!5144 = !DILocation(line: 345, column: 3, scope: !5142)
!5145 = !DILocation(line: 347, column: 4, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5142, file: !3260, line: 345, column: 16)
!5147 = !DILocation(line: 347, column: 10, scope: !5146)
!5148 = !DILocation(line: 347, column: 20, scope: !5146)
!5149 = !DILocation(line: 348, column: 4, scope: !5146)
!5150 = !DILocation(line: 350, column: 4, scope: !5146)
!5151 = !DILocation(line: 350, column: 10, scope: !5146)
!5152 = !DILocation(line: 350, column: 20, scope: !5146)
!5153 = !DILocation(line: 351, column: 4, scope: !5146)
!5154 = !DILocation(line: 353, column: 4, scope: !5146)
!5155 = !DILocation(line: 353, column: 10, scope: !5146)
!5156 = !DILocation(line: 353, column: 21, scope: !5146)
!5157 = !DILocation(line: 354, column: 4, scope: !5146)
!5158 = !DILocation(line: 356, column: 4, scope: !5146)
!5159 = !DILocation(line: 356, column: 10, scope: !5146)
!5160 = !DILocation(line: 356, column: 20, scope: !5146)
!5161 = !DILocation(line: 357, column: 4, scope: !5146)
!5162 = !DILocation(line: 359, column: 4, scope: !5146)
!5163 = !DILocation(line: 359, column: 10, scope: !5146)
!5164 = !DILocation(line: 359, column: 20, scope: !5146)
!5165 = !DILocation(line: 360, column: 4, scope: !5146)
!5166 = !DILocation(line: 362, column: 9, scope: !5146)
!5167 = !DILocation(line: 363, column: 3, scope: !5146)
!5168 = !DILocation(line: 364, column: 7, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5142, file: !3260, line: 364, column: 7)
!5170 = !DILocation(line: 364, column: 7, scope: !5142)
!5171 = !DILocation(line: 365, column: 4, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !3260, line: 364, column: 13)
!5173 = !DILocation(line: 366, column: 3, scope: !5172)
!5174 = !DILocation(line: 367, column: 2, scope: !5142)
!5175 = !DILocation(line: 367, column: 11, scope: !5133)
!5176 = distinct !{!5176, !5140, !5177}
!5177 = !DILocation(line: 367, column: 15, scope: !5133)
!5178 = !DILocation(line: 370, column: 6, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5133, file: !3260, line: 370, column: 6)
!5180 = !DILocation(line: 370, column: 12, scope: !5179)
!5181 = !DILocation(line: 370, column: 22, scope: !5179)
!5182 = !DILocation(line: 370, column: 25, scope: !5179)
!5183 = !DILocation(line: 370, column: 31, scope: !5179)
!5184 = !DILocation(line: 370, column: 6, scope: !5133)
!5185 = !DILocation(line: 371, column: 3, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5179, file: !3260, line: 370, column: 42)
!5187 = !DILocation(line: 371, column: 9, scope: !5186)
!5188 = !DILocation(line: 371, column: 19, scope: !5186)
!5189 = !DILocation(line: 372, column: 2, scope: !5186)
!5190 = !DILocation(line: 376, column: 9, scope: !5133)
!5191 = !DILocation(line: 376, column: 2, scope: !5133)
!5192 = distinct !DISubprogram(name: "extract_width", scope: !3260, file: !3260, line: 388, type: !4871, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5193 = !DILocalVariable(name: "conv", arg: 1, scope: !5192, file: !3260, line: 388, type: !4240)
!5194 = !DILocation(line: 388, column: 60, scope: !5192)
!5195 = !DILocalVariable(name: "sp", arg: 2, scope: !5192, file: !3260, line: 389, type: !256)
!5196 = !DILocation(line: 389, column: 18, scope: !5192)
!5197 = !DILocation(line: 391, column: 2, scope: !5192)
!5198 = !DILocation(line: 391, column: 8, scope: !5192)
!5199 = !DILocation(line: 391, column: 22, scope: !5192)
!5200 = !DILocation(line: 393, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5192, file: !3260, line: 393, column: 6)
!5202 = !DILocation(line: 393, column: 6, scope: !5201)
!5203 = !DILocation(line: 393, column: 10, scope: !5201)
!5204 = !DILocation(line: 393, column: 6, scope: !5192)
!5205 = !DILocation(line: 394, column: 3, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5201, file: !3260, line: 393, column: 18)
!5207 = !DILocation(line: 394, column: 9, scope: !5206)
!5208 = !DILocation(line: 394, column: 20, scope: !5206)
!5209 = !DILocation(line: 395, column: 10, scope: !5206)
!5210 = !DILocation(line: 395, column: 3, scope: !5206)
!5211 = !DILocalVariable(name: "wp", scope: !5192, file: !3260, line: 398, type: !256)
!5212 = !DILocation(line: 398, column: 14, scope: !5192)
!5213 = !DILocation(line: 398, column: 19, scope: !5192)
!5214 = !DILocalVariable(name: "width", scope: !5192, file: !3260, line: 399, type: !217)
!5215 = !DILocation(line: 399, column: 9, scope: !5192)
!5216 = !DILocation(line: 399, column: 17, scope: !5192)
!5217 = !DILocation(line: 401, column: 6, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5192, file: !3260, line: 401, column: 6)
!5219 = !DILocation(line: 401, column: 12, scope: !5218)
!5220 = !DILocation(line: 401, column: 9, scope: !5218)
!5221 = !DILocation(line: 401, column: 6, scope: !5192)
!5222 = !DILocation(line: 402, column: 3, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !3260, line: 401, column: 16)
!5224 = !DILocation(line: 402, column: 9, scope: !5223)
!5225 = !DILocation(line: 402, column: 23, scope: !5223)
!5226 = !DILocation(line: 403, column: 23, scope: !5223)
!5227 = !DILocation(line: 403, column: 3, scope: !5223)
!5228 = !DILocation(line: 403, column: 9, scope: !5223)
!5229 = !DILocation(line: 403, column: 21, scope: !5223)
!5230 = !DILocation(line: 404, column: 26, scope: !5223)
!5231 = !DILocation(line: 404, column: 32, scope: !5223)
!5232 = !DILocation(line: 404, column: 44, scope: !5223)
!5233 = !DILocation(line: 405, column: 11, scope: !5223)
!5234 = !DILocation(line: 405, column: 15, scope: !5223)
!5235 = !DILocation(line: 405, column: 32, scope: !5223)
!5236 = !DILocation(line: 405, column: 38, scope: !5223)
!5237 = !DILocation(line: 405, column: 21, scope: !5223)
!5238 = !DILocation(line: 404, column: 3, scope: !5223)
!5239 = !DILocation(line: 404, column: 9, scope: !5223)
!5240 = !DILocation(line: 404, column: 21, scope: !5223)
!5241 = !DILocation(line: 406, column: 2, scope: !5223)
!5242 = !DILocation(line: 408, column: 9, scope: !5192)
!5243 = !DILocation(line: 408, column: 2, scope: !5192)
!5244 = !DILocation(line: 409, column: 1, scope: !5192)
!5245 = distinct !DISubprogram(name: "extract_prec", scope: !3260, file: !3260, line: 420, type: !4871, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5246 = !DILocalVariable(name: "conv", arg: 1, scope: !5245, file: !3260, line: 420, type: !4240)
!5247 = !DILocation(line: 420, column: 59, scope: !5245)
!5248 = !DILocalVariable(name: "sp", arg: 2, scope: !5245, file: !3260, line: 421, type: !256)
!5249 = !DILocation(line: 421, column: 24, scope: !5245)
!5250 = !DILocation(line: 423, column: 25, scope: !5245)
!5251 = !DILocation(line: 423, column: 24, scope: !5245)
!5252 = !DILocation(line: 423, column: 28, scope: !5245)
!5253 = !DILocation(line: 423, column: 2, scope: !5245)
!5254 = !DILocation(line: 423, column: 8, scope: !5245)
!5255 = !DILocation(line: 423, column: 21, scope: !5245)
!5256 = !DILocation(line: 425, column: 7, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5245, file: !3260, line: 425, column: 6)
!5258 = !DILocation(line: 425, column: 13, scope: !5257)
!5259 = !DILocation(line: 425, column: 6, scope: !5245)
!5260 = !DILocation(line: 426, column: 10, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !3260, line: 425, column: 27)
!5262 = !DILocation(line: 426, column: 3, scope: !5261)
!5263 = !DILocation(line: 428, column: 2, scope: !5245)
!5264 = !DILocation(line: 430, column: 7, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5245, file: !3260, line: 430, column: 6)
!5266 = !DILocation(line: 430, column: 6, scope: !5265)
!5267 = !DILocation(line: 430, column: 10, scope: !5265)
!5268 = !DILocation(line: 430, column: 6, scope: !5245)
!5269 = !DILocation(line: 431, column: 3, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !3260, line: 430, column: 18)
!5271 = !DILocation(line: 431, column: 9, scope: !5270)
!5272 = !DILocation(line: 431, column: 19, scope: !5270)
!5273 = !DILocation(line: 432, column: 10, scope: !5270)
!5274 = !DILocation(line: 432, column: 3, scope: !5270)
!5275 = !DILocalVariable(name: "prec", scope: !5245, file: !3260, line: 435, type: !217)
!5276 = !DILocation(line: 435, column: 9, scope: !5245)
!5277 = !DILocation(line: 435, column: 16, scope: !5245)
!5278 = !DILocation(line: 437, column: 21, scope: !5245)
!5279 = !DILocation(line: 437, column: 2, scope: !5245)
!5280 = !DILocation(line: 437, column: 8, scope: !5245)
!5281 = !DILocation(line: 437, column: 19, scope: !5245)
!5282 = !DILocation(line: 438, column: 25, scope: !5245)
!5283 = !DILocation(line: 438, column: 31, scope: !5245)
!5284 = !DILocation(line: 438, column: 42, scope: !5245)
!5285 = !DILocation(line: 439, column: 10, scope: !5245)
!5286 = !DILocation(line: 439, column: 14, scope: !5245)
!5287 = !DILocation(line: 439, column: 30, scope: !5245)
!5288 = !DILocation(line: 439, column: 36, scope: !5245)
!5289 = !DILocation(line: 439, column: 19, scope: !5245)
!5290 = !DILocation(line: 438, column: 2, scope: !5245)
!5291 = !DILocation(line: 438, column: 8, scope: !5245)
!5292 = !DILocation(line: 438, column: 20, scope: !5245)
!5293 = !DILocation(line: 441, column: 9, scope: !5245)
!5294 = !DILocation(line: 441, column: 2, scope: !5245)
!5295 = !DILocation(line: 442, column: 1, scope: !5245)
!5296 = distinct !DISubprogram(name: "extract_length", scope: !3260, file: !3260, line: 453, type: !4871, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5297 = !DILocalVariable(name: "conv", arg: 1, scope: !5296, file: !3260, line: 453, type: !4240)
!5298 = !DILocation(line: 453, column: 61, scope: !5296)
!5299 = !DILocalVariable(name: "sp", arg: 2, scope: !5296, file: !3260, line: 454, type: !256)
!5300 = !DILocation(line: 454, column: 19, scope: !5296)
!5301 = !DILocation(line: 456, column: 11, scope: !5296)
!5302 = !DILocation(line: 456, column: 10, scope: !5296)
!5303 = !DILocation(line: 456, column: 2, scope: !5296)
!5304 = !DILocation(line: 458, column: 8, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !3260, line: 458, column: 7)
!5306 = distinct !DILexicalBlock(scope: !5296, file: !3260, line: 456, column: 15)
!5307 = !DILocation(line: 458, column: 7, scope: !5305)
!5308 = !DILocation(line: 458, column: 13, scope: !5305)
!5309 = !DILocation(line: 458, column: 7, scope: !5306)
!5310 = !DILocation(line: 459, column: 4, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5305, file: !3260, line: 458, column: 21)
!5312 = !DILocation(line: 459, column: 10, scope: !5311)
!5313 = !DILocation(line: 459, column: 21, scope: !5311)
!5314 = !DILocation(line: 460, column: 4, scope: !5311)
!5315 = !DILocation(line: 461, column: 3, scope: !5311)
!5316 = !DILocation(line: 462, column: 4, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5305, file: !3260, line: 461, column: 10)
!5318 = !DILocation(line: 462, column: 10, scope: !5317)
!5319 = !DILocation(line: 462, column: 21, scope: !5317)
!5320 = !DILocation(line: 464, column: 3, scope: !5306)
!5321 = !DILocation(line: 466, column: 8, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5306, file: !3260, line: 466, column: 7)
!5323 = !DILocation(line: 466, column: 7, scope: !5322)
!5324 = !DILocation(line: 466, column: 13, scope: !5322)
!5325 = !DILocation(line: 466, column: 7, scope: !5306)
!5326 = !DILocation(line: 467, column: 4, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !3260, line: 466, column: 21)
!5328 = !DILocation(line: 467, column: 10, scope: !5327)
!5329 = !DILocation(line: 467, column: 21, scope: !5327)
!5330 = !DILocation(line: 468, column: 4, scope: !5327)
!5331 = !DILocation(line: 469, column: 3, scope: !5327)
!5332 = !DILocation(line: 470, column: 4, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5322, file: !3260, line: 469, column: 10)
!5334 = !DILocation(line: 470, column: 10, scope: !5333)
!5335 = !DILocation(line: 470, column: 21, scope: !5333)
!5336 = !DILocation(line: 472, column: 3, scope: !5306)
!5337 = !DILocation(line: 474, column: 3, scope: !5306)
!5338 = !DILocation(line: 474, column: 9, scope: !5306)
!5339 = !DILocation(line: 474, column: 20, scope: !5306)
!5340 = !DILocation(line: 475, column: 3, scope: !5306)
!5341 = !DILocation(line: 476, column: 3, scope: !5306)
!5342 = !DILocation(line: 478, column: 3, scope: !5306)
!5343 = !DILocation(line: 478, column: 9, scope: !5306)
!5344 = !DILocation(line: 478, column: 20, scope: !5306)
!5345 = !DILocation(line: 479, column: 3, scope: !5306)
!5346 = !DILocation(line: 480, column: 3, scope: !5306)
!5347 = !DILocation(line: 482, column: 3, scope: !5306)
!5348 = !DILocation(line: 482, column: 9, scope: !5306)
!5349 = !DILocation(line: 482, column: 20, scope: !5306)
!5350 = !DILocation(line: 483, column: 3, scope: !5306)
!5351 = !DILocation(line: 484, column: 3, scope: !5306)
!5352 = !DILocation(line: 486, column: 3, scope: !5306)
!5353 = !DILocation(line: 486, column: 9, scope: !5306)
!5354 = !DILocation(line: 486, column: 20, scope: !5306)
!5355 = !DILocation(line: 487, column: 3, scope: !5306)
!5356 = !DILocation(line: 492, column: 3, scope: !5306)
!5357 = !DILocation(line: 492, column: 9, scope: !5306)
!5358 = !DILocation(line: 492, column: 21, scope: !5306)
!5359 = !DILocation(line: 493, column: 3, scope: !5306)
!5360 = !DILocation(line: 495, column: 3, scope: !5306)
!5361 = !DILocation(line: 495, column: 9, scope: !5306)
!5362 = !DILocation(line: 495, column: 20, scope: !5306)
!5363 = !DILocation(line: 496, column: 3, scope: !5306)
!5364 = !DILocation(line: 498, column: 9, scope: !5296)
!5365 = !DILocation(line: 498, column: 2, scope: !5296)
!5366 = distinct !DISubprogram(name: "extract_specifier", scope: !3260, file: !3260, line: 513, type: !4871, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5367 = !DILocalVariable(name: "conv", arg: 1, scope: !5366, file: !3260, line: 513, type: !4240)
!5368 = !DILocation(line: 513, column: 64, scope: !5366)
!5369 = !DILocalVariable(name: "sp", arg: 2, scope: !5366, file: !3260, line: 514, type: !256)
!5370 = !DILocation(line: 514, column: 22, scope: !5366)
!5371 = !DILocalVariable(name: "unsupported", scope: !5366, file: !3260, line: 516, type: !1035)
!5372 = !DILocation(line: 516, column: 7, scope: !5366)
!5373 = !DILocation(line: 518, column: 23, scope: !5366)
!5374 = !DILocation(line: 518, column: 20, scope: !5366)
!5375 = !DILocation(line: 518, column: 2, scope: !5366)
!5376 = !DILocation(line: 518, column: 8, scope: !5366)
!5377 = !DILocation(line: 518, column: 18, scope: !5366)
!5378 = !DILocation(line: 520, column: 10, scope: !5366)
!5379 = !DILocation(line: 520, column: 16, scope: !5366)
!5380 = !DILocation(line: 520, column: 2, scope: !5366)
!5381 = !DILocation(line: 522, column: 3, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5366, file: !3260, line: 520, column: 27)
!5383 = !DILocation(line: 522, column: 9, scope: !5382)
!5384 = !DILocation(line: 522, column: 23, scope: !5382)
!5385 = !DILocation(line: 523, column: 3, scope: !5382)
!5386 = !DILocation(line: 525, column: 3, scope: !5382)
!5387 = !DILocation(line: 525, column: 9, scope: !5382)
!5388 = !DILocation(line: 525, column: 23, scope: !5382)
!5389 = !DILabel(scope: !5382, name: "int_conv", file: !3260, line: 526)
!5390 = !DILocation(line: 526, column: 1, scope: !5382)
!5391 = !DILocation(line: 528, column: 7, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5382, file: !3260, line: 528, column: 7)
!5393 = !DILocation(line: 528, column: 13, scope: !5392)
!5394 = !DILocation(line: 528, column: 24, scope: !5392)
!5395 = !DILocation(line: 528, column: 7, scope: !5382)
!5396 = !DILocation(line: 529, column: 4, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5392, file: !3260, line: 528, column: 43)
!5398 = !DILocation(line: 529, column: 10, scope: !5397)
!5399 = !DILocation(line: 529, column: 18, scope: !5397)
!5400 = !DILocation(line: 530, column: 3, scope: !5397)
!5401 = !DILocation(line: 535, column: 7, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5382, file: !3260, line: 535, column: 7)
!5403 = !DILocation(line: 535, column: 13, scope: !5402)
!5404 = !DILocation(line: 535, column: 23, scope: !5402)
!5405 = !DILocation(line: 535, column: 7, scope: !5382)
!5406 = !DILocation(line: 536, column: 19, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5402, file: !3260, line: 535, column: 31)
!5408 = !DILocation(line: 536, column: 25, scope: !5407)
!5409 = !DILocation(line: 536, column: 36, scope: !5407)
!5410 = !DILocation(line: 536, column: 16, scope: !5407)
!5411 = !DILocation(line: 537, column: 3, scope: !5407)
!5412 = !DILocation(line: 567, column: 3, scope: !5382)
!5413 = !DILocation(line: 570, column: 3, scope: !5382)
!5414 = !DILocation(line: 570, column: 9, scope: !5382)
!5415 = !DILocation(line: 570, column: 23, scope: !5382)
!5416 = !DILocation(line: 574, column: 16, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !3260, line: 573, column: 48)
!5418 = distinct !DILexicalBlock(scope: !5382, file: !3260, line: 573, column: 7)
!5419 = !DILocation(line: 575, column: 4, scope: !5417)
!5420 = !DILocation(line: 603, column: 3, scope: !5382)
!5421 = !DILocation(line: 603, column: 9, scope: !5382)
!5422 = !DILocation(line: 603, column: 23, scope: !5382)
!5423 = !DILocation(line: 605, column: 7, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5382, file: !3260, line: 605, column: 7)
!5425 = !DILocation(line: 605, column: 13, scope: !5424)
!5426 = !DILocation(line: 605, column: 24, scope: !5424)
!5427 = !DILocation(line: 605, column: 7, scope: !5382)
!5428 = !DILocation(line: 606, column: 16, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5424, file: !3260, line: 605, column: 43)
!5430 = !DILocation(line: 607, column: 3, scope: !5429)
!5431 = !DILocation(line: 608, column: 3, scope: !5382)
!5432 = !DILocation(line: 612, column: 3, scope: !5382)
!5433 = !DILocation(line: 612, column: 9, scope: !5382)
!5434 = !DILocation(line: 612, column: 23, scope: !5382)
!5435 = !DILocation(line: 619, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5382, file: !3260, line: 619, column: 7)
!5437 = !DILocation(line: 619, column: 13, scope: !5436)
!5438 = !DILocation(line: 619, column: 24, scope: !5436)
!5439 = !DILocation(line: 619, column: 7, scope: !5382)
!5440 = !DILocation(line: 620, column: 16, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !3260, line: 619, column: 40)
!5442 = !DILocation(line: 621, column: 3, scope: !5441)
!5443 = !DILocation(line: 622, column: 3, scope: !5382)
!5444 = !DILocation(line: 625, column: 3, scope: !5382)
!5445 = !DILocation(line: 625, column: 9, scope: !5382)
!5446 = !DILocation(line: 625, column: 17, scope: !5382)
!5447 = !DILocation(line: 626, column: 3, scope: !5382)
!5448 = !DILocation(line: 629, column: 23, scope: !5366)
!5449 = !DILocation(line: 629, column: 2, scope: !5366)
!5450 = !DILocation(line: 629, column: 8, scope: !5366)
!5451 = !DILocation(line: 629, column: 20, scope: !5366)
!5452 = !DILocation(line: 631, column: 9, scope: !5366)
!5453 = !DILocation(line: 631, column: 2, scope: !5366)
!5454 = distinct !DISubprogram(name: "extract_decimal", scope: !3260, file: !3260, line: 318, type: !5455, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{!217, !5457}
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!5458 = !DILocalVariable(name: "str", arg: 1, scope: !5454, file: !3260, line: 318, type: !5457)
!5459 = !DILocation(line: 318, column: 44, scope: !5454)
!5460 = !DILocalVariable(name: "sp", scope: !5454, file: !3260, line: 320, type: !256)
!5461 = !DILocation(line: 320, column: 14, scope: !5454)
!5462 = !DILocation(line: 320, column: 20, scope: !5454)
!5463 = !DILocation(line: 320, column: 19, scope: !5454)
!5464 = !DILocalVariable(name: "val", scope: !5454, file: !3260, line: 321, type: !217)
!5465 = !DILocation(line: 321, column: 9, scope: !5454)
!5466 = !DILocation(line: 323, column: 2, scope: !5454)
!5467 = !DILocation(line: 323, column: 38, scope: !5454)
!5468 = !DILocation(line: 323, column: 37, scope: !5454)
!5469 = !DILocation(line: 323, column: 17, scope: !5454)
!5470 = !DILocation(line: 323, column: 9, scope: !5454)
!5471 = !DILocation(line: 324, column: 15, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5454, file: !3260, line: 323, column: 43)
!5473 = !DILocation(line: 324, column: 13, scope: !5472)
!5474 = !DILocation(line: 324, column: 24, scope: !5472)
!5475 = !DILocation(line: 324, column: 21, scope: !5472)
!5476 = !DILocation(line: 324, column: 19, scope: !5472)
!5477 = !DILocation(line: 324, column: 27, scope: !5472)
!5478 = !DILocation(line: 324, column: 7, scope: !5472)
!5479 = distinct !{!5479, !5466, !5480}
!5480 = !DILocation(line: 325, column: 2, scope: !5454)
!5481 = !DILocation(line: 326, column: 9, scope: !5454)
!5482 = !DILocation(line: 326, column: 3, scope: !5454)
!5483 = !DILocation(line: 326, column: 7, scope: !5454)
!5484 = !DILocation(line: 327, column: 9, scope: !5454)
!5485 = !DILocation(line: 327, column: 2, scope: !5454)
!5486 = distinct !DISubprogram(name: "isdigit", scope: !5113, file: !5113, line: 43, type: !274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3256, retainedNodes: !223)
!5487 = !DILocalVariable(name: "a", arg: 1, scope: !5486, file: !5113, line: 43, type: !103)
!5488 = !DILocation(line: 43, column: 31, scope: !5486)
!5489 = !DILocation(line: 45, column: 27, scope: !5486)
!5490 = !DILocation(line: 45, column: 29, scope: !5486)
!5491 = !DILocation(line: 45, column: 45, scope: !5486)
!5492 = !DILocation(line: 45, column: 2, scope: !5486)
!5493 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5494, file: !5494, line: 9, type: !253, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3293, retainedNodes: !223)
!5494 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!5495 = !DILocation(line: 11, column: 1, scope: !5493)
!5496 = !{i64 2147555779, i64 2147555822, i64 2147555862}
!5497 = !DILocation(line: 12, column: 1, scope: !5493)
!5498 = !{i64 2147560057, i64 2147560100, i64 2147560140}
!5499 = !DILocation(line: 13, column: 1, scope: !5493)
!5500 = !{i64 2147560226, i64 2147560269, i64 2147560309}
!5501 = !DILocation(line: 14, column: 1, scope: !5493)
!5502 = !{i64 2147560410, i64 2147560453, i64 2147560493}
!5503 = !DILocation(line: 15, column: 1, scope: !5493)
!5504 = !{i64 2147560589, i64 2147560632, i64 2147560672}
!5505 = !DILocation(line: 16, column: 1, scope: !5493)
!5506 = !{i64 2147560831, i64 2147560874, i64 2147560914}
!5507 = !DILocation(line: 17, column: 1, scope: !5493)
!5508 = !{i64 2147561017, i64 2147561060, i64 2147561100}
!5509 = !DILocation(line: 18, column: 1, scope: !5493)
!5510 = !{i64 2147561227, i64 2147561270, i64 2147561310}
!5511 = !DILocation(line: 19, column: 1, scope: !5493)
!5512 = !{i64 2147561430, i64 2147561473, i64 2147561513}
!5513 = !DILocation(line: 20, column: 1, scope: !5493)
!5514 = !{i64 2147561633, i64 2147561676, i64 2147561716}
!5515 = !DILocation(line: 21, column: 1, scope: !5493)
!5516 = !{i64 2147561832, i64 2147561875, i64 2147561915}
!5517 = !DILocation(line: 22, column: 1, scope: !5493)
!5518 = !{i64 2147562007, i64 2147562050, i64 2147562090}
!5519 = !DILocation(line: 23, column: 1, scope: !5493)
!5520 = !{i64 2147562215, i64 2147562258, i64 2147562298}
!5521 = !DILocation(line: 24, column: 1, scope: !5493)
!5522 = !{i64 2147562419, i64 2147562462, i64 2147562502}
!5523 = !DILocation(line: 25, column: 1, scope: !5493)
!5524 = !{i64 2147562621, i64 2147562664, i64 2147562704}
!5525 = !DILocation(line: 26, column: 1, scope: !5493)
!5526 = !{i64 2147562848, i64 2147562891, i64 2147562931}
!5527 = !DILocation(line: 27, column: 1, scope: !5493)
!5528 = !{i64 2147563063, i64 2147563106, i64 2147563146}
!5529 = !DILocation(line: 28, column: 1, scope: !5493)
!5530 = !{i64 2147563235, i64 2147563278, i64 2147563318}
!5531 = !DILocation(line: 29, column: 1, scope: !5493)
!5532 = !{i64 2147563437, i64 2147563480, i64 2147563520}
!5533 = !DILocation(line: 30, column: 1, scope: !5493)
!5534 = !{i64 2147563636, i64 2147563679, i64 2147563719}
!5535 = !DILocation(line: 31, column: 1, scope: !5493)
!5536 = !{i64 2147563811, i64 2147563854, i64 2147563894}
!5537 = !DILocation(line: 32, column: 1, scope: !5493)
!5538 = !{i64 2147564064, i64 2147564107, i64 2147564147}
!5539 = !DILocation(line: 33, column: 1, scope: !5493)
!5540 = !{i64 2147564305, i64 2147564348, i64 2147564388}
!5541 = !DILocation(line: 34, column: 1, scope: !5493)
!5542 = !{i64 2147564540, i64 2147564583, i64 2147564623}
!5543 = !DILocation(line: 35, column: 1, scope: !5493)
!5544 = !{i64 2147564781, i64 2147564824, i64 2147564864}
!5545 = !DILocation(line: 36, column: 1, scope: !5493)
!5546 = !{i64 2147565025, i64 2147565068, i64 2147565108}
!5547 = !DILocation(line: 37, column: 1, scope: !5493)
!5548 = !{i64 2147565266, i64 2147565309, i64 2147565349}
!5549 = !DILocation(line: 38, column: 1, scope: !5493)
!5550 = !{i64 2147565510, i64 2147565553, i64 2147565593}
!5551 = !DILocation(line: 39, column: 1, scope: !5493)
!5552 = !{i64 2147565751, i64 2147565794, i64 2147565834}
!5553 = !DILocation(line: 40, column: 1, scope: !5493)
!5554 = !{i64 2147565989, i64 2147566032, i64 2147566072}
!5555 = !DILocation(line: 41, column: 1, scope: !5493)
!5556 = !{i64 2147566242, i64 2147566285, i64 2147566325}
!5557 = !DILocation(line: 42, column: 1, scope: !5493)
!5558 = !{i64 2147566495, i64 2147566538, i64 2147566578}
!5559 = !DILocation(line: 43, column: 1, scope: !5493)
!5560 = !{i64 2147566745, i64 2147566788, i64 2147566828}
!5561 = !DILocation(line: 44, column: 1, scope: !5493)
!5562 = !{i64 2147566986, i64 2147567029, i64 2147567069}
!5563 = !DILocation(line: 45, column: 1, scope: !5493)
!5564 = !{i64 2147567230, i64 2147567273, i64 2147567313}
!5565 = !DILocation(line: 46, column: 1, scope: !5493)
!5566 = !{i64 2147567474, i64 2147567517, i64 2147567557}
!5567 = !DILocation(line: 47, column: 1, scope: !5493)
!5568 = !{i64 2147567715, i64 2147567758, i64 2147567798}
!5569 = !DILocation(line: 48, column: 1, scope: !5493)
!5570 = !{i64 2147567971, i64 2147568014, i64 2147568054}
!5571 = !DILocation(line: 49, column: 1, scope: !5493)
!5572 = !{i64 2147568221, i64 2147568264, i64 2147568304}
!5573 = !DILocation(line: 50, column: 1, scope: !5493)
!5574 = !{i64 2147572526, i64 2147572569, i64 2147572609}
!5575 = !DILocation(line: 51, column: 1, scope: !5493)
!5576 = !{i64 2147572773, i64 2147572816, i64 2147572856}
!5577 = !DILocation(line: 52, column: 1, scope: !5493)
!5578 = !{i64 2147572999, i64 2147573042, i64 2147573082}
!5579 = !DILocation(line: 53, column: 1, scope: !5493)
!5580 = !{i64 2147573225, i64 2147573268, i64 2147573308}
!5581 = !DILocation(line: 54, column: 1, scope: !5493)
!5582 = !{i64 2147573466, i64 2147573509, i64 2147573549}
!5583 = !DILocation(line: 55, column: 1, scope: !5493)
!5584 = !{i64 2147573701, i64 2147573744, i64 2147573784}
!5585 = !DILocation(line: 56, column: 1, scope: !5493)
!5586 = !{i64 2147573930, i64 2147573973, i64 2147574013}
!5587 = !DILocation(line: 57, column: 1, scope: !5493)
!5588 = !{i64 2147574138, i64 2147574181, i64 2147574221}
!5589 = !DILocation(line: 58, column: 1, scope: !5493)
!5590 = !{i64 2147574349, i64 2147574392, i64 2147574432}
!5591 = !DILocation(line: 59, column: 1, scope: !5493)
!5592 = !{i64 2147574584, i64 2147574627, i64 2147574667}
!5593 = !DILocation(line: 60, column: 1, scope: !5493)
!5594 = !{i64 2147574813, i64 2147574856, i64 2147574896}
!5595 = !DILocation(line: 61, column: 1, scope: !5493)
!5596 = !{i64 2147575051, i64 2147575094, i64 2147575134}
!5597 = !DILocation(line: 62, column: 1, scope: !5493)
!5598 = !{i64 2147575283, i64 2147575326, i64 2147575366}
!5599 = !DILocation(line: 63, column: 1, scope: !5493)
!5600 = !{i64 2147575509, i64 2147575552, i64 2147575592}
!5601 = !DILocation(line: 64, column: 1, scope: !5493)
!5602 = !{i64 2147575726, i64 2147575769, i64 2147575809}
!5603 = !DILocation(line: 65, column: 1, scope: !5493)
!5604 = !{i64 2147575958, i64 2147576001, i64 2147576041}
!5605 = !DILocation(line: 66, column: 1, scope: !5493)
!5606 = !{i64 2147576184, i64 2147576227, i64 2147576267}
!5607 = !DILocation(line: 67, column: 1, scope: !5493)
!5608 = !{i64 2147576398, i64 2147576441, i64 2147576481}
!5609 = !DILocation(line: 68, column: 1, scope: !5493)
!5610 = !{i64 2147576618, i64 2147576661, i64 2147576701}
!5611 = !DILocation(line: 69, column: 1, scope: !5493)
!5612 = !{i64 2147576850, i64 2147576893, i64 2147576933}
!5613 = !DILocation(line: 70, column: 1, scope: !5493)
!5614 = !{i64 2147577058, i64 2147577101, i64 2147577141}
!5615 = !DILocation(line: 71, column: 1, scope: !5493)
!5616 = !{i64 2147577263, i64 2147577306, i64 2147577346}
!5617 = !DILocation(line: 72, column: 1, scope: !5493)
!5618 = !{i64 2147577480, i64 2147577523, i64 2147577563}
!5619 = !DILocation(line: 73, column: 1, scope: !5493)
!5620 = !{i64 2147577694, i64 2147577737, i64 2147577777}
!5621 = !DILocation(line: 74, column: 1, scope: !5493)
!5622 = !{i64 2147577920, i64 2147577963, i64 2147578003}
!5623 = !DILocation(line: 75, column: 1, scope: !5493)
!5624 = !{i64 2147578140, i64 2147578183, i64 2147578223}
!5625 = !DILocation(line: 76, column: 1, scope: !5493)
!5626 = !{i64 2147578345, i64 2147578388, i64 2147578428}
!5627 = !DILocation(line: 77, column: 1, scope: !5493)
!5628 = !{i64 2147578577, i64 2147578620, i64 2147578660}
!5629 = !DILocation(line: 78, column: 1, scope: !5493)
!5630 = !{i64 2147578812, i64 2147578855, i64 2147578895}
!5631 = !DILocation(line: 79, column: 1, scope: !5493)
!5632 = !{i64 2147579062, i64 2147579105, i64 2147579145}
!5633 = !DILocation(line: 80, column: 1, scope: !5493)
!5634 = !{i64 2147579312, i64 2147579355, i64 2147579395}
!5635 = !DILocation(line: 81, column: 1, scope: !5493)
!5636 = !{i64 2147579550, i64 2147579593, i64 2147579633}
!5637 = !DILocation(line: 82, column: 1, scope: !5493)
!5638 = !{i64 2147579761, i64 2147579804, i64 2147579844}
!5639 = !DILocation(line: 83, column: 1, scope: !5493)
!5640 = !{i64 2147579978, i64 2147580021, i64 2147580061}
!5641 = !DILocation(line: 84, column: 1, scope: !5493)
!5642 = !{i64 2147580141, i64 2147580184, i64 2147580224}
!5643 = !DILocation(line: 85, column: 1, scope: !5493)
!5644 = !{i64 2147580337, i64 2147580380, i64 2147580420}
!5645 = !DILocation(line: 86, column: 1, scope: !5493)
!5646 = !{i64 2147580539, i64 2147580582, i64 2147580622}
!5647 = !DILocation(line: 87, column: 1, scope: !5493)
!5648 = !{i64 2147580735, i64 2147580778, i64 2147580818}
!5649 = !DILocation(line: 88, column: 1, scope: !5493)
!5650 = !{i64 2147585040, i64 2147585083, i64 2147585123}
!5651 = !DILocation(line: 89, column: 1, scope: !5493)
!5652 = !{i64 2147585245, i64 2147585288, i64 2147585328}
!5653 = !DILocation(line: 90, column: 1, scope: !5493)
!5654 = !{i64 2147585429, i64 2147585472, i64 2147585512}
!5655 = !DILocation(line: 91, column: 1, scope: !5493)
!5656 = !{i64 2147585628, i64 2147585671, i64 2147585711}
!5657 = !DILocation(line: 92, column: 1, scope: !5493)
!5658 = !{i64 2147585848, i64 2147585891, i64 2147585931}
!5659 = !DILocation(line: 93, column: 1, scope: !5493)
!5660 = !{i64 2147586092, i64 2147586135, i64 2147586175}
!5661 = !DILocation(line: 94, column: 1, scope: !5493)
!5662 = !{i64 2147586324, i64 2147586367, i64 2147586407}
!5663 = !DILocation(line: 95, column: 1, scope: !5493)
!5664 = !{i64 2147586535, i64 2147586578, i64 2147586618}
!5665 = !DILocation(line: 96, column: 1, scope: !5493)
!5666 = !{i64 2147586701, i64 2147586744, i64 2147586784}
!5667 = !DILocation(line: 97, column: 1, scope: !5493)
!5668 = !{i64 2147586885, i64 2147586928, i64 2147586968}
!5669 = !DILocation(line: 98, column: 1, scope: !5493)
!5670 = !{i64 2147587075, i64 2147587118, i64 2147587158}
!5671 = !DILocation(line: 99, column: 1, scope: !5493)
!5672 = !{i64 2147587259, i64 2147587302, i64 2147587342}
!5673 = !DILocation(line: 100, column: 1, scope: !5493)
!5674 = !{i64 2147587473, i64 2147587516, i64 2147587556}
!5675 = !DILocation(line: 101, column: 1, scope: !5493)
!5676 = !{i64 2147587684, i64 2147587727, i64 2147587767}
!5677 = !DILocation(line: 102, column: 1, scope: !5493)
!5678 = !{i64 2147587907, i64 2147587950, i64 2147587990}
!5679 = !DILocation(line: 103, column: 1, scope: !5493)
!5680 = !{i64 2147588091, i64 2147588134, i64 2147588174}
!5681 = !DILocation(line: 104, column: 1, scope: !5493)
!5682 = !{i64 2147588257, i64 2147588300, i64 2147588340}
!5683 = !DILocation(line: 105, column: 1, scope: !5493)
!5684 = !{i64 2147588438, i64 2147588481, i64 2147588521}
!5685 = !DILocation(line: 106, column: 1, scope: !5493)
!5686 = !{i64 2147588643, i64 2147588686, i64 2147588726}
!5687 = !DILocation(line: 107, column: 1, scope: !5493)
!5688 = !{i64 2147588869, i64 2147588912, i64 2147588952}
!5689 = !DILocation(line: 108, column: 1, scope: !5493)
!5690 = !{i64 2147589086, i64 2147589129, i64 2147589169}
!5691 = !DILocation(line: 109, column: 1, scope: !5493)
!5692 = !{i64 2147589312, i64 2147589355, i64 2147589395}
!5693 = !DILocation(line: 110, column: 1, scope: !5493)
!5694 = !{i64 2147589508, i64 2147589551, i64 2147589591}
!5695 = !DILocation(line: 111, column: 1, scope: !5493)
!5696 = !{i64 2147589773, i64 2147589816, i64 2147589856}
!5697 = !DILocation(line: 112, column: 1, scope: !5493)
!5698 = !{i64 2147589987, i64 2147590030, i64 2147590070}
!5699 = !DILocation(line: 113, column: 1, scope: !5493)
!5700 = !{i64 2147590150, i64 2147590193, i64 2147590233}
!5701 = !DILocation(line: 114, column: 1, scope: !5493)
!5702 = !{i64 2147590337, i64 2147590380, i64 2147590420}
!5703 = !DILocation(line: 115, column: 1, scope: !5493)
!5704 = !{i64 2147590530, i64 2147590573, i64 2147590613}
!5705 = !DILocation(line: 116, column: 1, scope: !5493)
!5706 = !{i64 2147590712, i64 2147590755, i64 2147590795}
!5707 = !DILocation(line: 117, column: 1, scope: !5493)
!5708 = !{i64 2147590926, i64 2147590969, i64 2147591009}
!5709 = !DILocation(line: 118, column: 1, scope: !5493)
!5710 = !{i64 2147591125, i64 2147591168, i64 2147591208}
!5711 = !DILocation(line: 119, column: 1, scope: !5493)
!5712 = !{i64 2147591360, i64 2147591403, i64 2147591443}
!5713 = !DILocation(line: 120, column: 1, scope: !5493)
!5714 = !{i64 2147591610, i64 2147591653, i64 2147591693}
!5715 = !DILocation(line: 121, column: 1, scope: !5493)
!5716 = !{i64 2147591812, i64 2147591855, i64 2147591895}
!5717 = !DILocation(line: 122, column: 1, scope: !5493)
!5718 = !{i64 2147592035, i64 2147592078, i64 2147592118}
!5719 = !DILocation(line: 123, column: 1, scope: !5493)
!5720 = !{i64 2147592249, i64 2147592292, i64 2147592332}
!5721 = !DILocation(line: 124, column: 1, scope: !5493)
!5722 = !{i64 2147592493, i64 2147592536, i64 2147592576}
!5723 = !DILocation(line: 125, column: 1, scope: !5493)
!5724 = !{i64 2147592719, i64 2147592762, i64 2147592802}
!5725 = !DILocation(line: 126, column: 1, scope: !5493)
!5726 = !{i64 2147592978, i64 2147593021, i64 2147593061}
!5727 = !DILocation(line: 127, column: 1, scope: !5493)
!5728 = !{i64 2147593198, i64 2147593241, i64 2147593281}
!5729 = !DILocation(line: 128, column: 1, scope: !5493)
!5730 = !{i64 2147593430, i64 2147593473, i64 2147593513}
!5731 = !DILocation(line: 129, column: 1, scope: !5493)
!5732 = !{i64 2147593671, i64 2147593714, i64 2147593754}
!5733 = !DILocation(line: 130, column: 1, scope: !5493)
!5734 = !{i64 2147593912, i64 2147593955, i64 2147593995}
!5735 = !DILocation(line: 131, column: 1, scope: !5493)
!5736 = !{i64 2147598196, i64 2147598239, i64 2147598279}
!5737 = !DILocation(line: 132, column: 1, scope: !5493)
!5738 = !{i64 2147598413, i64 2147598456, i64 2147598496}
!5739 = !DILocation(line: 133, column: 1, scope: !5493)
!5740 = !{i64 2147598654, i64 2147598697, i64 2147598737}
!5741 = !DILocation(line: 134, column: 1, scope: !5493)
!5742 = !{i64 2147598883, i64 2147598926, i64 2147598966}
!5743 = !DILocation(line: 135, column: 1, scope: !5493)
!5744 = !{i64 2147599079, i64 2147599122, i64 2147599162}
!5745 = !DILocation(line: 136, column: 1, scope: !5493)
!5746 = !{i64 2147599291, i64 2147599334, i64 2147599374}
!5747 = !DILocation(line: 137, column: 1, scope: !5493)
!5748 = !{i64 2147599512, i64 2147599555, i64 2147599595}
!5749 = !DILocation(line: 138, column: 1, scope: !5493)
!5750 = !{i64 2147599726, i64 2147599769, i64 2147599809}
!5751 = !DILocation(line: 139, column: 1, scope: !5493)
!5752 = !{i64 2147599916, i64 2147599959, i64 2147599999}
!5753 = !DILocation(line: 140, column: 1, scope: !5493)
!5754 = !{i64 2147600115, i64 2147600158, i64 2147600198}
!5755 = !DILocation(line: 141, column: 1, scope: !5493)
!5756 = !{i64 2147600320, i64 2147600363, i64 2147600403}
!5757 = !DILocation(line: 142, column: 1, scope: !5493)
!5758 = !{i64 2147600540, i64 2147600583, i64 2147600623}
!5759 = !DILocation(line: 143, column: 1, scope: !5493)
!5760 = !{i64 2147600741, i64 2147600784, i64 2147600824}
!5761 = !DILocation(line: 144, column: 1, scope: !5493)
!5762 = !{i64 2147600940, i64 2147600983, i64 2147601023}
!5763 = !DILocation(line: 145, column: 1, scope: !5493)
!5764 = !{i64 2147601109, i64 2147601152, i64 2147601192}
!5765 = !DILocation(line: 146, column: 1, scope: !5493)
!5766 = !{i64 2147601293, i64 2147601336, i64 2147601376}
!5767 = !DILocation(line: 147, column: 1, scope: !5493)
!5768 = !{i64 2147601477, i64 2147601520, i64 2147601560}
!5769 = !DILocation(line: 148, column: 1, scope: !5493)
!5770 = !{i64 2147601664, i64 2147601707, i64 2147601747}
!5771 = !DILocation(line: 149, column: 1, scope: !5493)
!5772 = !{i64 2147601848, i64 2147601891, i64 2147601931}
!5773 = !DILocation(line: 150, column: 1, scope: !5493)
!5774 = !{i64 2147602086, i64 2147602129, i64 2147602169}
!5775 = !DILocation(line: 151, column: 1, scope: !5493)
!5776 = !{i64 2147602316, i64 2147602359, i64 2147602399}
!5777 = !DILocation(line: 152, column: 1, scope: !5493)
!5778 = !{i64 2147602527, i64 2147602570, i64 2147602610}
!5779 = !DILocation(line: 153, column: 1, scope: !5493)
!5780 = !{i64 2147602714, i64 2147602757, i64 2147602797}
!5781 = !DILocation(line: 154, column: 1, scope: !5493)
!5782 = !{i64 2147602910, i64 2147602953, i64 2147602993}
!5783 = !DILocation(line: 155, column: 1, scope: !5493)
!5784 = !{i64 2147603118, i64 2147603161, i64 2147603201}
!5785 = !DILocation(line: 156, column: 1, scope: !5493)
!5786 = !{i64 2147603330, i64 2147603373, i64 2147603413}
!5787 = !DILocation(line: 157, column: 1, scope: !5493)
!5788 = !{i64 2147603529, i64 2147603572, i64 2147603612}
!5789 = !DILocation(line: 158, column: 1, scope: !5493)
!5790 = !{i64 2147603767, i64 2147603810, i64 2147603850}
!5791 = !DILocation(line: 159, column: 1, scope: !5493)
!5792 = !{i64 2147603963, i64 2147604006, i64 2147604046}
!5793 = !DILocation(line: 160, column: 1, scope: !5493)
!5794 = !{i64 2147604165, i64 2147604208, i64 2147604248}
!5795 = !DILocation(line: 161, column: 1, scope: !5493)
!5796 = !{i64 2147604358, i64 2147604401, i64 2147604441}
!5797 = !DILocation(line: 162, column: 1, scope: !5493)
!5798 = !{i64 2147604592, i64 2147604635, i64 2147604675}
!5799 = !DILocation(line: 163, column: 1, scope: !5493)
!5800 = !{i64 2147604755, i64 2147604798, i64 2147604838}
!5801 = !DILocation(line: 164, column: 1, scope: !5493)
!5802 = !{i64 2147604994, i64 2147605037, i64 2147605077}
!5803 = !DILocation(line: 165, column: 1, scope: !5493)
!5804 = !{i64 2147605233, i64 2147605276, i64 2147605316}
!5805 = !DILocation(line: 166, column: 1, scope: !5493)
!5806 = !{i64 2147605469, i64 2147605512, i64 2147605552}
!5807 = !DILocation(line: 167, column: 1, scope: !5493)
!5808 = !{i64 2147605699, i64 2147605742, i64 2147605782}
!5809 = !DILocation(line: 168, column: 1, scope: !5493)
!5810 = !{i64 2147605886, i64 2147605929, i64 2147605969}
!5811 = !DILocation(line: 169, column: 1, scope: !5493)
!5812 = !{i64 2147606085, i64 2147606128, i64 2147606168}
!5813 = !DILocation(line: 170, column: 1, scope: !5493)
!5814 = !{i64 2147606356, i64 2147606399, i64 2147606439}
!5815 = !DILocation(line: 171, column: 1, scope: !5493)
!5816 = !{i64 2147606531, i64 2147606574, i64 2147606614}
!5817 = !DILocation(line: 172, column: 1, scope: !5493)
!5818 = !{i64 2147606765, i64 2147606808, i64 2147606848}
!5819 = !DILocation(line: 173, column: 1, scope: !5493)
!5820 = !{i64 2147606973, i64 2147607016, i64 2147607056}
!5821 = !DILocation(line: 174, column: 1, scope: !5493)
!5822 = !{i64 2147611252, i64 2147611295, i64 2147611335}
!5823 = !DILocation(line: 175, column: 1, scope: !5493)
!5824 = !{i64 2147611442, i64 2147611485, i64 2147611525}
!5825 = !DILocation(line: 176, column: 1, scope: !5493)
!5826 = !{i64 2147611638, i64 2147611681, i64 2147611721}
!5827 = !DILocation(line: 177, column: 1, scope: !5493)
!5828 = !{i64 2147611844, i64 2147611887, i64 2147611927}
!5829 = !DILocation(line: 178, column: 1, scope: !5493)
!5830 = !{i64 2147612049, i64 2147612092, i64 2147612132}
!5831 = !DILocation(line: 179, column: 1, scope: !5493)
!5832 = !{i64 2147612263, i64 2147612306, i64 2147612346}
!5833 = !DILocation(line: 180, column: 1, scope: !5493)
!5834 = !{i64 2147612489, i64 2147612532, i64 2147612572}
!5835 = !DILocation(line: 181, column: 1, scope: !5493)
!5836 = !{i64 2147612721, i64 2147612764, i64 2147612804}
!5837 = !DILocation(line: 182, column: 1, scope: !5493)
!5838 = !{i64 2147612902, i64 2147612945, i64 2147612985}
!5839 = !DILocation(line: 183, column: 1, scope: !5493)
!5840 = !{i64 2147613111, i64 2147613154, i64 2147613194}
!5841 = !DILocation(line: 184, column: 1, scope: !5493)
!5842 = !{i64 2147613289, i64 2147613332, i64 2147613372}
!5843 = !DILocation(line: 185, column: 1, scope: !5493)
!5844 = !{i64 2147613521, i64 2147613564, i64 2147613604}
!5845 = !DILocation(line: 186, column: 1, scope: !5493)
!5846 = !{i64 2147613723, i64 2147613766, i64 2147613806}
!5847 = !DILocation(line: 187, column: 1, scope: !5493)
!5848 = !{i64 2147613973, i64 2147614016, i64 2147614056}
!5849 = !DILocation(line: 188, column: 1, scope: !5493)
!5850 = !{i64 2147614211, i64 2147614254, i64 2147614294}
!5851 = !DILocation(line: 189, column: 1, scope: !5493)
!5852 = !{i64 2147614401, i64 2147614444, i64 2147614484}
!5853 = !DILocation(line: 190, column: 1, scope: !5493)
!5854 = !{i64 2147614615, i64 2147614658, i64 2147614698}
!5855 = !DILocation(line: 191, column: 1, scope: !5493)
!5856 = !{i64 2147614823, i64 2147614866, i64 2147614906}
!5857 = !DILocation(line: 192, column: 1, scope: !5493)
!5858 = !{i64 2147615013, i64 2147615056, i64 2147615096}
!5859 = !DILocation(line: 193, column: 1, scope: !5493)
!5860 = !{i64 2147615227, i64 2147615270, i64 2147615310}
!5861 = !DILocation(line: 194, column: 1, scope: !5493)
!5862 = !{i64 2147615489, i64 2147615532, i64 2147615572}
!5863 = !DILocation(line: 195, column: 1, scope: !5493)
!5864 = !{i64 2147615700, i64 2147615743, i64 2147615783}
!5865 = !DILocation(line: 196, column: 1, scope: !5493)
!5866 = !{i64 2147615944, i64 2147615987, i64 2147616027}
!5867 = !DILocation(line: 197, column: 1, scope: !5493)
!5868 = !{i64 2147616155, i64 2147616198, i64 2147616238}
!5869 = !DILocation(line: 198, column: 1, scope: !5493)
!5870 = !{i64 2147616384, i64 2147616427, i64 2147616467}
!5871 = !DILocation(line: 199, column: 1, scope: !5493)
!5872 = !{i64 2147616589, i64 2147616632, i64 2147616672}
!5873 = !DILocation(line: 200, column: 1, scope: !5493)
!5874 = !{i64 2147616785, i64 2147616828, i64 2147616868}
!5875 = !DILocation(line: 201, column: 1, scope: !5493)
!5876 = !{i64 2147617008, i64 2147617051, i64 2147617091}
!5877 = !DILocation(line: 202, column: 1, scope: !5493)
!5878 = !{i64 2147617171, i64 2147617214, i64 2147617254}
!5879 = !DILocation(line: 203, column: 1, scope: !5493)
!5880 = !{i64 2147617376, i64 2147617419, i64 2147617459}
!5881 = !DILocation(line: 204, column: 1, scope: !5493)
!5882 = !{i64 2147617596, i64 2147617639, i64 2147617679}
!5883 = !DILocation(line: 205, column: 1, scope: !5493)
!5884 = !{i64 2147617810, i64 2147617853, i64 2147617893}
!5885 = !DILocation(line: 206, column: 1, scope: !5493)
!5886 = !{i64 2147618024, i64 2147618067, i64 2147618107}
!5887 = !DILocation(line: 207, column: 1, scope: !5493)
!5888 = !{i64 2147618235, i64 2147618278, i64 2147618318}
!5889 = !DILocation(line: 208, column: 1, scope: !5493)
!5890 = !{i64 2147618428, i64 2147618471, i64 2147618511}
!5891 = !DILocation(line: 209, column: 1, scope: !5493)
!5892 = !{i64 2147618627, i64 2147618670, i64 2147618710}
!5893 = !DILocation(line: 210, column: 1, scope: !5493)
!5894 = !{i64 2147618799, i64 2147618842, i64 2147618882}
!5895 = !DILocation(line: 211, column: 1, scope: !5493)
!5896 = !{i64 2147618992, i64 2147619035, i64 2147619075}
!5897 = !DILocation(line: 212, column: 1, scope: !5493)
!5898 = !{i64 2147619188, i64 2147619231, i64 2147619271}
!5899 = !DILocation(line: 213, column: 1, scope: !5493)
!5900 = !{i64 2147619415, i64 2147619458, i64 2147619498}
!5901 = !DILocation(line: 214, column: 1, scope: !5493)
!5902 = !{i64 2147619632, i64 2147619675, i64 2147619715}
!5903 = !DILocation(line: 215, column: 1, scope: !5493)
!5904 = !{i64 2147619924, i64 2147619967, i64 2147620007}
!5905 = !DILocation(line: 216, column: 1, scope: !5493)
!5906 = !{i64 2147624217, i64 2147624260, i64 2147624300}
!5907 = !DILocation(line: 217, column: 1, scope: !5493)
!5908 = !{i64 2147624434, i64 2147624477, i64 2147624517}
!5909 = !DILocation(line: 218, column: 1, scope: !5493)
!5910 = !{i64 2147624651, i64 2147624694, i64 2147624734}
!5911 = !DILocation(line: 219, column: 1, scope: !5493)
!5912 = !{i64 2147624861, i64 2147624904, i64 2147624944}
!5913 = !DILocation(line: 220, column: 1, scope: !5493)
!5914 = !{i64 2147625066, i64 2147625109, i64 2147625149}
!5915 = !DILocation(line: 221, column: 1, scope: !5493)
!5916 = !{i64 2147625298, i64 2147625341, i64 2147625381}
!5917 = !DILocation(line: 222, column: 1, scope: !5493)
!5918 = !{i64 2147625506, i64 2147625549, i64 2147625589}
!5919 = !DILocation(line: 223, column: 1, scope: !5493)
!5920 = !{i64 2147625696, i64 2147625739, i64 2147625779}
!5921 = !DILocation(line: 224, column: 1, scope: !5493)
!5922 = !{i64 2147625922, i64 2147625965, i64 2147626005}
!5923 = !DILocation(line: 225, column: 1, scope: !5493)
!5924 = !{i64 2147626111, i64 2147626154, i64 2147626194}
!5925 = !DILocation(line: 226, column: 1, scope: !5493)
!5926 = !{i64 2147626382, i64 2147626425, i64 2147626465}
!5927 = !DILocation(line: 227, column: 1, scope: !5493)
!5928 = !{i64 2147626602, i64 2147626645, i64 2147626685}
!5929 = !DILocation(line: 228, column: 1, scope: !5493)
!5930 = !{i64 2147626855, i64 2147626898, i64 2147626938}
!5931 = !DILocation(line: 229, column: 1, scope: !5493)
!5932 = !{i64 2147627057, i64 2147627100, i64 2147627140}
!5933 = !DILocation(line: 230, column: 1, scope: !5493)
!5934 = !{i64 2147627289, i64 2147627332, i64 2147627372}
!5935 = !DILocation(line: 231, column: 1, scope: !5493)
!5936 = !{i64 2147627500, i64 2147627543, i64 2147627583}
!5937 = !DILocation(line: 232, column: 1, scope: !5493)
!5938 = !{i64 2147627690, i64 2147627733, i64 2147627773}
!5939 = !DILocation(line: 233, column: 1, scope: !5493)
!5940 = !{i64 2147627904, i64 2147627947, i64 2147627987}
!5941 = !DILocation(line: 234, column: 1, scope: !5493)
!5942 = !{i64 2147628103, i64 2147628146, i64 2147628186}
!5943 = !DILocation(line: 235, column: 1, scope: !5493)
!5944 = !{i64 2147628290, i64 2147628333, i64 2147628373}
!5945 = !DILocation(line: 236, column: 1, scope: !5493)
!5946 = !{i64 2147628498, i64 2147628541, i64 2147628581}
!5947 = !DILocation(line: 237, column: 1, scope: !5493)
!5948 = !{i64 2147628727, i64 2147628770, i64 2147628810}
!5949 = !DILocation(line: 238, column: 1, scope: !5493)
!5950 = !{i64 2147628929, i64 2147628972, i64 2147629012}
!5951 = !DILocation(line: 239, column: 1, scope: !5493)
!5952 = !{i64 2147629128, i64 2147629171, i64 2147629211}
!5953 = !DILocation(line: 240, column: 1, scope: !5493)
!5954 = !{i64 2147629345, i64 2147629388, i64 2147629428}
!5955 = !DILocation(line: 242, column: 1, scope: !5493)
!5956 = distinct !DISubprogram(name: "soc_port_pinmux_set", scope: !5957, file: !5957, line: 16, type: !5958, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3295, retainedNodes: !223)
!5957 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5958 = !DISubroutineType(types: !5959)
!5959 = !{!103, !5960, !173, !173}
!5960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5961, size: 32)
!5961 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2595, line: 367, baseType: !5962)
!5962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2595, line: 351, size: 1024, elements: !5963)
!5963 = !{!5964, !5974, !5984, !5994, !6004, !6014, !6024, !6034, !6044, !6055, !6065, !6083, !6084, !6096, !6110}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !5962, file: !2595, line: 352, baseType: !5965, size: 32)
!5965 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5966)
!5966 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2595, line: 48, baseType: !5967)
!5967 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 43, size: 32, elements: !5968)
!5968 = !{!5969, !5973}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !5967, file: !2595, line: 46, baseType: !5970, size: 32)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5967, file: !2595, line: 44, size: 32, elements: !5971)
!5971 = !{!5972}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !5970, file: !2595, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5967, file: !2595, line: 47, baseType: !173, size: 32)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !5962, file: !2595, line: 353, baseType: !5975, size: 32, offset: 32)
!5975 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5976)
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2595, line: 66, baseType: !5977)
!5977 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 61, size: 32, elements: !5978)
!5978 = !{!5979, !5983}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !5977, file: !2595, line: 64, baseType: !5980, size: 32)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5977, file: !2595, line: 62, size: 32, elements: !5981)
!5981 = !{!5982}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !5980, file: !2595, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5977, file: !2595, line: 65, baseType: !173, size: 32)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !5962, file: !2595, line: 354, baseType: !5985, size: 32, offset: 64)
!5985 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5986)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2595, line: 84, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 79, size: 32, elements: !5988)
!5988 = !{!5989, !5993}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !5987, file: !2595, line: 82, baseType: !5990, size: 32)
!5990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5987, file: !2595, line: 80, size: 32, elements: !5991)
!5991 = !{!5992}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !5990, file: !2595, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5987, file: !2595, line: 83, baseType: !173, size: 32)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !5962, file: !2595, line: 355, baseType: !5995, size: 32, offset: 96)
!5995 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5996)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2595, line: 102, baseType: !5997)
!5997 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 97, size: 32, elements: !5998)
!5998 = !{!5999, !6003}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !5997, file: !2595, line: 100, baseType: !6000, size: 32)
!6000 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5997, file: !2595, line: 98, size: 32, elements: !6001)
!6001 = !{!6002}
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6000, file: !2595, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5997, file: !2595, line: 101, baseType: !173, size: 32)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !5962, file: !2595, line: 356, baseType: !6005, size: 32, offset: 128)
!6005 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6006)
!6006 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2595, line: 120, baseType: !6007)
!6007 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 115, size: 32, elements: !6008)
!6008 = !{!6009, !6013}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6007, file: !2595, line: 118, baseType: !6010, size: 32)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6007, file: !2595, line: 116, size: 32, elements: !6011)
!6011 = !{!6012}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6010, file: !2595, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6007, file: !2595, line: 119, baseType: !173, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !5962, file: !2595, line: 357, baseType: !6015, size: 32, offset: 160)
!6015 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6016)
!6016 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2595, line: 138, baseType: !6017)
!6017 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 133, size: 32, elements: !6018)
!6018 = !{!6019, !6023}
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6017, file: !2595, line: 136, baseType: !6020, size: 32)
!6020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6017, file: !2595, line: 134, size: 32, elements: !6021)
!6021 = !{!6022}
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6020, file: !2595, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6017, file: !2595, line: 137, baseType: !173, size: 32)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !5962, file: !2595, line: 358, baseType: !6025, size: 32, offset: 192)
!6025 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6026)
!6026 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2595, line: 156, baseType: !6027)
!6027 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 151, size: 32, elements: !6028)
!6028 = !{!6029, !6033}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6027, file: !2595, line: 154, baseType: !6030, size: 32)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6027, file: !2595, line: 152, size: 32, elements: !6031)
!6031 = !{!6032}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6030, file: !2595, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6027, file: !2595, line: 155, baseType: !173, size: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !5962, file: !2595, line: 359, baseType: !6035, size: 32, offset: 224)
!6035 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6036)
!6036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2595, line: 174, baseType: !6037)
!6037 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 169, size: 32, elements: !6038)
!6038 = !{!6039, !6043}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6037, file: !2595, line: 172, baseType: !6040, size: 32)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6037, file: !2595, line: 170, size: 32, elements: !6041)
!6041 = !{!6042}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6040, file: !2595, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6037, file: !2595, line: 173, baseType: !173, size: 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !5962, file: !2595, line: 360, baseType: !6045, size: 32, offset: 256)
!6045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6046)
!6046 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6047)
!6047 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2595, line: 192, baseType: !6048)
!6048 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 187, size: 32, elements: !6049)
!6049 = !{!6050, !6054}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6048, file: !2595, line: 190, baseType: !6051, size: 32)
!6051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6048, file: !2595, line: 188, size: 32, elements: !6052)
!6052 = !{!6053}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6051, file: !2595, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6048, file: !2595, line: 191, baseType: !173, size: 32)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !5962, file: !2595, line: 361, baseType: !6056, size: 32, offset: 288)
!6056 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6057)
!6057 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2595, line: 210, baseType: !6058)
!6058 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 205, size: 32, elements: !6059)
!6059 = !{!6060, !6064}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6058, file: !2595, line: 208, baseType: !6061, size: 32)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6058, file: !2595, line: 206, size: 32, elements: !6062)
!6062 = !{!6063}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !6061, file: !2595, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6058, file: !2595, line: 209, baseType: !173, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !5962, file: !2595, line: 362, baseType: !6066, size: 32, offset: 320)
!6066 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6067)
!6067 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2595, line: 239, baseType: !6068)
!6068 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 223, size: 32, elements: !6069)
!6069 = !{!6070, !6082}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6068, file: !2595, line: 237, baseType: !6071, size: 32)
!6071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6068, file: !2595, line: 224, size: 32, elements: !6072)
!6072 = !{!6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !6071, file: !2595, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6071, file: !2595, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6071, file: !2595, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6071, file: !2595, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6071, file: !2595, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6071, file: !2595, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !6071, file: !2595, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !6071, file: !2595, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !6071, file: !2595, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6068, file: !2595, line: 238, baseType: !173, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !5962, file: !2595, line: 363, baseType: !661, size: 32, offset: 352)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !5962, file: !2595, line: 364, baseType: !6085, size: 128, offset: 384)
!6085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6086, size: 128, elements: !959)
!6086 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6087)
!6087 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2595, line: 275, baseType: !6088)
!6088 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 269, size: 8, elements: !6089)
!6089 = !{!6090, !6095}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6088, file: !2595, line: 273, baseType: !6091, size: 8)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6088, file: !2595, line: 270, size: 8, elements: !6092)
!6092 = !{!6093, !6094}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !6091, file: !2595, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !6091, file: !2595, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6088, file: !2595, line: 274, baseType: !156, size: 8)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !5962, file: !2595, line: 365, baseType: !6097, size: 256, offset: 512)
!6097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6098, size: 256, elements: !2744)
!6098 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6099)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2595, line: 333, baseType: !6100)
!6100 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2595, line: 323, size: 8, elements: !6101)
!6101 = !{!6102, !6109}
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6100, file: !2595, line: 331, baseType: !6103, size: 8)
!6103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6100, file: !2595, line: 324, size: 8, elements: !6104)
!6104 = !{!6105, !6106, !6107, !6108}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6103, file: !2595, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6103, file: !2595, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6103, file: !2595, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6103, file: !2595, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6100, file: !2595, line: 332, baseType: !156, size: 8)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !5962, file: !2595, line: 366, baseType: !2746, size: 256, offset: 768)
!6111 = !DILocalVariable(name: "pg", arg: 1, scope: !5956, file: !5957, line: 16, type: !5960)
!6112 = !DILocation(line: 16, column: 36, scope: !5956)
!6113 = !DILocalVariable(name: "pin", arg: 2, scope: !5956, file: !5957, line: 16, type: !173)
!6114 = !DILocation(line: 16, column: 49, scope: !5956)
!6115 = !DILocalVariable(name: "func", arg: 3, scope: !5956, file: !5957, line: 16, type: !173)
!6116 = !DILocation(line: 16, column: 63, scope: !5956)
!6117 = !DILocalVariable(name: "is_odd", scope: !5956, file: !5957, line: 18, type: !1035)
!6118 = !DILocation(line: 18, column: 7, scope: !5956)
!6119 = !DILocation(line: 18, column: 16, scope: !5956)
!6120 = !DILocation(line: 18, column: 20, scope: !5956)
!6121 = !DILocalVariable(name: "idx", scope: !5956, file: !5957, line: 19, type: !103)
!6122 = !DILocation(line: 19, column: 6, scope: !5956)
!6123 = !DILocation(line: 19, column: 12, scope: !5956)
!6124 = !DILocation(line: 19, column: 16, scope: !5956)
!6125 = !DILocation(line: 25, column: 6, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !5956, file: !5957, line: 25, column: 6)
!6127 = !DILocation(line: 25, column: 6, scope: !5956)
!6128 = !DILocation(line: 26, column: 29, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6126, file: !5957, line: 25, column: 14)
!6130 = !DILocation(line: 26, column: 3, scope: !6129)
!6131 = !DILocation(line: 26, column: 7, scope: !6129)
!6132 = !DILocation(line: 26, column: 12, scope: !6129)
!6133 = !DILocation(line: 26, column: 17, scope: !6129)
!6134 = !DILocation(line: 26, column: 21, scope: !6129)
!6135 = !DILocation(line: 26, column: 27, scope: !6129)
!6136 = !DILocation(line: 27, column: 2, scope: !6129)
!6137 = !DILocation(line: 28, column: 29, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6126, file: !5957, line: 27, column: 9)
!6139 = !DILocation(line: 28, column: 3, scope: !6138)
!6140 = !DILocation(line: 28, column: 7, scope: !6138)
!6141 = !DILocation(line: 28, column: 12, scope: !6138)
!6142 = !DILocation(line: 28, column: 17, scope: !6138)
!6143 = !DILocation(line: 28, column: 21, scope: !6138)
!6144 = !DILocation(line: 28, column: 27, scope: !6138)
!6145 = !DILocation(line: 30, column: 2, scope: !5956)
!6146 = !DILocation(line: 30, column: 6, scope: !5956)
!6147 = !DILocation(line: 30, column: 13, scope: !5956)
!6148 = !DILocation(line: 30, column: 18, scope: !5956)
!6149 = !DILocation(line: 30, column: 22, scope: !5956)
!6150 = !DILocation(line: 30, column: 29, scope: !5956)
!6151 = !DILocation(line: 32, column: 2, scope: !5956)
!6152 = distinct !DISubprogram(name: "soc_port_configure", scope: !5957, file: !5957, line: 35, type: !6153, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3295, retainedNodes: !223)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{null, !6155}
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6157)
!6157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6158, line: 75, size: 96, elements: !6159)
!6158 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/samd21/../common/soc_port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6159 = !{!6160, !6161, !6162}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6157, file: !6158, line: 76, baseType: !5960, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !6157, file: !6158, line: 77, baseType: !173, size: 32, offset: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6157, file: !6158, line: 78, baseType: !173, size: 32, offset: 64)
!6163 = !DILocalVariable(name: "pin", arg: 1, scope: !6152, file: !5957, line: 35, type: !6155)
!6164 = !DILocation(line: 35, column: 52, scope: !6152)
!6165 = !DILocalVariable(name: "pg", scope: !6152, file: !5957, line: 37, type: !5960)
!6166 = !DILocation(line: 37, column: 13, scope: !6152)
!6167 = !DILocation(line: 37, column: 18, scope: !6152)
!6168 = !DILocation(line: 37, column: 23, scope: !6152)
!6169 = !DILocalVariable(name: "flags", scope: !6152, file: !5957, line: 38, type: !173)
!6170 = !DILocation(line: 38, column: 11, scope: !6152)
!6171 = !DILocation(line: 38, column: 19, scope: !6152)
!6172 = !DILocation(line: 38, column: 24, scope: !6152)
!6173 = !DILocalVariable(name: "func", scope: !6152, file: !5957, line: 39, type: !173)
!6174 = !DILocation(line: 39, column: 11, scope: !6152)
!6175 = !DILocation(line: 39, column: 19, scope: !6152)
!6176 = !DILocation(line: 39, column: 24, scope: !6152)
!6177 = !DILocation(line: 39, column: 30, scope: !6152)
!6178 = !DILocation(line: 39, column: 52, scope: !6152)
!6179 = !DILocalVariable(name: "pincfg", scope: !6152, file: !5957, line: 40, type: !6099)
!6180 = !DILocation(line: 40, column: 19, scope: !6152)
!6181 = !DILocation(line: 43, column: 2, scope: !6152)
!6182 = !DILocation(line: 43, column: 6, scope: !6152)
!6183 = !DILocation(line: 43, column: 13, scope: !6152)
!6184 = !DILocation(line: 43, column: 18, scope: !6152)
!6185 = !DILocation(line: 43, column: 27, scope: !6152)
!6186 = !DILocation(line: 44, column: 25, scope: !6152)
!6187 = !DILocation(line: 44, column: 30, scope: !6152)
!6188 = !DILocation(line: 44, column: 22, scope: !6152)
!6189 = !DILocation(line: 44, column: 2, scope: !6152)
!6190 = !DILocation(line: 44, column: 6, scope: !6152)
!6191 = !DILocation(line: 44, column: 13, scope: !6152)
!6192 = !DILocation(line: 44, column: 17, scope: !6152)
!6193 = !DILocation(line: 45, column: 25, scope: !6152)
!6194 = !DILocation(line: 45, column: 30, scope: !6152)
!6195 = !DILocation(line: 45, column: 22, scope: !6152)
!6196 = !DILocation(line: 45, column: 2, scope: !6152)
!6197 = !DILocation(line: 45, column: 6, scope: !6152)
!6198 = !DILocation(line: 45, column: 13, scope: !6152)
!6199 = !DILocation(line: 45, column: 17, scope: !6152)
!6200 = !DILocation(line: 47, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6152, file: !5957, line: 47, column: 6)
!6202 = !DILocation(line: 47, column: 12, scope: !6201)
!6203 = !DILocation(line: 47, column: 6, scope: !6152)
!6204 = !DILocation(line: 48, column: 23, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !5957, line: 47, column: 38)
!6206 = !DILocation(line: 48, column: 27, scope: !6205)
!6207 = !DILocation(line: 48, column: 32, scope: !6205)
!6208 = !DILocation(line: 48, column: 39, scope: !6205)
!6209 = !DILocation(line: 48, column: 3, scope: !6205)
!6210 = !DILocation(line: 49, column: 3, scope: !6205)
!6211 = !DILocation(line: 52, column: 6, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6152, file: !5957, line: 52, column: 6)
!6213 = !DILocation(line: 52, column: 12, scope: !6212)
!6214 = !DILocation(line: 52, column: 6, scope: !6152)
!6215 = !DILocation(line: 53, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !5957, line: 53, column: 7)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !5957, line: 52, column: 53)
!6218 = !DILocation(line: 53, column: 13, scope: !6216)
!6219 = !DILocation(line: 53, column: 7, scope: !6217)
!6220 = !DILocation(line: 54, column: 27, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !5957, line: 53, column: 32)
!6222 = !DILocation(line: 54, column: 32, scope: !6221)
!6223 = !DILocation(line: 54, column: 24, scope: !6221)
!6224 = !DILocation(line: 54, column: 4, scope: !6221)
!6225 = !DILocation(line: 54, column: 8, scope: !6221)
!6226 = !DILocation(line: 54, column: 15, scope: !6221)
!6227 = !DILocation(line: 54, column: 19, scope: !6221)
!6228 = !DILocation(line: 55, column: 3, scope: !6221)
!6229 = !DILocation(line: 57, column: 10, scope: !6217)
!6230 = !DILocation(line: 57, column: 14, scope: !6217)
!6231 = !DILocation(line: 57, column: 21, scope: !6217)
!6232 = !DILocation(line: 58, column: 2, scope: !6217)
!6233 = !DILocation(line: 60, column: 6, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6152, file: !5957, line: 60, column: 6)
!6235 = !DILocation(line: 60, column: 12, scope: !6234)
!6236 = !DILocation(line: 60, column: 6, scope: !6152)
!6237 = !DILocation(line: 61, column: 10, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6234, file: !5957, line: 60, column: 37)
!6239 = !DILocation(line: 61, column: 14, scope: !6238)
!6240 = !DILocation(line: 61, column: 19, scope: !6238)
!6241 = !DILocation(line: 62, column: 2, scope: !6238)
!6242 = !DILocation(line: 64, column: 6, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6152, file: !5957, line: 64, column: 6)
!6244 = !DILocation(line: 64, column: 12, scope: !6243)
!6245 = !DILocation(line: 64, column: 6, scope: !6152)
!6246 = !DILocation(line: 65, column: 26, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6243, file: !5957, line: 64, column: 38)
!6248 = !DILocation(line: 65, column: 31, scope: !6247)
!6249 = !DILocation(line: 65, column: 23, scope: !6247)
!6250 = !DILocation(line: 65, column: 3, scope: !6247)
!6251 = !DILocation(line: 65, column: 7, scope: !6247)
!6252 = !DILocation(line: 65, column: 14, scope: !6247)
!6253 = !DILocation(line: 65, column: 18, scope: !6247)
!6254 = !DILocation(line: 66, column: 2, scope: !6247)
!6255 = !DILocation(line: 68, column: 6, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6152, file: !5957, line: 68, column: 6)
!6257 = !DILocation(line: 68, column: 12, scope: !6256)
!6258 = !DILocation(line: 68, column: 6, scope: !6152)
!6259 = !DILocation(line: 69, column: 10, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !5957, line: 68, column: 42)
!6261 = !DILocation(line: 69, column: 14, scope: !6260)
!6262 = !DILocation(line: 69, column: 21, scope: !6260)
!6263 = !DILocation(line: 70, column: 2, scope: !6260)
!6264 = !DILocation(line: 72, column: 2, scope: !6152)
!6265 = !DILocation(line: 72, column: 6, scope: !6152)
!6266 = !DILocation(line: 72, column: 13, scope: !6152)
!6267 = !DILocation(line: 72, column: 18, scope: !6152)
!6268 = !DILocation(line: 72, column: 27, scope: !6152)
!6269 = !DILocation(line: 73, column: 1, scope: !6152)
!6270 = distinct !DISubprogram(name: "soc_port_list_configure", scope: !5957, file: !5957, line: 75, type: !6271, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3295, retainedNodes: !223)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !6155, !32}
!6273 = !DILocalVariable(name: "pins", arg: 1, scope: !6270, file: !5957, line: 75, type: !6155)
!6274 = !DILocation(line: 75, column: 56, scope: !6270)
!6275 = !DILocalVariable(name: "size", arg: 2, scope: !6270, file: !5957, line: 76, type: !32)
!6276 = !DILocation(line: 76, column: 22, scope: !6270)
!6277 = !DILocalVariable(name: "i", scope: !6278, file: !5957, line: 78, type: !103)
!6278 = distinct !DILexicalBlock(scope: !6270, file: !5957, line: 78, column: 2)
!6279 = !DILocation(line: 78, column: 11, scope: !6278)
!6280 = !DILocation(line: 78, column: 7, scope: !6278)
!6281 = !DILocation(line: 78, column: 18, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6278, file: !5957, line: 78, column: 2)
!6283 = !DILocation(line: 78, column: 22, scope: !6282)
!6284 = !DILocation(line: 78, column: 20, scope: !6282)
!6285 = !DILocation(line: 78, column: 2, scope: !6278)
!6286 = !DILocation(line: 79, column: 23, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !5957, line: 78, column: 33)
!6288 = !DILocation(line: 79, column: 28, scope: !6287)
!6289 = !DILocation(line: 79, column: 3, scope: !6287)
!6290 = !DILocation(line: 80, column: 2, scope: !6287)
!6291 = !DILocation(line: 78, column: 29, scope: !6282)
!6292 = !DILocation(line: 78, column: 2, scope: !6282)
!6293 = distinct !{!6293, !6285, !6294}
!6294 = !DILocation(line: 80, column: 2, scope: !6278)
!6295 = !DILocation(line: 81, column: 1, scope: !6270)
!6296 = distinct !DISubprogram(name: "atmel_samd_init", scope: !1012, file: !1012, line: 175, type: !1019, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6297 = !DILocalVariable(name: "arg", arg: 1, scope: !6296, file: !1012, line: 175, type: !1021)
!6298 = !DILocation(line: 175, column: 49, scope: !6296)
!6299 = !DILocalVariable(name: "key", scope: !6296, file: !1012, line: 177, type: !173)
!6300 = !DILocation(line: 177, column: 11, scope: !6296)
!6301 = !DILocation(line: 179, column: 2, scope: !6296)
!6302 = !DILocalVariable(name: "key", scope: !6303, file: !6304, line: 44, type: !32)
!6303 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6304 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6305 = !DISubroutineType(types: !6306)
!6306 = !{!32}
!6307 = !DILocation(line: 44, column: 15, scope: !6303, inlinedAt: !6308)
!6308 = distinct !DILocation(line: 181, column: 8, scope: !6296)
!6309 = !DILocation(line: 47, column: 2, scope: !6303, inlinedAt: !6308)
!6310 = !{i64 1100924}
!6311 = !DILocation(line: 76, column: 9, scope: !6303, inlinedAt: !6308)
!6312 = !DILocation(line: 181, column: 6, scope: !6296)
!6313 = !DILocation(line: 183, column: 2, scope: !6296)
!6314 = !DILocation(line: 184, column: 2, scope: !6296)
!6315 = !DILocation(line: 185, column: 2, scope: !6296)
!6316 = !DILocation(line: 186, column: 2, scope: !6296)
!6317 = !DILocation(line: 187, column: 2, scope: !6296)
!6318 = !DILocation(line: 188, column: 2, scope: !6296)
!6319 = !DILocation(line: 189, column: 2, scope: !6296)
!6320 = !DILocation(line: 190, column: 2, scope: !6296)
!6321 = !DILocation(line: 197, column: 2, scope: !6296)
!6322 = !DILocalVariable(name: "key", arg: 1, scope: !6323, file: !6304, line: 84, type: !32)
!6323 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{null, !32}
!6326 = !DILocation(line: 84, column: 56, scope: !6323, inlinedAt: !6327)
!6327 = distinct !DILocation(line: 197, column: 2, scope: !6296)
!6328 = !DILocation(line: 87, column: 6, scope: !6329, inlinedAt: !6327)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !6304, line: 87, column: 6)
!6330 = !DILocation(line: 87, column: 10, scope: !6329, inlinedAt: !6327)
!6331 = !DILocation(line: 87, column: 6, scope: !6323, inlinedAt: !6327)
!6332 = !DILocation(line: 88, column: 3, scope: !6333, inlinedAt: !6327)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !6304, line: 87, column: 17)
!6334 = !DILocation(line: 90, column: 2, scope: !6323, inlinedAt: !6327)
!6335 = !{i64 1101788}
!6336 = !DILocation(line: 110, column: 1, scope: !6323, inlinedAt: !6327)
!6337 = !DILocation(line: 199, column: 2, scope: !6296)
!6338 = distinct !DISubprogram(name: "flash_waitstates_init", scope: !1012, file: !1012, line: 19, type: !253, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6339 = !DILocation(line: 22, column: 25, scope: !6338)
!6340 = !DILocation(line: 23, column: 1, scope: !6338)
!6341 = distinct !DISubprogram(name: "osc8m_init", scope: !1012, file: !1012, line: 133, type: !253, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6342 = !DILocation(line: 136, column: 27, scope: !6341)
!6343 = !DILocation(line: 137, column: 30, scope: !6341)
!6344 = !DILocation(line: 138, column: 1, scope: !6341)
!6345 = distinct !DISubprogram(name: "osc32k_init", scope: !1012, file: !1012, line: 56, type: !253, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6346 = !DILocalVariable(name: "fuse", scope: !6345, file: !1012, line: 59, type: !173)
!6347 = !DILocation(line: 59, column: 11, scope: !6345)
!6348 = !DILocation(line: 59, column: 18, scope: !6345)
!6349 = !DILocalVariable(name: "calib", scope: !6345, file: !1012, line: 60, type: !173)
!6350 = !DILocation(line: 60, column: 11, scope: !6345)
!6351 = !DILocation(line: 60, column: 20, scope: !6345)
!6352 = !DILocation(line: 60, column: 25, scope: !6345)
!6353 = !DILocation(line: 60, column: 49, scope: !6345)
!6354 = !DILocation(line: 66, column: 24, scope: !6345)
!6355 = !DILocation(line: 66, column: 52, scope: !6345)
!6356 = !DILocation(line: 67, column: 39, scope: !6345)
!6357 = !DILocation(line: 68, column: 31, scope: !6345)
!6358 = !DILocation(line: 66, column: 22, scope: !6345)
!6359 = !DILocation(line: 71, column: 2, scope: !6345)
!6360 = !DILocation(line: 71, column: 30, scope: !6345)
!6361 = !DILocation(line: 71, column: 9, scope: !6345)
!6362 = distinct !{!6362, !6359, !6363}
!6363 = !DILocation(line: 72, column: 2, scope: !6345)
!6364 = !DILocation(line: 73, column: 1, scope: !6345)
!6365 = distinct !DISubprogram(name: "xosc_init", scope: !1012, file: !1012, line: 30, type: !253, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6366 = !DILocation(line: 35, column: 1, scope: !6365)
!6367 = distinct !DISubprogram(name: "xosc32k_init", scope: !1012, file: !1012, line: 43, type: !253, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6368 = !DILocation(line: 46, column: 23, scope: !6367)
!6369 = !DILocation(line: 49, column: 30, scope: !6367)
!6370 = !DILocation(line: 51, column: 2, scope: !6367)
!6371 = !DILocation(line: 51, column: 30, scope: !6367)
!6372 = !DILocation(line: 51, column: 9, scope: !6367)
!6373 = distinct !{!6373, !6370, !6374}
!6374 = !DILocation(line: 52, column: 2, scope: !6367)
!6375 = !DILocation(line: 54, column: 1, scope: !6367)
!6376 = distinct !DISubprogram(name: "dfll_init", scope: !1012, file: !1012, line: 75, type: !253, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6377 = !DILocation(line: 78, column: 19, scope: !6376)
!6378 = !DILocation(line: 79, column: 2, scope: !6376)
!6379 = !DILocation(line: 84, column: 20, scope: !6376)
!6380 = !DILocation(line: 94, column: 2, scope: !6376)
!6381 = !DILocation(line: 97, column: 20, scope: !6376)
!6382 = !DILocation(line: 99, column: 2, scope: !6376)
!6383 = !DILocation(line: 101, column: 24, scope: !6376)
!6384 = !DILocation(line: 102, column: 2, scope: !6376)
!6385 = !DILocation(line: 102, column: 30, scope: !6376)
!6386 = !DILocation(line: 102, column: 9, scope: !6376)
!6387 = distinct !{!6387, !6384, !6388}
!6388 = !DILocation(line: 103, column: 2, scope: !6376)
!6389 = !DILocalVariable(name: "mul", scope: !6376, file: !1012, line: 105, type: !173)
!6390 = !DILocation(line: 105, column: 11, scope: !6376)
!6391 = !DILocation(line: 111, column: 11, scope: !6376)
!6392 = !DILocation(line: 110, column: 38, scope: !6376)
!6393 = !DILocation(line: 109, column: 23, scope: !6376)
!6394 = !DILocation(line: 112, column: 2, scope: !6376)
!6395 = !DILocation(line: 112, column: 30, scope: !6376)
!6396 = !DILocation(line: 112, column: 9, scope: !6376)
!6397 = distinct !{!6397, !6394, !6398}
!6398 = !DILocation(line: 113, column: 2, scope: !6376)
!6399 = !DILocation(line: 115, column: 24, scope: !6376)
!6400 = !DILocation(line: 120, column: 2, scope: !6376)
!6401 = !DILocation(line: 120, column: 30, scope: !6376)
!6402 = !DILocation(line: 120, column: 9, scope: !6376)
!6403 = distinct !{!6403, !6400, !6404}
!6404 = !DILocation(line: 121, column: 2, scope: !6376)
!6405 = !DILocation(line: 124, column: 31, scope: !6376)
!6406 = !DILocation(line: 126, column: 2, scope: !6376)
!6407 = !DILocation(line: 126, column: 30, scope: !6376)
!6408 = !DILocation(line: 126, column: 10, scope: !6376)
!6409 = !DILocation(line: 126, column: 39, scope: !6376)
!6410 = !DILocation(line: 126, column: 63, scope: !6376)
!6411 = !DILocation(line: 126, column: 42, scope: !6376)
!6412 = distinct !{!6412, !6406, !6413}
!6413 = !DILocation(line: 127, column: 2, scope: !6376)
!6414 = !DILocation(line: 129, column: 2, scope: !6376)
!6415 = !DILocation(line: 129, column: 30, scope: !6376)
!6416 = !DILocation(line: 129, column: 9, scope: !6376)
!6417 = distinct !{!6417, !6414, !6418}
!6418 = !DILocation(line: 130, column: 2, scope: !6376)
!6419 = !DILocation(line: 131, column: 1, scope: !6376)
!6420 = distinct !DISubprogram(name: "gclks_init", scope: !1012, file: !1012, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6421 = !DILocation(line: 143, column: 19, scope: !6420)
!6422 = !DILocation(line: 144, column: 2, scope: !6420)
!6423 = !DILocation(line: 146, column: 20, scope: !6420)
!6424 = !DILocation(line: 148, column: 2, scope: !6420)
!6425 = !DILocation(line: 151, column: 20, scope: !6420)
!6426 = !DILocation(line: 153, column: 2, scope: !6420)
!6427 = !DILocation(line: 156, column: 19, scope: !6420)
!6428 = !DILocation(line: 157, column: 2, scope: !6420)
!6429 = !DILocation(line: 159, column: 20, scope: !6420)
!6430 = !DILocation(line: 161, column: 2, scope: !6420)
!6431 = !DILocation(line: 162, column: 1, scope: !6420)
!6432 = distinct !DISubprogram(name: "dividers_init", scope: !1012, file: !1012, line: 164, type: !253, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6433 = !DILocation(line: 167, column: 17, scope: !6432)
!6434 = !DILocation(line: 168, column: 18, scope: !6432)
!6435 = !DILocation(line: 169, column: 18, scope: !6432)
!6436 = !DILocation(line: 170, column: 18, scope: !6432)
!6437 = !DILocation(line: 173, column: 1, scope: !6432)
!6438 = distinct !DISubprogram(name: "wait_gclk_synchronization", scope: !1012, file: !1012, line: 37, type: !253, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6439 = !DILocation(line: 39, column: 2, scope: !6438)
!6440 = !DILocation(line: 39, column: 26, scope: !6438)
!6441 = distinct !{!6441, !6439, !6442}
!6442 = !DILocation(line: 40, column: 2, scope: !6438)
!6443 = !DILocation(line: 41, column: 1, scope: !6438)
!6444 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6445, file: !6445, line: 57, type: !6446, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !223)
!6445 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6446 = !DISubroutineType(types: !6447)
!6447 = !{null, !32, !6448}
!6448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6449, size: 32)
!6449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6450)
!6450 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3370, line: 141, baseType: !6451)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3370, line: 97, size: 256, elements: !6452)
!6452 = !{!6453}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6451, file: !3370, line: 107, baseType: !6454, size: 256)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3370, line: 98, size: 256, elements: !6455)
!6455 = !{!6456, !6461, !6466, !6471, !6476, !6481, !6486, !6491}
!6456 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 99, baseType: !6457, size: 32)
!6457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 99, size: 32, elements: !6458)
!6458 = !{!6459, !6460}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6457, file: !3370, line: 99, baseType: !173, size: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6457, file: !3370, line: 99, baseType: !173, size: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 100, baseType: !6462, size: 32, offset: 32)
!6462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 100, size: 32, elements: !6463)
!6463 = !{!6464, !6465}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6462, file: !3370, line: 100, baseType: !173, size: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6462, file: !3370, line: 100, baseType: !173, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 101, baseType: !6467, size: 32, offset: 64)
!6467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 101, size: 32, elements: !6468)
!6468 = !{!6469, !6470}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6467, file: !3370, line: 101, baseType: !173, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6467, file: !3370, line: 101, baseType: !173, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 102, baseType: !6472, size: 32, offset: 96)
!6472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 102, size: 32, elements: !6473)
!6473 = !{!6474, !6475}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6472, file: !3370, line: 102, baseType: !173, size: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6472, file: !3370, line: 102, baseType: !173, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 103, baseType: !6477, size: 32, offset: 128)
!6477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 103, size: 32, elements: !6478)
!6478 = !{!6479, !6480}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6477, file: !3370, line: 103, baseType: !173, size: 32)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6477, file: !3370, line: 103, baseType: !173, size: 32)
!6481 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 104, baseType: !6482, size: 32, offset: 160)
!6482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 104, size: 32, elements: !6483)
!6483 = !{!6484, !6485}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6482, file: !3370, line: 104, baseType: !173, size: 32)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6482, file: !3370, line: 104, baseType: !173, size: 32)
!6486 = !DIDerivedType(tag: DW_TAG_member, scope: !6454, file: !3370, line: 105, baseType: !6487, size: 32, offset: 192)
!6487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6454, file: !3370, line: 105, size: 32, elements: !6488)
!6488 = !{!6489, !6490}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6487, file: !3370, line: 105, baseType: !173, size: 32)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6487, file: !3370, line: 105, baseType: !173, size: 32)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6454, file: !3370, line: 106, baseType: !173, size: 32, offset: 224)
!6492 = !DILocalVariable(name: "reason", arg: 1, scope: !6444, file: !6445, line: 57, type: !32)
!6493 = !DILocation(line: 57, column: 37, scope: !6444)
!6494 = !DILocalVariable(name: "esf", arg: 2, scope: !6444, file: !6445, line: 57, type: !6448)
!6495 = !DILocation(line: 57, column: 65, scope: !6444)
!6496 = !DILocation(line: 60, column: 6, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6444, file: !6445, line: 60, column: 6)
!6498 = !DILocation(line: 60, column: 10, scope: !6497)
!6499 = !DILocation(line: 60, column: 6, scope: !6444)
!6500 = !DILocation(line: 61, column: 12, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !6445, line: 60, column: 19)
!6502 = !DILocation(line: 61, column: 3, scope: !6501)
!6503 = !DILocation(line: 62, column: 2, scope: !6501)
!6504 = !DILocation(line: 63, column: 16, scope: !6444)
!6505 = !DILocation(line: 63, column: 24, scope: !6444)
!6506 = !DILocation(line: 63, column: 2, scope: !6444)
!6507 = !DILocation(line: 64, column: 1, scope: !6444)
!6508 = distinct !DISubprogram(name: "esf_dump", scope: !6445, file: !6445, line: 20, type: !6509, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !223)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !6448}
!6511 = !DILocalVariable(name: "esf", arg: 1, scope: !6508, file: !6445, line: 20, type: !6448)
!6512 = !DILocation(line: 20, column: 42, scope: !6508)
!6513 = !DILocation(line: 22, column: 2, scope: !6508)
!6514 = !DILocation(line: 22, column: 2, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !6445, line: 22, column: 2)
!6516 = distinct !DILexicalBlock(scope: !6517, file: !6445, line: 22, column: 2)
!6517 = distinct !DILexicalBlock(scope: !6508, file: !6445, line: 22, column: 2)
!6518 = !DILocation(line: 24, column: 2, scope: !6508)
!6519 = !DILocation(line: 24, column: 2, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !6445, line: 24, column: 2)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !6445, line: 24, column: 2)
!6522 = distinct !DILexicalBlock(scope: !6508, file: !6445, line: 24, column: 2)
!6523 = !DILocation(line: 26, column: 2, scope: !6508)
!6524 = !DILocation(line: 26, column: 2, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !6445, line: 26, column: 2)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6445, line: 26, column: 2)
!6527 = distinct !DILexicalBlock(scope: !6508, file: !6445, line: 26, column: 2)
!6528 = !DILocation(line: 53, column: 2, scope: !6508)
!6529 = !DILocation(line: 53, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !6445, line: 53, column: 2)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !6445, line: 53, column: 2)
!6532 = distinct !DILexicalBlock(scope: !6508, file: !6445, line: 53, column: 2)
!6533 = !DILocation(line: 55, column: 1, scope: !6508)
!6534 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6445, file: !6445, line: 82, type: !6535, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !223)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{null, !6448, !6537}
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 32)
!6538 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !6539)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6540)
!6540 = !{!6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6549}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6539, file: !190, line: 26, baseType: !173, size: 32)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6539, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6539, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6539, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6539, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6539, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6539, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6539, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6539, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6550 = !DILocalVariable(name: "esf", arg: 1, scope: !6534, file: !6445, line: 82, type: !6448)
!6551 = !DILocation(line: 82, column: 43, scope: !6534)
!6552 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6534, file: !6445, line: 82, type: !6537)
!6553 = !DILocation(line: 82, column: 65, scope: !6534)
!6554 = !DILocation(line: 85, column: 2, scope: !6534)
!6555 = !DILocalVariable(name: "reason", scope: !6534, file: !6445, line: 88, type: !32)
!6556 = !DILocation(line: 88, column: 15, scope: !6534)
!6557 = !DILocation(line: 88, column: 24, scope: !6534)
!6558 = !DILocation(line: 88, column: 29, scope: !6534)
!6559 = !DILocation(line: 88, column: 35, scope: !6534)
!6560 = !DILocation(line: 108, column: 20, scope: !6534)
!6561 = !DILocation(line: 108, column: 28, scope: !6534)
!6562 = !DILocation(line: 108, column: 2, scope: !6534)
!6563 = !DILocation(line: 131, column: 1, scope: !6534)
!6564 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6445, file: !6445, line: 133, type: !6565, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !223)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{null, !102}
!6567 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6564, file: !6445, line: 133, type: !102)
!6568 = !DILocation(line: 133, column: 44, scope: !6564)
!6569 = !DILocalVariable(name: "ssf_contents", scope: !6564, file: !6445, line: 135, type: !742)
!6570 = !DILocation(line: 135, column: 12, scope: !6564)
!6571 = !DILocation(line: 135, column: 27, scope: !6564)
!6572 = !DILocalVariable(name: "oops_esf", scope: !6564, file: !6445, line: 136, type: !6450)
!6573 = !DILocation(line: 136, column: 15, scope: !6564)
!6574 = !DILocation(line: 139, column: 22, scope: !6564)
!6575 = !DILocation(line: 139, column: 11, scope: !6564)
!6576 = !DILocation(line: 139, column: 17, scope: !6564)
!6577 = !DILocation(line: 139, column: 20, scope: !6564)
!6578 = !DILocation(line: 141, column: 2, scope: !6564)
!6579 = !DILocation(line: 142, column: 2, scope: !6564)
!6580 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6581, file: !6581, line: 40, type: !6324, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6581 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6582 = !DILocalVariable(name: "irq", arg: 1, scope: !6580, file: !6581, line: 40, type: !32)
!6583 = !DILocation(line: 40, column: 35, scope: !6580)
!6584 = !DILocation(line: 42, column: 28, scope: !6580)
!6585 = !DILocation(line: 42, column: 2, scope: !6580)
!6586 = !DILocation(line: 43, column: 1, scope: !6580)
!6587 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !2509, file: !2509, line: 741, type: !6588, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{null, !3303}
!6590 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6587, file: !2509, line: 741, type: !3303)
!6591 = !DILocation(line: 741, column: 49, scope: !6587)
!6592 = !DILocation(line: 743, column: 17, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6587, file: !2509, line: 743, column: 7)
!6594 = !DILocation(line: 743, column: 23, scope: !6593)
!6595 = !DILocation(line: 743, column: 7, scope: !6587)
!6596 = !DILocation(line: 745, column: 5, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6593, file: !2509, line: 744, column: 3)
!6598 = !{i64 2149784715}
!6599 = !DILocation(line: 746, column: 52, scope: !6597)
!6600 = !DILocation(line: 746, column: 58, scope: !6597)
!6601 = !DILocation(line: 746, column: 37, scope: !6597)
!6602 = !DILocation(line: 746, column: 20, scope: !6597)
!6603 = !DILocation(line: 747, column: 5, scope: !6597)
!6604 = !{i64 2149784829}
!6605 = !DILocation(line: 748, column: 3, scope: !6597)
!6606 = !DILocation(line: 749, column: 1, scope: !6587)
!6607 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6581, file: !6581, line: 45, type: !6324, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6608 = !DILocalVariable(name: "irq", arg: 1, scope: !6607, file: !6581, line: 45, type: !32)
!6609 = !DILocation(line: 45, column: 36, scope: !6607)
!6610 = !DILocation(line: 47, column: 29, scope: !6607)
!6611 = !DILocation(line: 47, column: 2, scope: !6607)
!6612 = !DILocation(line: 48, column: 1, scope: !6607)
!6613 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !2509, file: !2509, line: 779, type: !6588, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6614 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6613, file: !2509, line: 779, type: !3303)
!6615 = !DILocation(line: 779, column: 50, scope: !6613)
!6616 = !DILocation(line: 781, column: 17, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6613, file: !2509, line: 781, column: 7)
!6618 = !DILocation(line: 781, column: 23, scope: !6617)
!6619 = !DILocation(line: 781, column: 7, scope: !6613)
!6620 = !DILocation(line: 783, column: 52, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !2509, line: 782, column: 3)
!6622 = !DILocation(line: 783, column: 58, scope: !6621)
!6623 = !DILocation(line: 783, column: 37, scope: !6621)
!6624 = !DILocation(line: 783, column: 20, scope: !6621)
!6625 = !DILocation(line: 271, column: 3, scope: !6626, inlinedAt: !6628)
!6626 = distinct !DISubprogram(name: "__DSB", scope: !6627, file: !6627, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6627 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6628 = distinct !DILocation(line: 784, column: 5, scope: !6621)
!6629 = !{i64 2244654}
!6630 = !DILocation(line: 260, column: 3, scope: !6631, inlinedAt: !6632)
!6631 = distinct !DISubprogram(name: "__ISB", scope: !6627, file: !6627, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6632 = distinct !DILocation(line: 785, column: 5, scope: !6621)
!6633 = !{i64 2244371}
!6634 = !DILocation(line: 786, column: 3, scope: !6621)
!6635 = !DILocation(line: 787, column: 1, scope: !6613)
!6636 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6581, file: !6581, line: 50, type: !6637, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!103, !32}
!6639 = !DILocalVariable(name: "irq", arg: 1, scope: !6636, file: !6581, line: 50, type: !32)
!6640 = !DILocation(line: 50, column: 38, scope: !6636)
!6641 = !DILocation(line: 52, column: 20, scope: !6636)
!6642 = !DILocation(line: 52, column: 9, scope: !6636)
!6643 = !DILocation(line: 52, column: 41, scope: !6636)
!6644 = !DILocation(line: 52, column: 39, scope: !6636)
!6645 = !DILocation(line: 52, column: 2, scope: !6636)
!6646 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6581, file: !6581, line: 64, type: !6647, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{null, !32, !32, !173}
!6649 = !DILocalVariable(name: "irq", arg: 1, scope: !6646, file: !6581, line: 64, type: !32)
!6650 = !DILocation(line: 64, column: 42, scope: !6646)
!6651 = !DILocalVariable(name: "prio", arg: 2, scope: !6646, file: !6581, line: 64, type: !32)
!6652 = !DILocation(line: 64, column: 60, scope: !6646)
!6653 = !DILocalVariable(name: "flags", arg: 3, scope: !6646, file: !6581, line: 64, type: !173)
!6654 = !DILocation(line: 64, column: 75, scope: !6646)
!6655 = !DILocation(line: 83, column: 8, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6581, line: 82, column: 9)
!6657 = distinct !DILexicalBlock(scope: !6646, file: !6581, line: 76, column: 6)
!6658 = !DILocation(line: 95, column: 30, scope: !6646)
!6659 = !DILocation(line: 95, column: 35, scope: !6646)
!6660 = !DILocation(line: 95, column: 2, scope: !6646)
!6661 = !DILocation(line: 96, column: 1, scope: !6646)
!6662 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2509, file: !2509, line: 850, type: !6663, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{null, !3303, !173}
!6665 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6662, file: !2509, line: 850, type: !3303)
!6666 = !DILocation(line: 850, column: 51, scope: !6662)
!6667 = !DILocalVariable(name: "priority", arg: 2, scope: !6662, file: !2509, line: 850, type: !173)
!6668 = !DILocation(line: 850, column: 66, scope: !6662)
!6669 = !DILocation(line: 852, column: 17, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6662, file: !2509, line: 852, column: 7)
!6671 = !DILocation(line: 852, column: 23, scope: !6670)
!6672 = !DILocation(line: 852, column: 7, scope: !6662)
!6673 = !DILocation(line: 854, column: 53, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6670, file: !2509, line: 853, column: 3)
!6675 = !DILocation(line: 854, column: 44, scope: !6674)
!6676 = !DILocation(line: 854, column: 83, scope: !6674)
!6677 = !DILocation(line: 854, column: 80, scope: !6674)
!6678 = !DILocation(line: 854, column: 71, scope: !6674)
!6679 = !DILocation(line: 854, column: 69, scope: !6674)
!6680 = !DILocation(line: 855, column: 11, scope: !6674)
!6681 = !DILocation(line: 855, column: 20, scope: !6674)
!6682 = !DILocation(line: 855, column: 48, scope: !6674)
!6683 = !DILocation(line: 855, column: 71, scope: !6674)
!6684 = !DILocation(line: 855, column: 68, scope: !6674)
!6685 = !DILocation(line: 854, column: 102, scope: !6674)
!6686 = !DILocation(line: 854, column: 14, scope: !6674)
!6687 = !DILocation(line: 854, column: 5, scope: !6674)
!6688 = !DILocation(line: 854, column: 30, scope: !6674)
!6689 = !DILocation(line: 856, column: 3, scope: !6674)
!6690 = !DILocation(line: 859, column: 53, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6670, file: !2509, line: 858, column: 3)
!6692 = !DILocation(line: 859, column: 44, scope: !6691)
!6693 = !DILocation(line: 859, column: 83, scope: !6691)
!6694 = !DILocation(line: 859, column: 80, scope: !6691)
!6695 = !DILocation(line: 859, column: 71, scope: !6691)
!6696 = !DILocation(line: 859, column: 69, scope: !6691)
!6697 = !DILocation(line: 860, column: 11, scope: !6691)
!6698 = !DILocation(line: 860, column: 20, scope: !6691)
!6699 = !DILocation(line: 860, column: 48, scope: !6691)
!6700 = !DILocation(line: 860, column: 71, scope: !6691)
!6701 = !DILocation(line: 860, column: 68, scope: !6691)
!6702 = !DILocation(line: 859, column: 102, scope: !6691)
!6703 = !DILocation(line: 859, column: 14, scope: !6691)
!6704 = !DILocation(line: 859, column: 5, scope: !6691)
!6705 = !DILocation(line: 859, column: 30, scope: !6691)
!6706 = !DILocation(line: 862, column: 1, scope: !6662)
!6707 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6581, file: !6581, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3299, retainedNodes: !223)
!6708 = !DILocalVariable(name: "unused", arg: 1, scope: !6707, file: !6581, line: 155, type: !13)
!6709 = !DILocation(line: 155, column: 33, scope: !6707)
!6710 = !DILocation(line: 157, column: 2, scope: !6707)
!6711 = !DILocation(line: 159, column: 2, scope: !6707)
!6712 = !DILocation(line: 160, column: 1, scope: !6707)
!6713 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6714, file: !6714, line: 87, type: !253, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3331, retainedNodes: !223)
!6714 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6715 = !DILocation(line: 89, column: 2, scope: !6713)
!6716 = !DILocation(line: 90, column: 2, scope: !6713)
!6717 = !DILocation(line: 91, column: 1, scope: !6713)
!6718 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6719, file: !6719, line: 256, type: !253, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3333, retainedNodes: !223)
!6719 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6720 = !DILocation(line: 258, column: 2, scope: !6718)
!6721 = !DILocation(line: 262, column: 2, scope: !6718)
!6722 = !DILocation(line: 263, column: 2, scope: !6718)
!6723 = !DILocation(line: 267, column: 2, scope: !6718)
!6724 = !DILocation(line: 268, column: 2, scope: !6718)
!6725 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6719, file: !6719, line: 53, type: !253, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3333, retainedNodes: !223)
!6726 = !DILocation(line: 55, column: 12, scope: !6725)
!6727 = !DILocation(line: 271, column: 3, scope: !6728, inlinedAt: !6729)
!6728 = distinct !DISubprogram(name: "__DSB", scope: !6627, file: !6627, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3333, retainedNodes: !223)
!6729 = distinct !DILocation(line: 56, column: 2, scope: !6725)
!6730 = !{i64 2280428}
!6731 = !DILocation(line: 260, column: 3, scope: !6732, inlinedAt: !6733)
!6732 = distinct !DISubprogram(name: "__ISB", scope: !6627, file: !6627, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3333, retainedNodes: !223)
!6733 = distinct !DILocation(line: 57, column: 2, scope: !6725)
!6734 = !{i64 2280145}
!6735 = !DILocation(line: 58, column: 1, scope: !6725)
!6736 = distinct !DISubprogram(name: "arch_swap", scope: !6737, file: !6737, line: 33, type: !6637, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3349, retainedNodes: !223)
!6737 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6738 = !DILocalVariable(name: "key", arg: 1, scope: !6736, file: !6737, line: 33, type: !32)
!6739 = !DILocation(line: 33, column: 28, scope: !6736)
!6740 = !DILocation(line: 36, column: 27, scope: !6736)
!6741 = !DILocation(line: 36, column: 2, scope: !6736)
!6742 = !DILocation(line: 36, column: 12, scope: !6736)
!6743 = !DILocation(line: 36, column: 17, scope: !6736)
!6744 = !DILocation(line: 36, column: 25, scope: !6736)
!6745 = !DILocation(line: 37, column: 37, scope: !6736)
!6746 = !DILocation(line: 37, column: 2, scope: !6736)
!6747 = !DILocation(line: 37, column: 12, scope: !6736)
!6748 = !DILocation(line: 37, column: 17, scope: !6736)
!6749 = !DILocation(line: 37, column: 35, scope: !6736)
!6750 = !DILocation(line: 41, column: 12, scope: !6736)
!6751 = !DILocalVariable(name: "key", arg: 1, scope: !6752, file: !6304, line: 84, type: !32)
!6752 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3349, retainedNodes: !223)
!6753 = !DILocation(line: 84, column: 56, scope: !6752, inlinedAt: !6754)
!6754 = distinct !DILocation(line: 44, column: 2, scope: !6736)
!6755 = !DILocation(line: 87, column: 6, scope: !6756, inlinedAt: !6754)
!6756 = distinct !DILexicalBlock(scope: !6752, file: !6304, line: 87, column: 6)
!6757 = !DILocation(line: 87, column: 10, scope: !6756, inlinedAt: !6754)
!6758 = !DILocation(line: 87, column: 6, scope: !6752, inlinedAt: !6754)
!6759 = !DILocation(line: 88, column: 3, scope: !6760, inlinedAt: !6754)
!6760 = distinct !DILexicalBlock(scope: !6756, file: !6304, line: 87, column: 17)
!6761 = !DILocation(line: 90, column: 2, scope: !6752, inlinedAt: !6754)
!6762 = !{i64 1423239}
!6763 = !DILocation(line: 110, column: 1, scope: !6752, inlinedAt: !6754)
!6764 = !DILocation(line: 53, column: 9, scope: !6736)
!6765 = !DILocation(line: 53, column: 19, scope: !6736)
!6766 = !DILocation(line: 53, column: 24, scope: !6736)
!6767 = !DILocation(line: 53, column: 2, scope: !6736)
!6768 = distinct !DISubprogram(name: "arch_new_thread", scope: !6769, file: !6769, line: 56, type: !6770, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3365, retainedNodes: !223)
!6769 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6770 = !DISubroutineType(types: !6771)
!6771 = !{null, !6772, !6866, !2801, !240, !102, !102, !102}
!6772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6773, size: 32)
!6773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !6774)
!6774 = !{!6775, !6833, !6845, !6846, !6847, !6848, !6861}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6773, file: !114, line: 247, baseType: !6776, size: 384)
!6776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !6777)
!6777 = !{!6778, !6802, !6809, !6810, !6811, !6820, !6821, !6822}
!6778 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !114, line: 60, baseType: !6779, size: 64)
!6779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !114, line: 60, size: 64, elements: !6780)
!6780 = !{!6781, !6796}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6779, file: !114, line: 61, baseType: !6782, size: 64)
!6782 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !6783)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !6784)
!6784 = !{!6785, !6791}
!6785 = !DIDerivedType(tag: DW_TAG_member, scope: !6783, file: !124, line: 38, baseType: !6786, size: 32)
!6786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6783, file: !124, line: 38, size: 32, elements: !6787)
!6787 = !{!6788, !6790}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6786, file: !124, line: 39, baseType: !6789, size: 32)
!6789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6783, size: 32)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6786, file: !124, line: 40, baseType: !6789, size: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, scope: !6783, file: !124, line: 42, baseType: !6792, size: 32, offset: 32)
!6792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6783, file: !124, line: 42, size: 32, elements: !6793)
!6793 = !{!6794, !6795}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6792, file: !124, line: 43, baseType: !6789, size: 32)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6792, file: !124, line: 44, baseType: !6789, size: 32)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6779, file: !114, line: 62, baseType: !6797, size: 64)
!6797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !6798)
!6798 = !{!6799}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6797, file: !140, line: 50, baseType: !6800, size: 64)
!6800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6801, size: 64, elements: !145)
!6801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6797, size: 32)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6776, file: !114, line: 68, baseType: !6803, size: 32, offset: 64)
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6804, size: 32)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !6805)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !6806)
!6806 = !{!6807}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6805, file: !150, line: 232, baseType: !6808, size: 64)
!6808 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !6783)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6776, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6776, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!6811 = !DIDerivedType(tag: DW_TAG_member, scope: !6776, file: !114, line: 90, baseType: !6812, size: 16, offset: 112)
!6812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6776, file: !114, line: 90, size: 16, elements: !6813)
!6813 = !{!6814, !6819}
!6814 = !DIDerivedType(tag: DW_TAG_member, scope: !6812, file: !114, line: 91, baseType: !6815, size: 16)
!6815 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6812, file: !114, line: 91, size: 16, elements: !6816)
!6816 = !{!6817, !6818}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6815, file: !114, line: 96, baseType: !166, size: 8)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6815, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6812, file: !114, line: 100, baseType: !170, size: 16)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6776, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6776, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6776, file: !114, line: 131, baseType: !6823, size: 192, offset: 192)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !6824)
!6824 = !{!6825, !6826, !6832}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6823, file: !150, line: 245, baseType: !6782, size: 64)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6823, file: !150, line: 246, baseType: !6827, size: 32, offset: 64)
!6827 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !6828)
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 32)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{null, !6831}
!6831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6823, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6773, file: !114, line: 250, baseType: !6834, size: 288, offset: 384)
!6834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6835)
!6835 = !{!6836, !6837, !6838, !6839, !6840, !6841, !6842, !6843, !6844}
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6834, file: !190, line: 26, baseType: !173, size: 32)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6834, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6834, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6834, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6834, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6834, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6834, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6834, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6834, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6773, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6773, file: !114, line: 256, baseType: !6804, size: 64, offset: 704)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6773, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6773, file: !114, line: 325, baseType: !6849, size: 32, offset: 800)
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 32)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !6851)
!6851 = !{!6852, !6858, !6859}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6850, file: !109, line: 5074, baseType: !6853, size: 96)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !6854)
!6854 = !{!6855, !6856, !6857}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6853, file: !210, line: 57, baseType: !213, size: 32)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6853, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6853, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6850, file: !109, line: 5075, baseType: !6804, size: 64, offset: 96)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6850, file: !109, line: 5076, baseType: !6860, offset: 160)
!6860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6773, file: !114, line: 343, baseType: !6862, size: 64, offset: 832)
!6862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !6863)
!6863 = !{!6864, !6865}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6862, file: !190, line: 63, baseType: !173, size: 32)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6862, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!6866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6867, size: 32)
!6867 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !6868)
!6868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !6869)
!6869 = !{!6870}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6868, file: !234, line: 48, baseType: !237, size: 8)
!6871 = !DILocalVariable(name: "thread", arg: 1, scope: !6768, file: !6769, line: 56, type: !6772)
!6872 = !DILocation(line: 56, column: 39, scope: !6768)
!6873 = !DILocalVariable(name: "stack", arg: 2, scope: !6768, file: !6769, line: 56, type: !6866)
!6874 = !DILocation(line: 56, column: 65, scope: !6768)
!6875 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6768, file: !6769, line: 57, type: !2801)
!6876 = !DILocation(line: 57, column: 14, scope: !6768)
!6877 = !DILocalVariable(name: "entry", arg: 4, scope: !6768, file: !6769, line: 57, type: !240)
!6878 = !DILocation(line: 57, column: 42, scope: !6768)
!6879 = !DILocalVariable(name: "p1", arg: 5, scope: !6768, file: !6769, line: 58, type: !102)
!6880 = !DILocation(line: 58, column: 14, scope: !6768)
!6881 = !DILocalVariable(name: "p2", arg: 6, scope: !6768, file: !6769, line: 58, type: !102)
!6882 = !DILocation(line: 58, column: 24, scope: !6768)
!6883 = !DILocalVariable(name: "p3", arg: 7, scope: !6768, file: !6769, line: 58, type: !102)
!6884 = !DILocation(line: 58, column: 34, scope: !6768)
!6885 = !DILocalVariable(name: "iframe", scope: !6768, file: !6769, line: 60, type: !3368)
!6886 = !DILocation(line: 60, column: 21, scope: !6768)
!6887 = !DILocation(line: 85, column: 11, scope: !6768)
!6888 = !DILocation(line: 85, column: 9, scope: !6768)
!6889 = !DILocation(line: 93, column: 2, scope: !6768)
!6890 = !DILocation(line: 93, column: 10, scope: !6768)
!6891 = !DILocation(line: 93, column: 13, scope: !6768)
!6892 = !DILocation(line: 98, column: 2, scope: !6768)
!6893 = !DILocation(line: 98, column: 10, scope: !6768)
!6894 = !DILocation(line: 98, column: 13, scope: !6768)
!6895 = !DILocation(line: 100, column: 25, scope: !6768)
!6896 = !DILocation(line: 100, column: 15, scope: !6768)
!6897 = !DILocation(line: 100, column: 2, scope: !6768)
!6898 = !DILocation(line: 100, column: 10, scope: !6768)
!6899 = !DILocation(line: 100, column: 13, scope: !6768)
!6900 = !DILocation(line: 101, column: 25, scope: !6768)
!6901 = !DILocation(line: 101, column: 15, scope: !6768)
!6902 = !DILocation(line: 101, column: 2, scope: !6768)
!6903 = !DILocation(line: 101, column: 10, scope: !6768)
!6904 = !DILocation(line: 101, column: 13, scope: !6768)
!6905 = !DILocation(line: 102, column: 25, scope: !6768)
!6906 = !DILocation(line: 102, column: 15, scope: !6768)
!6907 = !DILocation(line: 102, column: 2, scope: !6768)
!6908 = !DILocation(line: 102, column: 10, scope: !6768)
!6909 = !DILocation(line: 102, column: 13, scope: !6768)
!6910 = !DILocation(line: 103, column: 25, scope: !6768)
!6911 = !DILocation(line: 103, column: 15, scope: !6768)
!6912 = !DILocation(line: 103, column: 2, scope: !6768)
!6913 = !DILocation(line: 103, column: 10, scope: !6768)
!6914 = !DILocation(line: 103, column: 13, scope: !6768)
!6915 = !DILocation(line: 106, column: 2, scope: !6768)
!6916 = !DILocation(line: 106, column: 10, scope: !6768)
!6917 = !DILocation(line: 106, column: 15, scope: !6768)
!6918 = !DILocation(line: 122, column: 39, scope: !6768)
!6919 = !DILocation(line: 122, column: 29, scope: !6768)
!6920 = !DILocation(line: 122, column: 2, scope: !6768)
!6921 = !DILocation(line: 122, column: 10, scope: !6768)
!6922 = !DILocation(line: 122, column: 23, scope: !6768)
!6923 = !DILocation(line: 122, column: 27, scope: !6768)
!6924 = !DILocation(line: 123, column: 2, scope: !6768)
!6925 = !DILocation(line: 123, column: 10, scope: !6768)
!6926 = !DILocation(line: 123, column: 15, scope: !6768)
!6927 = !DILocation(line: 123, column: 23, scope: !6768)
!6928 = !DILocation(line: 143, column: 1, scope: !6768)
!6929 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6769, file: !6769, line: 530, type: !6930, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3365, retainedNodes: !223)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{null, !6772, !2801, !240}
!6932 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6929, file: !6769, line: 530, type: !6772)
!6933 = !DILocation(line: 530, column: 50, scope: !6929)
!6934 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6929, file: !6769, line: 530, type: !2801)
!6935 = !DILocation(line: 530, column: 69, scope: !6929)
!6936 = !DILocalVariable(name: "_main", arg: 3, scope: !6929, file: !6769, line: 531, type: !240)
!6937 = !DILocation(line: 531, column: 22, scope: !6929)
!6938 = !DILocation(line: 533, column: 2, scope: !6929)
!6939 = !DILocation(line: 535, column: 13, scope: !6929)
!6940 = !DILocation(line: 535, column: 11, scope: !6929)
!6941 = !DILocation(line: 599, column: 9, scope: !6929)
!6942 = !DILocation(line: 599, column: 22, scope: !6929)
!6943 = !DILocation(line: 576, column: 2, scope: !6929)
!6944 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18355, i64 18626, i64 18645, i64 18664, i64 18689}
!6945 = !DILocation(line: 603, column: 2, scope: !6929)
!6946 = distinct !DISubprogram(name: "z_arm_prepare_switch_to_main", scope: !6769, file: !6769, line: 506, type: !253, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3365, retainedNodes: !223)
!6947 = !DILocation(line: 528, column: 1, scope: !6946)
!6948 = distinct !DISubprogram(name: "z_arm_fault", scope: !6949, file: !6949, line: 1036, type: !6950, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!6949 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !173, !173, !173, !6952}
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 32)
!6953 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !6954)
!6954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6955)
!6955 = !{!6956, !6957, !6958, !6959, !6960, !6961, !6962, !6963, !6964}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6954, file: !190, line: 26, baseType: !173, size: 32)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6954, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6954, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6954, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6954, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6954, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6954, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6954, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6954, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6965 = !DILocalVariable(name: "msp", arg: 1, scope: !6948, file: !6949, line: 1036, type: !173)
!6966 = !DILocation(line: 1036, column: 27, scope: !6948)
!6967 = !DILocalVariable(name: "psp", arg: 2, scope: !6948, file: !6949, line: 1036, type: !173)
!6968 = !DILocation(line: 1036, column: 41, scope: !6948)
!6969 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6948, file: !6949, line: 1036, type: !173)
!6970 = !DILocation(line: 1036, column: 55, scope: !6948)
!6971 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6948, file: !6949, line: 1037, type: !6952)
!6972 = !DILocation(line: 1037, column: 19, scope: !6948)
!6973 = !DILocalVariable(name: "reason", scope: !6948, file: !6949, line: 1039, type: !173)
!6974 = !DILocation(line: 1039, column: 11, scope: !6948)
!6975 = !DILocalVariable(name: "fault", scope: !6948, file: !6949, line: 1040, type: !103)
!6976 = !DILocation(line: 1040, column: 6, scope: !6948)
!6977 = !DILocation(line: 1040, column: 19, scope: !6948)
!6978 = !DILocation(line: 1040, column: 24, scope: !6948)
!6979 = !DILocalVariable(name: "recoverable", scope: !6948, file: !6949, line: 1041, type: !1035)
!6980 = !DILocation(line: 1041, column: 7, scope: !6948)
!6981 = !DILocalVariable(name: "nested_exc", scope: !6948, file: !6949, line: 1041, type: !1035)
!6982 = !DILocation(line: 1041, column: 20, scope: !6948)
!6983 = !DILocalVariable(name: "esf", scope: !6948, file: !6949, line: 1042, type: !3424)
!6984 = !DILocation(line: 1042, column: 16, scope: !6948)
!6985 = !DILocalVariable(name: "esf_copy", scope: !6948, file: !6949, line: 1047, type: !3425)
!6986 = !DILocation(line: 1047, column: 15, scope: !6948)
!6987 = !DILocalVariable(name: "key", arg: 1, scope: !6988, file: !6304, line: 84, type: !32)
!6988 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!6989 = !DILocation(line: 84, column: 56, scope: !6988, inlinedAt: !6990)
!6990 = distinct !DILocation(line: 1050, column: 2, scope: !6948)
!6991 = !DILocation(line: 87, column: 6, scope: !6992, inlinedAt: !6990)
!6992 = distinct !DILexicalBlock(scope: !6988, file: !6304, line: 87, column: 6)
!6993 = !DILocation(line: 87, column: 10, scope: !6992, inlinedAt: !6990)
!6994 = !DILocation(line: 87, column: 6, scope: !6988, inlinedAt: !6990)
!6995 = !DILocation(line: 88, column: 3, scope: !6996, inlinedAt: !6990)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !6304, line: 87, column: 17)
!6997 = !DILocation(line: 90, column: 2, scope: !6988, inlinedAt: !6990)
!6998 = !{i64 1456483}
!6999 = !DILocation(line: 110, column: 1, scope: !6988, inlinedAt: !6990)
!7000 = !DILocation(line: 1055, column: 17, scope: !6948)
!7001 = !DILocation(line: 1055, column: 22, scope: !6948)
!7002 = !DILocation(line: 1055, column: 27, scope: !6948)
!7003 = !DILocation(line: 1055, column: 9, scope: !6948)
!7004 = !DILocation(line: 1055, column: 7, scope: !6948)
!7005 = !DILocation(line: 1063, column: 24, scope: !6948)
!7006 = !DILocation(line: 1063, column: 29, scope: !6948)
!7007 = !DILocation(line: 1063, column: 11, scope: !6948)
!7008 = !DILocation(line: 1063, column: 9, scope: !6948)
!7009 = !DILocation(line: 1064, column: 6, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6948, file: !6949, line: 1064, column: 6)
!7011 = !DILocation(line: 1064, column: 6, scope: !6948)
!7012 = !DILocation(line: 1065, column: 3, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7010, file: !6949, line: 1064, column: 19)
!7014 = !DILocation(line: 1070, column: 9, scope: !6948)
!7015 = !DILocation(line: 1070, column: 20, scope: !6948)
!7016 = !DILocation(line: 1070, column: 2, scope: !6948)
!7017 = !DILocation(line: 1071, column: 2, scope: !6948)
!7018 = !DILocation(line: 1089, column: 6, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6948, file: !6949, line: 1089, column: 6)
!7020 = !DILocation(line: 1089, column: 6, scope: !6948)
!7021 = !DILocation(line: 1090, column: 17, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6949, line: 1090, column: 7)
!7023 = distinct !DILexicalBlock(scope: !7019, file: !6949, line: 1089, column: 18)
!7024 = !DILocation(line: 1090, column: 23, scope: !7022)
!7025 = !DILocation(line: 1090, column: 28, scope: !7022)
!7026 = !DILocation(line: 1090, column: 44, scope: !7022)
!7027 = !DILocation(line: 1090, column: 7, scope: !7023)
!7028 = !DILocation(line: 1091, column: 13, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7022, file: !6949, line: 1090, column: 50)
!7030 = !DILocation(line: 1091, column: 19, scope: !7029)
!7031 = !DILocation(line: 1091, column: 24, scope: !7029)
!7032 = !DILocation(line: 1092, column: 3, scope: !7029)
!7033 = !DILocation(line: 1093, column: 2, scope: !7023)
!7034 = !DILocation(line: 1094, column: 12, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7019, file: !6949, line: 1093, column: 9)
!7036 = !DILocation(line: 1094, column: 18, scope: !7035)
!7037 = !DILocation(line: 1094, column: 23, scope: !7035)
!7038 = !DILocation(line: 1097, column: 20, scope: !6948)
!7039 = !DILocation(line: 1097, column: 2, scope: !6948)
!7040 = !DILocation(line: 1098, column: 1, scope: !6948)
!7041 = distinct !DISubprogram(name: "get_esf", scope: !6949, file: !6949, line: 894, type: !7042, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!3424, !173, !173, !173, !7044}
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!7045 = !DILocalVariable(name: "msp", arg: 1, scope: !7041, file: !6949, line: 894, type: !173)
!7046 = !DILocation(line: 894, column: 46, scope: !7041)
!7047 = !DILocalVariable(name: "psp", arg: 2, scope: !7041, file: !6949, line: 894, type: !173)
!7048 = !DILocation(line: 894, column: 60, scope: !7041)
!7049 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7041, file: !6949, line: 894, type: !173)
!7050 = !DILocation(line: 894, column: 74, scope: !7041)
!7051 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7041, file: !6949, line: 895, type: !7044)
!7052 = !DILocation(line: 895, column: 8, scope: !7041)
!7053 = !DILocalVariable(name: "alternative_state_exc", scope: !7041, file: !6949, line: 897, type: !1035)
!7054 = !DILocation(line: 897, column: 7, scope: !7041)
!7055 = !DILocalVariable(name: "ptr_esf", scope: !7041, file: !6949, line: 898, type: !3424)
!7056 = !DILocation(line: 898, column: 16, scope: !7041)
!7057 = !DILocation(line: 900, column: 3, scope: !7041)
!7058 = !DILocation(line: 900, column: 14, scope: !7041)
!7059 = !DILocation(line: 902, column: 7, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7041, file: !6949, line: 902, column: 6)
!7061 = !DILocation(line: 902, column: 18, scope: !7060)
!7062 = !DILocation(line: 902, column: 49, scope: !7060)
!7063 = !DILocation(line: 902, column: 6, scope: !7041)
!7064 = !DILocation(line: 905, column: 3, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7060, file: !6949, line: 903, column: 33)
!7066 = !DILocation(line: 983, column: 7, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7041, file: !6949, line: 983, column: 6)
!7068 = !DILocation(line: 983, column: 18, scope: !7067)
!7069 = !DILocation(line: 983, column: 44, scope: !7067)
!7070 = !DILocation(line: 984, column: 6, scope: !7067)
!7071 = !DILocation(line: 984, column: 17, scope: !7067)
!7072 = !DILocation(line: 983, column: 6, scope: !7041)
!7073 = !DILocation(line: 985, column: 3, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7067, file: !6949, line: 984, column: 47)
!7075 = !DILocation(line: 985, column: 3, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6949, line: 985, column: 3)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6949, line: 985, column: 3)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !6949, line: 985, column: 3)
!7079 = !DILocation(line: 986, column: 3, scope: !7074)
!7080 = !DILocation(line: 990, column: 7, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7041, file: !6949, line: 990, column: 6)
!7082 = !DILocation(line: 990, column: 6, scope: !7041)
!7083 = !DILocation(line: 991, column: 7, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6949, line: 991, column: 7)
!7085 = distinct !DILexicalBlock(scope: !7081, file: !6949, line: 990, column: 30)
!7086 = !DILocation(line: 991, column: 18, scope: !7084)
!7087 = !DILocation(line: 991, column: 7, scope: !7085)
!7088 = !DILocation(line: 993, column: 31, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7084, file: !6949, line: 991, column: 44)
!7090 = !DILocation(line: 993, column: 15, scope: !7089)
!7091 = !DILocation(line: 993, column: 12, scope: !7089)
!7092 = !DILocation(line: 995, column: 3, scope: !7089)
!7093 = !DILocation(line: 997, column: 30, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7084, file: !6949, line: 995, column: 10)
!7095 = !DILocation(line: 997, column: 14, scope: !7094)
!7096 = !DILocation(line: 997, column: 12, scope: !7094)
!7097 = !DILocation(line: 998, column: 5, scope: !7094)
!7098 = !DILocation(line: 998, column: 16, scope: !7094)
!7099 = !DILocation(line: 1000, column: 2, scope: !7085)
!7100 = !DILocation(line: 1002, column: 9, scope: !7041)
!7101 = !DILocation(line: 1002, column: 2, scope: !7041)
!7102 = !DILocation(line: 1003, column: 1, scope: !7041)
!7103 = distinct !DISubprogram(name: "fault_handle", scope: !6949, file: !6949, line: 786, type: !7104, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7104 = !DISubroutineType(types: !7105)
!7105 = !{!173, !3424, !103, !7044}
!7106 = !DILocalVariable(name: "esf", arg: 1, scope: !7103, file: !6949, line: 786, type: !3424)
!7107 = !DILocation(line: 786, column: 44, scope: !7103)
!7108 = !DILocalVariable(name: "fault", arg: 2, scope: !7103, file: !6949, line: 786, type: !103)
!7109 = !DILocation(line: 786, column: 53, scope: !7103)
!7110 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7103, file: !6949, line: 786, type: !7044)
!7111 = !DILocation(line: 786, column: 66, scope: !7103)
!7112 = !DILocalVariable(name: "reason", scope: !7103, file: !6949, line: 788, type: !173)
!7113 = !DILocation(line: 788, column: 11, scope: !7103)
!7114 = !DILocation(line: 790, column: 3, scope: !7103)
!7115 = !DILocation(line: 790, column: 15, scope: !7103)
!7116 = !DILocation(line: 792, column: 10, scope: !7103)
!7117 = !DILocation(line: 792, column: 2, scope: !7103)
!7118 = !DILocation(line: 794, column: 23, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7103, file: !6949, line: 792, column: 17)
!7120 = !DILocation(line: 794, column: 28, scope: !7119)
!7121 = !DILocation(line: 794, column: 12, scope: !7119)
!7122 = !DILocation(line: 794, column: 10, scope: !7119)
!7123 = !DILocation(line: 795, column: 3, scope: !7119)
!7124 = !DILocation(line: 820, column: 22, scope: !7119)
!7125 = !DILocation(line: 820, column: 27, scope: !7119)
!7126 = !DILocation(line: 820, column: 3, scope: !7119)
!7127 = !DILocation(line: 821, column: 3, scope: !7119)
!7128 = !DILocation(line: 824, column: 8, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7103, file: !6949, line: 824, column: 6)
!7130 = !DILocation(line: 824, column: 7, scope: !7129)
!7131 = !DILocation(line: 824, column: 6, scope: !7129)
!7132 = !DILocation(line: 824, column: 21, scope: !7129)
!7133 = !DILocation(line: 824, column: 6, scope: !7103)
!7134 = !DILocation(line: 826, column: 14, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !6949, line: 824, column: 31)
!7136 = !DILocation(line: 826, column: 19, scope: !7135)
!7137 = !DILocation(line: 826, column: 3, scope: !7135)
!7138 = !DILocation(line: 827, column: 2, scope: !7135)
!7139 = !DILocation(line: 829, column: 9, scope: !7103)
!7140 = !DILocation(line: 829, column: 2, scope: !7103)
!7141 = distinct !DISubprogram(name: "hard_fault", scope: !6949, file: !6949, line: 709, type: !7142, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!173, !3424, !7044}
!7144 = !DILocalVariable(name: "esf", arg: 1, scope: !7141, file: !6949, line: 709, type: !3424)
!7145 = !DILocation(line: 709, column: 42, scope: !7141)
!7146 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7141, file: !6949, line: 709, type: !7044)
!7147 = !DILocation(line: 709, column: 53, scope: !7141)
!7148 = !DILocalVariable(name: "reason", scope: !7141, file: !6949, line: 711, type: !173)
!7149 = !DILocation(line: 711, column: 11, scope: !7141)
!7150 = !DILocation(line: 713, column: 2, scope: !7141)
!7151 = !DILocation(line: 713, column: 2, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !6949, line: 713, column: 2)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6949, line: 713, column: 2)
!7154 = distinct !DILexicalBlock(scope: !7141, file: !6949, line: 713, column: 2)
!7155 = !DILocation(line: 724, column: 31, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7141, file: !6949, line: 724, column: 6)
!7157 = !DILocation(line: 724, column: 6, scope: !7156)
!7158 = !DILocation(line: 724, column: 6, scope: !7141)
!7159 = !DILocation(line: 726, column: 3, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7156, file: !6949, line: 724, column: 37)
!7161 = !DILocation(line: 726, column: 3, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6949, line: 726, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6949, line: 726, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !6949, line: 726, column: 3)
!7165 = !DILocation(line: 727, column: 12, scope: !7160)
!7166 = !DILocation(line: 727, column: 17, scope: !7160)
!7167 = !DILocation(line: 727, column: 23, scope: !7160)
!7168 = !DILocation(line: 727, column: 10, scope: !7160)
!7169 = !DILocation(line: 728, column: 2, scope: !7160)
!7170 = !DILocation(line: 730, column: 42, scope: !7141)
!7171 = !DILocation(line: 730, column: 17, scope: !7141)
!7172 = !DILocation(line: 730, column: 3, scope: !7141)
!7173 = !DILocation(line: 730, column: 15, scope: !7141)
!7174 = !DILocation(line: 766, column: 9, scope: !7141)
!7175 = !DILocation(line: 766, column: 2, scope: !7141)
!7176 = distinct !DISubprogram(name: "reserved_exception", scope: !6949, file: !6949, line: 776, type: !7177, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{null, !7179, !103}
!7179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7180, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3425)
!7181 = !DILocalVariable(name: "esf", arg: 1, scope: !7176, file: !6949, line: 776, type: !7179)
!7182 = !DILocation(line: 776, column: 52, scope: !7176)
!7183 = !DILocalVariable(name: "fault", arg: 2, scope: !7176, file: !6949, line: 776, type: !103)
!7184 = !DILocation(line: 776, column: 61, scope: !7176)
!7185 = !DILocation(line: 778, column: 2, scope: !7176)
!7186 = !DILocation(line: 780, column: 2, scope: !7176)
!7187 = !DILocation(line: 780, column: 2, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6949, line: 780, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6949, line: 780, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7176, file: !6949, line: 780, column: 2)
!7191 = !DILocation(line: 783, column: 1, scope: !7176)
!7192 = distinct !DISubprogram(name: "fault_show", scope: !6949, file: !6949, line: 166, type: !7177, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7193 = !DILocalVariable(name: "esf", arg: 1, scope: !7192, file: !6949, line: 166, type: !7179)
!7194 = !DILocation(line: 166, column: 44, scope: !7192)
!7195 = !DILocalVariable(name: "fault", arg: 2, scope: !7192, file: !6949, line: 166, type: !103)
!7196 = !DILocation(line: 166, column: 53, scope: !7192)
!7197 = !DILocation(line: 168, column: 8, scope: !7192)
!7198 = !DILocation(line: 169, column: 8, scope: !7192)
!7199 = !DILocation(line: 170, column: 1, scope: !7192)
!7200 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6949, file: !6949, line: 658, type: !7201, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!1035, !3424}
!7203 = !DILocalVariable(name: "esf", arg: 1, scope: !7200, file: !6949, line: 658, type: !3424)
!7204 = !DILocation(line: 658, column: 59, scope: !7200)
!7205 = !DILocalVariable(name: "ret_addr", scope: !7200, file: !6949, line: 660, type: !3467)
!7206 = !DILocation(line: 660, column: 12, scope: !7200)
!7207 = !DILocation(line: 660, column: 35, scope: !7200)
!7208 = !DILocation(line: 660, column: 40, scope: !7200)
!7209 = !DILocation(line: 660, column: 46, scope: !7200)
!7210 = !DILocation(line: 660, column: 23, scope: !7200)
!7211 = !DILocalVariable(name: "fault_insn", scope: !7200, file: !6949, line: 680, type: !170)
!7212 = !DILocation(line: 680, column: 11, scope: !7200)
!7213 = !DILocation(line: 680, column: 26, scope: !7200)
!7214 = !DILocation(line: 680, column: 35, scope: !7200)
!7215 = !DILocation(line: 680, column: 24, scope: !7200)
!7216 = !DILocation(line: 693, column: 8, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7200, file: !6949, line: 693, column: 6)
!7218 = !DILocation(line: 693, column: 19, scope: !7217)
!7219 = !DILocation(line: 693, column: 29, scope: !7217)
!7220 = !DILocation(line: 693, column: 45, scope: !7217)
!7221 = !DILocation(line: 694, column: 5, scope: !7217)
!7222 = !DILocation(line: 694, column: 16, scope: !7217)
!7223 = !DILocation(line: 694, column: 26, scope: !7217)
!7224 = !DILocation(line: 693, column: 6, scope: !7200)
!7225 = !DILocation(line: 695, column: 3, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7217, file: !6949, line: 694, column: 56)
!7227 = !DILocation(line: 698, column: 2, scope: !7200)
!7228 = !DILocation(line: 699, column: 1, scope: !7200)
!7229 = distinct !DISubprogram(name: "memory_fault_recoverable", scope: !6949, file: !6949, line: 186, type: !7230, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!1035, !3424, !1035}
!7232 = !DILocalVariable(name: "esf", arg: 1, scope: !7229, file: !6949, line: 186, type: !3424)
!7233 = !DILocation(line: 186, column: 52, scope: !7229)
!7234 = !DILocalVariable(name: "synchronous", arg: 2, scope: !7229, file: !6949, line: 186, type: !1035)
!7235 = !DILocation(line: 186, column: 62, scope: !7229)
!7236 = !DILocation(line: 209, column: 2, scope: !7229)
!7237 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6949, file: !6949, line: 1107, type: !253, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3408, retainedNodes: !223)
!7238 = !DILocation(line: 1136, column: 1, scope: !7237)
!7239 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7240, file: !7240, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3468, retainedNodes: !223)
!7240 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7241 = !DILocalVariable(name: "irq", scope: !7239, file: !7240, line: 28, type: !103)
!7242 = !DILocation(line: 28, column: 6, scope: !7239)
!7243 = !DILocation(line: 30, column: 2, scope: !7239)
!7244 = !DILocation(line: 30, column: 9, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !7240, line: 30, column: 2)
!7246 = distinct !DILexicalBlock(scope: !7239, file: !7240, line: 30, column: 2)
!7247 = !DILocation(line: 30, column: 13, scope: !7245)
!7248 = !DILocation(line: 30, column: 2, scope: !7246)
!7249 = !DILocation(line: 31, column: 31, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7245, file: !7240, line: 30, column: 39)
!7251 = !DILocation(line: 31, column: 3, scope: !7250)
!7252 = !DILocation(line: 32, column: 2, scope: !7250)
!7253 = !DILocation(line: 30, column: 35, scope: !7245)
!7254 = !DILocation(line: 30, column: 2, scope: !7245)
!7255 = distinct !{!7255, !7248, !7256}
!7256 = !DILocation(line: 32, column: 2, scope: !7246)
!7257 = !DILocation(line: 33, column: 1, scope: !7239)
!7258 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2509, file: !2509, line: 850, type: !6663, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3468, retainedNodes: !223)
!7259 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7258, file: !2509, line: 850, type: !3303)
!7260 = !DILocation(line: 850, column: 51, scope: !7258)
!7261 = !DILocalVariable(name: "priority", arg: 2, scope: !7258, file: !2509, line: 850, type: !173)
!7262 = !DILocation(line: 850, column: 66, scope: !7258)
!7263 = !DILocation(line: 852, column: 17, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7258, file: !2509, line: 852, column: 7)
!7265 = !DILocation(line: 852, column: 23, scope: !7264)
!7266 = !DILocation(line: 852, column: 7, scope: !7258)
!7267 = !DILocation(line: 854, column: 53, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7264, file: !2509, line: 853, column: 3)
!7269 = !DILocation(line: 854, column: 44, scope: !7268)
!7270 = !DILocation(line: 854, column: 83, scope: !7268)
!7271 = !DILocation(line: 854, column: 80, scope: !7268)
!7272 = !DILocation(line: 854, column: 71, scope: !7268)
!7273 = !DILocation(line: 854, column: 69, scope: !7268)
!7274 = !DILocation(line: 855, column: 11, scope: !7268)
!7275 = !DILocation(line: 855, column: 20, scope: !7268)
!7276 = !DILocation(line: 855, column: 48, scope: !7268)
!7277 = !DILocation(line: 855, column: 71, scope: !7268)
!7278 = !DILocation(line: 855, column: 68, scope: !7268)
!7279 = !DILocation(line: 854, column: 102, scope: !7268)
!7280 = !DILocation(line: 854, column: 14, scope: !7268)
!7281 = !DILocation(line: 854, column: 5, scope: !7268)
!7282 = !DILocation(line: 854, column: 30, scope: !7268)
!7283 = !DILocation(line: 856, column: 3, scope: !7268)
!7284 = !DILocation(line: 859, column: 53, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7264, file: !2509, line: 858, column: 3)
!7286 = !DILocation(line: 859, column: 44, scope: !7285)
!7287 = !DILocation(line: 859, column: 83, scope: !7285)
!7288 = !DILocation(line: 859, column: 80, scope: !7285)
!7289 = !DILocation(line: 859, column: 71, scope: !7285)
!7290 = !DILocation(line: 859, column: 69, scope: !7285)
!7291 = !DILocation(line: 860, column: 11, scope: !7285)
!7292 = !DILocation(line: 860, column: 20, scope: !7285)
!7293 = !DILocation(line: 860, column: 48, scope: !7285)
!7294 = !DILocation(line: 860, column: 71, scope: !7285)
!7295 = !DILocation(line: 860, column: 68, scope: !7285)
!7296 = !DILocation(line: 859, column: 102, scope: !7285)
!7297 = !DILocation(line: 859, column: 14, scope: !7285)
!7298 = !DILocation(line: 859, column: 5, scope: !7285)
!7299 = !DILocation(line: 859, column: 30, scope: !7285)
!7300 = !DILocation(line: 862, column: 1, scope: !7258)
!7301 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7302, file: !7302, line: 27, type: !7303, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3498, retainedNodes: !223)
!7302 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7303 = !DISubroutineType(types: !7304)
!7304 = !{null, !7305}
!7305 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !7306)
!7306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7307, size: 32)
!7307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !7308)
!7308 = !{!7309, !7367, !7379, !7380, !7381, !7382, !7395}
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7307, file: !114, line: 247, baseType: !7310, size: 384)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !7311)
!7311 = !{!7312, !7336, !7343, !7344, !7345, !7354, !7355, !7356}
!7312 = !DIDerivedType(tag: DW_TAG_member, scope: !7310, file: !114, line: 60, baseType: !7313, size: 64)
!7313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7310, file: !114, line: 60, size: 64, elements: !7314)
!7314 = !{!7315, !7330}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7313, file: !114, line: 61, baseType: !7316, size: 64)
!7316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !7317)
!7317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !7318)
!7318 = !{!7319, !7325}
!7319 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !124, line: 38, baseType: !7320, size: 32)
!7320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7317, file: !124, line: 38, size: 32, elements: !7321)
!7321 = !{!7322, !7324}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7320, file: !124, line: 39, baseType: !7323, size: 32)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7317, size: 32)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7320, file: !124, line: 40, baseType: !7323, size: 32)
!7325 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !124, line: 42, baseType: !7326, size: 32, offset: 32)
!7326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7317, file: !124, line: 42, size: 32, elements: !7327)
!7327 = !{!7328, !7329}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7326, file: !124, line: 43, baseType: !7323, size: 32)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7326, file: !124, line: 44, baseType: !7323, size: 32)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7313, file: !114, line: 62, baseType: !7331, size: 64)
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !7332)
!7332 = !{!7333}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7331, file: !140, line: 50, baseType: !7334, size: 64)
!7334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7335, size: 64, elements: !145)
!7335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7310, file: !114, line: 68, baseType: !7337, size: 32, offset: 64)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !7339)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !7340)
!7340 = !{!7341}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7339, file: !150, line: 232, baseType: !7342, size: 64)
!7342 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !7317)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7310, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7310, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!7345 = !DIDerivedType(tag: DW_TAG_member, scope: !7310, file: !114, line: 90, baseType: !7346, size: 16, offset: 112)
!7346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7310, file: !114, line: 90, size: 16, elements: !7347)
!7347 = !{!7348, !7353}
!7348 = !DIDerivedType(tag: DW_TAG_member, scope: !7346, file: !114, line: 91, baseType: !7349, size: 16)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7346, file: !114, line: 91, size: 16, elements: !7350)
!7350 = !{!7351, !7352}
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7349, file: !114, line: 96, baseType: !166, size: 8)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7349, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7346, file: !114, line: 100, baseType: !170, size: 16)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7310, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7310, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7310, file: !114, line: 131, baseType: !7357, size: 192, offset: 192)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !7358)
!7358 = !{!7359, !7360, !7366}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7357, file: !150, line: 245, baseType: !7316, size: 64)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7357, file: !150, line: 246, baseType: !7361, size: 32, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !7362)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 32)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{null, !7365}
!7365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 32)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7357, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7307, file: !114, line: 250, baseType: !7368, size: 288, offset: 384)
!7368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !7369)
!7369 = !{!7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378}
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7368, file: !190, line: 26, baseType: !173, size: 32)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7368, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7368, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7368, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7368, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7368, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7368, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7368, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7368, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7307, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7307, file: !114, line: 256, baseType: !7338, size: 64, offset: 704)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7307, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7307, file: !114, line: 325, baseType: !7383, size: 32, offset: 800)
!7383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7384, size: 32)
!7384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !7385)
!7385 = !{!7386, !7392, !7393}
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7384, file: !109, line: 5074, baseType: !7387, size: 96)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !7388)
!7388 = !{!7389, !7390, !7391}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7387, file: !210, line: 57, baseType: !213, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7387, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7387, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7384, file: !109, line: 5075, baseType: !7338, size: 64, offset: 96)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7384, file: !109, line: 5076, baseType: !7394, offset: 160)
!7394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7307, file: !114, line: 343, baseType: !7396, size: 64, offset: 832)
!7396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !7397)
!7397 = !{!7398, !7399}
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7396, file: !190, line: 63, baseType: !173, size: 32)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7396, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!7400 = !DILocalVariable(name: "thread", arg: 1, scope: !7301, file: !7302, line: 27, type: !7305)
!7401 = !DILocation(line: 27, column: 36, scope: !7301)
!7402 = !DILocation(line: 29, column: 6, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7301, file: !7302, line: 29, column: 6)
!7404 = !DILocation(line: 29, column: 18, scope: !7403)
!7405 = !DILocation(line: 29, column: 15, scope: !7403)
!7406 = !DILocation(line: 29, column: 6, scope: !7301)
!7407 = !DILocalVariable(name: "result", scope: !7408, file: !6627, line: 1029, type: !173)
!7408 = distinct !DISubprogram(name: "__get_IPSR", scope: !6627, file: !6627, line: 1027, type: !7409, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3498, retainedNodes: !223)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!173}
!7411 = !DILocation(line: 1029, column: 12, scope: !7408, inlinedAt: !7412)
!7412 = distinct !DILocation(line: 48, column: 10, scope: !7413, inlinedAt: !7415)
!7413 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7414, file: !7414, line: 46, type: !3759, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3498, retainedNodes: !223)
!7414 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7415 = distinct !DILocation(line: 30, column: 7, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !7302, line: 30, column: 7)
!7417 = distinct !DILexicalBlock(scope: !7403, file: !7302, line: 29, column: 26)
!7418 = !DILocation(line: 1031, column: 3, scope: !7408, inlinedAt: !7412)
!7419 = !{i64 2308756}
!7420 = !DILocation(line: 1032, column: 10, scope: !7408, inlinedAt: !7412)
!7421 = !DILocation(line: 48, column: 9, scope: !7413, inlinedAt: !7415)
!7422 = !DILocation(line: 30, column: 7, scope: !7417)
!7423 = !DILocation(line: 42, column: 14, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7416, file: !7302, line: 30, column: 25)
!7425 = !DILocation(line: 48, column: 15, scope: !7424)
!7426 = !DILocation(line: 49, column: 3, scope: !7424)
!7427 = !DILocation(line: 50, column: 2, scope: !7417)
!7428 = !DILocation(line: 52, column: 17, scope: !7301)
!7429 = !DILocation(line: 52, column: 2, scope: !7301)
!7430 = !DILocation(line: 53, column: 1, scope: !7301)
!7431 = distinct !DISubprogram(name: "strcpy", scope: !7432, file: !7432, line: 20, type: !7433, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7432 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!2801, !7435, !7436}
!7435 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2801)
!7436 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7437 = !DILocalVariable(name: "d", arg: 1, scope: !7431, file: !7432, line: 20, type: !7435)
!7438 = !DILocation(line: 20, column: 30, scope: !7431)
!7439 = !DILocalVariable(name: "s", arg: 2, scope: !7431, file: !7432, line: 20, type: !7436)
!7440 = !DILocation(line: 20, column: 55, scope: !7431)
!7441 = !DILocalVariable(name: "dest", scope: !7431, file: !7432, line: 22, type: !2801)
!7442 = !DILocation(line: 22, column: 8, scope: !7431)
!7443 = !DILocation(line: 22, column: 15, scope: !7431)
!7444 = !DILocation(line: 24, column: 2, scope: !7431)
!7445 = !DILocation(line: 24, column: 10, scope: !7431)
!7446 = !DILocation(line: 24, column: 9, scope: !7431)
!7447 = !DILocation(line: 24, column: 12, scope: !7431)
!7448 = !DILocation(line: 25, column: 9, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7431, file: !7432, line: 24, column: 21)
!7450 = !DILocation(line: 25, column: 8, scope: !7449)
!7451 = !DILocation(line: 25, column: 4, scope: !7449)
!7452 = !DILocation(line: 25, column: 6, scope: !7449)
!7453 = !DILocation(line: 26, column: 4, scope: !7449)
!7454 = !DILocation(line: 27, column: 4, scope: !7449)
!7455 = distinct !{!7455, !7444, !7456}
!7456 = !DILocation(line: 28, column: 2, scope: !7431)
!7457 = !DILocation(line: 30, column: 3, scope: !7431)
!7458 = !DILocation(line: 30, column: 5, scope: !7431)
!7459 = !DILocation(line: 32, column: 9, scope: !7431)
!7460 = !DILocation(line: 32, column: 2, scope: !7431)
!7461 = distinct !DISubprogram(name: "strncpy", scope: !7432, file: !7432, line: 42, type: !7462, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!2801, !7435, !7436, !217}
!7464 = !DILocalVariable(name: "d", arg: 1, scope: !7461, file: !7432, line: 42, type: !7435)
!7465 = !DILocation(line: 42, column: 31, scope: !7461)
!7466 = !DILocalVariable(name: "s", arg: 2, scope: !7461, file: !7432, line: 42, type: !7436)
!7467 = !DILocation(line: 42, column: 56, scope: !7461)
!7468 = !DILocalVariable(name: "n", arg: 3, scope: !7461, file: !7432, line: 42, type: !217)
!7469 = !DILocation(line: 42, column: 66, scope: !7461)
!7470 = !DILocalVariable(name: "dest", scope: !7461, file: !7432, line: 44, type: !2801)
!7471 = !DILocation(line: 44, column: 8, scope: !7461)
!7472 = !DILocation(line: 44, column: 15, scope: !7461)
!7473 = !DILocation(line: 46, column: 2, scope: !7461)
!7474 = !DILocation(line: 46, column: 10, scope: !7461)
!7475 = !DILocation(line: 46, column: 12, scope: !7461)
!7476 = !DILocation(line: 46, column: 17, scope: !7461)
!7477 = !DILocation(line: 46, column: 21, scope: !7461)
!7478 = !DILocation(line: 46, column: 20, scope: !7461)
!7479 = !DILocation(line: 46, column: 23, scope: !7461)
!7480 = !DILocation(line: 0, scope: !7461)
!7481 = !DILocation(line: 47, column: 9, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7461, file: !7432, line: 46, column: 32)
!7483 = !DILocation(line: 47, column: 8, scope: !7482)
!7484 = !DILocation(line: 47, column: 4, scope: !7482)
!7485 = !DILocation(line: 47, column: 6, scope: !7482)
!7486 = !DILocation(line: 48, column: 4, scope: !7482)
!7487 = !DILocation(line: 49, column: 4, scope: !7482)
!7488 = !DILocation(line: 50, column: 4, scope: !7482)
!7489 = distinct !{!7489, !7473, !7490}
!7490 = !DILocation(line: 51, column: 2, scope: !7461)
!7491 = !DILocation(line: 53, column: 2, scope: !7461)
!7492 = !DILocation(line: 53, column: 9, scope: !7461)
!7493 = !DILocation(line: 53, column: 11, scope: !7461)
!7494 = !DILocation(line: 54, column: 4, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7461, file: !7432, line: 53, column: 16)
!7496 = !DILocation(line: 54, column: 6, scope: !7495)
!7497 = !DILocation(line: 55, column: 4, scope: !7495)
!7498 = !DILocation(line: 56, column: 4, scope: !7495)
!7499 = distinct !{!7499, !7491, !7500}
!7500 = !DILocation(line: 57, column: 2, scope: !7461)
!7501 = !DILocation(line: 59, column: 9, scope: !7461)
!7502 = !DILocation(line: 59, column: 2, scope: !7461)
!7503 = distinct !DISubprogram(name: "strchr", scope: !7432, file: !7432, line: 69, type: !7504, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!2801, !256, !103}
!7506 = !DILocalVariable(name: "s", arg: 1, scope: !7503, file: !7432, line: 69, type: !256)
!7507 = !DILocation(line: 69, column: 26, scope: !7503)
!7508 = !DILocalVariable(name: "c", arg: 2, scope: !7503, file: !7432, line: 69, type: !103)
!7509 = !DILocation(line: 69, column: 33, scope: !7503)
!7510 = !DILocalVariable(name: "tmp", scope: !7503, file: !7432, line: 71, type: !237)
!7511 = !DILocation(line: 71, column: 7, scope: !7503)
!7512 = !DILocation(line: 71, column: 20, scope: !7503)
!7513 = !DILocation(line: 71, column: 13, scope: !7503)
!7514 = !DILocation(line: 73, column: 2, scope: !7503)
!7515 = !DILocation(line: 73, column: 11, scope: !7503)
!7516 = !DILocation(line: 73, column: 10, scope: !7503)
!7517 = !DILocation(line: 73, column: 16, scope: !7503)
!7518 = !DILocation(line: 73, column: 13, scope: !7503)
!7519 = !DILocation(line: 73, column: 21, scope: !7503)
!7520 = !DILocation(line: 73, column: 26, scope: !7503)
!7521 = !DILocation(line: 73, column: 25, scope: !7503)
!7522 = !DILocation(line: 73, column: 28, scope: !7503)
!7523 = !DILocation(line: 0, scope: !7503)
!7524 = !DILocation(line: 74, column: 4, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7503, file: !7432, line: 73, column: 38)
!7526 = distinct !{!7526, !7514, !7527}
!7527 = !DILocation(line: 75, column: 2, scope: !7503)
!7528 = !DILocation(line: 77, column: 11, scope: !7503)
!7529 = !DILocation(line: 77, column: 10, scope: !7503)
!7530 = !DILocation(line: 77, column: 16, scope: !7503)
!7531 = !DILocation(line: 77, column: 13, scope: !7503)
!7532 = !DILocation(line: 77, column: 9, scope: !7503)
!7533 = !DILocation(line: 77, column: 32, scope: !7503)
!7534 = !DILocation(line: 77, column: 2, scope: !7503)
!7535 = distinct !DISubprogram(name: "strrchr", scope: !7432, file: !7432, line: 87, type: !7504, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7536 = !DILocalVariable(name: "s", arg: 1, scope: !7535, file: !7432, line: 87, type: !256)
!7537 = !DILocation(line: 87, column: 27, scope: !7535)
!7538 = !DILocalVariable(name: "c", arg: 2, scope: !7535, file: !7432, line: 87, type: !103)
!7539 = !DILocation(line: 87, column: 34, scope: !7535)
!7540 = !DILocalVariable(name: "match", scope: !7535, file: !7432, line: 89, type: !2801)
!7541 = !DILocation(line: 89, column: 8, scope: !7535)
!7542 = !DILocation(line: 91, column: 2, scope: !7535)
!7543 = !DILocation(line: 92, column: 8, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !7432, line: 92, column: 7)
!7545 = distinct !DILexicalBlock(scope: !7535, file: !7432, line: 91, column: 5)
!7546 = !DILocation(line: 92, column: 7, scope: !7544)
!7547 = !DILocation(line: 92, column: 19, scope: !7544)
!7548 = !DILocation(line: 92, column: 13, scope: !7544)
!7549 = !DILocation(line: 92, column: 10, scope: !7544)
!7550 = !DILocation(line: 92, column: 7, scope: !7545)
!7551 = !DILocation(line: 93, column: 20, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7544, file: !7432, line: 92, column: 22)
!7553 = !DILocation(line: 93, column: 10, scope: !7552)
!7554 = !DILocation(line: 94, column: 3, scope: !7552)
!7555 = !DILocation(line: 95, column: 2, scope: !7545)
!7556 = !DILocation(line: 95, column: 13, scope: !7535)
!7557 = !DILocation(line: 95, column: 11, scope: !7535)
!7558 = distinct !{!7558, !7542, !7559}
!7559 = !DILocation(line: 95, column: 15, scope: !7535)
!7560 = !DILocation(line: 97, column: 9, scope: !7535)
!7561 = !DILocation(line: 97, column: 2, scope: !7535)
!7562 = distinct !DISubprogram(name: "strlen", scope: !7432, file: !7432, line: 107, type: !7563, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!217, !256}
!7565 = !DILocalVariable(name: "s", arg: 1, scope: !7562, file: !7432, line: 107, type: !256)
!7566 = !DILocation(line: 107, column: 27, scope: !7562)
!7567 = !DILocalVariable(name: "n", scope: !7562, file: !7432, line: 109, type: !217)
!7568 = !DILocation(line: 109, column: 9, scope: !7562)
!7569 = !DILocation(line: 111, column: 2, scope: !7562)
!7570 = !DILocation(line: 111, column: 10, scope: !7562)
!7571 = !DILocation(line: 111, column: 9, scope: !7562)
!7572 = !DILocation(line: 111, column: 12, scope: !7562)
!7573 = !DILocation(line: 112, column: 4, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7562, file: !7432, line: 111, column: 21)
!7575 = !DILocation(line: 113, column: 4, scope: !7574)
!7576 = distinct !{!7576, !7569, !7577}
!7577 = !DILocation(line: 114, column: 2, scope: !7562)
!7578 = !DILocation(line: 116, column: 9, scope: !7562)
!7579 = !DILocation(line: 116, column: 2, scope: !7562)
!7580 = distinct !DISubprogram(name: "strnlen", scope: !7432, file: !7432, line: 126, type: !7581, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{!217, !256, !217}
!7583 = !DILocalVariable(name: "s", arg: 1, scope: !7580, file: !7432, line: 126, type: !256)
!7584 = !DILocation(line: 126, column: 28, scope: !7580)
!7585 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7580, file: !7432, line: 126, type: !217)
!7586 = !DILocation(line: 126, column: 38, scope: !7580)
!7587 = !DILocalVariable(name: "n", scope: !7580, file: !7432, line: 128, type: !217)
!7588 = !DILocation(line: 128, column: 9, scope: !7580)
!7589 = !DILocation(line: 130, column: 2, scope: !7580)
!7590 = !DILocation(line: 130, column: 10, scope: !7580)
!7591 = !DILocation(line: 130, column: 9, scope: !7580)
!7592 = !DILocation(line: 130, column: 12, scope: !7580)
!7593 = !DILocation(line: 130, column: 20, scope: !7580)
!7594 = !DILocation(line: 130, column: 23, scope: !7580)
!7595 = !DILocation(line: 130, column: 27, scope: !7580)
!7596 = !DILocation(line: 130, column: 25, scope: !7580)
!7597 = !DILocation(line: 0, scope: !7580)
!7598 = !DILocation(line: 131, column: 4, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7580, file: !7432, line: 130, column: 35)
!7600 = !DILocation(line: 132, column: 4, scope: !7599)
!7601 = distinct !{!7601, !7589, !7602}
!7602 = !DILocation(line: 133, column: 2, scope: !7580)
!7603 = !DILocation(line: 135, column: 9, scope: !7580)
!7604 = !DILocation(line: 135, column: 2, scope: !7580)
!7605 = distinct !DISubprogram(name: "strcmp", scope: !7432, file: !7432, line: 145, type: !7606, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!103, !256, !256}
!7608 = !DILocalVariable(name: "s1", arg: 1, scope: !7605, file: !7432, line: 145, type: !256)
!7609 = !DILocation(line: 145, column: 24, scope: !7605)
!7610 = !DILocalVariable(name: "s2", arg: 2, scope: !7605, file: !7432, line: 145, type: !256)
!7611 = !DILocation(line: 145, column: 40, scope: !7605)
!7612 = !DILocation(line: 147, column: 2, scope: !7605)
!7613 = !DILocation(line: 147, column: 11, scope: !7605)
!7614 = !DILocation(line: 147, column: 10, scope: !7605)
!7615 = !DILocation(line: 147, column: 18, scope: !7605)
!7616 = !DILocation(line: 147, column: 17, scope: !7605)
!7617 = !DILocation(line: 147, column: 14, scope: !7605)
!7618 = !DILocation(line: 147, column: 22, scope: !7605)
!7619 = !DILocation(line: 147, column: 27, scope: !7605)
!7620 = !DILocation(line: 147, column: 26, scope: !7605)
!7621 = !DILocation(line: 147, column: 30, scope: !7605)
!7622 = !DILocation(line: 0, scope: !7605)
!7623 = !DILocation(line: 148, column: 5, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7605, file: !7432, line: 147, column: 40)
!7625 = !DILocation(line: 149, column: 5, scope: !7624)
!7626 = distinct !{!7626, !7612, !7627}
!7627 = !DILocation(line: 150, column: 2, scope: !7605)
!7628 = !DILocation(line: 152, column: 10, scope: !7605)
!7629 = !DILocation(line: 152, column: 9, scope: !7605)
!7630 = !DILocation(line: 152, column: 16, scope: !7605)
!7631 = !DILocation(line: 152, column: 15, scope: !7605)
!7632 = !DILocation(line: 152, column: 13, scope: !7605)
!7633 = !DILocation(line: 152, column: 2, scope: !7605)
!7634 = distinct !DISubprogram(name: "strncmp", scope: !7432, file: !7432, line: 162, type: !7635, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!103, !256, !256, !217}
!7637 = !DILocalVariable(name: "s1", arg: 1, scope: !7634, file: !7432, line: 162, type: !256)
!7638 = !DILocation(line: 162, column: 25, scope: !7634)
!7639 = !DILocalVariable(name: "s2", arg: 2, scope: !7634, file: !7432, line: 162, type: !256)
!7640 = !DILocation(line: 162, column: 41, scope: !7634)
!7641 = !DILocalVariable(name: "n", arg: 3, scope: !7634, file: !7432, line: 162, type: !217)
!7642 = !DILocation(line: 162, column: 52, scope: !7634)
!7643 = !DILocation(line: 164, column: 2, scope: !7634)
!7644 = !DILocation(line: 164, column: 10, scope: !7634)
!7645 = !DILocation(line: 164, column: 12, scope: !7634)
!7646 = !DILocation(line: 164, column: 17, scope: !7634)
!7647 = !DILocation(line: 164, column: 22, scope: !7634)
!7648 = !DILocation(line: 164, column: 21, scope: !7634)
!7649 = !DILocation(line: 164, column: 29, scope: !7634)
!7650 = !DILocation(line: 164, column: 28, scope: !7634)
!7651 = !DILocation(line: 164, column: 25, scope: !7634)
!7652 = !DILocation(line: 164, column: 33, scope: !7634)
!7653 = !DILocation(line: 164, column: 38, scope: !7634)
!7654 = !DILocation(line: 164, column: 37, scope: !7634)
!7655 = !DILocation(line: 164, column: 41, scope: !7634)
!7656 = !DILocation(line: 0, scope: !7634)
!7657 = !DILocation(line: 165, column: 5, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7634, file: !7432, line: 164, column: 51)
!7659 = !DILocation(line: 166, column: 5, scope: !7658)
!7660 = !DILocation(line: 167, column: 4, scope: !7658)
!7661 = distinct !{!7661, !7643, !7662}
!7662 = !DILocation(line: 168, column: 2, scope: !7634)
!7663 = !DILocation(line: 170, column: 10, scope: !7634)
!7664 = !DILocation(line: 170, column: 12, scope: !7634)
!7665 = !DILocation(line: 170, column: 9, scope: !7634)
!7666 = !DILocation(line: 170, column: 26, scope: !7634)
!7667 = !DILocation(line: 170, column: 25, scope: !7634)
!7668 = !DILocation(line: 170, column: 32, scope: !7634)
!7669 = !DILocation(line: 170, column: 31, scope: !7634)
!7670 = !DILocation(line: 170, column: 29, scope: !7634)
!7671 = !DILocation(line: 170, column: 2, scope: !7634)
!7672 = distinct !DISubprogram(name: "strtok_r", scope: !7432, file: !7432, line: 180, type: !7673, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7673 = !DISubroutineType(types: !7674)
!7674 = !{!2801, !2801, !256, !7675}
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!7676 = !DILocalVariable(name: "str", arg: 1, scope: !7672, file: !7432, line: 180, type: !2801)
!7677 = !DILocation(line: 180, column: 22, scope: !7672)
!7678 = !DILocalVariable(name: "sep", arg: 2, scope: !7672, file: !7432, line: 180, type: !256)
!7679 = !DILocation(line: 180, column: 39, scope: !7672)
!7680 = !DILocalVariable(name: "state", arg: 3, scope: !7672, file: !7432, line: 180, type: !7675)
!7681 = !DILocation(line: 180, column: 51, scope: !7672)
!7682 = !DILocalVariable(name: "start", scope: !7672, file: !7432, line: 182, type: !2801)
!7683 = !DILocation(line: 182, column: 8, scope: !7672)
!7684 = !DILocalVariable(name: "end", scope: !7672, file: !7432, line: 182, type: !2801)
!7685 = !DILocation(line: 182, column: 16, scope: !7672)
!7686 = !DILocation(line: 184, column: 10, scope: !7672)
!7687 = !DILocation(line: 184, column: 16, scope: !7672)
!7688 = !DILocation(line: 184, column: 23, scope: !7672)
!7689 = !DILocation(line: 184, column: 22, scope: !7672)
!7690 = !DILocation(line: 184, column: 8, scope: !7672)
!7691 = !DILocation(line: 187, column: 2, scope: !7672)
!7692 = !DILocation(line: 187, column: 10, scope: !7672)
!7693 = !DILocation(line: 187, column: 9, scope: !7672)
!7694 = !DILocation(line: 187, column: 16, scope: !7672)
!7695 = !DILocation(line: 187, column: 26, scope: !7672)
!7696 = !DILocation(line: 187, column: 32, scope: !7672)
!7697 = !DILocation(line: 187, column: 31, scope: !7672)
!7698 = !DILocation(line: 187, column: 19, scope: !7672)
!7699 = !DILocation(line: 0, scope: !7672)
!7700 = !DILocation(line: 188, column: 8, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7672, file: !7432, line: 187, column: 40)
!7702 = distinct !{!7702, !7691, !7703}
!7703 = !DILocation(line: 189, column: 2, scope: !7672)
!7704 = !DILocation(line: 191, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7672, file: !7432, line: 191, column: 6)
!7706 = !DILocation(line: 191, column: 6, scope: !7705)
!7707 = !DILocation(line: 191, column: 13, scope: !7705)
!7708 = !DILocation(line: 191, column: 6, scope: !7672)
!7709 = !DILocation(line: 192, column: 12, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7705, file: !7432, line: 191, column: 22)
!7711 = !DILocation(line: 192, column: 4, scope: !7710)
!7712 = !DILocation(line: 192, column: 10, scope: !7710)
!7713 = !DILocation(line: 193, column: 3, scope: !7710)
!7714 = !DILocation(line: 197, column: 8, scope: !7672)
!7715 = !DILocation(line: 197, column: 6, scope: !7672)
!7716 = !DILocation(line: 198, column: 2, scope: !7672)
!7717 = !DILocation(line: 198, column: 10, scope: !7672)
!7718 = !DILocation(line: 198, column: 9, scope: !7672)
!7719 = !DILocation(line: 198, column: 14, scope: !7672)
!7720 = !DILocation(line: 198, column: 25, scope: !7672)
!7721 = !DILocation(line: 198, column: 31, scope: !7672)
!7722 = !DILocation(line: 198, column: 30, scope: !7672)
!7723 = !DILocation(line: 198, column: 18, scope: !7672)
!7724 = !DILocation(line: 198, column: 17, scope: !7672)
!7725 = !DILocation(line: 199, column: 6, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7672, file: !7432, line: 198, column: 37)
!7727 = distinct !{!7727, !7716, !7728}
!7728 = !DILocation(line: 200, column: 2, scope: !7672)
!7729 = !DILocation(line: 202, column: 7, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7672, file: !7432, line: 202, column: 6)
!7731 = !DILocation(line: 202, column: 6, scope: !7730)
!7732 = !DILocation(line: 202, column: 11, scope: !7730)
!7733 = !DILocation(line: 202, column: 6, scope: !7672)
!7734 = !DILocation(line: 203, column: 4, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7730, file: !7432, line: 202, column: 20)
!7736 = !DILocation(line: 203, column: 8, scope: !7735)
!7737 = !DILocation(line: 204, column: 12, scope: !7735)
!7738 = !DILocation(line: 204, column: 16, scope: !7735)
!7739 = !DILocation(line: 204, column: 4, scope: !7735)
!7740 = !DILocation(line: 204, column: 10, scope: !7735)
!7741 = !DILocation(line: 205, column: 2, scope: !7735)
!7742 = !DILocation(line: 206, column: 12, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7730, file: !7432, line: 205, column: 9)
!7744 = !DILocation(line: 206, column: 4, scope: !7743)
!7745 = !DILocation(line: 206, column: 10, scope: !7743)
!7746 = !DILocation(line: 209, column: 9, scope: !7672)
!7747 = !DILocation(line: 209, column: 2, scope: !7672)
!7748 = !DILocation(line: 210, column: 1, scope: !7672)
!7749 = distinct !DISubprogram(name: "strcat", scope: !7432, file: !7432, line: 212, type: !7433, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7750 = !DILocalVariable(name: "dest", arg: 1, scope: !7749, file: !7432, line: 212, type: !7435)
!7751 = !DILocation(line: 212, column: 30, scope: !7749)
!7752 = !DILocalVariable(name: "src", arg: 2, scope: !7749, file: !7432, line: 212, type: !7436)
!7753 = !DILocation(line: 212, column: 58, scope: !7749)
!7754 = !DILocation(line: 214, column: 9, scope: !7749)
!7755 = !DILocation(line: 214, column: 23, scope: !7749)
!7756 = !DILocation(line: 214, column: 16, scope: !7749)
!7757 = !DILocation(line: 214, column: 14, scope: !7749)
!7758 = !DILocation(line: 214, column: 30, scope: !7749)
!7759 = !DILocation(line: 214, column: 2, scope: !7749)
!7760 = !DILocation(line: 215, column: 9, scope: !7749)
!7761 = !DILocation(line: 215, column: 2, scope: !7749)
!7762 = distinct !DISubprogram(name: "strncat", scope: !7432, file: !7432, line: 218, type: !7462, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7763 = !DILocalVariable(name: "dest", arg: 1, scope: !7762, file: !7432, line: 218, type: !7435)
!7764 = !DILocation(line: 218, column: 31, scope: !7762)
!7765 = !DILocalVariable(name: "src", arg: 2, scope: !7762, file: !7432, line: 218, type: !7436)
!7766 = !DILocation(line: 218, column: 59, scope: !7762)
!7767 = !DILocalVariable(name: "n", arg: 3, scope: !7762, file: !7432, line: 219, type: !217)
!7768 = !DILocation(line: 219, column: 15, scope: !7762)
!7769 = !DILocalVariable(name: "orig_dest", scope: !7762, file: !7432, line: 221, type: !2801)
!7770 = !DILocation(line: 221, column: 8, scope: !7762)
!7771 = !DILocation(line: 221, column: 20, scope: !7762)
!7772 = !DILocalVariable(name: "len", scope: !7762, file: !7432, line: 222, type: !217)
!7773 = !DILocation(line: 222, column: 9, scope: !7762)
!7774 = !DILocation(line: 222, column: 22, scope: !7762)
!7775 = !DILocation(line: 222, column: 15, scope: !7762)
!7776 = !DILocation(line: 224, column: 10, scope: !7762)
!7777 = !DILocation(line: 224, column: 7, scope: !7762)
!7778 = !DILocation(line: 225, column: 2, scope: !7762)
!7779 = !DILocation(line: 225, column: 11, scope: !7762)
!7780 = !DILocation(line: 225, column: 14, scope: !7762)
!7781 = !DILocation(line: 225, column: 19, scope: !7762)
!7782 = !DILocation(line: 225, column: 24, scope: !7762)
!7783 = !DILocation(line: 225, column: 23, scope: !7762)
!7784 = !DILocation(line: 225, column: 28, scope: !7762)
!7785 = !DILocation(line: 0, scope: !7762)
!7786 = !DILocation(line: 226, column: 17, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7762, file: !7432, line: 225, column: 38)
!7788 = !DILocation(line: 226, column: 13, scope: !7787)
!7789 = !DILocation(line: 226, column: 8, scope: !7787)
!7790 = !DILocation(line: 226, column: 11, scope: !7787)
!7791 = distinct !{!7791, !7778, !7792}
!7792 = !DILocation(line: 227, column: 2, scope: !7762)
!7793 = !DILocation(line: 228, column: 3, scope: !7762)
!7794 = !DILocation(line: 228, column: 8, scope: !7762)
!7795 = !DILocation(line: 230, column: 9, scope: !7762)
!7796 = !DILocation(line: 230, column: 2, scope: !7762)
!7797 = distinct !DISubprogram(name: "memcmp", scope: !7432, file: !7432, line: 239, type: !7798, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7798 = !DISubroutineType(types: !7799)
!7799 = !{!103, !13, !13, !217}
!7800 = !DILocalVariable(name: "m1", arg: 1, scope: !7797, file: !7432, line: 239, type: !13)
!7801 = !DILocation(line: 239, column: 24, scope: !7797)
!7802 = !DILocalVariable(name: "m2", arg: 2, scope: !7797, file: !7432, line: 239, type: !13)
!7803 = !DILocation(line: 239, column: 40, scope: !7797)
!7804 = !DILocalVariable(name: "n", arg: 3, scope: !7797, file: !7432, line: 239, type: !217)
!7805 = !DILocation(line: 239, column: 51, scope: !7797)
!7806 = !DILocalVariable(name: "c1", scope: !7797, file: !7432, line: 241, type: !256)
!7807 = !DILocation(line: 241, column: 14, scope: !7797)
!7808 = !DILocation(line: 241, column: 19, scope: !7797)
!7809 = !DILocalVariable(name: "c2", scope: !7797, file: !7432, line: 242, type: !256)
!7810 = !DILocation(line: 242, column: 14, scope: !7797)
!7811 = !DILocation(line: 242, column: 19, scope: !7797)
!7812 = !DILocation(line: 244, column: 7, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7797, file: !7432, line: 244, column: 6)
!7814 = !DILocation(line: 244, column: 6, scope: !7797)
!7815 = !DILocation(line: 245, column: 3, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7813, file: !7432, line: 244, column: 10)
!7817 = !DILocation(line: 248, column: 2, scope: !7797)
!7818 = !DILocation(line: 248, column: 10, scope: !7797)
!7819 = !DILocation(line: 248, column: 14, scope: !7797)
!7820 = !DILocation(line: 248, column: 19, scope: !7797)
!7821 = !DILocation(line: 248, column: 24, scope: !7797)
!7822 = !DILocation(line: 248, column: 23, scope: !7797)
!7823 = !DILocation(line: 248, column: 31, scope: !7797)
!7824 = !DILocation(line: 248, column: 30, scope: !7797)
!7825 = !DILocation(line: 248, column: 27, scope: !7797)
!7826 = !DILocation(line: 0, scope: !7797)
!7827 = !DILocation(line: 249, column: 5, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7797, file: !7432, line: 248, column: 36)
!7829 = !DILocation(line: 250, column: 5, scope: !7828)
!7830 = distinct !{!7830, !7817, !7831}
!7831 = !DILocation(line: 251, column: 2, scope: !7797)
!7832 = !DILocation(line: 253, column: 10, scope: !7797)
!7833 = !DILocation(line: 253, column: 9, scope: !7797)
!7834 = !DILocation(line: 253, column: 16, scope: !7797)
!7835 = !DILocation(line: 253, column: 15, scope: !7797)
!7836 = !DILocation(line: 253, column: 13, scope: !7797)
!7837 = !DILocation(line: 253, column: 2, scope: !7797)
!7838 = !DILocation(line: 254, column: 1, scope: !7797)
!7839 = distinct !DISubprogram(name: "memmove", scope: !7432, file: !7432, line: 263, type: !7840, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!102, !102, !13, !217}
!7842 = !DILocalVariable(name: "d", arg: 1, scope: !7839, file: !7432, line: 263, type: !102)
!7843 = !DILocation(line: 263, column: 21, scope: !7839)
!7844 = !DILocalVariable(name: "s", arg: 2, scope: !7839, file: !7432, line: 263, type: !13)
!7845 = !DILocation(line: 263, column: 36, scope: !7839)
!7846 = !DILocalVariable(name: "n", arg: 3, scope: !7839, file: !7432, line: 263, type: !217)
!7847 = !DILocation(line: 263, column: 46, scope: !7839)
!7848 = !DILocalVariable(name: "dest", scope: !7839, file: !7432, line: 265, type: !2801)
!7849 = !DILocation(line: 265, column: 8, scope: !7839)
!7850 = !DILocation(line: 265, column: 15, scope: !7839)
!7851 = !DILocalVariable(name: "src", scope: !7839, file: !7432, line: 266, type: !256)
!7852 = !DILocation(line: 266, column: 14, scope: !7839)
!7853 = !DILocation(line: 266, column: 21, scope: !7839)
!7854 = !DILocation(line: 268, column: 16, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7839, file: !7432, line: 268, column: 6)
!7856 = !DILocation(line: 268, column: 23, scope: !7855)
!7857 = !DILocation(line: 268, column: 21, scope: !7855)
!7858 = !DILocation(line: 268, column: 30, scope: !7855)
!7859 = !DILocation(line: 268, column: 28, scope: !7855)
!7860 = !DILocation(line: 268, column: 6, scope: !7839)
!7861 = !DILocation(line: 274, column: 3, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7855, file: !7432, line: 268, column: 33)
!7863 = !DILocation(line: 274, column: 10, scope: !7862)
!7864 = !DILocation(line: 274, column: 12, scope: !7862)
!7865 = !DILocation(line: 275, column: 5, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7862, file: !7432, line: 274, column: 17)
!7867 = !DILocation(line: 276, column: 14, scope: !7866)
!7868 = !DILocation(line: 276, column: 18, scope: !7866)
!7869 = !DILocation(line: 276, column: 4, scope: !7866)
!7870 = !DILocation(line: 276, column: 9, scope: !7866)
!7871 = !DILocation(line: 276, column: 12, scope: !7866)
!7872 = distinct !{!7872, !7861, !7873}
!7873 = !DILocation(line: 277, column: 3, scope: !7862)
!7874 = !DILocation(line: 278, column: 2, scope: !7862)
!7875 = !DILocation(line: 280, column: 3, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7855, file: !7432, line: 278, column: 9)
!7877 = !DILocation(line: 280, column: 10, scope: !7876)
!7878 = !DILocation(line: 280, column: 12, scope: !7876)
!7879 = !DILocation(line: 281, column: 13, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7876, file: !7432, line: 280, column: 17)
!7881 = !DILocation(line: 281, column: 12, scope: !7880)
!7882 = !DILocation(line: 281, column: 5, scope: !7880)
!7883 = !DILocation(line: 281, column: 10, scope: !7880)
!7884 = !DILocation(line: 282, column: 8, scope: !7880)
!7885 = !DILocation(line: 283, column: 7, scope: !7880)
!7886 = !DILocation(line: 284, column: 5, scope: !7880)
!7887 = distinct !{!7887, !7875, !7888}
!7888 = !DILocation(line: 285, column: 3, scope: !7876)
!7889 = !DILocation(line: 288, column: 9, scope: !7839)
!7890 = !DILocation(line: 288, column: 2, scope: !7839)
!7891 = distinct !DISubprogram(name: "memcpy", scope: !7432, file: !7432, line: 298, type: !7892, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7892 = !DISubroutineType(types: !7893)
!7893 = !{!102, !7894, !7895, !217}
!7894 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7895 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7896 = !DILocalVariable(name: "d", arg: 1, scope: !7891, file: !7432, line: 298, type: !7894)
!7897 = !DILocation(line: 298, column: 30, scope: !7891)
!7898 = !DILocalVariable(name: "s", arg: 2, scope: !7891, file: !7432, line: 298, type: !7895)
!7899 = !DILocation(line: 298, column: 55, scope: !7891)
!7900 = !DILocalVariable(name: "n", arg: 3, scope: !7891, file: !7432, line: 298, type: !217)
!7901 = !DILocation(line: 298, column: 65, scope: !7891)
!7902 = !DILocalVariable(name: "d_byte", scope: !7891, file: !7432, line: 302, type: !1650)
!7903 = !DILocation(line: 302, column: 17, scope: !7891)
!7904 = !DILocation(line: 302, column: 43, scope: !7891)
!7905 = !DILocalVariable(name: "s_byte", scope: !7891, file: !7432, line: 303, type: !3517)
!7906 = !DILocation(line: 303, column: 23, scope: !7891)
!7907 = !DILocation(line: 303, column: 55, scope: !7891)
!7908 = !DILocalVariable(name: "mask", scope: !7891, file: !7432, line: 306, type: !7909)
!7909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!7910 = !DILocation(line: 306, column: 18, scope: !7891)
!7911 = !DILocation(line: 308, column: 19, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7891, file: !7432, line: 308, column: 6)
!7913 = !DILocation(line: 308, column: 8, scope: !7912)
!7914 = !DILocation(line: 308, column: 34, scope: !7912)
!7915 = !DILocation(line: 308, column: 23, scope: !7912)
!7916 = !DILocation(line: 308, column: 21, scope: !7912)
!7917 = !DILocation(line: 308, column: 42, scope: !7912)
!7918 = !DILocation(line: 308, column: 50, scope: !7912)
!7919 = !DILocation(line: 308, column: 6, scope: !7891)
!7920 = !DILocation(line: 312, column: 3, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7912, file: !7432, line: 308, column: 56)
!7922 = !DILocation(line: 312, column: 22, scope: !7921)
!7923 = !DILocation(line: 312, column: 11, scope: !7921)
!7924 = !DILocation(line: 312, column: 30, scope: !7921)
!7925 = !DILocation(line: 313, column: 8, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !7432, line: 313, column: 8)
!7927 = distinct !DILexicalBlock(scope: !7921, file: !7432, line: 312, column: 38)
!7928 = !DILocation(line: 313, column: 10, scope: !7926)
!7929 = !DILocation(line: 313, column: 8, scope: !7927)
!7930 = !DILocation(line: 314, column: 12, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7926, file: !7432, line: 313, column: 16)
!7932 = !DILocation(line: 314, column: 5, scope: !7931)
!7933 = !DILocation(line: 316, column: 26, scope: !7927)
!7934 = !DILocation(line: 316, column: 18, scope: !7927)
!7935 = !DILocation(line: 316, column: 12, scope: !7927)
!7936 = !DILocation(line: 316, column: 16, scope: !7927)
!7937 = !DILocation(line: 317, column: 5, scope: !7927)
!7938 = distinct !{!7938, !7920, !7939}
!7939 = !DILocation(line: 318, column: 3, scope: !7921)
!7940 = !DILocalVariable(name: "d_word", scope: !7921, file: !7432, line: 322, type: !3519)
!7941 = !DILocation(line: 322, column: 15, scope: !7921)
!7942 = !DILocation(line: 322, column: 38, scope: !7921)
!7943 = !DILocation(line: 322, column: 24, scope: !7921)
!7944 = !DILocalVariable(name: "s_word", scope: !7921, file: !7432, line: 323, type: !3522)
!7945 = !DILocation(line: 323, column: 21, scope: !7921)
!7946 = !DILocation(line: 323, column: 50, scope: !7921)
!7947 = !DILocation(line: 323, column: 30, scope: !7921)
!7948 = !DILocation(line: 325, column: 3, scope: !7921)
!7949 = !DILocation(line: 325, column: 10, scope: !7921)
!7950 = !DILocation(line: 325, column: 12, scope: !7921)
!7951 = !DILocation(line: 326, column: 26, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7921, file: !7432, line: 325, column: 35)
!7953 = !DILocation(line: 326, column: 18, scope: !7952)
!7954 = !DILocation(line: 326, column: 12, scope: !7952)
!7955 = !DILocation(line: 326, column: 16, scope: !7952)
!7956 = !DILocation(line: 327, column: 6, scope: !7952)
!7957 = distinct !{!7957, !7948, !7958}
!7958 = !DILocation(line: 328, column: 3, scope: !7921)
!7959 = !DILocation(line: 330, column: 29, scope: !7921)
!7960 = !DILocation(line: 330, column: 12, scope: !7921)
!7961 = !DILocation(line: 330, column: 10, scope: !7921)
!7962 = !DILocation(line: 331, column: 29, scope: !7921)
!7963 = !DILocation(line: 331, column: 12, scope: !7921)
!7964 = !DILocation(line: 331, column: 10, scope: !7921)
!7965 = !DILocation(line: 332, column: 2, scope: !7921)
!7966 = !DILocation(line: 337, column: 2, scope: !7891)
!7967 = !DILocation(line: 337, column: 9, scope: !7891)
!7968 = !DILocation(line: 337, column: 11, scope: !7891)
!7969 = !DILocation(line: 338, column: 25, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7891, file: !7432, line: 337, column: 16)
!7971 = !DILocation(line: 338, column: 17, scope: !7970)
!7972 = !DILocation(line: 338, column: 11, scope: !7970)
!7973 = !DILocation(line: 338, column: 15, scope: !7970)
!7974 = !DILocation(line: 339, column: 4, scope: !7970)
!7975 = distinct !{!7975, !7966, !7976}
!7976 = !DILocation(line: 340, column: 2, scope: !7891)
!7977 = !DILocation(line: 342, column: 9, scope: !7891)
!7978 = !DILocation(line: 342, column: 2, scope: !7891)
!7979 = !DILocation(line: 343, column: 1, scope: !7891)
!7980 = distinct !DISubprogram(name: "memset", scope: !7432, file: !7432, line: 352, type: !7981, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{!102, !102, !103, !217}
!7983 = !DILocalVariable(name: "buf", arg: 1, scope: !7980, file: !7432, line: 352, type: !102)
!7984 = !DILocation(line: 352, column: 20, scope: !7980)
!7985 = !DILocalVariable(name: "c", arg: 2, scope: !7980, file: !7432, line: 352, type: !103)
!7986 = !DILocation(line: 352, column: 29, scope: !7980)
!7987 = !DILocalVariable(name: "n", arg: 3, scope: !7980, file: !7432, line: 352, type: !217)
!7988 = !DILocation(line: 352, column: 39, scope: !7980)
!7989 = !DILocalVariable(name: "d_byte", scope: !7980, file: !7432, line: 356, type: !1650)
!7990 = !DILocation(line: 356, column: 17, scope: !7980)
!7991 = !DILocation(line: 356, column: 43, scope: !7980)
!7992 = !DILocalVariable(name: "c_byte", scope: !7980, file: !7432, line: 357, type: !157)
!7993 = !DILocation(line: 357, column: 16, scope: !7980)
!7994 = !DILocation(line: 357, column: 40, scope: !7980)
!7995 = !DILocation(line: 357, column: 25, scope: !7980)
!7996 = !DILocation(line: 360, column: 2, scope: !7980)
!7997 = !DILocation(line: 360, column: 21, scope: !7980)
!7998 = !DILocation(line: 360, column: 10, scope: !7980)
!7999 = !DILocation(line: 360, column: 29, scope: !7980)
!8000 = !DILocation(line: 361, column: 7, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !7432, line: 361, column: 7)
!8002 = distinct !DILexicalBlock(scope: !7980, file: !7432, line: 360, column: 57)
!8003 = !DILocation(line: 361, column: 9, scope: !8001)
!8004 = !DILocation(line: 361, column: 7, scope: !8002)
!8005 = !DILocation(line: 362, column: 11, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !7432, line: 361, column: 15)
!8007 = !DILocation(line: 362, column: 4, scope: !8006)
!8008 = !DILocation(line: 364, column: 17, scope: !8002)
!8009 = !DILocation(line: 364, column: 11, scope: !8002)
!8010 = !DILocation(line: 364, column: 15, scope: !8002)
!8011 = !DILocation(line: 365, column: 4, scope: !8002)
!8012 = distinct !{!8012, !7996, !8013}
!8013 = !DILocation(line: 366, column: 2, scope: !7980)
!8014 = !DILocalVariable(name: "d_word", scope: !7980, file: !7432, line: 370, type: !3519)
!8015 = !DILocation(line: 370, column: 14, scope: !7980)
!8016 = !DILocation(line: 370, column: 37, scope: !7980)
!8017 = !DILocation(line: 370, column: 23, scope: !7980)
!8018 = !DILocalVariable(name: "c_word", scope: !7980, file: !7432, line: 371, type: !3520)
!8019 = !DILocation(line: 371, column: 13, scope: !7980)
!8020 = !DILocation(line: 371, column: 34, scope: !7980)
!8021 = !DILocation(line: 371, column: 22, scope: !7980)
!8022 = !DILocation(line: 373, column: 12, scope: !7980)
!8023 = !DILocation(line: 373, column: 19, scope: !7980)
!8024 = !DILocation(line: 373, column: 9, scope: !7980)
!8025 = !DILocation(line: 374, column: 12, scope: !7980)
!8026 = !DILocation(line: 374, column: 19, scope: !7980)
!8027 = !DILocation(line: 374, column: 9, scope: !7980)
!8028 = !DILocation(line: 379, column: 2, scope: !7980)
!8029 = !DILocation(line: 379, column: 9, scope: !7980)
!8030 = !DILocation(line: 379, column: 11, scope: !7980)
!8031 = !DILocation(line: 380, column: 17, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7980, file: !7432, line: 379, column: 34)
!8033 = !DILocation(line: 380, column: 11, scope: !8032)
!8034 = !DILocation(line: 380, column: 15, scope: !8032)
!8035 = !DILocation(line: 381, column: 5, scope: !8032)
!8036 = distinct !{!8036, !8028, !8037}
!8037 = !DILocation(line: 382, column: 2, scope: !7980)
!8038 = !DILocation(line: 386, column: 28, scope: !7980)
!8039 = !DILocation(line: 386, column: 11, scope: !7980)
!8040 = !DILocation(line: 386, column: 9, scope: !7980)
!8041 = !DILocation(line: 389, column: 2, scope: !7980)
!8042 = !DILocation(line: 389, column: 9, scope: !7980)
!8043 = !DILocation(line: 389, column: 11, scope: !7980)
!8044 = !DILocation(line: 390, column: 17, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7980, file: !7432, line: 389, column: 16)
!8046 = !DILocation(line: 390, column: 11, scope: !8045)
!8047 = !DILocation(line: 390, column: 15, scope: !8045)
!8048 = !DILocation(line: 391, column: 4, scope: !8045)
!8049 = distinct !{!8049, !8041, !8050}
!8050 = !DILocation(line: 392, column: 2, scope: !7980)
!8051 = !DILocation(line: 394, column: 9, scope: !7980)
!8052 = !DILocation(line: 394, column: 2, scope: !7980)
!8053 = !DILocation(line: 395, column: 1, scope: !7980)
!8054 = distinct !DISubprogram(name: "memchr", scope: !7432, file: !7432, line: 404, type: !8055, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3514, retainedNodes: !223)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{!102, !13, !103, !217}
!8057 = !DILocalVariable(name: "s", arg: 1, scope: !8054, file: !7432, line: 404, type: !13)
!8058 = !DILocation(line: 404, column: 26, scope: !8054)
!8059 = !DILocalVariable(name: "c", arg: 2, scope: !8054, file: !7432, line: 404, type: !103)
!8060 = !DILocation(line: 404, column: 33, scope: !8054)
!8061 = !DILocalVariable(name: "n", arg: 3, scope: !8054, file: !7432, line: 404, type: !217)
!8062 = !DILocation(line: 404, column: 43, scope: !8054)
!8063 = !DILocation(line: 406, column: 6, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8054, file: !7432, line: 406, column: 6)
!8065 = !DILocation(line: 406, column: 8, scope: !8064)
!8066 = !DILocation(line: 406, column: 6, scope: !8054)
!8067 = !DILocalVariable(name: "p", scope: !8068, file: !7432, line: 407, type: !3517)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !7432, line: 406, column: 14)
!8069 = !DILocation(line: 407, column: 24, scope: !8068)
!8070 = !DILocation(line: 407, column: 28, scope: !8068)
!8071 = !DILocation(line: 409, column: 3, scope: !8068)
!8072 = !DILocation(line: 410, column: 10, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !7432, line: 410, column: 8)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !7432, line: 409, column: 6)
!8075 = !DILocation(line: 410, column: 8, scope: !8073)
!8076 = !DILocation(line: 410, column: 31, scope: !8073)
!8077 = !DILocation(line: 410, column: 16, scope: !8073)
!8078 = !DILocation(line: 410, column: 13, scope: !8073)
!8079 = !DILocation(line: 410, column: 8, scope: !8074)
!8080 = !DILocation(line: 411, column: 22, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8073, file: !7432, line: 410, column: 34)
!8082 = !DILocation(line: 411, column: 24, scope: !8081)
!8083 = !DILocation(line: 411, column: 5, scope: !8081)
!8084 = !DILocation(line: 414, column: 3, scope: !8074)
!8085 = !DILocation(line: 414, column: 12, scope: !8068)
!8086 = !DILocation(line: 414, column: 16, scope: !8068)
!8087 = distinct !{!8087, !8071, !8088}
!8088 = !DILocation(line: 414, column: 20, scope: !8068)
!8089 = !DILocation(line: 415, column: 2, scope: !8068)
!8090 = !DILocation(line: 417, column: 2, scope: !8054)
!8091 = !DILocation(line: 418, column: 1, scope: !8054)
!8092 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1053, file: !1053, line: 23, type: !3703, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8093 = !DILocalVariable(name: "hook", arg: 1, scope: !8092, file: !1053, line: 23, type: !273)
!8094 = !DILocation(line: 23, column: 34, scope: !8092)
!8095 = !DILocation(line: 25, column: 17, scope: !8092)
!8096 = !DILocation(line: 25, column: 15, scope: !8092)
!8097 = !DILocation(line: 26, column: 1, scope: !8092)
!8098 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1053, file: !1053, line: 14, type: !274, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8099 = !DILocalVariable(name: "c", arg: 1, scope: !8098, file: !1053, line: 14, type: !103)
!8100 = !DILocation(line: 14, column: 37, scope: !8098)
!8101 = !DILocation(line: 16, column: 9, scope: !8098)
!8102 = !DILocation(line: 18, column: 2, scope: !8098)
!8103 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1053, file: !1053, line: 28, type: !8104, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!103, !103, !1049}
!8106 = !DILocalVariable(name: "c", arg: 1, scope: !8103, file: !1053, line: 28, type: !103)
!8107 = !DILocation(line: 28, column: 29, scope: !8103)
!8108 = !DILocalVariable(name: "stream", arg: 2, scope: !8103, file: !1053, line: 28, type: !1049)
!8109 = !DILocation(line: 28, column: 38, scope: !8103)
!8110 = !DILocation(line: 30, column: 10, scope: !8103)
!8111 = !DILocation(line: 30, column: 17, scope: !8103)
!8112 = !DILocation(line: 30, column: 27, scope: !8103)
!8113 = !DILocation(line: 30, column: 30, scope: !8103)
!8114 = !DILocation(line: 30, column: 37, scope: !8103)
!8115 = !DILocation(line: 30, column: 9, scope: !8103)
!8116 = !DILocation(line: 30, column: 50, scope: !8103)
!8117 = !DILocation(line: 30, column: 63, scope: !8103)
!8118 = !DILocation(line: 30, column: 2, scope: !8103)
!8119 = distinct !DISubprogram(name: "fputc", scope: !1053, file: !1053, line: 41, type: !8104, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8120 = !DILocalVariable(name: "c", arg: 1, scope: !8119, file: !1053, line: 41, type: !103)
!8121 = !DILocation(line: 41, column: 15, scope: !8119)
!8122 = !DILocalVariable(name: "stream", arg: 2, scope: !8119, file: !1053, line: 41, type: !1049)
!8123 = !DILocation(line: 41, column: 24, scope: !8119)
!8124 = !DILocation(line: 43, column: 22, scope: !8119)
!8125 = !DILocation(line: 43, column: 25, scope: !8119)
!8126 = !DILocation(line: 43, column: 9, scope: !8119)
!8127 = !DILocation(line: 43, column: 2, scope: !8119)
!8128 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8129, file: !8129, line: 72, type: !8104, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8129 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!8130 = !DILocalVariable(name: "c", arg: 1, scope: !8128, file: !8129, line: 72, type: !103)
!8131 = !DILocation(line: 72, column: 36, scope: !8128)
!8132 = !DILocalVariable(name: "stream", arg: 2, scope: !8128, file: !8129, line: 72, type: !1049)
!8133 = !DILocation(line: 72, column: 46, scope: !8128)
!8134 = !DILocation(line: 81, column: 2, scope: !8128)
!8135 = !DILocation(line: 81, column: 2, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8128, file: !8129, line: 81, column: 2)
!8137 = !{i64 2149678241}
!8138 = !DILocation(line: 82, column: 29, scope: !8128)
!8139 = !DILocation(line: 82, column: 32, scope: !8128)
!8140 = !DILocation(line: 82, column: 9, scope: !8128)
!8141 = !DILocation(line: 82, column: 2, scope: !8128)
!8142 = distinct !DISubprogram(name: "fputs", scope: !1053, file: !1053, line: 46, type: !8143, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!103, !7436, !8145}
!8145 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1049)
!8146 = !DILocalVariable(name: "s", arg: 1, scope: !8142, file: !1053, line: 46, type: !7436)
!8147 = !DILocation(line: 46, column: 33, scope: !8142)
!8148 = !DILocalVariable(name: "stream", arg: 2, scope: !8142, file: !1053, line: 46, type: !8145)
!8149 = !DILocation(line: 46, column: 52, scope: !8142)
!8150 = !DILocalVariable(name: "len", scope: !8142, file: !1053, line: 48, type: !103)
!8151 = !DILocation(line: 48, column: 6, scope: !8142)
!8152 = !DILocation(line: 48, column: 19, scope: !8142)
!8153 = !DILocation(line: 48, column: 12, scope: !8142)
!8154 = !DILocalVariable(name: "ret", scope: !8142, file: !1053, line: 49, type: !103)
!8155 = !DILocation(line: 49, column: 6, scope: !8142)
!8156 = !DILocation(line: 51, column: 15, scope: !8142)
!8157 = !DILocation(line: 51, column: 21, scope: !8142)
!8158 = !DILocation(line: 51, column: 26, scope: !8142)
!8159 = !DILocation(line: 51, column: 8, scope: !8142)
!8160 = !DILocation(line: 51, column: 6, scope: !8142)
!8161 = !DILocation(line: 53, column: 9, scope: !8142)
!8162 = !DILocation(line: 53, column: 16, scope: !8142)
!8163 = !DILocation(line: 53, column: 13, scope: !8142)
!8164 = !DILocation(line: 53, column: 2, scope: !8142)
!8165 = distinct !DISubprogram(name: "fwrite", scope: !1053, file: !1053, line: 99, type: !8166, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8166 = !DISubroutineType(types: !8167)
!8167 = !{!217, !7895, !217, !217, !8145}
!8168 = !DILocalVariable(name: "ptr", arg: 1, scope: !8165, file: !1053, line: 99, type: !7895)
!8169 = !DILocation(line: 99, column: 37, scope: !8165)
!8170 = !DILocalVariable(name: "size", arg: 2, scope: !8165, file: !1053, line: 99, type: !217)
!8171 = !DILocation(line: 99, column: 49, scope: !8165)
!8172 = !DILocalVariable(name: "nitems", arg: 3, scope: !8165, file: !1053, line: 99, type: !217)
!8173 = !DILocation(line: 99, column: 62, scope: !8165)
!8174 = !DILocalVariable(name: "stream", arg: 4, scope: !8165, file: !1053, line: 100, type: !8145)
!8175 = !DILocation(line: 100, column: 22, scope: !8165)
!8176 = !DILocation(line: 102, column: 23, scope: !8165)
!8177 = !DILocation(line: 102, column: 28, scope: !8165)
!8178 = !DILocation(line: 102, column: 34, scope: !8165)
!8179 = !DILocation(line: 102, column: 42, scope: !8165)
!8180 = !DILocation(line: 102, column: 9, scope: !8165)
!8181 = !DILocation(line: 102, column: 2, scope: !8165)
!8182 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8129, file: !8129, line: 96, type: !8166, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8183 = !DILocalVariable(name: "ptr", arg: 1, scope: !8182, file: !8129, line: 96, type: !7895)
!8184 = !DILocation(line: 96, column: 58, scope: !8182)
!8185 = !DILocalVariable(name: "size", arg: 2, scope: !8182, file: !8129, line: 96, type: !217)
!8186 = !DILocation(line: 96, column: 70, scope: !8182)
!8187 = !DILocalVariable(name: "nitems", arg: 3, scope: !8182, file: !8129, line: 96, type: !217)
!8188 = !DILocation(line: 96, column: 83, scope: !8182)
!8189 = !DILocalVariable(name: "stream", arg: 4, scope: !8182, file: !8129, line: 96, type: !8145)
!8190 = !DILocation(line: 96, column: 107, scope: !8182)
!8191 = !DILocation(line: 107, column: 2, scope: !8182)
!8192 = !DILocation(line: 107, column: 2, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8182, file: !8129, line: 107, column: 2)
!8194 = !{i64 2149678345}
!8195 = !DILocation(line: 108, column: 30, scope: !8182)
!8196 = !DILocation(line: 108, column: 35, scope: !8182)
!8197 = !DILocation(line: 108, column: 41, scope: !8182)
!8198 = !DILocation(line: 108, column: 49, scope: !8182)
!8199 = !DILocation(line: 108, column: 9, scope: !8182)
!8200 = !DILocation(line: 108, column: 2, scope: !8182)
!8201 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1053, file: !1053, line: 56, type: !8166, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8202 = !DILocalVariable(name: "ptr", arg: 1, scope: !8201, file: !1053, line: 56, type: !7895)
!8203 = !DILocation(line: 56, column: 51, scope: !8201)
!8204 = !DILocalVariable(name: "size", arg: 2, scope: !8201, file: !1053, line: 56, type: !217)
!8205 = !DILocation(line: 56, column: 63, scope: !8201)
!8206 = !DILocalVariable(name: "nitems", arg: 3, scope: !8201, file: !1053, line: 57, type: !217)
!8207 = !DILocation(line: 57, column: 15, scope: !8201)
!8208 = !DILocalVariable(name: "stream", arg: 4, scope: !8201, file: !1053, line: 57, type: !8145)
!8209 = !DILocation(line: 57, column: 39, scope: !8201)
!8210 = !DILocalVariable(name: "i", scope: !8201, file: !1053, line: 59, type: !217)
!8211 = !DILocation(line: 59, column: 9, scope: !8201)
!8212 = !DILocalVariable(name: "j", scope: !8201, file: !1053, line: 60, type: !217)
!8213 = !DILocation(line: 60, column: 9, scope: !8201)
!8214 = !DILocalVariable(name: "p", scope: !8201, file: !1053, line: 61, type: !3517)
!8215 = !DILocation(line: 61, column: 23, scope: !8201)
!8216 = !DILocation(line: 63, column: 7, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8201, file: !1053, line: 63, column: 6)
!8218 = !DILocation(line: 63, column: 14, scope: !8217)
!8219 = !DILocation(line: 63, column: 24, scope: !8217)
!8220 = !DILocation(line: 63, column: 27, scope: !8217)
!8221 = !DILocation(line: 63, column: 34, scope: !8217)
!8222 = !DILocation(line: 63, column: 45, scope: !8217)
!8223 = !DILocation(line: 64, column: 7, scope: !8217)
!8224 = !DILocation(line: 64, column: 14, scope: !8217)
!8225 = !DILocation(line: 64, column: 20, scope: !8217)
!8226 = !DILocation(line: 64, column: 24, scope: !8217)
!8227 = !DILocation(line: 64, column: 29, scope: !8217)
!8228 = !DILocation(line: 63, column: 6, scope: !8201)
!8229 = !DILocation(line: 65, column: 3, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8217, file: !1053, line: 64, column: 36)
!8231 = !DILocation(line: 68, column: 6, scope: !8201)
!8232 = !DILocation(line: 68, column: 4, scope: !8201)
!8233 = !DILocation(line: 69, column: 6, scope: !8201)
!8234 = !DILocation(line: 69, column: 4, scope: !8201)
!8235 = !DILocation(line: 70, column: 2, scope: !8201)
!8236 = !DILocation(line: 71, column: 7, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8201, file: !1053, line: 70, column: 5)
!8238 = !DILocation(line: 71, column: 5, scope: !8237)
!8239 = !DILocation(line: 72, column: 3, scope: !8237)
!8240 = !DILocation(line: 73, column: 8, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !1053, line: 73, column: 8)
!8242 = distinct !DILexicalBlock(scope: !8237, file: !1053, line: 72, column: 6)
!8243 = !DILocation(line: 73, column: 29, scope: !8241)
!8244 = !DILocation(line: 73, column: 27, scope: !8241)
!8245 = !DILocation(line: 73, column: 21, scope: !8241)
!8246 = !DILocation(line: 73, column: 33, scope: !8241)
!8247 = !DILocation(line: 73, column: 8, scope: !8242)
!8248 = !DILocation(line: 74, column: 5, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8241, file: !1053, line: 73, column: 41)
!8250 = !DILocation(line: 76, column: 5, scope: !8242)
!8251 = !DILocation(line: 77, column: 3, scope: !8242)
!8252 = !DILocation(line: 77, column: 12, scope: !8237)
!8253 = !DILocation(line: 77, column: 14, scope: !8237)
!8254 = distinct !{!8254, !8239, !8255}
!8255 = !DILocation(line: 77, column: 17, scope: !8237)
!8256 = !DILocation(line: 79, column: 4, scope: !8237)
!8257 = !DILocation(line: 80, column: 2, scope: !8237)
!8258 = !DILocation(line: 80, column: 11, scope: !8201)
!8259 = !DILocation(line: 80, column: 13, scope: !8201)
!8260 = distinct !{!8260, !8235, !8261}
!8261 = !DILocation(line: 80, column: 16, scope: !8201)
!8262 = !DILabel(scope: !8201, name: "done", file: !1053, line: 82)
!8263 = !DILocation(line: 82, column: 1, scope: !8201)
!8264 = !DILocation(line: 83, column: 10, scope: !8201)
!8265 = !DILocation(line: 83, column: 19, scope: !8201)
!8266 = !DILocation(line: 83, column: 17, scope: !8201)
!8267 = !DILocation(line: 83, column: 2, scope: !8201)
!8268 = !DILocation(line: 84, column: 1, scope: !8201)
!8269 = distinct !DISubprogram(name: "puts", scope: !1053, file: !1053, line: 106, type: !8270, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!103, !256}
!8272 = !DILocalVariable(name: "s", arg: 1, scope: !8269, file: !1053, line: 106, type: !256)
!8273 = !DILocation(line: 106, column: 22, scope: !8269)
!8274 = !DILocation(line: 108, column: 12, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8269, file: !1053, line: 108, column: 6)
!8276 = !DILocation(line: 108, column: 6, scope: !8275)
!8277 = !DILocation(line: 108, column: 23, scope: !8275)
!8278 = !DILocation(line: 108, column: 6, scope: !8269)
!8279 = !DILocation(line: 109, column: 3, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !1053, line: 108, column: 31)
!8281 = !DILocation(line: 112, column: 9, scope: !8269)
!8282 = !DILocation(line: 112, column: 29, scope: !8269)
!8283 = !DILocation(line: 112, column: 2, scope: !8269)
!8284 = !DILocation(line: 113, column: 1, scope: !8269)
!8285 = distinct !DISubprogram(name: "sam0_eic_isr", scope: !1544, file: !1544, line: 51, type: !8286, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{null, !1557}
!8288 = !DILocalVariable(name: "dev", arg: 1, scope: !8285, file: !1544, line: 51, type: !1557)
!8289 = !DILocation(line: 51, column: 47, scope: !8285)
!8290 = !DILocalVariable(name: "dev_data", scope: !8285, file: !1544, line: 53, type: !8291)
!8291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8292)
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!8293 = !DILocation(line: 53, column: 30, scope: !8285)
!8294 = !DILocation(line: 53, column: 41, scope: !8285)
!8295 = !DILocation(line: 53, column: 46, scope: !8285)
!8296 = !DILocalVariable(name: "bits", scope: !8285, file: !1544, line: 54, type: !170)
!8297 = !DILocation(line: 54, column: 11, scope: !8285)
!8298 = !DILocation(line: 54, column: 31, scope: !8285)
!8299 = !DILocation(line: 54, column: 18, scope: !8285)
!8300 = !DILocalVariable(name: "line_index", scope: !8285, file: !1544, line: 55, type: !173)
!8301 = !DILocation(line: 55, column: 11, scope: !8285)
!8302 = !DILocation(line: 58, column: 21, scope: !8285)
!8303 = !DILocation(line: 58, column: 19, scope: !8285)
!8304 = !DILocation(line: 65, column: 6, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8285, file: !1544, line: 65, column: 6)
!8306 = !DILocation(line: 65, column: 11, scope: !8305)
!8307 = !DILocation(line: 65, column: 6, scope: !8285)
!8308 = !DILocation(line: 66, column: 14, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8305, file: !1544, line: 65, column: 19)
!8310 = !DILocation(line: 67, column: 2, scope: !8309)
!8311 = !DILocation(line: 68, column: 14, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8305, file: !1544, line: 67, column: 9)
!8313 = !DILocation(line: 69, column: 8, scope: !8312)
!8314 = !DILocation(line: 77, column: 2, scope: !8285)
!8315 = !DILocation(line: 77, column: 9, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !1544, line: 77, column: 2)
!8317 = distinct !DILexicalBlock(scope: !8285, file: !1544, line: 77, column: 2)
!8318 = !DILocation(line: 77, column: 2, scope: !8317)
!8319 = !DILocation(line: 78, column: 9, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !1544, line: 78, column: 7)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !1544, line: 77, column: 41)
!8322 = !DILocation(line: 78, column: 14, scope: !8320)
!8323 = !DILocation(line: 78, column: 7, scope: !8321)
!8324 = !DILocation(line: 79, column: 4, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8320, file: !1544, line: 78, column: 20)
!8326 = !DILocalVariable(name: "line_assignment", scope: !8321, file: !1544, line: 87, type: !8327)
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!8328 = !DILocation(line: 87, column: 36, scope: !8321)
!8329 = !DILocation(line: 88, column: 5, scope: !8321)
!8330 = !DILocation(line: 88, column: 15, scope: !8321)
!8331 = !DILocation(line: 88, column: 21, scope: !8321)
!8332 = !DILocalVariable(name: "port_data", scope: !8321, file: !1544, line: 89, type: !8333)
!8333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!8334 = !DILocation(line: 89, column: 30, scope: !8321)
!8335 = !DILocation(line: 90, column: 5, scope: !8321)
!8336 = !DILocation(line: 90, column: 15, scope: !8321)
!8337 = !DILocation(line: 90, column: 21, scope: !8321)
!8338 = !DILocation(line: 90, column: 38, scope: !8321)
!8339 = !DILocation(line: 92, column: 3, scope: !8321)
!8340 = !DILocation(line: 92, column: 14, scope: !8321)
!8341 = !DILocation(line: 92, column: 17, scope: !8321)
!8342 = !DILocation(line: 92, column: 44, scope: !8321)
!8343 = !DILocation(line: 92, column: 55, scope: !8321)
!8344 = !DILocation(line: 93, column: 2, scope: !8321)
!8345 = !DILocation(line: 77, column: 20, scope: !8316)
!8346 = !DILocation(line: 77, column: 37, scope: !8316)
!8347 = !DILocation(line: 77, column: 2, scope: !8316)
!8348 = distinct !{!8348, !8318, !8349}
!8349 = !DILocation(line: 93, column: 2, scope: !8317)
!8350 = !DILocation(line: 94, column: 1, scope: !8285)
!8351 = !DILocalVariable(name: "dev", arg: 1, scope: !1605, file: !1544, line: 335, type: !1557)
!8352 = !DILocation(line: 335, column: 47, scope: !1605)
!8353 = !DILocation(line: 337, column: 2, scope: !1605)
!8354 = !DILocation(line: 348, column: 24, scope: !1605)
!8355 = !DILocation(line: 351, column: 20, scope: !1605)
!8356 = !DILocation(line: 356, column: 2, scope: !1605)
!8357 = !DILocation(line: 356, column: 2, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !1544, line: 356, column: 2)
!8359 = distinct !DILexicalBlock(scope: !1605, file: !1544, line: 356, column: 2)
!8360 = !DILocation(line: 356, column: 2, scope: !8359)
!8361 = !DILocation(line: 404, column: 2, scope: !1605)
!8362 = !DILocation(line: 405, column: 2, scope: !1605)
!8363 = !DILocation(line: 407, column: 2, scope: !1605)
!8364 = distinct !DISubprogram(name: "set_eic_enable", scope: !1544, file: !1544, line: 42, type: !8365, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8365 = !DISubroutineType(types: !8366)
!8366 = !{null, !1035}
!8367 = !DILocalVariable(name: "on", arg: 1, scope: !8364, file: !1544, line: 42, type: !1035)
!8368 = !DILocation(line: 42, column: 40, scope: !8364)
!8369 = !DILocation(line: 47, column: 25, scope: !8364)
!8370 = !DILocation(line: 47, column: 23, scope: !8364)
!8371 = !DILocation(line: 49, column: 1, scope: !8364)
!8372 = distinct !DISubprogram(name: "wait_synchronization", scope: !1544, file: !1544, line: 31, type: !253, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8373 = !DILocation(line: 37, column: 2, scope: !8372)
!8374 = !DILocation(line: 37, column: 25, scope: !8372)
!8375 = distinct !{!8375, !8373, !8376}
!8376 = !DILocation(line: 38, column: 2, scope: !8372)
!8377 = !DILocation(line: 40, column: 1, scope: !8372)
!8378 = distinct !DISubprogram(name: "sam0_eic_acquire", scope: !1544, file: !1544, line: 96, type: !8379, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{!103, !103, !103, !1059, !1035, !1582, !102}
!8381 = !DILocalVariable(name: "port", arg: 1, scope: !8378, file: !1544, line: 96, type: !103)
!8382 = !DILocation(line: 96, column: 26, scope: !8378)
!8383 = !DILocalVariable(name: "pin", arg: 2, scope: !8378, file: !1544, line: 96, type: !103)
!8384 = !DILocation(line: 96, column: 36, scope: !8378)
!8385 = !DILocalVariable(name: "trigger", arg: 3, scope: !8378, file: !1544, line: 96, type: !1059)
!8386 = !DILocation(line: 96, column: 63, scope: !8378)
!8387 = !DILocalVariable(name: "filter", arg: 4, scope: !8378, file: !1544, line: 97, type: !1035)
!8388 = !DILocation(line: 97, column: 13, scope: !8378)
!8389 = !DILocalVariable(name: "cb", arg: 5, scope: !8378, file: !1544, line: 97, type: !1582)
!8390 = !DILocation(line: 97, column: 41, scope: !8378)
!8391 = !DILocalVariable(name: "data", arg: 6, scope: !8378, file: !1544, line: 97, type: !102)
!8392 = !DILocation(line: 97, column: 51, scope: !8378)
!8393 = !DILocalVariable(name: "dev", scope: !8378, file: !1544, line: 99, type: !8394)
!8394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!8395 = !DILocation(line: 99, column: 29, scope: !8378)
!8396 = !DILocalVariable(name: "dev_data", scope: !8378, file: !1544, line: 100, type: !8292)
!8397 = !DILocation(line: 100, column: 24, scope: !8378)
!8398 = !DILocation(line: 100, column: 40, scope: !8378)
!8399 = !DILocation(line: 100, column: 35, scope: !8378)
!8400 = !DILocalVariable(name: "port_data", scope: !8378, file: !1544, line: 101, type: !8333)
!8401 = !DILocation(line: 101, column: 29, scope: !8378)
!8402 = !DILocalVariable(name: "line_assignment", scope: !8378, file: !1544, line: 102, type: !8327)
!8403 = !DILocation(line: 102, column: 35, scope: !8378)
!8404 = !DILocalVariable(name: "mask", scope: !8378, file: !1544, line: 103, type: !173)
!8405 = !DILocation(line: 103, column: 11, scope: !8378)
!8406 = !DILocalVariable(name: "line_index", scope: !8378, file: !1544, line: 104, type: !103)
!8407 = !DILocation(line: 104, column: 6, scope: !8378)
!8408 = !DILocalVariable(name: "config_index", scope: !8378, file: !1544, line: 105, type: !103)
!8409 = !DILocation(line: 105, column: 6, scope: !8378)
!8410 = !DILocalVariable(name: "config_shift", scope: !8378, file: !1544, line: 106, type: !103)
!8411 = !DILocation(line: 106, column: 6, scope: !8378)
!8412 = !DILocalVariable(name: "key", scope: !8378, file: !1544, line: 107, type: !32)
!8413 = !DILocation(line: 107, column: 15, scope: !8378)
!8414 = !DILocalVariable(name: "config", scope: !8378, file: !1544, line: 108, type: !173)
!8415 = !DILocation(line: 108, column: 11, scope: !8378)
!8416 = !DILocation(line: 110, column: 36, scope: !8378)
!8417 = !DILocation(line: 110, column: 42, scope: !8378)
!8418 = !DILocation(line: 110, column: 15, scope: !8378)
!8419 = !DILocation(line: 110, column: 13, scope: !8378)
!8420 = !DILocation(line: 111, column: 6, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8378, file: !1544, line: 111, column: 6)
!8422 = !DILocation(line: 111, column: 17, scope: !8421)
!8423 = !DILocation(line: 111, column: 6, scope: !8378)
!8424 = !DILocation(line: 112, column: 10, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !1544, line: 111, column: 22)
!8426 = !DILocation(line: 112, column: 3, scope: !8425)
!8427 = !DILocation(line: 115, column: 9, scope: !8378)
!8428 = !DILocation(line: 115, column: 7, scope: !8378)
!8429 = !DILocation(line: 116, column: 17, scope: !8378)
!8430 = !DILocation(line: 116, column: 28, scope: !8378)
!8431 = !DILocation(line: 116, column: 15, scope: !8378)
!8432 = !DILocation(line: 117, column: 18, scope: !8378)
!8433 = !DILocation(line: 117, column: 29, scope: !8378)
!8434 = !DILocation(line: 117, column: 34, scope: !8378)
!8435 = !DILocation(line: 117, column: 15, scope: !8378)
!8436 = !DILocalVariable(name: "key", scope: !8437, file: !6304, line: 44, type: !32)
!8437 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8438 = !DILocation(line: 44, column: 15, scope: !8437, inlinedAt: !8439)
!8439 = distinct !DILocation(line: 120, column: 8, scope: !8378)
!8440 = !DILocation(line: 47, column: 2, scope: !8437, inlinedAt: !8439)
!8441 = !{i64 1317818}
!8442 = !DILocation(line: 76, column: 9, scope: !8437, inlinedAt: !8439)
!8443 = !DILocation(line: 120, column: 6, scope: !8378)
!8444 = !DILocation(line: 122, column: 2, scope: !8378)
!8445 = !DILocation(line: 124, column: 21, scope: !8378)
!8446 = !DILocation(line: 124, column: 31, scope: !8378)
!8447 = !DILocation(line: 124, column: 37, scope: !8378)
!8448 = !DILocation(line: 124, column: 18, scope: !8378)
!8449 = !DILocation(line: 127, column: 6, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8378, file: !1544, line: 127, column: 6)
!8451 = !DILocation(line: 127, column: 23, scope: !8450)
!8452 = !DILocation(line: 127, column: 6, scope: !8378)
!8453 = !DILocation(line: 128, column: 7, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !1544, line: 128, column: 7)
!8455 = distinct !DILexicalBlock(scope: !8450, file: !1544, line: 127, column: 32)
!8456 = !DILocation(line: 128, column: 24, scope: !8454)
!8457 = !DILocation(line: 128, column: 32, scope: !8454)
!8458 = !DILocation(line: 128, column: 29, scope: !8454)
!8459 = !DILocation(line: 128, column: 37, scope: !8454)
!8460 = !DILocation(line: 129, column: 7, scope: !8454)
!8461 = !DILocation(line: 129, column: 24, scope: !8454)
!8462 = !DILocation(line: 129, column: 31, scope: !8454)
!8463 = !DILocation(line: 129, column: 28, scope: !8454)
!8464 = !DILocation(line: 128, column: 7, scope: !8455)
!8465 = !DILocation(line: 130, column: 4, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8454, file: !1544, line: 129, column: 36)
!8467 = !DILocation(line: 132, column: 2, scope: !8455)
!8468 = !DILocation(line: 135, column: 15, scope: !8378)
!8469 = !DILocation(line: 135, column: 25, scope: !8378)
!8470 = !DILocation(line: 135, column: 31, scope: !8378)
!8471 = !DILocation(line: 135, column: 12, scope: !8378)
!8472 = !DILocation(line: 136, column: 18, scope: !8378)
!8473 = !DILocation(line: 136, column: 2, scope: !8378)
!8474 = !DILocation(line: 136, column: 13, scope: !8378)
!8475 = !DILocation(line: 136, column: 16, scope: !8378)
!8476 = !DILocation(line: 137, column: 20, scope: !8378)
!8477 = !DILocation(line: 137, column: 2, scope: !8378)
!8478 = !DILocation(line: 137, column: 13, scope: !8378)
!8479 = !DILocation(line: 137, column: 18, scope: !8378)
!8480 = !DILocation(line: 138, column: 25, scope: !8378)
!8481 = !DILocation(line: 138, column: 2, scope: !8378)
!8482 = !DILocation(line: 138, column: 19, scope: !8378)
!8483 = !DILocation(line: 138, column: 23, scope: !8378)
!8484 = !DILocation(line: 139, column: 26, scope: !8378)
!8485 = !DILocation(line: 139, column: 2, scope: !8378)
!8486 = !DILocation(line: 139, column: 19, scope: !8378)
!8487 = !DILocation(line: 139, column: 24, scope: !8378)
!8488 = !DILocation(line: 140, column: 2, scope: !8378)
!8489 = !DILocation(line: 140, column: 19, scope: !8378)
!8490 = !DILocation(line: 140, column: 27, scope: !8378)
!8491 = !DILocation(line: 142, column: 23, scope: !8378)
!8492 = !DILocation(line: 142, column: 11, scope: !8378)
!8493 = !DILocation(line: 142, column: 37, scope: !8378)
!8494 = !DILocation(line: 142, column: 9, scope: !8378)
!8495 = !DILocation(line: 143, column: 21, scope: !8378)
!8496 = !DILocation(line: 143, column: 18, scope: !8378)
!8497 = !DILocation(line: 143, column: 12, scope: !8378)
!8498 = !DILocation(line: 143, column: 9, scope: !8378)
!8499 = !DILocation(line: 144, column: 10, scope: !8378)
!8500 = !DILocation(line: 144, column: 2, scope: !8378)
!8501 = !DILocation(line: 146, column: 39, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8378, file: !1544, line: 144, column: 19)
!8503 = !DILocation(line: 146, column: 36, scope: !8502)
!8504 = !DILocation(line: 146, column: 10, scope: !8502)
!8505 = !DILocation(line: 147, column: 3, scope: !8502)
!8506 = !DILocation(line: 149, column: 39, scope: !8502)
!8507 = !DILocation(line: 149, column: 36, scope: !8502)
!8508 = !DILocation(line: 149, column: 10, scope: !8502)
!8509 = !DILocation(line: 150, column: 3, scope: !8502)
!8510 = !DILocation(line: 152, column: 39, scope: !8502)
!8511 = !DILocation(line: 152, column: 36, scope: !8502)
!8512 = !DILocation(line: 152, column: 10, scope: !8502)
!8513 = !DILocation(line: 153, column: 3, scope: !8502)
!8514 = !DILocation(line: 155, column: 39, scope: !8502)
!8515 = !DILocation(line: 155, column: 36, scope: !8502)
!8516 = !DILocation(line: 155, column: 10, scope: !8502)
!8517 = !DILocation(line: 156, column: 3, scope: !8502)
!8518 = !DILocation(line: 158, column: 38, scope: !8502)
!8519 = !DILocation(line: 158, column: 35, scope: !8502)
!8520 = !DILocation(line: 158, column: 10, scope: !8502)
!8521 = !DILocation(line: 159, column: 3, scope: !8502)
!8522 = !DILocation(line: 162, column: 6, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8378, file: !1544, line: 162, column: 6)
!8524 = !DILocation(line: 162, column: 6, scope: !8378)
!8525 = !DILocation(line: 163, column: 35, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8523, file: !1544, line: 162, column: 14)
!8527 = !DILocation(line: 163, column: 32, scope: !8526)
!8528 = !DILocation(line: 163, column: 10, scope: !8526)
!8529 = !DILocation(line: 164, column: 2, scope: !8526)
!8530 = !DILocation(line: 167, column: 34, scope: !8378)
!8531 = !DILocation(line: 167, column: 14, scope: !8378)
!8532 = !DILocation(line: 167, column: 2, scope: !8378)
!8533 = !DILocation(line: 167, column: 28, scope: !8378)
!8534 = !DILocation(line: 167, column: 32, scope: !8378)
!8535 = !DILocation(line: 169, column: 2, scope: !8378)
!8536 = !DILocation(line: 170, column: 2, scope: !8378)
!8537 = !DILocation(line: 176, column: 21, scope: !8378)
!8538 = !DILocation(line: 176, column: 19, scope: !8378)
!8539 = !DILocation(line: 177, column: 2, scope: !8378)
!8540 = !DILocalVariable(name: "key", arg: 1, scope: !8541, file: !6304, line: 84, type: !32)
!8541 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8542 = !DILocation(line: 84, column: 56, scope: !8541, inlinedAt: !8543)
!8543 = distinct !DILocation(line: 177, column: 2, scope: !8378)
!8544 = !DILocation(line: 87, column: 6, scope: !8545, inlinedAt: !8543)
!8545 = distinct !DILexicalBlock(scope: !8541, file: !6304, line: 87, column: 6)
!8546 = !DILocation(line: 87, column: 10, scope: !8545, inlinedAt: !8543)
!8547 = !DILocation(line: 87, column: 6, scope: !8541, inlinedAt: !8543)
!8548 = !DILocation(line: 88, column: 3, scope: !8549, inlinedAt: !8543)
!8549 = distinct !DILexicalBlock(scope: !8545, file: !6304, line: 87, column: 17)
!8550 = !DILocation(line: 90, column: 2, scope: !8541, inlinedAt: !8543)
!8551 = !{i64 1318682}
!8552 = !DILocation(line: 110, column: 1, scope: !8541, inlinedAt: !8543)
!8553 = !DILocation(line: 178, column: 2, scope: !8378)
!8554 = !DILabel(scope: !8378, name: "err_in_use", file: !1544, line: 180)
!8555 = !DILocation(line: 180, column: 1, scope: !8378)
!8556 = !DILocation(line: 181, column: 2, scope: !8378)
!8557 = !DILocation(line: 182, column: 2, scope: !8378)
!8558 = !DILocation(line: 183, column: 2, scope: !8378)
!8559 = !DILocation(line: 84, column: 56, scope: !8541, inlinedAt: !8560)
!8560 = distinct !DILocation(line: 183, column: 2, scope: !8378)
!8561 = !DILocation(line: 87, column: 6, scope: !8545, inlinedAt: !8560)
!8562 = !DILocation(line: 87, column: 10, scope: !8545, inlinedAt: !8560)
!8563 = !DILocation(line: 87, column: 6, scope: !8541, inlinedAt: !8560)
!8564 = !DILocation(line: 88, column: 3, scope: !8549, inlinedAt: !8560)
!8565 = !DILocation(line: 90, column: 2, scope: !8541, inlinedAt: !8560)
!8566 = !DILocation(line: 110, column: 1, scope: !8541, inlinedAt: !8560)
!8567 = !DILocation(line: 184, column: 2, scope: !8378)
!8568 = !DILocation(line: 185, column: 1, scope: !8378)
!8569 = distinct !DISubprogram(name: "sam0_eic_map_to_line", scope: !1598, file: !1598, line: 691, type: !8570, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8570 = !DISubroutineType(types: !8571)
!8571 = !{!103, !103, !103}
!8572 = !DILocalVariable(name: "port", arg: 1, scope: !8569, file: !1598, line: 691, type: !103)
!8573 = !DILocation(line: 691, column: 44, scope: !8569)
!8574 = !DILocalVariable(name: "pin", arg: 2, scope: !8569, file: !1598, line: 691, type: !103)
!8575 = !DILocation(line: 691, column: 54, scope: !8569)
!8576 = !DILocalVariable(name: "ch", scope: !8569, file: !1598, line: 693, type: !156)
!8577 = !DILocation(line: 693, column: 10, scope: !8569)
!8578 = !DILocation(line: 693, column: 33, scope: !8569)
!8579 = !DILocation(line: 693, column: 15, scope: !8569)
!8580 = !DILocation(line: 693, column: 39, scope: !8569)
!8581 = !DILocation(line: 695, column: 6, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8569, file: !1598, line: 695, column: 6)
!8583 = !DILocation(line: 695, column: 9, scope: !8582)
!8584 = !DILocation(line: 695, column: 6, scope: !8569)
!8585 = !DILocation(line: 696, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8582, file: !1598, line: 695, column: 18)
!8587 = !DILocation(line: 698, column: 9, scope: !8569)
!8588 = !DILocation(line: 698, column: 2, scope: !8569)
!8589 = !DILocation(line: 699, column: 1, scope: !8569)
!8590 = distinct !DISubprogram(name: "sam0_eic_release", scope: !1544, file: !1544, line: 206, type: !8570, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8591 = !DILocalVariable(name: "port", arg: 1, scope: !8590, file: !1544, line: 206, type: !103)
!8592 = !DILocation(line: 206, column: 26, scope: !8590)
!8593 = !DILocalVariable(name: "pin", arg: 2, scope: !8590, file: !1544, line: 206, type: !103)
!8594 = !DILocation(line: 206, column: 36, scope: !8590)
!8595 = !DILocalVariable(name: "dev", scope: !8590, file: !1544, line: 208, type: !8394)
!8596 = !DILocation(line: 208, column: 29, scope: !8590)
!8597 = !DILocalVariable(name: "dev_data", scope: !8590, file: !1544, line: 209, type: !8292)
!8598 = !DILocation(line: 209, column: 24, scope: !8590)
!8599 = !DILocation(line: 209, column: 40, scope: !8590)
!8600 = !DILocation(line: 209, column: 35, scope: !8590)
!8601 = !DILocalVariable(name: "mask", scope: !8590, file: !1544, line: 210, type: !173)
!8602 = !DILocation(line: 210, column: 11, scope: !8590)
!8603 = !DILocalVariable(name: "line_index", scope: !8590, file: !1544, line: 211, type: !103)
!8604 = !DILocation(line: 211, column: 6, scope: !8590)
!8605 = !DILocalVariable(name: "config_index", scope: !8590, file: !1544, line: 212, type: !103)
!8606 = !DILocation(line: 212, column: 6, scope: !8590)
!8607 = !DILocalVariable(name: "config_shift", scope: !8590, file: !1544, line: 213, type: !103)
!8608 = !DILocation(line: 213, column: 6, scope: !8590)
!8609 = !DILocalVariable(name: "key", scope: !8590, file: !1544, line: 214, type: !32)
!8610 = !DILocation(line: 214, column: 15, scope: !8590)
!8611 = !DILocation(line: 216, column: 36, scope: !8590)
!8612 = !DILocation(line: 216, column: 42, scope: !8590)
!8613 = !DILocation(line: 216, column: 15, scope: !8590)
!8614 = !DILocation(line: 216, column: 13, scope: !8590)
!8615 = !DILocation(line: 217, column: 6, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8590, file: !1544, line: 217, column: 6)
!8617 = !DILocation(line: 217, column: 17, scope: !8616)
!8618 = !DILocation(line: 217, column: 6, scope: !8590)
!8619 = !DILocation(line: 218, column: 10, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !1544, line: 217, column: 22)
!8621 = !DILocation(line: 218, column: 3, scope: !8620)
!8622 = !DILocation(line: 221, column: 9, scope: !8590)
!8623 = !DILocation(line: 221, column: 7, scope: !8590)
!8624 = !DILocation(line: 222, column: 17, scope: !8590)
!8625 = !DILocation(line: 222, column: 28, scope: !8590)
!8626 = !DILocation(line: 222, column: 15, scope: !8590)
!8627 = !DILocation(line: 223, column: 18, scope: !8590)
!8628 = !DILocation(line: 223, column: 29, scope: !8590)
!8629 = !DILocation(line: 223, column: 34, scope: !8590)
!8630 = !DILocation(line: 223, column: 15, scope: !8590)
!8631 = !DILocation(line: 44, column: 15, scope: !8437, inlinedAt: !8632)
!8632 = distinct !DILocation(line: 226, column: 8, scope: !8590)
!8633 = !DILocation(line: 47, column: 2, scope: !8437, inlinedAt: !8632)
!8634 = !DILocation(line: 76, column: 9, scope: !8437, inlinedAt: !8632)
!8635 = !DILocation(line: 226, column: 6, scope: !8590)
!8636 = !DILocation(line: 228, column: 2, scope: !8590)
!8637 = !DILocation(line: 229, column: 2, scope: !8590)
!8638 = !DILocation(line: 235, column: 32, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8590, file: !1544, line: 235, column: 6)
!8640 = !DILocation(line: 235, column: 38, scope: !8639)
!8641 = !DILocation(line: 235, column: 43, scope: !8639)
!8642 = !DILocation(line: 235, column: 7, scope: !8639)
!8643 = !DILocation(line: 235, column: 6, scope: !8590)
!8644 = !DILocation(line: 236, column: 3, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8639, file: !1544, line: 235, column: 56)
!8646 = !DILocation(line: 239, column: 2, scope: !8590)
!8647 = !DILocation(line: 239, column: 12, scope: !8590)
!8648 = !DILocation(line: 239, column: 18, scope: !8590)
!8649 = !DILocation(line: 239, column: 30, scope: !8590)
!8650 = !DILocation(line: 239, column: 38, scope: !8590)
!8651 = !DILocation(line: 242, column: 44, scope: !8590)
!8652 = !DILocation(line: 242, column: 41, scope: !8590)
!8653 = !DILocation(line: 242, column: 35, scope: !8590)
!8654 = !DILocation(line: 242, column: 14, scope: !8590)
!8655 = !DILocation(line: 242, column: 2, scope: !8590)
!8656 = !DILocation(line: 242, column: 28, scope: !8590)
!8657 = !DILocation(line: 242, column: 32, scope: !8590)
!8658 = !DILocation(line: 245, column: 22, scope: !8590)
!8659 = !DILocation(line: 245, column: 20, scope: !8590)
!8660 = !DILocation(line: 246, column: 21, scope: !8590)
!8661 = !DILocation(line: 246, column: 19, scope: !8590)
!8662 = !DILocation(line: 246, column: 2, scope: !8590)
!8663 = !DILabel(scope: !8590, name: "done", file: !1544, line: 248)
!8664 = !DILocation(line: 248, column: 1, scope: !8590)
!8665 = !DILocation(line: 249, column: 2, scope: !8590)
!8666 = !DILocation(line: 250, column: 2, scope: !8590)
!8667 = !DILocation(line: 251, column: 2, scope: !8590)
!8668 = !DILocation(line: 84, column: 56, scope: !8541, inlinedAt: !8669)
!8669 = distinct !DILocation(line: 251, column: 2, scope: !8590)
!8670 = !DILocation(line: 87, column: 6, scope: !8545, inlinedAt: !8669)
!8671 = !DILocation(line: 87, column: 10, scope: !8545, inlinedAt: !8669)
!8672 = !DILocation(line: 87, column: 6, scope: !8541, inlinedAt: !8669)
!8673 = !DILocation(line: 88, column: 3, scope: !8549, inlinedAt: !8669)
!8674 = !DILocation(line: 90, column: 2, scope: !8541, inlinedAt: !8669)
!8675 = !DILocation(line: 110, column: 1, scope: !8541, inlinedAt: !8669)
!8676 = !DILocation(line: 252, column: 2, scope: !8590)
!8677 = !DILocation(line: 253, column: 1, scope: !8590)
!8678 = distinct !DISubprogram(name: "sam0_eic_check_ownership", scope: !1544, file: !1544, line: 187, type: !8679, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{!1035, !103, !103, !103}
!8681 = !DILocalVariable(name: "port", arg: 1, scope: !8678, file: !1544, line: 187, type: !103)
!8682 = !DILocation(line: 187, column: 42, scope: !8678)
!8683 = !DILocalVariable(name: "pin", arg: 2, scope: !8678, file: !1544, line: 187, type: !103)
!8684 = !DILocation(line: 187, column: 52, scope: !8678)
!8685 = !DILocalVariable(name: "line_index", arg: 3, scope: !8678, file: !1544, line: 187, type: !103)
!8686 = !DILocation(line: 187, column: 61, scope: !8678)
!8687 = !DILocalVariable(name: "dev", scope: !8678, file: !1544, line: 189, type: !8394)
!8688 = !DILocation(line: 189, column: 29, scope: !8678)
!8689 = !DILocalVariable(name: "dev_data", scope: !8678, file: !1544, line: 190, type: !8292)
!8690 = !DILocation(line: 190, column: 24, scope: !8678)
!8691 = !DILocation(line: 190, column: 40, scope: !8678)
!8692 = !DILocation(line: 190, column: 35, scope: !8678)
!8693 = !DILocalVariable(name: "line_assignment", scope: !8678, file: !1544, line: 191, type: !8327)
!8694 = !DILocation(line: 191, column: 35, scope: !8678)
!8695 = !DILocation(line: 192, column: 4, scope: !8678)
!8696 = !DILocation(line: 192, column: 14, scope: !8678)
!8697 = !DILocation(line: 192, column: 20, scope: !8678)
!8698 = !DILocation(line: 194, column: 7, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8678, file: !1544, line: 194, column: 6)
!8700 = !DILocation(line: 194, column: 24, scope: !8699)
!8701 = !DILocation(line: 194, column: 6, scope: !8678)
!8702 = !DILocation(line: 195, column: 3, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !1544, line: 194, column: 33)
!8704 = !DILocation(line: 198, column: 6, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8678, file: !1544, line: 198, column: 6)
!8706 = !DILocation(line: 198, column: 23, scope: !8705)
!8707 = !DILocation(line: 198, column: 31, scope: !8705)
!8708 = !DILocation(line: 198, column: 28, scope: !8705)
!8709 = !DILocation(line: 198, column: 36, scope: !8705)
!8710 = !DILocation(line: 199, column: 6, scope: !8705)
!8711 = !DILocation(line: 199, column: 23, scope: !8705)
!8712 = !DILocation(line: 199, column: 30, scope: !8705)
!8713 = !DILocation(line: 199, column: 27, scope: !8705)
!8714 = !DILocation(line: 198, column: 6, scope: !8678)
!8715 = !DILocation(line: 200, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8705, file: !1544, line: 199, column: 35)
!8717 = !DILocation(line: 203, column: 2, scope: !8678)
!8718 = !DILocation(line: 204, column: 1, scope: !8678)
!8719 = distinct !DISubprogram(name: "sam0_eic_enable_interrupt", scope: !1544, file: !1544, line: 255, type: !8570, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8720 = !DILocalVariable(name: "port", arg: 1, scope: !8719, file: !1544, line: 255, type: !103)
!8721 = !DILocation(line: 255, column: 35, scope: !8719)
!8722 = !DILocalVariable(name: "pin", arg: 2, scope: !8719, file: !1544, line: 255, type: !103)
!8723 = !DILocation(line: 255, column: 45, scope: !8719)
!8724 = !DILocalVariable(name: "mask", scope: !8719, file: !1544, line: 257, type: !173)
!8725 = !DILocation(line: 257, column: 11, scope: !8719)
!8726 = !DILocalVariable(name: "line_index", scope: !8719, file: !1544, line: 258, type: !103)
!8727 = !DILocation(line: 258, column: 6, scope: !8719)
!8728 = !DILocation(line: 260, column: 36, scope: !8719)
!8729 = !DILocation(line: 260, column: 42, scope: !8719)
!8730 = !DILocation(line: 260, column: 15, scope: !8719)
!8731 = !DILocation(line: 260, column: 13, scope: !8719)
!8732 = !DILocation(line: 261, column: 6, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8719, file: !1544, line: 261, column: 6)
!8734 = !DILocation(line: 261, column: 17, scope: !8733)
!8735 = !DILocation(line: 261, column: 6, scope: !8719)
!8736 = !DILocation(line: 262, column: 10, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8733, file: !1544, line: 261, column: 22)
!8738 = !DILocation(line: 262, column: 3, scope: !8737)
!8739 = !DILocation(line: 265, column: 32, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8719, file: !1544, line: 265, column: 6)
!8741 = !DILocation(line: 265, column: 38, scope: !8740)
!8742 = !DILocation(line: 265, column: 43, scope: !8740)
!8743 = !DILocation(line: 265, column: 7, scope: !8740)
!8744 = !DILocation(line: 265, column: 6, scope: !8719)
!8745 = !DILocation(line: 266, column: 3, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8740, file: !1544, line: 265, column: 56)
!8747 = !DILocation(line: 269, column: 9, scope: !8719)
!8748 = !DILocation(line: 269, column: 7, scope: !8719)
!8749 = !DILocation(line: 270, column: 21, scope: !8719)
!8750 = !DILocation(line: 270, column: 19, scope: !8719)
!8751 = !DILocation(line: 271, column: 22, scope: !8719)
!8752 = !DILocation(line: 271, column: 20, scope: !8719)
!8753 = !DILocation(line: 273, column: 2, scope: !8719)
!8754 = !DILocation(line: 274, column: 1, scope: !8719)
!8755 = distinct !DISubprogram(name: "sam0_eic_disable_interrupt", scope: !1544, file: !1544, line: 276, type: !8570, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8756 = !DILocalVariable(name: "port", arg: 1, scope: !8755, file: !1544, line: 276, type: !103)
!8757 = !DILocation(line: 276, column: 36, scope: !8755)
!8758 = !DILocalVariable(name: "pin", arg: 2, scope: !8755, file: !1544, line: 276, type: !103)
!8759 = !DILocation(line: 276, column: 46, scope: !8755)
!8760 = !DILocalVariable(name: "mask", scope: !8755, file: !1544, line: 278, type: !173)
!8761 = !DILocation(line: 278, column: 11, scope: !8755)
!8762 = !DILocalVariable(name: "line_index", scope: !8755, file: !1544, line: 279, type: !103)
!8763 = !DILocation(line: 279, column: 6, scope: !8755)
!8764 = !DILocation(line: 281, column: 36, scope: !8755)
!8765 = !DILocation(line: 281, column: 42, scope: !8755)
!8766 = !DILocation(line: 281, column: 15, scope: !8755)
!8767 = !DILocation(line: 281, column: 13, scope: !8755)
!8768 = !DILocation(line: 282, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8755, file: !1544, line: 282, column: 6)
!8770 = !DILocation(line: 282, column: 17, scope: !8769)
!8771 = !DILocation(line: 282, column: 6, scope: !8755)
!8772 = !DILocation(line: 283, column: 10, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8769, file: !1544, line: 282, column: 22)
!8774 = !DILocation(line: 283, column: 3, scope: !8773)
!8775 = !DILocation(line: 286, column: 32, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8755, file: !1544, line: 286, column: 6)
!8777 = !DILocation(line: 286, column: 38, scope: !8776)
!8778 = !DILocation(line: 286, column: 43, scope: !8776)
!8779 = !DILocation(line: 286, column: 7, scope: !8776)
!8780 = !DILocation(line: 286, column: 6, scope: !8755)
!8781 = !DILocation(line: 287, column: 3, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8776, file: !1544, line: 286, column: 56)
!8783 = !DILocation(line: 290, column: 9, scope: !8755)
!8784 = !DILocation(line: 290, column: 7, scope: !8755)
!8785 = !DILocation(line: 291, column: 22, scope: !8755)
!8786 = !DILocation(line: 291, column: 20, scope: !8755)
!8787 = !DILocation(line: 292, column: 21, scope: !8755)
!8788 = !DILocation(line: 292, column: 19, scope: !8755)
!8789 = !DILocation(line: 294, column: 2, scope: !8755)
!8790 = !DILocation(line: 295, column: 1, scope: !8755)
!8791 = distinct !DISubprogram(name: "sam0_eic_interrupt_pending", scope: !1544, file: !1544, line: 297, type: !8792, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{!173, !103}
!8794 = !DILocalVariable(name: "port", arg: 1, scope: !8791, file: !1544, line: 297, type: !103)
!8795 = !DILocation(line: 297, column: 41, scope: !8791)
!8796 = !DILocalVariable(name: "dev", scope: !8791, file: !1544, line: 299, type: !8394)
!8797 = !DILocation(line: 299, column: 29, scope: !8791)
!8798 = !DILocalVariable(name: "dev_data", scope: !8791, file: !1544, line: 300, type: !8292)
!8799 = !DILocation(line: 300, column: 24, scope: !8791)
!8800 = !DILocation(line: 300, column: 40, scope: !8791)
!8801 = !DILocation(line: 300, column: 35, scope: !8791)
!8802 = !DILocalVariable(name: "line_assignment", scope: !8791, file: !1544, line: 301, type: !8327)
!8803 = !DILocation(line: 301, column: 35, scope: !8791)
!8804 = !DILocalVariable(name: "set", scope: !8791, file: !1544, line: 302, type: !173)
!8805 = !DILocation(line: 302, column: 11, scope: !8791)
!8806 = !DILocation(line: 302, column: 30, scope: !8791)
!8807 = !DILocalVariable(name: "mask", scope: !8791, file: !1544, line: 303, type: !173)
!8808 = !DILocation(line: 303, column: 11, scope: !8791)
!8809 = !DILocalVariable(name: "line_index", scope: !8810, file: !1544, line: 305, type: !103)
!8810 = distinct !DILexicalBlock(scope: !8791, file: !1544, line: 305, column: 2)
!8811 = !DILocation(line: 305, column: 11, scope: !8810)
!8812 = !DILocation(line: 305, column: 7, scope: !8810)
!8813 = !DILocation(line: 305, column: 27, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8810, file: !1544, line: 305, column: 2)
!8815 = !DILocation(line: 305, column: 38, scope: !8814)
!8816 = !DILocation(line: 305, column: 2, scope: !8810)
!8817 = !DILocation(line: 306, column: 22, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8814, file: !1544, line: 305, column: 70)
!8819 = !DILocation(line: 306, column: 32, scope: !8818)
!8820 = !DILocation(line: 306, column: 38, scope: !8818)
!8821 = !DILocation(line: 306, column: 19, scope: !8818)
!8822 = !DILocation(line: 308, column: 8, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8818, file: !1544, line: 308, column: 7)
!8824 = !DILocation(line: 308, column: 25, scope: !8823)
!8825 = !DILocation(line: 308, column: 7, scope: !8818)
!8826 = !DILocation(line: 309, column: 4, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !1544, line: 308, column: 34)
!8828 = !DILocation(line: 312, column: 7, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8818, file: !1544, line: 312, column: 7)
!8830 = !DILocation(line: 312, column: 24, scope: !8829)
!8831 = !DILocation(line: 312, column: 32, scope: !8829)
!8832 = !DILocation(line: 312, column: 29, scope: !8829)
!8833 = !DILocation(line: 312, column: 7, scope: !8818)
!8834 = !DILocation(line: 313, column: 4, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8829, file: !1544, line: 312, column: 38)
!8836 = !DILocation(line: 316, column: 9, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8818, file: !1544, line: 316, column: 7)
!8838 = !DILocation(line: 316, column: 15, scope: !8837)
!8839 = !DILocation(line: 316, column: 13, scope: !8837)
!8840 = !DILocation(line: 316, column: 7, scope: !8818)
!8841 = !DILocation(line: 317, column: 4, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8837, file: !1544, line: 316, column: 33)
!8843 = !DILocation(line: 320, column: 11, scope: !8818)
!8844 = !DILocation(line: 320, column: 8, scope: !8818)
!8845 = !DILocation(line: 321, column: 2, scope: !8818)
!8846 = !DILocation(line: 305, column: 66, scope: !8814)
!8847 = !DILocation(line: 305, column: 2, scope: !8814)
!8848 = distinct !{!8848, !8816, !8849}
!8849 = !DILocation(line: 321, column: 2, scope: !8810)
!8850 = !DILocation(line: 323, column: 9, scope: !8791)
!8851 = !DILocation(line: 323, column: 2, scope: !8791)
!8852 = distinct !DISubprogram(name: "uart_console_init", scope: !1713, file: !1713, line: 588, type: !1657, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8853 = !DILocalVariable(name: "arg", arg: 1, scope: !8852, file: !1713, line: 588, type: !1635)
!8854 = !DILocation(line: 588, column: 51, scope: !8852)
!8855 = !DILocation(line: 591, column: 2, scope: !8852)
!8856 = !DILocation(line: 593, column: 7, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8852, file: !1713, line: 593, column: 6)
!8858 = !DILocation(line: 593, column: 6, scope: !8852)
!8859 = !DILocation(line: 594, column: 3, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8857, file: !1713, line: 593, column: 42)
!8861 = !DILocation(line: 597, column: 2, scope: !8852)
!8862 = !DILocation(line: 599, column: 2, scope: !8852)
!8863 = !DILocation(line: 600, column: 1, scope: !8852)
!8864 = distinct !DISubprogram(name: "device_is_ready", scope: !8865, file: !8865, line: 47, type: !8866, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8865 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!8866 = !DISubroutineType(types: !8867)
!8867 = !{!1035, !1635}
!8868 = !DILocalVariable(name: "dev", arg: 1, scope: !8864, file: !8865, line: 47, type: !1635)
!8869 = !DILocation(line: 47, column: 58, scope: !8864)
!8870 = !DILocation(line: 55, column: 2, scope: !8864)
!8871 = !DILocation(line: 55, column: 2, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8864, file: !8865, line: 55, column: 2)
!8873 = !{i64 2149809701}
!8874 = !DILocation(line: 56, column: 32, scope: !8864)
!8875 = !DILocation(line: 56, column: 9, scope: !8864)
!8876 = !DILocation(line: 56, column: 2, scope: !8864)
!8877 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1713, file: !1713, line: 573, type: !253, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8878 = !DILocation(line: 576, column: 2, scope: !8877)
!8879 = !DILocation(line: 579, column: 2, scope: !8877)
!8880 = !DILocation(line: 581, column: 1, scope: !8877)
!8881 = distinct !DISubprogram(name: "console_out", scope: !1713, file: !1713, line: 77, type: !274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8882 = !DILocalVariable(name: "c", arg: 1, scope: !8881, file: !1713, line: 77, type: !103)
!8883 = !DILocation(line: 77, column: 28, scope: !8881)
!8884 = !DILocation(line: 89, column: 14, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !1713, line: 89, column: 6)
!8886 = !DILocation(line: 89, column: 11, scope: !8885)
!8887 = !DILocation(line: 89, column: 6, scope: !8881)
!8888 = !DILocation(line: 90, column: 3, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !1713, line: 89, column: 17)
!8890 = !DILocation(line: 91, column: 2, scope: !8889)
!8891 = !DILocation(line: 92, column: 34, scope: !8881)
!8892 = !DILocation(line: 92, column: 2, scope: !8881)
!8893 = !DILocation(line: 94, column: 9, scope: !8881)
!8894 = !DILocation(line: 94, column: 2, scope: !8881)
!8895 = distinct !DISubprogram(name: "uart_poll_out", scope: !8896, file: !8896, line: 95, type: !1653, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8896 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_m0_lora/subsys/debug/gdbstub")
!8897 = !DILocalVariable(name: "dev", arg: 1, scope: !8895, file: !8896, line: 95, type: !1635)
!8898 = !DILocation(line: 95, column: 56, scope: !8895)
!8899 = !DILocalVariable(name: "out_char", arg: 2, scope: !8895, file: !8896, line: 95, type: !157)
!8900 = !DILocation(line: 95, column: 75, scope: !8895)
!8901 = !DILocation(line: 105, column: 2, scope: !8895)
!8902 = !DILocation(line: 105, column: 2, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8895, file: !8896, line: 105, column: 2)
!8904 = !{i64 2149892946}
!8905 = !DILocation(line: 106, column: 23, scope: !8895)
!8906 = !DILocation(line: 106, column: 28, scope: !8895)
!8907 = !DILocation(line: 106, column: 2, scope: !8895)
!8908 = !DILocation(line: 107, column: 1, scope: !8895)
!8909 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1629, file: !1629, line: 574, type: !1653, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8910 = !DILocalVariable(name: "dev", arg: 1, scope: !8909, file: !1629, line: 574, type: !1635)
!8911 = !DILocation(line: 574, column: 62, scope: !8909)
!8912 = !DILocalVariable(name: "out_char", arg: 2, scope: !8909, file: !1629, line: 575, type: !157)
!8913 = !DILocation(line: 575, column: 20, scope: !8909)
!8914 = !DILocalVariable(name: "api", scope: !8909, file: !1629, line: 577, type: !1626)
!8915 = !DILocation(line: 577, column: 32, scope: !8909)
!8916 = !DILocation(line: 578, column: 35, scope: !8909)
!8917 = !DILocation(line: 578, column: 40, scope: !8909)
!8918 = !DILocation(line: 578, column: 3, scope: !8909)
!8919 = !DILocation(line: 580, column: 2, scope: !8909)
!8920 = !DILocation(line: 580, column: 7, scope: !8909)
!8921 = !DILocation(line: 580, column: 16, scope: !8909)
!8922 = !DILocation(line: 580, column: 21, scope: !8909)
!8923 = !DILocation(line: 581, column: 1, scope: !8909)
!8924 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1024, file: !1024, line: 730, type: !8866, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8925 = !DILocalVariable(name: "dev", arg: 1, scope: !8924, file: !1024, line: 730, type: !1635)
!8926 = !DILocation(line: 730, column: 64, scope: !8924)
!8927 = !DILocation(line: 732, column: 27, scope: !8924)
!8928 = !DILocation(line: 732, column: 9, scope: !8924)
!8929 = !DILocation(line: 732, column: 2, scope: !8924)
!8930 = distinct !DISubprogram(name: "uart_register_input", scope: !1713, file: !1713, line: 560, type: !8931, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1623, retainedNodes: !223)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{null, !8933, !8933, !8973}
!8933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8934, size: 32)
!8934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !109, line: 2208, size: 128, elements: !8935)
!8935 = !{!8936}
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8934, file: !109, line: 2209, baseType: !8937, size: 128)
!8937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !109, line: 1709, size: 128, elements: !8938)
!8938 = !{!8939, !8952, !8954}
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8937, file: !109, line: 1710, baseType: !8940, size: 64)
!8940 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8941, line: 46, baseType: !8942)
!8941 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8941, line: 41, size: 64, elements: !8943)
!8943 = !{!8944, !8951}
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8942, file: !8941, line: 42, baseType: !8945, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8941, line: 39, baseType: !8947)
!8947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8941, line: 35, size: 32, elements: !8948)
!8948 = !{!8949}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8947, file: !8941, line: 36, baseType: !8950, size: 32)
!8950 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8941, line: 32, baseType: !173)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8942, file: !8941, line: 43, baseType: !8945, size: 32, offset: 32)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8937, file: !109, line: 1711, baseType: !8953, offset: 64)
!8953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8937, file: !109, line: 1712, baseType: !8955, size: 64, offset: 64)
!8955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !8956)
!8956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !8957)
!8957 = !{!8958}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8956, file: !150, line: 232, baseType: !8959, size: 64)
!8959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !8960)
!8960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !8961)
!8961 = !{!8962, !8968}
!8962 = !DIDerivedType(tag: DW_TAG_member, scope: !8960, file: !124, line: 38, baseType: !8963, size: 32)
!8963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8960, file: !124, line: 38, size: 32, elements: !8964)
!8964 = !{!8965, !8967}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8963, file: !124, line: 39, baseType: !8966, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8963, file: !124, line: 40, baseType: !8966, size: 32)
!8968 = !DIDerivedType(tag: DW_TAG_member, scope: !8960, file: !124, line: 42, baseType: !8969, size: 32, offset: 32)
!8969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8960, file: !124, line: 42, size: 32, elements: !8970)
!8970 = !{!8971, !8972}
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8969, file: !124, line: 43, baseType: !8966, size: 32)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8969, file: !124, line: 44, baseType: !8966, size: 32)
!8973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8974, size: 32)
!8974 = !DISubroutineType(types: !8975)
!8975 = !{!156, !2801, !156}
!8976 = !DILocalVariable(name: "avail", arg: 1, scope: !8930, file: !1713, line: 560, type: !8933)
!8977 = !DILocation(line: 560, column: 41, scope: !8930)
!8978 = !DILocalVariable(name: "lines", arg: 2, scope: !8930, file: !1713, line: 560, type: !8933)
!8979 = !DILocation(line: 560, column: 63, scope: !8930)
!8980 = !DILocalVariable(name: "completion", arg: 3, scope: !8930, file: !1713, line: 561, type: !8973)
!8981 = !DILocation(line: 561, column: 15, scope: !8930)
!8982 = !DILocation(line: 563, column: 2, scope: !8930)
!8983 = !DILocation(line: 564, column: 2, scope: !8930)
!8984 = !DILocation(line: 565, column: 2, scope: !8930)
!8985 = !DILocation(line: 566, column: 1, scope: !8930)
!8986 = distinct !DISubprogram(name: "uart_sam0_poll_in", scope: !2215, file: !2215, line: 637, type: !1776, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!8987 = !DILocalVariable(name: "dev", arg: 1, scope: !8986, file: !2215, line: 637, type: !1778)
!8988 = !DILocation(line: 637, column: 51, scope: !8986)
!8989 = !DILocalVariable(name: "c", arg: 2, scope: !8986, file: !2215, line: 637, type: !1650)
!8990 = !DILocation(line: 637, column: 71, scope: !8986)
!8991 = !DILocalVariable(name: "config", scope: !8986, file: !2215, line: 639, type: !8992)
!8992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!8993 = !DILocation(line: 639, column: 34, scope: !8986)
!8994 = !DILocation(line: 639, column: 43, scope: !8986)
!8995 = !DILocation(line: 639, column: 48, scope: !8986)
!8996 = !DILocalVariable(name: "usart", scope: !8986, file: !2215, line: 641, type: !8997)
!8997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!8998 = !DILocation(line: 641, column: 22, scope: !8986)
!8999 = !DILocation(line: 641, column: 30, scope: !8986)
!9000 = !DILocation(line: 641, column: 38, scope: !8986)
!9001 = !DILocation(line: 643, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8986, file: !2215, line: 643, column: 6)
!9003 = !DILocation(line: 643, column: 14, scope: !9002)
!9004 = !DILocation(line: 643, column: 22, scope: !9002)
!9005 = !DILocation(line: 643, column: 26, scope: !9002)
!9006 = !DILocation(line: 643, column: 6, scope: !8986)
!9007 = !DILocation(line: 644, column: 3, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9002, file: !2215, line: 643, column: 31)
!9009 = !DILocation(line: 647, column: 22, scope: !8986)
!9010 = !DILocation(line: 647, column: 29, scope: !8986)
!9011 = !DILocation(line: 647, column: 34, scope: !8986)
!9012 = !DILocation(line: 647, column: 7, scope: !8986)
!9013 = !DILocation(line: 647, column: 3, scope: !8986)
!9014 = !DILocation(line: 647, column: 5, scope: !8986)
!9015 = !DILocation(line: 648, column: 2, scope: !8986)
!9016 = !DILocation(line: 649, column: 1, scope: !8986)
!9017 = distinct !DISubprogram(name: "uart_sam0_poll_out", scope: !2215, file: !2215, line: 651, type: !1795, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9018 = !DILocalVariable(name: "dev", arg: 1, scope: !9017, file: !2215, line: 651, type: !1778)
!9019 = !DILocation(line: 651, column: 53, scope: !9017)
!9020 = !DILocalVariable(name: "c", arg: 2, scope: !9017, file: !2215, line: 651, type: !157)
!9021 = !DILocation(line: 651, column: 72, scope: !9017)
!9022 = !DILocalVariable(name: "config", scope: !9017, file: !2215, line: 653, type: !8992)
!9023 = !DILocation(line: 653, column: 34, scope: !9017)
!9024 = !DILocation(line: 653, column: 43, scope: !9017)
!9025 = !DILocation(line: 653, column: 48, scope: !9017)
!9026 = !DILocalVariable(name: "usart", scope: !9017, file: !2215, line: 655, type: !8997)
!9027 = !DILocation(line: 655, column: 22, scope: !9017)
!9028 = !DILocation(line: 655, column: 30, scope: !9017)
!9029 = !DILocation(line: 655, column: 38, scope: !9017)
!9030 = !DILocation(line: 657, column: 2, scope: !9017)
!9031 = !DILocation(line: 657, column: 10, scope: !9017)
!9032 = !DILocation(line: 657, column: 17, scope: !9017)
!9033 = !DILocation(line: 657, column: 25, scope: !9017)
!9034 = !DILocation(line: 657, column: 29, scope: !9017)
!9035 = !DILocation(line: 657, column: 9, scope: !9017)
!9036 = distinct !{!9036, !9030, !9037}
!9037 = !DILocation(line: 658, column: 2, scope: !9017)
!9038 = !DILocation(line: 661, column: 20, scope: !9017)
!9039 = !DILocation(line: 661, column: 2, scope: !9017)
!9040 = !DILocation(line: 661, column: 9, scope: !9017)
!9041 = !DILocation(line: 661, column: 14, scope: !9017)
!9042 = !DILocation(line: 661, column: 18, scope: !9017)
!9043 = !DILocation(line: 662, column: 1, scope: !9017)
!9044 = distinct !DISubprogram(name: "uart_sam0_err_check", scope: !2215, file: !2215, line: 664, type: !1799, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9045 = !DILocalVariable(name: "dev", arg: 1, scope: !9044, file: !2215, line: 664, type: !1778)
!9046 = !DILocation(line: 664, column: 53, scope: !9044)
!9047 = !DILocalVariable(name: "config", scope: !9044, file: !2215, line: 666, type: !8992)
!9048 = !DILocation(line: 666, column: 34, scope: !9044)
!9049 = !DILocation(line: 666, column: 43, scope: !9044)
!9050 = !DILocation(line: 666, column: 48, scope: !9044)
!9051 = !DILocalVariable(name: "regs", scope: !9044, file: !2215, line: 668, type: !8997)
!9052 = !DILocation(line: 668, column: 22, scope: !9044)
!9053 = !DILocation(line: 668, column: 29, scope: !9044)
!9054 = !DILocation(line: 668, column: 37, scope: !9044)
!9055 = !DILocalVariable(name: "err", scope: !9044, file: !2215, line: 669, type: !173)
!9056 = !DILocation(line: 669, column: 11, scope: !9044)
!9057 = !DILocation(line: 671, column: 6, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9044, file: !2215, line: 671, column: 6)
!9059 = !DILocation(line: 671, column: 12, scope: !9058)
!9060 = !DILocation(line: 671, column: 19, scope: !9058)
!9061 = !DILocation(line: 671, column: 23, scope: !9058)
!9062 = !DILocation(line: 671, column: 6, scope: !9044)
!9063 = !DILocation(line: 672, column: 7, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9058, file: !2215, line: 671, column: 53)
!9065 = !DILocation(line: 673, column: 2, scope: !9064)
!9066 = !DILocation(line: 675, column: 6, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9044, file: !2215, line: 675, column: 6)
!9068 = !DILocation(line: 675, column: 12, scope: !9067)
!9069 = !DILocation(line: 675, column: 19, scope: !9067)
!9070 = !DILocation(line: 675, column: 23, scope: !9067)
!9071 = !DILocation(line: 675, column: 6, scope: !9044)
!9072 = !DILocation(line: 676, column: 7, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9067, file: !2215, line: 675, column: 51)
!9074 = !DILocation(line: 677, column: 2, scope: !9073)
!9075 = !DILocation(line: 679, column: 6, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9044, file: !2215, line: 679, column: 6)
!9077 = !DILocation(line: 679, column: 12, scope: !9076)
!9078 = !DILocation(line: 679, column: 19, scope: !9076)
!9079 = !DILocation(line: 679, column: 23, scope: !9076)
!9080 = !DILocation(line: 679, column: 6, scope: !9044)
!9081 = !DILocation(line: 680, column: 7, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9076, file: !2215, line: 679, column: 51)
!9083 = !DILocation(line: 681, column: 2, scope: !9082)
!9084 = !DILocation(line: 698, column: 2, scope: !9044)
!9085 = !DILocation(line: 698, column: 8, scope: !9044)
!9086 = !DILocation(line: 698, column: 15, scope: !9044)
!9087 = !DILocation(line: 698, column: 19, scope: !9044)
!9088 = !DILocation(line: 703, column: 23, scope: !9044)
!9089 = !DILocation(line: 703, column: 2, scope: !9044)
!9090 = !DILocation(line: 704, column: 9, scope: !9044)
!9091 = !DILocation(line: 704, column: 2, scope: !9044)
!9092 = distinct !DISubprogram(name: "uart_sam0_configure", scope: !2215, file: !2215, line: 388, type: !1803, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9093 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !2215, line: 388, type: !1778)
!9094 = !DILocation(line: 388, column: 53, scope: !9092)
!9095 = !DILocalVariable(name: "new_cfg", arg: 2, scope: !9092, file: !2215, line: 389, type: !1805)
!9096 = !DILocation(line: 389, column: 37, scope: !9092)
!9097 = !DILocalVariable(name: "retval", scope: !9092, file: !2215, line: 391, type: !103)
!9098 = !DILocation(line: 391, column: 6, scope: !9092)
!9099 = !DILocalVariable(name: "cfg", scope: !9092, file: !2215, line: 393, type: !9100)
!9100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8992)
!9101 = !DILocation(line: 393, column: 40, scope: !9092)
!9102 = !DILocation(line: 393, column: 46, scope: !9092)
!9103 = !DILocation(line: 393, column: 51, scope: !9092)
!9104 = !DILocalVariable(name: "dev_data", scope: !9092, file: !2215, line: 394, type: !9105)
!9105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9106)
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!9107 = !DILocation(line: 394, column: 35, scope: !9092)
!9108 = !DILocation(line: 394, column: 46, scope: !9092)
!9109 = !DILocation(line: 394, column: 51, scope: !9092)
!9110 = !DILocalVariable(name: "usart", scope: !9092, file: !2215, line: 395, type: !8997)
!9111 = !DILocation(line: 395, column: 22, scope: !9092)
!9112 = !DILocation(line: 395, column: 30, scope: !9092)
!9113 = !DILocation(line: 395, column: 35, scope: !9092)
!9114 = !DILocation(line: 397, column: 23, scope: !9092)
!9115 = !DILocation(line: 397, column: 2, scope: !9092)
!9116 = !DILocation(line: 399, column: 2, scope: !9092)
!9117 = !DILocation(line: 399, column: 9, scope: !9092)
!9118 = !DILocation(line: 399, column: 15, scope: !9092)
!9119 = !DILocation(line: 399, column: 19, scope: !9092)
!9120 = !DILocation(line: 399, column: 26, scope: !9092)
!9121 = !DILocation(line: 400, column: 23, scope: !9092)
!9122 = !DILocation(line: 400, column: 2, scope: !9092)
!9123 = !DILocation(line: 402, column: 6, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9092, file: !2215, line: 402, column: 6)
!9125 = !DILocation(line: 402, column: 15, scope: !9124)
!9126 = !DILocation(line: 402, column: 25, scope: !9124)
!9127 = !DILocation(line: 402, column: 6, scope: !9092)
!9128 = !DILocation(line: 406, column: 3, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9124, file: !2215, line: 402, column: 53)
!9130 = !DILocation(line: 409, column: 37, scope: !9092)
!9131 = !DILocation(line: 409, column: 46, scope: !9092)
!9132 = !DILocation(line: 409, column: 2, scope: !9092)
!9133 = !DILocation(line: 409, column: 12, scope: !9092)
!9134 = !DILocation(line: 409, column: 25, scope: !9092)
!9135 = !DILocation(line: 409, column: 35, scope: !9092)
!9136 = !DILocalVariable(name: "CTRLA_temp", scope: !9092, file: !2215, line: 411, type: !2282)
!9137 = !DILocation(line: 411, column: 26, scope: !9092)
!9138 = !DILocation(line: 411, column: 39, scope: !9092)
!9139 = !DILocation(line: 411, column: 46, scope: !9092)
!9140 = !DILocalVariable(name: "CTRLB_temp", scope: !9092, file: !2215, line: 412, type: !2304)
!9141 = !DILocation(line: 412, column: 26, scope: !9092)
!9142 = !DILocation(line: 412, column: 39, scope: !9092)
!9143 = !DILocation(line: 412, column: 46, scope: !9092)
!9144 = !DILocation(line: 414, column: 10, scope: !9092)
!9145 = !DILocation(line: 414, column: 19, scope: !9092)
!9146 = !DILocation(line: 414, column: 2, scope: !9092)
!9147 = !DILocation(line: 416, column: 14, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9092, file: !2215, line: 414, column: 27)
!9149 = !DILocation(line: 416, column: 18, scope: !9148)
!9150 = !DILocation(line: 416, column: 23, scope: !9148)
!9151 = !DILocation(line: 417, column: 3, scope: !9148)
!9152 = !DILocation(line: 419, column: 14, scope: !9148)
!9153 = !DILocation(line: 419, column: 18, scope: !9148)
!9154 = !DILocation(line: 419, column: 23, scope: !9148)
!9155 = !DILocation(line: 420, column: 14, scope: !9148)
!9156 = !DILocation(line: 420, column: 18, scope: !9148)
!9157 = !DILocation(line: 420, column: 24, scope: !9148)
!9158 = !DILocation(line: 421, column: 3, scope: !9148)
!9159 = !DILocation(line: 423, column: 14, scope: !9148)
!9160 = !DILocation(line: 423, column: 18, scope: !9148)
!9161 = !DILocation(line: 423, column: 23, scope: !9148)
!9162 = !DILocation(line: 424, column: 14, scope: !9148)
!9163 = !DILocation(line: 424, column: 18, scope: !9148)
!9164 = !DILocation(line: 424, column: 24, scope: !9148)
!9165 = !DILocation(line: 425, column: 3, scope: !9148)
!9166 = !DILocation(line: 427, column: 3, scope: !9148)
!9167 = !DILocation(line: 430, column: 34, scope: !9092)
!9168 = !DILocation(line: 430, column: 43, scope: !9092)
!9169 = !DILocation(line: 430, column: 2, scope: !9092)
!9170 = !DILocation(line: 430, column: 12, scope: !9092)
!9171 = !DILocation(line: 430, column: 25, scope: !9092)
!9172 = !DILocation(line: 430, column: 32, scope: !9092)
!9173 = !DILocation(line: 432, column: 10, scope: !9092)
!9174 = !DILocation(line: 432, column: 19, scope: !9092)
!9175 = !DILocation(line: 432, column: 2, scope: !9092)
!9176 = !DILocation(line: 434, column: 14, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9092, file: !2215, line: 432, column: 30)
!9178 = !DILocation(line: 434, column: 18, scope: !9177)
!9179 = !DILocation(line: 434, column: 25, scope: !9177)
!9180 = !DILocation(line: 435, column: 3, scope: !9177)
!9181 = !DILocation(line: 437, column: 14, scope: !9177)
!9182 = !DILocation(line: 437, column: 18, scope: !9177)
!9183 = !DILocation(line: 437, column: 25, scope: !9177)
!9184 = !DILocation(line: 438, column: 3, scope: !9177)
!9185 = !DILocation(line: 440, column: 3, scope: !9177)
!9186 = !DILocation(line: 443, column: 37, scope: !9092)
!9187 = !DILocation(line: 443, column: 46, scope: !9092)
!9188 = !DILocation(line: 443, column: 2, scope: !9092)
!9189 = !DILocation(line: 443, column: 12, scope: !9092)
!9190 = !DILocation(line: 443, column: 25, scope: !9092)
!9191 = !DILocation(line: 443, column: 35, scope: !9092)
!9192 = !DILocation(line: 445, column: 10, scope: !9092)
!9193 = !DILocation(line: 445, column: 19, scope: !9092)
!9194 = !DILocation(line: 445, column: 2, scope: !9092)
!9195 = !DILocation(line: 447, column: 14, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9092, file: !2215, line: 445, column: 30)
!9197 = !DILocation(line: 447, column: 18, scope: !9196)
!9198 = !DILocation(line: 447, column: 25, scope: !9196)
!9199 = !DILocation(line: 448, column: 3, scope: !9196)
!9200 = !DILocation(line: 450, column: 14, scope: !9196)
!9201 = !DILocation(line: 450, column: 18, scope: !9196)
!9202 = !DILocation(line: 450, column: 25, scope: !9196)
!9203 = !DILocation(line: 451, column: 3, scope: !9196)
!9204 = !DILocation(line: 453, column: 14, scope: !9196)
!9205 = !DILocation(line: 453, column: 18, scope: !9196)
!9206 = !DILocation(line: 453, column: 25, scope: !9196)
!9207 = !DILocation(line: 454, column: 3, scope: !9196)
!9208 = !DILocation(line: 456, column: 14, scope: !9196)
!9209 = !DILocation(line: 456, column: 18, scope: !9196)
!9210 = !DILocation(line: 456, column: 25, scope: !9196)
!9211 = !DILocation(line: 457, column: 3, scope: !9196)
!9212 = !DILocation(line: 459, column: 14, scope: !9196)
!9213 = !DILocation(line: 459, column: 18, scope: !9196)
!9214 = !DILocation(line: 459, column: 25, scope: !9196)
!9215 = !DILocation(line: 460, column: 3, scope: !9196)
!9216 = !DILocation(line: 462, column: 3, scope: !9196)
!9217 = !DILocation(line: 465, column: 37, scope: !9092)
!9218 = !DILocation(line: 465, column: 46, scope: !9092)
!9219 = !DILocation(line: 465, column: 2, scope: !9092)
!9220 = !DILocation(line: 465, column: 12, scope: !9092)
!9221 = !DILocation(line: 465, column: 25, scope: !9092)
!9222 = !DILocation(line: 465, column: 35, scope: !9092)
!9223 = !DILocation(line: 471, column: 2, scope: !9092)
!9224 = !DILocation(line: 471, column: 9, scope: !9092)
!9225 = !DILocation(line: 471, column: 17, scope: !9092)
!9226 = !DILocation(line: 472, column: 23, scope: !9092)
!9227 = !DILocation(line: 472, column: 2, scope: !9092)
!9228 = !DILocation(line: 474, column: 2, scope: !9092)
!9229 = !DILocation(line: 474, column: 9, scope: !9092)
!9230 = !DILocation(line: 474, column: 17, scope: !9092)
!9231 = !DILocation(line: 475, column: 23, scope: !9092)
!9232 = !DILocation(line: 475, column: 2, scope: !9092)
!9233 = !DILocation(line: 477, column: 34, scope: !9092)
!9234 = !DILocation(line: 477, column: 41, scope: !9092)
!9235 = !DILocation(line: 477, column: 50, scope: !9092)
!9236 = !DILocation(line: 477, column: 11, scope: !9092)
!9237 = !DILocation(line: 477, column: 9, scope: !9092)
!9238 = !DILocation(line: 479, column: 6, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9092, file: !2215, line: 479, column: 6)
!9240 = !DILocation(line: 479, column: 13, scope: !9239)
!9241 = !DILocation(line: 479, column: 6, scope: !9092)
!9242 = !DILocation(line: 480, column: 10, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9239, file: !2215, line: 479, column: 19)
!9244 = !DILocation(line: 480, column: 3, scope: !9243)
!9245 = !DILocation(line: 483, column: 36, scope: !9092)
!9246 = !DILocation(line: 483, column: 45, scope: !9092)
!9247 = !DILocation(line: 483, column: 2, scope: !9092)
!9248 = !DILocation(line: 483, column: 12, scope: !9092)
!9249 = !DILocation(line: 483, column: 25, scope: !9092)
!9250 = !DILocation(line: 483, column: 34, scope: !9092)
!9251 = !DILocation(line: 485, column: 2, scope: !9092)
!9252 = !DILocation(line: 485, column: 9, scope: !9092)
!9253 = !DILocation(line: 485, column: 15, scope: !9092)
!9254 = !DILocation(line: 485, column: 19, scope: !9092)
!9255 = !DILocation(line: 485, column: 26, scope: !9092)
!9256 = !DILocation(line: 486, column: 23, scope: !9092)
!9257 = !DILocation(line: 486, column: 2, scope: !9092)
!9258 = !DILocation(line: 488, column: 2, scope: !9092)
!9259 = !DILocation(line: 489, column: 1, scope: !9092)
!9260 = distinct !DISubprogram(name: "uart_sam0_config_get", scope: !2215, file: !2215, line: 491, type: !1816, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9261 = !DILocalVariable(name: "dev", arg: 1, scope: !9260, file: !2215, line: 491, type: !1778)
!9262 = !DILocation(line: 491, column: 54, scope: !9260)
!9263 = !DILocalVariable(name: "out_cfg", arg: 2, scope: !9260, file: !2215, line: 492, type: !1818)
!9264 = !DILocation(line: 492, column: 25, scope: !9260)
!9265 = !DILocalVariable(name: "dev_data", scope: !9260, file: !2215, line: 494, type: !9105)
!9266 = !DILocation(line: 494, column: 35, scope: !9260)
!9267 = !DILocation(line: 494, column: 46, scope: !9260)
!9268 = !DILocation(line: 494, column: 51, scope: !9260)
!9269 = !DILocation(line: 496, column: 9, scope: !9260)
!9270 = !DILocation(line: 496, column: 20, scope: !9260)
!9271 = !DILocation(line: 496, column: 30, scope: !9260)
!9272 = !DILocation(line: 496, column: 18, scope: !9260)
!9273 = !DILocation(line: 496, column: 2, scope: !9260)
!9274 = !DILocation(line: 499, column: 2, scope: !9260)
!9275 = distinct !DISubprogram(name: "uart_sam0_fifo_fill", scope: !2215, file: !2215, line: 783, type: !1821, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9275, file: !2215, line: 783, type: !1778)
!9277 = !DILocation(line: 783, column: 53, scope: !9275)
!9278 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9275, file: !2215, line: 784, type: !1681)
!9279 = !DILocation(line: 784, column: 26, scope: !9275)
!9280 = !DILocalVariable(name: "len", arg: 3, scope: !9275, file: !2215, line: 784, type: !103)
!9281 = !DILocation(line: 784, column: 39, scope: !9275)
!9282 = !DILocalVariable(name: "config", scope: !9275, file: !2215, line: 786, type: !8992)
!9283 = !DILocation(line: 786, column: 34, scope: !9275)
!9284 = !DILocation(line: 786, column: 43, scope: !9275)
!9285 = !DILocation(line: 786, column: 48, scope: !9275)
!9286 = !DILocalVariable(name: "regs", scope: !9275, file: !2215, line: 787, type: !2275)
!9287 = !DILocation(line: 787, column: 15, scope: !9275)
!9288 = !DILocation(line: 787, column: 22, scope: !9275)
!9289 = !DILocation(line: 787, column: 30, scope: !9275)
!9290 = !DILocation(line: 789, column: 6, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9275, file: !2215, line: 789, column: 6)
!9292 = !DILocation(line: 789, column: 12, scope: !9291)
!9293 = !DILocation(line: 789, column: 20, scope: !9291)
!9294 = !DILocation(line: 789, column: 24, scope: !9291)
!9295 = !DILocation(line: 789, column: 28, scope: !9291)
!9296 = !DILocation(line: 789, column: 31, scope: !9291)
!9297 = !DILocation(line: 789, column: 35, scope: !9291)
!9298 = !DILocation(line: 789, column: 6, scope: !9275)
!9299 = !DILocation(line: 790, column: 20, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9291, file: !2215, line: 789, column: 41)
!9301 = !DILocation(line: 790, column: 3, scope: !9300)
!9302 = !DILocation(line: 790, column: 9, scope: !9300)
!9303 = !DILocation(line: 790, column: 14, scope: !9300)
!9304 = !DILocation(line: 790, column: 18, scope: !9300)
!9305 = !DILocation(line: 791, column: 3, scope: !9300)
!9306 = !DILocation(line: 793, column: 3, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9291, file: !2215, line: 792, column: 9)
!9308 = !DILocation(line: 795, column: 1, scope: !9275)
!9309 = distinct !DISubprogram(name: "uart_sam0_fifo_read", scope: !2215, file: !2215, line: 855, type: !1825, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9310 = !DILocalVariable(name: "dev", arg: 1, scope: !9309, file: !2215, line: 855, type: !1778)
!9311 = !DILocation(line: 855, column: 53, scope: !9309)
!9312 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9309, file: !2215, line: 855, type: !1686)
!9313 = !DILocation(line: 855, column: 67, scope: !9309)
!9314 = !DILocalVariable(name: "size", arg: 3, scope: !9309, file: !2215, line: 856, type: !1687)
!9315 = !DILocation(line: 856, column: 21, scope: !9309)
!9316 = !DILocalVariable(name: "config", scope: !9309, file: !2215, line: 858, type: !8992)
!9317 = !DILocation(line: 858, column: 34, scope: !9309)
!9318 = !DILocation(line: 858, column: 43, scope: !9309)
!9319 = !DILocation(line: 858, column: 48, scope: !9309)
!9320 = !DILocalVariable(name: "regs", scope: !9309, file: !2215, line: 859, type: !8997)
!9321 = !DILocation(line: 859, column: 22, scope: !9309)
!9322 = !DILocation(line: 859, column: 29, scope: !9309)
!9323 = !DILocation(line: 859, column: 37, scope: !9309)
!9324 = !DILocation(line: 861, column: 6, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9309, file: !2215, line: 861, column: 6)
!9326 = !DILocation(line: 861, column: 12, scope: !9325)
!9327 = !DILocation(line: 861, column: 20, scope: !9325)
!9328 = !DILocation(line: 861, column: 24, scope: !9325)
!9329 = !DILocation(line: 861, column: 6, scope: !9309)
!9330 = !DILocalVariable(name: "ch", scope: !9331, file: !2215, line: 862, type: !156)
!9331 = distinct !DILexicalBlock(scope: !9325, file: !2215, line: 861, column: 29)
!9332 = !DILocation(line: 862, column: 11, scope: !9331)
!9333 = !DILocation(line: 862, column: 16, scope: !9331)
!9334 = !DILocation(line: 862, column: 22, scope: !9331)
!9335 = !DILocation(line: 862, column: 27, scope: !9331)
!9336 = !DILocation(line: 864, column: 7, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9331, file: !2215, line: 864, column: 7)
!9338 = !DILocation(line: 864, column: 12, scope: !9337)
!9339 = !DILocation(line: 864, column: 7, scope: !9331)
!9340 = !DILocation(line: 865, column: 15, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !2215, line: 864, column: 18)
!9342 = !DILocation(line: 865, column: 5, scope: !9341)
!9343 = !DILocation(line: 865, column: 13, scope: !9341)
!9344 = !DILocation(line: 866, column: 4, scope: !9341)
!9345 = !DILocation(line: 868, column: 4, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9337, file: !2215, line: 867, column: 10)
!9347 = !DILocation(line: 871, column: 2, scope: !9309)
!9348 = !DILocation(line: 872, column: 1, scope: !9309)
!9349 = distinct !DISubprogram(name: "uart_sam0_irq_tx_enable", scope: !2215, file: !2215, line: 797, type: !1829, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9350 = !DILocalVariable(name: "dev", arg: 1, scope: !9349, file: !2215, line: 797, type: !1778)
!9351 = !DILocation(line: 797, column: 58, scope: !9349)
!9352 = !DILocalVariable(name: "config", scope: !9349, file: !2215, line: 799, type: !8992)
!9353 = !DILocation(line: 799, column: 34, scope: !9349)
!9354 = !DILocation(line: 799, column: 43, scope: !9349)
!9355 = !DILocation(line: 799, column: 48, scope: !9349)
!9356 = !DILocalVariable(name: "regs", scope: !9349, file: !2215, line: 800, type: !8997)
!9357 = !DILocation(line: 800, column: 22, scope: !9349)
!9358 = !DILocation(line: 800, column: 29, scope: !9349)
!9359 = !DILocation(line: 800, column: 37, scope: !9349)
!9360 = !DILocation(line: 802, column: 2, scope: !9349)
!9361 = !DILocation(line: 802, column: 8, scope: !9349)
!9362 = !DILocation(line: 802, column: 17, scope: !9349)
!9363 = !DILocation(line: 802, column: 21, scope: !9349)
!9364 = !DILocation(line: 804, column: 1, scope: !9349)
!9365 = distinct !DISubprogram(name: "uart_sam0_irq_tx_disable", scope: !2215, file: !2215, line: 806, type: !1829, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9366 = !DILocalVariable(name: "dev", arg: 1, scope: !9365, file: !2215, line: 806, type: !1778)
!9367 = !DILocation(line: 806, column: 59, scope: !9365)
!9368 = !DILocalVariable(name: "config", scope: !9365, file: !2215, line: 808, type: !8992)
!9369 = !DILocation(line: 808, column: 34, scope: !9365)
!9370 = !DILocation(line: 808, column: 43, scope: !9365)
!9371 = !DILocation(line: 808, column: 48, scope: !9365)
!9372 = !DILocalVariable(name: "regs", scope: !9365, file: !2215, line: 809, type: !8997)
!9373 = !DILocation(line: 809, column: 22, scope: !9365)
!9374 = !DILocation(line: 809, column: 29, scope: !9365)
!9375 = !DILocation(line: 809, column: 37, scope: !9365)
!9376 = !DILocation(line: 811, column: 2, scope: !9365)
!9377 = !DILocation(line: 811, column: 8, scope: !9365)
!9378 = !DILocation(line: 811, column: 17, scope: !9365)
!9379 = !DILocation(line: 811, column: 21, scope: !9365)
!9380 = !DILocation(line: 813, column: 1, scope: !9365)
!9381 = distinct !DISubprogram(name: "uart_sam0_irq_tx_ready", scope: !2215, file: !2215, line: 815, type: !1799, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9382 = !DILocalVariable(name: "dev", arg: 1, scope: !9381, file: !2215, line: 815, type: !1778)
!9383 = !DILocation(line: 815, column: 56, scope: !9381)
!9384 = !DILocalVariable(name: "config", scope: !9381, file: !2215, line: 817, type: !8992)
!9385 = !DILocation(line: 817, column: 34, scope: !9381)
!9386 = !DILocation(line: 817, column: 43, scope: !9381)
!9387 = !DILocation(line: 817, column: 48, scope: !9381)
!9388 = !DILocalVariable(name: "regs", scope: !9381, file: !2215, line: 818, type: !8997)
!9389 = !DILocation(line: 818, column: 22, scope: !9381)
!9390 = !DILocation(line: 818, column: 29, scope: !9381)
!9391 = !DILocation(line: 818, column: 37, scope: !9381)
!9392 = !DILocation(line: 820, column: 10, scope: !9381)
!9393 = !DILocation(line: 820, column: 16, scope: !9381)
!9394 = !DILocation(line: 820, column: 24, scope: !9381)
!9395 = !DILocation(line: 820, column: 28, scope: !9381)
!9396 = !DILocation(line: 820, column: 32, scope: !9381)
!9397 = !DILocation(line: 820, column: 38, scope: !9381)
!9398 = !DILocation(line: 820, column: 42, scope: !9381)
!9399 = !DILocation(line: 820, column: 48, scope: !9381)
!9400 = !DILocation(line: 820, column: 57, scope: !9381)
!9401 = !DILocation(line: 820, column: 61, scope: !9381)
!9402 = !DILocation(line: 820, column: 65, scope: !9381)
!9403 = !DILocation(line: 0, scope: !9381)
!9404 = !DILocation(line: 820, column: 2, scope: !9381)
!9405 = distinct !DISubprogram(name: "uart_sam0_irq_rx_enable", scope: !2215, file: !2215, line: 831, type: !1829, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9406 = !DILocalVariable(name: "dev", arg: 1, scope: !9405, file: !2215, line: 831, type: !1778)
!9407 = !DILocation(line: 831, column: 58, scope: !9405)
!9408 = !DILocalVariable(name: "config", scope: !9405, file: !2215, line: 833, type: !8992)
!9409 = !DILocation(line: 833, column: 34, scope: !9405)
!9410 = !DILocation(line: 833, column: 43, scope: !9405)
!9411 = !DILocation(line: 833, column: 48, scope: !9405)
!9412 = !DILocalVariable(name: "regs", scope: !9405, file: !2215, line: 834, type: !8997)
!9413 = !DILocation(line: 834, column: 22, scope: !9405)
!9414 = !DILocation(line: 834, column: 29, scope: !9405)
!9415 = !DILocation(line: 834, column: 37, scope: !9405)
!9416 = !DILocation(line: 836, column: 2, scope: !9405)
!9417 = !DILocation(line: 836, column: 8, scope: !9405)
!9418 = !DILocation(line: 836, column: 17, scope: !9405)
!9419 = !DILocation(line: 836, column: 21, scope: !9405)
!9420 = !DILocation(line: 837, column: 1, scope: !9405)
!9421 = distinct !DISubprogram(name: "uart_sam0_irq_rx_disable", scope: !2215, file: !2215, line: 839, type: !1829, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9422 = !DILocalVariable(name: "dev", arg: 1, scope: !9421, file: !2215, line: 839, type: !1778)
!9423 = !DILocation(line: 839, column: 59, scope: !9421)
!9424 = !DILocalVariable(name: "config", scope: !9421, file: !2215, line: 841, type: !8992)
!9425 = !DILocation(line: 841, column: 34, scope: !9421)
!9426 = !DILocation(line: 841, column: 43, scope: !9421)
!9427 = !DILocation(line: 841, column: 48, scope: !9421)
!9428 = !DILocalVariable(name: "regs", scope: !9421, file: !2215, line: 842, type: !8997)
!9429 = !DILocation(line: 842, column: 22, scope: !9421)
!9430 = !DILocation(line: 842, column: 29, scope: !9421)
!9431 = !DILocation(line: 842, column: 37, scope: !9421)
!9432 = !DILocation(line: 844, column: 2, scope: !9421)
!9433 = !DILocation(line: 844, column: 8, scope: !9421)
!9434 = !DILocation(line: 844, column: 17, scope: !9421)
!9435 = !DILocation(line: 844, column: 21, scope: !9421)
!9436 = !DILocation(line: 845, column: 1, scope: !9421)
!9437 = distinct !DISubprogram(name: "uart_sam0_irq_tx_complete", scope: !2215, file: !2215, line: 823, type: !1799, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9438 = !DILocalVariable(name: "dev", arg: 1, scope: !9437, file: !2215, line: 823, type: !1778)
!9439 = !DILocation(line: 823, column: 59, scope: !9437)
!9440 = !DILocalVariable(name: "config", scope: !9437, file: !2215, line: 825, type: !8992)
!9441 = !DILocation(line: 825, column: 34, scope: !9437)
!9442 = !DILocation(line: 825, column: 43, scope: !9437)
!9443 = !DILocation(line: 825, column: 48, scope: !9437)
!9444 = !DILocalVariable(name: "regs", scope: !9437, file: !2215, line: 826, type: !8997)
!9445 = !DILocation(line: 826, column: 22, scope: !9437)
!9446 = !DILocation(line: 826, column: 29, scope: !9437)
!9447 = !DILocation(line: 826, column: 37, scope: !9437)
!9448 = !DILocation(line: 828, column: 10, scope: !9437)
!9449 = !DILocation(line: 828, column: 16, scope: !9437)
!9450 = !DILocation(line: 828, column: 24, scope: !9437)
!9451 = !DILocation(line: 828, column: 28, scope: !9437)
!9452 = !DILocation(line: 828, column: 32, scope: !9437)
!9453 = !DILocation(line: 828, column: 38, scope: !9437)
!9454 = !DILocation(line: 828, column: 42, scope: !9437)
!9455 = !DILocation(line: 828, column: 48, scope: !9437)
!9456 = !DILocation(line: 828, column: 57, scope: !9437)
!9457 = !DILocation(line: 828, column: 61, scope: !9437)
!9458 = !DILocation(line: 828, column: 65, scope: !9437)
!9459 = !DILocation(line: 0, scope: !9437)
!9460 = !DILocation(line: 828, column: 2, scope: !9437)
!9461 = distinct !DISubprogram(name: "uart_sam0_irq_rx_ready", scope: !2215, file: !2215, line: 847, type: !1799, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9462 = !DILocalVariable(name: "dev", arg: 1, scope: !9461, file: !2215, line: 847, type: !1778)
!9463 = !DILocation(line: 847, column: 56, scope: !9461)
!9464 = !DILocalVariable(name: "config", scope: !9461, file: !2215, line: 849, type: !8992)
!9465 = !DILocation(line: 849, column: 34, scope: !9461)
!9466 = !DILocation(line: 849, column: 43, scope: !9461)
!9467 = !DILocation(line: 849, column: 48, scope: !9461)
!9468 = !DILocalVariable(name: "regs", scope: !9461, file: !2215, line: 850, type: !8997)
!9469 = !DILocation(line: 850, column: 22, scope: !9461)
!9470 = !DILocation(line: 850, column: 29, scope: !9461)
!9471 = !DILocation(line: 850, column: 37, scope: !9461)
!9472 = !DILocation(line: 852, column: 9, scope: !9461)
!9473 = !DILocation(line: 852, column: 15, scope: !9461)
!9474 = !DILocation(line: 852, column: 23, scope: !9461)
!9475 = !DILocation(line: 852, column: 27, scope: !9461)
!9476 = !DILocation(line: 852, column: 31, scope: !9461)
!9477 = !DILocation(line: 852, column: 2, scope: !9461)
!9478 = distinct !DISubprogram(name: "uart_sam0_irq_is_pending", scope: !2215, file: !2215, line: 874, type: !1799, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9479 = !DILocalVariable(name: "dev", arg: 1, scope: !9478, file: !2215, line: 874, type: !1778)
!9480 = !DILocation(line: 874, column: 58, scope: !9478)
!9481 = !DILocalVariable(name: "config", scope: !9478, file: !2215, line: 876, type: !8992)
!9482 = !DILocation(line: 876, column: 34, scope: !9478)
!9483 = !DILocation(line: 876, column: 43, scope: !9478)
!9484 = !DILocation(line: 876, column: 48, scope: !9478)
!9485 = !DILocalVariable(name: "regs", scope: !9478, file: !2215, line: 877, type: !8997)
!9486 = !DILocation(line: 877, column: 22, scope: !9478)
!9487 = !DILocation(line: 877, column: 29, scope: !9478)
!9488 = !DILocation(line: 877, column: 37, scope: !9478)
!9489 = !DILocation(line: 879, column: 10, scope: !9478)
!9490 = !DILocation(line: 879, column: 16, scope: !9478)
!9491 = !DILocation(line: 879, column: 25, scope: !9478)
!9492 = !DILocation(line: 879, column: 31, scope: !9478)
!9493 = !DILocation(line: 879, column: 37, scope: !9478)
!9494 = !DILocation(line: 879, column: 45, scope: !9478)
!9495 = !DILocation(line: 879, column: 29, scope: !9478)
!9496 = !DILocation(line: 879, column: 50, scope: !9478)
!9497 = !DILocation(line: 879, column: 2, scope: !9478)
!9498 = distinct !DISubprogram(name: "uart_sam0_irq_update", scope: !2215, file: !2215, line: 902, type: !1799, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9499 = !DILocalVariable(name: "dev", arg: 1, scope: !9498, file: !2215, line: 902, type: !1778)
!9500 = !DILocation(line: 902, column: 54, scope: !9498)
!9501 = !DILocalVariable(name: "config", scope: !9498, file: !2215, line: 905, type: !8992)
!9502 = !DILocation(line: 905, column: 34, scope: !9498)
!9503 = !DILocation(line: 905, column: 43, scope: !9498)
!9504 = !DILocation(line: 905, column: 48, scope: !9498)
!9505 = !DILocalVariable(name: "regs", scope: !9498, file: !2215, line: 906, type: !8997)
!9506 = !DILocation(line: 906, column: 22, scope: !9498)
!9507 = !DILocation(line: 906, column: 29, scope: !9498)
!9508 = !DILocation(line: 906, column: 37, scope: !9498)
!9509 = !DILocation(line: 913, column: 2, scope: !9498)
!9510 = !DILocation(line: 913, column: 8, scope: !9498)
!9511 = !DILocation(line: 913, column: 16, scope: !9498)
!9512 = !DILocation(line: 913, column: 20, scope: !9498)
!9513 = !DILocation(line: 915, column: 2, scope: !9498)
!9514 = distinct !DISubprogram(name: "uart_sam0_irq_callback_set", scope: !2215, file: !2215, line: 918, type: !1843, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9515 = !DILocalVariable(name: "dev", arg: 1, scope: !9514, file: !2215, line: 918, type: !1778)
!9516 = !DILocation(line: 918, column: 61, scope: !9514)
!9517 = !DILocalVariable(name: "cb", arg: 2, scope: !9514, file: !2215, line: 919, type: !1845)
!9518 = !DILocation(line: 919, column: 42, scope: !9514)
!9519 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9514, file: !2215, line: 920, type: !102)
!9520 = !DILocation(line: 920, column: 18, scope: !9514)
!9521 = !DILocalVariable(name: "dev_data", scope: !9514, file: !2215, line: 922, type: !9105)
!9522 = !DILocation(line: 922, column: 35, scope: !9514)
!9523 = !DILocation(line: 922, column: 46, scope: !9514)
!9524 = !DILocation(line: 922, column: 51, scope: !9514)
!9525 = !DILocation(line: 924, column: 17, scope: !9514)
!9526 = !DILocation(line: 924, column: 2, scope: !9514)
!9527 = !DILocation(line: 924, column: 12, scope: !9514)
!9528 = !DILocation(line: 924, column: 15, scope: !9514)
!9529 = !DILocation(line: 925, column: 22, scope: !9514)
!9530 = !DILocation(line: 925, column: 2, scope: !9514)
!9531 = !DILocation(line: 925, column: 12, scope: !9514)
!9532 = !DILocation(line: 925, column: 20, scope: !9514)
!9533 = !DILocation(line: 926, column: 1, scope: !9514)
!9534 = distinct !DISubprogram(name: "wait_synchronization", scope: !2215, file: !2215, line: 91, type: !9535, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9535 = !DISubroutineType(types: !9536)
!9536 = !{null, !8997}
!9537 = !DILocalVariable(name: "usart", arg: 1, scope: !9534, file: !2215, line: 91, type: !8997)
!9538 = !DILocation(line: 91, column: 53, scope: !9534)
!9539 = !DILocation(line: 95, column: 2, scope: !9534)
!9540 = !DILocation(line: 95, column: 10, scope: !9534)
!9541 = !DILocation(line: 95, column: 17, scope: !9534)
!9542 = !DILocation(line: 95, column: 26, scope: !9534)
!9543 = !DILocation(line: 95, column: 30, scope: !9534)
!9544 = !DILocation(line: 95, column: 60, scope: !9534)
!9545 = distinct !{!9545, !9539, !9546}
!9546 = !DILocation(line: 96, column: 2, scope: !9534)
!9547 = !DILocation(line: 104, column: 1, scope: !9534)
!9548 = distinct !DISubprogram(name: "uart_sam0_set_baudrate", scope: !2215, file: !2215, line: 106, type: !9549, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!103, !8997, !173, !173}
!9551 = !DILocalVariable(name: "usart", arg: 1, scope: !9548, file: !2215, line: 106, type: !8997)
!9552 = !DILocation(line: 106, column: 54, scope: !9548)
!9553 = !DILocalVariable(name: "baudrate", arg: 2, scope: !9548, file: !2215, line: 106, type: !173)
!9554 = !DILocation(line: 106, column: 70, scope: !9548)
!9555 = !DILocalVariable(name: "clk_freq_hz", arg: 3, scope: !9548, file: !2215, line: 107, type: !173)
!9556 = !DILocation(line: 107, column: 16, scope: !9548)
!9557 = !DILocalVariable(name: "tmp", scope: !9548, file: !2215, line: 109, type: !1936)
!9558 = !DILocation(line: 109, column: 11, scope: !9548)
!9559 = !DILocalVariable(name: "baud", scope: !9548, file: !2215, line: 110, type: !170)
!9560 = !DILocation(line: 110, column: 11, scope: !9548)
!9561 = !DILocation(line: 112, column: 18, scope: !9548)
!9562 = !DILocation(line: 112, column: 8, scope: !9548)
!9563 = !DILocation(line: 112, column: 27, scope: !9548)
!9564 = !DILocation(line: 112, column: 6, scope: !9548)
!9565 = !DILocation(line: 113, column: 9, scope: !9548)
!9566 = !DILocation(line: 113, column: 16, scope: !9548)
!9567 = !DILocation(line: 113, column: 28, scope: !9548)
!9568 = !DILocation(line: 113, column: 15, scope: !9548)
!9569 = !DILocation(line: 113, column: 13, scope: !9548)
!9570 = !DILocation(line: 113, column: 37, scope: !9548)
!9571 = !DILocation(line: 113, column: 35, scope: !9548)
!9572 = !DILocation(line: 113, column: 6, scope: !9548)
!9573 = !DILocation(line: 116, column: 6, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9548, file: !2215, line: 116, column: 6)
!9575 = !DILocation(line: 116, column: 10, scope: !9574)
!9576 = !DILocation(line: 116, column: 14, scope: !9574)
!9577 = !DILocation(line: 116, column: 17, scope: !9574)
!9578 = !DILocation(line: 116, column: 21, scope: !9574)
!9579 = !DILocation(line: 116, column: 6, scope: !9548)
!9580 = !DILocation(line: 117, column: 3, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9574, file: !2215, line: 116, column: 35)
!9582 = !DILocation(line: 120, column: 27, scope: !9548)
!9583 = !DILocation(line: 120, column: 17, scope: !9548)
!9584 = !DILocation(line: 120, column: 15, scope: !9548)
!9585 = !DILocation(line: 120, column: 9, scope: !9548)
!9586 = !DILocation(line: 120, column: 7, scope: !9548)
!9587 = !DILocation(line: 121, column: 20, scope: !9548)
!9588 = !DILocation(line: 121, column: 2, scope: !9548)
!9589 = !DILocation(line: 121, column: 9, scope: !9548)
!9590 = !DILocation(line: 121, column: 14, scope: !9548)
!9591 = !DILocation(line: 121, column: 18, scope: !9548)
!9592 = !DILocation(line: 122, column: 23, scope: !9548)
!9593 = !DILocation(line: 122, column: 2, scope: !9548)
!9594 = !DILocation(line: 124, column: 2, scope: !9548)
!9595 = !DILocation(line: 125, column: 1, scope: !9548)
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !2237, file: !2215, line: 1293, type: !1778)
!9597 = !DILocation(line: 1293, column: 1, scope: !2237)
!9598 = !DILocation(line: 1293, column: 1, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !2215, line: 1293, column: 1)
!9600 = distinct !DILexicalBlock(scope: !2237, file: !2215, line: 1293, column: 1)
!9601 = !DILocation(line: 1293, column: 1, scope: !9600)
!9602 = distinct !DISubprogram(name: "uart_sam0_isr", scope: !2215, file: !2215, line: 709, type: !1829, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9603 = !DILocalVariable(name: "dev", arg: 1, scope: !9602, file: !2215, line: 709, type: !1778)
!9604 = !DILocation(line: 709, column: 48, scope: !9602)
!9605 = !DILocalVariable(name: "dev_data", scope: !9602, file: !2215, line: 711, type: !9105)
!9606 = !DILocation(line: 711, column: 35, scope: !9602)
!9607 = !DILocation(line: 711, column: 46, scope: !9602)
!9608 = !DILocation(line: 711, column: 51, scope: !9602)
!9609 = !DILocation(line: 714, column: 6, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9602, file: !2215, line: 714, column: 6)
!9611 = !DILocation(line: 714, column: 16, scope: !9610)
!9612 = !DILocation(line: 714, column: 6, scope: !9602)
!9613 = !DILocation(line: 715, column: 3, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !2215, line: 714, column: 20)
!9615 = !DILocation(line: 715, column: 13, scope: !9614)
!9616 = !DILocation(line: 715, column: 16, scope: !9614)
!9617 = !DILocation(line: 715, column: 21, scope: !9614)
!9618 = !DILocation(line: 715, column: 31, scope: !9614)
!9619 = !DILocation(line: 716, column: 2, scope: !9614)
!9620 = !DILocation(line: 777, column: 1, scope: !9602)
!9621 = distinct !DISubprogram(name: "uart_sam0_init", scope: !2215, file: !2215, line: 503, type: !1799, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9622 = !DILocalVariable(name: "dev", arg: 1, scope: !9621, file: !2215, line: 503, type: !1778)
!9623 = !DILocation(line: 503, column: 48, scope: !9621)
!9624 = !DILocalVariable(name: "retval", scope: !9621, file: !2215, line: 505, type: !103)
!9625 = !DILocation(line: 505, column: 6, scope: !9621)
!9626 = !DILocalVariable(name: "cfg", scope: !9621, file: !2215, line: 506, type: !9100)
!9627 = !DILocation(line: 506, column: 40, scope: !9621)
!9628 = !DILocation(line: 506, column: 46, scope: !9621)
!9629 = !DILocation(line: 506, column: 51, scope: !9621)
!9630 = !DILocalVariable(name: "dev_data", scope: !9621, file: !2215, line: 507, type: !9105)
!9631 = !DILocation(line: 507, column: 35, scope: !9621)
!9632 = !DILocation(line: 507, column: 46, scope: !9621)
!9633 = !DILocation(line: 507, column: 51, scope: !9621)
!9634 = !DILocalVariable(name: "usart", scope: !9621, file: !2215, line: 509, type: !8997)
!9635 = !DILocation(line: 509, column: 22, scope: !9621)
!9636 = !DILocation(line: 509, column: 30, scope: !9621)
!9637 = !DILocation(line: 509, column: 35, scope: !9621)
!9638 = !DILocation(line: 520, column: 22, scope: !9621)
!9639 = !DILocation(line: 520, column: 27, scope: !9621)
!9640 = !DILocation(line: 520, column: 43, scope: !9621)
!9641 = !DILocation(line: 520, column: 68, scope: !9621)
!9642 = !DILocation(line: 520, column: 20, scope: !9621)
!9643 = !DILocation(line: 524, column: 22, scope: !9621)
!9644 = !DILocation(line: 524, column: 27, scope: !9621)
!9645 = !DILocation(line: 524, column: 19, scope: !9621)
!9646 = !DILocation(line: 528, column: 2, scope: !9621)
!9647 = !DILocation(line: 528, column: 9, scope: !9621)
!9648 = !DILocation(line: 528, column: 18, scope: !9621)
!9649 = !DILocation(line: 528, column: 22, scope: !9621)
!9650 = !DILocation(line: 529, column: 23, scope: !9621)
!9651 = !DILocation(line: 529, column: 2, scope: !9621)
!9652 = !DILocation(line: 533, column: 6, scope: !9621)
!9653 = !DILocation(line: 533, column: 11, scope: !9621)
!9654 = !DILocation(line: 535, column: 6, scope: !9621)
!9655 = !DILocation(line: 538, column: 6, scope: !9621)
!9656 = !DILocation(line: 540, column: 6, scope: !9621)
!9657 = !DILocation(line: 540, column: 35, scope: !9621)
!9658 = !DILocation(line: 541, column: 30, scope: !9621)
!9659 = !DILocation(line: 532, column: 2, scope: !9621)
!9660 = !DILocation(line: 532, column: 9, scope: !9621)
!9661 = !DILocation(line: 532, column: 15, scope: !9621)
!9662 = !DILocation(line: 532, column: 19, scope: !9621)
!9663 = !DILocation(line: 542, column: 23, scope: !9621)
!9664 = !DILocation(line: 542, column: 2, scope: !9621)
!9665 = !DILocation(line: 545, column: 31, scope: !9621)
!9666 = !DILocation(line: 545, column: 36, scope: !9621)
!9667 = !DILocation(line: 545, column: 11, scope: !9621)
!9668 = !DILocation(line: 545, column: 9, scope: !9621)
!9669 = !DILocation(line: 546, column: 6, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9621, file: !2215, line: 546, column: 6)
!9671 = !DILocation(line: 546, column: 13, scope: !9670)
!9672 = !DILocation(line: 546, column: 6, scope: !9621)
!9673 = !DILocation(line: 547, column: 10, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9670, file: !2215, line: 546, column: 18)
!9675 = !DILocation(line: 547, column: 3, scope: !9674)
!9676 = !DILocation(line: 550, column: 2, scope: !9621)
!9677 = !DILocation(line: 550, column: 12, scope: !9621)
!9678 = !DILocation(line: 550, column: 25, scope: !9621)
!9679 = !DILocation(line: 550, column: 35, scope: !9621)
!9680 = !DILocation(line: 551, column: 2, scope: !9621)
!9681 = !DILocation(line: 551, column: 12, scope: !9621)
!9682 = !DILocation(line: 551, column: 25, scope: !9621)
!9683 = !DILocation(line: 551, column: 32, scope: !9621)
!9684 = !DILocation(line: 552, column: 2, scope: !9621)
!9685 = !DILocation(line: 552, column: 12, scope: !9621)
!9686 = !DILocation(line: 552, column: 25, scope: !9621)
!9687 = !DILocation(line: 552, column: 35, scope: !9621)
!9688 = !DILocation(line: 553, column: 2, scope: !9621)
!9689 = !DILocation(line: 553, column: 12, scope: !9621)
!9690 = !DILocation(line: 553, column: 25, scope: !9621)
!9691 = !DILocation(line: 553, column: 35, scope: !9621)
!9692 = !DILocation(line: 556, column: 2, scope: !9621)
!9693 = !DILocation(line: 556, column: 9, scope: !9621)
!9694 = !DILocation(line: 556, column: 15, scope: !9621)
!9695 = !DILocation(line: 556, column: 19, scope: !9621)
!9696 = !DILocation(line: 558, column: 23, scope: !9621)
!9697 = !DILocation(line: 558, column: 2, scope: !9621)
!9698 = !DILocation(line: 560, column: 34, scope: !9621)
!9699 = !DILocation(line: 560, column: 41, scope: !9621)
!9700 = !DILocation(line: 560, column: 46, scope: !9621)
!9701 = !DILocation(line: 560, column: 11, scope: !9621)
!9702 = !DILocation(line: 560, column: 9, scope: !9621)
!9703 = !DILocation(line: 562, column: 6, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9621, file: !2215, line: 562, column: 6)
!9705 = !DILocation(line: 562, column: 13, scope: !9704)
!9706 = !DILocation(line: 562, column: 6, scope: !9621)
!9707 = !DILocation(line: 563, column: 10, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !2215, line: 562, column: 19)
!9709 = !DILocation(line: 563, column: 3, scope: !9708)
!9710 = !DILocation(line: 565, column: 36, scope: !9621)
!9711 = !DILocation(line: 565, column: 41, scope: !9621)
!9712 = !DILocation(line: 565, column: 2, scope: !9621)
!9713 = !DILocation(line: 565, column: 12, scope: !9621)
!9714 = !DILocation(line: 565, column: 25, scope: !9621)
!9715 = !DILocation(line: 565, column: 34, scope: !9621)
!9716 = !DILocation(line: 568, column: 2, scope: !9621)
!9717 = !DILocation(line: 568, column: 7, scope: !9621)
!9718 = !DILocation(line: 568, column: 23, scope: !9621)
!9719 = !DILocation(line: 631, column: 2, scope: !9621)
!9720 = !DILocation(line: 631, column: 9, scope: !9621)
!9721 = !DILocation(line: 631, column: 15, scope: !9621)
!9722 = !DILocation(line: 631, column: 19, scope: !9621)
!9723 = !DILocation(line: 631, column: 26, scope: !9621)
!9724 = !DILocation(line: 632, column: 23, scope: !9621)
!9725 = !DILocation(line: 632, column: 2, scope: !9621)
!9726 = !DILocation(line: 634, column: 2, scope: !9621)
!9727 = !DILocation(line: 635, column: 1, scope: !9621)
!9728 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2248, file: !2248, line: 342, type: !9729, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9729 = !DISubroutineType(types: !9730)
!9730 = !{!103, !2464, !156}
!9731 = !DILocalVariable(name: "config", arg: 1, scope: !9728, file: !2248, line: 342, type: !2464)
!9732 = !DILocation(line: 342, column: 72, scope: !9728)
!9733 = !DILocalVariable(name: "id", arg: 2, scope: !9728, file: !2248, line: 343, type: !156)
!9734 = !DILocation(line: 343, column: 19, scope: !9728)
!9735 = !DILocalVariable(name: "ret", scope: !9728, file: !2248, line: 345, type: !103)
!9736 = !DILocation(line: 345, column: 6, scope: !9728)
!9737 = !DILocalVariable(name: "state", scope: !9728, file: !2248, line: 346, type: !2251)
!9738 = !DILocation(line: 346, column: 30, scope: !9728)
!9739 = !DILocation(line: 348, column: 29, scope: !9728)
!9740 = !DILocation(line: 348, column: 37, scope: !9728)
!9741 = !DILocation(line: 348, column: 8, scope: !9728)
!9742 = !DILocation(line: 348, column: 6, scope: !9728)
!9743 = !DILocation(line: 349, column: 6, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9728, file: !2248, line: 349, column: 6)
!9745 = !DILocation(line: 349, column: 10, scope: !9744)
!9746 = !DILocation(line: 349, column: 6, scope: !9728)
!9747 = !DILocation(line: 350, column: 10, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9744, file: !2248, line: 349, column: 15)
!9749 = !DILocation(line: 350, column: 3, scope: !9748)
!9750 = !DILocation(line: 353, column: 36, scope: !9728)
!9751 = !DILocation(line: 353, column: 44, scope: !9728)
!9752 = !DILocation(line: 353, column: 9, scope: !9728)
!9753 = !DILocation(line: 353, column: 2, scope: !9728)
!9754 = !DILocation(line: 354, column: 1, scope: !9728)
!9755 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2248, file: !2248, line: 316, type: !9756, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1722, retainedNodes: !223)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!103, !2464, !2251}
!9758 = !DILocalVariable(name: "config", arg: 1, scope: !9755, file: !2248, line: 317, type: !2464)
!9759 = !DILocation(line: 317, column: 35, scope: !9755)
!9760 = !DILocalVariable(name: "state", arg: 2, scope: !9755, file: !2248, line: 318, type: !2251)
!9761 = !DILocation(line: 318, column: 30, scope: !9755)
!9762 = !DILocalVariable(name: "reg", scope: !9755, file: !2248, line: 320, type: !22)
!9763 = !DILocation(line: 320, column: 12, scope: !9755)
!9764 = !DILocation(line: 325, column: 2, scope: !9755)
!9765 = !DILocation(line: 326, column: 6, scope: !9755)
!9766 = !DILocation(line: 329, column: 32, scope: !9755)
!9767 = !DILocation(line: 329, column: 39, scope: !9755)
!9768 = !DILocation(line: 329, column: 45, scope: !9755)
!9769 = !DILocation(line: 329, column: 52, scope: !9755)
!9770 = !DILocation(line: 329, column: 61, scope: !9755)
!9771 = !DILocation(line: 329, column: 9, scope: !9755)
!9772 = !DILocation(line: 329, column: 2, scope: !9755)
!9773 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2555, file: !2555, line: 270, type: !2561, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9774 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !2555, line: 270, type: !2563)
!9775 = !DILocation(line: 270, column: 55, scope: !9773)
!9776 = !DILocation(line: 272, column: 2, scope: !9773)
!9777 = !DILocation(line: 274, column: 2, scope: !9773)
!9778 = !DILocation(line: 275, column: 14, scope: !9773)
!9779 = !DILocation(line: 275, column: 27, scope: !9773)
!9780 = !DILocation(line: 275, column: 12, scope: !9773)
!9781 = !DILocation(line: 276, column: 15, scope: !9773)
!9782 = !DILocation(line: 277, column: 18, scope: !9773)
!9783 = !DILocation(line: 277, column: 16, scope: !9773)
!9784 = !DILocation(line: 278, column: 15, scope: !9773)
!9785 = !DILocation(line: 279, column: 16, scope: !9773)
!9786 = !DILocation(line: 282, column: 2, scope: !9773)
!9787 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2509, file: !2509, line: 850, type: !6663, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9788 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9787, file: !2509, line: 850, type: !3303)
!9789 = !DILocation(line: 850, column: 51, scope: !9787)
!9790 = !DILocalVariable(name: "priority", arg: 2, scope: !9787, file: !2509, line: 850, type: !173)
!9791 = !DILocation(line: 850, column: 66, scope: !9787)
!9792 = !DILocation(line: 852, column: 17, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9787, file: !2509, line: 852, column: 7)
!9794 = !DILocation(line: 852, column: 23, scope: !9793)
!9795 = !DILocation(line: 852, column: 7, scope: !9787)
!9796 = !DILocation(line: 854, column: 53, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9793, file: !2509, line: 853, column: 3)
!9798 = !DILocation(line: 854, column: 44, scope: !9797)
!9799 = !DILocation(line: 854, column: 83, scope: !9797)
!9800 = !DILocation(line: 854, column: 80, scope: !9797)
!9801 = !DILocation(line: 854, column: 71, scope: !9797)
!9802 = !DILocation(line: 854, column: 69, scope: !9797)
!9803 = !DILocation(line: 855, column: 11, scope: !9797)
!9804 = !DILocation(line: 855, column: 20, scope: !9797)
!9805 = !DILocation(line: 855, column: 48, scope: !9797)
!9806 = !DILocation(line: 855, column: 71, scope: !9797)
!9807 = !DILocation(line: 855, column: 68, scope: !9797)
!9808 = !DILocation(line: 854, column: 102, scope: !9797)
!9809 = !DILocation(line: 854, column: 14, scope: !9797)
!9810 = !DILocation(line: 854, column: 5, scope: !9797)
!9811 = !DILocation(line: 854, column: 30, scope: !9797)
!9812 = !DILocation(line: 856, column: 3, scope: !9797)
!9813 = !DILocation(line: 859, column: 53, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9793, file: !2509, line: 858, column: 3)
!9815 = !DILocation(line: 859, column: 44, scope: !9814)
!9816 = !DILocation(line: 859, column: 83, scope: !9814)
!9817 = !DILocation(line: 859, column: 80, scope: !9814)
!9818 = !DILocation(line: 859, column: 71, scope: !9814)
!9819 = !DILocation(line: 859, column: 69, scope: !9814)
!9820 = !DILocation(line: 860, column: 11, scope: !9814)
!9821 = !DILocation(line: 860, column: 20, scope: !9814)
!9822 = !DILocation(line: 860, column: 48, scope: !9814)
!9823 = !DILocation(line: 860, column: 71, scope: !9814)
!9824 = !DILocation(line: 860, column: 68, scope: !9814)
!9825 = !DILocation(line: 859, column: 102, scope: !9814)
!9826 = !DILocation(line: 859, column: 14, scope: !9814)
!9827 = !DILocation(line: 859, column: 5, scope: !9814)
!9828 = !DILocation(line: 859, column: 30, scope: !9814)
!9829 = !DILocation(line: 862, column: 1, scope: !9787)
!9830 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !9831, file: !9831, line: 59, type: !3683, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9831 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9832 = !DILocation(line: 64, column: 2, scope: !9830)
!9833 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2555, file: !2555, line: 118, type: !6565, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9834 = !DILocalVariable(name: "arg", arg: 1, scope: !9833, file: !2555, line: 118, type: !102)
!9835 = !DILocation(line: 118, column: 26, scope: !9833)
!9836 = !DILocation(line: 120, column: 2, scope: !9833)
!9837 = !DILocalVariable(name: "dticks", scope: !9833, file: !2555, line: 121, type: !173)
!9838 = !DILocation(line: 121, column: 11, scope: !9833)
!9839 = !DILocation(line: 124, column: 2, scope: !9833)
!9840 = !DILocation(line: 129, column: 17, scope: !9833)
!9841 = !DILocation(line: 129, column: 14, scope: !9833)
!9842 = !DILocation(line: 130, column: 15, scope: !9833)
!9843 = !DILocation(line: 145, column: 13, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !2555, line: 132, column: 16)
!9845 = distinct !DILexicalBlock(scope: !9833, file: !2555, line: 132, column: 6)
!9846 = !DILocation(line: 145, column: 27, scope: !9844)
!9847 = !DILocation(line: 145, column: 25, scope: !9844)
!9848 = !DILocation(line: 145, column: 47, scope: !9844)
!9849 = !DILocation(line: 145, column: 45, scope: !9844)
!9850 = !DILocation(line: 145, column: 10, scope: !9844)
!9851 = !DILocation(line: 146, column: 23, scope: !9844)
!9852 = !DILocation(line: 146, column: 32, scope: !9844)
!9853 = !DILocation(line: 146, column: 30, scope: !9844)
!9854 = !DILocation(line: 146, column: 20, scope: !9844)
!9855 = !DILocation(line: 147, column: 22, scope: !9844)
!9856 = !DILocation(line: 147, column: 3, scope: !9844)
!9857 = !DILocation(line: 151, column: 2, scope: !9833)
!9858 = !DILocation(line: 152, column: 1, scope: !9833)
!9859 = distinct !DISubprogram(name: "elapsed", scope: !2555, file: !2555, line: 85, type: !7409, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9860 = !DILocalVariable(name: "val1", scope: !9859, file: !2555, line: 87, type: !173)
!9861 = !DILocation(line: 87, column: 11, scope: !9859)
!9862 = !DILocation(line: 87, column: 27, scope: !9859)
!9863 = !DILocalVariable(name: "ctrl", scope: !9859, file: !2555, line: 88, type: !173)
!9864 = !DILocation(line: 88, column: 11, scope: !9859)
!9865 = !DILocation(line: 88, column: 27, scope: !9859)
!9866 = !DILocalVariable(name: "val2", scope: !9859, file: !2555, line: 89, type: !173)
!9867 = !DILocation(line: 89, column: 11, scope: !9859)
!9868 = !DILocation(line: 89, column: 27, scope: !9859)
!9869 = !DILocation(line: 105, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9859, file: !2555, line: 105, column: 6)
!9871 = !DILocation(line: 105, column: 12, scope: !9870)
!9872 = !DILocation(line: 106, column: 6, scope: !9870)
!9873 = !DILocation(line: 106, column: 10, scope: !9870)
!9874 = !DILocation(line: 106, column: 17, scope: !9870)
!9875 = !DILocation(line: 106, column: 15, scope: !9870)
!9876 = !DILocation(line: 105, column: 6, scope: !9859)
!9877 = !DILocation(line: 107, column: 19, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9870, file: !2555, line: 106, column: 24)
!9879 = !DILocation(line: 107, column: 16, scope: !9878)
!9880 = !DILocation(line: 111, column: 18, scope: !9878)
!9881 = !DILocation(line: 112, column: 2, scope: !9878)
!9882 = !DILocation(line: 114, column: 10, scope: !9859)
!9883 = !DILocation(line: 114, column: 22, scope: !9859)
!9884 = !DILocation(line: 114, column: 20, scope: !9859)
!9885 = !DILocation(line: 114, column: 30, scope: !9859)
!9886 = !DILocation(line: 114, column: 28, scope: !9859)
!9887 = !DILocation(line: 114, column: 2, scope: !9859)
!9888 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2555, file: !2555, line: 154, type: !9889, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9889 = !DISubroutineType(types: !9890)
!9890 = !{null, !250, !1035}
!9891 = !DILocalVariable(name: "ticks", arg: 1, scope: !9888, file: !2555, line: 154, type: !250)
!9892 = !DILocation(line: 154, column: 36, scope: !9888)
!9893 = !DILocalVariable(name: "idle", arg: 2, scope: !9888, file: !2555, line: 154, type: !1035)
!9894 = !DILocation(line: 154, column: 48, scope: !9888)
!9895 = !DILocation(line: 162, column: 44, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9888, file: !2555, line: 162, column: 6)
!9897 = !DILocation(line: 162, column: 49, scope: !9896)
!9898 = !DILocation(line: 162, column: 52, scope: !9896)
!9899 = !DILocation(line: 162, column: 58, scope: !9896)
!9900 = !DILocation(line: 162, column: 6, scope: !9888)
!9901 = !DILocation(line: 163, column: 17, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9896, file: !2555, line: 162, column: 78)
!9903 = !DILocation(line: 164, column: 13, scope: !9902)
!9904 = !DILocation(line: 165, column: 3, scope: !9902)
!9905 = !DILocalVariable(name: "delay", scope: !9888, file: !2555, line: 169, type: !173)
!9906 = !DILocation(line: 169, column: 11, scope: !9888)
!9907 = !DILocalVariable(name: "val1", scope: !9888, file: !2555, line: 170, type: !173)
!9908 = !DILocation(line: 170, column: 11, scope: !9888)
!9909 = !DILocalVariable(name: "val2", scope: !9888, file: !2555, line: 170, type: !173)
!9910 = !DILocation(line: 170, column: 17, scope: !9888)
!9911 = !DILocalVariable(name: "last_load_", scope: !9888, file: !2555, line: 171, type: !173)
!9912 = !DILocation(line: 171, column: 11, scope: !9888)
!9913 = !DILocation(line: 171, column: 24, scope: !9888)
!9914 = !DILocation(line: 173, column: 11, scope: !9888)
!9915 = !DILocation(line: 173, column: 17, scope: !9888)
!9916 = !DILocation(line: 173, column: 10, scope: !9888)
!9917 = !DILocation(line: 173, column: 39, scope: !9888)
!9918 = !DILocation(line: 173, column: 51, scope: !9888)
!9919 = !DILocation(line: 173, column: 8, scope: !9888)
!9920 = !DILocation(line: 174, column: 10, scope: !9888)
!9921 = !DILocation(line: 174, column: 8, scope: !9888)
!9922 = !DILocalVariable(name: "key", scope: !9888, file: !2555, line: 176, type: !9923)
!9923 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !9924)
!9924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !9925)
!9925 = !{!9926}
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9924, file: !222, line: 33, baseType: !103, size: 32)
!9927 = !DILocation(line: 176, column: 19, scope: !9888)
!9928 = !DILocalVariable(name: "l", arg: 1, scope: !9929, file: !222, line: 136, type: !9932)
!9929 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !9930, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{!9923, !9932}
!9932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!9933 = !DILocation(line: 136, column: 70, scope: !9929, inlinedAt: !9934)
!9934 = distinct !DILocation(line: 176, column: 25, scope: !9888)
!9935 = !DILocation(line: 138, column: 2, scope: !9929, inlinedAt: !9934)
!9936 = !DILocalVariable(name: "k", scope: !9929, file: !222, line: 139, type: !9923)
!9937 = !DILocation(line: 139, column: 19, scope: !9929, inlinedAt: !9934)
!9938 = !DILocalVariable(name: "key", scope: !9939, file: !6304, line: 44, type: !32)
!9939 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!9940 = !DILocation(line: 44, column: 15, scope: !9939, inlinedAt: !9941)
!9941 = distinct !DILocation(line: 145, column: 10, scope: !9929, inlinedAt: !9934)
!9942 = !DILocation(line: 47, column: 2, scope: !9939, inlinedAt: !9941)
!9943 = !{i64 1391376}
!9944 = !DILocation(line: 76, column: 9, scope: !9939, inlinedAt: !9941)
!9945 = !DILocation(line: 145, column: 4, scope: !9929, inlinedAt: !9934)
!9946 = !DILocation(line: 145, column: 8, scope: !9929, inlinedAt: !9934)
!9947 = !DILocation(line: 165, column: 2, scope: !9929, inlinedAt: !9934)
!9948 = !DILocation(line: 176, column: 25, scope: !9888)
!9949 = !DILocalVariable(name: "pending", scope: !9888, file: !2555, line: 178, type: !173)
!9950 = !DILocation(line: 178, column: 11, scope: !9888)
!9951 = !DILocation(line: 178, column: 21, scope: !9888)
!9952 = !DILocation(line: 180, column: 18, scope: !9888)
!9953 = !DILocation(line: 180, column: 7, scope: !9888)
!9954 = !DILocation(line: 182, column: 17, scope: !9888)
!9955 = !DILocation(line: 182, column: 14, scope: !9888)
!9956 = !DILocation(line: 183, column: 15, scope: !9888)
!9957 = !DILocalVariable(name: "unannounced", scope: !9888, file: !2555, line: 185, type: !173)
!9958 = !DILocation(line: 185, column: 11, scope: !9888)
!9959 = !DILocation(line: 185, column: 25, scope: !9888)
!9960 = !DILocation(line: 185, column: 39, scope: !9888)
!9961 = !DILocation(line: 185, column: 37, scope: !9888)
!9962 = !DILocation(line: 187, column: 15, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9888, file: !2555, line: 187, column: 6)
!9964 = !DILocation(line: 187, column: 27, scope: !9963)
!9965 = !DILocation(line: 187, column: 6, scope: !9888)
!9966 = !DILocation(line: 194, column: 15, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9963, file: !2555, line: 187, column: 32)
!9968 = !DILocation(line: 194, column: 13, scope: !9967)
!9969 = !DILocation(line: 195, column: 2, scope: !9967)
!9970 = !DILocation(line: 197, column: 11, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9963, file: !2555, line: 195, column: 9)
!9972 = !DILocation(line: 197, column: 19, scope: !9971)
!9973 = !DILocation(line: 197, column: 17, scope: !9971)
!9974 = !DILocation(line: 197, column: 9, scope: !9971)
!9975 = !DILocation(line: 200, column: 12, scope: !9971)
!9976 = !DILocation(line: 200, column: 9, scope: !9971)
!9977 = !DILocation(line: 202, column: 6, scope: !9971)
!9978 = !DILocation(line: 202, column: 14, scope: !9971)
!9979 = !DILocation(line: 202, column: 12, scope: !9971)
!9980 = !DILocation(line: 202, column: 27, scope: !9971)
!9981 = !DILocation(line: 202, column: 34, scope: !9971)
!9982 = !DILocation(line: 202, column: 32, scope: !9971)
!9983 = !DILocation(line: 202, column: 50, scope: !9971)
!9984 = !DILocation(line: 202, column: 48, scope: !9971)
!9985 = !DILocation(line: 201, column: 9, scope: !9971)
!9986 = !DILocation(line: 203, column: 12, scope: !9971)
!9987 = !DILocation(line: 203, column: 9, scope: !9971)
!9988 = !DILocation(line: 204, column: 11, scope: !9971)
!9989 = !DILocation(line: 204, column: 9, scope: !9971)
!9990 = !DILocation(line: 205, column: 7, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9971, file: !2555, line: 205, column: 7)
!9992 = !DILocation(line: 205, column: 15, scope: !9991)
!9993 = !DILocation(line: 205, column: 13, scope: !9991)
!9994 = !DILocation(line: 205, column: 7, scope: !9971)
!9995 = !DILocation(line: 206, column: 16, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9991, file: !2555, line: 205, column: 27)
!9997 = !DILocation(line: 206, column: 14, scope: !9996)
!9998 = !DILocation(line: 207, column: 3, scope: !9996)
!9999 = !DILocation(line: 208, column: 16, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9991, file: !2555, line: 207, column: 10)
!10001 = !DILocation(line: 208, column: 14, scope: !10000)
!10002 = !DILocation(line: 212, column: 18, scope: !9888)
!10003 = !DILocation(line: 212, column: 7, scope: !9888)
!10004 = !DILocation(line: 214, column: 18, scope: !9888)
!10005 = !DILocation(line: 214, column: 28, scope: !9888)
!10006 = !DILocation(line: 214, column: 16, scope: !9888)
!10007 = !DILocation(line: 215, column: 15, scope: !9888)
!10008 = !DILocation(line: 227, column: 6, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9888, file: !2555, line: 227, column: 6)
!10010 = !DILocation(line: 227, column: 13, scope: !10009)
!10011 = !DILocation(line: 227, column: 11, scope: !10009)
!10012 = !DILocation(line: 227, column: 6, scope: !9888)
!10013 = !DILocation(line: 228, column: 19, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10009, file: !2555, line: 227, column: 19)
!10015 = !DILocation(line: 228, column: 27, scope: !10014)
!10016 = !DILocation(line: 228, column: 40, scope: !10014)
!10017 = !DILocation(line: 228, column: 38, scope: !10014)
!10018 = !DILocation(line: 228, column: 24, scope: !10014)
!10019 = !DILocation(line: 228, column: 15, scope: !10014)
!10020 = !DILocation(line: 229, column: 2, scope: !10014)
!10021 = !DILocation(line: 230, column: 19, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10009, file: !2555, line: 229, column: 9)
!10023 = !DILocation(line: 230, column: 26, scope: !10022)
!10024 = !DILocation(line: 230, column: 24, scope: !10022)
!10025 = !DILocation(line: 230, column: 15, scope: !10022)
!10026 = !DILocation(line: 232, column: 2, scope: !9888)
!10027 = !DILocalVariable(name: "l", arg: 1, scope: !10028, file: !222, line: 189, type: !9932)
!10028 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !10029, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{null, !9932, !9923}
!10031 = !DILocation(line: 189, column: 60, scope: !10028, inlinedAt: !10032)
!10032 = distinct !DILocation(line: 232, column: 2, scope: !9888)
!10033 = !DILocalVariable(name: "key", arg: 2, scope: !10028, file: !222, line: 190, type: !9923)
!10034 = !DILocation(line: 190, column: 23, scope: !10028, inlinedAt: !10032)
!10035 = !DILocation(line: 192, column: 2, scope: !10028, inlinedAt: !10032)
!10036 = !DILocation(line: 215, column: 22, scope: !10028, inlinedAt: !10032)
!10037 = !DILocalVariable(name: "key", arg: 1, scope: !10038, file: !6304, line: 84, type: !32)
!10038 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10039 = !DILocation(line: 84, column: 56, scope: !10038, inlinedAt: !10040)
!10040 = distinct !DILocation(line: 215, column: 2, scope: !10028, inlinedAt: !10032)
!10041 = !DILocation(line: 87, column: 6, scope: !10042, inlinedAt: !10040)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !6304, line: 87, column: 6)
!10043 = !DILocation(line: 87, column: 10, scope: !10042, inlinedAt: !10040)
!10044 = !DILocation(line: 87, column: 6, scope: !10038, inlinedAt: !10040)
!10045 = !DILocation(line: 88, column: 3, scope: !10046, inlinedAt: !10040)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !6304, line: 87, column: 17)
!10047 = !DILocation(line: 90, column: 2, scope: !10038, inlinedAt: !10040)
!10048 = !{i64 1392240}
!10049 = !DILocation(line: 110, column: 1, scope: !10038, inlinedAt: !10040)
!10050 = !DILocation(line: 234, column: 1, scope: !9888)
!10051 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2555, file: !2555, line: 236, type: !7409, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10052 = !DILocalVariable(name: "key", scope: !10051, file: !2555, line: 242, type: !9923)
!10053 = !DILocation(line: 242, column: 19, scope: !10051)
!10054 = !DILocation(line: 136, column: 70, scope: !9929, inlinedAt: !10055)
!10055 = distinct !DILocation(line: 242, column: 25, scope: !10051)
!10056 = !DILocation(line: 138, column: 2, scope: !9929, inlinedAt: !10055)
!10057 = !DILocation(line: 139, column: 19, scope: !9929, inlinedAt: !10055)
!10058 = !DILocation(line: 44, column: 15, scope: !9939, inlinedAt: !10059)
!10059 = distinct !DILocation(line: 145, column: 10, scope: !9929, inlinedAt: !10055)
!10060 = !DILocation(line: 47, column: 2, scope: !9939, inlinedAt: !10059)
!10061 = !DILocation(line: 76, column: 9, scope: !9939, inlinedAt: !10059)
!10062 = !DILocation(line: 145, column: 4, scope: !9929, inlinedAt: !10055)
!10063 = !DILocation(line: 145, column: 8, scope: !9929, inlinedAt: !10055)
!10064 = !DILocation(line: 165, column: 2, scope: !9929, inlinedAt: !10055)
!10065 = !DILocation(line: 242, column: 25, scope: !10051)
!10066 = !DILocalVariable(name: "cyc", scope: !10051, file: !2555, line: 243, type: !173)
!10067 = !DILocation(line: 243, column: 11, scope: !10051)
!10068 = !DILocation(line: 243, column: 17, scope: !10051)
!10069 = !DILocation(line: 243, column: 29, scope: !10051)
!10070 = !DILocation(line: 243, column: 27, scope: !10051)
!10071 = !DILocation(line: 243, column: 43, scope: !10051)
!10072 = !DILocation(line: 243, column: 41, scope: !10051)
!10073 = !DILocation(line: 245, column: 2, scope: !10051)
!10074 = !DILocation(line: 189, column: 60, scope: !10028, inlinedAt: !10075)
!10075 = distinct !DILocation(line: 245, column: 2, scope: !10051)
!10076 = !DILocation(line: 190, column: 23, scope: !10028, inlinedAt: !10075)
!10077 = !DILocation(line: 192, column: 2, scope: !10028, inlinedAt: !10075)
!10078 = !DILocation(line: 215, column: 22, scope: !10028, inlinedAt: !10075)
!10079 = !DILocation(line: 84, column: 56, scope: !10038, inlinedAt: !10080)
!10080 = distinct !DILocation(line: 215, column: 2, scope: !10028, inlinedAt: !10075)
!10081 = !DILocation(line: 87, column: 6, scope: !10042, inlinedAt: !10080)
!10082 = !DILocation(line: 87, column: 10, scope: !10042, inlinedAt: !10080)
!10083 = !DILocation(line: 87, column: 6, scope: !10038, inlinedAt: !10080)
!10084 = !DILocation(line: 88, column: 3, scope: !10046, inlinedAt: !10080)
!10085 = !DILocation(line: 90, column: 2, scope: !10038, inlinedAt: !10080)
!10086 = !DILocation(line: 110, column: 1, scope: !10038, inlinedAt: !10080)
!10087 = !DILocation(line: 246, column: 9, scope: !10051)
!10088 = !DILocation(line: 246, column: 15, scope: !10051)
!10089 = !DILocation(line: 246, column: 13, scope: !10051)
!10090 = !DILocation(line: 246, column: 2, scope: !10051)
!10091 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2555, file: !2555, line: 249, type: !7409, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10092 = !DILocalVariable(name: "key", scope: !10091, file: !2555, line: 251, type: !9923)
!10093 = !DILocation(line: 251, column: 19, scope: !10091)
!10094 = !DILocation(line: 136, column: 70, scope: !9929, inlinedAt: !10095)
!10095 = distinct !DILocation(line: 251, column: 25, scope: !10091)
!10096 = !DILocation(line: 138, column: 2, scope: !9929, inlinedAt: !10095)
!10097 = !DILocation(line: 139, column: 19, scope: !9929, inlinedAt: !10095)
!10098 = !DILocation(line: 44, column: 15, scope: !9939, inlinedAt: !10099)
!10099 = distinct !DILocation(line: 145, column: 10, scope: !9929, inlinedAt: !10095)
!10100 = !DILocation(line: 47, column: 2, scope: !9939, inlinedAt: !10099)
!10101 = !DILocation(line: 76, column: 9, scope: !9939, inlinedAt: !10099)
!10102 = !DILocation(line: 145, column: 4, scope: !9929, inlinedAt: !10095)
!10103 = !DILocation(line: 145, column: 8, scope: !9929, inlinedAt: !10095)
!10104 = !DILocation(line: 165, column: 2, scope: !9929, inlinedAt: !10095)
!10105 = !DILocation(line: 251, column: 25, scope: !10091)
!10106 = !DILocalVariable(name: "ret", scope: !10091, file: !2555, line: 252, type: !173)
!10107 = !DILocation(line: 252, column: 11, scope: !10091)
!10108 = !DILocation(line: 252, column: 17, scope: !10091)
!10109 = !DILocation(line: 252, column: 29, scope: !10091)
!10110 = !DILocation(line: 252, column: 27, scope: !10091)
!10111 = !DILocation(line: 254, column: 2, scope: !10091)
!10112 = !DILocation(line: 189, column: 60, scope: !10028, inlinedAt: !10113)
!10113 = distinct !DILocation(line: 254, column: 2, scope: !10091)
!10114 = !DILocation(line: 190, column: 23, scope: !10028, inlinedAt: !10113)
!10115 = !DILocation(line: 192, column: 2, scope: !10028, inlinedAt: !10113)
!10116 = !DILocation(line: 215, column: 22, scope: !10028, inlinedAt: !10113)
!10117 = !DILocation(line: 84, column: 56, scope: !10038, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 215, column: 2, scope: !10028, inlinedAt: !10113)
!10119 = !DILocation(line: 87, column: 6, scope: !10042, inlinedAt: !10118)
!10120 = !DILocation(line: 87, column: 10, scope: !10042, inlinedAt: !10118)
!10121 = !DILocation(line: 87, column: 6, scope: !10038, inlinedAt: !10118)
!10122 = !DILocation(line: 88, column: 3, scope: !10046, inlinedAt: !10118)
!10123 = !DILocation(line: 90, column: 2, scope: !10038, inlinedAt: !10118)
!10124 = !DILocation(line: 110, column: 1, scope: !10038, inlinedAt: !10118)
!10125 = !DILocation(line: 255, column: 9, scope: !10091)
!10126 = !DILocation(line: 255, column: 2, scope: !10091)
!10127 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2555, file: !2555, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10128 = !DILocation(line: 260, column: 6, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10127, file: !2555, line: 260, column: 6)
!10130 = !DILocation(line: 260, column: 16, scope: !10129)
!10131 = !DILocation(line: 260, column: 6, scope: !10127)
!10132 = !DILocation(line: 261, column: 17, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10129, file: !2555, line: 260, column: 34)
!10134 = !DILocation(line: 262, column: 2, scope: !10133)
!10135 = !DILocation(line: 263, column: 1, scope: !10127)
!10136 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2555, file: !2555, line: 265, type: !253, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2467, retainedNodes: !223)
!10137 = !DILocation(line: 267, column: 16, scope: !10136)
!10138 = !DILocation(line: 268, column: 1, scope: !10136)
!10139 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10140, file: !10140, line: 9, type: !10141, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3524, retainedNodes: !223)
!10140 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10141 = !DISubroutineType(types: !10142)
!10142 = !{!103, !10143, !156, !10156}
!10143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10144, size: 32)
!10144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10145)
!10145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2248, line: 60, size: 64, elements: !10146)
!10146 = !{!10147, !10155}
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10145, file: !2248, line: 69, baseType: !10148, size: 32)
!10148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10149, size: 32)
!10149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10150)
!10150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2248, line: 50, size: 64, elements: !10151)
!10151 = !{!10152, !10153, !10154}
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10150, file: !2248, line: 52, baseType: !2256, size: 32)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10150, file: !2248, line: 54, baseType: !156, size: 8, offset: 32)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10150, file: !2248, line: 56, baseType: !156, size: 8, offset: 40)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10145, file: !2248, line: 71, baseType: !156, size: 8, offset: 32)
!10156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10148, size: 32)
!10157 = !DILocalVariable(name: "config", arg: 1, scope: !10139, file: !10140, line: 9, type: !10143)
!10158 = !DILocation(line: 9, column: 59, scope: !10139)
!10159 = !DILocalVariable(name: "id", arg: 2, scope: !10139, file: !10140, line: 9, type: !156)
!10160 = !DILocation(line: 9, column: 75, scope: !10139)
!10161 = !DILocalVariable(name: "state", arg: 3, scope: !10139, file: !10140, line: 10, type: !10156)
!10162 = !DILocation(line: 10, column: 34, scope: !10139)
!10163 = !DILocation(line: 12, column: 12, scope: !10139)
!10164 = !DILocation(line: 12, column: 20, scope: !10139)
!10165 = !DILocation(line: 12, column: 3, scope: !10139)
!10166 = !DILocation(line: 12, column: 9, scope: !10139)
!10167 = !DILocation(line: 13, column: 2, scope: !10139)
!10168 = !DILocation(line: 13, column: 10, scope: !10139)
!10169 = !DILocation(line: 13, column: 9, scope: !10139)
!10170 = !DILocation(line: 13, column: 19, scope: !10139)
!10171 = !DILocation(line: 13, column: 27, scope: !10139)
!10172 = !DILocation(line: 13, column: 34, scope: !10139)
!10173 = !DILocation(line: 13, column: 42, scope: !10139)
!10174 = !DILocation(line: 13, column: 16, scope: !10139)
!10175 = !DILocation(line: 14, column: 7, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !10140, line: 14, column: 7)
!10177 = distinct !DILexicalBlock(scope: !10139, file: !10140, line: 13, column: 54)
!10178 = !DILocation(line: 14, column: 15, scope: !10176)
!10179 = !DILocation(line: 14, column: 14, scope: !10176)
!10180 = !DILocation(line: 14, column: 23, scope: !10176)
!10181 = !DILocation(line: 14, column: 13, scope: !10176)
!10182 = !DILocation(line: 14, column: 10, scope: !10176)
!10183 = !DILocation(line: 14, column: 7, scope: !10177)
!10184 = !DILocation(line: 15, column: 4, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10176, file: !10140, line: 14, column: 27)
!10186 = !DILocation(line: 18, column: 5, scope: !10177)
!10187 = !DILocation(line: 18, column: 11, scope: !10177)
!10188 = distinct !{!10188, !10167, !10189}
!10189 = !DILocation(line: 19, column: 2, scope: !10139)
!10190 = !DILocation(line: 21, column: 2, scope: !10139)
!10191 = !DILocation(line: 22, column: 1, scope: !10139)
!10192 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2748, file: !2748, line: 47, type: !10193, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2590, retainedNodes: !223)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!103, !2256, !156, !22}
!10195 = !DILocalVariable(name: "pins", arg: 1, scope: !10192, file: !2748, line: 47, type: !2256)
!10196 = !DILocation(line: 47, column: 53, scope: !10192)
!10197 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10192, file: !2748, line: 47, type: !156)
!10198 = !DILocation(line: 47, column: 67, scope: !10192)
!10199 = !DILocalVariable(name: "reg", arg: 3, scope: !10192, file: !2748, line: 48, type: !22)
!10200 = !DILocation(line: 48, column: 17, scope: !10192)
!10201 = !DILocation(line: 50, column: 2, scope: !10192)
!10202 = !DILocalVariable(name: "i", scope: !10203, file: !2748, line: 52, type: !156)
!10203 = distinct !DILexicalBlock(scope: !10192, file: !2748, line: 52, column: 2)
!10204 = !DILocation(line: 52, column: 15, scope: !10203)
!10205 = !DILocation(line: 52, column: 7, scope: !10203)
!10206 = !DILocation(line: 52, column: 23, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !2748, line: 52, column: 2)
!10208 = !DILocation(line: 52, column: 27, scope: !10207)
!10209 = !DILocation(line: 52, column: 25, scope: !10207)
!10210 = !DILocation(line: 52, column: 2, scope: !10203)
!10211 = !DILocation(line: 53, column: 30, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10207, file: !2748, line: 52, column: 41)
!10213 = !DILocation(line: 53, column: 25, scope: !10212)
!10214 = !DILocation(line: 53, column: 3, scope: !10212)
!10215 = !DILocation(line: 54, column: 2, scope: !10212)
!10216 = !DILocation(line: 52, column: 37, scope: !10207)
!10217 = !DILocation(line: 52, column: 2, scope: !10207)
!10218 = distinct !{!10218, !10210, !10219}
!10219 = !DILocation(line: 54, column: 2, scope: !10203)
!10220 = !DILocation(line: 56, column: 2, scope: !10192)
!10221 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !2748, file: !2748, line: 25, type: !10222, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2590, retainedNodes: !223)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{null, !2258}
!10224 = !DILocalVariable(name: "pin", arg: 1, scope: !10221, file: !2748, line: 25, type: !2258)
!10225 = !DILocation(line: 25, column: 53, scope: !10221)
!10226 = !DILocalVariable(name: "soc_pin", scope: !10221, file: !2748, line: 27, type: !10227)
!10227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6158, line: 75, size: 96, elements: !10228)
!10228 = !{!10229, !10230, !10231}
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !10227, file: !6158, line: 76, baseType: !2593, size: 32)
!10230 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !10227, file: !6158, line: 77, baseType: !173, size: 32, offset: 32)
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10227, file: !6158, line: 78, baseType: !173, size: 32, offset: 64)
!10232 = !DILocation(line: 27, column: 22, scope: !10221)
!10233 = !DILocalVariable(name: "port_idx", scope: !10221, file: !2748, line: 28, type: !156)
!10234 = !DILocation(line: 28, column: 11, scope: !10221)
!10235 = !DILocalVariable(name: "port_func", scope: !10221, file: !2748, line: 28, type: !156)
!10236 = !DILocation(line: 28, column: 21, scope: !10221)
!10237 = !DILocation(line: 30, column: 13, scope: !10221)
!10238 = !DILocation(line: 30, column: 11, scope: !10221)
!10239 = !DILocation(line: 32, column: 14, scope: !10221)
!10240 = !DILocation(line: 32, column: 12, scope: !10221)
!10241 = !DILocation(line: 34, column: 46, scope: !10221)
!10242 = !DILocation(line: 34, column: 31, scope: !10221)
!10243 = !DILocation(line: 34, column: 17, scope: !10221)
!10244 = !DILocation(line: 34, column: 10, scope: !10221)
!10245 = !DILocation(line: 34, column: 15, scope: !10221)
!10246 = !DILocation(line: 35, column: 18, scope: !10221)
!10247 = !DILocation(line: 35, column: 10, scope: !10221)
!10248 = !DILocation(line: 35, column: 16, scope: !10221)
!10249 = !DILocation(line: 36, column: 18, scope: !10221)
!10250 = !DILocation(line: 36, column: 45, scope: !10221)
!10251 = !DILocation(line: 36, column: 10, scope: !10221)
!10252 = !DILocation(line: 36, column: 16, scope: !10221)
!10253 = !DILocation(line: 38, column: 6, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10221, file: !2748, line: 38, column: 6)
!10255 = !DILocation(line: 38, column: 16, scope: !10254)
!10256 = !DILocation(line: 38, column: 6, scope: !10221)
!10257 = !DILocation(line: 39, column: 21, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10254, file: !2748, line: 38, column: 43)
!10259 = !DILocation(line: 40, column: 7, scope: !10258)
!10260 = !DILocation(line: 41, column: 10, scope: !10258)
!10261 = !DILocation(line: 39, column: 11, scope: !10258)
!10262 = !DILocation(line: 39, column: 17, scope: !10258)
!10263 = !DILocation(line: 42, column: 2, scope: !10258)
!10264 = !DILocation(line: 44, column: 2, scope: !10221)
!10265 = !DILocation(line: 45, column: 1, scope: !10221)
!10266 = distinct !DISubprogram(name: "z_device_state_init", scope: !10267, file: !10267, line: 23, type: !253, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10267 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10268 = !DILocalVariable(name: "dev", scope: !10266, file: !10267, line: 25, type: !10269)
!10269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10270, size: 32)
!10270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10271)
!10271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !10272)
!10272 = !{!10273, !10274, !10275, !10276, !10282, !10283}
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10271, file: !1024, line: 380, baseType: !256, size: 32)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10271, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10271, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10271, file: !1024, line: 386, baseType: !10277, size: 32, offset: 96)
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10278, size: 32)
!10278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !10279)
!10279 = !{!10280, !10281}
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10278, file: !1024, line: 359, baseType: !156, size: 8)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10278, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10271, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10271, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!10284 = !DILocation(line: 25, column: 23, scope: !10266)
!10285 = !DILocation(line: 27, column: 2, scope: !10266)
!10286 = !DILocation(line: 27, column: 9, scope: !10266)
!10287 = !DILocation(line: 27, column: 13, scope: !10266)
!10288 = !DILocation(line: 28, column: 17, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10266, file: !10267, line: 27, column: 29)
!10290 = !DILocation(line: 28, column: 3, scope: !10289)
!10291 = !DILocation(line: 29, column: 3, scope: !10289)
!10292 = distinct !{!10292, !10285, !10293}
!10293 = !DILocation(line: 30, column: 2, scope: !10266)
!10294 = !DILocation(line: 31, column: 1, scope: !10266)
!10295 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10296 = !DILocalVariable(name: "obj", arg: 1, scope: !10295, file: !31, line: 200, type: !13)
!10297 = !DILocation(line: 200, column: 46, scope: !10295)
!10298 = !DILocation(line: 202, column: 2, scope: !10295)
!10299 = !DILocation(line: 203, column: 1, scope: !10295)
!10300 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10267, file: !10267, line: 33, type: !10301, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10301 = !DISubroutineType(types: !10302)
!10302 = !{!10269, !256}
!10303 = !DILocalVariable(name: "name", arg: 1, scope: !10300, file: !10267, line: 33, type: !256)
!10304 = !DILocation(line: 33, column: 60, scope: !10300)
!10305 = !DILocalVariable(name: "dev", scope: !10300, file: !10267, line: 35, type: !10269)
!10306 = !DILocation(line: 35, column: 23, scope: !10300)
!10307 = !DILocation(line: 40, column: 7, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10300, file: !10267, line: 40, column: 6)
!10309 = !DILocation(line: 40, column: 12, scope: !10308)
!10310 = !DILocation(line: 40, column: 21, scope: !10308)
!10311 = !DILocation(line: 40, column: 25, scope: !10308)
!10312 = !DILocation(line: 40, column: 33, scope: !10308)
!10313 = !DILocation(line: 40, column: 6, scope: !10300)
!10314 = !DILocation(line: 41, column: 3, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10308, file: !10267, line: 40, column: 43)
!10316 = !DILocation(line: 49, column: 11, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10300, file: !10267, line: 49, column: 2)
!10318 = !DILocation(line: 49, column: 7, scope: !10317)
!10319 = !DILocation(line: 49, column: 29, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10317, file: !10267, line: 49, column: 2)
!10321 = !DILocation(line: 49, column: 33, scope: !10320)
!10322 = !DILocation(line: 49, column: 2, scope: !10317)
!10323 = !DILocation(line: 50, column: 25, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !10267, line: 50, column: 7)
!10325 = distinct !DILexicalBlock(scope: !10320, file: !10267, line: 49, column: 57)
!10326 = !DILocation(line: 50, column: 7, scope: !10324)
!10327 = !DILocation(line: 50, column: 30, scope: !10324)
!10328 = !DILocation(line: 50, column: 34, scope: !10324)
!10329 = !DILocation(line: 50, column: 39, scope: !10324)
!10330 = !DILocation(line: 50, column: 47, scope: !10324)
!10331 = !DILocation(line: 50, column: 44, scope: !10324)
!10332 = !DILocation(line: 50, column: 7, scope: !10325)
!10333 = !DILocation(line: 51, column: 11, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10324, file: !10267, line: 50, column: 54)
!10335 = !DILocation(line: 51, column: 4, scope: !10334)
!10336 = !DILocation(line: 53, column: 2, scope: !10325)
!10337 = !DILocation(line: 49, column: 53, scope: !10320)
!10338 = !DILocation(line: 49, column: 2, scope: !10320)
!10339 = distinct !{!10339, !10322, !10340}
!10340 = !DILocation(line: 53, column: 2, scope: !10317)
!10341 = !DILocation(line: 55, column: 11, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10300, file: !10267, line: 55, column: 2)
!10343 = !DILocation(line: 55, column: 7, scope: !10342)
!10344 = !DILocation(line: 55, column: 29, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10342, file: !10267, line: 55, column: 2)
!10346 = !DILocation(line: 55, column: 33, scope: !10345)
!10347 = !DILocation(line: 55, column: 2, scope: !10342)
!10348 = !DILocation(line: 56, column: 25, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !10267, line: 56, column: 7)
!10350 = distinct !DILexicalBlock(scope: !10345, file: !10267, line: 55, column: 57)
!10351 = !DILocation(line: 56, column: 7, scope: !10349)
!10352 = !DILocation(line: 56, column: 30, scope: !10349)
!10353 = !DILocation(line: 56, column: 41, scope: !10349)
!10354 = !DILocation(line: 56, column: 47, scope: !10349)
!10355 = !DILocation(line: 56, column: 52, scope: !10349)
!10356 = !DILocation(line: 56, column: 34, scope: !10349)
!10357 = !DILocation(line: 56, column: 58, scope: !10349)
!10358 = !DILocation(line: 56, column: 7, scope: !10350)
!10359 = !DILocation(line: 57, column: 11, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10349, file: !10267, line: 56, column: 65)
!10361 = !DILocation(line: 57, column: 4, scope: !10360)
!10362 = !DILocation(line: 59, column: 2, scope: !10350)
!10363 = !DILocation(line: 55, column: 53, scope: !10345)
!10364 = !DILocation(line: 55, column: 2, scope: !10345)
!10365 = distinct !{!10365, !10347, !10366}
!10366 = !DILocation(line: 59, column: 2, scope: !10342)
!10367 = !DILocation(line: 61, column: 2, scope: !10300)
!10368 = !DILocation(line: 62, column: 1, scope: !10300)
!10369 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10267, file: !10267, line: 93, type: !10370, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10370 = !DISubroutineType(types: !10371)
!10371 = !{!1035, !10269}
!10372 = !DILocalVariable(name: "dev", arg: 1, scope: !10369, file: !10267, line: 93, type: !10269)
!10373 = !DILocation(line: 93, column: 45, scope: !10369)
!10374 = !DILocation(line: 99, column: 6, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10369, file: !10267, line: 99, column: 6)
!10376 = !DILocation(line: 99, column: 10, scope: !10375)
!10377 = !DILocation(line: 99, column: 6, scope: !10369)
!10378 = !DILocation(line: 100, column: 3, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10375, file: !10267, line: 99, column: 19)
!10380 = !DILocation(line: 103, column: 9, scope: !10369)
!10381 = !DILocation(line: 103, column: 14, scope: !10369)
!10382 = !DILocation(line: 103, column: 21, scope: !10369)
!10383 = !DILocation(line: 103, column: 33, scope: !10369)
!10384 = !DILocation(line: 103, column: 37, scope: !10369)
!10385 = !DILocation(line: 103, column: 42, scope: !10369)
!10386 = !DILocation(line: 103, column: 49, scope: !10369)
!10387 = !DILocation(line: 103, column: 58, scope: !10369)
!10388 = !DILocation(line: 0, scope: !10369)
!10389 = !DILocation(line: 103, column: 2, scope: !10369)
!10390 = !DILocation(line: 104, column: 1, scope: !10369)
!10391 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10267, file: !10267, line: 87, type: !10392, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!217, !10394}
!10394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10269, size: 32)
!10395 = !DILocalVariable(name: "devices", arg: 1, scope: !10391, file: !10267, line: 87, type: !10394)
!10396 = !DILocation(line: 87, column: 54, scope: !10391)
!10397 = !DILocation(line: 89, column: 3, scope: !10391)
!10398 = !DILocation(line: 89, column: 11, scope: !10391)
!10399 = !DILocation(line: 90, column: 2, scope: !10391)
!10400 = distinct !DISubprogram(name: "device_required_foreach", scope: !10267, file: !10267, line: 125, type: !10401, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{!103, !10269, !10403, !102}
!10403 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1024, line: 471, baseType: !10404)
!10404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10405, size: 32)
!10405 = !DISubroutineType(types: !10406)
!10406 = !{!103, !10269, !102}
!10407 = !DILocalVariable(name: "dev", arg: 1, scope: !10400, file: !10267, line: 125, type: !10269)
!10408 = !DILocation(line: 125, column: 50, scope: !10400)
!10409 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10400, file: !10267, line: 126, type: !10403)
!10410 = !DILocation(line: 126, column: 34, scope: !10400)
!10411 = !DILocalVariable(name: "context", arg: 3, scope: !10400, file: !10267, line: 127, type: !102)
!10412 = !DILocation(line: 127, column: 14, scope: !10400)
!10413 = !DILocalVariable(name: "handle_count", scope: !10400, file: !10267, line: 129, type: !217)
!10414 = !DILocation(line: 129, column: 9, scope: !10400)
!10415 = !DILocalVariable(name: "handles", scope: !10400, file: !10267, line: 130, type: !1038)
!10416 = !DILocation(line: 130, column: 25, scope: !10400)
!10417 = !DILocation(line: 130, column: 63, scope: !10400)
!10418 = !DILocation(line: 130, column: 35, scope: !10400)
!10419 = !DILocation(line: 132, column: 24, scope: !10400)
!10420 = !DILocation(line: 132, column: 33, scope: !10400)
!10421 = !DILocation(line: 132, column: 47, scope: !10400)
!10422 = !DILocation(line: 132, column: 59, scope: !10400)
!10423 = !DILocation(line: 132, column: 9, scope: !10400)
!10424 = !DILocation(line: 132, column: 2, scope: !10400)
!10425 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1024, file: !1024, line: 493, type: !10426, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10426 = !DISubroutineType(types: !10427)
!10427 = !{!1038, !10269, !3290}
!10428 = !DILocalVariable(name: "dev", arg: 1, scope: !10425, file: !1024, line: 493, type: !10269)
!10429 = !DILocation(line: 493, column: 50, scope: !10425)
!10430 = !DILocalVariable(name: "count", arg: 2, scope: !10425, file: !1024, line: 493, type: !3290)
!10431 = !DILocation(line: 493, column: 63, scope: !10425)
!10432 = !DILocalVariable(name: "rv", scope: !10425, file: !1024, line: 495, type: !1038)
!10433 = !DILocation(line: 495, column: 25, scope: !10425)
!10434 = !DILocation(line: 495, column: 30, scope: !10425)
!10435 = !DILocation(line: 495, column: 35, scope: !10425)
!10436 = !DILocation(line: 497, column: 6, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10425, file: !1024, line: 497, column: 6)
!10438 = !DILocation(line: 497, column: 9, scope: !10437)
!10439 = !DILocation(line: 497, column: 6, scope: !10425)
!10440 = !DILocalVariable(name: "i", scope: !10441, file: !1024, line: 498, type: !217)
!10441 = distinct !DILexicalBlock(scope: !10437, file: !1024, line: 497, column: 18)
!10442 = !DILocation(line: 498, column: 10, scope: !10441)
!10443 = !DILocation(line: 500, column: 3, scope: !10441)
!10444 = !DILocation(line: 500, column: 11, scope: !10441)
!10445 = !DILocation(line: 500, column: 14, scope: !10441)
!10446 = !DILocation(line: 500, column: 17, scope: !10441)
!10447 = !DILocation(line: 500, column: 40, scope: !10441)
!10448 = !DILocation(line: 501, column: 11, scope: !10441)
!10449 = !DILocation(line: 501, column: 14, scope: !10441)
!10450 = !DILocation(line: 501, column: 17, scope: !10441)
!10451 = !DILocation(line: 0, scope: !10441)
!10452 = !DILocation(line: 502, column: 4, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10441, file: !1024, line: 501, column: 40)
!10454 = distinct !{!10454, !10443, !10455}
!10455 = !DILocation(line: 503, column: 3, scope: !10441)
!10456 = !DILocation(line: 504, column: 12, scope: !10441)
!10457 = !DILocation(line: 504, column: 4, scope: !10441)
!10458 = !DILocation(line: 504, column: 10, scope: !10441)
!10459 = !DILocation(line: 505, column: 2, scope: !10441)
!10460 = !DILocation(line: 507, column: 9, scope: !10425)
!10461 = !DILocation(line: 507, column: 2, scope: !10425)
!10462 = distinct !DISubprogram(name: "device_visitor", scope: !10267, file: !10267, line: 106, type: !10463, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10463 = !DISubroutineType(types: !10464)
!10464 = !{!103, !1038, !217, !10403, !102}
!10465 = !DILocalVariable(name: "handles", arg: 1, scope: !10462, file: !10267, line: 106, type: !1038)
!10466 = !DILocation(line: 106, column: 50, scope: !10462)
!10467 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10462, file: !10267, line: 107, type: !217)
!10468 = !DILocation(line: 107, column: 14, scope: !10462)
!10469 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10462, file: !10267, line: 108, type: !10403)
!10470 = !DILocation(line: 108, column: 33, scope: !10462)
!10471 = !DILocalVariable(name: "context", arg: 4, scope: !10462, file: !10267, line: 109, type: !102)
!10472 = !DILocation(line: 109, column: 13, scope: !10462)
!10473 = !DILocalVariable(name: "i", scope: !10474, file: !10267, line: 112, type: !217)
!10474 = distinct !DILexicalBlock(scope: !10462, file: !10267, line: 112, column: 2)
!10475 = !DILocation(line: 112, column: 14, scope: !10474)
!10476 = !DILocation(line: 112, column: 7, scope: !10474)
!10477 = !DILocation(line: 112, column: 21, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10474, file: !10267, line: 112, column: 2)
!10479 = !DILocation(line: 112, column: 25, scope: !10478)
!10480 = !DILocation(line: 112, column: 23, scope: !10478)
!10481 = !DILocation(line: 112, column: 2, scope: !10474)
!10482 = !DILocalVariable(name: "dh", scope: !10483, file: !10267, line: 113, type: !1040)
!10483 = distinct !DILexicalBlock(scope: !10478, file: !10267, line: 112, column: 44)
!10484 = !DILocation(line: 113, column: 19, scope: !10483)
!10485 = !DILocation(line: 113, column: 24, scope: !10483)
!10486 = !DILocation(line: 113, column: 32, scope: !10483)
!10487 = !DILocalVariable(name: "rdev", scope: !10483, file: !10267, line: 114, type: !10269)
!10488 = !DILocation(line: 114, column: 24, scope: !10483)
!10489 = !DILocation(line: 114, column: 50, scope: !10483)
!10490 = !DILocation(line: 114, column: 31, scope: !10483)
!10491 = !DILocalVariable(name: "rc", scope: !10483, file: !10267, line: 115, type: !103)
!10492 = !DILocation(line: 115, column: 7, scope: !10483)
!10493 = !DILocation(line: 115, column: 12, scope: !10483)
!10494 = !DILocation(line: 115, column: 23, scope: !10483)
!10495 = !DILocation(line: 115, column: 29, scope: !10483)
!10496 = !DILocation(line: 117, column: 7, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10483, file: !10267, line: 117, column: 7)
!10498 = !DILocation(line: 117, column: 10, scope: !10497)
!10499 = !DILocation(line: 117, column: 7, scope: !10483)
!10500 = !DILocation(line: 118, column: 11, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !10267, line: 117, column: 15)
!10502 = !DILocation(line: 118, column: 4, scope: !10501)
!10503 = !DILocation(line: 120, column: 2, scope: !10483)
!10504 = !DILocation(line: 112, column: 39, scope: !10478)
!10505 = !DILocation(line: 112, column: 2, scope: !10478)
!10506 = distinct !{!10506, !10481, !10507}
!10507 = !DILocation(line: 120, column: 2, scope: !10474)
!10508 = !DILocation(line: 122, column: 9, scope: !10462)
!10509 = !DILocation(line: 122, column: 2, scope: !10462)
!10510 = !DILocation(line: 123, column: 1, scope: !10462)
!10511 = distinct !DISubprogram(name: "device_from_handle", scope: !1024, file: !1024, line: 439, type: !10512, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{!10269, !1040}
!10514 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10511, file: !1024, line: 439, type: !1040)
!10515 = !DILocation(line: 439, column: 36, scope: !10511)
!10516 = !DILocalVariable(name: "dev", scope: !10511, file: !1024, line: 443, type: !10269)
!10517 = !DILocation(line: 443, column: 23, scope: !10511)
!10518 = !DILocalVariable(name: "numdev", scope: !10511, file: !1024, line: 444, type: !217)
!10519 = !DILocation(line: 444, column: 9, scope: !10511)
!10520 = !DILocation(line: 446, column: 7, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10511, file: !1024, line: 446, column: 6)
!10522 = !DILocation(line: 446, column: 18, scope: !10521)
!10523 = !DILocation(line: 446, column: 23, scope: !10521)
!10524 = !DILocation(line: 446, column: 35, scope: !10521)
!10525 = !DILocation(line: 446, column: 27, scope: !10521)
!10526 = !DILocation(line: 446, column: 49, scope: !10521)
!10527 = !DILocation(line: 446, column: 46, scope: !10521)
!10528 = !DILocation(line: 446, column: 6, scope: !10511)
!10529 = !DILocation(line: 447, column: 25, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10521, file: !1024, line: 446, column: 58)
!10531 = !DILocation(line: 447, column: 36, scope: !10530)
!10532 = !DILocation(line: 447, column: 10, scope: !10530)
!10533 = !DILocation(line: 447, column: 7, scope: !10530)
!10534 = !DILocation(line: 448, column: 2, scope: !10530)
!10535 = !DILocation(line: 450, column: 9, scope: !10511)
!10536 = !DILocation(line: 450, column: 2, scope: !10511)
!10537 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10267, file: !10267, line: 135, type: !10401, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10538 = !DILocalVariable(name: "dev", arg: 1, scope: !10537, file: !10267, line: 135, type: !10269)
!10539 = !DILocation(line: 135, column: 51, scope: !10537)
!10540 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10537, file: !10267, line: 136, type: !10403)
!10541 = !DILocation(line: 136, column: 35, scope: !10537)
!10542 = !DILocalVariable(name: "context", arg: 3, scope: !10537, file: !10267, line: 137, type: !102)
!10543 = !DILocation(line: 137, column: 15, scope: !10537)
!10544 = !DILocalVariable(name: "handle_count", scope: !10537, file: !10267, line: 139, type: !217)
!10545 = !DILocation(line: 139, column: 9, scope: !10537)
!10546 = !DILocalVariable(name: "handles", scope: !10537, file: !10267, line: 140, type: !1038)
!10547 = !DILocation(line: 140, column: 25, scope: !10537)
!10548 = !DILocation(line: 140, column: 64, scope: !10537)
!10549 = !DILocation(line: 140, column: 35, scope: !10537)
!10550 = !DILocation(line: 142, column: 24, scope: !10537)
!10551 = !DILocation(line: 142, column: 33, scope: !10537)
!10552 = !DILocation(line: 142, column: 47, scope: !10537)
!10553 = !DILocation(line: 142, column: 59, scope: !10537)
!10554 = !DILocation(line: 142, column: 9, scope: !10537)
!10555 = !DILocation(line: 142, column: 2, scope: !10537)
!10556 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1024, file: !1024, line: 573, type: !10426, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3526, retainedNodes: !223)
!10557 = !DILocalVariable(name: "dev", arg: 1, scope: !10556, file: !1024, line: 573, type: !10269)
!10558 = !DILocation(line: 573, column: 51, scope: !10556)
!10559 = !DILocalVariable(name: "count", arg: 2, scope: !10556, file: !1024, line: 573, type: !3290)
!10560 = !DILocation(line: 573, column: 64, scope: !10556)
!10561 = !DILocalVariable(name: "rv", scope: !10556, file: !1024, line: 575, type: !1038)
!10562 = !DILocation(line: 575, column: 25, scope: !10556)
!10563 = !DILocation(line: 575, column: 30, scope: !10556)
!10564 = !DILocation(line: 575, column: 35, scope: !10556)
!10565 = !DILocalVariable(name: "region", scope: !10556, file: !1024, line: 576, type: !217)
!10566 = !DILocation(line: 576, column: 9, scope: !10556)
!10567 = !DILocalVariable(name: "i", scope: !10556, file: !1024, line: 577, type: !217)
!10568 = !DILocation(line: 577, column: 9, scope: !10556)
!10569 = !DILocation(line: 579, column: 6, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10556, file: !1024, line: 579, column: 6)
!10571 = !DILocation(line: 579, column: 9, scope: !10570)
!10572 = !DILocation(line: 579, column: 6, scope: !10556)
!10573 = !DILocation(line: 581, column: 3, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10570, file: !1024, line: 579, column: 18)
!10575 = !DILocation(line: 581, column: 10, scope: !10574)
!10576 = !DILocation(line: 581, column: 17, scope: !10574)
!10577 = !DILocation(line: 582, column: 9, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !1024, line: 582, column: 8)
!10579 = distinct !DILexicalBlock(scope: !10574, file: !1024, line: 581, column: 23)
!10580 = !DILocation(line: 582, column: 8, scope: !10578)
!10581 = !DILocation(line: 582, column: 12, scope: !10578)
!10582 = !DILocation(line: 582, column: 8, scope: !10579)
!10583 = !DILocation(line: 583, column: 11, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10578, file: !1024, line: 582, column: 34)
!10585 = !DILocation(line: 584, column: 4, scope: !10584)
!10586 = !DILocation(line: 585, column: 6, scope: !10579)
!10587 = distinct !{!10587, !10573, !10588}
!10588 = !DILocation(line: 586, column: 3, scope: !10574)
!10589 = !DILocation(line: 588, column: 3, scope: !10574)
!10590 = !DILocation(line: 588, column: 10, scope: !10574)
!10591 = !DILocation(line: 588, column: 13, scope: !10574)
!10592 = !DILocation(line: 588, column: 16, scope: !10574)
!10593 = !DILocation(line: 589, column: 4, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10574, file: !1024, line: 588, column: 39)
!10595 = distinct !{!10595, !10589, !10596}
!10596 = !DILocation(line: 590, column: 3, scope: !10574)
!10597 = !DILocation(line: 591, column: 12, scope: !10574)
!10598 = !DILocation(line: 591, column: 4, scope: !10574)
!10599 = !DILocation(line: 591, column: 10, scope: !10574)
!10600 = !DILocation(line: 592, column: 2, scope: !10574)
!10601 = !DILocation(line: 594, column: 9, scope: !10556)
!10602 = !DILocation(line: 594, column: 2, scope: !10556)
!10603 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2756, file: !2756, line: 49, type: !10604, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2753, retainedNodes: !223)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{!3284}
!10606 = !DILocation(line: 51, column: 10, scope: !10603)
!10607 = !DILocation(line: 51, column: 20, scope: !10603)
!10608 = !DILocation(line: 51, column: 2, scope: !10603)
!10609 = distinct !DISubprogram(name: "coredump", scope: !3533, file: !3533, line: 209, type: !10610, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{null, !32, !10612, !10656}
!10612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10613, size: 32)
!10613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10614)
!10614 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3370, line: 141, baseType: !10615)
!10615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3370, line: 97, size: 256, elements: !10616)
!10616 = !{!10617}
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10615, file: !3370, line: 107, baseType: !10618, size: 256)
!10618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3370, line: 98, size: 256, elements: !10619)
!10619 = !{!10620, !10625, !10630, !10635, !10640, !10645, !10650, !10655}
!10620 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 99, baseType: !10621, size: 32)
!10621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 99, size: 32, elements: !10622)
!10622 = !{!10623, !10624}
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10621, file: !3370, line: 99, baseType: !173, size: 32)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10621, file: !3370, line: 99, baseType: !173, size: 32)
!10625 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 100, baseType: !10626, size: 32, offset: 32)
!10626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 100, size: 32, elements: !10627)
!10627 = !{!10628, !10629}
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10626, file: !3370, line: 100, baseType: !173, size: 32)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10626, file: !3370, line: 100, baseType: !173, size: 32)
!10630 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 101, baseType: !10631, size: 32, offset: 64)
!10631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 101, size: 32, elements: !10632)
!10632 = !{!10633, !10634}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10631, file: !3370, line: 101, baseType: !173, size: 32)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10631, file: !3370, line: 101, baseType: !173, size: 32)
!10635 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 102, baseType: !10636, size: 32, offset: 96)
!10636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 102, size: 32, elements: !10637)
!10637 = !{!10638, !10639}
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10636, file: !3370, line: 102, baseType: !173, size: 32)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10636, file: !3370, line: 102, baseType: !173, size: 32)
!10640 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 103, baseType: !10641, size: 32, offset: 128)
!10641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 103, size: 32, elements: !10642)
!10642 = !{!10643, !10644}
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10641, file: !3370, line: 103, baseType: !173, size: 32)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10641, file: !3370, line: 103, baseType: !173, size: 32)
!10645 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 104, baseType: !10646, size: 32, offset: 160)
!10646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 104, size: 32, elements: !10647)
!10647 = !{!10648, !10649}
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10646, file: !3370, line: 104, baseType: !173, size: 32)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10646, file: !3370, line: 104, baseType: !173, size: 32)
!10650 = !DIDerivedType(tag: DW_TAG_member, scope: !10618, file: !3370, line: 105, baseType: !10651, size: 32, offset: 192)
!10651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10618, file: !3370, line: 105, size: 32, elements: !10652)
!10652 = !{!10653, !10654}
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10651, file: !3370, line: 105, baseType: !173, size: 32)
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10651, file: !3370, line: 105, baseType: !173, size: 32)
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10618, file: !3370, line: 106, baseType: !173, size: 32, offset: 224)
!10656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10657, size: 32)
!10657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !10658)
!10658 = !{!10659, !10717, !10729, !10730, !10731, !10732, !10745}
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10657, file: !114, line: 247, baseType: !10660, size: 384)
!10660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !10661)
!10661 = !{!10662, !10686, !10693, !10694, !10695, !10704, !10705, !10706}
!10662 = !DIDerivedType(tag: DW_TAG_member, scope: !10660, file: !114, line: 60, baseType: !10663, size: 64)
!10663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10660, file: !114, line: 60, size: 64, elements: !10664)
!10664 = !{!10665, !10680}
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10663, file: !114, line: 61, baseType: !10666, size: 64)
!10666 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !10667)
!10667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !10668)
!10668 = !{!10669, !10675}
!10669 = !DIDerivedType(tag: DW_TAG_member, scope: !10667, file: !124, line: 38, baseType: !10670, size: 32)
!10670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10667, file: !124, line: 38, size: 32, elements: !10671)
!10671 = !{!10672, !10674}
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10670, file: !124, line: 39, baseType: !10673, size: 32)
!10673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10667, size: 32)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10670, file: !124, line: 40, baseType: !10673, size: 32)
!10675 = !DIDerivedType(tag: DW_TAG_member, scope: !10667, file: !124, line: 42, baseType: !10676, size: 32, offset: 32)
!10676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10667, file: !124, line: 42, size: 32, elements: !10677)
!10677 = !{!10678, !10679}
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10676, file: !124, line: 43, baseType: !10673, size: 32)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10676, file: !124, line: 44, baseType: !10673, size: 32)
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10663, file: !114, line: 62, baseType: !10681, size: 64)
!10681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !10682)
!10682 = !{!10683}
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10681, file: !140, line: 50, baseType: !10684, size: 64)
!10684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10685, size: 64, elements: !145)
!10685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10681, size: 32)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10660, file: !114, line: 68, baseType: !10687, size: 32, offset: 64)
!10687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10688, size: 32)
!10688 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !10689)
!10689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !10690)
!10690 = !{!10691}
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10689, file: !150, line: 232, baseType: !10692, size: 64)
!10692 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !10667)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10660, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10660, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!10695 = !DIDerivedType(tag: DW_TAG_member, scope: !10660, file: !114, line: 90, baseType: !10696, size: 16, offset: 112)
!10696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10660, file: !114, line: 90, size: 16, elements: !10697)
!10697 = !{!10698, !10703}
!10698 = !DIDerivedType(tag: DW_TAG_member, scope: !10696, file: !114, line: 91, baseType: !10699, size: 16)
!10699 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10696, file: !114, line: 91, size: 16, elements: !10700)
!10700 = !{!10701, !10702}
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10699, file: !114, line: 96, baseType: !166, size: 8)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10699, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10696, file: !114, line: 100, baseType: !170, size: 16)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10660, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10660, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10660, file: !114, line: 131, baseType: !10707, size: 192, offset: 192)
!10707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !10708)
!10708 = !{!10709, !10710, !10716}
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10707, file: !150, line: 245, baseType: !10666, size: 64)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10707, file: !150, line: 246, baseType: !10711, size: 32, offset: 64)
!10711 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !10712)
!10712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10713, size: 32)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{null, !10715}
!10715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10707, size: 32)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10707, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10657, file: !114, line: 250, baseType: !10718, size: 288, offset: 384)
!10718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !10719)
!10719 = !{!10720, !10721, !10722, !10723, !10724, !10725, !10726, !10727, !10728}
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10718, file: !190, line: 26, baseType: !173, size: 32)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10718, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10718, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10718, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10718, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10718, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10718, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10718, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10718, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10657, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10657, file: !114, line: 256, baseType: !10688, size: 64, offset: 704)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10657, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10657, file: !114, line: 325, baseType: !10733, size: 32, offset: 800)
!10733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10734, size: 32)
!10734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !10735)
!10735 = !{!10736, !10742, !10743}
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10734, file: !109, line: 5074, baseType: !10737, size: 96)
!10737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !10738)
!10738 = !{!10739, !10740, !10741}
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10737, file: !210, line: 57, baseType: !213, size: 32)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10737, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10737, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10734, file: !109, line: 5075, baseType: !10688, size: 64, offset: 96)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10734, file: !109, line: 5076, baseType: !10744, offset: 160)
!10744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10657, file: !114, line: 343, baseType: !10746, size: 64, offset: 832)
!10746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !10747)
!10747 = !{!10748, !10749}
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10746, file: !190, line: 63, baseType: !173, size: 32)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10746, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!10750 = !DILocalVariable(name: "reason", arg: 1, scope: !10609, file: !3533, line: 209, type: !32)
!10751 = !DILocation(line: 209, column: 28, scope: !10609)
!10752 = !DILocalVariable(name: "esf", arg: 2, scope: !10609, file: !3533, line: 209, type: !10612)
!10753 = !DILocation(line: 209, column: 56, scope: !10609)
!10754 = !DILocalVariable(name: "thread", arg: 3, scope: !10609, file: !3533, line: 210, type: !10656)
!10755 = !DILocation(line: 210, column: 25, scope: !10609)
!10756 = !DILocation(line: 212, column: 1, scope: !10609)
!10757 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3533, file: !3533, line: 214, type: !10758, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10758 = !DISubroutineType(types: !10759)
!10759 = !{null, !22, !22}
!10760 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10757, file: !3533, line: 214, type: !22)
!10761 = !DILocation(line: 214, column: 37, scope: !10757)
!10762 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10757, file: !3533, line: 214, type: !22)
!10763 = !DILocation(line: 214, column: 59, scope: !10757)
!10764 = !DILocation(line: 216, column: 1, scope: !10757)
!10765 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3533, file: !3533, line: 218, type: !10766, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !1686, !217}
!10768 = !DILocalVariable(name: "buf", arg: 1, scope: !10765, file: !3533, line: 218, type: !1686)
!10769 = !DILocation(line: 218, column: 38, scope: !10765)
!10770 = !DILocalVariable(name: "buflen", arg: 2, scope: !10765, file: !3533, line: 218, type: !217)
!10771 = !DILocation(line: 218, column: 50, scope: !10765)
!10772 = !DILocation(line: 220, column: 1, scope: !10765)
!10773 = distinct !DISubprogram(name: "coredump_query", scope: !3533, file: !3533, line: 222, type: !10774, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!103, !3532, !102}
!10776 = !DILocalVariable(name: "query_id", arg: 1, scope: !10773, file: !3533, line: 222, type: !3532)
!10777 = !DILocation(line: 222, column: 43, scope: !10773)
!10778 = !DILocalVariable(name: "arg", arg: 2, scope: !10773, file: !3533, line: 222, type: !102)
!10779 = !DILocation(line: 222, column: 59, scope: !10773)
!10780 = !DILocation(line: 224, column: 2, scope: !10773)
!10781 = distinct !DISubprogram(name: "coredump_cmd", scope: !3533, file: !3533, line: 227, type: !10782, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!103, !3539, !102}
!10784 = !DILocalVariable(name: "query_id", arg: 1, scope: !10781, file: !3533, line: 227, type: !3539)
!10785 = !DILocation(line: 227, column: 39, scope: !10781)
!10786 = !DILocalVariable(name: "arg", arg: 2, scope: !10781, file: !3533, line: 227, type: !102)
!10787 = !DILocation(line: 227, column: 55, scope: !10781)
!10788 = !DILocation(line: 229, column: 2, scope: !10781)
!10789 = distinct !DISubprogram(name: "arch_system_halt", scope: !10790, file: !10790, line: 23, type: !6324, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10790 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10791 = !DILocalVariable(name: "reason", arg: 1, scope: !10789, file: !10790, line: 23, type: !32)
!10792 = !DILocation(line: 23, column: 57, scope: !10789)
!10793 = !DILocation(line: 25, column: 2, scope: !10789)
!10794 = !DILocalVariable(name: "key", scope: !10795, file: !6304, line: 44, type: !32)
!10795 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10796 = !DILocation(line: 44, column: 15, scope: !10795, inlinedAt: !10797)
!10797 = distinct !DILocation(line: 31, column: 8, scope: !10789)
!10798 = !DILocation(line: 47, column: 2, scope: !10795, inlinedAt: !10797)
!10799 = !{i64 1425353}
!10800 = !DILocation(line: 76, column: 9, scope: !10795, inlinedAt: !10797)
!10801 = !DILocation(line: 32, column: 2, scope: !10789)
!10802 = !DILocation(line: 32, column: 2, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !10790, line: 32, column: 2)
!10804 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 32, column: 2)
!10805 = distinct !{!10805, !10806, !10807}
!10806 = !DILocation(line: 32, column: 2, scope: !10804)
!10807 = !DILocation(line: 34, column: 2, scope: !10804)
!10808 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10790, file: !10790, line: 39, type: !10809, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10809 = !DISubroutineType(types: !10810)
!10810 = !{null, !32, !10612}
!10811 = !DILocalVariable(name: "reason", arg: 1, scope: !10808, file: !10790, line: 39, type: !32)
!10812 = !DILocation(line: 39, column: 52, scope: !10808)
!10813 = !DILocalVariable(name: "esf", arg: 2, scope: !10808, file: !10790, line: 40, type: !10612)
!10814 = !DILocation(line: 40, column: 31, scope: !10808)
!10815 = !DILocation(line: 42, column: 2, scope: !10808)
!10816 = !DILocation(line: 45, column: 2, scope: !10808)
!10817 = !DILocation(line: 45, column: 2, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !10790, line: 45, column: 2)
!10819 = distinct !DILexicalBlock(scope: !10820, file: !10790, line: 45, column: 2)
!10820 = distinct !DILexicalBlock(scope: !10808, file: !10790, line: 45, column: 2)
!10821 = !DILocation(line: 46, column: 19, scope: !10808)
!10822 = !DILocation(line: 46, column: 2, scope: !10808)
!10823 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10790, file: !10790, line: 81, type: !6324, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10824 = !DILocalVariable(name: "reason", arg: 1, scope: !10823, file: !10790, line: 81, type: !32)
!10825 = !DILocation(line: 81, column: 46, scope: !10823)
!10826 = !DILocation(line: 83, column: 19, scope: !10823)
!10827 = !DILocation(line: 83, column: 2, scope: !10823)
!10828 = distinct !DISubprogram(name: "z_fatal_error", scope: !10790, file: !10790, line: 96, type: !10809, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10829 = !DILocalVariable(name: "reason", arg: 1, scope: !10828, file: !10790, line: 96, type: !32)
!10830 = !DILocation(line: 96, column: 33, scope: !10828)
!10831 = !DILocalVariable(name: "esf", arg: 2, scope: !10828, file: !10790, line: 96, type: !10612)
!10832 = !DILocation(line: 96, column: 61, scope: !10828)
!10833 = !DILocalVariable(name: "key", scope: !10828, file: !10790, line: 102, type: !32)
!10834 = !DILocation(line: 102, column: 15, scope: !10828)
!10835 = !DILocation(line: 44, column: 15, scope: !10795, inlinedAt: !10836)
!10836 = distinct !DILocation(line: 102, column: 21, scope: !10828)
!10837 = !DILocation(line: 47, column: 2, scope: !10795, inlinedAt: !10836)
!10838 = !DILocation(line: 76, column: 9, scope: !10795, inlinedAt: !10836)
!10839 = !DILocalVariable(name: "thread", scope: !10828, file: !10790, line: 103, type: !10656)
!10840 = !DILocation(line: 103, column: 19, scope: !10828)
!10841 = !DILocation(line: 104, column: 4, scope: !10828)
!10842 = !DILocation(line: 109, column: 2, scope: !10828)
!10843 = !DILocation(line: 109, column: 2, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !10790, line: 109, column: 2)
!10845 = distinct !DILexicalBlock(scope: !10846, file: !10790, line: 109, column: 2)
!10846 = distinct !DILexicalBlock(scope: !10828, file: !10790, line: 109, column: 2)
!10847 = !DILocation(line: 119, column: 7, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10828, file: !10790, line: 119, column: 6)
!10849 = !DILocation(line: 119, column: 11, scope: !10848)
!10850 = !DILocation(line: 119, column: 20, scope: !10848)
!10851 = !DILocation(line: 119, column: 51, scope: !10848)
!10852 = !DILocalVariable(name: "esf", arg: 1, scope: !10853, file: !7414, line: 71, type: !10612)
!10853 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7414, file: !7414, line: 71, type: !10854, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10854 = !DISubroutineType(types: !10855)
!10855 = !{!1035, !10612}
!10856 = !DILocation(line: 71, column: 75, scope: !10853, inlinedAt: !10857)
!10857 = distinct !DILocation(line: 119, column: 23, scope: !10848)
!10858 = !DILocation(line: 73, column: 10, scope: !10853, inlinedAt: !10857)
!10859 = !DILocation(line: 73, column: 15, scope: !10853, inlinedAt: !10857)
!10860 = !DILocation(line: 73, column: 21, scope: !10853, inlinedAt: !10857)
!10861 = !DILocation(line: 73, column: 26, scope: !10853, inlinedAt: !10857)
!10862 = !DILocation(line: 73, column: 9, scope: !10853, inlinedAt: !10857)
!10863 = !DILocation(line: 119, column: 6, scope: !10828)
!10864 = !DILocation(line: 120, column: 3, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10848, file: !10790, line: 119, column: 57)
!10866 = !DILocation(line: 120, column: 3, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !10790, line: 120, column: 3)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !10790, line: 120, column: 3)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !10790, line: 120, column: 3)
!10870 = !DILocation(line: 121, column: 2, scope: !10865)
!10871 = !DILocation(line: 124, column: 2, scope: !10828)
!10872 = !DILocation(line: 124, column: 2, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !10790, line: 124, column: 2)
!10874 = distinct !DILexicalBlock(scope: !10875, file: !10790, line: 124, column: 2)
!10875 = distinct !DILexicalBlock(scope: !10828, file: !10790, line: 124, column: 2)
!10876 = !DILocation(line: 128, column: 11, scope: !10828)
!10877 = !DILocation(line: 128, column: 19, scope: !10828)
!10878 = !DILocation(line: 128, column: 24, scope: !10828)
!10879 = !DILocation(line: 128, column: 2, scope: !10828)
!10880 = !DILocation(line: 131, column: 28, scope: !10828)
!10881 = !DILocation(line: 131, column: 36, scope: !10828)
!10882 = !DILocation(line: 131, column: 2, scope: !10828)
!10883 = !DILocation(line: 151, column: 8, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10885, file: !10790, line: 151, column: 7)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !10790, line: 146, column: 32)
!10886 = distinct !DILexicalBlock(scope: !10828, file: !10790, line: 146, column: 6)
!10887 = !DILocation(line: 151, column: 12, scope: !10884)
!10888 = !DILocation(line: 151, column: 21, scope: !10884)
!10889 = !DILocation(line: 151, column: 52, scope: !10884)
!10890 = !DILocation(line: 71, column: 75, scope: !10853, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 151, column: 24, scope: !10884)
!10892 = !DILocation(line: 73, column: 10, scope: !10853, inlinedAt: !10891)
!10893 = !DILocation(line: 73, column: 15, scope: !10853, inlinedAt: !10891)
!10894 = !DILocation(line: 73, column: 21, scope: !10853, inlinedAt: !10891)
!10895 = !DILocation(line: 73, column: 26, scope: !10853, inlinedAt: !10891)
!10896 = !DILocation(line: 73, column: 9, scope: !10853, inlinedAt: !10891)
!10897 = !DILocation(line: 151, column: 7, scope: !10885)
!10898 = !DILocation(line: 158, column: 3, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10884, file: !10790, line: 151, column: 58)
!10900 = !DILocation(line: 186, column: 18, scope: !10828)
!10901 = !DILocalVariable(name: "key", arg: 1, scope: !10902, file: !6304, line: 84, type: !32)
!10902 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10903 = !DILocation(line: 84, column: 56, scope: !10902, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 186, column: 2, scope: !10828)
!10905 = !DILocation(line: 87, column: 6, scope: !10906, inlinedAt: !10904)
!10906 = distinct !DILexicalBlock(scope: !10902, file: !6304, line: 87, column: 6)
!10907 = !DILocation(line: 87, column: 10, scope: !10906, inlinedAt: !10904)
!10908 = !DILocation(line: 87, column: 6, scope: !10902, inlinedAt: !10904)
!10909 = !DILocation(line: 88, column: 3, scope: !10910, inlinedAt: !10904)
!10910 = distinct !DILexicalBlock(scope: !10906, file: !6304, line: 87, column: 17)
!10911 = !DILocation(line: 90, column: 2, scope: !10902, inlinedAt: !10904)
!10912 = !{i64 1426217}
!10913 = !DILocation(line: 110, column: 1, scope: !10902, inlinedAt: !10904)
!10914 = !DILocation(line: 189, column: 18, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !10790, line: 188, column: 41)
!10916 = distinct !DILexicalBlock(scope: !10828, file: !10790, line: 188, column: 6)
!10917 = !DILocation(line: 189, column: 3, scope: !10915)
!10918 = !DILocation(line: 191, column: 1, scope: !10828)
!10919 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !10920, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!10922}
!10922 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !10656)
!10923 = !DILocation(line: 535, column: 9, scope: !10919)
!10924 = !DILocation(line: 535, column: 2, scope: !10919)
!10925 = distinct !DISubprogram(name: "k_thread_abort", scope: !3836, file: !3836, line: 188, type: !10926, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{null, !10922}
!10928 = !DILocalVariable(name: "thread", arg: 1, scope: !10925, file: !3836, line: 188, type: !10922)
!10929 = !DILocation(line: 188, column: 43, scope: !10925)
!10930 = !DILocation(line: 197, column: 2, scope: !10925)
!10931 = !DILocation(line: 197, column: 2, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10925, file: !3836, line: 197, column: 2)
!10933 = !{i64 2149612516}
!10934 = !DILocation(line: 198, column: 24, scope: !10925)
!10935 = !DILocation(line: 198, column: 2, scope: !10925)
!10936 = !DILocation(line: 199, column: 1, scope: !10925)
!10937 = distinct !DISubprogram(name: "z_current_get", scope: !3836, file: !3836, line: 173, type: !10920, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3529, retainedNodes: !223)
!10938 = !DILocation(line: 180, column: 2, scope: !10937)
!10939 = !DILocation(line: 180, column: 2, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10937, file: !3836, line: 180, column: 2)
!10941 = !{i64 2149612448}
!10942 = !DILocation(line: 181, column: 9, scope: !10937)
!10943 = !DILocation(line: 181, column: 2, scope: !10937)
!10944 = distinct !DISubprogram(name: "z_early_memset", scope: !2763, file: !2763, line: 108, type: !10945, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!10945 = !DISubroutineType(types: !10946)
!10946 = !{null, !102, !103, !217}
!10947 = !DILocalVariable(name: "dst", arg: 1, scope: !10944, file: !2763, line: 108, type: !102)
!10948 = !DILocation(line: 108, column: 34, scope: !10944)
!10949 = !DILocalVariable(name: "c", arg: 2, scope: !10944, file: !2763, line: 108, type: !103)
!10950 = !DILocation(line: 108, column: 43, scope: !10944)
!10951 = !DILocalVariable(name: "n", arg: 3, scope: !10944, file: !2763, line: 108, type: !217)
!10952 = !DILocation(line: 108, column: 53, scope: !10944)
!10953 = !DILocation(line: 110, column: 16, scope: !10944)
!10954 = !DILocation(line: 110, column: 21, scope: !10944)
!10955 = !DILocation(line: 110, column: 24, scope: !10944)
!10956 = !DILocation(line: 110, column: 9, scope: !10944)
!10957 = !DILocation(line: 111, column: 1, scope: !10944)
!10958 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2763, file: !2763, line: 121, type: !10959, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{null, !102, !13, !217}
!10961 = !DILocalVariable(name: "dst", arg: 1, scope: !10958, file: !2763, line: 121, type: !102)
!10962 = !DILocation(line: 121, column: 34, scope: !10958)
!10963 = !DILocalVariable(name: "src", arg: 2, scope: !10958, file: !2763, line: 121, type: !13)
!10964 = !DILocation(line: 121, column: 51, scope: !10958)
!10965 = !DILocalVariable(name: "n", arg: 3, scope: !10958, file: !2763, line: 121, type: !217)
!10966 = !DILocation(line: 121, column: 63, scope: !10958)
!10967 = !DILocation(line: 123, column: 16, scope: !10958)
!10968 = !DILocation(line: 123, column: 21, scope: !10958)
!10969 = !DILocation(line: 123, column: 26, scope: !10958)
!10970 = !DILocation(line: 123, column: 9, scope: !10958)
!10971 = !DILocation(line: 124, column: 1, scope: !10958)
!10972 = distinct !DISubprogram(name: "z_bss_zero", scope: !2763, file: !2763, line: 132, type: !253, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!10973 = !DILocation(line: 143, column: 2, scope: !10972)
!10974 = !DILocation(line: 168, column: 1, scope: !10972)
!10975 = distinct !DISubprogram(name: "z_init_cpu", scope: !2763, file: !2763, line: 372, type: !10976, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!10976 = !DISubroutineType(types: !10977)
!10977 = !{null, !103}
!10978 = !DILocalVariable(name: "id", arg: 1, scope: !10975, file: !2763, line: 372, type: !103)
!10979 = !DILocation(line: 372, column: 21, scope: !10975)
!10980 = !DILocation(line: 374, column: 19, scope: !10975)
!10981 = !DILocation(line: 374, column: 2, scope: !10975)
!10982 = !DILocation(line: 375, column: 49, scope: !10975)
!10983 = !DILocation(line: 375, column: 34, scope: !10975)
!10984 = !DILocation(line: 375, column: 15, scope: !10975)
!10985 = !DILocation(line: 375, column: 2, scope: !10975)
!10986 = !DILocation(line: 375, column: 19, scope: !10975)
!10987 = !DILocation(line: 375, column: 31, scope: !10975)
!10988 = !DILocation(line: 376, column: 24, scope: !10975)
!10989 = !DILocation(line: 376, column: 15, scope: !10975)
!10990 = !DILocation(line: 376, column: 2, scope: !10975)
!10991 = !DILocation(line: 376, column: 19, scope: !10975)
!10992 = !DILocation(line: 376, column: 22, scope: !10975)
!10993 = !DILocation(line: 378, column: 45, scope: !10975)
!10994 = !DILocation(line: 378, column: 26, scope: !10975)
!10995 = !DILocation(line: 378, column: 4, scope: !10975)
!10996 = !DILocation(line: 378, column: 50, scope: !10975)
!10997 = !DILocation(line: 377, column: 15, scope: !10975)
!10998 = !DILocation(line: 377, column: 2, scope: !10975)
!10999 = !DILocation(line: 377, column: 19, scope: !10975)
!11000 = !DILocation(line: 377, column: 29, scope: !10975)
!11001 = !DILocation(line: 384, column: 1, scope: !10975)
!11002 = distinct !DISubprogram(name: "init_idle_thread", scope: !2763, file: !2763, line: 343, type: !10976, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11003 = !DILocalVariable(name: "i", arg: 1, scope: !11002, file: !2763, line: 343, type: !103)
!11004 = !DILocation(line: 343, column: 34, scope: !11002)
!11005 = !DILocalVariable(name: "thread", scope: !11002, file: !2763, line: 345, type: !2841)
!11006 = !DILocation(line: 345, column: 19, scope: !11002)
!11007 = !DILocation(line: 345, column: 44, scope: !11002)
!11008 = !DILocation(line: 345, column: 29, scope: !11002)
!11009 = !DILocalVariable(name: "stack", scope: !11002, file: !2763, line: 346, type: !11010)
!11010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11011, size: 32)
!11011 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !2949)
!11012 = !DILocation(line: 346, column: 20, scope: !11002)
!11013 = !DILocation(line: 346, column: 42, scope: !11002)
!11014 = !DILocation(line: 346, column: 28, scope: !11002)
!11015 = !DILocalVariable(name: "tname", scope: !11002, file: !2763, line: 358, type: !2801)
!11016 = !DILocation(line: 358, column: 8, scope: !11002)
!11017 = !DILocation(line: 361, column: 21, scope: !11002)
!11018 = !DILocation(line: 361, column: 29, scope: !11002)
!11019 = !DILocation(line: 362, column: 50, scope: !11002)
!11020 = !DILocation(line: 362, column: 37, scope: !11002)
!11021 = !DILocation(line: 362, column: 36, scope: !11002)
!11022 = !DILocation(line: 364, column: 6, scope: !11002)
!11023 = !DILocation(line: 361, column: 2, scope: !11002)
!11024 = !DILocation(line: 365, column: 27, scope: !11002)
!11025 = !DILocation(line: 365, column: 2, scope: !11002)
!11026 = !DILocation(line: 370, column: 1, scope: !11002)
!11027 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11028, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11028 = !DISubroutineType(types: !11029)
!11029 = !{!2801, !11010}
!11030 = !DILocalVariable(name: "sym", arg: 1, scope: !11027, file: !234, line: 331, type: !11010)
!11031 = !DILocation(line: 331, column: 61, scope: !11027)
!11032 = !DILocation(line: 333, column: 17, scope: !11027)
!11033 = !DILocation(line: 333, column: 9, scope: !11027)
!11034 = !DILocation(line: 333, column: 21, scope: !11027)
!11035 = !DILocation(line: 333, column: 2, scope: !11027)
!11036 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11037, file: !11037, line: 155, type: !11038, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11037 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11038 = !DISubroutineType(types: !11039)
!11039 = !{null, !2841}
!11040 = !DILocalVariable(name: "thread", arg: 1, scope: !11036, file: !11037, line: 155, type: !2841)
!11041 = !DILocation(line: 155, column: 62, scope: !11036)
!11042 = !DILocation(line: 157, column: 2, scope: !11036)
!11043 = !DILocation(line: 157, column: 10, scope: !11036)
!11044 = !DILocation(line: 157, column: 15, scope: !11036)
!11045 = !DILocation(line: 157, column: 28, scope: !11036)
!11046 = !DILocation(line: 158, column: 1, scope: !11036)
!11047 = distinct !DISubprogram(name: "z_cstart", scope: !2763, file: !2763, line: 501, type: !253, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11048 = !DILocation(line: 504, column: 2, scope: !11047)
!11049 = !DILocation(line: 507, column: 2, scope: !11047)
!11050 = !DILocalVariable(name: "msp", scope: !11051, file: !11052, line: 42, type: !173)
!11051 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11052, file: !11052, line: 40, type: !253, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11052 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11053 = !DILocation(line: 42, column: 11, scope: !11051, inlinedAt: !11054)
!11054 = distinct !DILocation(line: 44, column: 2, scope: !11055, inlinedAt: !11057)
!11055 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11056, file: !11056, line: 42, type: !253, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11056 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11057 = distinct !DILocation(line: 510, column: 2, scope: !11047)
!11058 = !DILocation(line: 43, column: 14, scope: !11051, inlinedAt: !11054)
!11059 = !DILocation(line: 43, column: 3, scope: !11051, inlinedAt: !11054)
!11060 = !DILocation(line: 43, column: 60, scope: !11051, inlinedAt: !11054)
!11061 = !DILocation(line: 46, column: 12, scope: !11051, inlinedAt: !11054)
!11062 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11063, file: !6627, line: 1153, type: !173)
!11063 = distinct !DISubprogram(name: "__set_MSP", scope: !6627, file: !6627, line: 1153, type: !11064, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11064 = !DISubroutineType(types: !11065)
!11065 = !{null, !173}
!11066 = !DILocation(line: 1153, column: 46, scope: !11063, inlinedAt: !11067)
!11067 = distinct !DILocation(line: 46, column: 2, scope: !11051, inlinedAt: !11054)
!11068 = !DILocation(line: 1155, column: 42, scope: !11063, inlinedAt: !11067)
!11069 = !DILocation(line: 1155, column: 3, scope: !11063, inlinedAt: !11067)
!11070 = !{i64 2710124}
!11071 = !DILocation(line: 102, column: 2, scope: !11072, inlinedAt: !11073)
!11072 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7414, file: !7414, line: 97, type: !253, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11073 = distinct !DILocation(line: 45, column: 2, scope: !11055, inlinedAt: !11057)
!11074 = !DILocation(line: 46, column: 2, scope: !11055, inlinedAt: !11057)
!11075 = !DILocation(line: 47, column: 2, scope: !11055, inlinedAt: !11057)
!11076 = !DILocation(line: 512, column: 2, scope: !11047)
!11077 = !DILocation(line: 512, column: 2, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11047, file: !2763, line: 512, column: 2)
!11079 = !DILocalVariable(name: "dummy_thread", scope: !11047, file: !2763, line: 518, type: !2842)
!11080 = !DILocation(line: 518, column: 18, scope: !11047)
!11081 = !DILocation(line: 520, column: 2, scope: !11047)
!11082 = !DILocation(line: 523, column: 2, scope: !11047)
!11083 = !DILocation(line: 526, column: 2, scope: !11047)
!11084 = !DILocation(line: 527, column: 2, scope: !11047)
!11085 = !DILocation(line: 543, column: 24, scope: !11047)
!11086 = !DILocation(line: 543, column: 2, scope: !11047)
!11087 = distinct !DISubprogram(name: "gcov_static_init", scope: !11088, file: !11088, line: 15, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11088 = !DIFile(filename: "zephyr/include/zephyr/debug/gcov.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11089 = !DILocation(line: 15, column: 45, scope: !11087)
!11090 = !DILocalVariable(name: "level", arg: 1, scope: !2968, file: !2763, line: 230, type: !2762)
!11091 = !DILocation(line: 230, column: 50, scope: !2968)
!11092 = !DILocalVariable(name: "entry", scope: !2968, file: !2763, line: 244, type: !2972)
!11093 = !DILocation(line: 244, column: 27, scope: !2968)
!11094 = !DILocation(line: 246, column: 22, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !2968, file: !2763, line: 246, column: 2)
!11096 = !DILocation(line: 246, column: 15, scope: !11095)
!11097 = !DILocation(line: 246, column: 13, scope: !11095)
!11098 = !DILocation(line: 246, column: 7, scope: !11095)
!11099 = !DILocation(line: 246, column: 30, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11095, file: !2763, line: 246, column: 2)
!11101 = !DILocation(line: 246, column: 45, scope: !11100)
!11102 = !DILocation(line: 246, column: 50, scope: !11100)
!11103 = !DILocation(line: 246, column: 38, scope: !11100)
!11104 = !DILocation(line: 246, column: 36, scope: !11100)
!11105 = !DILocation(line: 246, column: 2, scope: !11095)
!11106 = !DILocalVariable(name: "dev", scope: !11107, file: !2763, line: 247, type: !2781)
!11107 = distinct !DILexicalBlock(scope: !11100, file: !2763, line: 246, column: 64)
!11108 = !DILocation(line: 247, column: 24, scope: !11107)
!11109 = !DILocation(line: 247, column: 30, scope: !11107)
!11110 = !DILocation(line: 247, column: 37, scope: !11107)
!11111 = !DILocalVariable(name: "rc", scope: !11107, file: !2763, line: 248, type: !103)
!11112 = !DILocation(line: 248, column: 7, scope: !11107)
!11113 = !DILocation(line: 248, column: 12, scope: !11107)
!11114 = !DILocation(line: 248, column: 19, scope: !11107)
!11115 = !DILocation(line: 248, column: 24, scope: !11107)
!11116 = !DILocation(line: 250, column: 7, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11107, file: !2763, line: 250, column: 7)
!11118 = !DILocation(line: 250, column: 11, scope: !11117)
!11119 = !DILocation(line: 250, column: 7, scope: !11107)
!11120 = !DILocation(line: 254, column: 8, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !2763, line: 254, column: 8)
!11122 = distinct !DILexicalBlock(scope: !11117, file: !2763, line: 250, column: 20)
!11123 = !DILocation(line: 254, column: 11, scope: !11121)
!11124 = !DILocation(line: 254, column: 8, scope: !11122)
!11125 = !DILocation(line: 255, column: 9, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !2763, line: 255, column: 9)
!11127 = distinct !DILexicalBlock(scope: !11121, file: !2763, line: 254, column: 17)
!11128 = !DILocation(line: 255, column: 12, scope: !11126)
!11129 = !DILocation(line: 255, column: 9, scope: !11127)
!11130 = !DILocation(line: 256, column: 12, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !2763, line: 255, column: 17)
!11132 = !DILocation(line: 256, column: 11, scope: !11131)
!11133 = !DILocation(line: 256, column: 9, scope: !11131)
!11134 = !DILocation(line: 257, column: 5, scope: !11131)
!11135 = !DILocation(line: 258, column: 9, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11127, file: !2763, line: 258, column: 9)
!11137 = !DILocation(line: 258, column: 12, scope: !11136)
!11138 = !DILocation(line: 258, column: 9, scope: !11127)
!11139 = !DILocation(line: 259, column: 9, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11136, file: !2763, line: 258, column: 25)
!11141 = !DILocation(line: 260, column: 5, scope: !11140)
!11142 = !DILocation(line: 261, column: 28, scope: !11127)
!11143 = !DILocation(line: 261, column: 5, scope: !11127)
!11144 = !DILocation(line: 261, column: 10, scope: !11127)
!11145 = !DILocation(line: 261, column: 17, scope: !11127)
!11146 = !DILocation(line: 261, column: 26, scope: !11127)
!11147 = !DILocation(line: 262, column: 4, scope: !11127)
!11148 = !DILocation(line: 263, column: 4, scope: !11122)
!11149 = !DILocation(line: 263, column: 9, scope: !11122)
!11150 = !DILocation(line: 263, column: 16, scope: !11122)
!11151 = !DILocation(line: 263, column: 28, scope: !11122)
!11152 = !DILocation(line: 264, column: 3, scope: !11122)
!11153 = !DILocation(line: 265, column: 2, scope: !11107)
!11154 = !DILocation(line: 246, column: 60, scope: !11100)
!11155 = !DILocation(line: 246, column: 2, scope: !11100)
!11156 = distinct !{!11156, !11105, !11157}
!11157 = !DILocation(line: 265, column: 2, scope: !11095)
!11158 = !DILocation(line: 266, column: 1, scope: !2968)
!11159 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2509, file: !2509, line: 850, type: !6663, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11160 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11159, file: !2509, line: 850, type: !3303)
!11161 = !DILocation(line: 850, column: 51, scope: !11159)
!11162 = !DILocalVariable(name: "priority", arg: 2, scope: !11159, file: !2509, line: 850, type: !173)
!11163 = !DILocation(line: 850, column: 66, scope: !11159)
!11164 = !DILocation(line: 852, column: 17, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11159, file: !2509, line: 852, column: 7)
!11166 = !DILocation(line: 852, column: 23, scope: !11165)
!11167 = !DILocation(line: 852, column: 7, scope: !11159)
!11168 = !DILocation(line: 854, column: 53, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !2509, line: 853, column: 3)
!11170 = !DILocation(line: 854, column: 44, scope: !11169)
!11171 = !DILocation(line: 854, column: 83, scope: !11169)
!11172 = !DILocation(line: 854, column: 80, scope: !11169)
!11173 = !DILocation(line: 854, column: 71, scope: !11169)
!11174 = !DILocation(line: 854, column: 69, scope: !11169)
!11175 = !DILocation(line: 855, column: 11, scope: !11169)
!11176 = !DILocation(line: 855, column: 20, scope: !11169)
!11177 = !DILocation(line: 855, column: 48, scope: !11169)
!11178 = !DILocation(line: 855, column: 71, scope: !11169)
!11179 = !DILocation(line: 855, column: 68, scope: !11169)
!11180 = !DILocation(line: 854, column: 102, scope: !11169)
!11181 = !DILocation(line: 854, column: 14, scope: !11169)
!11182 = !DILocation(line: 854, column: 5, scope: !11169)
!11183 = !DILocation(line: 854, column: 30, scope: !11169)
!11184 = !DILocation(line: 856, column: 3, scope: !11169)
!11185 = !DILocation(line: 859, column: 53, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11165, file: !2509, line: 858, column: 3)
!11187 = !DILocation(line: 859, column: 44, scope: !11186)
!11188 = !DILocation(line: 859, column: 83, scope: !11186)
!11189 = !DILocation(line: 859, column: 80, scope: !11186)
!11190 = !DILocation(line: 859, column: 71, scope: !11186)
!11191 = !DILocation(line: 859, column: 69, scope: !11186)
!11192 = !DILocation(line: 860, column: 11, scope: !11186)
!11193 = !DILocation(line: 860, column: 20, scope: !11186)
!11194 = !DILocation(line: 860, column: 48, scope: !11186)
!11195 = !DILocation(line: 860, column: 71, scope: !11186)
!11196 = !DILocation(line: 860, column: 68, scope: !11186)
!11197 = !DILocation(line: 859, column: 102, scope: !11186)
!11198 = !DILocation(line: 859, column: 14, scope: !11186)
!11199 = !DILocation(line: 859, column: 5, scope: !11186)
!11200 = !DILocation(line: 859, column: 30, scope: !11186)
!11201 = !DILocation(line: 862, column: 1, scope: !11159)
!11202 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11203, file: !11203, line: 215, type: !11038, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11203 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11204 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11202, file: !11203, line: 215, type: !2841)
!11205 = !DILocation(line: 215, column: 57, scope: !11202)
!11206 = !DILocation(line: 217, column: 2, scope: !11202)
!11207 = !DILocation(line: 217, column: 16, scope: !11202)
!11208 = !DILocation(line: 217, column: 21, scope: !11202)
!11209 = !DILocation(line: 217, column: 34, scope: !11202)
!11210 = !DILocation(line: 221, column: 2, scope: !11202)
!11211 = !DILocation(line: 221, column: 16, scope: !11202)
!11212 = !DILocation(line: 221, column: 21, scope: !11202)
!11213 = !DILocation(line: 221, column: 34, scope: !11202)
!11214 = !DILocation(line: 232, column: 2, scope: !11202)
!11215 = !DILocation(line: 232, column: 16, scope: !11202)
!11216 = !DILocation(line: 232, column: 30, scope: !11202)
!11217 = !DILocation(line: 239, column: 26, scope: !11202)
!11218 = !DILocation(line: 239, column: 24, scope: !11202)
!11219 = !DILocation(line: 240, column: 1, scope: !11202)
!11220 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2763, file: !2763, line: 399, type: !11221, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{!2801}
!11223 = !DILocalVariable(name: "stack_ptr", scope: !11220, file: !2763, line: 401, type: !2801)
!11224 = !DILocation(line: 401, column: 8, scope: !11220)
!11225 = !DILocation(line: 404, column: 2, scope: !11220)
!11226 = !DILocation(line: 416, column: 24, scope: !11220)
!11227 = !DILocation(line: 418, column: 14, scope: !11220)
!11228 = !DILocation(line: 418, column: 12, scope: !11220)
!11229 = !DILocation(line: 423, column: 2, scope: !11220)
!11230 = !DILocation(line: 424, column: 2, scope: !11220)
!11231 = !DILocation(line: 426, column: 2, scope: !11220)
!11232 = !DILocation(line: 428, column: 9, scope: !11220)
!11233 = !DILocation(line: 428, column: 2, scope: !11220)
!11234 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2763, file: !2763, line: 432, type: !11235, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11235 = !DISubroutineType(types: !11236)
!11236 = !{null, !2801}
!11237 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11234, file: !2763, line: 432, type: !2801)
!11238 = !DILocation(line: 432, column: 55, scope: !11234)
!11239 = !DILocation(line: 435, column: 45, scope: !11234)
!11240 = !DILocation(line: 435, column: 2, scope: !11234)
!11241 = !DILocation(line: 445, column: 2, scope: !11234)
!11242 = distinct !DISubprogram(name: "bg_thread_main", scope: !2763, file: !2763, line: 277, type: !242, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2759, retainedNodes: !223)
!11243 = !DILocalVariable(name: "unused1", arg: 1, scope: !11242, file: !2763, line: 277, type: !102)
!11244 = !DILocation(line: 277, column: 34, scope: !11242)
!11245 = !DILocalVariable(name: "unused2", arg: 2, scope: !11242, file: !2763, line: 277, type: !102)
!11246 = !DILocation(line: 277, column: 49, scope: !11242)
!11247 = !DILocalVariable(name: "unused3", arg: 3, scope: !11242, file: !2763, line: 277, type: !102)
!11248 = !DILocation(line: 277, column: 64, scope: !11242)
!11249 = !DILocation(line: 279, column: 2, scope: !11242)
!11250 = !DILocation(line: 280, column: 2, scope: !11242)
!11251 = !DILocation(line: 281, column: 2, scope: !11242)
!11252 = !DILocation(line: 291, column: 20, scope: !11242)
!11253 = !DILocation(line: 293, column: 2, scope: !11242)
!11254 = !DILocation(line: 297, column: 2, scope: !11242)
!11255 = !DILocation(line: 305, column: 2, scope: !11242)
!11256 = !DILocation(line: 307, column: 2, scope: !11242)
!11257 = !DILocation(line: 330, column: 8, scope: !11242)
!11258 = !DILocation(line: 333, column: 34, scope: !11242)
!11259 = !DILocation(line: 339, column: 1, scope: !11242)
!11260 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2987, file: !2987, line: 45, type: !11261, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11261 = !DISubroutineType(types: !11262)
!11262 = !{null, !11263, !102}
!11263 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !109, line: 103, baseType: !11264)
!11264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11265, size: 32)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{null, !11267, !102}
!11267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11268, size: 32)
!11268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2992)
!11269 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11260, file: !2987, line: 45, type: !11263)
!11270 = !DILocation(line: 45, column: 42, scope: !11260)
!11271 = !DILocalVariable(name: "user_data", arg: 2, scope: !11260, file: !2987, line: 45, type: !102)
!11272 = !DILocation(line: 45, column: 57, scope: !11260)
!11273 = !DILocation(line: 71, column: 1, scope: !11260)
!11274 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2987, file: !2987, line: 73, type: !11261, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11275 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11274, file: !2987, line: 73, type: !11263)
!11276 = !DILocation(line: 73, column: 51, scope: !11274)
!11277 = !DILocalVariable(name: "user_data", arg: 2, scope: !11274, file: !2987, line: 73, type: !102)
!11278 = !DILocation(line: 73, column: 66, scope: !11274)
!11279 = !DILocation(line: 95, column: 1, scope: !11274)
!11280 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2987, file: !2987, line: 97, type: !3759, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11281 = !DILocalVariable(name: "result", scope: !11282, file: !6627, line: 1029, type: !173)
!11282 = distinct !DISubprogram(name: "__get_IPSR", scope: !6627, file: !6627, line: 1027, type: !7409, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11283 = !DILocation(line: 1029, column: 12, scope: !11282, inlinedAt: !11284)
!11284 = distinct !DILocation(line: 48, column: 10, scope: !11285, inlinedAt: !11286)
!11285 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7414, file: !7414, line: 46, type: !3759, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11286 = distinct !DILocation(line: 99, column: 9, scope: !11280)
!11287 = !DILocation(line: 1031, column: 3, scope: !11282, inlinedAt: !11284)
!11288 = !{i64 2359097}
!11289 = !DILocation(line: 1032, column: 10, scope: !11282, inlinedAt: !11284)
!11290 = !DILocation(line: 48, column: 9, scope: !11285, inlinedAt: !11286)
!11291 = !DILocation(line: 99, column: 2, scope: !11280)
!11292 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2987, file: !2987, line: 106, type: !253, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11293 = !DILocation(line: 108, column: 2, scope: !11292)
!11294 = !DILocation(line: 108, column: 12, scope: !11292)
!11295 = !DILocation(line: 108, column: 17, scope: !11292)
!11296 = !DILocation(line: 108, column: 30, scope: !11292)
!11297 = !DILocation(line: 109, column: 1, scope: !11292)
!11298 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2987, file: !2987, line: 116, type: !253, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11299 = !DILocation(line: 118, column: 2, scope: !11298)
!11300 = !DILocation(line: 118, column: 12, scope: !11298)
!11301 = !DILocation(line: 118, column: 17, scope: !11298)
!11302 = !DILocation(line: 118, column: 30, scope: !11298)
!11303 = !DILocation(line: 119, column: 1, scope: !11298)
!11304 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2987, file: !2987, line: 126, type: !3759, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11305 = !DILocation(line: 128, column: 10, scope: !11304)
!11306 = !DILocation(line: 128, column: 20, scope: !11304)
!11307 = !DILocation(line: 128, column: 25, scope: !11304)
!11308 = !DILocation(line: 128, column: 38, scope: !11304)
!11309 = !DILocation(line: 128, column: 53, scope: !11304)
!11310 = !DILocation(line: 128, column: 2, scope: !11304)
!11311 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2987, file: !2987, line: 187, type: !11312, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!103, !2991, !256}
!11314 = !DILocalVariable(name: "thread", arg: 1, scope: !11311, file: !2987, line: 187, type: !2991)
!11315 = !DILocation(line: 187, column: 47, scope: !11311)
!11316 = !DILocalVariable(name: "value", arg: 2, scope: !11311, file: !2987, line: 187, type: !256)
!11317 = !DILocation(line: 187, column: 67, scope: !11311)
!11318 = !DILocation(line: 201, column: 2, scope: !11311)
!11319 = !DILocation(line: 202, column: 2, scope: !11311)
!11320 = !DILocation(line: 204, column: 2, scope: !11311)
!11321 = !DILocation(line: 204, column: 2, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11311, file: !2987, line: 204, column: 2)
!11323 = !DILocation(line: 206, column: 2, scope: !11311)
!11324 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2987, file: !2987, line: 238, type: !11325, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!256, !2991}
!11327 = !DILocalVariable(name: "thread", arg: 1, scope: !11324, file: !2987, line: 238, type: !2991)
!11328 = !DILocation(line: 238, column: 48, scope: !11324)
!11329 = !DILocation(line: 243, column: 2, scope: !11324)
!11330 = !DILocation(line: 244, column: 2, scope: !11324)
!11331 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2987, file: !2987, line: 248, type: !11332, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!103, !2990, !2801, !217}
!11334 = !DILocalVariable(name: "thread", arg: 1, scope: !11331, file: !2987, line: 248, type: !2990)
!11335 = !DILocation(line: 248, column: 39, scope: !11331)
!11336 = !DILocalVariable(name: "buf", arg: 2, scope: !11331, file: !2987, line: 248, type: !2801)
!11337 = !DILocation(line: 248, column: 53, scope: !11331)
!11338 = !DILocalVariable(name: "size", arg: 3, scope: !11331, file: !2987, line: 248, type: !217)
!11339 = !DILocation(line: 248, column: 65, scope: !11331)
!11340 = !DILocation(line: 254, column: 2, scope: !11331)
!11341 = !DILocation(line: 255, column: 2, scope: !11331)
!11342 = !DILocation(line: 256, column: 2, scope: !11331)
!11343 = !DILocation(line: 257, column: 2, scope: !11331)
!11344 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2986, file: !2987, line: 271, type: !2990)
!11345 = !DILocation(line: 271, column: 40, scope: !2986)
!11346 = !DILocalVariable(name: "buf", arg: 2, scope: !2986, file: !2987, line: 271, type: !2801)
!11347 = !DILocation(line: 271, column: 57, scope: !2986)
!11348 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2986, file: !2987, line: 271, type: !217)
!11349 = !DILocation(line: 271, column: 69, scope: !2986)
!11350 = !DILocalVariable(name: "off", scope: !2986, file: !2987, line: 273, type: !217)
!11351 = !DILocation(line: 273, column: 14, scope: !2986)
!11352 = !DILocalVariable(name: "bit", scope: !2986, file: !2987, line: 274, type: !156)
!11353 = !DILocation(line: 274, column: 14, scope: !2986)
!11354 = !DILocalVariable(name: "thread_state", scope: !2986, file: !2987, line: 275, type: !156)
!11355 = !DILocation(line: 275, column: 14, scope: !2986)
!11356 = !DILocation(line: 275, column: 29, scope: !2986)
!11357 = !DILocation(line: 275, column: 40, scope: !2986)
!11358 = !DILocation(line: 275, column: 45, scope: !2986)
!11359 = !DILocation(line: 281, column: 7, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !2986, file: !2987, line: 281, column: 6)
!11361 = !DILocation(line: 281, column: 11, scope: !11360)
!11362 = !DILocation(line: 281, column: 20, scope: !11360)
!11363 = !DILocation(line: 281, column: 24, scope: !11360)
!11364 = !DILocation(line: 281, column: 33, scope: !11360)
!11365 = !DILocation(line: 281, column: 6, scope: !2986)
!11366 = !DILocation(line: 282, column: 3, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11360, file: !2987, line: 281, column: 40)
!11368 = !DILocation(line: 285, column: 10, scope: !2986)
!11369 = !DILocalVariable(name: "index", scope: !11370, file: !2987, line: 293, type: !156)
!11370 = distinct !DILexicalBlock(scope: !2986, file: !2987, line: 293, column: 2)
!11371 = !DILocation(line: 293, column: 15, scope: !11370)
!11372 = !DILocation(line: 293, column: 7, scope: !11370)
!11373 = !DILocation(line: 293, column: 26, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11370, file: !2987, line: 293, column: 2)
!11375 = !DILocation(line: 293, column: 39, scope: !11374)
!11376 = !DILocation(line: 293, column: 2, scope: !11370)
!11377 = !DILocation(line: 294, column: 9, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11374, file: !2987, line: 293, column: 54)
!11379 = !DILocation(line: 294, column: 7, scope: !11378)
!11380 = !DILocation(line: 295, column: 8, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11378, file: !2987, line: 295, column: 7)
!11382 = !DILocation(line: 295, column: 23, scope: !11381)
!11383 = !DILocation(line: 295, column: 21, scope: !11381)
!11384 = !DILocation(line: 295, column: 28, scope: !11381)
!11385 = !DILocation(line: 295, column: 7, scope: !11378)
!11386 = !DILocation(line: 296, column: 4, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11381, file: !2987, line: 295, column: 34)
!11388 = !DILocation(line: 299, column: 21, scope: !11378)
!11389 = !DILocation(line: 299, column: 27, scope: !11378)
!11390 = !DILocation(line: 299, column: 25, scope: !11378)
!11391 = !DILocation(line: 299, column: 32, scope: !11378)
!11392 = !DILocation(line: 299, column: 43, scope: !11378)
!11393 = !DILocation(line: 299, column: 41, scope: !11378)
!11394 = !DILocation(line: 300, column: 18, scope: !11378)
!11395 = !DILocation(line: 300, column: 7, scope: !11378)
!11396 = !DILocation(line: 300, column: 36, scope: !11378)
!11397 = !DILocation(line: 300, column: 26, scope: !11378)
!11398 = !DILocation(line: 299, column: 10, scope: !11378)
!11399 = !DILocation(line: 299, column: 7, scope: !11378)
!11400 = !DILocation(line: 302, column: 20, scope: !11378)
!11401 = !DILocation(line: 302, column: 19, scope: !11378)
!11402 = !DILocation(line: 302, column: 16, scope: !11378)
!11403 = !DILocation(line: 304, column: 7, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11378, file: !2987, line: 304, column: 7)
!11405 = !DILocation(line: 304, column: 20, scope: !11404)
!11406 = !DILocation(line: 304, column: 7, scope: !11378)
!11407 = !DILocation(line: 305, column: 22, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11404, file: !2987, line: 304, column: 26)
!11409 = !DILocation(line: 305, column: 28, scope: !11408)
!11410 = !DILocation(line: 305, column: 26, scope: !11408)
!11411 = !DILocation(line: 305, column: 33, scope: !11408)
!11412 = !DILocation(line: 305, column: 44, scope: !11408)
!11413 = !DILocation(line: 305, column: 42, scope: !11408)
!11414 = !DILocation(line: 305, column: 11, scope: !11408)
!11415 = !DILocation(line: 305, column: 8, scope: !11408)
!11416 = !DILocation(line: 306, column: 3, scope: !11408)
!11417 = !DILocation(line: 307, column: 2, scope: !11378)
!11418 = !DILocation(line: 293, column: 50, scope: !11374)
!11419 = !DILocation(line: 293, column: 2, scope: !11374)
!11420 = distinct !{!11420, !11376, !11421}
!11421 = !DILocation(line: 307, column: 2, scope: !11370)
!11422 = !DILocation(line: 309, column: 2, scope: !2986)
!11423 = !DILocation(line: 309, column: 6, scope: !2986)
!11424 = !DILocation(line: 309, column: 11, scope: !2986)
!11425 = !DILocation(line: 311, column: 23, scope: !2986)
!11426 = !DILocation(line: 311, column: 2, scope: !2986)
!11427 = !DILocation(line: 312, column: 1, scope: !2986)
!11428 = distinct !DISubprogram(name: "copy_bytes", scope: !2987, file: !2987, line: 261, type: !11429, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11429 = !DISubroutineType(types: !11430)
!11430 = !{!217, !2801, !217, !256, !217}
!11431 = !DILocalVariable(name: "dest", arg: 1, scope: !11428, file: !2987, line: 261, type: !2801)
!11432 = !DILocation(line: 261, column: 32, scope: !11428)
!11433 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11428, file: !2987, line: 261, type: !217)
!11434 = !DILocation(line: 261, column: 45, scope: !11428)
!11435 = !DILocalVariable(name: "src", arg: 3, scope: !11428, file: !2987, line: 261, type: !256)
!11436 = !DILocation(line: 261, column: 68, scope: !11428)
!11437 = !DILocalVariable(name: "src_size", arg: 4, scope: !11428, file: !2987, line: 261, type: !217)
!11438 = !DILocation(line: 261, column: 80, scope: !11428)
!11439 = !DILocalVariable(name: "bytes_to_copy", scope: !11428, file: !2987, line: 263, type: !217)
!11440 = !DILocation(line: 263, column: 10, scope: !11428)
!11441 = !DILocation(line: 265, column: 18, scope: !11428)
!11442 = !DILocation(line: 265, column: 16, scope: !11428)
!11443 = !DILocation(line: 266, column: 9, scope: !11428)
!11444 = !DILocation(line: 266, column: 15, scope: !11428)
!11445 = !DILocation(line: 266, column: 20, scope: !11428)
!11446 = !DILocation(line: 266, column: 2, scope: !11428)
!11447 = !DILocation(line: 268, column: 9, scope: !11428)
!11448 = !DILocation(line: 268, column: 2, scope: !11428)
!11449 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2987, file: !2987, line: 383, type: !11450, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{null, !2991}
!11452 = !DILocalVariable(name: "thread", arg: 1, scope: !11449, file: !2987, line: 383, type: !2991)
!11453 = !DILocation(line: 383, column: 45, scope: !11449)
!11454 = !DILocation(line: 385, column: 2, scope: !11449)
!11455 = !DILocation(line: 385, column: 2, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11449, file: !2987, line: 385, column: 2)
!11457 = !DILocation(line: 387, column: 16, scope: !11449)
!11458 = !DILocation(line: 387, column: 2, scope: !11449)
!11459 = !DILocation(line: 388, column: 1, scope: !11449)
!11460 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2987, file: !2987, line: 528, type: !11461, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11461 = !DISubroutineType(types: !11462)
!11462 = !{!2801, !2991, !11463, !217, !240, !102, !102, !102, !103, !173, !256}
!11463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11464, size: 32)
!11464 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !11465)
!11465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !11466)
!11466 = !{!11467}
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11465, file: !234, line: 48, baseType: !237, size: 8)
!11468 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11460, file: !2987, line: 528, type: !2991)
!11469 = !DILocation(line: 528, column: 43, scope: !11460)
!11470 = !DILocalVariable(name: "stack", arg: 2, scope: !11460, file: !2987, line: 529, type: !11463)
!11471 = !DILocation(line: 529, column: 23, scope: !11460)
!11472 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11460, file: !2987, line: 529, type: !217)
!11473 = !DILocation(line: 529, column: 37, scope: !11460)
!11474 = !DILocalVariable(name: "entry", arg: 4, scope: !11460, file: !2987, line: 530, type: !240)
!11475 = !DILocation(line: 530, column: 22, scope: !11460)
!11476 = !DILocalVariable(name: "p1", arg: 5, scope: !11460, file: !2987, line: 531, type: !102)
!11477 = !DILocation(line: 531, column: 11, scope: !11460)
!11478 = !DILocalVariable(name: "p2", arg: 6, scope: !11460, file: !2987, line: 531, type: !102)
!11479 = !DILocation(line: 531, column: 21, scope: !11460)
!11480 = !DILocalVariable(name: "p3", arg: 7, scope: !11460, file: !2987, line: 531, type: !102)
!11481 = !DILocation(line: 531, column: 31, scope: !11460)
!11482 = !DILocalVariable(name: "prio", arg: 8, scope: !11460, file: !2987, line: 532, type: !103)
!11483 = !DILocation(line: 532, column: 9, scope: !11460)
!11484 = !DILocalVariable(name: "options", arg: 9, scope: !11460, file: !2987, line: 532, type: !173)
!11485 = !DILocation(line: 532, column: 24, scope: !11460)
!11486 = !DILocalVariable(name: "name", arg: 10, scope: !11460, file: !2987, line: 532, type: !256)
!11487 = !DILocation(line: 532, column: 45, scope: !11460)
!11488 = !DILocalVariable(name: "stack_ptr", scope: !11460, file: !2987, line: 534, type: !2801)
!11489 = !DILocation(line: 534, column: 8, scope: !11460)
!11490 = !DILocation(line: 536, column: 2, scope: !11460)
!11491 = !DILocation(line: 536, column: 2, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11460, file: !2987, line: 536, column: 2)
!11493 = !DILocation(line: 550, column: 16, scope: !11460)
!11494 = !DILocation(line: 550, column: 28, scope: !11460)
!11495 = !DILocation(line: 550, column: 2, scope: !11460)
!11496 = !DILocation(line: 553, column: 22, scope: !11460)
!11497 = !DILocation(line: 553, column: 34, scope: !11460)
!11498 = !DILocation(line: 553, column: 40, scope: !11460)
!11499 = !DILocation(line: 553, column: 64, scope: !11460)
!11500 = !DILocation(line: 553, column: 2, scope: !11460)
!11501 = !DILocation(line: 554, column: 33, scope: !11460)
!11502 = !DILocation(line: 554, column: 45, scope: !11460)
!11503 = !DILocation(line: 554, column: 52, scope: !11460)
!11504 = !DILocation(line: 554, column: 14, scope: !11460)
!11505 = !DILocation(line: 554, column: 12, scope: !11460)
!11506 = !DILocation(line: 564, column: 18, scope: !11460)
!11507 = !DILocation(line: 564, column: 30, scope: !11460)
!11508 = !DILocation(line: 564, column: 37, scope: !11460)
!11509 = !DILocation(line: 564, column: 48, scope: !11460)
!11510 = !DILocation(line: 564, column: 55, scope: !11460)
!11511 = !DILocation(line: 564, column: 59, scope: !11460)
!11512 = !DILocation(line: 564, column: 63, scope: !11460)
!11513 = !DILocation(line: 564, column: 2, scope: !11460)
!11514 = !DILocation(line: 567, column: 2, scope: !11460)
!11515 = !DILocation(line: 567, column: 14, scope: !11460)
!11516 = !DILocation(line: 567, column: 24, scope: !11460)
!11517 = !DILocation(line: 612, column: 7, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11460, file: !2987, line: 612, column: 6)
!11519 = !DILocation(line: 612, column: 6, scope: !11460)
!11520 = !DILocation(line: 613, column: 3, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11518, file: !2987, line: 612, column: 17)
!11522 = !DILocation(line: 613, column: 15, scope: !11521)
!11523 = !DILocation(line: 613, column: 29, scope: !11521)
!11524 = !DILocation(line: 614, column: 10, scope: !11521)
!11525 = !DILocation(line: 614, column: 3, scope: !11521)
!11526 = !DILocation(line: 627, column: 30, scope: !11460)
!11527 = !DILocation(line: 627, column: 40, scope: !11460)
!11528 = !DILocation(line: 627, column: 2, scope: !11460)
!11529 = !DILocation(line: 627, column: 14, scope: !11460)
!11530 = !DILocation(line: 627, column: 28, scope: !11460)
!11531 = !DILocation(line: 635, column: 2, scope: !11460)
!11532 = !DILocation(line: 635, column: 2, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11460, file: !2987, line: 635, column: 2)
!11534 = !DILocation(line: 637, column: 9, scope: !11460)
!11535 = !DILocation(line: 637, column: 2, scope: !11460)
!11536 = !DILocation(line: 638, column: 1, scope: !11460)
!11537 = distinct !DISubprogram(name: "z_waitq_init", scope: !11538, file: !11538, line: 47, type: !11539, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11538 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11539 = !DISubroutineType(types: !11540)
!11540 = !{null, !3022}
!11541 = !DILocalVariable(name: "w", arg: 1, scope: !11537, file: !11538, line: 47, type: !3022)
!11542 = !DILocation(line: 47, column: 44, scope: !11537)
!11543 = !DILocation(line: 49, column: 18, scope: !11537)
!11544 = !DILocation(line: 49, column: 21, scope: !11537)
!11545 = !DILocation(line: 49, column: 2, scope: !11537)
!11546 = !DILocation(line: 50, column: 1, scope: !11537)
!11547 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2987, file: !2987, line: 791, type: !11548, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11548 = !DISubroutineType(types: !11549)
!11549 = !{null, !11550, !103, !173, !32}
!11550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!11551 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11547, file: !2987, line: 791, type: !11550)
!11552 = !DILocation(line: 791, column: 46, scope: !11547)
!11553 = !DILocalVariable(name: "priority", arg: 2, scope: !11547, file: !2987, line: 791, type: !103)
!11554 = !DILocation(line: 791, column: 63, scope: !11547)
!11555 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11547, file: !2987, line: 792, type: !173)
!11556 = !DILocation(line: 792, column: 19, scope: !11547)
!11557 = !DILocalVariable(name: "options", arg: 4, scope: !11547, file: !2987, line: 792, type: !32)
!11558 = !DILocation(line: 792, column: 47, scope: !11547)
!11559 = !DILocation(line: 795, column: 2, scope: !11547)
!11560 = !DILocation(line: 795, column: 15, scope: !11547)
!11561 = !DILocation(line: 795, column: 25, scope: !11547)
!11562 = !DILocation(line: 796, column: 39, scope: !11547)
!11563 = !DILocation(line: 796, column: 30, scope: !11547)
!11564 = !DILocation(line: 796, column: 2, scope: !11547)
!11565 = !DILocation(line: 796, column: 15, scope: !11547)
!11566 = !DILocation(line: 796, column: 28, scope: !11547)
!11567 = !DILocation(line: 797, column: 39, scope: !11547)
!11568 = !DILocation(line: 797, column: 30, scope: !11547)
!11569 = !DILocation(line: 797, column: 2, scope: !11547)
!11570 = !DILocation(line: 797, column: 15, scope: !11547)
!11571 = !DILocation(line: 797, column: 28, scope: !11547)
!11572 = !DILocation(line: 799, column: 22, scope: !11547)
!11573 = !DILocation(line: 799, column: 2, scope: !11547)
!11574 = !DILocation(line: 799, column: 15, scope: !11547)
!11575 = !DILocation(line: 799, column: 20, scope: !11547)
!11576 = !DILocation(line: 801, column: 2, scope: !11547)
!11577 = !DILocation(line: 801, column: 15, scope: !11547)
!11578 = !DILocation(line: 801, column: 28, scope: !11547)
!11579 = !DILocation(line: 814, column: 24, scope: !11547)
!11580 = !DILocation(line: 814, column: 2, scope: !11547)
!11581 = !DILocation(line: 815, column: 1, scope: !11547)
!11582 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2987, file: !2987, line: 449, type: !11583, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11583 = !DISubroutineType(types: !11584)
!11584 = !{!2801, !2991, !11463, !217}
!11585 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11582, file: !2987, line: 449, type: !2991)
!11586 = !DILocation(line: 449, column: 50, scope: !11582)
!11587 = !DILocalVariable(name: "stack", arg: 2, scope: !11582, file: !2987, line: 450, type: !11463)
!11588 = !DILocation(line: 450, column: 23, scope: !11582)
!11589 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11582, file: !2987, line: 450, type: !217)
!11590 = !DILocation(line: 450, column: 37, scope: !11582)
!11591 = !DILocalVariable(name: "stack_obj_size", scope: !11582, file: !2987, line: 452, type: !217)
!11592 = !DILocation(line: 452, column: 9, scope: !11582)
!11593 = !DILocalVariable(name: "stack_buf_size", scope: !11582, file: !2987, line: 452, type: !217)
!11594 = !DILocation(line: 452, column: 25, scope: !11582)
!11595 = !DILocalVariable(name: "stack_ptr", scope: !11582, file: !2987, line: 453, type: !2801)
!11596 = !DILocation(line: 453, column: 8, scope: !11582)
!11597 = !DILocalVariable(name: "stack_buf_start", scope: !11582, file: !2987, line: 453, type: !2801)
!11598 = !DILocation(line: 453, column: 20, scope: !11582)
!11599 = !DILocalVariable(name: "delta", scope: !11582, file: !2987, line: 454, type: !217)
!11600 = !DILocation(line: 454, column: 9, scope: !11582)
!11601 = !DILocation(line: 465, column: 20, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11582, file: !2987, line: 463, column: 2)
!11603 = !DILocation(line: 465, column: 18, scope: !11602)
!11604 = !DILocation(line: 466, column: 43, scope: !11602)
!11605 = !DILocation(line: 466, column: 21, scope: !11602)
!11606 = !DILocation(line: 466, column: 19, scope: !11602)
!11607 = !DILocation(line: 467, column: 20, scope: !11602)
!11608 = !DILocation(line: 467, column: 35, scope: !11602)
!11609 = !DILocation(line: 467, column: 18, scope: !11602)
!11610 = !DILocation(line: 473, column: 22, scope: !11582)
!11611 = !DILocation(line: 473, column: 14, scope: !11582)
!11612 = !DILocation(line: 473, column: 30, scope: !11582)
!11613 = !DILocation(line: 473, column: 28, scope: !11582)
!11614 = !DILocation(line: 473, column: 12, scope: !11582)
!11615 = !DILocation(line: 475, column: 2, scope: !11582)
!11616 = !DILocation(line: 475, column: 2, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !2987, line: 475, column: 2)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !2987, line: 475, column: 2)
!11619 = distinct !DILexicalBlock(scope: !11582, file: !2987, line: 475, column: 2)
!11620 = !DILocation(line: 505, column: 10, scope: !11582)
!11621 = !DILocation(line: 505, column: 8, scope: !11582)
!11622 = !DILocation(line: 518, column: 15, scope: !11582)
!11623 = !DILocation(line: 518, column: 12, scope: !11582)
!11624 = !DILocation(line: 520, column: 9, scope: !11582)
!11625 = !DILocation(line: 520, column: 2, scope: !11582)
!11626 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11627, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11627 = !DISubroutineType(types: !11628)
!11628 = !{!2801, !11463}
!11629 = !DILocalVariable(name: "sym", arg: 1, scope: !11626, file: !234, line: 331, type: !11463)
!11630 = !DILocation(line: 331, column: 61, scope: !11626)
!11631 = !DILocation(line: 333, column: 17, scope: !11626)
!11632 = !DILocation(line: 333, column: 9, scope: !11626)
!11633 = !DILocation(line: 333, column: 21, scope: !11626)
!11634 = !DILocation(line: 333, column: 2, scope: !11626)
!11635 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11636, file: !11636, line: 40, type: !11637, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11636 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11637 = !DISubroutineType(types: !11638)
!11638 = !{null, !11550}
!11639 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11635, file: !11636, line: 40, type: !11550)
!11640 = !DILocation(line: 40, column: 63, scope: !11635)
!11641 = !DILocation(line: 42, column: 18, scope: !11635)
!11642 = !DILocation(line: 42, column: 31, scope: !11635)
!11643 = !DILocation(line: 42, column: 2, scope: !11635)
!11644 = !DILocation(line: 43, column: 1, scope: !11635)
!11645 = distinct !DISubprogram(name: "z_init_timeout", scope: !11636, file: !11636, line: 25, type: !3048, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11646 = !DILocalVariable(name: "to", arg: 1, scope: !11645, file: !11636, line: 25, type: !3050)
!11647 = !DILocation(line: 25, column: 52, scope: !11645)
!11648 = !DILocation(line: 27, column: 18, scope: !11645)
!11649 = !DILocation(line: 27, column: 22, scope: !11645)
!11650 = !DILocation(line: 27, column: 2, scope: !11645)
!11651 = !DILocation(line: 28, column: 1, scope: !11645)
!11652 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !11653, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{null, !3088}
!11655 = !DILocalVariable(name: "node", arg: 1, scope: !11652, file: !124, line: 211, type: !3088)
!11656 = !DILocation(line: 211, column: 48, scope: !11652)
!11657 = !DILocation(line: 213, column: 2, scope: !11652)
!11658 = !DILocation(line: 213, column: 8, scope: !11652)
!11659 = !DILocation(line: 213, column: 13, scope: !11652)
!11660 = !DILocation(line: 214, column: 2, scope: !11652)
!11661 = !DILocation(line: 214, column: 8, scope: !11652)
!11662 = !DILocation(line: 214, column: 13, scope: !11652)
!11663 = !DILocation(line: 215, column: 1, scope: !11652)
!11664 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !11665, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{null, !11667}
!11667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 32)
!11668 = !DILocalVariable(name: "list", arg: 1, scope: !11664, file: !124, line: 197, type: !11667)
!11669 = !DILocation(line: 197, column: 48, scope: !11664)
!11670 = !DILocation(line: 199, column: 30, scope: !11664)
!11671 = !DILocation(line: 199, column: 2, scope: !11664)
!11672 = !DILocation(line: 199, column: 8, scope: !11664)
!11673 = !DILocation(line: 199, column: 13, scope: !11664)
!11674 = !DILocation(line: 200, column: 30, scope: !11664)
!11675 = !DILocation(line: 200, column: 2, scope: !11664)
!11676 = !DILocation(line: 200, column: 8, scope: !11664)
!11677 = !DILocation(line: 200, column: 13, scope: !11664)
!11678 = !DILocation(line: 201, column: 1, scope: !11664)
!11679 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2987, file: !2987, line: 641, type: !11680, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{!2990, !2991, !11463, !217, !240, !102, !102, !102, !103, !173, !11682}
!11682 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2506, line: 67, baseType: !11683)
!11683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2506, line: 65, size: 64, elements: !11684)
!11684 = !{!11685}
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11683, file: !2506, line: 66, baseType: !2505, size: 64)
!11686 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11679, file: !2987, line: 641, type: !2991)
!11687 = !DILocation(line: 641, column: 49, scope: !11679)
!11688 = !DILocalVariable(name: "stack", arg: 2, scope: !11679, file: !2987, line: 642, type: !11463)
!11689 = !DILocation(line: 642, column: 28, scope: !11679)
!11690 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11679, file: !2987, line: 643, type: !217)
!11691 = !DILocation(line: 643, column: 17, scope: !11679)
!11692 = !DILocalVariable(name: "entry", arg: 4, scope: !11679, file: !2987, line: 643, type: !240)
!11693 = !DILocation(line: 643, column: 46, scope: !11679)
!11694 = !DILocalVariable(name: "p1", arg: 5, scope: !11679, file: !2987, line: 644, type: !102)
!11695 = !DILocation(line: 644, column: 16, scope: !11679)
!11696 = !DILocalVariable(name: "p2", arg: 6, scope: !11679, file: !2987, line: 644, type: !102)
!11697 = !DILocation(line: 644, column: 26, scope: !11679)
!11698 = !DILocalVariable(name: "p3", arg: 7, scope: !11679, file: !2987, line: 644, type: !102)
!11699 = !DILocation(line: 644, column: 36, scope: !11679)
!11700 = !DILocalVariable(name: "prio", arg: 8, scope: !11679, file: !2987, line: 645, type: !103)
!11701 = !DILocation(line: 645, column: 14, scope: !11679)
!11702 = !DILocalVariable(name: "options", arg: 9, scope: !11679, file: !2987, line: 645, type: !173)
!11703 = !DILocation(line: 645, column: 29, scope: !11679)
!11704 = !DILocalVariable(name: "delay", arg: 10, scope: !11679, file: !2987, line: 645, type: !11682)
!11705 = !DILocation(line: 645, column: 50, scope: !11679)
!11706 = !DILocation(line: 649, column: 21, scope: !11679)
!11707 = !DILocation(line: 649, column: 33, scope: !11679)
!11708 = !DILocation(line: 649, column: 40, scope: !11679)
!11709 = !DILocation(line: 649, column: 52, scope: !11679)
!11710 = !DILocation(line: 649, column: 59, scope: !11679)
!11711 = !DILocation(line: 649, column: 63, scope: !11679)
!11712 = !DILocation(line: 649, column: 67, scope: !11679)
!11713 = !DILocation(line: 650, column: 6, scope: !11679)
!11714 = !DILocation(line: 650, column: 12, scope: !11679)
!11715 = !DILocation(line: 649, column: 2, scope: !11679)
!11716 = !DILocation(line: 652, column: 7, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11679, file: !2987, line: 652, column: 6)
!11718 = !DILocation(line: 652, column: 6, scope: !11679)
!11719 = !DILocation(line: 653, column: 23, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11717, file: !2987, line: 652, column: 39)
!11721 = !DILocation(line: 653, column: 3, scope: !11720)
!11722 = !DILocation(line: 654, column: 2, scope: !11720)
!11723 = !DILocation(line: 656, column: 9, scope: !11679)
!11724 = !DILocation(line: 656, column: 2, scope: !11679)
!11725 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2987, file: !2987, line: 401, type: !11726, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11726 = !DISubroutineType(types: !11727)
!11727 = !{null, !2991, !11682}
!11728 = !DILocalVariable(name: "thread", arg: 1, scope: !11725, file: !2987, line: 401, type: !2991)
!11729 = !DILocation(line: 401, column: 50, scope: !11725)
!11730 = !DILocalVariable(name: "delay", arg: 2, scope: !11725, file: !2987, line: 401, type: !11682)
!11731 = !DILocation(line: 401, column: 70, scope: !11725)
!11732 = !DILocation(line: 404, column: 6, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11725, file: !2987, line: 404, column: 6)
!11734 = !DILocation(line: 404, column: 6, scope: !11725)
!11735 = !DILocation(line: 405, column: 18, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11733, file: !2987, line: 404, column: 38)
!11737 = !DILocation(line: 405, column: 3, scope: !11736)
!11738 = !DILocation(line: 406, column: 2, scope: !11736)
!11739 = !DILocation(line: 407, column: 24, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11733, file: !2987, line: 406, column: 9)
!11741 = !DILocation(line: 407, column: 3, scope: !11740)
!11742 = !DILocation(line: 413, column: 1, scope: !11725)
!11743 = distinct !DISubprogram(name: "k_thread_start", scope: !3836, file: !3836, line: 205, type: !11744, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11744 = !DISubroutineType(types: !11745)
!11745 = !{null, !2990}
!11746 = !DILocalVariable(name: "thread", arg: 1, scope: !11743, file: !3836, line: 205, type: !2990)
!11747 = !DILocation(line: 205, column: 43, scope: !11743)
!11748 = !DILocation(line: 214, column: 2, scope: !11743)
!11749 = !DILocation(line: 214, column: 2, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11743, file: !3836, line: 214, column: 2)
!11751 = !{i64 2149637740}
!11752 = !DILocation(line: 215, column: 24, scope: !11743)
!11753 = !DILocation(line: 215, column: 2, scope: !11743)
!11754 = !DILocation(line: 216, column: 1, scope: !11743)
!11755 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11636, file: !11636, line: 47, type: !11726, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11756 = !DILocalVariable(name: "thread", arg: 1, scope: !11755, file: !11636, line: 47, type: !2991)
!11757 = !DILocation(line: 47, column: 58, scope: !11755)
!11758 = !DILocalVariable(name: "ticks", arg: 2, scope: !11755, file: !11636, line: 47, type: !11682)
!11759 = !DILocation(line: 47, column: 78, scope: !11755)
!11760 = !DILocation(line: 49, column: 17, scope: !11755)
!11761 = !DILocation(line: 49, column: 25, scope: !11755)
!11762 = !DILocation(line: 49, column: 30, scope: !11755)
!11763 = !DILocation(line: 49, column: 2, scope: !11755)
!11764 = !DILocation(line: 50, column: 1, scope: !11755)
!11765 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2987, file: !2987, line: 748, type: !253, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11766 = !DILocalVariable(name: "thread_data", scope: !11767, file: !2987, line: 750, type: !11768)
!11767 = distinct !DILexicalBlock(scope: !11765, file: !2987, line: 750, column: 2)
!11768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11769, size: 32)
!11769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !11770)
!11770 = !{!11771, !11772, !11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11781, !11782}
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11769, file: !109, line: 621, baseType: !2991, size: 32)
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11769, file: !109, line: 622, baseType: !11463, size: 32, offset: 32)
!11773 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11769, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!11774 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11769, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!11775 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11769, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!11776 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11769, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11769, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11769, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!11779 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11769, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11769, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11769, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11769, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!11783 = !DILocation(line: 750, column: 2, scope: !11767)
!11784 = !DILocation(line: 750, column: 2, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !2987, line: 750, column: 2)
!11786 = distinct !DILexicalBlock(scope: !11767, file: !2987, line: 750, column: 2)
!11787 = !DILocation(line: 750, column: 2, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11785, file: !2987, line: 750, column: 2)
!11789 = !DILocation(line: 752, column: 4, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11786, file: !2987, line: 750, column: 38)
!11791 = !DILocation(line: 752, column: 17, scope: !11790)
!11792 = !DILocation(line: 753, column: 4, scope: !11790)
!11793 = !DILocation(line: 753, column: 17, scope: !11790)
!11794 = !DILocation(line: 754, column: 4, scope: !11790)
!11795 = !DILocation(line: 754, column: 17, scope: !11790)
!11796 = !DILocation(line: 755, column: 4, scope: !11790)
!11797 = !DILocation(line: 755, column: 17, scope: !11790)
!11798 = !DILocation(line: 756, column: 4, scope: !11790)
!11799 = !DILocation(line: 756, column: 17, scope: !11790)
!11800 = !DILocation(line: 757, column: 4, scope: !11790)
!11801 = !DILocation(line: 757, column: 17, scope: !11790)
!11802 = !DILocation(line: 758, column: 4, scope: !11790)
!11803 = !DILocation(line: 758, column: 17, scope: !11790)
!11804 = !DILocation(line: 759, column: 4, scope: !11790)
!11805 = !DILocation(line: 759, column: 17, scope: !11790)
!11806 = !DILocation(line: 760, column: 4, scope: !11790)
!11807 = !DILocation(line: 760, column: 17, scope: !11790)
!11808 = !DILocation(line: 761, column: 4, scope: !11790)
!11809 = !DILocation(line: 761, column: 17, scope: !11790)
!11810 = !DILocation(line: 751, column: 3, scope: !11790)
!11811 = !DILocation(line: 763, column: 41, scope: !11790)
!11812 = !DILocation(line: 763, column: 3, scope: !11790)
!11813 = !DILocation(line: 763, column: 16, scope: !11790)
!11814 = !DILocation(line: 763, column: 29, scope: !11790)
!11815 = !DILocation(line: 763, column: 39, scope: !11790)
!11816 = !DILocation(line: 764, column: 2, scope: !11790)
!11817 = !DILocation(line: 750, column: 2, scope: !11786)
!11818 = distinct !{!11818, !11783, !11819}
!11819 = !DILocation(line: 764, column: 2, scope: !11767)
!11820 = !DILocation(line: 780, column: 2, scope: !11765)
!11821 = !DILocalVariable(name: "thread_data", scope: !11822, file: !2987, line: 781, type: !11768)
!11822 = distinct !DILexicalBlock(scope: !11765, file: !2987, line: 781, column: 2)
!11823 = !DILocation(line: 781, column: 2, scope: !11822)
!11824 = !DILocation(line: 781, column: 2, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !2987, line: 781, column: 2)
!11826 = distinct !DILexicalBlock(scope: !11822, file: !2987, line: 781, column: 2)
!11827 = !DILocation(line: 781, column: 2, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11825, file: !2987, line: 781, column: 2)
!11829 = !DILocation(line: 782, column: 7, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !2987, line: 782, column: 7)
!11831 = distinct !DILexicalBlock(scope: !11826, file: !2987, line: 781, column: 38)
!11832 = !DILocation(line: 782, column: 20, scope: !11830)
!11833 = !DILocation(line: 782, column: 31, scope: !11830)
!11834 = !DILocation(line: 782, column: 7, scope: !11831)
!11835 = !DILocation(line: 783, column: 24, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11830, file: !2987, line: 782, column: 51)
!11837 = !DILocation(line: 783, column: 37, scope: !11836)
!11838 = !DILocation(line: 784, column: 10, scope: !11836)
!11839 = !DILocation(line: 783, column: 4, scope: !11836)
!11840 = !DILocation(line: 785, column: 3, scope: !11836)
!11841 = !DILocation(line: 786, column: 2, scope: !11831)
!11842 = !DILocation(line: 781, column: 2, scope: !11826)
!11843 = distinct !{!11843, !11823, !11844}
!11844 = !DILocation(line: 786, column: 2, scope: !11822)
!11845 = !DILocation(line: 787, column: 2, scope: !11765)
!11846 = !DILocation(line: 788, column: 1, scope: !11765)
!11847 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !9831, file: !9831, line: 403, type: !11848, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11848 = !DISubroutineType(types: !11849)
!11849 = !{!1936, !1936}
!11850 = !DILocalVariable(name: "t", arg: 1, scope: !11847, file: !9831, line: 403, type: !1936)
!11851 = !DILocation(line: 403, column: 69, scope: !11847)
!11852 = !DILocation(line: 406, column: 17, scope: !11847)
!11853 = !DILocalVariable(name: "t", arg: 1, scope: !11854, file: !9831, line: 102, type: !1936)
!11854 = distinct !DISubprogram(name: "z_tmcvt", scope: !9831, file: !9831, line: 102, type: !11855, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{!1936, !1936, !173, !173, !1035, !1035, !1035, !1035}
!11857 = !DILocation(line: 102, column: 63, scope: !11854, inlinedAt: !11858)
!11858 = distinct !DILocation(line: 406, column: 9, scope: !11847)
!11859 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11854, file: !9831, line: 102, type: !173)
!11860 = !DILocation(line: 102, column: 75, scope: !11854, inlinedAt: !11858)
!11861 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11854, file: !9831, line: 103, type: !173)
!11862 = !DILocation(line: 103, column: 18, scope: !11854, inlinedAt: !11858)
!11863 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11854, file: !9831, line: 103, type: !1035)
!11864 = !DILocation(line: 103, column: 30, scope: !11854, inlinedAt: !11858)
!11865 = !DILocalVariable(name: "result32", arg: 5, scope: !11854, file: !9831, line: 104, type: !1035)
!11866 = !DILocation(line: 104, column: 14, scope: !11854, inlinedAt: !11858)
!11867 = !DILocalVariable(name: "round_up", arg: 6, scope: !11854, file: !9831, line: 104, type: !1035)
!11868 = !DILocation(line: 104, column: 29, scope: !11854, inlinedAt: !11858)
!11869 = !DILocalVariable(name: "round_off", arg: 7, scope: !11854, file: !9831, line: 105, type: !1035)
!11870 = !DILocation(line: 105, column: 14, scope: !11854, inlinedAt: !11858)
!11871 = !DILocalVariable(name: "mul_ratio", scope: !11854, file: !9831, line: 107, type: !1035)
!11872 = !DILocation(line: 107, column: 7, scope: !11854, inlinedAt: !11858)
!11873 = !DILocation(line: 107, column: 19, scope: !11854, inlinedAt: !11858)
!11874 = !DILocation(line: 107, column: 28, scope: !11854, inlinedAt: !11858)
!11875 = !DILocation(line: 108, column: 4, scope: !11854, inlinedAt: !11858)
!11876 = !DILocation(line: 108, column: 12, scope: !11854, inlinedAt: !11858)
!11877 = !DILocation(line: 108, column: 10, scope: !11854, inlinedAt: !11858)
!11878 = !DILocation(line: 108, column: 21, scope: !11854, inlinedAt: !11858)
!11879 = !DILocation(line: 108, column: 26, scope: !11854, inlinedAt: !11858)
!11880 = !DILocation(line: 108, column: 34, scope: !11854, inlinedAt: !11858)
!11881 = !DILocation(line: 108, column: 32, scope: !11854, inlinedAt: !11858)
!11882 = !DILocation(line: 108, column: 43, scope: !11854, inlinedAt: !11858)
!11883 = !DILocation(line: 0, scope: !11854, inlinedAt: !11858)
!11884 = !DILocalVariable(name: "div_ratio", scope: !11854, file: !9831, line: 109, type: !1035)
!11885 = !DILocation(line: 109, column: 7, scope: !11854, inlinedAt: !11858)
!11886 = !DILocation(line: 109, column: 19, scope: !11854, inlinedAt: !11858)
!11887 = !DILocation(line: 109, column: 28, scope: !11854, inlinedAt: !11858)
!11888 = !DILocation(line: 110, column: 4, scope: !11854, inlinedAt: !11858)
!11889 = !DILocation(line: 110, column: 14, scope: !11854, inlinedAt: !11858)
!11890 = !DILocation(line: 110, column: 12, scope: !11854, inlinedAt: !11858)
!11891 = !DILocation(line: 110, column: 21, scope: !11854, inlinedAt: !11858)
!11892 = !DILocation(line: 110, column: 26, scope: !11854, inlinedAt: !11858)
!11893 = !DILocation(line: 110, column: 36, scope: !11854, inlinedAt: !11858)
!11894 = !DILocation(line: 110, column: 34, scope: !11854, inlinedAt: !11858)
!11895 = !DILocation(line: 110, column: 43, scope: !11854, inlinedAt: !11858)
!11896 = !DILocation(line: 112, column: 6, scope: !11897, inlinedAt: !11858)
!11897 = distinct !DILexicalBlock(scope: !11854, file: !9831, line: 112, column: 6)
!11898 = !DILocation(line: 112, column: 17, scope: !11897, inlinedAt: !11858)
!11899 = !DILocation(line: 112, column: 14, scope: !11897, inlinedAt: !11858)
!11900 = !DILocation(line: 112, column: 6, scope: !11854, inlinedAt: !11858)
!11901 = !DILocation(line: 113, column: 10, scope: !11902, inlinedAt: !11858)
!11902 = distinct !DILexicalBlock(scope: !11897, file: !9831, line: 112, column: 24)
!11903 = !DILocation(line: 113, column: 32, scope: !11902, inlinedAt: !11858)
!11904 = !DILocation(line: 113, column: 22, scope: !11902, inlinedAt: !11858)
!11905 = !DILocation(line: 113, column: 21, scope: !11902, inlinedAt: !11858)
!11906 = !DILocation(line: 113, column: 37, scope: !11902, inlinedAt: !11858)
!11907 = !DILocation(line: 113, column: 3, scope: !11902, inlinedAt: !11858)
!11908 = !DILocalVariable(name: "off", scope: !11854, file: !9831, line: 116, type: !1936)
!11909 = !DILocation(line: 116, column: 11, scope: !11854, inlinedAt: !11858)
!11910 = !DILocation(line: 118, column: 7, scope: !11911, inlinedAt: !11858)
!11911 = distinct !DILexicalBlock(scope: !11854, file: !9831, line: 118, column: 6)
!11912 = !DILocation(line: 118, column: 6, scope: !11854, inlinedAt: !11858)
!11913 = !DILocalVariable(name: "rdivisor", scope: !11914, file: !9831, line: 119, type: !173)
!11914 = distinct !DILexicalBlock(scope: !11911, file: !9831, line: 118, column: 18)
!11915 = !DILocation(line: 119, column: 12, scope: !11914, inlinedAt: !11858)
!11916 = !DILocation(line: 119, column: 23, scope: !11914, inlinedAt: !11858)
!11917 = !DILocation(line: 119, column: 36, scope: !11914, inlinedAt: !11858)
!11918 = !DILocation(line: 119, column: 46, scope: !11914, inlinedAt: !11858)
!11919 = !DILocation(line: 119, column: 44, scope: !11914, inlinedAt: !11858)
!11920 = !DILocation(line: 119, column: 55, scope: !11914, inlinedAt: !11858)
!11921 = !DILocation(line: 121, column: 7, scope: !11922, inlinedAt: !11858)
!11922 = distinct !DILexicalBlock(scope: !11914, file: !9831, line: 121, column: 7)
!11923 = !DILocation(line: 121, column: 7, scope: !11914, inlinedAt: !11858)
!11924 = !DILocation(line: 122, column: 10, scope: !11925, inlinedAt: !11858)
!11925 = distinct !DILexicalBlock(scope: !11922, file: !9831, line: 121, column: 17)
!11926 = !DILocation(line: 122, column: 19, scope: !11925, inlinedAt: !11858)
!11927 = !DILocation(line: 122, column: 8, scope: !11925, inlinedAt: !11858)
!11928 = !DILocation(line: 123, column: 3, scope: !11925, inlinedAt: !11858)
!11929 = !DILocation(line: 124, column: 7, scope: !11930, inlinedAt: !11858)
!11930 = distinct !DILexicalBlock(scope: !11914, file: !9831, line: 124, column: 7)
!11931 = !DILocation(line: 124, column: 7, scope: !11914, inlinedAt: !11858)
!11932 = !DILocation(line: 125, column: 10, scope: !11933, inlinedAt: !11858)
!11933 = distinct !DILexicalBlock(scope: !11930, file: !9831, line: 124, column: 18)
!11934 = !DILocation(line: 125, column: 19, scope: !11933, inlinedAt: !11858)
!11935 = !DILocation(line: 125, column: 8, scope: !11933, inlinedAt: !11858)
!11936 = !DILocation(line: 126, column: 3, scope: !11933, inlinedAt: !11858)
!11937 = !DILocation(line: 127, column: 2, scope: !11914, inlinedAt: !11858)
!11938 = !DILocation(line: 134, column: 6, scope: !11939, inlinedAt: !11858)
!11939 = distinct !DILexicalBlock(scope: !11854, file: !9831, line: 134, column: 6)
!11940 = !DILocation(line: 134, column: 6, scope: !11854, inlinedAt: !11858)
!11941 = !DILocation(line: 135, column: 8, scope: !11942, inlinedAt: !11858)
!11942 = distinct !DILexicalBlock(scope: !11939, file: !9831, line: 134, column: 17)
!11943 = !DILocation(line: 135, column: 5, scope: !11942, inlinedAt: !11858)
!11944 = !DILocation(line: 136, column: 7, scope: !11945, inlinedAt: !11858)
!11945 = distinct !DILexicalBlock(scope: !11942, file: !9831, line: 136, column: 7)
!11946 = !DILocation(line: 136, column: 16, scope: !11945, inlinedAt: !11858)
!11947 = !DILocation(line: 136, column: 20, scope: !11945, inlinedAt: !11858)
!11948 = !DILocation(line: 136, column: 22, scope: !11945, inlinedAt: !11858)
!11949 = !DILocation(line: 136, column: 7, scope: !11942, inlinedAt: !11858)
!11950 = !DILocation(line: 137, column: 22, scope: !11951, inlinedAt: !11858)
!11951 = distinct !DILexicalBlock(scope: !11945, file: !9831, line: 136, column: 36)
!11952 = !DILocation(line: 137, column: 12, scope: !11951, inlinedAt: !11858)
!11953 = !DILocation(line: 137, column: 28, scope: !11951, inlinedAt: !11858)
!11954 = !DILocation(line: 137, column: 38, scope: !11951, inlinedAt: !11858)
!11955 = !DILocation(line: 137, column: 36, scope: !11951, inlinedAt: !11858)
!11956 = !DILocation(line: 137, column: 25, scope: !11951, inlinedAt: !11858)
!11957 = !DILocation(line: 137, column: 11, scope: !11951, inlinedAt: !11858)
!11958 = !DILocation(line: 137, column: 4, scope: !11951, inlinedAt: !11858)
!11959 = !DILocation(line: 139, column: 11, scope: !11960, inlinedAt: !11858)
!11960 = distinct !DILexicalBlock(scope: !11945, file: !9831, line: 138, column: 10)
!11961 = !DILocation(line: 139, column: 26, scope: !11960, inlinedAt: !11858)
!11962 = !DILocation(line: 139, column: 16, scope: !11960, inlinedAt: !11858)
!11963 = !DILocation(line: 139, column: 36, scope: !11960, inlinedAt: !11858)
!11964 = !DILocation(line: 139, column: 34, scope: !11960, inlinedAt: !11858)
!11965 = !DILocation(line: 139, column: 13, scope: !11960, inlinedAt: !11858)
!11966 = !DILocation(line: 139, column: 4, scope: !11960, inlinedAt: !11858)
!11967 = !DILocation(line: 141, column: 13, scope: !11968, inlinedAt: !11858)
!11968 = distinct !DILexicalBlock(scope: !11939, file: !9831, line: 141, column: 13)
!11969 = !DILocation(line: 141, column: 13, scope: !11939, inlinedAt: !11858)
!11970 = !DILocation(line: 142, column: 7, scope: !11971, inlinedAt: !11858)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !9831, line: 142, column: 7)
!11972 = distinct !DILexicalBlock(scope: !11968, file: !9831, line: 141, column: 24)
!11973 = !DILocation(line: 142, column: 7, scope: !11972, inlinedAt: !11858)
!11974 = !DILocation(line: 143, column: 22, scope: !11975, inlinedAt: !11858)
!11975 = distinct !DILexicalBlock(scope: !11971, file: !9831, line: 142, column: 17)
!11976 = !DILocation(line: 143, column: 12, scope: !11975, inlinedAt: !11858)
!11977 = !DILocation(line: 143, column: 28, scope: !11975, inlinedAt: !11858)
!11978 = !DILocation(line: 143, column: 36, scope: !11975, inlinedAt: !11858)
!11979 = !DILocation(line: 143, column: 34, scope: !11975, inlinedAt: !11858)
!11980 = !DILocation(line: 143, column: 25, scope: !11975, inlinedAt: !11858)
!11981 = !DILocation(line: 143, column: 11, scope: !11975, inlinedAt: !11858)
!11982 = !DILocation(line: 143, column: 4, scope: !11975, inlinedAt: !11858)
!11983 = !DILocation(line: 145, column: 11, scope: !11984, inlinedAt: !11858)
!11984 = distinct !DILexicalBlock(scope: !11971, file: !9831, line: 144, column: 10)
!11985 = !DILocation(line: 145, column: 26, scope: !11984, inlinedAt: !11858)
!11986 = !DILocation(line: 145, column: 16, scope: !11984, inlinedAt: !11858)
!11987 = !DILocation(line: 145, column: 34, scope: !11984, inlinedAt: !11858)
!11988 = !DILocation(line: 145, column: 32, scope: !11984, inlinedAt: !11858)
!11989 = !DILocation(line: 145, column: 13, scope: !11984, inlinedAt: !11858)
!11990 = !DILocation(line: 145, column: 4, scope: !11984, inlinedAt: !11858)
!11991 = !DILocation(line: 148, column: 7, scope: !11992, inlinedAt: !11858)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !9831, line: 148, column: 7)
!11993 = distinct !DILexicalBlock(scope: !11968, file: !9831, line: 147, column: 9)
!11994 = !DILocation(line: 148, column: 7, scope: !11993, inlinedAt: !11858)
!11995 = !DILocation(line: 149, column: 23, scope: !11996, inlinedAt: !11858)
!11996 = distinct !DILexicalBlock(scope: !11992, file: !9831, line: 148, column: 17)
!11997 = !DILocation(line: 149, column: 27, scope: !11996, inlinedAt: !11858)
!11998 = !DILocation(line: 149, column: 25, scope: !11996, inlinedAt: !11858)
!11999 = !DILocation(line: 149, column: 35, scope: !11996, inlinedAt: !11858)
!12000 = !DILocation(line: 149, column: 33, scope: !11996, inlinedAt: !11858)
!12001 = !DILocation(line: 149, column: 42, scope: !11996, inlinedAt: !11858)
!12002 = !DILocation(line: 149, column: 40, scope: !11996, inlinedAt: !11858)
!12003 = !DILocation(line: 149, column: 11, scope: !11996, inlinedAt: !11858)
!12004 = !DILocation(line: 149, column: 4, scope: !11996, inlinedAt: !11858)
!12005 = !DILocation(line: 150, column: 14, scope: !12006, inlinedAt: !11858)
!12006 = distinct !DILexicalBlock(scope: !11992, file: !9831, line: 150, column: 14)
!12007 = !DILocation(line: 150, column: 23, scope: !12006, inlinedAt: !11858)
!12008 = !DILocation(line: 150, column: 26, scope: !12006, inlinedAt: !11858)
!12009 = !DILocation(line: 150, column: 14, scope: !11992, inlinedAt: !11858)
!12010 = !DILocation(line: 156, column: 13, scope: !12011, inlinedAt: !11858)
!12011 = distinct !DILexicalBlock(scope: !12006, file: !9831, line: 150, column: 65)
!12012 = !DILocation(line: 156, column: 17, scope: !12011, inlinedAt: !11858)
!12013 = !DILocation(line: 156, column: 15, scope: !12011, inlinedAt: !11858)
!12014 = !DILocation(line: 156, column: 25, scope: !12011, inlinedAt: !11858)
!12015 = !DILocation(line: 156, column: 23, scope: !12011, inlinedAt: !11858)
!12016 = !DILocation(line: 156, column: 32, scope: !12011, inlinedAt: !11858)
!12017 = !DILocation(line: 156, column: 30, scope: !12011, inlinedAt: !11858)
!12018 = !DILocation(line: 156, column: 4, scope: !12011, inlinedAt: !11858)
!12019 = !DILocation(line: 161, column: 12, scope: !12020, inlinedAt: !11858)
!12020 = distinct !DILexicalBlock(scope: !12006, file: !9831, line: 157, column: 10)
!12021 = !DILocation(line: 161, column: 16, scope: !12020, inlinedAt: !11858)
!12022 = !DILocation(line: 161, column: 14, scope: !12020, inlinedAt: !11858)
!12023 = !DILocation(line: 161, column: 27, scope: !12020, inlinedAt: !11858)
!12024 = !DILocation(line: 161, column: 25, scope: !12020, inlinedAt: !11858)
!12025 = !DILocation(line: 161, column: 37, scope: !12020, inlinedAt: !11858)
!12026 = !DILocation(line: 161, column: 41, scope: !12020, inlinedAt: !11858)
!12027 = !DILocation(line: 161, column: 39, scope: !12020, inlinedAt: !11858)
!12028 = !DILocation(line: 161, column: 52, scope: !12020, inlinedAt: !11858)
!12029 = !DILocation(line: 161, column: 50, scope: !12020, inlinedAt: !11858)
!12030 = !DILocation(line: 161, column: 60, scope: !12020, inlinedAt: !11858)
!12031 = !DILocation(line: 161, column: 58, scope: !12020, inlinedAt: !11858)
!12032 = !DILocation(line: 161, column: 67, scope: !12020, inlinedAt: !11858)
!12033 = !DILocation(line: 161, column: 65, scope: !12020, inlinedAt: !11858)
!12034 = !DILocation(line: 161, column: 33, scope: !12020, inlinedAt: !11858)
!12035 = !DILocation(line: 161, column: 4, scope: !12020, inlinedAt: !11858)
!12036 = !DILocation(line: 164, column: 1, scope: !11854, inlinedAt: !11858)
!12037 = !DILocation(line: 406, column: 2, scope: !11847)
!12038 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2987, file: !2987, line: 817, type: !4000, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!12039 = !DILocalVariable(name: "entry", arg: 1, scope: !12038, file: !2987, line: 817, type: !240)
!12040 = !DILocation(line: 817, column: 62, scope: !12038)
!12041 = !DILocalVariable(name: "p1", arg: 2, scope: !12038, file: !2987, line: 818, type: !102)
!12042 = !DILocation(line: 818, column: 16, scope: !12038)
!12043 = !DILocalVariable(name: "p2", arg: 3, scope: !12038, file: !2987, line: 818, type: !102)
!12044 = !DILocation(line: 818, column: 26, scope: !12038)
!12045 = !DILocalVariable(name: "p3", arg: 4, scope: !12038, file: !2987, line: 818, type: !102)
!12046 = !DILocation(line: 818, column: 36, scope: !12038)
!12047 = !DILocation(line: 820, column: 2, scope: !12038)
!12048 = !DILocation(line: 820, column: 2, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12038, file: !2987, line: 820, column: 2)
!12050 = !DILocation(line: 822, column: 2, scope: !12038)
!12051 = !DILocation(line: 822, column: 12, scope: !12038)
!12052 = !DILocation(line: 822, column: 17, scope: !12038)
!12053 = !DILocation(line: 822, column: 30, scope: !12038)
!12054 = !DILocation(line: 823, column: 2, scope: !12038)
!12055 = !DILocation(line: 845, column: 17, scope: !12038)
!12056 = !DILocation(line: 845, column: 24, scope: !12038)
!12057 = !DILocation(line: 845, column: 28, scope: !12038)
!12058 = !DILocation(line: 845, column: 32, scope: !12038)
!12059 = !DILocation(line: 845, column: 2, scope: !12038)
!12060 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2987, file: !2987, line: 888, type: !12061, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!12061 = !DISubroutineType(types: !12062)
!12062 = !{!103, !2991}
!12063 = !DILocalVariable(name: "thread", arg: 1, scope: !12060, file: !2987, line: 888, type: !2991)
!12064 = !DILocation(line: 888, column: 45, scope: !12060)
!12065 = !DILocation(line: 893, column: 2, scope: !12060)
!12066 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2987, file: !2987, line: 897, type: !12067, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!12067 = !DISubroutineType(types: !12068)
!12068 = !{!103, !2991, !32}
!12069 = !DILocalVariable(name: "thread", arg: 1, scope: !12066, file: !2987, line: 897, type: !2991)
!12070 = !DILocation(line: 897, column: 44, scope: !12066)
!12071 = !DILocalVariable(name: "options", arg: 2, scope: !12066, file: !2987, line: 897, type: !32)
!12072 = !DILocation(line: 897, column: 65, scope: !12066)
!12073 = !DILocation(line: 902, column: 2, scope: !12066)
!12074 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2987, file: !2987, line: 1072, type: !12075, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!103, !2990, !12077}
!12077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12078, size: 32)
!12078 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !114, line: 234, baseType: !12079)
!12079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !114, line: 192, elements: !223)
!12080 = !DILocalVariable(name: "thread", arg: 1, scope: !12074, file: !2987, line: 1072, type: !2990)
!12081 = !DILocation(line: 1072, column: 40, scope: !12074)
!12082 = !DILocalVariable(name: "stats", arg: 2, scope: !12074, file: !2987, line: 1073, type: !12077)
!12083 = !DILocation(line: 1073, column: 37, scope: !12074)
!12084 = !DILocation(line: 1075, column: 7, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12074, file: !2987, line: 1075, column: 6)
!12086 = !DILocation(line: 1075, column: 14, scope: !12085)
!12087 = !DILocation(line: 1075, column: 23, scope: !12085)
!12088 = !DILocation(line: 1075, column: 27, scope: !12085)
!12089 = !DILocation(line: 1075, column: 33, scope: !12085)
!12090 = !DILocation(line: 1075, column: 6, scope: !12074)
!12091 = !DILocation(line: 1076, column: 3, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12085, file: !2987, line: 1075, column: 43)
!12093 = !DILocation(line: 1082, column: 3, scope: !12074)
!12094 = !DILocation(line: 1082, column: 11, scope: !12074)
!12095 = !DILocation(line: 1085, column: 2, scope: !12074)
!12096 = !DILocation(line: 1086, column: 1, scope: !12074)
!12097 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2987, file: !2987, line: 1088, type: !12098, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3085, retainedNodes: !223)
!12098 = !DISubroutineType(types: !12099)
!12099 = !{!103, !12077}
!12100 = !DILocalVariable(name: "stats", arg: 1, scope: !12097, file: !2987, line: 1088, type: !12077)
!12101 = !DILocation(line: 1088, column: 62, scope: !12097)
!12102 = !DILocation(line: 1094, column: 6, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12097, file: !2987, line: 1094, column: 6)
!12104 = !DILocation(line: 1094, column: 12, scope: !12103)
!12105 = !DILocation(line: 1094, column: 6, scope: !12097)
!12106 = !DILocation(line: 1095, column: 3, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12103, file: !2987, line: 1094, column: 21)
!12108 = !DILocation(line: 1098, column: 3, scope: !12097)
!12109 = !DILocation(line: 1098, column: 11, scope: !12097)
!12110 = !DILocation(line: 1119, column: 2, scope: !12097)
!12111 = !DILocation(line: 1120, column: 1, scope: !12097)
!12112 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12113, file: !12113, line: 20, type: !253, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!12113 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12114 = !DILocation(line: 30, column: 2, scope: !12112)
!12115 = !DILocation(line: 31, column: 1, scope: !12112)
!12116 = distinct !DISubprogram(name: "idle", scope: !12113, file: !12113, line: 33, type: !242, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!12117 = !DILocalVariable(name: "unused1", arg: 1, scope: !12116, file: !12113, line: 33, type: !102)
!12118 = !DILocation(line: 33, column: 17, scope: !12116)
!12119 = !DILocalVariable(name: "unused2", arg: 2, scope: !12116, file: !12113, line: 33, type: !102)
!12120 = !DILocation(line: 33, column: 32, scope: !12116)
!12121 = !DILocalVariable(name: "unused3", arg: 3, scope: !12116, file: !12113, line: 33, type: !102)
!12122 = !DILocation(line: 33, column: 47, scope: !12116)
!12123 = !DILocation(line: 35, column: 2, scope: !12116)
!12124 = !DILocation(line: 36, column: 2, scope: !12116)
!12125 = !DILocation(line: 37, column: 2, scope: !12116)
!12126 = !DILocation(line: 41, column: 2, scope: !12116)
!12127 = !DILocalVariable(name: "key", scope: !12128, file: !6304, line: 44, type: !32)
!12128 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!12129 = !DILocation(line: 44, column: 15, scope: !12128, inlinedAt: !12130)
!12130 = distinct !DILocation(line: 62, column: 10, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12116, file: !12113, line: 41, column: 15)
!12132 = !DILocation(line: 47, column: 2, scope: !12128, inlinedAt: !12130)
!12133 = !{i64 1423695}
!12134 = !DILocation(line: 76, column: 9, scope: !12128, inlinedAt: !12130)
!12135 = !DILocation(line: 86, column: 3, scope: !12131)
!12136 = distinct !{!12136, !12126, !12137}
!12137 = !DILocation(line: 105, column: 2, scope: !12116)
!12138 = distinct !DISubprogram(name: "k_cpu_idle", scope: !109, file: !109, line: 5627, type: !253, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!12139 = !DILocation(line: 5629, column: 2, scope: !12138)
!12140 = !DILocation(line: 5630, column: 1, scope: !12138)
!12141 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3208, file: !3208, line: 93, type: !12142, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12142 = !DISubroutineType(types: !12143)
!12143 = !{!250, !3109, !3109}
!12144 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12141, file: !3208, line: 93, type: !3109)
!12145 = !DILocation(line: 93, column: 43, scope: !12141)
!12146 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12141, file: !3208, line: 94, type: !3109)
!12147 = !DILocation(line: 94, column: 19, scope: !12141)
!12148 = !DILocalVariable(name: "b1", scope: !12141, file: !3208, line: 97, type: !250)
!12149 = !DILocation(line: 97, column: 10, scope: !12141)
!12150 = !DILocation(line: 97, column: 15, scope: !12141)
!12151 = !DILocation(line: 97, column: 25, scope: !12141)
!12152 = !DILocation(line: 97, column: 30, scope: !12141)
!12153 = !DILocalVariable(name: "b2", scope: !12141, file: !3208, line: 98, type: !250)
!12154 = !DILocation(line: 98, column: 10, scope: !12141)
!12155 = !DILocation(line: 98, column: 15, scope: !12141)
!12156 = !DILocation(line: 98, column: 25, scope: !12141)
!12157 = !DILocation(line: 98, column: 30, scope: !12141)
!12158 = !DILocation(line: 100, column: 6, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12141, file: !3208, line: 100, column: 6)
!12160 = !DILocation(line: 100, column: 12, scope: !12159)
!12161 = !DILocation(line: 100, column: 9, scope: !12159)
!12162 = !DILocation(line: 100, column: 6, scope: !12141)
!12163 = !DILocation(line: 101, column: 10, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12159, file: !3208, line: 100, column: 16)
!12165 = !DILocation(line: 101, column: 15, scope: !12164)
!12166 = !DILocation(line: 101, column: 13, scope: !12164)
!12167 = !DILocation(line: 101, column: 3, scope: !12164)
!12168 = !DILocation(line: 124, column: 2, scope: !12141)
!12169 = !DILocation(line: 125, column: 1, scope: !12141)
!12170 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3208, file: !3208, line: 428, type: !12171, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12171 = !DISubroutineType(types: !12172)
!12172 = !{null, !3109}
!12173 = !DILocalVariable(name: "curr", arg: 1, scope: !12170, file: !3208, line: 428, type: !3109)
!12174 = !DILocation(line: 428, column: 42, scope: !12170)
!12175 = !DILocation(line: 434, column: 17, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12170, file: !3208, line: 434, column: 6)
!12177 = !DILocation(line: 434, column: 6, scope: !12176)
!12178 = !DILocation(line: 434, column: 23, scope: !12176)
!12179 = !DILocation(line: 434, column: 6, scope: !12170)
!12180 = !DILocation(line: 435, column: 42, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12176, file: !3208, line: 434, column: 29)
!12182 = !DILocation(line: 435, column: 31, scope: !12181)
!12183 = !DILocation(line: 435, column: 50, scope: !12181)
!12184 = !DILocation(line: 435, column: 48, scope: !12181)
!12185 = !DILocation(line: 435, column: 29, scope: !12181)
!12186 = !DILocation(line: 436, column: 35, scope: !12181)
!12187 = !DILocation(line: 436, column: 24, scope: !12181)
!12188 = !DILocation(line: 436, column: 3, scope: !12181)
!12189 = !DILocation(line: 437, column: 2, scope: !12181)
!12190 = !DILocation(line: 438, column: 1, scope: !12170)
!12191 = distinct !DISubprogram(name: "slice_time", scope: !3208, file: !3208, line: 407, type: !12192, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12192 = !DISubroutineType(types: !12193)
!12193 = !{!103, !3109}
!12194 = !DILocalVariable(name: "curr", arg: 1, scope: !12191, file: !3208, line: 407, type: !3109)
!12195 = !DILocation(line: 407, column: 47, scope: !12191)
!12196 = !DILocalVariable(name: "ret", scope: !12191, file: !3208, line: 409, type: !103)
!12197 = !DILocation(line: 409, column: 6, scope: !12191)
!12198 = !DILocation(line: 409, column: 12, scope: !12191)
!12199 = !DILocation(line: 416, column: 9, scope: !12191)
!12200 = !DILocation(line: 416, column: 2, scope: !12191)
!12201 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3208, file: !3208, line: 440, type: !12202, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{null, !250, !103}
!12204 = !DILocalVariable(name: "slice", arg: 1, scope: !12201, file: !3208, line: 440, type: !250)
!12205 = !DILocation(line: 440, column: 37, scope: !12201)
!12206 = !DILocalVariable(name: "prio", arg: 2, scope: !12201, file: !3208, line: 440, type: !103)
!12207 = !DILocation(line: 440, column: 48, scope: !12201)
!12208 = !DILocalVariable(name: "__i", scope: !12209, file: !3208, line: 442, type: !12210)
!12209 = distinct !DILexicalBlock(scope: !12201, file: !3208, line: 442, column: 2)
!12210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !12211)
!12211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !12212)
!12212 = !{!12213}
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12211, file: !222, line: 33, baseType: !103, size: 32)
!12214 = !DILocation(line: 442, column: 2, scope: !12209)
!12215 = !DILocalVariable(name: "__key", scope: !12209, file: !3208, line: 442, type: !12210)
!12216 = !DILocalVariable(name: "l", arg: 1, scope: !12217, file: !222, line: 136, type: !12220)
!12217 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !12218, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12218 = !DISubroutineType(types: !12219)
!12219 = !{!12210, !12220}
!12220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 32)
!12221 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !12222)
!12222 = distinct !DILocation(line: 442, column: 2, scope: !12209)
!12223 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !12222)
!12224 = !DILocalVariable(name: "k", scope: !12217, file: !222, line: 139, type: !12210)
!12225 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !12222)
!12226 = !DILocalVariable(name: "key", scope: !12227, file: !6304, line: 44, type: !32)
!12227 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12228 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !12222)
!12230 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !12229)
!12231 = !{i64 1467666}
!12232 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !12229)
!12233 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !12222)
!12234 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !12222)
!12235 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !12222)
!12236 = !DILocation(line: 442, column: 2, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12209, file: !3208, line: 442, column: 2)
!12238 = !DILocation(line: 443, column: 29, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12237, file: !3208, line: 442, column: 26)
!12240 = !DILocation(line: 444, column: 38, scope: !12239)
!12241 = !DILocation(line: 444, column: 17, scope: !12239)
!12242 = !DILocation(line: 444, column: 15, scope: !12239)
!12243 = !DILocation(line: 445, column: 45, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12239, file: !3208, line: 445, column: 7)
!12245 = !DILocation(line: 445, column: 51, scope: !12244)
!12246 = !DILocation(line: 445, column: 7, scope: !12239)
!12247 = !DILocation(line: 449, column: 18, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12244, file: !3208, line: 445, column: 56)
!12249 = !DILocation(line: 449, column: 16, scope: !12248)
!12250 = !DILocation(line: 450, column: 3, scope: !12248)
!12251 = !DILocation(line: 451, column: 20, scope: !12239)
!12252 = !DILocation(line: 451, column: 18, scope: !12239)
!12253 = !DILocation(line: 452, column: 22, scope: !12239)
!12254 = !DILocation(line: 452, column: 3, scope: !12239)
!12255 = !DILocation(line: 453, column: 2, scope: !12239)
!12256 = !DILocalVariable(name: "l", arg: 1, scope: !12257, file: !222, line: 189, type: !12220)
!12257 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !12258, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{null, !12220, !12210}
!12260 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !12261)
!12261 = distinct !DILocation(line: 442, column: 2, scope: !12237)
!12262 = !DILocalVariable(name: "key", arg: 2, scope: !12257, file: !222, line: 190, type: !12210)
!12263 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !12261)
!12264 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !12261)
!12265 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !12261)
!12266 = !DILocalVariable(name: "key", arg: 1, scope: !12267, file: !6304, line: 84, type: !32)
!12267 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12268 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !12269)
!12269 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !12261)
!12270 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !12269)
!12271 = distinct !DILexicalBlock(scope: !12267, file: !6304, line: 87, column: 6)
!12272 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !12269)
!12273 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !12269)
!12274 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !12269)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !6304, line: 87, column: 17)
!12276 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !12269)
!12277 = !{i64 1468530}
!12278 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !12269)
!12279 = distinct !{!12279, !12214, !12280}
!12280 = !DILocation(line: 453, column: 2, scope: !12209)
!12281 = !DILocation(line: 454, column: 1, scope: !12201)
!12282 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !9831, file: !9831, line: 389, type: !12283, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12283 = !DISubroutineType(types: !12284)
!12284 = !{!173, !173}
!12285 = !DILocalVariable(name: "t", arg: 1, scope: !12282, file: !9831, line: 389, type: !173)
!12286 = !DILocation(line: 389, column: 69, scope: !12282)
!12287 = !DILocation(line: 392, column: 17, scope: !12282)
!12288 = !DILocalVariable(name: "t", arg: 1, scope: !12289, file: !9831, line: 102, type: !1936)
!12289 = distinct !DISubprogram(name: "z_tmcvt", scope: !9831, file: !9831, line: 102, type: !11855, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12290 = !DILocation(line: 102, column: 63, scope: !12289, inlinedAt: !12291)
!12291 = distinct !DILocation(line: 392, column: 9, scope: !12282)
!12292 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12289, file: !9831, line: 102, type: !173)
!12293 = !DILocation(line: 102, column: 75, scope: !12289, inlinedAt: !12291)
!12294 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12289, file: !9831, line: 103, type: !173)
!12295 = !DILocation(line: 103, column: 18, scope: !12289, inlinedAt: !12291)
!12296 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12289, file: !9831, line: 103, type: !1035)
!12297 = !DILocation(line: 103, column: 30, scope: !12289, inlinedAt: !12291)
!12298 = !DILocalVariable(name: "result32", arg: 5, scope: !12289, file: !9831, line: 104, type: !1035)
!12299 = !DILocation(line: 104, column: 14, scope: !12289, inlinedAt: !12291)
!12300 = !DILocalVariable(name: "round_up", arg: 6, scope: !12289, file: !9831, line: 104, type: !1035)
!12301 = !DILocation(line: 104, column: 29, scope: !12289, inlinedAt: !12291)
!12302 = !DILocalVariable(name: "round_off", arg: 7, scope: !12289, file: !9831, line: 105, type: !1035)
!12303 = !DILocation(line: 105, column: 14, scope: !12289, inlinedAt: !12291)
!12304 = !DILocalVariable(name: "mul_ratio", scope: !12289, file: !9831, line: 107, type: !1035)
!12305 = !DILocation(line: 107, column: 7, scope: !12289, inlinedAt: !12291)
!12306 = !DILocation(line: 107, column: 19, scope: !12289, inlinedAt: !12291)
!12307 = !DILocation(line: 107, column: 28, scope: !12289, inlinedAt: !12291)
!12308 = !DILocation(line: 108, column: 4, scope: !12289, inlinedAt: !12291)
!12309 = !DILocation(line: 108, column: 12, scope: !12289, inlinedAt: !12291)
!12310 = !DILocation(line: 108, column: 10, scope: !12289, inlinedAt: !12291)
!12311 = !DILocation(line: 108, column: 21, scope: !12289, inlinedAt: !12291)
!12312 = !DILocation(line: 108, column: 26, scope: !12289, inlinedAt: !12291)
!12313 = !DILocation(line: 108, column: 34, scope: !12289, inlinedAt: !12291)
!12314 = !DILocation(line: 108, column: 32, scope: !12289, inlinedAt: !12291)
!12315 = !DILocation(line: 108, column: 43, scope: !12289, inlinedAt: !12291)
!12316 = !DILocation(line: 0, scope: !12289, inlinedAt: !12291)
!12317 = !DILocalVariable(name: "div_ratio", scope: !12289, file: !9831, line: 109, type: !1035)
!12318 = !DILocation(line: 109, column: 7, scope: !12289, inlinedAt: !12291)
!12319 = !DILocation(line: 109, column: 19, scope: !12289, inlinedAt: !12291)
!12320 = !DILocation(line: 109, column: 28, scope: !12289, inlinedAt: !12291)
!12321 = !DILocation(line: 110, column: 4, scope: !12289, inlinedAt: !12291)
!12322 = !DILocation(line: 110, column: 14, scope: !12289, inlinedAt: !12291)
!12323 = !DILocation(line: 110, column: 12, scope: !12289, inlinedAt: !12291)
!12324 = !DILocation(line: 110, column: 21, scope: !12289, inlinedAt: !12291)
!12325 = !DILocation(line: 110, column: 26, scope: !12289, inlinedAt: !12291)
!12326 = !DILocation(line: 110, column: 36, scope: !12289, inlinedAt: !12291)
!12327 = !DILocation(line: 110, column: 34, scope: !12289, inlinedAt: !12291)
!12328 = !DILocation(line: 110, column: 43, scope: !12289, inlinedAt: !12291)
!12329 = !DILocation(line: 112, column: 6, scope: !12330, inlinedAt: !12291)
!12330 = distinct !DILexicalBlock(scope: !12289, file: !9831, line: 112, column: 6)
!12331 = !DILocation(line: 112, column: 17, scope: !12330, inlinedAt: !12291)
!12332 = !DILocation(line: 112, column: 14, scope: !12330, inlinedAt: !12291)
!12333 = !DILocation(line: 112, column: 6, scope: !12289, inlinedAt: !12291)
!12334 = !DILocation(line: 113, column: 10, scope: !12335, inlinedAt: !12291)
!12335 = distinct !DILexicalBlock(scope: !12330, file: !9831, line: 112, column: 24)
!12336 = !DILocation(line: 113, column: 32, scope: !12335, inlinedAt: !12291)
!12337 = !DILocation(line: 113, column: 22, scope: !12335, inlinedAt: !12291)
!12338 = !DILocation(line: 113, column: 21, scope: !12335, inlinedAt: !12291)
!12339 = !DILocation(line: 113, column: 37, scope: !12335, inlinedAt: !12291)
!12340 = !DILocation(line: 113, column: 3, scope: !12335, inlinedAt: !12291)
!12341 = !DILocalVariable(name: "off", scope: !12289, file: !9831, line: 116, type: !1936)
!12342 = !DILocation(line: 116, column: 11, scope: !12289, inlinedAt: !12291)
!12343 = !DILocation(line: 118, column: 7, scope: !12344, inlinedAt: !12291)
!12344 = distinct !DILexicalBlock(scope: !12289, file: !9831, line: 118, column: 6)
!12345 = !DILocation(line: 118, column: 6, scope: !12289, inlinedAt: !12291)
!12346 = !DILocalVariable(name: "rdivisor", scope: !12347, file: !9831, line: 119, type: !173)
!12347 = distinct !DILexicalBlock(scope: !12344, file: !9831, line: 118, column: 18)
!12348 = !DILocation(line: 119, column: 12, scope: !12347, inlinedAt: !12291)
!12349 = !DILocation(line: 119, column: 23, scope: !12347, inlinedAt: !12291)
!12350 = !DILocation(line: 119, column: 36, scope: !12347, inlinedAt: !12291)
!12351 = !DILocation(line: 119, column: 46, scope: !12347, inlinedAt: !12291)
!12352 = !DILocation(line: 119, column: 44, scope: !12347, inlinedAt: !12291)
!12353 = !DILocation(line: 119, column: 55, scope: !12347, inlinedAt: !12291)
!12354 = !DILocation(line: 121, column: 7, scope: !12355, inlinedAt: !12291)
!12355 = distinct !DILexicalBlock(scope: !12347, file: !9831, line: 121, column: 7)
!12356 = !DILocation(line: 121, column: 7, scope: !12347, inlinedAt: !12291)
!12357 = !DILocation(line: 122, column: 10, scope: !12358, inlinedAt: !12291)
!12358 = distinct !DILexicalBlock(scope: !12355, file: !9831, line: 121, column: 17)
!12359 = !DILocation(line: 122, column: 19, scope: !12358, inlinedAt: !12291)
!12360 = !DILocation(line: 122, column: 8, scope: !12358, inlinedAt: !12291)
!12361 = !DILocation(line: 123, column: 3, scope: !12358, inlinedAt: !12291)
!12362 = !DILocation(line: 124, column: 7, scope: !12363, inlinedAt: !12291)
!12363 = distinct !DILexicalBlock(scope: !12347, file: !9831, line: 124, column: 7)
!12364 = !DILocation(line: 124, column: 7, scope: !12347, inlinedAt: !12291)
!12365 = !DILocation(line: 125, column: 10, scope: !12366, inlinedAt: !12291)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !9831, line: 124, column: 18)
!12367 = !DILocation(line: 125, column: 19, scope: !12366, inlinedAt: !12291)
!12368 = !DILocation(line: 125, column: 8, scope: !12366, inlinedAt: !12291)
!12369 = !DILocation(line: 126, column: 3, scope: !12366, inlinedAt: !12291)
!12370 = !DILocation(line: 127, column: 2, scope: !12347, inlinedAt: !12291)
!12371 = !DILocation(line: 134, column: 6, scope: !12372, inlinedAt: !12291)
!12372 = distinct !DILexicalBlock(scope: !12289, file: !9831, line: 134, column: 6)
!12373 = !DILocation(line: 134, column: 6, scope: !12289, inlinedAt: !12291)
!12374 = !DILocation(line: 135, column: 8, scope: !12375, inlinedAt: !12291)
!12375 = distinct !DILexicalBlock(scope: !12372, file: !9831, line: 134, column: 17)
!12376 = !DILocation(line: 135, column: 5, scope: !12375, inlinedAt: !12291)
!12377 = !DILocation(line: 136, column: 7, scope: !12378, inlinedAt: !12291)
!12378 = distinct !DILexicalBlock(scope: !12375, file: !9831, line: 136, column: 7)
!12379 = !DILocation(line: 136, column: 16, scope: !12378, inlinedAt: !12291)
!12380 = !DILocation(line: 136, column: 20, scope: !12378, inlinedAt: !12291)
!12381 = !DILocation(line: 136, column: 22, scope: !12378, inlinedAt: !12291)
!12382 = !DILocation(line: 136, column: 7, scope: !12375, inlinedAt: !12291)
!12383 = !DILocation(line: 137, column: 22, scope: !12384, inlinedAt: !12291)
!12384 = distinct !DILexicalBlock(scope: !12378, file: !9831, line: 136, column: 36)
!12385 = !DILocation(line: 137, column: 12, scope: !12384, inlinedAt: !12291)
!12386 = !DILocation(line: 137, column: 28, scope: !12384, inlinedAt: !12291)
!12387 = !DILocation(line: 137, column: 38, scope: !12384, inlinedAt: !12291)
!12388 = !DILocation(line: 137, column: 36, scope: !12384, inlinedAt: !12291)
!12389 = !DILocation(line: 137, column: 25, scope: !12384, inlinedAt: !12291)
!12390 = !DILocation(line: 137, column: 11, scope: !12384, inlinedAt: !12291)
!12391 = !DILocation(line: 137, column: 4, scope: !12384, inlinedAt: !12291)
!12392 = !DILocation(line: 139, column: 11, scope: !12393, inlinedAt: !12291)
!12393 = distinct !DILexicalBlock(scope: !12378, file: !9831, line: 138, column: 10)
!12394 = !DILocation(line: 139, column: 26, scope: !12393, inlinedAt: !12291)
!12395 = !DILocation(line: 139, column: 16, scope: !12393, inlinedAt: !12291)
!12396 = !DILocation(line: 139, column: 36, scope: !12393, inlinedAt: !12291)
!12397 = !DILocation(line: 139, column: 34, scope: !12393, inlinedAt: !12291)
!12398 = !DILocation(line: 139, column: 13, scope: !12393, inlinedAt: !12291)
!12399 = !DILocation(line: 139, column: 4, scope: !12393, inlinedAt: !12291)
!12400 = !DILocation(line: 141, column: 13, scope: !12401, inlinedAt: !12291)
!12401 = distinct !DILexicalBlock(scope: !12372, file: !9831, line: 141, column: 13)
!12402 = !DILocation(line: 141, column: 13, scope: !12372, inlinedAt: !12291)
!12403 = !DILocation(line: 142, column: 7, scope: !12404, inlinedAt: !12291)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !9831, line: 142, column: 7)
!12405 = distinct !DILexicalBlock(scope: !12401, file: !9831, line: 141, column: 24)
!12406 = !DILocation(line: 142, column: 7, scope: !12405, inlinedAt: !12291)
!12407 = !DILocation(line: 143, column: 22, scope: !12408, inlinedAt: !12291)
!12408 = distinct !DILexicalBlock(scope: !12404, file: !9831, line: 142, column: 17)
!12409 = !DILocation(line: 143, column: 12, scope: !12408, inlinedAt: !12291)
!12410 = !DILocation(line: 143, column: 28, scope: !12408, inlinedAt: !12291)
!12411 = !DILocation(line: 143, column: 36, scope: !12408, inlinedAt: !12291)
!12412 = !DILocation(line: 143, column: 34, scope: !12408, inlinedAt: !12291)
!12413 = !DILocation(line: 143, column: 25, scope: !12408, inlinedAt: !12291)
!12414 = !DILocation(line: 143, column: 11, scope: !12408, inlinedAt: !12291)
!12415 = !DILocation(line: 143, column: 4, scope: !12408, inlinedAt: !12291)
!12416 = !DILocation(line: 145, column: 11, scope: !12417, inlinedAt: !12291)
!12417 = distinct !DILexicalBlock(scope: !12404, file: !9831, line: 144, column: 10)
!12418 = !DILocation(line: 145, column: 26, scope: !12417, inlinedAt: !12291)
!12419 = !DILocation(line: 145, column: 16, scope: !12417, inlinedAt: !12291)
!12420 = !DILocation(line: 145, column: 34, scope: !12417, inlinedAt: !12291)
!12421 = !DILocation(line: 145, column: 32, scope: !12417, inlinedAt: !12291)
!12422 = !DILocation(line: 145, column: 13, scope: !12417, inlinedAt: !12291)
!12423 = !DILocation(line: 145, column: 4, scope: !12417, inlinedAt: !12291)
!12424 = !DILocation(line: 148, column: 7, scope: !12425, inlinedAt: !12291)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !9831, line: 148, column: 7)
!12426 = distinct !DILexicalBlock(scope: !12401, file: !9831, line: 147, column: 9)
!12427 = !DILocation(line: 148, column: 7, scope: !12426, inlinedAt: !12291)
!12428 = !DILocation(line: 149, column: 23, scope: !12429, inlinedAt: !12291)
!12429 = distinct !DILexicalBlock(scope: !12425, file: !9831, line: 148, column: 17)
!12430 = !DILocation(line: 149, column: 27, scope: !12429, inlinedAt: !12291)
!12431 = !DILocation(line: 149, column: 25, scope: !12429, inlinedAt: !12291)
!12432 = !DILocation(line: 149, column: 35, scope: !12429, inlinedAt: !12291)
!12433 = !DILocation(line: 149, column: 33, scope: !12429, inlinedAt: !12291)
!12434 = !DILocation(line: 149, column: 42, scope: !12429, inlinedAt: !12291)
!12435 = !DILocation(line: 149, column: 40, scope: !12429, inlinedAt: !12291)
!12436 = !DILocation(line: 149, column: 11, scope: !12429, inlinedAt: !12291)
!12437 = !DILocation(line: 149, column: 4, scope: !12429, inlinedAt: !12291)
!12438 = !DILocation(line: 150, column: 14, scope: !12439, inlinedAt: !12291)
!12439 = distinct !DILexicalBlock(scope: !12425, file: !9831, line: 150, column: 14)
!12440 = !DILocation(line: 150, column: 23, scope: !12439, inlinedAt: !12291)
!12441 = !DILocation(line: 150, column: 26, scope: !12439, inlinedAt: !12291)
!12442 = !DILocation(line: 150, column: 14, scope: !12425, inlinedAt: !12291)
!12443 = !DILocation(line: 156, column: 13, scope: !12444, inlinedAt: !12291)
!12444 = distinct !DILexicalBlock(scope: !12439, file: !9831, line: 150, column: 65)
!12445 = !DILocation(line: 156, column: 17, scope: !12444, inlinedAt: !12291)
!12446 = !DILocation(line: 156, column: 15, scope: !12444, inlinedAt: !12291)
!12447 = !DILocation(line: 156, column: 25, scope: !12444, inlinedAt: !12291)
!12448 = !DILocation(line: 156, column: 23, scope: !12444, inlinedAt: !12291)
!12449 = !DILocation(line: 156, column: 32, scope: !12444, inlinedAt: !12291)
!12450 = !DILocation(line: 156, column: 30, scope: !12444, inlinedAt: !12291)
!12451 = !DILocation(line: 156, column: 4, scope: !12444, inlinedAt: !12291)
!12452 = !DILocation(line: 161, column: 12, scope: !12453, inlinedAt: !12291)
!12453 = distinct !DILexicalBlock(scope: !12439, file: !9831, line: 157, column: 10)
!12454 = !DILocation(line: 161, column: 16, scope: !12453, inlinedAt: !12291)
!12455 = !DILocation(line: 161, column: 14, scope: !12453, inlinedAt: !12291)
!12456 = !DILocation(line: 161, column: 27, scope: !12453, inlinedAt: !12291)
!12457 = !DILocation(line: 161, column: 25, scope: !12453, inlinedAt: !12291)
!12458 = !DILocation(line: 161, column: 37, scope: !12453, inlinedAt: !12291)
!12459 = !DILocation(line: 161, column: 41, scope: !12453, inlinedAt: !12291)
!12460 = !DILocation(line: 161, column: 39, scope: !12453, inlinedAt: !12291)
!12461 = !DILocation(line: 161, column: 52, scope: !12453, inlinedAt: !12291)
!12462 = !DILocation(line: 161, column: 50, scope: !12453, inlinedAt: !12291)
!12463 = !DILocation(line: 161, column: 60, scope: !12453, inlinedAt: !12291)
!12464 = !DILocation(line: 161, column: 58, scope: !12453, inlinedAt: !12291)
!12465 = !DILocation(line: 161, column: 67, scope: !12453, inlinedAt: !12291)
!12466 = !DILocation(line: 161, column: 65, scope: !12453, inlinedAt: !12291)
!12467 = !DILocation(line: 161, column: 33, scope: !12453, inlinedAt: !12291)
!12468 = !DILocation(line: 161, column: 4, scope: !12453, inlinedAt: !12291)
!12469 = !DILocation(line: 164, column: 1, scope: !12289, inlinedAt: !12291)
!12470 = !DILocation(line: 392, column: 9, scope: !12282)
!12471 = !DILocation(line: 392, column: 2, scope: !12282)
!12472 = distinct !DISubprogram(name: "z_time_slice", scope: !3208, file: !3208, line: 502, type: !10976, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12473 = !DILocalVariable(name: "ticks", arg: 1, scope: !12472, file: !3208, line: 502, type: !103)
!12474 = !DILocation(line: 502, column: 23, scope: !12472)
!12475 = !DILocalVariable(name: "key", scope: !12472, file: !3208, line: 511, type: !12210)
!12476 = !DILocation(line: 511, column: 19, scope: !12472)
!12477 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !12478)
!12478 = distinct !DILocation(line: 511, column: 25, scope: !12472)
!12479 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !12478)
!12480 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !12478)
!12481 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !12482)
!12482 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !12478)
!12483 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !12482)
!12484 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !12482)
!12485 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !12478)
!12486 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !12478)
!12487 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !12478)
!12488 = !DILocation(line: 511, column: 25, scope: !12472)
!12489 = !DILocation(line: 514, column: 6, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12472, file: !3208, line: 514, column: 6)
!12491 = !DILocation(line: 514, column: 25, scope: !12490)
!12492 = !DILocation(line: 514, column: 22, scope: !12490)
!12493 = !DILocation(line: 514, column: 6, scope: !12472)
!12494 = !DILocation(line: 515, column: 22, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12490, file: !3208, line: 514, column: 35)
!12496 = !DILocation(line: 515, column: 3, scope: !12495)
!12497 = !DILocation(line: 516, column: 3, scope: !12495)
!12498 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !12499)
!12499 = distinct !DILocation(line: 516, column: 3, scope: !12495)
!12500 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !12499)
!12501 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !12499)
!12502 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !12499)
!12503 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !12504)
!12504 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !12499)
!12505 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !12504)
!12506 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !12504)
!12507 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !12504)
!12508 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !12504)
!12509 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !12504)
!12510 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !12504)
!12511 = !DILocation(line: 517, column: 3, scope: !12495)
!12512 = !DILocation(line: 519, column: 18, scope: !12472)
!12513 = !DILocation(line: 522, column: 17, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12472, file: !3208, line: 522, column: 6)
!12515 = !DILocation(line: 522, column: 6, scope: !12514)
!12516 = !DILocation(line: 522, column: 27, scope: !12514)
!12517 = !DILocation(line: 522, column: 40, scope: !12514)
!12518 = !DILocation(line: 522, column: 30, scope: !12514)
!12519 = !DILocation(line: 522, column: 6, scope: !12472)
!12520 = !DILocation(line: 523, column: 7, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !3208, line: 523, column: 7)
!12522 = distinct !DILexicalBlock(scope: !12514, file: !3208, line: 522, column: 51)
!12523 = !DILocation(line: 523, column: 30, scope: !12521)
!12524 = !DILocation(line: 523, column: 13, scope: !12521)
!12525 = !DILocation(line: 523, column: 7, scope: !12522)
!12526 = !DILocation(line: 530, column: 10, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12521, file: !3208, line: 523, column: 43)
!12528 = !DILocation(line: 531, column: 3, scope: !12527)
!12529 = !DILocation(line: 532, column: 33, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12521, file: !3208, line: 531, column: 10)
!12531 = !DILocation(line: 532, column: 30, scope: !12530)
!12532 = !DILocation(line: 534, column: 2, scope: !12522)
!12533 = !DILocation(line: 535, column: 29, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12514, file: !3208, line: 534, column: 9)
!12535 = !DILocation(line: 537, column: 2, scope: !12472)
!12536 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 537, column: 2, scope: !12472)
!12538 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !12537)
!12539 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !12537)
!12540 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !12537)
!12541 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !12542)
!12542 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !12537)
!12543 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !12542)
!12544 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !12542)
!12545 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !12542)
!12546 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !12542)
!12547 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !12542)
!12548 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !12542)
!12549 = !DILocation(line: 538, column: 1, scope: !12472)
!12550 = distinct !DISubprogram(name: "sliceable", scope: !3208, file: !3208, line: 468, type: !12551, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{!1035, !3109}
!12553 = !DILocalVariable(name: "thread", arg: 1, scope: !12550, file: !3208, line: 468, type: !3109)
!12554 = !DILocation(line: 468, column: 47, scope: !12550)
!12555 = !DILocalVariable(name: "ret", scope: !12550, file: !3208, line: 470, type: !1035)
!12556 = !DILocation(line: 470, column: 7, scope: !12550)
!12557 = !DILocation(line: 470, column: 24, scope: !12550)
!12558 = !DILocation(line: 470, column: 13, scope: !12550)
!12559 = !DILocation(line: 471, column: 3, scope: !12550)
!12560 = !DILocation(line: 471, column: 42, scope: !12550)
!12561 = !DILocation(line: 471, column: 7, scope: !12550)
!12562 = !DILocation(line: 472, column: 3, scope: !12550)
!12563 = !DILocation(line: 472, column: 24, scope: !12550)
!12564 = !DILocation(line: 472, column: 32, scope: !12550)
!12565 = !DILocation(line: 472, column: 37, scope: !12550)
!12566 = !DILocation(line: 472, column: 43, scope: !12550)
!12567 = !DILocation(line: 472, column: 7, scope: !12550)
!12568 = !DILocation(line: 473, column: 3, scope: !12550)
!12569 = !DILocation(line: 473, column: 31, scope: !12550)
!12570 = !DILocation(line: 473, column: 7, scope: !12550)
!12571 = !DILocation(line: 473, column: 6, scope: !12550)
!12572 = !DILocation(line: 0, scope: !12550)
!12573 = !DILocation(line: 479, column: 9, scope: !12550)
!12574 = !DILocation(line: 479, column: 2, scope: !12550)
!12575 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3208, file: !3208, line: 482, type: !12576, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12576 = !DISubroutineType(types: !12577)
!12577 = !{!12210, !12210}
!12578 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12575, file: !3208, line: 482, type: !12210)
!12579 = !DILocation(line: 482, column: 63, scope: !12575)
!12580 = !DILocalVariable(name: "curr", scope: !12575, file: !3208, line: 484, type: !3109)
!12581 = !DILocation(line: 484, column: 19, scope: !12575)
!12582 = !DILocation(line: 484, column: 26, scope: !12575)
!12583 = !DILocation(line: 493, column: 42, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12575, file: !3208, line: 493, column: 6)
!12585 = !DILocation(line: 493, column: 7, scope: !12584)
!12586 = !DILocation(line: 493, column: 6, scope: !12575)
!12587 = !DILocation(line: 494, column: 32, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12584, file: !3208, line: 493, column: 49)
!12589 = !DILocation(line: 494, column: 3, scope: !12588)
!12590 = !DILocation(line: 495, column: 2, scope: !12588)
!12591 = !DILocation(line: 496, column: 21, scope: !12575)
!12592 = !DILocation(line: 496, column: 2, scope: !12575)
!12593 = !DILocation(line: 498, column: 9, scope: !12575)
!12594 = !DILocation(line: 498, column: 2, scope: !12575)
!12595 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11037, file: !11037, line: 106, type: !12551, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12596 = !DILocalVariable(name: "thread", arg: 1, scope: !12595, file: !11037, line: 106, type: !3109)
!12597 = !DILocation(line: 106, column: 72, scope: !12595)
!12598 = !DILocalVariable(name: "state", scope: !12595, file: !11037, line: 108, type: !156)
!12599 = !DILocation(line: 108, column: 10, scope: !12595)
!12600 = !DILocation(line: 108, column: 18, scope: !12595)
!12601 = !DILocation(line: 108, column: 26, scope: !12595)
!12602 = !DILocation(line: 108, column: 31, scope: !12595)
!12603 = !DILocation(line: 110, column: 10, scope: !12595)
!12604 = !DILocation(line: 110, column: 16, scope: !12595)
!12605 = !DILocation(line: 111, column: 41, scope: !12595)
!12606 = !DILocation(line: 110, column: 2, scope: !12595)
!12607 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3208, file: !3208, line: 393, type: !12171, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12608 = !DILocalVariable(name: "thread", arg: 1, scope: !12607, file: !3208, line: 393, type: !3109)
!12609 = !DILocation(line: 393, column: 59, scope: !12607)
!12610 = !DILocation(line: 395, column: 25, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12607, file: !3208, line: 395, column: 6)
!12612 = !DILocation(line: 395, column: 6, scope: !12611)
!12613 = !DILocation(line: 395, column: 6, scope: !12607)
!12614 = !DILocation(line: 396, column: 18, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12611, file: !3208, line: 395, column: 34)
!12616 = !DILocalVariable(name: "thread", arg: 1, scope: !12617, file: !3208, line: 264, type: !3109)
!12617 = distinct !DISubprogram(name: "dequeue_thread", scope: !3208, file: !3208, line: 264, type: !12171, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12618 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !12619)
!12619 = distinct !DILocation(line: 396, column: 3, scope: !12615)
!12620 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !12619)
!12621 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !12619)
!12622 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !12619)
!12623 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !12619)
!12624 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !12619)
!12625 = distinct !DILexicalBlock(scope: !12617, file: !3208, line: 267, column: 6)
!12626 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !12619)
!12627 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !12619)
!12628 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !12619)
!12629 = distinct !DILexicalBlock(scope: !12625, file: !3208, line: 267, column: 35)
!12630 = !DILocalVariable(name: "thread", arg: 1, scope: !12631, file: !3208, line: 232, type: !3109)
!12631 = distinct !DISubprogram(name: "runq_remove", scope: !3208, file: !3208, line: 232, type: !12171, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12632 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !12633)
!12633 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !12619)
!12634 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !12633)
!12635 = !DILocalVariable(name: "thread", arg: 1, scope: !12636, file: !3208, line: 199, type: !3109)
!12636 = distinct !DISubprogram(name: "thread_runq", scope: !3208, file: !3208, line: 199, type: !12637, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{!102, !3109}
!12639 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !12640)
!12640 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !12633)
!12641 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !12633)
!12642 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !12633)
!12643 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !12633)
!12644 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !12619)
!12645 = !DILocation(line: 397, column: 2, scope: !12615)
!12646 = !DILocation(line: 398, column: 15, scope: !12607)
!12647 = !DILocalVariable(name: "thread", arg: 1, scope: !12648, file: !3208, line: 250, type: !3109)
!12648 = distinct !DISubprogram(name: "queue_thread", scope: !3208, file: !3208, line: 250, type: !12171, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12649 = !DILocation(line: 250, column: 57, scope: !12648, inlinedAt: !12650)
!12650 = distinct !DILocation(line: 398, column: 2, scope: !12607)
!12651 = !DILocation(line: 252, column: 2, scope: !12648, inlinedAt: !12650)
!12652 = !DILocation(line: 252, column: 10, scope: !12648, inlinedAt: !12650)
!12653 = !DILocation(line: 252, column: 15, scope: !12648, inlinedAt: !12650)
!12654 = !DILocation(line: 252, column: 28, scope: !12648, inlinedAt: !12650)
!12655 = !DILocation(line: 253, column: 26, scope: !12656, inlinedAt: !12650)
!12656 = distinct !DILexicalBlock(scope: !12648, file: !3208, line: 253, column: 6)
!12657 = !DILocation(line: 253, column: 6, scope: !12656, inlinedAt: !12650)
!12658 = !DILocation(line: 253, column: 6, scope: !12648, inlinedAt: !12650)
!12659 = !DILocation(line: 254, column: 12, scope: !12660, inlinedAt: !12650)
!12660 = distinct !DILexicalBlock(scope: !12656, file: !3208, line: 253, column: 35)
!12661 = !DILocalVariable(name: "thread", arg: 1, scope: !12662, file: !3208, line: 227, type: !3109)
!12662 = distinct !DISubprogram(name: "runq_add", scope: !3208, file: !3208, line: 227, type: !12171, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12663 = !DILocation(line: 227, column: 53, scope: !12662, inlinedAt: !12664)
!12664 = distinct !DILocation(line: 254, column: 3, scope: !12660, inlinedAt: !12650)
!12665 = !DILocation(line: 229, column: 28, scope: !12662, inlinedAt: !12664)
!12666 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !12667)
!12667 = distinct !DILocation(line: 229, column: 16, scope: !12662, inlinedAt: !12664)
!12668 = !DILocation(line: 229, column: 37, scope: !12662, inlinedAt: !12664)
!12669 = !DILocalVariable(name: "pq", arg: 1, scope: !12670, file: !3208, line: 181, type: !12673)
!12670 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3208, file: !3208, line: 181, type: !12671, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12671 = !DISubroutineType(types: !12672)
!12672 = !{null, !12673, !3109}
!12673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!12674 = !DILocation(line: 181, column: 56, scope: !12670, inlinedAt: !12675)
!12675 = distinct !DILocation(line: 229, column: 2, scope: !12662, inlinedAt: !12664)
!12676 = !DILocalVariable(name: "thread", arg: 2, scope: !12670, file: !3208, line: 182, type: !3109)
!12677 = !DILocation(line: 182, column: 25, scope: !12670, inlinedAt: !12675)
!12678 = !DILocalVariable(name: "t", scope: !12670, file: !3208, line: 184, type: !3109)
!12679 = !DILocation(line: 184, column: 19, scope: !12670, inlinedAt: !12675)
!12680 = !DILocation(line: 188, column: 2, scope: !12681, inlinedAt: !12675)
!12681 = distinct !DILexicalBlock(scope: !12670, file: !3208, line: 188, column: 2)
!12682 = !DILocation(line: 188, column: 2, scope: !12683, inlinedAt: !12675)
!12683 = distinct !DILexicalBlock(scope: !12681, file: !3208, line: 188, column: 2)
!12684 = !DILocation(line: 189, column: 24, scope: !12685, inlinedAt: !12675)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !3208, line: 189, column: 7)
!12686 = distinct !DILexicalBlock(scope: !12683, file: !3208, line: 188, column: 56)
!12687 = !DILocation(line: 189, column: 32, scope: !12685, inlinedAt: !12675)
!12688 = !DILocation(line: 189, column: 7, scope: !12685, inlinedAt: !12675)
!12689 = !DILocation(line: 189, column: 35, scope: !12685, inlinedAt: !12675)
!12690 = !DILocation(line: 189, column: 7, scope: !12686, inlinedAt: !12675)
!12691 = !DILocation(line: 190, column: 22, scope: !12692, inlinedAt: !12675)
!12692 = distinct !DILexicalBlock(scope: !12685, file: !3208, line: 189, column: 40)
!12693 = !DILocation(line: 190, column: 25, scope: !12692, inlinedAt: !12675)
!12694 = !DILocation(line: 190, column: 30, scope: !12692, inlinedAt: !12675)
!12695 = !DILocation(line: 191, column: 8, scope: !12692, inlinedAt: !12675)
!12696 = !DILocation(line: 191, column: 16, scope: !12692, inlinedAt: !12675)
!12697 = !DILocation(line: 191, column: 21, scope: !12692, inlinedAt: !12675)
!12698 = !DILocation(line: 190, column: 4, scope: !12692, inlinedAt: !12675)
!12699 = !DILocation(line: 192, column: 4, scope: !12692, inlinedAt: !12675)
!12700 = distinct !{!12700, !12680, !12701}
!12701 = !DILocation(line: 194, column: 2, scope: !12681, inlinedAt: !12675)
!12702 = !DILocation(line: 196, column: 19, scope: !12670, inlinedAt: !12675)
!12703 = !DILocation(line: 196, column: 24, scope: !12670, inlinedAt: !12675)
!12704 = !DILocation(line: 196, column: 32, scope: !12670, inlinedAt: !12675)
!12705 = !DILocation(line: 196, column: 37, scope: !12670, inlinedAt: !12675)
!12706 = !DILocation(line: 196, column: 2, scope: !12670, inlinedAt: !12675)
!12707 = !DILocation(line: 197, column: 1, scope: !12670, inlinedAt: !12675)
!12708 = !DILocation(line: 255, column: 2, scope: !12660, inlinedAt: !12650)
!12709 = !DILocation(line: 399, column: 15, scope: !12607)
!12710 = !DILocation(line: 399, column: 25, scope: !12607)
!12711 = !DILocation(line: 399, column: 22, scope: !12607)
!12712 = !DILocation(line: 399, column: 2, scope: !12607)
!12713 = !DILocation(line: 400, column: 1, scope: !12607)
!12714 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11037, file: !11037, line: 136, type: !12551, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12715 = !DILocalVariable(name: "thread", arg: 1, scope: !12714, file: !11037, line: 136, type: !3109)
!12716 = !DILocation(line: 136, column: 56, scope: !12714)
!12717 = !DILocation(line: 138, column: 31, scope: !12714)
!12718 = !DILocation(line: 138, column: 9, scope: !12714)
!12719 = !DILocation(line: 138, column: 2, scope: !12714)
!12720 = distinct !DISubprogram(name: "should_queue_thread", scope: !3208, file: !3208, line: 245, type: !12551, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12721 = !DILocalVariable(name: "th", arg: 1, scope: !12720, file: !3208, line: 245, type: !3109)
!12722 = !DILocation(line: 245, column: 57, scope: !12720)
!12723 = !DILocation(line: 247, column: 2, scope: !12720)
!12724 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3208, file: !3208, line: 1137, type: !12671, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12725 = !DILocalVariable(name: "pq", arg: 1, scope: !12724, file: !3208, line: 1137, type: !12673)
!12726 = !DILocation(line: 1137, column: 38, scope: !12724)
!12727 = !DILocalVariable(name: "thread", arg: 2, scope: !12724, file: !3208, line: 1137, type: !3109)
!12728 = !DILocation(line: 1137, column: 59, scope: !12724)
!12729 = !DILocation(line: 1141, column: 20, scope: !12724)
!12730 = !DILocation(line: 1141, column: 28, scope: !12724)
!12731 = !DILocation(line: 1141, column: 33, scope: !12724)
!12732 = !DILocation(line: 1141, column: 2, scope: !12724)
!12733 = !DILocation(line: 1142, column: 1, scope: !12724)
!12734 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !12735, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12735 = !DISubroutineType(types: !12736)
!12736 = !{!3204, !12673}
!12737 = !DILocalVariable(name: "list", arg: 1, scope: !12734, file: !124, line: 294, type: !12673)
!12738 = !DILocation(line: 294, column: 61, scope: !12734)
!12739 = !DILocation(line: 296, column: 28, scope: !12734)
!12740 = !DILocation(line: 296, column: 9, scope: !12734)
!12741 = !DILocation(line: 296, column: 43, scope: !12734)
!12742 = !DILocation(line: 296, column: 49, scope: !12734)
!12743 = !DILocation(line: 296, column: 2, scope: !12734)
!12744 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !12745, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12745 = !DISubroutineType(types: !12746)
!12746 = !{null, !3204, !3204}
!12747 = !DILocalVariable(name: "successor", arg: 1, scope: !12744, file: !124, line: 443, type: !3204)
!12748 = !DILocation(line: 443, column: 50, scope: !12744)
!12749 = !DILocalVariable(name: "node", arg: 2, scope: !12744, file: !124, line: 443, type: !3204)
!12750 = !DILocation(line: 443, column: 74, scope: !12744)
!12751 = !DILocalVariable(name: "prev", scope: !12744, file: !124, line: 445, type: !12752)
!12752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3204)
!12753 = !DILocation(line: 445, column: 21, scope: !12744)
!12754 = !DILocation(line: 445, column: 28, scope: !12744)
!12755 = !DILocation(line: 445, column: 39, scope: !12744)
!12756 = !DILocation(line: 447, column: 15, scope: !12744)
!12757 = !DILocation(line: 447, column: 2, scope: !12744)
!12758 = !DILocation(line: 447, column: 8, scope: !12744)
!12759 = !DILocation(line: 447, column: 13, scope: !12744)
!12760 = !DILocation(line: 448, column: 15, scope: !12744)
!12761 = !DILocation(line: 448, column: 2, scope: !12744)
!12762 = !DILocation(line: 448, column: 8, scope: !12744)
!12763 = !DILocation(line: 448, column: 13, scope: !12744)
!12764 = !DILocation(line: 449, column: 15, scope: !12744)
!12765 = !DILocation(line: 449, column: 2, scope: !12744)
!12766 = !DILocation(line: 449, column: 8, scope: !12744)
!12767 = !DILocation(line: 449, column: 13, scope: !12744)
!12768 = !DILocation(line: 450, column: 20, scope: !12744)
!12769 = !DILocation(line: 450, column: 2, scope: !12744)
!12770 = !DILocation(line: 450, column: 13, scope: !12744)
!12771 = !DILocation(line: 450, column: 18, scope: !12744)
!12772 = !DILocation(line: 451, column: 1, scope: !12744)
!12773 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !12774, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{!3204, !12673, !3204}
!12776 = !DILocalVariable(name: "list", arg: 1, scope: !12773, file: !124, line: 341, type: !12673)
!12777 = !DILocation(line: 341, column: 61, scope: !12773)
!12778 = !DILocalVariable(name: "node", arg: 2, scope: !12773, file: !124, line: 342, type: !3204)
!12779 = !DILocation(line: 342, column: 26, scope: !12773)
!12780 = !DILocation(line: 344, column: 10, scope: !12773)
!12781 = !DILocation(line: 344, column: 15, scope: !12773)
!12782 = !DILocation(line: 344, column: 9, scope: !12773)
!12783 = !DILocation(line: 344, column: 55, scope: !12773)
!12784 = !DILocation(line: 344, column: 61, scope: !12773)
!12785 = !DILocation(line: 344, column: 26, scope: !12773)
!12786 = !DILocation(line: 344, column: 2, scope: !12773)
!12787 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !12788, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{null, !12673, !3204}
!12790 = !DILocalVariable(name: "list", arg: 1, scope: !12787, file: !124, line: 404, type: !12673)
!12791 = !DILocation(line: 404, column: 50, scope: !12787)
!12792 = !DILocalVariable(name: "node", arg: 2, scope: !12787, file: !124, line: 404, type: !3204)
!12793 = !DILocation(line: 404, column: 69, scope: !12787)
!12794 = !DILocalVariable(name: "tail", scope: !12787, file: !124, line: 406, type: !12752)
!12795 = !DILocation(line: 406, column: 21, scope: !12787)
!12796 = !DILocation(line: 406, column: 28, scope: !12787)
!12797 = !DILocation(line: 406, column: 34, scope: !12787)
!12798 = !DILocation(line: 408, column: 15, scope: !12787)
!12799 = !DILocation(line: 408, column: 2, scope: !12787)
!12800 = !DILocation(line: 408, column: 8, scope: !12787)
!12801 = !DILocation(line: 408, column: 13, scope: !12787)
!12802 = !DILocation(line: 409, column: 15, scope: !12787)
!12803 = !DILocation(line: 409, column: 2, scope: !12787)
!12804 = !DILocation(line: 409, column: 8, scope: !12787)
!12805 = !DILocation(line: 409, column: 13, scope: !12787)
!12806 = !DILocation(line: 411, column: 15, scope: !12787)
!12807 = !DILocation(line: 411, column: 2, scope: !12787)
!12808 = !DILocation(line: 411, column: 8, scope: !12787)
!12809 = !DILocation(line: 411, column: 13, scope: !12787)
!12810 = !DILocation(line: 412, column: 15, scope: !12787)
!12811 = !DILocation(line: 412, column: 2, scope: !12787)
!12812 = !DILocation(line: 412, column: 8, scope: !12787)
!12813 = !DILocation(line: 412, column: 13, scope: !12787)
!12814 = !DILocation(line: 413, column: 1, scope: !12787)
!12815 = distinct !DISubprogram(name: "update_cache", scope: !3208, file: !3208, line: 559, type: !10976, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12816 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12815, file: !3208, line: 559, type: !103)
!12817 = !DILocation(line: 559, column: 30, scope: !12815)
!12818 = !DILocalVariable(name: "thread", scope: !12815, file: !3208, line: 562, type: !3109)
!12819 = !DILocation(line: 562, column: 19, scope: !12815)
!12820 = !DILocalVariable(name: "thread", scope: !12821, file: !3208, line: 314, type: !3109)
!12821 = distinct !DISubprogram(name: "next_up", scope: !3208, file: !3208, line: 312, type: !12822, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{!3109}
!12824 = !DILocation(line: 314, column: 19, scope: !12821, inlinedAt: !12825)
!12825 = distinct !DILocation(line: 562, column: 28, scope: !12815)
!12826 = !DILocation(line: 239, column: 24, scope: !12827, inlinedAt: !12828)
!12827 = distinct !DISubprogram(name: "runq_best", scope: !3208, file: !3208, line: 237, type: !12822, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12828 = distinct !DILocation(line: 314, column: 28, scope: !12821, inlinedAt: !12825)
!12829 = !DILocation(line: 239, column: 9, scope: !12827, inlinedAt: !12828)
!12830 = !DILocation(line: 340, column: 10, scope: !12821, inlinedAt: !12825)
!12831 = !DILocation(line: 340, column: 17, scope: !12821, inlinedAt: !12825)
!12832 = !DILocation(line: 340, column: 9, scope: !12821, inlinedAt: !12825)
!12833 = !DILocation(line: 340, column: 28, scope: !12821, inlinedAt: !12825)
!12834 = !DILocation(line: 340, column: 51, scope: !12821, inlinedAt: !12825)
!12835 = !DILocation(line: 564, column: 21, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12815, file: !3208, line: 564, column: 6)
!12837 = !DILocation(line: 564, column: 29, scope: !12836)
!12838 = !DILocalVariable(name: "thread", arg: 1, scope: !12839, file: !3208, line: 127, type: !3109)
!12839 = distinct !DISubprogram(name: "should_preempt", scope: !3208, file: !3208, line: 127, type: !12840, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!1035, !3109, !103}
!12842 = !DILocation(line: 127, column: 59, scope: !12839, inlinedAt: !12843)
!12843 = distinct !DILocation(line: 564, column: 6, scope: !12836)
!12844 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12839, file: !3208, line: 128, type: !103)
!12845 = !DILocation(line: 128, column: 11, scope: !12839, inlinedAt: !12843)
!12846 = !DILocation(line: 133, column: 6, scope: !12847, inlinedAt: !12843)
!12847 = distinct !DILexicalBlock(scope: !12839, file: !3208, line: 133, column: 6)
!12848 = !DILocation(line: 133, column: 17, scope: !12847, inlinedAt: !12843)
!12849 = !DILocation(line: 133, column: 6, scope: !12839, inlinedAt: !12843)
!12850 = !DILocation(line: 134, column: 3, scope: !12851, inlinedAt: !12843)
!12851 = distinct !DILexicalBlock(scope: !12847, file: !3208, line: 133, column: 23)
!12852 = !DILocation(line: 140, column: 41, scope: !12853, inlinedAt: !12843)
!12853 = distinct !DILexicalBlock(scope: !12839, file: !3208, line: 140, column: 6)
!12854 = !DILocation(line: 140, column: 6, scope: !12853, inlinedAt: !12843)
!12855 = !DILocation(line: 140, column: 6, scope: !12839, inlinedAt: !12843)
!12856 = !DILocation(line: 141, column: 3, scope: !12857, inlinedAt: !12843)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !3208, line: 140, column: 52)
!12858 = !DILocation(line: 150, column: 36, scope: !12859, inlinedAt: !12843)
!12859 = distinct !DILexicalBlock(scope: !12839, file: !3208, line: 149, column: 6)
!12860 = !DILocation(line: 150, column: 9, scope: !12859, inlinedAt: !12843)
!12861 = !DILocation(line: 149, column: 6, scope: !12839, inlinedAt: !12843)
!12862 = !DILocation(line: 151, column: 3, scope: !12863, inlinedAt: !12843)
!12863 = distinct !DILexicalBlock(scope: !12859, file: !3208, line: 150, column: 45)
!12864 = !DILocation(line: 157, column: 17, scope: !12865, inlinedAt: !12843)
!12865 = distinct !DILexicalBlock(scope: !12839, file: !3208, line: 157, column: 6)
!12866 = !DILocation(line: 157, column: 6, scope: !12865, inlinedAt: !12843)
!12867 = !DILocation(line: 157, column: 27, scope: !12865, inlinedAt: !12843)
!12868 = !DILocation(line: 157, column: 41, scope: !12865, inlinedAt: !12843)
!12869 = !DILocation(line: 157, column: 30, scope: !12865, inlinedAt: !12843)
!12870 = !DILocation(line: 157, column: 6, scope: !12839, inlinedAt: !12843)
!12871 = !DILocation(line: 158, column: 3, scope: !12872, inlinedAt: !12843)
!12872 = distinct !DILexicalBlock(scope: !12865, file: !3208, line: 157, column: 50)
!12873 = !DILocation(line: 161, column: 2, scope: !12839, inlinedAt: !12843)
!12874 = !DILocation(line: 162, column: 1, scope: !12839, inlinedAt: !12843)
!12875 = !DILocation(line: 564, column: 6, scope: !12815)
!12876 = !DILocation(line: 566, column: 7, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !3208, line: 566, column: 7)
!12878 = distinct !DILexicalBlock(scope: !12836, file: !3208, line: 564, column: 42)
!12879 = !DILocation(line: 566, column: 17, scope: !12877)
!12880 = !DILocation(line: 566, column: 14, scope: !12877)
!12881 = !DILocation(line: 566, column: 7, scope: !12878)
!12882 = !DILocation(line: 567, column: 23, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12877, file: !3208, line: 566, column: 27)
!12884 = !DILocation(line: 567, column: 4, scope: !12883)
!12885 = !DILocation(line: 568, column: 3, scope: !12883)
!12886 = !DILocation(line: 570, column: 26, scope: !12878)
!12887 = !DILocation(line: 570, column: 3, scope: !12878)
!12888 = !DILocation(line: 571, column: 27, scope: !12878)
!12889 = !DILocation(line: 571, column: 25, scope: !12878)
!12890 = !DILocation(line: 572, column: 2, scope: !12878)
!12891 = !DILocation(line: 573, column: 27, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12836, file: !3208, line: 572, column: 9)
!12893 = !DILocation(line: 573, column: 25, scope: !12892)
!12894 = !DILocation(line: 585, column: 1, scope: !12815)
!12895 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3208, file: !3208, line: 1144, type: !12896, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12896 = !DISubroutineType(types: !12897)
!12897 = !{!3109, !12673}
!12898 = !DILocalVariable(name: "pq", arg: 1, scope: !12895, file: !3208, line: 1144, type: !12673)
!12899 = !DILocation(line: 1144, column: 48, scope: !12895)
!12900 = !DILocalVariable(name: "thread", scope: !12895, file: !3208, line: 1146, type: !3109)
!12901 = !DILocation(line: 1146, column: 19, scope: !12895)
!12902 = !DILocalVariable(name: "n", scope: !12895, file: !3208, line: 1147, type: !3204)
!12903 = !DILocation(line: 1147, column: 15, scope: !12895)
!12904 = !DILocation(line: 1147, column: 39, scope: !12895)
!12905 = !DILocation(line: 1147, column: 19, scope: !12895)
!12906 = !DILocation(line: 1149, column: 6, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12895, file: !3208, line: 1149, column: 6)
!12908 = !DILocation(line: 1149, column: 8, scope: !12907)
!12909 = !DILocation(line: 1149, column: 6, scope: !12895)
!12910 = !DILocation(line: 1150, column: 12, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12907, file: !3208, line: 1149, column: 17)
!12912 = !DILocation(line: 1150, column: 10, scope: !12911)
!12913 = !DILocation(line: 1151, column: 2, scope: !12911)
!12914 = !DILocation(line: 1152, column: 9, scope: !12895)
!12915 = !DILocation(line: 1152, column: 2, scope: !12895)
!12916 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11037, file: !11037, line: 115, type: !12551, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12917 = !DILocalVariable(name: "thread", arg: 1, scope: !12916, file: !11037, line: 115, type: !3109)
!12918 = !DILocation(line: 115, column: 64, scope: !12916)
!12919 = !DILocation(line: 117, column: 33, scope: !12916)
!12920 = !DILocation(line: 117, column: 41, scope: !12916)
!12921 = !DILocation(line: 117, column: 46, scope: !12916)
!12922 = !DILocation(line: 117, column: 10, scope: !12916)
!12923 = !DILocation(line: 117, column: 9, scope: !12916)
!12924 = !DILocation(line: 117, column: 2, scope: !12916)
!12925 = distinct !DISubprogram(name: "is_preempt", scope: !3208, file: !3208, line: 62, type: !12192, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12926 = !DILocalVariable(name: "thread", arg: 1, scope: !12925, file: !3208, line: 62, type: !3109)
!12927 = !DILocation(line: 62, column: 47, scope: !12925)
!12928 = !DILocation(line: 65, column: 9, scope: !12925)
!12929 = !DILocation(line: 65, column: 17, scope: !12925)
!12930 = !DILocation(line: 65, column: 22, scope: !12925)
!12931 = !DILocation(line: 65, column: 30, scope: !12925)
!12932 = !DILocation(line: 65, column: 2, scope: !12925)
!12933 = distinct !DISubprogram(name: "is_metairq", scope: !3208, file: !3208, line: 68, type: !12192, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12934 = !DILocalVariable(name: "thread", arg: 1, scope: !12933, file: !3208, line: 68, type: !3109)
!12935 = !DILocation(line: 68, column: 47, scope: !12933)
!12936 = !DILocation(line: 74, column: 2, scope: !12933)
!12937 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !3208, file: !3208, line: 545, type: !12171, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12938 = !DILocalVariable(name: "thread", arg: 1, scope: !12937, file: !3208, line: 545, type: !3109)
!12939 = !DILocation(line: 545, column: 53, scope: !12937)
!12940 = !DILocation(line: 557, column: 1, scope: !12937)
!12941 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11636, file: !11636, line: 35, type: !12942, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!1035, !12944}
!12944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12945, size: 32)
!12945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3160)
!12946 = !DILocalVariable(name: "to", arg: 1, scope: !12941, file: !11636, line: 35, type: !12944)
!12947 = !DILocation(line: 35, column: 65, scope: !12941)
!12948 = !DILocation(line: 37, column: 31, scope: !12941)
!12949 = !DILocation(line: 37, column: 35, scope: !12941)
!12950 = !DILocation(line: 37, column: 10, scope: !12941)
!12951 = !DILocation(line: 37, column: 9, scope: !12941)
!12952 = !DILocation(line: 37, column: 2, scope: !12941)
!12953 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !12954, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!1035, !12956}
!12956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12957, size: 32)
!12957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3119)
!12958 = !DILocalVariable(name: "node", arg: 1, scope: !12953, file: !124, line: 225, type: !12956)
!12959 = !DILocation(line: 225, column: 59, scope: !12953)
!12960 = !DILocation(line: 227, column: 9, scope: !12953)
!12961 = !DILocation(line: 227, column: 15, scope: !12953)
!12962 = !DILocation(line: 227, column: 20, scope: !12953)
!12963 = !DILocation(line: 227, column: 2, scope: !12953)
!12964 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !12774, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12965 = !DILocalVariable(name: "list", arg: 1, scope: !12964, file: !124, line: 325, type: !12673)
!12966 = !DILocation(line: 325, column: 70, scope: !12964)
!12967 = !DILocalVariable(name: "node", arg: 2, scope: !12964, file: !124, line: 326, type: !3204)
!12968 = !DILocation(line: 326, column: 21, scope: !12964)
!12969 = !DILocation(line: 328, column: 10, scope: !12964)
!12970 = !DILocation(line: 328, column: 18, scope: !12964)
!12971 = !DILocation(line: 328, column: 24, scope: !12964)
!12972 = !DILocation(line: 328, column: 15, scope: !12964)
!12973 = !DILocation(line: 328, column: 9, scope: !12964)
!12974 = !DILocation(line: 328, column: 39, scope: !12964)
!12975 = !DILocation(line: 328, column: 45, scope: !12964)
!12976 = !DILocation(line: 328, column: 2, scope: !12964)
!12977 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !12978, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12978 = !DISubroutineType(types: !12979)
!12979 = !{!1035, !12673}
!12980 = !DILocalVariable(name: "list", arg: 1, scope: !12977, file: !124, line: 266, type: !12673)
!12981 = !DILocation(line: 266, column: 52, scope: !12977)
!12982 = !DILocation(line: 268, column: 9, scope: !12977)
!12983 = !DILocation(line: 268, column: 15, scope: !12977)
!12984 = !DILocation(line: 268, column: 23, scope: !12977)
!12985 = !DILocation(line: 268, column: 20, scope: !12977)
!12986 = !DILocation(line: 268, column: 2, scope: !12977)
!12987 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !12988, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{null, !3204}
!12990 = !DILocalVariable(name: "node", arg: 1, scope: !12987, file: !124, line: 496, type: !3204)
!12991 = !DILocation(line: 496, column: 50, scope: !12987)
!12992 = !DILocalVariable(name: "prev", scope: !12987, file: !124, line: 498, type: !12752)
!12993 = !DILocation(line: 498, column: 21, scope: !12987)
!12994 = !DILocation(line: 498, column: 28, scope: !12987)
!12995 = !DILocation(line: 498, column: 34, scope: !12987)
!12996 = !DILocalVariable(name: "next", scope: !12987, file: !124, line: 499, type: !12752)
!12997 = !DILocation(line: 499, column: 21, scope: !12987)
!12998 = !DILocation(line: 499, column: 28, scope: !12987)
!12999 = !DILocation(line: 499, column: 34, scope: !12987)
!13000 = !DILocation(line: 501, column: 15, scope: !12987)
!13001 = !DILocation(line: 501, column: 2, scope: !12987)
!13002 = !DILocation(line: 501, column: 8, scope: !12987)
!13003 = !DILocation(line: 501, column: 13, scope: !12987)
!13004 = !DILocation(line: 502, column: 15, scope: !12987)
!13005 = !DILocation(line: 502, column: 2, scope: !12987)
!13006 = !DILocation(line: 502, column: 8, scope: !12987)
!13007 = !DILocation(line: 502, column: 13, scope: !12987)
!13008 = !DILocation(line: 503, column: 17, scope: !12987)
!13009 = !DILocation(line: 503, column: 2, scope: !12987)
!13010 = !DILocation(line: 504, column: 1, scope: !12987)
!13011 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !12988, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13012 = !DILocalVariable(name: "node", arg: 1, scope: !13011, file: !124, line: 211, type: !3204)
!13013 = !DILocation(line: 211, column: 48, scope: !13011)
!13014 = !DILocation(line: 213, column: 2, scope: !13011)
!13015 = !DILocation(line: 213, column: 8, scope: !13011)
!13016 = !DILocation(line: 213, column: 13, scope: !13011)
!13017 = !DILocation(line: 214, column: 2, scope: !13011)
!13018 = !DILocation(line: 214, column: 8, scope: !13011)
!13019 = !DILocation(line: 214, column: 13, scope: !13011)
!13020 = !DILocation(line: 215, column: 1, scope: !13011)
!13021 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11037, file: !11037, line: 131, type: !13022, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!1035, !3109, !173}
!13024 = !DILocalVariable(name: "thread", arg: 1, scope: !13021, file: !11037, line: 131, type: !3109)
!13025 = !DILocation(line: 131, column: 59, scope: !13021)
!13026 = !DILocalVariable(name: "state", arg: 2, scope: !13021, file: !11037, line: 131, type: !173)
!13027 = !DILocation(line: 131, column: 76, scope: !13021)
!13028 = !DILocation(line: 133, column: 10, scope: !13021)
!13029 = !DILocation(line: 133, column: 18, scope: !13021)
!13030 = !DILocation(line: 133, column: 23, scope: !13021)
!13031 = !DILocation(line: 133, column: 38, scope: !13021)
!13032 = !DILocation(line: 133, column: 36, scope: !13021)
!13033 = !DILocation(line: 133, column: 45, scope: !13021)
!13034 = !DILocation(line: 133, column: 2, scope: !13021)
!13035 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11037, file: !11037, line: 211, type: !13036, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!1035, !103, !103}
!13038 = !DILocalVariable(name: "prio", arg: 1, scope: !13035, file: !11037, line: 211, type: !103)
!13039 = !DILocation(line: 211, column: 41, scope: !13035)
!13040 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13035, file: !11037, line: 211, type: !103)
!13041 = !DILocation(line: 211, column: 51, scope: !13035)
!13042 = !DILocation(line: 213, column: 38, scope: !13035)
!13043 = !DILocation(line: 213, column: 44, scope: !13035)
!13044 = !DILocation(line: 213, column: 9, scope: !13035)
!13045 = !DILocation(line: 213, column: 2, scope: !13035)
!13046 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11037, file: !11037, line: 83, type: !12551, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13047 = !DILocalVariable(name: "thread", arg: 1, scope: !13046, file: !11037, line: 83, type: !3109)
!13048 = !DILocation(line: 83, column: 61, scope: !13046)
!13049 = !DILocation(line: 89, column: 9, scope: !13046)
!13050 = !DILocation(line: 89, column: 16, scope: !13046)
!13051 = !DILocation(line: 89, column: 2, scope: !13046)
!13052 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11037, file: !11037, line: 206, type: !13036, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13053 = !DILocalVariable(name: "prio1", arg: 1, scope: !13052, file: !11037, line: 206, type: !103)
!13054 = !DILocation(line: 206, column: 53, scope: !13052)
!13055 = !DILocalVariable(name: "prio2", arg: 2, scope: !13052, file: !11037, line: 206, type: !103)
!13056 = !DILocation(line: 206, column: 64, scope: !13052)
!13057 = !DILocation(line: 208, column: 9, scope: !13052)
!13058 = !DILocation(line: 208, column: 17, scope: !13052)
!13059 = !DILocation(line: 208, column: 15, scope: !13052)
!13060 = !DILocation(line: 208, column: 2, scope: !13052)
!13061 = distinct !DISubprogram(name: "z_ready_thread", scope: !3208, file: !3208, line: 635, type: !12171, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13062 = !DILocalVariable(name: "thread", arg: 1, scope: !13061, file: !3208, line: 635, type: !3109)
!13063 = !DILocation(line: 635, column: 38, scope: !13061)
!13064 = !DILocalVariable(name: "__i", scope: !13065, file: !3208, line: 637, type: !12210)
!13065 = distinct !DILexicalBlock(scope: !13061, file: !3208, line: 637, column: 2)
!13066 = !DILocation(line: 637, column: 2, scope: !13065)
!13067 = !DILocalVariable(name: "__key", scope: !13065, file: !3208, line: 637, type: !12210)
!13068 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13069)
!13069 = distinct !DILocation(line: 637, column: 2, scope: !13065)
!13070 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13069)
!13071 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13069)
!13072 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13073)
!13073 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13069)
!13074 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13073)
!13075 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13073)
!13076 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13069)
!13077 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13069)
!13078 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13069)
!13079 = !DILocation(line: 637, column: 2, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13065, file: !3208, line: 637, column: 2)
!13081 = !DILocation(line: 638, column: 32, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !3208, line: 638, column: 7)
!13083 = distinct !DILexicalBlock(scope: !13080, file: !3208, line: 637, column: 26)
!13084 = !DILocation(line: 638, column: 8, scope: !13082)
!13085 = !DILocation(line: 638, column: 7, scope: !13083)
!13086 = !DILocation(line: 639, column: 17, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13082, file: !3208, line: 638, column: 41)
!13088 = !DILocation(line: 639, column: 4, scope: !13087)
!13089 = !DILocation(line: 640, column: 3, scope: !13087)
!13090 = !DILocation(line: 641, column: 2, scope: !13083)
!13091 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13092)
!13092 = distinct !DILocation(line: 637, column: 2, scope: !13080)
!13093 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13092)
!13094 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13092)
!13095 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13092)
!13096 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13092)
!13098 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13097)
!13099 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13097)
!13100 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13097)
!13101 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13097)
!13102 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13097)
!13103 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13097)
!13104 = distinct !{!13104, !13066, !13105}
!13105 = !DILocation(line: 641, column: 2, scope: !13065)
!13106 = !DILocation(line: 642, column: 1, scope: !13061)
!13107 = distinct !DISubprogram(name: "thread_active_elsewhere", scope: !3208, file: !3208, line: 587, type: !12551, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13108 = !DILocalVariable(name: "thread", arg: 1, scope: !13107, file: !3208, line: 587, type: !3109)
!13109 = !DILocation(line: 587, column: 54, scope: !13107)
!13110 = !DILocation(line: 605, column: 2, scope: !13107)
!13111 = distinct !DISubprogram(name: "ready_thread", scope: !3208, file: !3208, line: 617, type: !12171, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13112 = !DILocalVariable(name: "thread", arg: 1, scope: !13111, file: !3208, line: 617, type: !3109)
!13113 = !DILocation(line: 617, column: 43, scope: !13111)
!13114 = !DILocation(line: 626, column: 26, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13111, file: !3208, line: 626, column: 6)
!13116 = !DILocation(line: 626, column: 7, scope: !13115)
!13117 = !DILocation(line: 626, column: 34, scope: !13115)
!13118 = !DILocation(line: 626, column: 55, scope: !13115)
!13119 = !DILocation(line: 626, column: 37, scope: !13115)
!13120 = !DILocation(line: 626, column: 6, scope: !13111)
!13121 = !DILocation(line: 627, column: 3, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13115, file: !3208, line: 626, column: 64)
!13123 = !DILocation(line: 627, column: 3, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13122, file: !3208, line: 627, column: 3)
!13125 = !DILocation(line: 629, column: 16, scope: !13122)
!13126 = !DILocation(line: 250, column: 57, scope: !12648, inlinedAt: !13127)
!13127 = distinct !DILocation(line: 629, column: 3, scope: !13122)
!13128 = !DILocation(line: 252, column: 2, scope: !12648, inlinedAt: !13127)
!13129 = !DILocation(line: 252, column: 10, scope: !12648, inlinedAt: !13127)
!13130 = !DILocation(line: 252, column: 15, scope: !12648, inlinedAt: !13127)
!13131 = !DILocation(line: 252, column: 28, scope: !12648, inlinedAt: !13127)
!13132 = !DILocation(line: 253, column: 26, scope: !12656, inlinedAt: !13127)
!13133 = !DILocation(line: 253, column: 6, scope: !12656, inlinedAt: !13127)
!13134 = !DILocation(line: 253, column: 6, scope: !12648, inlinedAt: !13127)
!13135 = !DILocation(line: 254, column: 12, scope: !12660, inlinedAt: !13127)
!13136 = !DILocation(line: 227, column: 53, scope: !12662, inlinedAt: !13137)
!13137 = distinct !DILocation(line: 254, column: 3, scope: !12660, inlinedAt: !13127)
!13138 = !DILocation(line: 229, column: 28, scope: !12662, inlinedAt: !13137)
!13139 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !13140)
!13140 = distinct !DILocation(line: 229, column: 16, scope: !12662, inlinedAt: !13137)
!13141 = !DILocation(line: 229, column: 37, scope: !12662, inlinedAt: !13137)
!13142 = !DILocation(line: 181, column: 56, scope: !12670, inlinedAt: !13143)
!13143 = distinct !DILocation(line: 229, column: 2, scope: !12662, inlinedAt: !13137)
!13144 = !DILocation(line: 182, column: 25, scope: !12670, inlinedAt: !13143)
!13145 = !DILocation(line: 184, column: 19, scope: !12670, inlinedAt: !13143)
!13146 = !DILocation(line: 188, column: 2, scope: !12681, inlinedAt: !13143)
!13147 = !DILocation(line: 188, column: 2, scope: !12683, inlinedAt: !13143)
!13148 = !DILocation(line: 189, column: 24, scope: !12685, inlinedAt: !13143)
!13149 = !DILocation(line: 189, column: 32, scope: !12685, inlinedAt: !13143)
!13150 = !DILocation(line: 189, column: 7, scope: !12685, inlinedAt: !13143)
!13151 = !DILocation(line: 189, column: 35, scope: !12685, inlinedAt: !13143)
!13152 = !DILocation(line: 189, column: 7, scope: !12686, inlinedAt: !13143)
!13153 = !DILocation(line: 190, column: 22, scope: !12692, inlinedAt: !13143)
!13154 = !DILocation(line: 190, column: 25, scope: !12692, inlinedAt: !13143)
!13155 = !DILocation(line: 190, column: 30, scope: !12692, inlinedAt: !13143)
!13156 = !DILocation(line: 191, column: 8, scope: !12692, inlinedAt: !13143)
!13157 = !DILocation(line: 191, column: 16, scope: !12692, inlinedAt: !13143)
!13158 = !DILocation(line: 191, column: 21, scope: !12692, inlinedAt: !13143)
!13159 = !DILocation(line: 190, column: 4, scope: !12692, inlinedAt: !13143)
!13160 = !DILocation(line: 192, column: 4, scope: !12692, inlinedAt: !13143)
!13161 = distinct !{!13161, !13146, !13162}
!13162 = !DILocation(line: 194, column: 2, scope: !12681, inlinedAt: !13143)
!13163 = !DILocation(line: 196, column: 19, scope: !12670, inlinedAt: !13143)
!13164 = !DILocation(line: 196, column: 24, scope: !12670, inlinedAt: !13143)
!13165 = !DILocation(line: 196, column: 32, scope: !12670, inlinedAt: !13143)
!13166 = !DILocation(line: 196, column: 37, scope: !12670, inlinedAt: !13143)
!13167 = !DILocation(line: 196, column: 2, scope: !12670, inlinedAt: !13143)
!13168 = !DILocation(line: 197, column: 1, scope: !12670, inlinedAt: !13143)
!13169 = !DILocation(line: 255, column: 2, scope: !12660, inlinedAt: !13127)
!13170 = !DILocation(line: 630, column: 3, scope: !13122)
!13171 = !DILocation(line: 631, column: 3, scope: !13122)
!13172 = !DILocation(line: 632, column: 2, scope: !13122)
!13173 = !DILocation(line: 633, column: 1, scope: !13111)
!13174 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11037, file: !11037, line: 120, type: !12551, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13175 = !DILocalVariable(name: "thread", arg: 1, scope: !13174, file: !11037, line: 120, type: !3109)
!13176 = !DILocation(line: 120, column: 55, scope: !13174)
!13177 = !DILocation(line: 122, column: 47, scope: !13174)
!13178 = !DILocation(line: 122, column: 12, scope: !13174)
!13179 = !DILocation(line: 122, column: 11, scope: !13174)
!13180 = !DILocation(line: 122, column: 56, scope: !13174)
!13181 = !DILocation(line: 122, column: 62, scope: !13174)
!13182 = !DILocation(line: 123, column: 31, scope: !13174)
!13183 = !DILocation(line: 123, column: 4, scope: !13174)
!13184 = !DILocation(line: 122, column: 9, scope: !13174)
!13185 = !DILocation(line: 122, column: 2, scope: !13174)
!13186 = distinct !DISubprogram(name: "flag_ipi", scope: !3208, file: !3208, line: 608, type: !253, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13187 = !DILocation(line: 615, column: 1, scope: !13186)
!13188 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3208, file: !3208, line: 644, type: !12171, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13189 = !DILocalVariable(name: "thread", arg: 1, scope: !13188, file: !3208, line: 644, type: !3109)
!13190 = !DILocation(line: 644, column: 54, scope: !13188)
!13191 = !DILocalVariable(name: "__i", scope: !13192, file: !3208, line: 646, type: !12210)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !3208, line: 646, column: 2)
!13193 = !DILocation(line: 646, column: 2, scope: !13192)
!13194 = !DILocalVariable(name: "__key", scope: !13192, file: !3208, line: 646, type: !12210)
!13195 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13196)
!13196 = distinct !DILocation(line: 646, column: 2, scope: !13192)
!13197 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13196)
!13198 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13196)
!13199 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13196)
!13201 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13200)
!13202 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13200)
!13203 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13196)
!13204 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13196)
!13205 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13196)
!13206 = !DILocation(line: 646, column: 2, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13192, file: !3208, line: 646, column: 2)
!13208 = !DILocation(line: 647, column: 32, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13207, file: !3208, line: 646, column: 26)
!13210 = !DILocation(line: 647, column: 3, scope: !13209)
!13211 = !DILocation(line: 648, column: 2, scope: !13209)
!13212 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13213)
!13213 = distinct !DILocation(line: 646, column: 2, scope: !13207)
!13214 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13213)
!13215 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13213)
!13216 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13213)
!13217 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13218)
!13218 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13213)
!13219 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13218)
!13220 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13218)
!13221 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13218)
!13222 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13218)
!13223 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13218)
!13224 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13218)
!13225 = distinct !{!13225, !13193, !13226}
!13226 = !DILocation(line: 648, column: 2, scope: !13192)
!13227 = !DILocation(line: 649, column: 1, scope: !13188)
!13228 = distinct !DISubprogram(name: "z_sched_start", scope: !3208, file: !3208, line: 651, type: !12171, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13229 = !DILocalVariable(name: "thread", arg: 1, scope: !13228, file: !3208, line: 651, type: !3109)
!13230 = !DILocation(line: 651, column: 37, scope: !13228)
!13231 = !DILocalVariable(name: "key", scope: !13228, file: !3208, line: 653, type: !12210)
!13232 = !DILocation(line: 653, column: 19, scope: !13228)
!13233 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13234)
!13234 = distinct !DILocation(line: 653, column: 25, scope: !13228)
!13235 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13234)
!13236 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13234)
!13237 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13238)
!13238 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13234)
!13239 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13238)
!13240 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13238)
!13241 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13234)
!13242 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13234)
!13243 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13234)
!13244 = !DILocation(line: 653, column: 25, scope: !13228)
!13245 = !DILocation(line: 655, column: 27, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13228, file: !3208, line: 655, column: 6)
!13247 = !DILocation(line: 655, column: 6, scope: !13246)
!13248 = !DILocation(line: 655, column: 6, scope: !13228)
!13249 = !DILocation(line: 656, column: 3, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13246, file: !3208, line: 655, column: 36)
!13251 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 656, column: 3, scope: !13250)
!13253 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13252)
!13254 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13252)
!13255 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13252)
!13256 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13257)
!13257 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13252)
!13258 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13257)
!13259 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13257)
!13260 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13257)
!13261 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13257)
!13262 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13257)
!13263 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13257)
!13264 = !DILocation(line: 657, column: 3, scope: !13250)
!13265 = !DILocation(line: 660, column: 27, scope: !13228)
!13266 = !DILocation(line: 660, column: 2, scope: !13228)
!13267 = !DILocation(line: 661, column: 15, scope: !13228)
!13268 = !DILocation(line: 661, column: 2, scope: !13228)
!13269 = !DILocation(line: 662, column: 2, scope: !13228)
!13270 = !DILocation(line: 663, column: 1, scope: !13228)
!13271 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11037, file: !11037, line: 126, type: !12551, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13272 = !DILocalVariable(name: "thread", arg: 1, scope: !13271, file: !11037, line: 126, type: !3109)
!13273 = !DILocation(line: 126, column: 58, scope: !13271)
!13274 = !DILocation(line: 128, column: 10, scope: !13271)
!13275 = !DILocation(line: 128, column: 18, scope: !13271)
!13276 = !DILocation(line: 128, column: 23, scope: !13271)
!13277 = !DILocation(line: 128, column: 36, scope: !13271)
!13278 = !DILocation(line: 128, column: 56, scope: !13271)
!13279 = !DILocation(line: 128, column: 2, scope: !13271)
!13280 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11037, file: !11037, line: 155, type: !12171, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13281 = !DILocalVariable(name: "thread", arg: 1, scope: !13280, file: !11037, line: 155, type: !3109)
!13282 = !DILocation(line: 155, column: 62, scope: !13280)
!13283 = !DILocation(line: 157, column: 2, scope: !13280)
!13284 = !DILocation(line: 157, column: 10, scope: !13280)
!13285 = !DILocation(line: 157, column: 15, scope: !13280)
!13286 = !DILocation(line: 157, column: 28, scope: !13280)
!13287 = !DILocation(line: 158, column: 1, scope: !13280)
!13288 = distinct !DISubprogram(name: "z_reschedule", scope: !3208, file: !3208, line: 967, type: !12258, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13289 = !DILocalVariable(name: "lock", arg: 1, scope: !13288, file: !3208, line: 967, type: !12220)
!13290 = !DILocation(line: 967, column: 38, scope: !13288)
!13291 = !DILocalVariable(name: "key", arg: 2, scope: !13288, file: !3208, line: 967, type: !12210)
!13292 = !DILocation(line: 967, column: 61, scope: !13288)
!13293 = !DILocation(line: 969, column: 18, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13288, file: !3208, line: 969, column: 6)
!13295 = !DILocation(line: 969, column: 6, scope: !13294)
!13296 = !DILocation(line: 969, column: 23, scope: !13294)
!13297 = !DILocation(line: 969, column: 26, scope: !13294)
!13298 = !DILocation(line: 969, column: 6, scope: !13288)
!13299 = !DILocation(line: 970, column: 10, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13294, file: !3208, line: 969, column: 39)
!13301 = !DILocation(line: 970, column: 3, scope: !13300)
!13302 = !DILocalVariable(name: "lock", arg: 1, scope: !13303, file: !11203, line: 193, type: !12220)
!13303 = distinct !DISubprogram(name: "z_swap", scope: !11203, file: !11203, line: 193, type: !13304, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13304 = !DISubroutineType(types: !13305)
!13305 = !{!103, !12220, !12210}
!13306 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !13307)
!13307 = distinct !DILocation(line: 970, column: 3, scope: !13300)
!13308 = !DILocalVariable(name: "key", arg: 2, scope: !13303, file: !11203, line: 193, type: !12210)
!13309 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !13307)
!13310 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !13307)
!13311 = !DILocalVariable(name: "l", arg: 1, scope: !13312, file: !222, line: 221, type: !12220)
!13312 = distinct !DISubprogram(name: "k_spin_release", scope: !222, file: !222, line: 221, type: !13313, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{null, !12220}
!13315 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !13307)
!13317 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !13316)
!13318 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !13307)
!13319 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !13307)
!13320 = !DILocation(line: 971, column: 2, scope: !13300)
!13321 = !DILocation(line: 972, column: 17, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13294, file: !3208, line: 971, column: 9)
!13323 = !DILocation(line: 972, column: 3, scope: !13322)
!13324 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 972, column: 3, scope: !13322)
!13326 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13325)
!13327 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13325)
!13328 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13325)
!13329 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13330)
!13330 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13325)
!13331 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13330)
!13332 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13330)
!13333 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13330)
!13334 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13330)
!13335 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13330)
!13336 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13330)
!13337 = !DILocation(line: 973, column: 3, scope: !13322)
!13338 = !DILocation(line: 975, column: 1, scope: !13288)
!13339 = distinct !DISubprogram(name: "resched", scope: !3208, file: !3208, line: 940, type: !13340, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{!1035, !173}
!13342 = !DILocalVariable(name: "key", arg: 1, scope: !13339, file: !3208, line: 940, type: !173)
!13343 = !DILocation(line: 940, column: 37, scope: !13339)
!13344 = !DILocation(line: 946, column: 27, scope: !13339)
!13345 = !DILocalVariable(name: "key", arg: 1, scope: !13346, file: !6304, line: 112, type: !32)
!13346 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6304, file: !6304, line: 112, type: !13347, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{!1035, !32}
!13349 = !DILocation(line: 112, column: 58, scope: !13346, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 946, column: 9, scope: !13339)
!13351 = !DILocation(line: 115, column: 9, scope: !13346, inlinedAt: !13350)
!13352 = !DILocation(line: 115, column: 13, scope: !13346, inlinedAt: !13350)
!13353 = !DILocation(line: 946, column: 32, scope: !13339)
!13354 = !DILocalVariable(name: "result", scope: !13355, file: !6627, line: 1029, type: !173)
!13355 = distinct !DISubprogram(name: "__get_IPSR", scope: !6627, file: !6627, line: 1027, type: !7409, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13356 = !DILocation(line: 1029, column: 12, scope: !13355, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 48, column: 10, scope: !13358, inlinedAt: !13359)
!13358 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7414, file: !7414, line: 46, type: !3759, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13359 = distinct !DILocation(line: 946, column: 36, scope: !13339)
!13360 = !DILocation(line: 1031, column: 3, scope: !13355, inlinedAt: !13357)
!13361 = !{i64 2354213}
!13362 = !DILocation(line: 1032, column: 10, scope: !13355, inlinedAt: !13357)
!13363 = !DILocation(line: 48, column: 9, scope: !13358, inlinedAt: !13359)
!13364 = !DILocation(line: 946, column: 35, scope: !13339)
!13365 = !DILocation(line: 0, scope: !13339)
!13366 = !DILocation(line: 946, column: 2, scope: !13339)
!13367 = distinct !DISubprogram(name: "need_swap", scope: !3208, file: !3208, line: 953, type: !3759, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13368 = !DILocalVariable(name: "new_thread", scope: !13367, file: !3208, line: 959, type: !3109)
!13369 = !DILocation(line: 959, column: 19, scope: !13367)
!13370 = !DILocation(line: 962, column: 31, scope: !13367)
!13371 = !DILocation(line: 962, column: 13, scope: !13367)
!13372 = !DILocation(line: 963, column: 9, scope: !13367)
!13373 = !DILocation(line: 963, column: 23, scope: !13367)
!13374 = !DILocation(line: 963, column: 20, scope: !13367)
!13375 = !DILocation(line: 963, column: 2, scope: !13367)
!13376 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11203, file: !11203, line: 181, type: !6637, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13377 = !DILocalVariable(name: "key", arg: 1, scope: !13376, file: !11203, line: 181, type: !32)
!13378 = !DILocation(line: 181, column: 47, scope: !13376)
!13379 = !DILocalVariable(name: "ret", scope: !13376, file: !11203, line: 183, type: !103)
!13380 = !DILocation(line: 183, column: 6, scope: !13376)
!13381 = !DILocation(line: 185, column: 18, scope: !13376)
!13382 = !DILocation(line: 185, column: 8, scope: !13376)
!13383 = !DILocation(line: 185, column: 6, scope: !13376)
!13384 = !DILocation(line: 186, column: 9, scope: !13376)
!13385 = !DILocation(line: 186, column: 2, scope: !13376)
!13386 = distinct !DISubprogram(name: "signal_pending_ipi", scope: !3208, file: !3208, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13387 = !DILocation(line: 289, column: 1, scope: !13386)
!13388 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3208, file: !3208, line: 665, type: !12171, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13389 = !DILocalVariable(name: "thread", arg: 1, scope: !13388, file: !3208, line: 665, type: !3109)
!13390 = !DILocation(line: 665, column: 47, scope: !13388)
!13391 = !DILocation(line: 667, column: 2, scope: !13388)
!13392 = !DILocation(line: 667, column: 2, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13388, file: !3208, line: 667, column: 2)
!13394 = !DILocation(line: 669, column: 31, scope: !13388)
!13395 = !DILocation(line: 669, column: 8, scope: !13388)
!13396 = !DILocalVariable(name: "__i", scope: !13397, file: !3208, line: 671, type: !12210)
!13397 = distinct !DILexicalBlock(scope: !13388, file: !3208, line: 671, column: 2)
!13398 = !DILocation(line: 671, column: 2, scope: !13397)
!13399 = !DILocalVariable(name: "__key", scope: !13397, file: !3208, line: 671, type: !12210)
!13400 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 671, column: 2, scope: !13397)
!13402 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13401)
!13403 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13401)
!13404 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13405)
!13405 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13401)
!13406 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13405)
!13407 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13405)
!13408 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13401)
!13409 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13401)
!13410 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13401)
!13411 = !DILocation(line: 671, column: 2, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13397, file: !3208, line: 671, column: 2)
!13413 = !DILocation(line: 672, column: 26, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !3208, line: 672, column: 7)
!13415 = distinct !DILexicalBlock(scope: !13412, file: !3208, line: 671, column: 26)
!13416 = !DILocation(line: 672, column: 7, scope: !13414)
!13417 = !DILocation(line: 672, column: 7, scope: !13415)
!13418 = !DILocation(line: 673, column: 19, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13414, file: !3208, line: 672, column: 35)
!13420 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 673, column: 4, scope: !13419)
!13422 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !13421)
!13423 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !13421)
!13424 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !13421)
!13425 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !13421)
!13426 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !13421)
!13427 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !13421)
!13428 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !13421)
!13429 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !13421)
!13430 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !13431)
!13431 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !13421)
!13432 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !13431)
!13433 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !13431)
!13435 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !13431)
!13436 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !13431)
!13437 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !13431)
!13438 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !13421)
!13439 = !DILocation(line: 674, column: 3, scope: !13419)
!13440 = !DILocation(line: 675, column: 30, scope: !13415)
!13441 = !DILocation(line: 675, column: 3, scope: !13415)
!13442 = !DILocation(line: 676, column: 16, scope: !13415)
!13443 = !DILocation(line: 676, column: 26, scope: !13415)
!13444 = !DILocation(line: 676, column: 23, scope: !13415)
!13445 = !DILocation(line: 676, column: 3, scope: !13415)
!13446 = !DILocation(line: 677, column: 2, scope: !13415)
!13447 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 671, column: 2, scope: !13412)
!13449 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13448)
!13450 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13448)
!13451 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13448)
!13452 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13448)
!13454 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13453)
!13455 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13453)
!13456 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13453)
!13457 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13453)
!13458 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13453)
!13459 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13453)
!13460 = distinct !{!13460, !13398, !13461}
!13461 = !DILocation(line: 677, column: 2, scope: !13397)
!13462 = !DILocation(line: 679, column: 6, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13388, file: !3208, line: 679, column: 6)
!13464 = !DILocation(line: 679, column: 16, scope: !13463)
!13465 = !DILocation(line: 679, column: 13, scope: !13463)
!13466 = !DILocation(line: 679, column: 6, scope: !13388)
!13467 = !DILocation(line: 680, column: 3, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13463, file: !3208, line: 679, column: 26)
!13469 = !DILocation(line: 681, column: 2, scope: !13468)
!13470 = !DILocation(line: 683, column: 2, scope: !13388)
!13471 = !DILocation(line: 683, column: 2, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13388, file: !3208, line: 683, column: 2)
!13473 = !DILocation(line: 684, column: 1, scope: !13388)
!13474 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11636, file: !11636, line: 52, type: !12192, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13475 = !DILocalVariable(name: "thread", arg: 1, scope: !13474, file: !11636, line: 52, type: !3109)
!13476 = !DILocation(line: 52, column: 59, scope: !13474)
!13477 = !DILocation(line: 54, column: 26, scope: !13474)
!13478 = !DILocation(line: 54, column: 34, scope: !13474)
!13479 = !DILocation(line: 54, column: 39, scope: !13474)
!13480 = !DILocation(line: 54, column: 9, scope: !13474)
!13481 = !DILocation(line: 54, column: 2, scope: !13474)
!13482 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11037, file: !11037, line: 141, type: !12171, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13483 = !DILocalVariable(name: "thread", arg: 1, scope: !13482, file: !11037, line: 141, type: !3109)
!13484 = !DILocation(line: 141, column: 64, scope: !13482)
!13485 = !DILocation(line: 143, column: 2, scope: !13482)
!13486 = !DILocation(line: 143, column: 10, scope: !13482)
!13487 = !DILocation(line: 143, column: 15, scope: !13482)
!13488 = !DILocation(line: 143, column: 28, scope: !13482)
!13489 = !DILocation(line: 145, column: 2, scope: !13482)
!13490 = !DILocation(line: 145, column: 2, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13482, file: !11037, line: 145, column: 2)
!13492 = !DILocation(line: 146, column: 1, scope: !13482)
!13493 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11037, file: !11037, line: 73, type: !253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13494 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13495)
!13495 = distinct !DILocation(line: 75, column: 30, scope: !13493)
!13496 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13495)
!13497 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13495)
!13498 = !DILocation(line: 75, column: 9, scope: !13493)
!13499 = !DILocation(line: 76, column: 1, scope: !13493)
!13500 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3208, file: !3208, line: 977, type: !11064, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13501 = !DILocalVariable(name: "key", arg: 1, scope: !13500, file: !3208, line: 977, type: !173)
!13502 = !DILocation(line: 977, column: 36, scope: !13500)
!13503 = !DILocation(line: 979, column: 14, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13500, file: !3208, line: 979, column: 6)
!13505 = !DILocation(line: 979, column: 6, scope: !13504)
!13506 = !DILocation(line: 979, column: 6, scope: !13500)
!13507 = !DILocation(line: 980, column: 18, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13504, file: !3208, line: 979, column: 20)
!13509 = !DILocation(line: 980, column: 3, scope: !13508)
!13510 = !DILocation(line: 981, column: 2, scope: !13508)
!13511 = !DILocation(line: 982, column: 3, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13504, file: !3208, line: 981, column: 9)
!13513 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13514)
!13514 = distinct !DILocation(line: 982, column: 3, scope: !13512)
!13515 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13514)
!13516 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13514)
!13517 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13514)
!13518 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13514)
!13519 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13514)
!13520 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13514)
!13521 = !DILocation(line: 983, column: 3, scope: !13512)
!13522 = !DILocation(line: 985, column: 1, scope: !13500)
!13523 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3208, file: !3208, line: 695, type: !12171, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13524 = !DILocalVariable(name: "thread", arg: 1, scope: !13523, file: !3208, line: 695, type: !3109)
!13525 = !DILocation(line: 695, column: 46, scope: !13523)
!13526 = !DILocation(line: 697, column: 2, scope: !13523)
!13527 = !DILocation(line: 697, column: 2, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13523, file: !3208, line: 697, column: 2)
!13529 = !DILocalVariable(name: "key", scope: !13523, file: !3208, line: 699, type: !12210)
!13530 = !DILocation(line: 699, column: 19, scope: !13523)
!13531 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13532)
!13532 = distinct !DILocation(line: 699, column: 25, scope: !13523)
!13533 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13532)
!13534 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13532)
!13535 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13536)
!13536 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13532)
!13537 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13536)
!13538 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13536)
!13539 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13532)
!13540 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13532)
!13541 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13532)
!13542 = !DILocation(line: 699, column: 25, scope: !13523)
!13543 = !DILocation(line: 702, column: 29, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13523, file: !3208, line: 702, column: 6)
!13545 = !DILocation(line: 702, column: 7, scope: !13544)
!13546 = !DILocation(line: 702, column: 6, scope: !13523)
!13547 = !DILocation(line: 703, column: 3, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !3208, line: 702, column: 38)
!13549 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13550)
!13550 = distinct !DILocation(line: 703, column: 3, scope: !13548)
!13551 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13550)
!13552 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13550)
!13553 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13550)
!13554 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13555)
!13555 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13550)
!13556 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13555)
!13557 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13555)
!13558 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13555)
!13559 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13555)
!13560 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13555)
!13561 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13555)
!13562 = !DILocation(line: 704, column: 3, scope: !13548)
!13563 = !DILocation(line: 707, column: 33, scope: !13523)
!13564 = !DILocation(line: 707, column: 2, scope: !13523)
!13565 = !DILocation(line: 708, column: 15, scope: !13523)
!13566 = !DILocation(line: 708, column: 2, scope: !13523)
!13567 = !DILocation(line: 710, column: 2, scope: !13523)
!13568 = !DILocation(line: 712, column: 2, scope: !13523)
!13569 = !DILocation(line: 712, column: 2, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13523, file: !3208, line: 712, column: 2)
!13571 = !DILocation(line: 713, column: 1, scope: !13523)
!13572 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11037, file: !11037, line: 96, type: !12551, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13573 = !DILocalVariable(name: "thread", arg: 1, scope: !13572, file: !11037, line: 96, type: !3109)
!13574 = !DILocation(line: 96, column: 59, scope: !13572)
!13575 = !DILocation(line: 98, column: 10, scope: !13572)
!13576 = !DILocation(line: 98, column: 18, scope: !13572)
!13577 = !DILocation(line: 98, column: 23, scope: !13572)
!13578 = !DILocation(line: 98, column: 36, scope: !13572)
!13579 = !DILocation(line: 98, column: 57, scope: !13572)
!13580 = !DILocation(line: 98, column: 2, scope: !13572)
!13581 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11037, file: !11037, line: 148, type: !12171, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13582 = !DILocalVariable(name: "thread", arg: 1, scope: !13581, file: !11037, line: 148, type: !3109)
!13583 = !DILocation(line: 148, column: 68, scope: !13581)
!13584 = !DILocation(line: 150, column: 2, scope: !13581)
!13585 = !DILocation(line: 150, column: 10, scope: !13581)
!13586 = !DILocation(line: 150, column: 15, scope: !13581)
!13587 = !DILocation(line: 150, column: 28, scope: !13581)
!13588 = !DILocation(line: 152, column: 2, scope: !13581)
!13589 = !DILocation(line: 152, column: 2, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13581, file: !11037, line: 152, column: 2)
!13591 = !DILocation(line: 153, column: 1, scope: !13581)
!13592 = distinct !DISubprogram(name: "z_pend_thread", scope: !3208, file: !3208, line: 770, type: !13593, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !3109, !3140, !13595}
!13595 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2506, line: 67, baseType: !13596)
!13596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2506, line: 65, size: 64, elements: !13597)
!13597 = !{!13598}
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13596, file: !2506, line: 66, baseType: !2505, size: 64)
!13599 = !DILocalVariable(name: "thread", arg: 1, scope: !13592, file: !3208, line: 770, type: !3109)
!13600 = !DILocation(line: 770, column: 37, scope: !13592)
!13601 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13592, file: !3208, line: 770, type: !3140)
!13602 = !DILocation(line: 770, column: 56, scope: !13592)
!13603 = !DILocalVariable(name: "timeout", arg: 3, scope: !13592, file: !3208, line: 771, type: !13595)
!13604 = !DILocation(line: 771, column: 18, scope: !13592)
!13605 = !DILocalVariable(name: "__i", scope: !13606, file: !3208, line: 774, type: !12210)
!13606 = distinct !DILexicalBlock(scope: !13592, file: !3208, line: 774, column: 2)
!13607 = !DILocation(line: 774, column: 2, scope: !13606)
!13608 = !DILocalVariable(name: "__key", scope: !13606, file: !3208, line: 774, type: !12210)
!13609 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13610)
!13610 = distinct !DILocation(line: 774, column: 2, scope: !13606)
!13611 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13610)
!13612 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13610)
!13613 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13614)
!13614 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13610)
!13615 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13614)
!13616 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13614)
!13617 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13610)
!13618 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13610)
!13619 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13610)
!13620 = !DILocation(line: 774, column: 2, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13606, file: !3208, line: 774, column: 2)
!13622 = !DILocation(line: 775, column: 15, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13621, file: !3208, line: 774, column: 26)
!13624 = !DILocation(line: 775, column: 23, scope: !13623)
!13625 = !DILocation(line: 775, column: 3, scope: !13623)
!13626 = !DILocation(line: 776, column: 2, scope: !13623)
!13627 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13628)
!13628 = distinct !DILocation(line: 774, column: 2, scope: !13621)
!13629 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13628)
!13630 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13628)
!13631 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13628)
!13632 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13628)
!13634 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13633)
!13635 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13633)
!13636 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13633)
!13637 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13633)
!13638 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13633)
!13639 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13633)
!13640 = distinct !{!13640, !13607, !13641}
!13641 = !DILocation(line: 776, column: 2, scope: !13606)
!13642 = !DILocation(line: 777, column: 1, scope: !13592)
!13643 = distinct !DISubprogram(name: "pend_locked", scope: !3208, file: !3208, line: 760, type: !13593, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13644 = !DILocalVariable(name: "thread", arg: 1, scope: !13643, file: !3208, line: 760, type: !3109)
!13645 = !DILocation(line: 760, column: 42, scope: !13643)
!13646 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13643, file: !3208, line: 760, type: !3140)
!13647 = !DILocation(line: 760, column: 61, scope: !13643)
!13648 = !DILocalVariable(name: "timeout", arg: 3, scope: !13643, file: !3208, line: 761, type: !13595)
!13649 = !DILocation(line: 761, column: 16, scope: !13643)
!13650 = !DILocation(line: 766, column: 22, scope: !13643)
!13651 = !DILocation(line: 766, column: 30, scope: !13643)
!13652 = !DILocation(line: 766, column: 2, scope: !13643)
!13653 = !DILocation(line: 767, column: 21, scope: !13643)
!13654 = !DILocation(line: 767, column: 2, scope: !13643)
!13655 = !DILocation(line: 768, column: 1, scope: !13643)
!13656 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3208, file: !3208, line: 740, type: !13657, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{null, !3109, !3140}
!13659 = !DILocalVariable(name: "thread", arg: 1, scope: !13656, file: !3208, line: 740, type: !3109)
!13660 = !DILocation(line: 740, column: 50, scope: !13656)
!13661 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13656, file: !3208, line: 740, type: !3140)
!13662 = !DILocation(line: 740, column: 69, scope: !13656)
!13663 = !DILocation(line: 742, column: 17, scope: !13656)
!13664 = !DILocation(line: 742, column: 2, scope: !13656)
!13665 = !DILocation(line: 743, column: 27, scope: !13656)
!13666 = !DILocation(line: 743, column: 2, scope: !13656)
!13667 = !DILocation(line: 745, column: 2, scope: !13656)
!13668 = !DILocation(line: 745, column: 2, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13656, file: !3208, line: 745, column: 2)
!13670 = !DILocation(line: 747, column: 6, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13656, file: !3208, line: 747, column: 6)
!13672 = !DILocation(line: 747, column: 13, scope: !13671)
!13673 = !DILocation(line: 747, column: 6, scope: !13656)
!13674 = !DILocation(line: 748, column: 28, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13671, file: !3208, line: 747, column: 22)
!13676 = !DILocation(line: 748, column: 3, scope: !13675)
!13677 = !DILocation(line: 748, column: 11, scope: !13675)
!13678 = !DILocation(line: 748, column: 16, scope: !13675)
!13679 = !DILocation(line: 748, column: 26, scope: !13675)
!13680 = !DILocation(line: 749, column: 20, scope: !13675)
!13681 = !DILocation(line: 749, column: 28, scope: !13675)
!13682 = !DILocation(line: 749, column: 35, scope: !13675)
!13683 = !DILocation(line: 181, column: 56, scope: !12670, inlinedAt: !13684)
!13684 = distinct !DILocation(line: 749, column: 3, scope: !13675)
!13685 = !DILocation(line: 182, column: 25, scope: !12670, inlinedAt: !13684)
!13686 = !DILocation(line: 184, column: 19, scope: !12670, inlinedAt: !13684)
!13687 = !DILocation(line: 188, column: 2, scope: !12681, inlinedAt: !13684)
!13688 = !DILocation(line: 188, column: 2, scope: !12683, inlinedAt: !13684)
!13689 = !DILocation(line: 189, column: 24, scope: !12685, inlinedAt: !13684)
!13690 = !DILocation(line: 189, column: 32, scope: !12685, inlinedAt: !13684)
!13691 = !DILocation(line: 189, column: 7, scope: !12685, inlinedAt: !13684)
!13692 = !DILocation(line: 189, column: 35, scope: !12685, inlinedAt: !13684)
!13693 = !DILocation(line: 189, column: 7, scope: !12686, inlinedAt: !13684)
!13694 = !DILocation(line: 190, column: 22, scope: !12692, inlinedAt: !13684)
!13695 = !DILocation(line: 190, column: 25, scope: !12692, inlinedAt: !13684)
!13696 = !DILocation(line: 190, column: 30, scope: !12692, inlinedAt: !13684)
!13697 = !DILocation(line: 191, column: 8, scope: !12692, inlinedAt: !13684)
!13698 = !DILocation(line: 191, column: 16, scope: !12692, inlinedAt: !13684)
!13699 = !DILocation(line: 191, column: 21, scope: !12692, inlinedAt: !13684)
!13700 = !DILocation(line: 190, column: 4, scope: !12692, inlinedAt: !13684)
!13701 = !DILocation(line: 192, column: 4, scope: !12692, inlinedAt: !13684)
!13702 = distinct !{!13702, !13687, !13703}
!13703 = !DILocation(line: 194, column: 2, scope: !12681, inlinedAt: !13684)
!13704 = !DILocation(line: 196, column: 19, scope: !12670, inlinedAt: !13684)
!13705 = !DILocation(line: 196, column: 24, scope: !12670, inlinedAt: !13684)
!13706 = !DILocation(line: 196, column: 32, scope: !12670, inlinedAt: !13684)
!13707 = !DILocation(line: 196, column: 37, scope: !12670, inlinedAt: !13684)
!13708 = !DILocation(line: 196, column: 2, scope: !12670, inlinedAt: !13684)
!13709 = !DILocation(line: 197, column: 1, scope: !12670, inlinedAt: !13684)
!13710 = !DILocation(line: 750, column: 2, scope: !13675)
!13711 = !DILocation(line: 751, column: 1, scope: !13656)
!13712 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3208, file: !3208, line: 753, type: !13713, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{null, !3109, !13595}
!13715 = !DILocalVariable(name: "thread", arg: 1, scope: !13712, file: !3208, line: 753, type: !3109)
!13716 = !DILocation(line: 753, column: 49, scope: !13712)
!13717 = !DILocalVariable(name: "timeout", arg: 2, scope: !13712, file: !3208, line: 753, type: !13595)
!13718 = !DILocation(line: 753, column: 69, scope: !13712)
!13719 = !DILocation(line: 755, column: 7, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13712, file: !3208, line: 755, column: 6)
!13721 = !DILocation(line: 755, column: 6, scope: !13712)
!13722 = !DILocation(line: 756, column: 24, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13720, file: !3208, line: 755, column: 41)
!13724 = !DILocation(line: 756, column: 3, scope: !13723)
!13725 = !DILocation(line: 757, column: 2, scope: !13723)
!13726 = !DILocation(line: 758, column: 1, scope: !13712)
!13727 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11636, file: !11636, line: 47, type: !13713, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13728 = !DILocalVariable(name: "thread", arg: 1, scope: !13727, file: !11636, line: 47, type: !3109)
!13729 = !DILocation(line: 47, column: 58, scope: !13727)
!13730 = !DILocalVariable(name: "ticks", arg: 2, scope: !13727, file: !11636, line: 47, type: !13595)
!13731 = !DILocation(line: 47, column: 78, scope: !13727)
!13732 = !DILocation(line: 49, column: 17, scope: !13727)
!13733 = !DILocation(line: 49, column: 25, scope: !13727)
!13734 = !DILocation(line: 49, column: 30, scope: !13727)
!13735 = !DILocation(line: 49, column: 2, scope: !13727)
!13736 = !DILocation(line: 50, column: 1, scope: !13727)
!13737 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3208, file: !3208, line: 795, type: !3166, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13738 = !DILocalVariable(name: "timeout", arg: 1, scope: !13737, file: !3208, line: 795, type: !3168)
!13739 = !DILocation(line: 795, column: 40, scope: !13737)
!13740 = !DILocalVariable(name: "thread", scope: !13737, file: !3208, line: 797, type: !3109)
!13741 = !DILocation(line: 797, column: 19, scope: !13737)
!13742 = !DILocation(line: 797, column: 28, scope: !13737)
!13743 = !DILocalVariable(name: "__i", scope: !13744, file: !3208, line: 800, type: !12210)
!13744 = distinct !DILexicalBlock(scope: !13737, file: !3208, line: 800, column: 2)
!13745 = !DILocation(line: 800, column: 2, scope: !13744)
!13746 = !DILocalVariable(name: "__key", scope: !13744, file: !3208, line: 800, type: !12210)
!13747 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 800, column: 2, scope: !13744)
!13749 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13748)
!13750 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13748)
!13751 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13752)
!13752 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13748)
!13753 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13752)
!13754 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13752)
!13755 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13748)
!13756 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13748)
!13757 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13748)
!13758 = !DILocation(line: 800, column: 2, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13744, file: !3208, line: 800, column: 2)
!13760 = !DILocalVariable(name: "killed", scope: !13761, file: !3208, line: 801, type: !1035)
!13761 = distinct !DILexicalBlock(scope: !13759, file: !3208, line: 800, column: 26)
!13762 = !DILocation(line: 801, column: 8, scope: !13761)
!13763 = !DILocation(line: 801, column: 19, scope: !13761)
!13764 = !DILocation(line: 801, column: 27, scope: !13761)
!13765 = !DILocation(line: 801, column: 32, scope: !13761)
!13766 = !DILocation(line: 801, column: 45, scope: !13761)
!13767 = !DILocation(line: 801, column: 61, scope: !13761)
!13768 = !DILocation(line: 802, column: 12, scope: !13761)
!13769 = !DILocation(line: 802, column: 20, scope: !13761)
!13770 = !DILocation(line: 802, column: 25, scope: !13761)
!13771 = !DILocation(line: 802, column: 38, scope: !13761)
!13772 = !DILocation(line: 804, column: 8, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13761, file: !3208, line: 804, column: 7)
!13774 = !DILocation(line: 804, column: 7, scope: !13761)
!13775 = !DILocation(line: 805, column: 8, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !3208, line: 805, column: 8)
!13777 = distinct !DILexicalBlock(scope: !13773, file: !3208, line: 804, column: 16)
!13778 = !DILocation(line: 805, column: 16, scope: !13776)
!13779 = !DILocation(line: 805, column: 21, scope: !13776)
!13780 = !DILocation(line: 805, column: 31, scope: !13776)
!13781 = !DILocation(line: 805, column: 8, scope: !13777)
!13782 = !DILocation(line: 806, column: 30, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13776, file: !3208, line: 805, column: 40)
!13784 = !DILocation(line: 806, column: 5, scope: !13783)
!13785 = !DILocation(line: 807, column: 4, scope: !13783)
!13786 = !DILocation(line: 808, column: 29, scope: !13777)
!13787 = !DILocation(line: 808, column: 4, scope: !13777)
!13788 = !DILocation(line: 809, column: 35, scope: !13777)
!13789 = !DILocation(line: 809, column: 4, scope: !13777)
!13790 = !DILocation(line: 810, column: 17, scope: !13777)
!13791 = !DILocation(line: 810, column: 4, scope: !13777)
!13792 = !DILocation(line: 811, column: 3, scope: !13777)
!13793 = !DILocation(line: 812, column: 2, scope: !13761)
!13794 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 800, column: 2, scope: !13759)
!13796 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13795)
!13797 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13795)
!13798 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13795)
!13799 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13800)
!13800 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13795)
!13801 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13800)
!13802 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13800)
!13803 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13800)
!13804 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13800)
!13805 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13800)
!13806 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13800)
!13807 = distinct !{!13807, !13745, !13808}
!13808 = !DILocation(line: 812, column: 2, scope: !13744)
!13809 = !DILocation(line: 813, column: 1, scope: !13737)
!13810 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3208, file: !3208, line: 779, type: !12171, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13811 = !DILocalVariable(name: "thread", arg: 1, scope: !13810, file: !3208, line: 779, type: !3109)
!13812 = !DILocation(line: 779, column: 62, scope: !13810)
!13813 = !DILocation(line: 781, column: 38, scope: !13810)
!13814 = !DILocation(line: 781, column: 21, scope: !13810)
!13815 = !DILocation(line: 781, column: 47, scope: !13810)
!13816 = !DILocation(line: 781, column: 54, scope: !13810)
!13817 = !DILocation(line: 781, column: 2, scope: !13810)
!13818 = !DILocation(line: 782, column: 31, scope: !13810)
!13819 = !DILocation(line: 782, column: 2, scope: !13810)
!13820 = !DILocation(line: 783, column: 2, scope: !13810)
!13821 = !DILocation(line: 783, column: 10, scope: !13810)
!13822 = !DILocation(line: 783, column: 15, scope: !13810)
!13823 = !DILocation(line: 783, column: 25, scope: !13810)
!13824 = !DILocation(line: 784, column: 1, scope: !13810)
!13825 = distinct !DISubprogram(name: "pended_on_thread", scope: !3208, file: !3208, line: 724, type: !13826, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!3140, !3109}
!13828 = !DILocalVariable(name: "thread", arg: 1, scope: !13825, file: !3208, line: 724, type: !3109)
!13829 = !DILocation(line: 724, column: 53, scope: !13825)
!13830 = !DILocation(line: 728, column: 9, scope: !13825)
!13831 = !DILocation(line: 728, column: 17, scope: !13825)
!13832 = !DILocation(line: 728, column: 22, scope: !13825)
!13833 = !DILocation(line: 728, column: 2, scope: !13825)
!13834 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11037, file: !11037, line: 165, type: !12171, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13835 = !DILocalVariable(name: "thread", arg: 1, scope: !13834, file: !11037, line: 165, type: !3109)
!13836 = !DILocation(line: 165, column: 66, scope: !13834)
!13837 = !DILocation(line: 167, column: 2, scope: !13834)
!13838 = !DILocation(line: 167, column: 10, scope: !13834)
!13839 = !DILocation(line: 167, column: 15, scope: !13834)
!13840 = !DILocation(line: 167, column: 28, scope: !13834)
!13841 = !DILocation(line: 168, column: 1, scope: !13834)
!13842 = distinct !DISubprogram(name: "unready_thread", scope: !3208, file: !3208, line: 731, type: !12171, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13843 = !DILocalVariable(name: "thread", arg: 1, scope: !13842, file: !3208, line: 731, type: !3109)
!13844 = !DILocation(line: 731, column: 45, scope: !13842)
!13845 = !DILocation(line: 733, column: 25, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !3208, line: 733, column: 6)
!13847 = !DILocation(line: 733, column: 6, scope: !13846)
!13848 = !DILocation(line: 733, column: 6, scope: !13842)
!13849 = !DILocation(line: 734, column: 18, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13846, file: !3208, line: 733, column: 34)
!13851 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !13852)
!13852 = distinct !DILocation(line: 734, column: 3, scope: !13850)
!13853 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !13852)
!13854 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !13852)
!13855 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !13852)
!13856 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !13852)
!13857 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !13852)
!13858 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !13852)
!13859 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !13852)
!13860 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !13852)
!13861 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !13862)
!13862 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !13852)
!13863 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !13862)
!13864 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !13865)
!13865 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !13862)
!13866 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !13862)
!13867 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !13862)
!13868 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !13862)
!13869 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !13852)
!13870 = !DILocation(line: 735, column: 2, scope: !13850)
!13871 = !DILocation(line: 736, column: 15, scope: !13842)
!13872 = !DILocation(line: 736, column: 25, scope: !13842)
!13873 = !DILocation(line: 736, column: 22, scope: !13842)
!13874 = !DILocation(line: 736, column: 2, scope: !13842)
!13875 = !DILocation(line: 737, column: 1, scope: !13842)
!13876 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11037, file: !11037, line: 160, type: !12171, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13877 = !DILocalVariable(name: "thread", arg: 1, scope: !13876, file: !11037, line: 160, type: !3109)
!13878 = !DILocation(line: 160, column: 62, scope: !13876)
!13879 = !DILocation(line: 162, column: 2, scope: !13876)
!13880 = !DILocation(line: 162, column: 10, scope: !13876)
!13881 = !DILocation(line: 162, column: 15, scope: !13876)
!13882 = !DILocation(line: 162, column: 28, scope: !13876)
!13883 = !DILocation(line: 163, column: 1, scope: !13876)
!13884 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3208, file: !3208, line: 786, type: !12171, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13885 = !DILocalVariable(name: "thread", arg: 1, scope: !13884, file: !3208, line: 786, type: !3109)
!13886 = !DILocation(line: 786, column: 64, scope: !13884)
!13887 = !DILocalVariable(name: "__i", scope: !13888, file: !3208, line: 788, type: !12210)
!13888 = distinct !DILexicalBlock(scope: !13884, file: !3208, line: 788, column: 2)
!13889 = !DILocation(line: 788, column: 2, scope: !13888)
!13890 = !DILocalVariable(name: "__key", scope: !13888, file: !3208, line: 788, type: !12210)
!13891 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 788, column: 2, scope: !13888)
!13893 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13892)
!13894 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13892)
!13895 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13892)
!13897 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13896)
!13898 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13896)
!13899 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13892)
!13900 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13892)
!13901 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13892)
!13902 = !DILocation(line: 788, column: 2, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13888, file: !3208, line: 788, column: 2)
!13904 = !DILocation(line: 789, column: 28, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13903, file: !3208, line: 788, column: 26)
!13906 = !DILocation(line: 789, column: 3, scope: !13905)
!13907 = !DILocation(line: 790, column: 2, scope: !13905)
!13908 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13909)
!13909 = distinct !DILocation(line: 788, column: 2, scope: !13903)
!13910 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13909)
!13911 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13909)
!13912 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13909)
!13913 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13909)
!13915 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13914)
!13916 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13914)
!13917 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13914)
!13918 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13914)
!13919 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13914)
!13920 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13914)
!13921 = distinct !{!13921, !13889, !13922}
!13922 = !DILocation(line: 790, column: 2, scope: !13888)
!13923 = !DILocation(line: 791, column: 1, scope: !13884)
!13924 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3208, file: !3208, line: 816, type: !13925, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{!103, !173, !3140, !13595}
!13927 = !DILocalVariable(name: "key", arg: 1, scope: !13924, file: !3208, line: 816, type: !173)
!13928 = !DILocation(line: 816, column: 34, scope: !13924)
!13929 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13924, file: !3208, line: 816, type: !3140)
!13930 = !DILocation(line: 816, column: 50, scope: !13924)
!13931 = !DILocalVariable(name: "timeout", arg: 3, scope: !13924, file: !3208, line: 816, type: !13595)
!13932 = !DILocation(line: 816, column: 70, scope: !13924)
!13933 = !DILocation(line: 823, column: 14, scope: !13924)
!13934 = !DILocation(line: 823, column: 24, scope: !13924)
!13935 = !DILocation(line: 823, column: 2, scope: !13924)
!13936 = !DILocation(line: 826, column: 20, scope: !13924)
!13937 = !DILocation(line: 826, column: 18, scope: !13924)
!13938 = !DILocalVariable(name: "ret", scope: !13924, file: !3208, line: 828, type: !103)
!13939 = !DILocation(line: 828, column: 6, scope: !13924)
!13940 = !DILocation(line: 828, column: 27, scope: !13924)
!13941 = !DILocation(line: 828, column: 12, scope: !13924)
!13942 = !DILocalVariable(name: "__i", scope: !13943, file: !3208, line: 829, type: !12210)
!13943 = distinct !DILexicalBlock(scope: !13924, file: !3208, line: 829, column: 2)
!13944 = !DILocation(line: 829, column: 2, scope: !13943)
!13945 = !DILocalVariable(name: "__key", scope: !13943, file: !3208, line: 829, type: !12210)
!13946 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !13947)
!13947 = distinct !DILocation(line: 829, column: 2, scope: !13943)
!13948 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !13947)
!13949 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !13947)
!13950 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !13951)
!13951 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !13947)
!13952 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !13951)
!13953 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !13951)
!13954 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !13947)
!13955 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !13947)
!13956 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !13947)
!13957 = !DILocation(line: 829, column: 2, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13943, file: !3208, line: 829, column: 2)
!13959 = !DILocation(line: 830, column: 7, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !3208, line: 830, column: 7)
!13961 = distinct !DILexicalBlock(scope: !13958, file: !3208, line: 829, column: 26)
!13962 = !DILocation(line: 830, column: 26, scope: !13960)
!13963 = !DILocation(line: 830, column: 23, scope: !13960)
!13964 = !DILocation(line: 830, column: 7, scope: !13961)
!13965 = !DILocation(line: 831, column: 20, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13960, file: !3208, line: 830, column: 36)
!13967 = !DILocation(line: 832, column: 3, scope: !13966)
!13968 = !DILocation(line: 833, column: 2, scope: !13961)
!13969 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 829, column: 2, scope: !13958)
!13971 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !13970)
!13972 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !13970)
!13973 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !13970)
!13974 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !13970)
!13976 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !13975)
!13977 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !13975)
!13978 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !13975)
!13979 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !13975)
!13980 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !13975)
!13981 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !13975)
!13982 = distinct !{!13982, !13944, !13983}
!13983 = !DILocation(line: 833, column: 2, scope: !13943)
!13984 = !DILocation(line: 834, column: 9, scope: !13924)
!13985 = !DILocation(line: 834, column: 2, scope: !13924)
!13986 = distinct !DISubprogram(name: "z_pend_curr", scope: !3208, file: !3208, line: 840, type: !13987, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{!103, !12220, !12210, !3140, !13595}
!13989 = !DILocalVariable(name: "lock", arg: 1, scope: !13986, file: !3208, line: 840, type: !12220)
!13990 = !DILocation(line: 840, column: 36, scope: !13986)
!13991 = !DILocalVariable(name: "key", arg: 2, scope: !13986, file: !3208, line: 840, type: !12210)
!13992 = !DILocation(line: 840, column: 59, scope: !13986)
!13993 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13986, file: !3208, line: 841, type: !3140)
!13994 = !DILocation(line: 841, column: 20, scope: !13986)
!13995 = !DILocalVariable(name: "timeout", arg: 4, scope: !13986, file: !3208, line: 841, type: !13595)
!13996 = !DILocation(line: 841, column: 40, scope: !13986)
!13997 = !DILocation(line: 844, column: 20, scope: !13986)
!13998 = !DILocation(line: 844, column: 18, scope: !13986)
!13999 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 856, column: 9, scope: !13986)
!14001 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14000)
!14002 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14000)
!14003 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14000)
!14005 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14004)
!14006 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14004)
!14007 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14000)
!14008 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14000)
!14009 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14000)
!14010 = !DILocation(line: 856, column: 9, scope: !13986)
!14011 = !DILocation(line: 857, column: 14, scope: !13986)
!14012 = !DILocation(line: 857, column: 24, scope: !13986)
!14013 = !DILocation(line: 857, column: 2, scope: !13986)
!14014 = !DILocation(line: 858, column: 17, scope: !13986)
!14015 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 858, column: 2, scope: !13986)
!14017 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !14016)
!14018 = !DILocation(line: 859, column: 9, scope: !13986)
!14019 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !14020)
!14020 = distinct !DILocation(line: 859, column: 9, scope: !13986)
!14021 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !14020)
!14022 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !14020)
!14023 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !14024)
!14024 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !14020)
!14025 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !14024)
!14026 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !14020)
!14027 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !14020)
!14028 = !DILocation(line: 859, column: 2, scope: !13986)
!14029 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3208, file: !3208, line: 862, type: !14030, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{!3109, !3140}
!14032 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14029, file: !3208, line: 862, type: !3140)
!14033 = !DILocation(line: 862, column: 50, scope: !14029)
!14034 = !DILocalVariable(name: "thread", scope: !14029, file: !3208, line: 864, type: !3109)
!14035 = !DILocation(line: 864, column: 19, scope: !14029)
!14036 = !DILocalVariable(name: "__i", scope: !14037, file: !3208, line: 866, type: !12210)
!14037 = distinct !DILexicalBlock(scope: !14029, file: !3208, line: 866, column: 2)
!14038 = !DILocation(line: 866, column: 2, scope: !14037)
!14039 = !DILocalVariable(name: "__key", scope: !14037, file: !3208, line: 866, type: !12210)
!14040 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 866, column: 2, scope: !14037)
!14042 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14041)
!14043 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14041)
!14044 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14041)
!14046 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14045)
!14047 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14045)
!14048 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14041)
!14049 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14041)
!14050 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14041)
!14051 = !DILocation(line: 866, column: 2, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14037, file: !3208, line: 866, column: 2)
!14053 = !DILocation(line: 867, column: 29, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14052, file: !3208, line: 866, column: 26)
!14055 = !DILocation(line: 867, column: 37, scope: !14054)
!14056 = !DILocation(line: 867, column: 12, scope: !14054)
!14057 = !DILocation(line: 867, column: 10, scope: !14054)
!14058 = !DILocation(line: 869, column: 7, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14054, file: !3208, line: 869, column: 7)
!14060 = !DILocation(line: 869, column: 14, scope: !14059)
!14061 = !DILocation(line: 869, column: 7, scope: !14054)
!14062 = !DILocation(line: 870, column: 29, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14059, file: !3208, line: 869, column: 23)
!14064 = !DILocation(line: 870, column: 4, scope: !14063)
!14065 = !DILocation(line: 871, column: 3, scope: !14063)
!14066 = !DILocation(line: 872, column: 2, scope: !14054)
!14067 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14068)
!14068 = distinct !DILocation(line: 866, column: 2, scope: !14052)
!14069 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14068)
!14070 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14068)
!14071 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14068)
!14072 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14068)
!14074 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14073)
!14075 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14073)
!14076 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14073)
!14077 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14073)
!14078 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14073)
!14079 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14073)
!14080 = distinct !{!14080, !14038, !14081}
!14081 = !DILocation(line: 872, column: 2, scope: !14037)
!14082 = !DILocation(line: 874, column: 9, scope: !14029)
!14083 = !DILocation(line: 874, column: 2, scope: !14029)
!14084 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3208, file: !3208, line: 877, type: !14030, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14085 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14084, file: !3208, line: 877, type: !3140)
!14086 = !DILocation(line: 877, column: 51, scope: !14084)
!14087 = !DILocalVariable(name: "thread", scope: !14084, file: !3208, line: 879, type: !3109)
!14088 = !DILocation(line: 879, column: 19, scope: !14084)
!14089 = !DILocalVariable(name: "__i", scope: !14090, file: !3208, line: 881, type: !12210)
!14090 = distinct !DILexicalBlock(scope: !14084, file: !3208, line: 881, column: 2)
!14091 = !DILocation(line: 881, column: 2, scope: !14090)
!14092 = !DILocalVariable(name: "__key", scope: !14090, file: !3208, line: 881, type: !12210)
!14093 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14094)
!14094 = distinct !DILocation(line: 881, column: 2, scope: !14090)
!14095 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14094)
!14096 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14094)
!14097 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14094)
!14099 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14098)
!14100 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14098)
!14101 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14094)
!14102 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14094)
!14103 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14094)
!14104 = !DILocation(line: 881, column: 2, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14090, file: !3208, line: 881, column: 2)
!14106 = !DILocation(line: 882, column: 29, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14105, file: !3208, line: 881, column: 26)
!14108 = !DILocation(line: 882, column: 37, scope: !14107)
!14109 = !DILocation(line: 882, column: 12, scope: !14107)
!14110 = !DILocation(line: 882, column: 10, scope: !14107)
!14111 = !DILocation(line: 884, column: 7, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14107, file: !3208, line: 884, column: 7)
!14113 = !DILocation(line: 884, column: 14, scope: !14112)
!14114 = !DILocation(line: 884, column: 7, scope: !14107)
!14115 = !DILocation(line: 885, column: 29, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14112, file: !3208, line: 884, column: 23)
!14117 = !DILocation(line: 885, column: 4, scope: !14116)
!14118 = !DILocation(line: 886, column: 33, scope: !14116)
!14119 = !DILocation(line: 886, column: 10, scope: !14116)
!14120 = !DILocation(line: 887, column: 3, scope: !14116)
!14121 = !DILocation(line: 888, column: 2, scope: !14107)
!14122 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14123)
!14123 = distinct !DILocation(line: 881, column: 2, scope: !14105)
!14124 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14123)
!14125 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14123)
!14126 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14123)
!14127 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14123)
!14129 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14128)
!14130 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14128)
!14131 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14128)
!14132 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14128)
!14133 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14128)
!14134 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14128)
!14135 = distinct !{!14135, !14091, !14136}
!14136 = !DILocation(line: 888, column: 2, scope: !14090)
!14137 = !DILocation(line: 890, column: 9, scope: !14084)
!14138 = !DILocation(line: 890, column: 2, scope: !14084)
!14139 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3208, file: !3208, line: 893, type: !12171, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14140 = !DILocalVariable(name: "thread", arg: 1, scope: !14139, file: !3208, line: 893, type: !3109)
!14141 = !DILocation(line: 893, column: 39, scope: !14139)
!14142 = !DILocation(line: 895, column: 29, scope: !14139)
!14143 = !DILocation(line: 786, column: 64, scope: !13884, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 895, column: 2, scope: !14139)
!14145 = !DILocation(line: 788, column: 2, scope: !13888, inlinedAt: !14144)
!14146 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 788, column: 2, scope: !13888, inlinedAt: !14144)
!14148 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14147)
!14149 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14147)
!14150 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14147)
!14152 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14151)
!14153 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14151)
!14154 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14147)
!14155 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14147)
!14156 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14147)
!14157 = !DILocation(line: 788, column: 2, scope: !13903, inlinedAt: !14144)
!14158 = !DILocation(line: 789, column: 28, scope: !13905, inlinedAt: !14144)
!14159 = !DILocation(line: 789, column: 3, scope: !13905, inlinedAt: !14144)
!14160 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14161)
!14161 = distinct !DILocation(line: 788, column: 2, scope: !13903, inlinedAt: !14144)
!14162 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14161)
!14163 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14161)
!14164 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14161)
!14165 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14161)
!14167 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14166)
!14168 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14166)
!14169 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14166)
!14170 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14166)
!14171 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14166)
!14172 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14166)
!14173 = distinct !{!14173, !14145, !14174}
!14174 = !DILocation(line: 790, column: 2, scope: !13888, inlinedAt: !14144)
!14175 = !DILocation(line: 896, column: 31, scope: !14139)
!14176 = !DILocation(line: 896, column: 8, scope: !14139)
!14177 = !DILocation(line: 897, column: 1, scope: !14139)
!14178 = distinct !DISubprogram(name: "z_set_prio", scope: !3208, file: !3208, line: 902, type: !12840, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14179 = !DILocalVariable(name: "thread", arg: 1, scope: !14178, file: !3208, line: 902, type: !3109)
!14180 = !DILocation(line: 902, column: 34, scope: !14178)
!14181 = !DILocalVariable(name: "prio", arg: 2, scope: !14178, file: !3208, line: 902, type: !103)
!14182 = !DILocation(line: 902, column: 46, scope: !14178)
!14183 = !DILocalVariable(name: "need_sched", scope: !14178, file: !3208, line: 904, type: !1035)
!14184 = !DILocation(line: 904, column: 7, scope: !14178)
!14185 = !DILocalVariable(name: "__i", scope: !14186, file: !3208, line: 906, type: !12210)
!14186 = distinct !DILexicalBlock(scope: !14178, file: !3208, line: 906, column: 2)
!14187 = !DILocation(line: 906, column: 2, scope: !14186)
!14188 = !DILocalVariable(name: "__key", scope: !14186, file: !3208, line: 906, type: !12210)
!14189 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 906, column: 2, scope: !14186)
!14191 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14190)
!14192 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14190)
!14193 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14190)
!14195 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14194)
!14196 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14194)
!14197 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14190)
!14198 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14190)
!14199 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14190)
!14200 = !DILocation(line: 906, column: 2, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14186, file: !3208, line: 906, column: 2)
!14202 = !DILocation(line: 907, column: 34, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14201, file: !3208, line: 906, column: 26)
!14204 = !DILocation(line: 907, column: 16, scope: !14203)
!14205 = !DILocation(line: 907, column: 14, scope: !14203)
!14206 = !DILocation(line: 909, column: 7, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14203, file: !3208, line: 909, column: 7)
!14208 = !DILocation(line: 909, column: 7, scope: !14203)
!14209 = !DILocation(line: 912, column: 20, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !3208, line: 911, column: 63)
!14211 = distinct !DILexicalBlock(scope: !14212, file: !3208, line: 911, column: 8)
!14212 = distinct !DILexicalBlock(scope: !14207, file: !3208, line: 909, column: 19)
!14213 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 912, column: 5, scope: !14210)
!14215 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !14214)
!14216 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !14214)
!14217 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !14214)
!14218 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !14214)
!14219 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !14214)
!14220 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !14214)
!14221 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !14214)
!14222 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !14214)
!14223 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !14214)
!14225 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !14224)
!14226 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !14227)
!14227 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !14224)
!14228 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !14224)
!14229 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !14224)
!14230 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !14224)
!14231 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !14214)
!14232 = !DILocation(line: 913, column: 25, scope: !14210)
!14233 = !DILocation(line: 913, column: 5, scope: !14210)
!14234 = !DILocation(line: 913, column: 13, scope: !14210)
!14235 = !DILocation(line: 913, column: 18, scope: !14210)
!14236 = !DILocation(line: 913, column: 23, scope: !14210)
!14237 = !DILocation(line: 914, column: 18, scope: !14210)
!14238 = !DILocation(line: 250, column: 57, scope: !12648, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 914, column: 5, scope: !14210)
!14240 = !DILocation(line: 252, column: 2, scope: !12648, inlinedAt: !14239)
!14241 = !DILocation(line: 252, column: 10, scope: !12648, inlinedAt: !14239)
!14242 = !DILocation(line: 252, column: 15, scope: !12648, inlinedAt: !14239)
!14243 = !DILocation(line: 252, column: 28, scope: !12648, inlinedAt: !14239)
!14244 = !DILocation(line: 253, column: 26, scope: !12656, inlinedAt: !14239)
!14245 = !DILocation(line: 253, column: 6, scope: !12656, inlinedAt: !14239)
!14246 = !DILocation(line: 253, column: 6, scope: !12648, inlinedAt: !14239)
!14247 = !DILocation(line: 254, column: 12, scope: !12660, inlinedAt: !14239)
!14248 = !DILocation(line: 227, column: 53, scope: !12662, inlinedAt: !14249)
!14249 = distinct !DILocation(line: 254, column: 3, scope: !12660, inlinedAt: !14239)
!14250 = !DILocation(line: 229, column: 28, scope: !12662, inlinedAt: !14249)
!14251 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !14252)
!14252 = distinct !DILocation(line: 229, column: 16, scope: !12662, inlinedAt: !14249)
!14253 = !DILocation(line: 229, column: 37, scope: !12662, inlinedAt: !14249)
!14254 = !DILocation(line: 181, column: 56, scope: !12670, inlinedAt: !14255)
!14255 = distinct !DILocation(line: 229, column: 2, scope: !12662, inlinedAt: !14249)
!14256 = !DILocation(line: 182, column: 25, scope: !12670, inlinedAt: !14255)
!14257 = !DILocation(line: 184, column: 19, scope: !12670, inlinedAt: !14255)
!14258 = !DILocation(line: 188, column: 2, scope: !12681, inlinedAt: !14255)
!14259 = !DILocation(line: 188, column: 2, scope: !12683, inlinedAt: !14255)
!14260 = !DILocation(line: 189, column: 24, scope: !12685, inlinedAt: !14255)
!14261 = !DILocation(line: 189, column: 32, scope: !12685, inlinedAt: !14255)
!14262 = !DILocation(line: 189, column: 7, scope: !12685, inlinedAt: !14255)
!14263 = !DILocation(line: 189, column: 35, scope: !12685, inlinedAt: !14255)
!14264 = !DILocation(line: 189, column: 7, scope: !12686, inlinedAt: !14255)
!14265 = !DILocation(line: 190, column: 22, scope: !12692, inlinedAt: !14255)
!14266 = !DILocation(line: 190, column: 25, scope: !12692, inlinedAt: !14255)
!14267 = !DILocation(line: 190, column: 30, scope: !12692, inlinedAt: !14255)
!14268 = !DILocation(line: 191, column: 8, scope: !12692, inlinedAt: !14255)
!14269 = !DILocation(line: 191, column: 16, scope: !12692, inlinedAt: !14255)
!14270 = !DILocation(line: 191, column: 21, scope: !12692, inlinedAt: !14255)
!14271 = !DILocation(line: 190, column: 4, scope: !12692, inlinedAt: !14255)
!14272 = !DILocation(line: 192, column: 4, scope: !12692, inlinedAt: !14255)
!14273 = distinct !{!14273, !14258, !14274}
!14274 = !DILocation(line: 194, column: 2, scope: !12681, inlinedAt: !14255)
!14275 = !DILocation(line: 196, column: 19, scope: !12670, inlinedAt: !14255)
!14276 = !DILocation(line: 196, column: 24, scope: !12670, inlinedAt: !14255)
!14277 = !DILocation(line: 196, column: 32, scope: !12670, inlinedAt: !14255)
!14278 = !DILocation(line: 196, column: 37, scope: !12670, inlinedAt: !14255)
!14279 = !DILocation(line: 196, column: 2, scope: !12670, inlinedAt: !14255)
!14280 = !DILocation(line: 197, column: 1, scope: !12670, inlinedAt: !14255)
!14281 = !DILocation(line: 255, column: 2, scope: !12660, inlinedAt: !14239)
!14282 = !DILocation(line: 918, column: 4, scope: !14212)
!14283 = !DILocation(line: 919, column: 3, scope: !14212)
!14284 = !DILocation(line: 920, column: 24, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14207, file: !3208, line: 919, column: 10)
!14286 = !DILocation(line: 920, column: 4, scope: !14285)
!14287 = !DILocation(line: 920, column: 12, scope: !14285)
!14288 = !DILocation(line: 920, column: 17, scope: !14285)
!14289 = !DILocation(line: 920, column: 22, scope: !14285)
!14290 = !DILocation(line: 922, column: 2, scope: !14203)
!14291 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14292)
!14292 = distinct !DILocation(line: 906, column: 2, scope: !14201)
!14293 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14292)
!14294 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14292)
!14295 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14292)
!14296 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14297)
!14297 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14292)
!14298 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14297)
!14299 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14297)
!14300 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14297)
!14301 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14297)
!14302 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14297)
!14303 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14297)
!14304 = distinct !{!14304, !14187, !14305}
!14305 = !DILocation(line: 922, column: 2, scope: !14186)
!14306 = !DILocation(line: 924, column: 2, scope: !14178)
!14307 = !DILocation(line: 924, column: 2, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14178, file: !3208, line: 924, column: 2)
!14309 = !DILocation(line: 926, column: 9, scope: !14178)
!14310 = !DILocation(line: 926, column: 2, scope: !14178)
!14311 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3208, file: !3208, line: 929, type: !14312, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{null, !3109, !103}
!14314 = !DILocalVariable(name: "thread", arg: 1, scope: !14311, file: !3208, line: 929, type: !3109)
!14315 = !DILocation(line: 929, column: 45, scope: !14311)
!14316 = !DILocalVariable(name: "prio", arg: 2, scope: !14311, file: !3208, line: 929, type: !103)
!14317 = !DILocation(line: 929, column: 57, scope: !14311)
!14318 = !DILocalVariable(name: "need_sched", scope: !14311, file: !3208, line: 931, type: !1035)
!14319 = !DILocation(line: 931, column: 7, scope: !14311)
!14320 = !DILocation(line: 931, column: 31, scope: !14311)
!14321 = !DILocation(line: 931, column: 39, scope: !14311)
!14322 = !DILocation(line: 931, column: 20, scope: !14311)
!14323 = !DILocation(line: 933, column: 2, scope: !14311)
!14324 = !DILocation(line: 935, column: 6, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14311, file: !3208, line: 935, column: 6)
!14326 = !DILocation(line: 935, column: 17, scope: !14325)
!14327 = !DILocation(line: 935, column: 20, scope: !14325)
!14328 = !DILocation(line: 935, column: 30, scope: !14325)
!14329 = !DILocation(line: 935, column: 35, scope: !14325)
!14330 = !DILocation(line: 935, column: 48, scope: !14325)
!14331 = !DILocation(line: 935, column: 6, scope: !14311)
!14332 = !DILocation(line: 936, column: 3, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14325, file: !3208, line: 935, column: 55)
!14334 = !DILocation(line: 937, column: 2, scope: !14333)
!14335 = !DILocation(line: 938, column: 1, scope: !14311)
!14336 = distinct !DISubprogram(name: "k_sched_lock", scope: !3208, file: !3208, line: 987, type: !253, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14337 = !DILocalVariable(name: "__i", scope: !14338, file: !3208, line: 989, type: !12210)
!14338 = distinct !DILexicalBlock(scope: !14336, file: !3208, line: 989, column: 2)
!14339 = !DILocation(line: 989, column: 2, scope: !14338)
!14340 = !DILocalVariable(name: "__key", scope: !14338, file: !3208, line: 989, type: !12210)
!14341 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14342)
!14342 = distinct !DILocation(line: 989, column: 2, scope: !14338)
!14343 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14342)
!14344 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14342)
!14345 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14346)
!14346 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14342)
!14347 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14346)
!14348 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14346)
!14349 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14342)
!14350 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14342)
!14351 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14342)
!14352 = !DILocation(line: 989, column: 2, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14338, file: !3208, line: 989, column: 2)
!14354 = !DILocation(line: 990, column: 3, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14353, file: !3208, line: 989, column: 26)
!14356 = !DILocation(line: 990, column: 3, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14355, file: !3208, line: 990, column: 3)
!14358 = !DILocation(line: 992, column: 3, scope: !14355)
!14359 = !DILocation(line: 993, column: 2, scope: !14355)
!14360 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14361)
!14361 = distinct !DILocation(line: 989, column: 2, scope: !14353)
!14362 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14361)
!14363 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14361)
!14364 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14361)
!14365 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14366)
!14366 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14361)
!14367 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14366)
!14368 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14366)
!14369 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14366)
!14370 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14366)
!14371 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14366)
!14372 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14366)
!14373 = distinct !{!14373, !14339, !14374}
!14374 = !DILocation(line: 993, column: 2, scope: !14338)
!14375 = !DILocation(line: 994, column: 1, scope: !14336)
!14376 = distinct !DISubprogram(name: "z_sched_lock", scope: !11037, file: !11037, line: 251, type: !253, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14377 = !DILocation(line: 256, column: 4, scope: !14376)
!14378 = !DILocation(line: 256, column: 14, scope: !14376)
!14379 = !DILocation(line: 256, column: 19, scope: !14376)
!14380 = !DILocation(line: 256, column: 2, scope: !14376)
!14381 = !DILocation(line: 258, column: 2, scope: !14376)
!14382 = !DILocation(line: 258, column: 2, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14376, file: !11037, line: 258, column: 2)
!14384 = !{i64 2151405059}
!14385 = !DILocation(line: 259, column: 1, scope: !14376)
!14386 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3208, file: !3208, line: 996, type: !253, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14387 = !DILocalVariable(name: "__i", scope: !14388, file: !3208, line: 998, type: !12210)
!14388 = distinct !DILexicalBlock(scope: !14386, file: !3208, line: 998, column: 2)
!14389 = !DILocation(line: 998, column: 2, scope: !14388)
!14390 = !DILocalVariable(name: "__key", scope: !14388, file: !3208, line: 998, type: !12210)
!14391 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14392)
!14392 = distinct !DILocation(line: 998, column: 2, scope: !14388)
!14393 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14392)
!14394 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14392)
!14395 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14396)
!14396 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14392)
!14397 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14396)
!14398 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14396)
!14399 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14392)
!14400 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14392)
!14401 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14392)
!14402 = !DILocation(line: 998, column: 2, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14388, file: !3208, line: 998, column: 2)
!14404 = !DILocation(line: 1002, column: 5, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14403, file: !3208, line: 998, column: 26)
!14406 = !DILocation(line: 1002, column: 15, scope: !14405)
!14407 = !DILocation(line: 1002, column: 20, scope: !14405)
!14408 = !DILocation(line: 1002, column: 3, scope: !14405)
!14409 = !DILocation(line: 1003, column: 3, scope: !14405)
!14410 = !DILocation(line: 1004, column: 2, scope: !14405)
!14411 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 998, column: 2, scope: !14403)
!14413 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !14412)
!14414 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !14412)
!14415 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !14412)
!14416 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !14412)
!14418 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !14417)
!14419 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !14417)
!14420 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !14417)
!14421 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !14417)
!14422 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !14417)
!14423 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !14417)
!14424 = distinct !{!14424, !14389, !14425}
!14425 = !DILocation(line: 1004, column: 2, scope: !14388)
!14426 = !DILocation(line: 1006, column: 2, scope: !14386)
!14427 = !DILocation(line: 1006, column: 2, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !3208, line: 1006, column: 2)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !3208, line: 1006, column: 2)
!14430 = distinct !DILexicalBlock(scope: !14386, file: !3208, line: 1006, column: 2)
!14431 = !DILocation(line: 1009, column: 2, scope: !14386)
!14432 = !DILocation(line: 1009, column: 2, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14386, file: !3208, line: 1009, column: 2)
!14434 = !DILocation(line: 1011, column: 2, scope: !14386)
!14435 = !DILocation(line: 1012, column: 1, scope: !14386)
!14436 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3208, file: !3208, line: 1014, type: !12822, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14437 = !DILocation(line: 1028, column: 25, scope: !14436)
!14438 = !DILocation(line: 1028, column: 2, scope: !14436)
!14439 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3208, file: !3208, line: 1155, type: !14440, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!1035, !3138, !3138}
!14442 = !DILocalVariable(name: "a", arg: 1, scope: !14439, file: !3208, line: 1155, type: !3138)
!14443 = !DILocation(line: 1155, column: 40, scope: !14439)
!14444 = !DILocalVariable(name: "b", arg: 2, scope: !14439, file: !3208, line: 1155, type: !3138)
!14445 = !DILocation(line: 1155, column: 58, scope: !14439)
!14446 = !DILocalVariable(name: "thread_a", scope: !14439, file: !3208, line: 1157, type: !3109)
!14447 = !DILocation(line: 1157, column: 19, scope: !14439)
!14448 = !DILocalVariable(name: "thread_b", scope: !14439, file: !3208, line: 1157, type: !3109)
!14449 = !DILocation(line: 1157, column: 30, scope: !14439)
!14450 = !DILocalVariable(name: "cmp", scope: !14439, file: !3208, line: 1158, type: !250)
!14451 = !DILocation(line: 1158, column: 10, scope: !14439)
!14452 = !DILocation(line: 1160, column: 13, scope: !14439)
!14453 = !DILocation(line: 1160, column: 11, scope: !14439)
!14454 = !DILocation(line: 1161, column: 13, scope: !14439)
!14455 = !DILocation(line: 1161, column: 11, scope: !14439)
!14456 = !DILocation(line: 1163, column: 25, scope: !14439)
!14457 = !DILocation(line: 1163, column: 35, scope: !14439)
!14458 = !DILocation(line: 1163, column: 8, scope: !14439)
!14459 = !DILocation(line: 1163, column: 6, scope: !14439)
!14460 = !DILocation(line: 1165, column: 6, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14439, file: !3208, line: 1165, column: 6)
!14462 = !DILocation(line: 1165, column: 10, scope: !14461)
!14463 = !DILocation(line: 1165, column: 6, scope: !14439)
!14464 = !DILocation(line: 1166, column: 3, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14461, file: !3208, line: 1165, column: 15)
!14466 = !DILocation(line: 1167, column: 13, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14461, file: !3208, line: 1167, column: 13)
!14468 = !DILocation(line: 1167, column: 17, scope: !14467)
!14469 = !DILocation(line: 1167, column: 13, scope: !14461)
!14470 = !DILocation(line: 1168, column: 3, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14467, file: !3208, line: 1167, column: 22)
!14472 = !DILocation(line: 1170, column: 10, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14467, file: !3208, line: 1169, column: 9)
!14474 = !DILocation(line: 1170, column: 20, scope: !14473)
!14475 = !DILocation(line: 1170, column: 25, scope: !14473)
!14476 = !DILocation(line: 1170, column: 37, scope: !14473)
!14477 = !DILocation(line: 1170, column: 47, scope: !14473)
!14478 = !DILocation(line: 1170, column: 52, scope: !14473)
!14479 = !DILocation(line: 1170, column: 35, scope: !14473)
!14480 = !DILocation(line: 1170, column: 3, scope: !14473)
!14481 = !DILocation(line: 1173, column: 1, scope: !14439)
!14482 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3208, file: !3208, line: 1175, type: !14483, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{null, !14485, !3109}
!14485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14486, size: 32)
!14486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14487, line: 37, size: 128, elements: !14488)
!14487 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14488 = !{!14489, !14497}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14486, file: !14487, line: 38, baseType: !14490, size: 96)
!14490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !140, line: 83, size: 96, elements: !14491)
!14491 = !{!14492, !14493, !14496}
!14492 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14490, file: !140, line: 84, baseType: !3138, size: 32)
!14493 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14490, file: !140, line: 85, baseType: !14494, size: 32, offset: 32)
!14494 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !140, line: 81, baseType: !14495)
!14495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14440, size: 32)
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14490, file: !140, line: 86, baseType: !103, size: 32, offset: 64)
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14486, file: !14487, line: 39, baseType: !103, size: 32, offset: 96)
!14498 = !DILocalVariable(name: "pq", arg: 1, scope: !14482, file: !3208, line: 1175, type: !14485)
!14499 = !DILocation(line: 1175, column: 37, scope: !14482)
!14500 = !DILocalVariable(name: "thread", arg: 2, scope: !14482, file: !3208, line: 1175, type: !3109)
!14501 = !DILocation(line: 1175, column: 58, scope: !14482)
!14502 = !DILocalVariable(name: "t", scope: !14482, file: !3208, line: 1177, type: !3109)
!14503 = !DILocation(line: 1177, column: 19, scope: !14482)
!14504 = !DILocation(line: 1181, column: 27, scope: !14482)
!14505 = !DILocation(line: 1181, column: 31, scope: !14482)
!14506 = !DILocation(line: 1181, column: 45, scope: !14482)
!14507 = !DILocation(line: 1181, column: 2, scope: !14482)
!14508 = !DILocation(line: 1181, column: 10, scope: !14482)
!14509 = !DILocation(line: 1181, column: 15, scope: !14482)
!14510 = !DILocation(line: 1181, column: 25, scope: !14482)
!14511 = !DILocation(line: 1189, column: 7, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14482, file: !3208, line: 1189, column: 6)
!14513 = !DILocation(line: 1189, column: 11, scope: !14512)
!14514 = !DILocation(line: 1189, column: 6, scope: !14482)
!14515 = !DILocalVariable(name: "__f", scope: !14516, file: !3208, line: 1190, type: !14518)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !3208, line: 1190, column: 3)
!14517 = distinct !DILexicalBlock(scope: !14512, file: !3208, line: 1189, column: 27)
!14518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !140, line: 155, size: 96, elements: !14519)
!14519 = !{!14520, !14521, !14522}
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14518, file: !140, line: 156, baseType: !3203, size: 32)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14518, file: !140, line: 157, baseType: !1686, size: 32, offset: 32)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14518, file: !140, line: 158, baseType: !250, size: 32, offset: 64)
!14523 = !DILocation(line: 1190, column: 3, scope: !14516)
!14524 = !DILocalVariable(name: "n", scope: !14525, file: !3208, line: 1190, type: !3138)
!14525 = distinct !DILexicalBlock(scope: !14526, file: !3208, line: 1190, column: 3)
!14526 = distinct !DILexicalBlock(scope: !14516, file: !3208, line: 1190, column: 3)
!14527 = !DILocation(line: 1190, column: 3, scope: !14525)
!14528 = !DILocation(line: 1190, column: 3, scope: !14526)
!14529 = !DILocation(line: 1191, column: 24, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14526, file: !3208, line: 1190, column: 54)
!14531 = !DILocation(line: 1191, column: 28, scope: !14530)
!14532 = !DILocation(line: 1191, column: 42, scope: !14530)
!14533 = !DILocation(line: 1191, column: 4, scope: !14530)
!14534 = !DILocation(line: 1191, column: 7, scope: !14530)
!14535 = !DILocation(line: 1191, column: 12, scope: !14530)
!14536 = !DILocation(line: 1191, column: 22, scope: !14530)
!14537 = distinct !{!14537, !14523, !14538}
!14538 = !DILocation(line: 1192, column: 3, scope: !14516)
!14539 = !DILocation(line: 1193, column: 2, scope: !14517)
!14540 = !DILocation(line: 1195, column: 13, scope: !14482)
!14541 = !DILocation(line: 1195, column: 17, scope: !14482)
!14542 = !DILocation(line: 1195, column: 24, scope: !14482)
!14543 = !DILocation(line: 1195, column: 32, scope: !14482)
!14544 = !DILocation(line: 1195, column: 37, scope: !14482)
!14545 = !DILocation(line: 1195, column: 2, scope: !14482)
!14546 = !DILocation(line: 1196, column: 1, scope: !14482)
!14547 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3208, file: !3208, line: 1198, type: !14483, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14548 = !DILocalVariable(name: "pq", arg: 1, scope: !14547, file: !3208, line: 1198, type: !14485)
!14549 = !DILocation(line: 1198, column: 40, scope: !14547)
!14550 = !DILocalVariable(name: "thread", arg: 2, scope: !14547, file: !3208, line: 1198, type: !3109)
!14551 = !DILocation(line: 1198, column: 61, scope: !14547)
!14552 = !DILocation(line: 1202, column: 13, scope: !14547)
!14553 = !DILocation(line: 1202, column: 17, scope: !14547)
!14554 = !DILocation(line: 1202, column: 24, scope: !14547)
!14555 = !DILocation(line: 1202, column: 32, scope: !14547)
!14556 = !DILocation(line: 1202, column: 37, scope: !14547)
!14557 = !DILocation(line: 1202, column: 2, scope: !14547)
!14558 = !DILocation(line: 1204, column: 7, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14547, file: !3208, line: 1204, column: 6)
!14560 = !DILocation(line: 1204, column: 11, scope: !14559)
!14561 = !DILocation(line: 1204, column: 16, scope: !14559)
!14562 = !DILocation(line: 1204, column: 6, scope: !14547)
!14563 = !DILocation(line: 1205, column: 3, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14559, file: !3208, line: 1204, column: 22)
!14565 = !DILocation(line: 1205, column: 7, scope: !14564)
!14566 = !DILocation(line: 1205, column: 22, scope: !14564)
!14567 = !DILocation(line: 1206, column: 2, scope: !14564)
!14568 = !DILocation(line: 1207, column: 1, scope: !14547)
!14569 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3208, file: !3208, line: 1209, type: !14570, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!3109, !14485}
!14572 = !DILocalVariable(name: "pq", arg: 1, scope: !14569, file: !3208, line: 1209, type: !14485)
!14573 = !DILocation(line: 1209, column: 50, scope: !14569)
!14574 = !DILocalVariable(name: "thread", scope: !14569, file: !3208, line: 1211, type: !3109)
!14575 = !DILocation(line: 1211, column: 19, scope: !14569)
!14576 = !DILocalVariable(name: "n", scope: !14569, file: !3208, line: 1212, type: !3138)
!14577 = !DILocation(line: 1212, column: 17, scope: !14569)
!14578 = !DILocation(line: 1212, column: 33, scope: !14569)
!14579 = !DILocation(line: 1212, column: 37, scope: !14569)
!14580 = !DILocation(line: 1212, column: 21, scope: !14569)
!14581 = !DILocation(line: 1214, column: 6, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14569, file: !3208, line: 1214, column: 6)
!14583 = !DILocation(line: 1214, column: 8, scope: !14582)
!14584 = !DILocation(line: 1214, column: 6, scope: !14569)
!14585 = !DILocation(line: 1215, column: 12, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14582, file: !3208, line: 1214, column: 17)
!14587 = !DILocation(line: 1215, column: 10, scope: !14586)
!14588 = !DILocation(line: 1216, column: 2, scope: !14586)
!14589 = !DILocation(line: 1217, column: 9, scope: !14569)
!14590 = !DILocation(line: 1217, column: 2, scope: !14569)
!14591 = distinct !DISubprogram(name: "rb_get_min", scope: !140, file: !140, line: 115, type: !14592, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{!3138, !14594}
!14594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14490, size: 32)
!14595 = !DILocalVariable(name: "tree", arg: 1, scope: !14591, file: !140, line: 115, type: !14594)
!14596 = !DILocation(line: 115, column: 56, scope: !14591)
!14597 = !DILocation(line: 117, column: 25, scope: !14591)
!14598 = !DILocation(line: 117, column: 9, scope: !14591)
!14599 = !DILocation(line: 117, column: 2, scope: !14591)
!14600 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3208, file: !3208, line: 1246, type: !14601, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{!3109, !14603}
!14603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14604, size: 32)
!14604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14487, line: 53, size: 2080, elements: !14605)
!14605 = !{!14606, !14608}
!14606 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14604, file: !14487, line: 54, baseType: !14607, size: 2048)
!14607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3145, size: 2048, elements: !2744)
!14608 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14604, file: !14487, line: 55, baseType: !32, size: 32, offset: 2048)
!14609 = !DILocalVariable(name: "pq", arg: 1, scope: !14600, file: !3208, line: 1246, type: !14603)
!14610 = !DILocation(line: 1246, column: 50, scope: !14600)
!14611 = !DILocation(line: 1248, column: 7, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14600, file: !3208, line: 1248, column: 6)
!14613 = !DILocation(line: 1248, column: 11, scope: !14612)
!14614 = !DILocation(line: 1248, column: 6, scope: !14600)
!14615 = !DILocation(line: 1249, column: 3, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14612, file: !3208, line: 1248, column: 20)
!14617 = !DILocalVariable(name: "thread", scope: !14600, file: !3208, line: 1252, type: !3109)
!14618 = !DILocation(line: 1252, column: 19, scope: !14600)
!14619 = !DILocalVariable(name: "l", scope: !14600, file: !3208, line: 1253, type: !12673)
!14620 = !DILocation(line: 1253, column: 15, scope: !14600)
!14621 = !DILocation(line: 1253, column: 20, scope: !14600)
!14622 = !DILocation(line: 1253, column: 24, scope: !14600)
!14623 = !DILocation(line: 1253, column: 45, scope: !14600)
!14624 = !DILocation(line: 1253, column: 49, scope: !14600)
!14625 = !DILocation(line: 1253, column: 31, scope: !14600)
!14626 = !DILocalVariable(name: "n", scope: !14600, file: !3208, line: 1254, type: !3204)
!14627 = !DILocation(line: 1254, column: 15, scope: !14600)
!14628 = !DILocation(line: 1254, column: 39, scope: !14600)
!14629 = !DILocation(line: 1254, column: 19, scope: !14600)
!14630 = !DILocation(line: 1256, column: 6, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14600, file: !3208, line: 1256, column: 6)
!14632 = !DILocation(line: 1256, column: 8, scope: !14631)
!14633 = !DILocation(line: 1256, column: 6, scope: !14600)
!14634 = !DILocation(line: 1257, column: 12, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14631, file: !3208, line: 1256, column: 17)
!14636 = !DILocation(line: 1257, column: 10, scope: !14635)
!14637 = !DILocation(line: 1258, column: 2, scope: !14635)
!14638 = !DILocation(line: 1259, column: 9, scope: !14600)
!14639 = !DILocation(line: 1259, column: 2, scope: !14600)
!14640 = !DILocation(line: 1260, column: 1, scope: !14600)
!14641 = distinct !DISubprogram(name: "z_unpend_all", scope: !3208, file: !3208, line: 1262, type: !14642, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!103, !3140}
!14644 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14641, file: !3208, line: 1262, type: !3140)
!14645 = !DILocation(line: 1262, column: 29, scope: !14641)
!14646 = !DILocalVariable(name: "need_sched", scope: !14641, file: !3208, line: 1264, type: !103)
!14647 = !DILocation(line: 1264, column: 6, scope: !14641)
!14648 = !DILocalVariable(name: "thread", scope: !14641, file: !3208, line: 1265, type: !3109)
!14649 = !DILocation(line: 1265, column: 19, scope: !14641)
!14650 = !DILocation(line: 1267, column: 2, scope: !14641)
!14651 = !DILocation(line: 1267, column: 32, scope: !14641)
!14652 = !DILocation(line: 1267, column: 19, scope: !14641)
!14653 = !DILocation(line: 1267, column: 17, scope: !14641)
!14654 = !DILocation(line: 1267, column: 41, scope: !14641)
!14655 = !DILocation(line: 1268, column: 19, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14641, file: !3208, line: 1267, column: 50)
!14657 = !DILocation(line: 1268, column: 3, scope: !14656)
!14658 = !DILocation(line: 1269, column: 18, scope: !14656)
!14659 = !DILocation(line: 1269, column: 3, scope: !14656)
!14660 = !DILocation(line: 1270, column: 14, scope: !14656)
!14661 = distinct !{!14661, !14650, !14662}
!14662 = !DILocation(line: 1271, column: 2, scope: !14641)
!14663 = !DILocation(line: 1273, column: 9, scope: !14641)
!14664 = !DILocation(line: 1273, column: 2, scope: !14641)
!14665 = distinct !DISubprogram(name: "z_waitq_head", scope: !11538, file: !11538, line: 52, type: !14030, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14666 = !DILocalVariable(name: "w", arg: 1, scope: !14665, file: !11538, line: 52, type: !3140)
!14667 = !DILocation(line: 52, column: 56, scope: !14665)
!14668 = !DILocation(line: 54, column: 49, scope: !14665)
!14669 = !DILocation(line: 54, column: 52, scope: !14665)
!14670 = !DILocation(line: 54, column: 28, scope: !14665)
!14671 = !DILocation(line: 54, column: 9, scope: !14665)
!14672 = !DILocation(line: 54, column: 2, scope: !14665)
!14673 = distinct !DISubprogram(name: "init_ready_q", scope: !3208, file: !3208, line: 1276, type: !14674, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14674 = !DISubroutineType(types: !14675)
!14675 = !{null, !14676}
!14676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14677, size: 32)
!14677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !14678)
!14678 = !{!14679, !14680}
!14679 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14677, file: !150, line: 86, baseType: !3109, size: 32)
!14680 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14677, file: !150, line: 90, baseType: !3145, size: 64, offset: 32)
!14681 = !DILocalVariable(name: "rq", arg: 1, scope: !14673, file: !3208, line: 1276, type: !14676)
!14682 = !DILocation(line: 1276, column: 36, scope: !14673)
!14683 = !DILocation(line: 1289, column: 18, scope: !14673)
!14684 = !DILocation(line: 1289, column: 22, scope: !14673)
!14685 = !DILocation(line: 1289, column: 2, scope: !14673)
!14686 = !DILocation(line: 1291, column: 1, scope: !14673)
!14687 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !14688, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{null, !12673}
!14690 = !DILocalVariable(name: "list", arg: 1, scope: !14687, file: !124, line: 197, type: !12673)
!14691 = !DILocation(line: 197, column: 48, scope: !14687)
!14692 = !DILocation(line: 199, column: 30, scope: !14687)
!14693 = !DILocation(line: 199, column: 2, scope: !14687)
!14694 = !DILocation(line: 199, column: 8, scope: !14687)
!14695 = !DILocation(line: 199, column: 13, scope: !14687)
!14696 = !DILocation(line: 200, column: 30, scope: !14687)
!14697 = !DILocation(line: 200, column: 2, scope: !14687)
!14698 = !DILocation(line: 200, column: 8, scope: !14687)
!14699 = !DILocation(line: 200, column: 13, scope: !14687)
!14700 = !DILocation(line: 201, column: 1, scope: !14687)
!14701 = distinct !DISubprogram(name: "z_sched_init", scope: !3208, file: !3208, line: 1293, type: !253, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14702 = !DILocation(line: 1302, column: 2, scope: !14701)
!14703 = !DILocation(line: 1306, column: 2, scope: !14701)
!14704 = !DILocation(line: 1309, column: 1, scope: !14701)
!14705 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3208, file: !3208, line: 1311, type: !14706, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14706 = !DISubroutineType(types: !14707)
!14707 = !{!103, !14708}
!14708 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3109)
!14709 = !DILocalVariable(name: "thread", arg: 1, scope: !14705, file: !3208, line: 1311, type: !14708)
!14710 = !DILocation(line: 1311, column: 42, scope: !14705)
!14711 = !DILocation(line: 1313, column: 9, scope: !14705)
!14712 = !DILocation(line: 1313, column: 17, scope: !14705)
!14713 = !DILocation(line: 1313, column: 22, scope: !14705)
!14714 = !DILocation(line: 1313, column: 2, scope: !14705)
!14715 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3208, file: !3208, line: 1325, type: !14716, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14716 = !DISubroutineType(types: !14717)
!14717 = !{null, !14708, !103}
!14718 = !DILocalVariable(name: "thread", arg: 1, scope: !14715, file: !3208, line: 1325, type: !14708)
!14719 = !DILocation(line: 1325, column: 43, scope: !14715)
!14720 = !DILocalVariable(name: "prio", arg: 2, scope: !14715, file: !3208, line: 1325, type: !103)
!14721 = !DILocation(line: 1325, column: 55, scope: !14715)
!14722 = !DILocation(line: 1331, column: 2, scope: !14715)
!14723 = !DILocation(line: 1331, column: 2, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14715, file: !3208, line: 1331, column: 2)
!14725 = !DILocalVariable(name: "th", scope: !14715, file: !3208, line: 1334, type: !3109)
!14726 = !DILocation(line: 1334, column: 19, scope: !14715)
!14727 = !DILocation(line: 1334, column: 43, scope: !14715)
!14728 = !DILocation(line: 1336, column: 24, scope: !14715)
!14729 = !DILocation(line: 1336, column: 28, scope: !14715)
!14730 = !DILocation(line: 1336, column: 2, scope: !14715)
!14731 = !DILocation(line: 1337, column: 1, scope: !14715)
!14732 = distinct !DISubprogram(name: "k_can_yield", scope: !3208, file: !3208, line: 1384, type: !3759, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14733 = !DILocation(line: 1386, column: 11, scope: !14732)
!14734 = !DILocation(line: 1386, column: 29, scope: !14732)
!14735 = !DILocation(line: 1386, column: 32, scope: !14732)
!14736 = !DILocation(line: 1386, column: 46, scope: !14732)
!14737 = !DILocation(line: 1387, column: 28, scope: !14732)
!14738 = !DILocation(line: 1387, column: 4, scope: !14732)
!14739 = !DILocation(line: 1386, column: 9, scope: !14732)
!14740 = !DILocation(line: 1386, column: 2, scope: !14732)
!14741 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !3759, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14742 = !DILocation(line: 993, column: 10, scope: !14741)
!14743 = !DILocation(line: 993, column: 9, scope: !14741)
!14744 = !DILocation(line: 993, column: 2, scope: !14741)
!14745 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3208, file: !3208, line: 1390, type: !253, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14746 = !DILocation(line: 1394, column: 2, scope: !14745)
!14747 = !DILocation(line: 1394, column: 2, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14745, file: !3208, line: 1394, column: 2)
!14749 = !DILocalVariable(name: "key", scope: !14745, file: !3208, line: 1396, type: !12210)
!14750 = !DILocation(line: 1396, column: 19, scope: !14745)
!14751 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 1396, column: 25, scope: !14745)
!14753 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14752)
!14754 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14752)
!14755 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14752)
!14757 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14756)
!14758 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14756)
!14759 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14752)
!14760 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14752)
!14761 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14752)
!14762 = !DILocation(line: 1396, column: 25, scope: !14745)
!14763 = !DILocation(line: 1400, column: 18, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14765, file: !3208, line: 1399, column: 36)
!14765 = distinct !DILexicalBlock(scope: !14745, file: !3208, line: 1398, column: 6)
!14766 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 1400, column: 3, scope: !14764)
!14768 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !14767)
!14769 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !14767)
!14770 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !14767)
!14771 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !14767)
!14772 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !14767)
!14773 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !14767)
!14774 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !14767)
!14775 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !14767)
!14776 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !14777)
!14777 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !14767)
!14778 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !14777)
!14779 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !14777)
!14781 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !14777)
!14782 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !14777)
!14783 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !14777)
!14784 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !14767)
!14785 = !DILocation(line: 1402, column: 15, scope: !14745)
!14786 = !DILocation(line: 250, column: 57, scope: !12648, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 1402, column: 2, scope: !14745)
!14788 = !DILocation(line: 252, column: 2, scope: !12648, inlinedAt: !14787)
!14789 = !DILocation(line: 252, column: 10, scope: !12648, inlinedAt: !14787)
!14790 = !DILocation(line: 252, column: 15, scope: !12648, inlinedAt: !14787)
!14791 = !DILocation(line: 252, column: 28, scope: !12648, inlinedAt: !14787)
!14792 = !DILocation(line: 253, column: 26, scope: !12656, inlinedAt: !14787)
!14793 = !DILocation(line: 253, column: 6, scope: !12656, inlinedAt: !14787)
!14794 = !DILocation(line: 253, column: 6, scope: !12648, inlinedAt: !14787)
!14795 = !DILocation(line: 254, column: 12, scope: !12660, inlinedAt: !14787)
!14796 = !DILocation(line: 227, column: 53, scope: !12662, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 254, column: 3, scope: !12660, inlinedAt: !14787)
!14798 = !DILocation(line: 229, column: 28, scope: !12662, inlinedAt: !14797)
!14799 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 229, column: 16, scope: !12662, inlinedAt: !14797)
!14801 = !DILocation(line: 229, column: 37, scope: !12662, inlinedAt: !14797)
!14802 = !DILocation(line: 181, column: 56, scope: !12670, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 229, column: 2, scope: !12662, inlinedAt: !14797)
!14804 = !DILocation(line: 182, column: 25, scope: !12670, inlinedAt: !14803)
!14805 = !DILocation(line: 184, column: 19, scope: !12670, inlinedAt: !14803)
!14806 = !DILocation(line: 188, column: 2, scope: !12681, inlinedAt: !14803)
!14807 = !DILocation(line: 188, column: 2, scope: !12683, inlinedAt: !14803)
!14808 = !DILocation(line: 189, column: 24, scope: !12685, inlinedAt: !14803)
!14809 = !DILocation(line: 189, column: 32, scope: !12685, inlinedAt: !14803)
!14810 = !DILocation(line: 189, column: 7, scope: !12685, inlinedAt: !14803)
!14811 = !DILocation(line: 189, column: 35, scope: !12685, inlinedAt: !14803)
!14812 = !DILocation(line: 189, column: 7, scope: !12686, inlinedAt: !14803)
!14813 = !DILocation(line: 190, column: 22, scope: !12692, inlinedAt: !14803)
!14814 = !DILocation(line: 190, column: 25, scope: !12692, inlinedAt: !14803)
!14815 = !DILocation(line: 190, column: 30, scope: !12692, inlinedAt: !14803)
!14816 = !DILocation(line: 191, column: 8, scope: !12692, inlinedAt: !14803)
!14817 = !DILocation(line: 191, column: 16, scope: !12692, inlinedAt: !14803)
!14818 = !DILocation(line: 191, column: 21, scope: !12692, inlinedAt: !14803)
!14819 = !DILocation(line: 190, column: 4, scope: !12692, inlinedAt: !14803)
!14820 = !DILocation(line: 192, column: 4, scope: !12692, inlinedAt: !14803)
!14821 = distinct !{!14821, !14806, !14822}
!14822 = !DILocation(line: 194, column: 2, scope: !12681, inlinedAt: !14803)
!14823 = !DILocation(line: 196, column: 19, scope: !12670, inlinedAt: !14803)
!14824 = !DILocation(line: 196, column: 24, scope: !12670, inlinedAt: !14803)
!14825 = !DILocation(line: 196, column: 32, scope: !12670, inlinedAt: !14803)
!14826 = !DILocation(line: 196, column: 37, scope: !12670, inlinedAt: !14803)
!14827 = !DILocation(line: 196, column: 2, scope: !12670, inlinedAt: !14803)
!14828 = !DILocation(line: 197, column: 1, scope: !12670, inlinedAt: !14803)
!14829 = !DILocation(line: 255, column: 2, scope: !12660, inlinedAt: !14787)
!14830 = !DILocation(line: 1403, column: 2, scope: !14745)
!14831 = !DILocation(line: 1404, column: 2, scope: !14745)
!14832 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 1404, column: 2, scope: !14745)
!14834 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !14833)
!14835 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !14833)
!14836 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !14833)
!14838 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !14837)
!14839 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !14833)
!14840 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !14833)
!14841 = !DILocation(line: 1405, column: 1, scope: !14745)
!14842 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3208, file: !3208, line: 1459, type: !14843, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!250, !13595}
!14845 = !DILocalVariable(name: "timeout", arg: 1, scope: !14842, file: !3208, line: 1459, type: !13595)
!14846 = !DILocation(line: 1459, column: 36, scope: !14842)
!14847 = !DILocalVariable(name: "ticks", scope: !14842, file: !3208, line: 1461, type: !2505)
!14848 = !DILocation(line: 1461, column: 12, scope: !14842)
!14849 = !DILocation(line: 1465, column: 2, scope: !14842)
!14850 = !DILocation(line: 1465, column: 2, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14842, file: !3208, line: 1465, column: 2)
!14852 = !DILocation(line: 1468, column: 6, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14842, file: !3208, line: 1468, column: 6)
!14854 = !DILocation(line: 1468, column: 6, scope: !14842)
!14855 = !DILocation(line: 1469, column: 20, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14853, file: !3208, line: 1468, column: 40)
!14857 = !DILocation(line: 1469, column: 3, scope: !14856)
!14858 = !DILocation(line: 1471, column: 3, scope: !14856)
!14859 = !DILocation(line: 1471, column: 3, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14856, file: !3208, line: 1471, column: 3)
!14861 = !DILocation(line: 1473, column: 3, scope: !14856)
!14862 = !DILocation(line: 1476, column: 18, scope: !14842)
!14863 = !DILocation(line: 1476, column: 8, scope: !14842)
!14864 = !DILocation(line: 1478, column: 23, scope: !14842)
!14865 = !DILocation(line: 1478, column: 10, scope: !14842)
!14866 = !DILocation(line: 1478, column: 8, scope: !14842)
!14867 = !DILocalVariable(name: "ret", scope: !14842, file: !3208, line: 1480, type: !250)
!14868 = !DILocation(line: 1480, column: 10, scope: !14842)
!14869 = !DILocation(line: 1480, column: 38, scope: !14842)
!14870 = !DILocation(line: 1480, column: 16, scope: !14842)
!14871 = !DILocation(line: 1482, column: 2, scope: !14842)
!14872 = !DILocation(line: 1482, column: 2, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14842, file: !3208, line: 1482, column: 2)
!14874 = !DILocation(line: 1484, column: 9, scope: !14842)
!14875 = !DILocation(line: 1484, column: 2, scope: !14842)
!14876 = !DILocation(line: 1485, column: 1, scope: !14842)
!14877 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3836, file: !3836, line: 310, type: !14878, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{null, !14708}
!14880 = !DILocalVariable(name: "thread", arg: 1, scope: !14877, file: !3836, line: 310, type: !14708)
!14881 = !DILocation(line: 310, column: 45, scope: !14877)
!14882 = !DILocation(line: 319, column: 2, scope: !14877)
!14883 = !DILocation(line: 319, column: 2, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14877, file: !3836, line: 319, column: 2)
!14885 = !{i64 2149655305}
!14886 = !DILocation(line: 320, column: 26, scope: !14877)
!14887 = !DILocation(line: 320, column: 2, scope: !14877)
!14888 = !DILocation(line: 321, column: 1, scope: !14877)
!14889 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3208, file: !3208, line: 1415, type: !14890, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14890 = !DISubroutineType(types: !14891)
!14891 = !{!250, !2505}
!14892 = !DILocalVariable(name: "ticks", arg: 1, scope: !14889, file: !3208, line: 1415, type: !2505)
!14893 = !DILocation(line: 1415, column: 39, scope: !14889)
!14894 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14889, file: !3208, line: 1418, type: !173)
!14895 = !DILocation(line: 1418, column: 11, scope: !14889)
!14896 = !DILocation(line: 1422, column: 2, scope: !14889)
!14897 = !DILocation(line: 1422, column: 2, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !3208, line: 1422, column: 2)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !3208, line: 1422, column: 2)
!14900 = distinct !DILexicalBlock(scope: !14889, file: !3208, line: 1422, column: 2)
!14901 = !DILocation(line: 1425, column: 6, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14889, file: !3208, line: 1425, column: 6)
!14903 = !DILocation(line: 1425, column: 12, scope: !14902)
!14904 = !DILocation(line: 1425, column: 6, scope: !14889)
!14905 = !DILocation(line: 1426, column: 3, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14902, file: !3208, line: 1425, column: 18)
!14907 = !DILocation(line: 1427, column: 3, scope: !14906)
!14908 = !DILocalVariable(name: "timeout", scope: !14889, file: !3208, line: 1430, type: !13595)
!14909 = !DILocation(line: 1430, column: 14, scope: !14889)
!14910 = !DILocation(line: 1430, column: 24, scope: !14889)
!14911 = !DILocation(line: 1431, column: 6, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14889, file: !3208, line: 1431, column: 6)
!14913 = !DILocation(line: 1431, column: 24, scope: !14912)
!14914 = !DILocation(line: 1431, column: 6, scope: !14889)
!14915 = !DILocation(line: 1432, column: 27, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14912, file: !3208, line: 1431, column: 30)
!14917 = !DILocation(line: 1432, column: 35, scope: !14916)
!14918 = !DILocation(line: 1432, column: 33, scope: !14916)
!14919 = !DILocation(line: 1432, column: 25, scope: !14916)
!14920 = !DILocation(line: 1433, column: 2, scope: !14916)
!14921 = !DILocation(line: 1434, column: 27, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14912, file: !3208, line: 1433, column: 9)
!14923 = !DILocation(line: 1434, column: 25, scope: !14922)
!14924 = !DILocalVariable(name: "key", scope: !14889, file: !3208, line: 1437, type: !12210)
!14925 = !DILocation(line: 1437, column: 19, scope: !14889)
!14926 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 1437, column: 25, scope: !14889)
!14928 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !14927)
!14929 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !14927)
!14930 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !14931)
!14931 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !14927)
!14932 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !14931)
!14933 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !14931)
!14934 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !14927)
!14935 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !14927)
!14936 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !14927)
!14937 = !DILocation(line: 1437, column: 25, scope: !14889)
!14938 = !DILocation(line: 1440, column: 20, scope: !14889)
!14939 = !DILocation(line: 1440, column: 18, scope: !14889)
!14940 = !DILocation(line: 1442, column: 17, scope: !14889)
!14941 = !DILocation(line: 1442, column: 2, scope: !14889)
!14942 = !DILocation(line: 1443, column: 23, scope: !14889)
!14943 = !DILocation(line: 1443, column: 2, scope: !14889)
!14944 = !DILocation(line: 1444, column: 29, scope: !14889)
!14945 = !DILocation(line: 1444, column: 2, scope: !14889)
!14946 = !DILocation(line: 1446, column: 8, scope: !14889)
!14947 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !14948)
!14948 = distinct !DILocation(line: 1446, column: 8, scope: !14889)
!14949 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !14948)
!14950 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !14948)
!14951 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !14952)
!14952 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !14948)
!14953 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !14952)
!14954 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !14948)
!14955 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !14948)
!14956 = !DILocation(line: 1450, column: 21, scope: !14889)
!14957 = !DILocation(line: 1450, column: 10, scope: !14889)
!14958 = !DILocation(line: 1450, column: 45, scope: !14889)
!14959 = !DILocation(line: 1450, column: 43, scope: !14889)
!14960 = !DILocation(line: 1450, column: 8, scope: !14889)
!14961 = !DILocation(line: 1451, column: 6, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14889, file: !3208, line: 1451, column: 6)
!14963 = !DILocation(line: 1451, column: 12, scope: !14962)
!14964 = !DILocation(line: 1451, column: 6, scope: !14889)
!14965 = !DILocation(line: 1452, column: 10, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14962, file: !3208, line: 1451, column: 17)
!14967 = !DILocation(line: 1452, column: 3, scope: !14966)
!14968 = !DILocation(line: 1456, column: 2, scope: !14889)
!14969 = !DILocation(line: 1457, column: 1, scope: !14889)
!14970 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !9831, file: !9831, line: 1103, type: !11848, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!14971 = !DILocalVariable(name: "t", arg: 1, scope: !14970, file: !9831, line: 1103, type: !1936)
!14972 = !DILocation(line: 1103, column: 70, scope: !14970)
!14973 = !DILocation(line: 1106, column: 17, scope: !14970)
!14974 = !DILocation(line: 102, column: 63, scope: !12289, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 1106, column: 9, scope: !14970)
!14976 = !DILocation(line: 102, column: 75, scope: !12289, inlinedAt: !14975)
!14977 = !DILocation(line: 103, column: 18, scope: !12289, inlinedAt: !14975)
!14978 = !DILocation(line: 103, column: 30, scope: !12289, inlinedAt: !14975)
!14979 = !DILocation(line: 104, column: 14, scope: !12289, inlinedAt: !14975)
!14980 = !DILocation(line: 104, column: 29, scope: !12289, inlinedAt: !14975)
!14981 = !DILocation(line: 105, column: 14, scope: !12289, inlinedAt: !14975)
!14982 = !DILocation(line: 107, column: 7, scope: !12289, inlinedAt: !14975)
!14983 = !DILocation(line: 107, column: 19, scope: !12289, inlinedAt: !14975)
!14984 = !DILocation(line: 107, column: 28, scope: !12289, inlinedAt: !14975)
!14985 = !DILocation(line: 108, column: 4, scope: !12289, inlinedAt: !14975)
!14986 = !DILocation(line: 108, column: 12, scope: !12289, inlinedAt: !14975)
!14987 = !DILocation(line: 108, column: 10, scope: !12289, inlinedAt: !14975)
!14988 = !DILocation(line: 108, column: 21, scope: !12289, inlinedAt: !14975)
!14989 = !DILocation(line: 108, column: 26, scope: !12289, inlinedAt: !14975)
!14990 = !DILocation(line: 108, column: 34, scope: !12289, inlinedAt: !14975)
!14991 = !DILocation(line: 108, column: 32, scope: !12289, inlinedAt: !14975)
!14992 = !DILocation(line: 108, column: 43, scope: !12289, inlinedAt: !14975)
!14993 = !DILocation(line: 0, scope: !12289, inlinedAt: !14975)
!14994 = !DILocation(line: 109, column: 7, scope: !12289, inlinedAt: !14975)
!14995 = !DILocation(line: 109, column: 19, scope: !12289, inlinedAt: !14975)
!14996 = !DILocation(line: 109, column: 28, scope: !12289, inlinedAt: !14975)
!14997 = !DILocation(line: 110, column: 4, scope: !12289, inlinedAt: !14975)
!14998 = !DILocation(line: 110, column: 14, scope: !12289, inlinedAt: !14975)
!14999 = !DILocation(line: 110, column: 12, scope: !12289, inlinedAt: !14975)
!15000 = !DILocation(line: 110, column: 21, scope: !12289, inlinedAt: !14975)
!15001 = !DILocation(line: 110, column: 26, scope: !12289, inlinedAt: !14975)
!15002 = !DILocation(line: 110, column: 36, scope: !12289, inlinedAt: !14975)
!15003 = !DILocation(line: 110, column: 34, scope: !12289, inlinedAt: !14975)
!15004 = !DILocation(line: 110, column: 43, scope: !12289, inlinedAt: !14975)
!15005 = !DILocation(line: 112, column: 6, scope: !12330, inlinedAt: !14975)
!15006 = !DILocation(line: 112, column: 17, scope: !12330, inlinedAt: !14975)
!15007 = !DILocation(line: 112, column: 14, scope: !12330, inlinedAt: !14975)
!15008 = !DILocation(line: 112, column: 6, scope: !12289, inlinedAt: !14975)
!15009 = !DILocation(line: 113, column: 10, scope: !12335, inlinedAt: !14975)
!15010 = !DILocation(line: 113, column: 32, scope: !12335, inlinedAt: !14975)
!15011 = !DILocation(line: 113, column: 22, scope: !12335, inlinedAt: !14975)
!15012 = !DILocation(line: 113, column: 21, scope: !12335, inlinedAt: !14975)
!15013 = !DILocation(line: 113, column: 37, scope: !12335, inlinedAt: !14975)
!15014 = !DILocation(line: 113, column: 3, scope: !12335, inlinedAt: !14975)
!15015 = !DILocation(line: 116, column: 11, scope: !12289, inlinedAt: !14975)
!15016 = !DILocation(line: 118, column: 7, scope: !12344, inlinedAt: !14975)
!15017 = !DILocation(line: 118, column: 6, scope: !12289, inlinedAt: !14975)
!15018 = !DILocation(line: 119, column: 12, scope: !12347, inlinedAt: !14975)
!15019 = !DILocation(line: 119, column: 23, scope: !12347, inlinedAt: !14975)
!15020 = !DILocation(line: 119, column: 36, scope: !12347, inlinedAt: !14975)
!15021 = !DILocation(line: 119, column: 46, scope: !12347, inlinedAt: !14975)
!15022 = !DILocation(line: 119, column: 44, scope: !12347, inlinedAt: !14975)
!15023 = !DILocation(line: 119, column: 55, scope: !12347, inlinedAt: !14975)
!15024 = !DILocation(line: 121, column: 7, scope: !12355, inlinedAt: !14975)
!15025 = !DILocation(line: 121, column: 7, scope: !12347, inlinedAt: !14975)
!15026 = !DILocation(line: 122, column: 10, scope: !12358, inlinedAt: !14975)
!15027 = !DILocation(line: 122, column: 19, scope: !12358, inlinedAt: !14975)
!15028 = !DILocation(line: 122, column: 8, scope: !12358, inlinedAt: !14975)
!15029 = !DILocation(line: 123, column: 3, scope: !12358, inlinedAt: !14975)
!15030 = !DILocation(line: 124, column: 7, scope: !12363, inlinedAt: !14975)
!15031 = !DILocation(line: 124, column: 7, scope: !12347, inlinedAt: !14975)
!15032 = !DILocation(line: 125, column: 10, scope: !12366, inlinedAt: !14975)
!15033 = !DILocation(line: 125, column: 19, scope: !12366, inlinedAt: !14975)
!15034 = !DILocation(line: 125, column: 8, scope: !12366, inlinedAt: !14975)
!15035 = !DILocation(line: 126, column: 3, scope: !12366, inlinedAt: !14975)
!15036 = !DILocation(line: 127, column: 2, scope: !12347, inlinedAt: !14975)
!15037 = !DILocation(line: 134, column: 6, scope: !12372, inlinedAt: !14975)
!15038 = !DILocation(line: 134, column: 6, scope: !12289, inlinedAt: !14975)
!15039 = !DILocation(line: 135, column: 8, scope: !12375, inlinedAt: !14975)
!15040 = !DILocation(line: 135, column: 5, scope: !12375, inlinedAt: !14975)
!15041 = !DILocation(line: 136, column: 7, scope: !12378, inlinedAt: !14975)
!15042 = !DILocation(line: 136, column: 16, scope: !12378, inlinedAt: !14975)
!15043 = !DILocation(line: 136, column: 20, scope: !12378, inlinedAt: !14975)
!15044 = !DILocation(line: 136, column: 22, scope: !12378, inlinedAt: !14975)
!15045 = !DILocation(line: 136, column: 7, scope: !12375, inlinedAt: !14975)
!15046 = !DILocation(line: 137, column: 22, scope: !12384, inlinedAt: !14975)
!15047 = !DILocation(line: 137, column: 12, scope: !12384, inlinedAt: !14975)
!15048 = !DILocation(line: 137, column: 28, scope: !12384, inlinedAt: !14975)
!15049 = !DILocation(line: 137, column: 38, scope: !12384, inlinedAt: !14975)
!15050 = !DILocation(line: 137, column: 36, scope: !12384, inlinedAt: !14975)
!15051 = !DILocation(line: 137, column: 25, scope: !12384, inlinedAt: !14975)
!15052 = !DILocation(line: 137, column: 11, scope: !12384, inlinedAt: !14975)
!15053 = !DILocation(line: 137, column: 4, scope: !12384, inlinedAt: !14975)
!15054 = !DILocation(line: 139, column: 11, scope: !12393, inlinedAt: !14975)
!15055 = !DILocation(line: 139, column: 26, scope: !12393, inlinedAt: !14975)
!15056 = !DILocation(line: 139, column: 16, scope: !12393, inlinedAt: !14975)
!15057 = !DILocation(line: 139, column: 36, scope: !12393, inlinedAt: !14975)
!15058 = !DILocation(line: 139, column: 34, scope: !12393, inlinedAt: !14975)
!15059 = !DILocation(line: 139, column: 13, scope: !12393, inlinedAt: !14975)
!15060 = !DILocation(line: 139, column: 4, scope: !12393, inlinedAt: !14975)
!15061 = !DILocation(line: 141, column: 13, scope: !12401, inlinedAt: !14975)
!15062 = !DILocation(line: 141, column: 13, scope: !12372, inlinedAt: !14975)
!15063 = !DILocation(line: 142, column: 7, scope: !12404, inlinedAt: !14975)
!15064 = !DILocation(line: 142, column: 7, scope: !12405, inlinedAt: !14975)
!15065 = !DILocation(line: 143, column: 22, scope: !12408, inlinedAt: !14975)
!15066 = !DILocation(line: 143, column: 12, scope: !12408, inlinedAt: !14975)
!15067 = !DILocation(line: 143, column: 28, scope: !12408, inlinedAt: !14975)
!15068 = !DILocation(line: 143, column: 36, scope: !12408, inlinedAt: !14975)
!15069 = !DILocation(line: 143, column: 34, scope: !12408, inlinedAt: !14975)
!15070 = !DILocation(line: 143, column: 25, scope: !12408, inlinedAt: !14975)
!15071 = !DILocation(line: 143, column: 11, scope: !12408, inlinedAt: !14975)
!15072 = !DILocation(line: 143, column: 4, scope: !12408, inlinedAt: !14975)
!15073 = !DILocation(line: 145, column: 11, scope: !12417, inlinedAt: !14975)
!15074 = !DILocation(line: 145, column: 26, scope: !12417, inlinedAt: !14975)
!15075 = !DILocation(line: 145, column: 16, scope: !12417, inlinedAt: !14975)
!15076 = !DILocation(line: 145, column: 34, scope: !12417, inlinedAt: !14975)
!15077 = !DILocation(line: 145, column: 32, scope: !12417, inlinedAt: !14975)
!15078 = !DILocation(line: 145, column: 13, scope: !12417, inlinedAt: !14975)
!15079 = !DILocation(line: 145, column: 4, scope: !12417, inlinedAt: !14975)
!15080 = !DILocation(line: 148, column: 7, scope: !12425, inlinedAt: !14975)
!15081 = !DILocation(line: 148, column: 7, scope: !12426, inlinedAt: !14975)
!15082 = !DILocation(line: 149, column: 23, scope: !12429, inlinedAt: !14975)
!15083 = !DILocation(line: 149, column: 27, scope: !12429, inlinedAt: !14975)
!15084 = !DILocation(line: 149, column: 25, scope: !12429, inlinedAt: !14975)
!15085 = !DILocation(line: 149, column: 35, scope: !12429, inlinedAt: !14975)
!15086 = !DILocation(line: 149, column: 33, scope: !12429, inlinedAt: !14975)
!15087 = !DILocation(line: 149, column: 42, scope: !12429, inlinedAt: !14975)
!15088 = !DILocation(line: 149, column: 40, scope: !12429, inlinedAt: !14975)
!15089 = !DILocation(line: 149, column: 11, scope: !12429, inlinedAt: !14975)
!15090 = !DILocation(line: 149, column: 4, scope: !12429, inlinedAt: !14975)
!15091 = !DILocation(line: 150, column: 14, scope: !12439, inlinedAt: !14975)
!15092 = !DILocation(line: 150, column: 23, scope: !12439, inlinedAt: !14975)
!15093 = !DILocation(line: 150, column: 26, scope: !12439, inlinedAt: !14975)
!15094 = !DILocation(line: 150, column: 14, scope: !12425, inlinedAt: !14975)
!15095 = !DILocation(line: 156, column: 13, scope: !12444, inlinedAt: !14975)
!15096 = !DILocation(line: 156, column: 17, scope: !12444, inlinedAt: !14975)
!15097 = !DILocation(line: 156, column: 15, scope: !12444, inlinedAt: !14975)
!15098 = !DILocation(line: 156, column: 25, scope: !12444, inlinedAt: !14975)
!15099 = !DILocation(line: 156, column: 23, scope: !12444, inlinedAt: !14975)
!15100 = !DILocation(line: 156, column: 32, scope: !12444, inlinedAt: !14975)
!15101 = !DILocation(line: 156, column: 30, scope: !12444, inlinedAt: !14975)
!15102 = !DILocation(line: 156, column: 4, scope: !12444, inlinedAt: !14975)
!15103 = !DILocation(line: 161, column: 12, scope: !12453, inlinedAt: !14975)
!15104 = !DILocation(line: 161, column: 16, scope: !12453, inlinedAt: !14975)
!15105 = !DILocation(line: 161, column: 14, scope: !12453, inlinedAt: !14975)
!15106 = !DILocation(line: 161, column: 27, scope: !12453, inlinedAt: !14975)
!15107 = !DILocation(line: 161, column: 25, scope: !12453, inlinedAt: !14975)
!15108 = !DILocation(line: 161, column: 37, scope: !12453, inlinedAt: !14975)
!15109 = !DILocation(line: 161, column: 41, scope: !12453, inlinedAt: !14975)
!15110 = !DILocation(line: 161, column: 39, scope: !12453, inlinedAt: !14975)
!15111 = !DILocation(line: 161, column: 52, scope: !12453, inlinedAt: !14975)
!15112 = !DILocation(line: 161, column: 50, scope: !12453, inlinedAt: !14975)
!15113 = !DILocation(line: 161, column: 60, scope: !12453, inlinedAt: !14975)
!15114 = !DILocation(line: 161, column: 58, scope: !12453, inlinedAt: !14975)
!15115 = !DILocation(line: 161, column: 67, scope: !12453, inlinedAt: !14975)
!15116 = !DILocation(line: 161, column: 65, scope: !12453, inlinedAt: !14975)
!15117 = !DILocation(line: 161, column: 33, scope: !12453, inlinedAt: !14975)
!15118 = !DILocation(line: 161, column: 4, scope: !12453, inlinedAt: !14975)
!15119 = !DILocation(line: 164, column: 1, scope: !12289, inlinedAt: !14975)
!15120 = !DILocation(line: 1106, column: 2, scope: !14970)
!15121 = distinct !DISubprogram(name: "k_yield", scope: !3836, file: !3836, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15122 = !DILocation(line: 148, column: 2, scope: !15121)
!15123 = !DILocation(line: 148, column: 2, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15121, file: !3836, line: 148, column: 2)
!15125 = !{i64 2149654625}
!15126 = !DILocation(line: 149, column: 2, scope: !15121)
!15127 = !DILocation(line: 150, column: 1, scope: !15121)
!15128 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3208, file: !3208, line: 1495, type: !15129, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15129 = !DISubroutineType(types: !15130)
!15130 = !{!250, !103}
!15131 = !DILocalVariable(name: "us", arg: 1, scope: !15128, file: !3208, line: 1495, type: !103)
!15132 = !DILocation(line: 1495, column: 29, scope: !15128)
!15133 = !DILocalVariable(name: "ticks", scope: !15128, file: !3208, line: 1497, type: !250)
!15134 = !DILocation(line: 1497, column: 10, scope: !15128)
!15135 = !DILocation(line: 1499, column: 2, scope: !15128)
!15136 = !DILocation(line: 1499, column: 2, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15128, file: !3208, line: 1499, column: 2)
!15138 = !DILocation(line: 1501, column: 31, scope: !15128)
!15139 = !DILocation(line: 1501, column: 10, scope: !15128)
!15140 = !DILocation(line: 1501, column: 8, scope: !15128)
!15141 = !DILocation(line: 1502, column: 23, scope: !15128)
!15142 = !DILocation(line: 1502, column: 10, scope: !15128)
!15143 = !DILocation(line: 1502, column: 8, scope: !15128)
!15144 = !DILocation(line: 1504, column: 2, scope: !15128)
!15145 = !DILocation(line: 1504, column: 2, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15128, file: !3208, line: 1504, column: 2)
!15147 = !DILocation(line: 1506, column: 31, scope: !15128)
!15148 = !DILocation(line: 1506, column: 9, scope: !15128)
!15149 = !DILocation(line: 1506, column: 2, scope: !15128)
!15150 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !9831, file: !9831, line: 571, type: !11848, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15151 = !DILocalVariable(name: "t", arg: 1, scope: !15150, file: !9831, line: 571, type: !1936)
!15152 = !DILocation(line: 571, column: 69, scope: !15150)
!15153 = !DILocation(line: 574, column: 17, scope: !15150)
!15154 = !DILocation(line: 102, column: 63, scope: !12289, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 574, column: 9, scope: !15150)
!15156 = !DILocation(line: 102, column: 75, scope: !12289, inlinedAt: !15155)
!15157 = !DILocation(line: 103, column: 18, scope: !12289, inlinedAt: !15155)
!15158 = !DILocation(line: 103, column: 30, scope: !12289, inlinedAt: !15155)
!15159 = !DILocation(line: 104, column: 14, scope: !12289, inlinedAt: !15155)
!15160 = !DILocation(line: 104, column: 29, scope: !12289, inlinedAt: !15155)
!15161 = !DILocation(line: 105, column: 14, scope: !12289, inlinedAt: !15155)
!15162 = !DILocation(line: 107, column: 7, scope: !12289, inlinedAt: !15155)
!15163 = !DILocation(line: 107, column: 19, scope: !12289, inlinedAt: !15155)
!15164 = !DILocation(line: 107, column: 28, scope: !12289, inlinedAt: !15155)
!15165 = !DILocation(line: 108, column: 4, scope: !12289, inlinedAt: !15155)
!15166 = !DILocation(line: 108, column: 12, scope: !12289, inlinedAt: !15155)
!15167 = !DILocation(line: 108, column: 10, scope: !12289, inlinedAt: !15155)
!15168 = !DILocation(line: 108, column: 21, scope: !12289, inlinedAt: !15155)
!15169 = !DILocation(line: 108, column: 26, scope: !12289, inlinedAt: !15155)
!15170 = !DILocation(line: 108, column: 34, scope: !12289, inlinedAt: !15155)
!15171 = !DILocation(line: 108, column: 32, scope: !12289, inlinedAt: !15155)
!15172 = !DILocation(line: 108, column: 43, scope: !12289, inlinedAt: !15155)
!15173 = !DILocation(line: 0, scope: !12289, inlinedAt: !15155)
!15174 = !DILocation(line: 109, column: 7, scope: !12289, inlinedAt: !15155)
!15175 = !DILocation(line: 109, column: 19, scope: !12289, inlinedAt: !15155)
!15176 = !DILocation(line: 109, column: 28, scope: !12289, inlinedAt: !15155)
!15177 = !DILocation(line: 110, column: 4, scope: !12289, inlinedAt: !15155)
!15178 = !DILocation(line: 110, column: 14, scope: !12289, inlinedAt: !15155)
!15179 = !DILocation(line: 110, column: 12, scope: !12289, inlinedAt: !15155)
!15180 = !DILocation(line: 110, column: 21, scope: !12289, inlinedAt: !15155)
!15181 = !DILocation(line: 110, column: 26, scope: !12289, inlinedAt: !15155)
!15182 = !DILocation(line: 110, column: 36, scope: !12289, inlinedAt: !15155)
!15183 = !DILocation(line: 110, column: 34, scope: !12289, inlinedAt: !15155)
!15184 = !DILocation(line: 110, column: 43, scope: !12289, inlinedAt: !15155)
!15185 = !DILocation(line: 112, column: 6, scope: !12330, inlinedAt: !15155)
!15186 = !DILocation(line: 112, column: 17, scope: !12330, inlinedAt: !15155)
!15187 = !DILocation(line: 112, column: 14, scope: !12330, inlinedAt: !15155)
!15188 = !DILocation(line: 112, column: 6, scope: !12289, inlinedAt: !15155)
!15189 = !DILocation(line: 113, column: 10, scope: !12335, inlinedAt: !15155)
!15190 = !DILocation(line: 113, column: 32, scope: !12335, inlinedAt: !15155)
!15191 = !DILocation(line: 113, column: 22, scope: !12335, inlinedAt: !15155)
!15192 = !DILocation(line: 113, column: 21, scope: !12335, inlinedAt: !15155)
!15193 = !DILocation(line: 113, column: 37, scope: !12335, inlinedAt: !15155)
!15194 = !DILocation(line: 113, column: 3, scope: !12335, inlinedAt: !15155)
!15195 = !DILocation(line: 116, column: 11, scope: !12289, inlinedAt: !15155)
!15196 = !DILocation(line: 118, column: 7, scope: !12344, inlinedAt: !15155)
!15197 = !DILocation(line: 118, column: 6, scope: !12289, inlinedAt: !15155)
!15198 = !DILocation(line: 119, column: 12, scope: !12347, inlinedAt: !15155)
!15199 = !DILocation(line: 119, column: 23, scope: !12347, inlinedAt: !15155)
!15200 = !DILocation(line: 119, column: 36, scope: !12347, inlinedAt: !15155)
!15201 = !DILocation(line: 119, column: 46, scope: !12347, inlinedAt: !15155)
!15202 = !DILocation(line: 119, column: 44, scope: !12347, inlinedAt: !15155)
!15203 = !DILocation(line: 119, column: 55, scope: !12347, inlinedAt: !15155)
!15204 = !DILocation(line: 121, column: 7, scope: !12355, inlinedAt: !15155)
!15205 = !DILocation(line: 121, column: 7, scope: !12347, inlinedAt: !15155)
!15206 = !DILocation(line: 122, column: 10, scope: !12358, inlinedAt: !15155)
!15207 = !DILocation(line: 122, column: 19, scope: !12358, inlinedAt: !15155)
!15208 = !DILocation(line: 122, column: 8, scope: !12358, inlinedAt: !15155)
!15209 = !DILocation(line: 123, column: 3, scope: !12358, inlinedAt: !15155)
!15210 = !DILocation(line: 124, column: 7, scope: !12363, inlinedAt: !15155)
!15211 = !DILocation(line: 124, column: 7, scope: !12347, inlinedAt: !15155)
!15212 = !DILocation(line: 125, column: 10, scope: !12366, inlinedAt: !15155)
!15213 = !DILocation(line: 125, column: 19, scope: !12366, inlinedAt: !15155)
!15214 = !DILocation(line: 125, column: 8, scope: !12366, inlinedAt: !15155)
!15215 = !DILocation(line: 126, column: 3, scope: !12366, inlinedAt: !15155)
!15216 = !DILocation(line: 127, column: 2, scope: !12347, inlinedAt: !15155)
!15217 = !DILocation(line: 134, column: 6, scope: !12372, inlinedAt: !15155)
!15218 = !DILocation(line: 134, column: 6, scope: !12289, inlinedAt: !15155)
!15219 = !DILocation(line: 135, column: 8, scope: !12375, inlinedAt: !15155)
!15220 = !DILocation(line: 135, column: 5, scope: !12375, inlinedAt: !15155)
!15221 = !DILocation(line: 136, column: 7, scope: !12378, inlinedAt: !15155)
!15222 = !DILocation(line: 136, column: 16, scope: !12378, inlinedAt: !15155)
!15223 = !DILocation(line: 136, column: 20, scope: !12378, inlinedAt: !15155)
!15224 = !DILocation(line: 136, column: 22, scope: !12378, inlinedAt: !15155)
!15225 = !DILocation(line: 136, column: 7, scope: !12375, inlinedAt: !15155)
!15226 = !DILocation(line: 137, column: 22, scope: !12384, inlinedAt: !15155)
!15227 = !DILocation(line: 137, column: 12, scope: !12384, inlinedAt: !15155)
!15228 = !DILocation(line: 137, column: 28, scope: !12384, inlinedAt: !15155)
!15229 = !DILocation(line: 137, column: 38, scope: !12384, inlinedAt: !15155)
!15230 = !DILocation(line: 137, column: 36, scope: !12384, inlinedAt: !15155)
!15231 = !DILocation(line: 137, column: 25, scope: !12384, inlinedAt: !15155)
!15232 = !DILocation(line: 137, column: 11, scope: !12384, inlinedAt: !15155)
!15233 = !DILocation(line: 137, column: 4, scope: !12384, inlinedAt: !15155)
!15234 = !DILocation(line: 139, column: 11, scope: !12393, inlinedAt: !15155)
!15235 = !DILocation(line: 139, column: 26, scope: !12393, inlinedAt: !15155)
!15236 = !DILocation(line: 139, column: 16, scope: !12393, inlinedAt: !15155)
!15237 = !DILocation(line: 139, column: 36, scope: !12393, inlinedAt: !15155)
!15238 = !DILocation(line: 139, column: 34, scope: !12393, inlinedAt: !15155)
!15239 = !DILocation(line: 139, column: 13, scope: !12393, inlinedAt: !15155)
!15240 = !DILocation(line: 139, column: 4, scope: !12393, inlinedAt: !15155)
!15241 = !DILocation(line: 141, column: 13, scope: !12401, inlinedAt: !15155)
!15242 = !DILocation(line: 141, column: 13, scope: !12372, inlinedAt: !15155)
!15243 = !DILocation(line: 142, column: 7, scope: !12404, inlinedAt: !15155)
!15244 = !DILocation(line: 142, column: 7, scope: !12405, inlinedAt: !15155)
!15245 = !DILocation(line: 143, column: 22, scope: !12408, inlinedAt: !15155)
!15246 = !DILocation(line: 143, column: 12, scope: !12408, inlinedAt: !15155)
!15247 = !DILocation(line: 143, column: 28, scope: !12408, inlinedAt: !15155)
!15248 = !DILocation(line: 143, column: 36, scope: !12408, inlinedAt: !15155)
!15249 = !DILocation(line: 143, column: 34, scope: !12408, inlinedAt: !15155)
!15250 = !DILocation(line: 143, column: 25, scope: !12408, inlinedAt: !15155)
!15251 = !DILocation(line: 143, column: 11, scope: !12408, inlinedAt: !15155)
!15252 = !DILocation(line: 143, column: 4, scope: !12408, inlinedAt: !15155)
!15253 = !DILocation(line: 145, column: 11, scope: !12417, inlinedAt: !15155)
!15254 = !DILocation(line: 145, column: 26, scope: !12417, inlinedAt: !15155)
!15255 = !DILocation(line: 145, column: 16, scope: !12417, inlinedAt: !15155)
!15256 = !DILocation(line: 145, column: 34, scope: !12417, inlinedAt: !15155)
!15257 = !DILocation(line: 145, column: 32, scope: !12417, inlinedAt: !15155)
!15258 = !DILocation(line: 145, column: 13, scope: !12417, inlinedAt: !15155)
!15259 = !DILocation(line: 145, column: 4, scope: !12417, inlinedAt: !15155)
!15260 = !DILocation(line: 148, column: 7, scope: !12425, inlinedAt: !15155)
!15261 = !DILocation(line: 148, column: 7, scope: !12426, inlinedAt: !15155)
!15262 = !DILocation(line: 149, column: 23, scope: !12429, inlinedAt: !15155)
!15263 = !DILocation(line: 149, column: 27, scope: !12429, inlinedAt: !15155)
!15264 = !DILocation(line: 149, column: 25, scope: !12429, inlinedAt: !15155)
!15265 = !DILocation(line: 149, column: 35, scope: !12429, inlinedAt: !15155)
!15266 = !DILocation(line: 149, column: 33, scope: !12429, inlinedAt: !15155)
!15267 = !DILocation(line: 149, column: 42, scope: !12429, inlinedAt: !15155)
!15268 = !DILocation(line: 149, column: 40, scope: !12429, inlinedAt: !15155)
!15269 = !DILocation(line: 149, column: 11, scope: !12429, inlinedAt: !15155)
!15270 = !DILocation(line: 149, column: 4, scope: !12429, inlinedAt: !15155)
!15271 = !DILocation(line: 150, column: 14, scope: !12439, inlinedAt: !15155)
!15272 = !DILocation(line: 150, column: 23, scope: !12439, inlinedAt: !15155)
!15273 = !DILocation(line: 150, column: 26, scope: !12439, inlinedAt: !15155)
!15274 = !DILocation(line: 150, column: 14, scope: !12425, inlinedAt: !15155)
!15275 = !DILocation(line: 156, column: 13, scope: !12444, inlinedAt: !15155)
!15276 = !DILocation(line: 156, column: 17, scope: !12444, inlinedAt: !15155)
!15277 = !DILocation(line: 156, column: 15, scope: !12444, inlinedAt: !15155)
!15278 = !DILocation(line: 156, column: 25, scope: !12444, inlinedAt: !15155)
!15279 = !DILocation(line: 156, column: 23, scope: !12444, inlinedAt: !15155)
!15280 = !DILocation(line: 156, column: 32, scope: !12444, inlinedAt: !15155)
!15281 = !DILocation(line: 156, column: 30, scope: !12444, inlinedAt: !15155)
!15282 = !DILocation(line: 156, column: 4, scope: !12444, inlinedAt: !15155)
!15283 = !DILocation(line: 161, column: 12, scope: !12453, inlinedAt: !15155)
!15284 = !DILocation(line: 161, column: 16, scope: !12453, inlinedAt: !15155)
!15285 = !DILocation(line: 161, column: 14, scope: !12453, inlinedAt: !15155)
!15286 = !DILocation(line: 161, column: 27, scope: !12453, inlinedAt: !15155)
!15287 = !DILocation(line: 161, column: 25, scope: !12453, inlinedAt: !15155)
!15288 = !DILocation(line: 161, column: 37, scope: !12453, inlinedAt: !15155)
!15289 = !DILocation(line: 161, column: 41, scope: !12453, inlinedAt: !15155)
!15290 = !DILocation(line: 161, column: 39, scope: !12453, inlinedAt: !15155)
!15291 = !DILocation(line: 161, column: 52, scope: !12453, inlinedAt: !15155)
!15292 = !DILocation(line: 161, column: 50, scope: !12453, inlinedAt: !15155)
!15293 = !DILocation(line: 161, column: 60, scope: !12453, inlinedAt: !15155)
!15294 = !DILocation(line: 161, column: 58, scope: !12453, inlinedAt: !15155)
!15295 = !DILocation(line: 161, column: 67, scope: !12453, inlinedAt: !15155)
!15296 = !DILocation(line: 161, column: 65, scope: !12453, inlinedAt: !15155)
!15297 = !DILocation(line: 161, column: 33, scope: !12453, inlinedAt: !15155)
!15298 = !DILocation(line: 161, column: 4, scope: !12453, inlinedAt: !15155)
!15299 = !DILocation(line: 164, column: 1, scope: !12289, inlinedAt: !15155)
!15300 = !DILocation(line: 574, column: 2, scope: !15150)
!15301 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !9831, file: !9831, line: 1187, type: !11848, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15302 = !DILocalVariable(name: "t", arg: 1, scope: !15301, file: !9831, line: 1187, type: !1936)
!15303 = !DILocation(line: 1187, column: 70, scope: !15301)
!15304 = !DILocation(line: 1190, column: 17, scope: !15301)
!15305 = !DILocation(line: 102, column: 63, scope: !12289, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 1190, column: 9, scope: !15301)
!15307 = !DILocation(line: 102, column: 75, scope: !12289, inlinedAt: !15306)
!15308 = !DILocation(line: 103, column: 18, scope: !12289, inlinedAt: !15306)
!15309 = !DILocation(line: 103, column: 30, scope: !12289, inlinedAt: !15306)
!15310 = !DILocation(line: 104, column: 14, scope: !12289, inlinedAt: !15306)
!15311 = !DILocation(line: 104, column: 29, scope: !12289, inlinedAt: !15306)
!15312 = !DILocation(line: 105, column: 14, scope: !12289, inlinedAt: !15306)
!15313 = !DILocation(line: 107, column: 7, scope: !12289, inlinedAt: !15306)
!15314 = !DILocation(line: 107, column: 19, scope: !12289, inlinedAt: !15306)
!15315 = !DILocation(line: 107, column: 28, scope: !12289, inlinedAt: !15306)
!15316 = !DILocation(line: 108, column: 4, scope: !12289, inlinedAt: !15306)
!15317 = !DILocation(line: 108, column: 12, scope: !12289, inlinedAt: !15306)
!15318 = !DILocation(line: 108, column: 10, scope: !12289, inlinedAt: !15306)
!15319 = !DILocation(line: 108, column: 21, scope: !12289, inlinedAt: !15306)
!15320 = !DILocation(line: 108, column: 26, scope: !12289, inlinedAt: !15306)
!15321 = !DILocation(line: 108, column: 34, scope: !12289, inlinedAt: !15306)
!15322 = !DILocation(line: 108, column: 32, scope: !12289, inlinedAt: !15306)
!15323 = !DILocation(line: 108, column: 43, scope: !12289, inlinedAt: !15306)
!15324 = !DILocation(line: 0, scope: !12289, inlinedAt: !15306)
!15325 = !DILocation(line: 109, column: 7, scope: !12289, inlinedAt: !15306)
!15326 = !DILocation(line: 109, column: 19, scope: !12289, inlinedAt: !15306)
!15327 = !DILocation(line: 109, column: 28, scope: !12289, inlinedAt: !15306)
!15328 = !DILocation(line: 110, column: 4, scope: !12289, inlinedAt: !15306)
!15329 = !DILocation(line: 110, column: 14, scope: !12289, inlinedAt: !15306)
!15330 = !DILocation(line: 110, column: 12, scope: !12289, inlinedAt: !15306)
!15331 = !DILocation(line: 110, column: 21, scope: !12289, inlinedAt: !15306)
!15332 = !DILocation(line: 110, column: 26, scope: !12289, inlinedAt: !15306)
!15333 = !DILocation(line: 110, column: 36, scope: !12289, inlinedAt: !15306)
!15334 = !DILocation(line: 110, column: 34, scope: !12289, inlinedAt: !15306)
!15335 = !DILocation(line: 110, column: 43, scope: !12289, inlinedAt: !15306)
!15336 = !DILocation(line: 112, column: 6, scope: !12330, inlinedAt: !15306)
!15337 = !DILocation(line: 112, column: 17, scope: !12330, inlinedAt: !15306)
!15338 = !DILocation(line: 112, column: 14, scope: !12330, inlinedAt: !15306)
!15339 = !DILocation(line: 112, column: 6, scope: !12289, inlinedAt: !15306)
!15340 = !DILocation(line: 113, column: 10, scope: !12335, inlinedAt: !15306)
!15341 = !DILocation(line: 113, column: 32, scope: !12335, inlinedAt: !15306)
!15342 = !DILocation(line: 113, column: 22, scope: !12335, inlinedAt: !15306)
!15343 = !DILocation(line: 113, column: 21, scope: !12335, inlinedAt: !15306)
!15344 = !DILocation(line: 113, column: 37, scope: !12335, inlinedAt: !15306)
!15345 = !DILocation(line: 113, column: 3, scope: !12335, inlinedAt: !15306)
!15346 = !DILocation(line: 116, column: 11, scope: !12289, inlinedAt: !15306)
!15347 = !DILocation(line: 118, column: 7, scope: !12344, inlinedAt: !15306)
!15348 = !DILocation(line: 118, column: 6, scope: !12289, inlinedAt: !15306)
!15349 = !DILocation(line: 119, column: 12, scope: !12347, inlinedAt: !15306)
!15350 = !DILocation(line: 119, column: 23, scope: !12347, inlinedAt: !15306)
!15351 = !DILocation(line: 119, column: 36, scope: !12347, inlinedAt: !15306)
!15352 = !DILocation(line: 119, column: 46, scope: !12347, inlinedAt: !15306)
!15353 = !DILocation(line: 119, column: 44, scope: !12347, inlinedAt: !15306)
!15354 = !DILocation(line: 119, column: 55, scope: !12347, inlinedAt: !15306)
!15355 = !DILocation(line: 121, column: 7, scope: !12355, inlinedAt: !15306)
!15356 = !DILocation(line: 121, column: 7, scope: !12347, inlinedAt: !15306)
!15357 = !DILocation(line: 122, column: 10, scope: !12358, inlinedAt: !15306)
!15358 = !DILocation(line: 122, column: 19, scope: !12358, inlinedAt: !15306)
!15359 = !DILocation(line: 122, column: 8, scope: !12358, inlinedAt: !15306)
!15360 = !DILocation(line: 123, column: 3, scope: !12358, inlinedAt: !15306)
!15361 = !DILocation(line: 124, column: 7, scope: !12363, inlinedAt: !15306)
!15362 = !DILocation(line: 124, column: 7, scope: !12347, inlinedAt: !15306)
!15363 = !DILocation(line: 125, column: 10, scope: !12366, inlinedAt: !15306)
!15364 = !DILocation(line: 125, column: 19, scope: !12366, inlinedAt: !15306)
!15365 = !DILocation(line: 125, column: 8, scope: !12366, inlinedAt: !15306)
!15366 = !DILocation(line: 126, column: 3, scope: !12366, inlinedAt: !15306)
!15367 = !DILocation(line: 127, column: 2, scope: !12347, inlinedAt: !15306)
!15368 = !DILocation(line: 134, column: 6, scope: !12372, inlinedAt: !15306)
!15369 = !DILocation(line: 134, column: 6, scope: !12289, inlinedAt: !15306)
!15370 = !DILocation(line: 135, column: 8, scope: !12375, inlinedAt: !15306)
!15371 = !DILocation(line: 135, column: 5, scope: !12375, inlinedAt: !15306)
!15372 = !DILocation(line: 136, column: 7, scope: !12378, inlinedAt: !15306)
!15373 = !DILocation(line: 136, column: 16, scope: !12378, inlinedAt: !15306)
!15374 = !DILocation(line: 136, column: 20, scope: !12378, inlinedAt: !15306)
!15375 = !DILocation(line: 136, column: 22, scope: !12378, inlinedAt: !15306)
!15376 = !DILocation(line: 136, column: 7, scope: !12375, inlinedAt: !15306)
!15377 = !DILocation(line: 137, column: 22, scope: !12384, inlinedAt: !15306)
!15378 = !DILocation(line: 137, column: 12, scope: !12384, inlinedAt: !15306)
!15379 = !DILocation(line: 137, column: 28, scope: !12384, inlinedAt: !15306)
!15380 = !DILocation(line: 137, column: 38, scope: !12384, inlinedAt: !15306)
!15381 = !DILocation(line: 137, column: 36, scope: !12384, inlinedAt: !15306)
!15382 = !DILocation(line: 137, column: 25, scope: !12384, inlinedAt: !15306)
!15383 = !DILocation(line: 137, column: 11, scope: !12384, inlinedAt: !15306)
!15384 = !DILocation(line: 137, column: 4, scope: !12384, inlinedAt: !15306)
!15385 = !DILocation(line: 139, column: 11, scope: !12393, inlinedAt: !15306)
!15386 = !DILocation(line: 139, column: 26, scope: !12393, inlinedAt: !15306)
!15387 = !DILocation(line: 139, column: 16, scope: !12393, inlinedAt: !15306)
!15388 = !DILocation(line: 139, column: 36, scope: !12393, inlinedAt: !15306)
!15389 = !DILocation(line: 139, column: 34, scope: !12393, inlinedAt: !15306)
!15390 = !DILocation(line: 139, column: 13, scope: !12393, inlinedAt: !15306)
!15391 = !DILocation(line: 139, column: 4, scope: !12393, inlinedAt: !15306)
!15392 = !DILocation(line: 141, column: 13, scope: !12401, inlinedAt: !15306)
!15393 = !DILocation(line: 141, column: 13, scope: !12372, inlinedAt: !15306)
!15394 = !DILocation(line: 142, column: 7, scope: !12404, inlinedAt: !15306)
!15395 = !DILocation(line: 142, column: 7, scope: !12405, inlinedAt: !15306)
!15396 = !DILocation(line: 143, column: 22, scope: !12408, inlinedAt: !15306)
!15397 = !DILocation(line: 143, column: 12, scope: !12408, inlinedAt: !15306)
!15398 = !DILocation(line: 143, column: 28, scope: !12408, inlinedAt: !15306)
!15399 = !DILocation(line: 143, column: 36, scope: !12408, inlinedAt: !15306)
!15400 = !DILocation(line: 143, column: 34, scope: !12408, inlinedAt: !15306)
!15401 = !DILocation(line: 143, column: 25, scope: !12408, inlinedAt: !15306)
!15402 = !DILocation(line: 143, column: 11, scope: !12408, inlinedAt: !15306)
!15403 = !DILocation(line: 143, column: 4, scope: !12408, inlinedAt: !15306)
!15404 = !DILocation(line: 145, column: 11, scope: !12417, inlinedAt: !15306)
!15405 = !DILocation(line: 145, column: 26, scope: !12417, inlinedAt: !15306)
!15406 = !DILocation(line: 145, column: 16, scope: !12417, inlinedAt: !15306)
!15407 = !DILocation(line: 145, column: 34, scope: !12417, inlinedAt: !15306)
!15408 = !DILocation(line: 145, column: 32, scope: !12417, inlinedAt: !15306)
!15409 = !DILocation(line: 145, column: 13, scope: !12417, inlinedAt: !15306)
!15410 = !DILocation(line: 145, column: 4, scope: !12417, inlinedAt: !15306)
!15411 = !DILocation(line: 148, column: 7, scope: !12425, inlinedAt: !15306)
!15412 = !DILocation(line: 148, column: 7, scope: !12426, inlinedAt: !15306)
!15413 = !DILocation(line: 149, column: 23, scope: !12429, inlinedAt: !15306)
!15414 = !DILocation(line: 149, column: 27, scope: !12429, inlinedAt: !15306)
!15415 = !DILocation(line: 149, column: 25, scope: !12429, inlinedAt: !15306)
!15416 = !DILocation(line: 149, column: 35, scope: !12429, inlinedAt: !15306)
!15417 = !DILocation(line: 149, column: 33, scope: !12429, inlinedAt: !15306)
!15418 = !DILocation(line: 149, column: 42, scope: !12429, inlinedAt: !15306)
!15419 = !DILocation(line: 149, column: 40, scope: !12429, inlinedAt: !15306)
!15420 = !DILocation(line: 149, column: 11, scope: !12429, inlinedAt: !15306)
!15421 = !DILocation(line: 149, column: 4, scope: !12429, inlinedAt: !15306)
!15422 = !DILocation(line: 150, column: 14, scope: !12439, inlinedAt: !15306)
!15423 = !DILocation(line: 150, column: 23, scope: !12439, inlinedAt: !15306)
!15424 = !DILocation(line: 150, column: 26, scope: !12439, inlinedAt: !15306)
!15425 = !DILocation(line: 150, column: 14, scope: !12425, inlinedAt: !15306)
!15426 = !DILocation(line: 156, column: 13, scope: !12444, inlinedAt: !15306)
!15427 = !DILocation(line: 156, column: 17, scope: !12444, inlinedAt: !15306)
!15428 = !DILocation(line: 156, column: 15, scope: !12444, inlinedAt: !15306)
!15429 = !DILocation(line: 156, column: 25, scope: !12444, inlinedAt: !15306)
!15430 = !DILocation(line: 156, column: 23, scope: !12444, inlinedAt: !15306)
!15431 = !DILocation(line: 156, column: 32, scope: !12444, inlinedAt: !15306)
!15432 = !DILocation(line: 156, column: 30, scope: !12444, inlinedAt: !15306)
!15433 = !DILocation(line: 156, column: 4, scope: !12444, inlinedAt: !15306)
!15434 = !DILocation(line: 161, column: 12, scope: !12453, inlinedAt: !15306)
!15435 = !DILocation(line: 161, column: 16, scope: !12453, inlinedAt: !15306)
!15436 = !DILocation(line: 161, column: 14, scope: !12453, inlinedAt: !15306)
!15437 = !DILocation(line: 161, column: 27, scope: !12453, inlinedAt: !15306)
!15438 = !DILocation(line: 161, column: 25, scope: !12453, inlinedAt: !15306)
!15439 = !DILocation(line: 161, column: 37, scope: !12453, inlinedAt: !15306)
!15440 = !DILocation(line: 161, column: 41, scope: !12453, inlinedAt: !15306)
!15441 = !DILocation(line: 161, column: 39, scope: !12453, inlinedAt: !15306)
!15442 = !DILocation(line: 161, column: 52, scope: !12453, inlinedAt: !15306)
!15443 = !DILocation(line: 161, column: 50, scope: !12453, inlinedAt: !15306)
!15444 = !DILocation(line: 161, column: 60, scope: !12453, inlinedAt: !15306)
!15445 = !DILocation(line: 161, column: 58, scope: !12453, inlinedAt: !15306)
!15446 = !DILocation(line: 161, column: 67, scope: !12453, inlinedAt: !15306)
!15447 = !DILocation(line: 161, column: 65, scope: !12453, inlinedAt: !15306)
!15448 = !DILocation(line: 161, column: 33, scope: !12453, inlinedAt: !15306)
!15449 = !DILocation(line: 161, column: 4, scope: !12453, inlinedAt: !15306)
!15450 = !DILocation(line: 164, column: 1, scope: !12289, inlinedAt: !15306)
!15451 = !DILocation(line: 1190, column: 2, scope: !15301)
!15452 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3208, file: !3208, line: 1517, type: !14878, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15453 = !DILocalVariable(name: "thread", arg: 1, scope: !15452, file: !3208, line: 1517, type: !14708)
!15454 = !DILocation(line: 1517, column: 30, scope: !15452)
!15455 = !DILocation(line: 1519, column: 2, scope: !15452)
!15456 = !DILocation(line: 1519, column: 2, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15452, file: !3208, line: 1519, column: 2)
!15458 = !DILocation(line: 1521, column: 26, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15452, file: !3208, line: 1521, column: 6)
!15460 = !DILocation(line: 1521, column: 6, scope: !15459)
!15461 = !DILocation(line: 1521, column: 6, scope: !15452)
!15462 = !DILocation(line: 1522, column: 3, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15459, file: !3208, line: 1521, column: 35)
!15464 = !DILocation(line: 1525, column: 29, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15452, file: !3208, line: 1525, column: 6)
!15466 = !DILocation(line: 1525, column: 6, scope: !15465)
!15467 = !DILocation(line: 1525, column: 37, scope: !15465)
!15468 = !DILocation(line: 1525, column: 6, scope: !15452)
!15469 = !DILocation(line: 1527, column: 7, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !3208, line: 1527, column: 7)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !3208, line: 1525, column: 42)
!15472 = !DILocation(line: 1527, column: 15, scope: !15470)
!15473 = !DILocation(line: 1527, column: 20, scope: !15470)
!15474 = !DILocation(line: 1527, column: 33, scope: !15470)
!15475 = !DILocation(line: 1527, column: 7, scope: !15471)
!15476 = !DILocation(line: 1528, column: 4, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15470, file: !3208, line: 1527, column: 55)
!15478 = !DILocation(line: 1530, column: 2, scope: !15471)
!15479 = !DILocation(line: 1532, column: 33, scope: !15452)
!15480 = !DILocation(line: 1532, column: 2, scope: !15452)
!15481 = !DILocation(line: 1533, column: 17, scope: !15452)
!15482 = !DILocation(line: 1533, column: 2, scope: !15452)
!15483 = !DILocation(line: 1535, column: 2, scope: !15452)
!15484 = !DILocation(line: 1029, column: 12, scope: !13355, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 48, column: 10, scope: !13358, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 1537, column: 7, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15452, file: !3208, line: 1537, column: 6)
!15488 = !DILocation(line: 1031, column: 3, scope: !13355, inlinedAt: !15485)
!15489 = !DILocation(line: 1032, column: 10, scope: !13355, inlinedAt: !15485)
!15490 = !DILocation(line: 48, column: 9, scope: !13358, inlinedAt: !15486)
!15491 = !DILocation(line: 1537, column: 6, scope: !15452)
!15492 = !DILocation(line: 1538, column: 3, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15487, file: !3208, line: 1537, column: 25)
!15494 = !DILocation(line: 1539, column: 2, scope: !15493)
!15495 = !DILocation(line: 1540, column: 1, scope: !15452)
!15496 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11037, file: !11037, line: 101, type: !12551, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15497 = !DILocalVariable(name: "thread", arg: 1, scope: !15496, file: !11037, line: 101, type: !3109)
!15498 = !DILocation(line: 101, column: 57, scope: !15496)
!15499 = !DILocation(line: 103, column: 10, scope: !15496)
!15500 = !DILocation(line: 103, column: 18, scope: !15496)
!15501 = !DILocation(line: 103, column: 23, scope: !15496)
!15502 = !DILocation(line: 103, column: 36, scope: !15496)
!15503 = !DILocation(line: 103, column: 55, scope: !15496)
!15504 = !DILocation(line: 103, column: 2, scope: !15496)
!15505 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3208, file: !3208, line: 1567, type: !15506, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15506 = !DISubroutineType(types: !15507)
!15507 = !{!14708}
!15508 = !DILocalVariable(name: "ret", scope: !15505, file: !3208, line: 1577, type: !14708)
!15509 = !DILocation(line: 1577, column: 10, scope: !15505)
!15510 = !DILocation(line: 1577, column: 30, scope: !15505)
!15511 = !DILocation(line: 1582, column: 9, scope: !15505)
!15512 = !DILocation(line: 1582, column: 2, scope: !15505)
!15513 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3208, file: !3208, line: 1593, type: !3683, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15514 = !DILocation(line: 1029, column: 12, scope: !13355, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 48, column: 10, scope: !13358, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 1595, column: 10, scope: !15513)
!15517 = !DILocation(line: 1031, column: 3, scope: !13355, inlinedAt: !15515)
!15518 = !DILocation(line: 1032, column: 10, scope: !13355, inlinedAt: !15515)
!15519 = !DILocation(line: 48, column: 9, scope: !13358, inlinedAt: !15516)
!15520 = !DILocation(line: 1595, column: 27, scope: !15513)
!15521 = !DILocation(line: 1595, column: 41, scope: !15513)
!15522 = !DILocation(line: 1595, column: 30, scope: !15513)
!15523 = !DILocation(line: 0, scope: !15513)
!15524 = !DILocation(line: 1595, column: 2, scope: !15513)
!15525 = distinct !DISubprogram(name: "z_thread_abort", scope: !3208, file: !3208, line: 1725, type: !12171, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15526 = !DILocalVariable(name: "thread", arg: 1, scope: !15525, file: !3208, line: 1725, type: !3109)
!15527 = !DILocation(line: 1725, column: 38, scope: !15525)
!15528 = !DILocalVariable(name: "key", scope: !15525, file: !3208, line: 1727, type: !12210)
!15529 = !DILocation(line: 1727, column: 19, scope: !15525)
!15530 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 1727, column: 25, scope: !15525)
!15532 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !15531)
!15533 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !15531)
!15534 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !15531)
!15536 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !15535)
!15537 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !15535)
!15538 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !15531)
!15539 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !15531)
!15540 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !15531)
!15541 = !DILocation(line: 1727, column: 25, scope: !15525)
!15542 = !DILocation(line: 1729, column: 7, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15525, file: !3208, line: 1729, column: 6)
!15544 = !DILocation(line: 1729, column: 15, scope: !15543)
!15545 = !DILocation(line: 1729, column: 20, scope: !15543)
!15546 = !DILocation(line: 1729, column: 33, scope: !15543)
!15547 = !DILocation(line: 1729, column: 48, scope: !15543)
!15548 = !DILocation(line: 1729, column: 6, scope: !15525)
!15549 = !DILocation(line: 1730, column: 3, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15543, file: !3208, line: 1729, column: 54)
!15551 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 1730, column: 3, scope: !15550)
!15553 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !15552)
!15554 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !15552)
!15555 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !15552)
!15556 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !15552)
!15558 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !15557)
!15559 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !15557)
!15560 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !15557)
!15561 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !15557)
!15562 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !15557)
!15563 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !15557)
!15564 = !DILocalVariable(name: "r0", scope: !15550, file: !3208, line: 1732, type: !173)
!15565 = !DILocation(line: 1732, column: 3, scope: !15550)
!15566 = !DILocation(line: 1732, column: 3, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15550, file: !3208, line: 1732, column: 3)
!15568 = !{i64 2152055853, i64 2152055863, i64 2152055883}
!15569 = !DILocation(line: 1733, column: 3, scope: !15550)
!15570 = !DILocation(line: 1736, column: 7, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15525, file: !3208, line: 1736, column: 6)
!15572 = !DILocation(line: 1736, column: 15, scope: !15571)
!15573 = !DILocation(line: 1736, column: 20, scope: !15571)
!15574 = !DILocation(line: 1736, column: 33, scope: !15571)
!15575 = !DILocation(line: 1736, column: 49, scope: !15571)
!15576 = !DILocation(line: 1736, column: 6, scope: !15525)
!15577 = !DILocation(line: 1737, column: 3, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15571, file: !3208, line: 1736, column: 56)
!15579 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !15580)
!15580 = distinct !DILocation(line: 1737, column: 3, scope: !15578)
!15581 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !15580)
!15582 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !15580)
!15583 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !15580)
!15584 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !15580)
!15586 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !15585)
!15587 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !15585)
!15588 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !15585)
!15589 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !15585)
!15590 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !15585)
!15591 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !15585)
!15592 = !DILocation(line: 1738, column: 3, scope: !15578)
!15593 = !DILocation(line: 1775, column: 13, scope: !15525)
!15594 = !DILocation(line: 1775, column: 2, scope: !15525)
!15595 = !DILocation(line: 1776, column: 6, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15525, file: !3208, line: 1776, column: 6)
!15597 = !DILocation(line: 1776, column: 16, scope: !15596)
!15598 = !DILocation(line: 1776, column: 13, scope: !15596)
!15599 = !DILocation(line: 1776, column: 25, scope: !15596)
!15600 = !DILocation(line: 1029, column: 12, scope: !13355, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 48, column: 10, scope: !13358, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 1776, column: 29, scope: !15596)
!15603 = !DILocation(line: 1031, column: 3, scope: !13355, inlinedAt: !15601)
!15604 = !DILocation(line: 1032, column: 10, scope: !13355, inlinedAt: !15601)
!15605 = !DILocation(line: 48, column: 9, scope: !13358, inlinedAt: !15602)
!15606 = !DILocation(line: 1776, column: 6, scope: !15525)
!15607 = !DILocation(line: 1777, column: 3, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15596, file: !3208, line: 1776, column: 47)
!15609 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 1777, column: 3, scope: !15608)
!15611 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !15610)
!15612 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !15610)
!15613 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !15610)
!15615 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !15614)
!15616 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !15610)
!15617 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !15610)
!15618 = !DILocation(line: 1779, column: 2, scope: !15608)
!15619 = !DILocation(line: 1780, column: 2, scope: !15525)
!15620 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !15621)
!15621 = distinct !DILocation(line: 1780, column: 2, scope: !15525)
!15622 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !15621)
!15623 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !15621)
!15624 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !15621)
!15625 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !15626)
!15626 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !15621)
!15627 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !15626)
!15628 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !15626)
!15629 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !15626)
!15630 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !15626)
!15631 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !15626)
!15632 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !15626)
!15633 = !DILocation(line: 1781, column: 1, scope: !15525)
!15634 = distinct !DISubprogram(name: "end_thread", scope: !3208, file: !3208, line: 1690, type: !12171, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15635 = !DILocalVariable(name: "thread", arg: 1, scope: !15634, file: !3208, line: 1690, type: !3109)
!15636 = !DILocation(line: 1690, column: 41, scope: !15634)
!15637 = !DILocation(line: 1695, column: 7, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !3208, line: 1695, column: 6)
!15639 = !DILocation(line: 1695, column: 15, scope: !15638)
!15640 = !DILocation(line: 1695, column: 20, scope: !15638)
!15641 = !DILocation(line: 1695, column: 33, scope: !15638)
!15642 = !DILocation(line: 1695, column: 49, scope: !15638)
!15643 = !DILocation(line: 1695, column: 6, scope: !15634)
!15644 = !DILocation(line: 1696, column: 3, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15638, file: !3208, line: 1695, column: 56)
!15646 = !DILocation(line: 1696, column: 11, scope: !15645)
!15647 = !DILocation(line: 1696, column: 16, scope: !15645)
!15648 = !DILocation(line: 1696, column: 29, scope: !15645)
!15649 = !DILocation(line: 1697, column: 3, scope: !15645)
!15650 = !DILocation(line: 1697, column: 11, scope: !15645)
!15651 = !DILocation(line: 1697, column: 16, scope: !15645)
!15652 = !DILocation(line: 1697, column: 29, scope: !15645)
!15653 = !DILocation(line: 1698, column: 26, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15645, file: !3208, line: 1698, column: 7)
!15655 = !DILocation(line: 1698, column: 7, scope: !15654)
!15656 = !DILocation(line: 1698, column: 7, scope: !15645)
!15657 = !DILocation(line: 1699, column: 19, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15654, file: !3208, line: 1698, column: 35)
!15659 = !DILocation(line: 264, column: 59, scope: !12617, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 1699, column: 4, scope: !15658)
!15661 = !DILocation(line: 266, column: 2, scope: !12617, inlinedAt: !15660)
!15662 = !DILocation(line: 266, column: 10, scope: !12617, inlinedAt: !15660)
!15663 = !DILocation(line: 266, column: 15, scope: !12617, inlinedAt: !15660)
!15664 = !DILocation(line: 266, column: 28, scope: !12617, inlinedAt: !15660)
!15665 = !DILocation(line: 267, column: 26, scope: !12625, inlinedAt: !15660)
!15666 = !DILocation(line: 267, column: 6, scope: !12625, inlinedAt: !15660)
!15667 = !DILocation(line: 267, column: 6, scope: !12617, inlinedAt: !15660)
!15668 = !DILocation(line: 268, column: 15, scope: !12629, inlinedAt: !15660)
!15669 = !DILocation(line: 232, column: 56, scope: !12631, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 268, column: 3, scope: !12629, inlinedAt: !15660)
!15671 = !DILocation(line: 234, column: 31, scope: !12631, inlinedAt: !15670)
!15672 = !DILocation(line: 199, column: 57, scope: !12636, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !15670)
!15674 = !DILocation(line: 234, column: 19, scope: !12631, inlinedAt: !15670)
!15675 = !DILocation(line: 234, column: 40, scope: !12631, inlinedAt: !15670)
!15676 = !DILocation(line: 234, column: 2, scope: !12631, inlinedAt: !15670)
!15677 = !DILocation(line: 269, column: 2, scope: !12629, inlinedAt: !15660)
!15678 = !DILocation(line: 1700, column: 3, scope: !15658)
!15679 = !DILocation(line: 1701, column: 7, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15645, file: !3208, line: 1701, column: 7)
!15681 = !DILocation(line: 1701, column: 15, scope: !15680)
!15682 = !DILocation(line: 1701, column: 20, scope: !15680)
!15683 = !DILocation(line: 1701, column: 30, scope: !15680)
!15684 = !DILocation(line: 1701, column: 7, scope: !15645)
!15685 = !DILocation(line: 1702, column: 29, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15680, file: !3208, line: 1701, column: 39)
!15687 = !DILocation(line: 1702, column: 4, scope: !15686)
!15688 = !DILocation(line: 1703, column: 3, scope: !15686)
!15689 = !DILocation(line: 1704, column: 32, scope: !15645)
!15690 = !DILocation(line: 1704, column: 9, scope: !15645)
!15691 = !DILocation(line: 1705, column: 15, scope: !15645)
!15692 = !DILocation(line: 1705, column: 23, scope: !15645)
!15693 = !DILocation(line: 1705, column: 3, scope: !15645)
!15694 = !DILocation(line: 1706, column: 3, scope: !15645)
!15695 = !DILocation(line: 1708, column: 3, scope: !15645)
!15696 = !DILocation(line: 1708, column: 3, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15645, file: !3208, line: 1708, column: 3)
!15698 = !DILocation(line: 1710, column: 3, scope: !15645)
!15699 = !DILocation(line: 1710, column: 3, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15645, file: !3208, line: 1710, column: 3)
!15701 = !DILocation(line: 1722, column: 2, scope: !15645)
!15702 = !DILocation(line: 1723, column: 1, scope: !15634)
!15703 = distinct !DISubprogram(name: "unpend_all", scope: !3208, file: !3208, line: 1674, type: !15704, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15704 = !DISubroutineType(types: !15705)
!15705 = !{null, !3140}
!15706 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15703, file: !3208, line: 1674, type: !3140)
!15707 = !DILocation(line: 1674, column: 42, scope: !15703)
!15708 = !DILocalVariable(name: "thread", scope: !15703, file: !3208, line: 1676, type: !3109)
!15709 = !DILocation(line: 1676, column: 19, scope: !15703)
!15710 = !DILocation(line: 1678, column: 2, scope: !15703)
!15711 = !DILocation(line: 1678, column: 32, scope: !15703)
!15712 = !DILocation(line: 1678, column: 19, scope: !15703)
!15713 = !DILocation(line: 1678, column: 17, scope: !15703)
!15714 = !DILocation(line: 1678, column: 41, scope: !15703)
!15715 = !DILocation(line: 1679, column: 28, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15703, file: !3208, line: 1678, column: 50)
!15717 = !DILocation(line: 1679, column: 3, scope: !15716)
!15718 = !DILocation(line: 1680, column: 32, scope: !15716)
!15719 = !DILocation(line: 1680, column: 9, scope: !15716)
!15720 = !DILocation(line: 1681, column: 32, scope: !15716)
!15721 = !DILocalVariable(name: "thread", arg: 1, scope: !15722, file: !11056, line: 65, type: !3109)
!15722 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11056, file: !11056, line: 65, type: !15723, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{null, !3109, !32}
!15725 = !DILocation(line: 65, column: 47, scope: !15722, inlinedAt: !15726)
!15726 = distinct !DILocation(line: 1681, column: 3, scope: !15716)
!15727 = !DILocalVariable(name: "value", arg: 2, scope: !15722, file: !11056, line: 65, type: !32)
!15728 = !DILocation(line: 65, column: 68, scope: !15722, inlinedAt: !15726)
!15729 = !DILocation(line: 67, column: 35, scope: !15722, inlinedAt: !15726)
!15730 = !DILocation(line: 67, column: 2, scope: !15722, inlinedAt: !15726)
!15731 = !DILocation(line: 67, column: 10, scope: !15722, inlinedAt: !15726)
!15732 = !DILocation(line: 67, column: 15, scope: !15722, inlinedAt: !15726)
!15733 = !DILocation(line: 67, column: 33, scope: !15722, inlinedAt: !15726)
!15734 = !DILocation(line: 1682, column: 16, scope: !15716)
!15735 = !DILocation(line: 1682, column: 3, scope: !15716)
!15736 = distinct !{!15736, !15710, !15737}
!15737 = !DILocation(line: 1683, column: 2, scope: !15703)
!15738 = !DILocation(line: 1684, column: 1, scope: !15703)
!15739 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3208, file: !3208, line: 1794, type: !15740, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15740 = !DISubroutineType(types: !15741)
!15741 = !{!103, !3109, !13595}
!15742 = !DILocalVariable(name: "thread", arg: 1, scope: !15739, file: !3208, line: 1794, type: !3109)
!15743 = !DILocation(line: 1794, column: 43, scope: !15739)
!15744 = !DILocalVariable(name: "timeout", arg: 2, scope: !15739, file: !3208, line: 1794, type: !13595)
!15745 = !DILocation(line: 1794, column: 63, scope: !15739)
!15746 = !DILocalVariable(name: "key", scope: !15739, file: !3208, line: 1796, type: !12210)
!15747 = !DILocation(line: 1796, column: 19, scope: !15739)
!15748 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 1796, column: 25, scope: !15739)
!15750 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !15749)
!15751 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !15749)
!15752 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !15753)
!15753 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !15749)
!15754 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !15753)
!15755 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !15753)
!15756 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !15749)
!15757 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !15749)
!15758 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !15749)
!15759 = !DILocation(line: 1796, column: 25, scope: !15739)
!15760 = !DILocalVariable(name: "ret", scope: !15739, file: !3208, line: 1797, type: !103)
!15761 = !DILocation(line: 1797, column: 6, scope: !15739)
!15762 = !DILocation(line: 1799, column: 2, scope: !15739)
!15763 = !DILocation(line: 1799, column: 2, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15739, file: !3208, line: 1799, column: 2)
!15765 = !DILocation(line: 1801, column: 7, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15739, file: !3208, line: 1801, column: 6)
!15767 = !DILocation(line: 1801, column: 15, scope: !15766)
!15768 = !DILocation(line: 1801, column: 20, scope: !15766)
!15769 = !DILocation(line: 1801, column: 33, scope: !15766)
!15770 = !DILocation(line: 1801, column: 49, scope: !15766)
!15771 = !DILocation(line: 1801, column: 6, scope: !15739)
!15772 = !DILocation(line: 1802, column: 7, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15766, file: !3208, line: 1801, column: 56)
!15774 = !DILocation(line: 1803, column: 2, scope: !15773)
!15775 = !DILocation(line: 1803, column: 13, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15766, file: !3208, line: 1803, column: 13)
!15777 = !DILocation(line: 1803, column: 13, scope: !15766)
!15778 = !DILocation(line: 1804, column: 7, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15776, file: !3208, line: 1803, column: 47)
!15780 = !DILocation(line: 1805, column: 2, scope: !15779)
!15781 = !DILocation(line: 1805, column: 14, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15776, file: !3208, line: 1805, column: 13)
!15783 = !DILocation(line: 1805, column: 24, scope: !15782)
!15784 = !DILocation(line: 1805, column: 21, scope: !15782)
!15785 = !DILocation(line: 1805, column: 34, scope: !15782)
!15786 = !DILocation(line: 1806, column: 7, scope: !15782)
!15787 = !DILocation(line: 1806, column: 15, scope: !15782)
!15788 = !DILocation(line: 1806, column: 20, scope: !15782)
!15789 = !DILocation(line: 1806, column: 34, scope: !15782)
!15790 = !DILocation(line: 1806, column: 44, scope: !15782)
!15791 = !DILocation(line: 1806, column: 30, scope: !15782)
!15792 = !DILocation(line: 1805, column: 13, scope: !15776)
!15793 = !DILocation(line: 1807, column: 7, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15782, file: !3208, line: 1806, column: 57)
!15795 = !DILocation(line: 1808, column: 2, scope: !15794)
!15796 = !DILocation(line: 1810, column: 23, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15782, file: !3208, line: 1808, column: 9)
!15798 = !DILocation(line: 1810, column: 34, scope: !15797)
!15799 = !DILocation(line: 1810, column: 42, scope: !15797)
!15800 = !DILocation(line: 1810, column: 3, scope: !15797)
!15801 = !DILocation(line: 1811, column: 22, scope: !15797)
!15802 = !DILocation(line: 1811, column: 3, scope: !15797)
!15803 = !DILocation(line: 1813, column: 3, scope: !15797)
!15804 = !DILocation(line: 1813, column: 3, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15797, file: !3208, line: 1813, column: 3)
!15806 = !DILocation(line: 1814, column: 9, scope: !15797)
!15807 = !DILocation(line: 193, column: 52, scope: !13303, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 1814, column: 9, scope: !15797)
!15809 = !DILocation(line: 193, column: 75, scope: !13303, inlinedAt: !15808)
!15810 = !DILocation(line: 195, column: 17, scope: !13303, inlinedAt: !15808)
!15811 = !DILocation(line: 221, column: 61, scope: !13312, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 195, column: 2, scope: !13303, inlinedAt: !15808)
!15813 = !DILocation(line: 223, column: 2, scope: !13312, inlinedAt: !15812)
!15814 = !DILocation(line: 196, column: 28, scope: !13303, inlinedAt: !15808)
!15815 = !DILocation(line: 196, column: 9, scope: !13303, inlinedAt: !15808)
!15816 = !DILocation(line: 1814, column: 7, scope: !15797)
!15817 = !DILocation(line: 1815, column: 3, scope: !15797)
!15818 = !DILocation(line: 1815, column: 3, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15797, file: !3208, line: 1815, column: 3)
!15820 = !DILocation(line: 1817, column: 10, scope: !15797)
!15821 = !DILocation(line: 1817, column: 3, scope: !15797)
!15822 = !DILocation(line: 1820, column: 2, scope: !15739)
!15823 = !DILocation(line: 1820, column: 2, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15739, file: !3208, line: 1820, column: 2)
!15825 = !DILocation(line: 1822, column: 2, scope: !15739)
!15826 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 1822, column: 2, scope: !15739)
!15828 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !15827)
!15829 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !15827)
!15830 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !15827)
!15831 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !15827)
!15833 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !15832)
!15834 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !15832)
!15835 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !15832)
!15836 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !15832)
!15837 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !15832)
!15838 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !15832)
!15839 = !DILocation(line: 1823, column: 9, scope: !15739)
!15840 = !DILocation(line: 1823, column: 2, scope: !15739)
!15841 = !DILocation(line: 1824, column: 1, scope: !15739)
!15842 = distinct !DISubprogram(name: "z_sched_wake", scope: !3208, file: !3208, line: 1882, type: !15843, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15843 = !DISubroutineType(types: !15844)
!15844 = !{!1035, !3140, !103, !102}
!15845 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15842, file: !3208, line: 1882, type: !3140)
!15846 = !DILocation(line: 1882, column: 30, scope: !15842)
!15847 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15842, file: !3208, line: 1882, type: !103)
!15848 = !DILocation(line: 1882, column: 42, scope: !15842)
!15849 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15842, file: !3208, line: 1882, type: !102)
!15850 = !DILocation(line: 1882, column: 61, scope: !15842)
!15851 = !DILocalVariable(name: "thread", scope: !15842, file: !3208, line: 1884, type: !3109)
!15852 = !DILocation(line: 1884, column: 19, scope: !15842)
!15853 = !DILocalVariable(name: "ret", scope: !15842, file: !3208, line: 1885, type: !1035)
!15854 = !DILocation(line: 1885, column: 7, scope: !15842)
!15855 = !DILocalVariable(name: "__i", scope: !15856, file: !3208, line: 1887, type: !12210)
!15856 = distinct !DILexicalBlock(scope: !15842, file: !3208, line: 1887, column: 2)
!15857 = !DILocation(line: 1887, column: 2, scope: !15856)
!15858 = !DILocalVariable(name: "__key", scope: !15856, file: !3208, line: 1887, type: !12210)
!15859 = !DILocation(line: 136, column: 70, scope: !12217, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 1887, column: 2, scope: !15856)
!15861 = !DILocation(line: 138, column: 2, scope: !12217, inlinedAt: !15860)
!15862 = !DILocation(line: 139, column: 19, scope: !12217, inlinedAt: !15860)
!15863 = !DILocation(line: 44, column: 15, scope: !12227, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 145, column: 10, scope: !12217, inlinedAt: !15860)
!15865 = !DILocation(line: 47, column: 2, scope: !12227, inlinedAt: !15864)
!15866 = !DILocation(line: 76, column: 9, scope: !12227, inlinedAt: !15864)
!15867 = !DILocation(line: 145, column: 4, scope: !12217, inlinedAt: !15860)
!15868 = !DILocation(line: 145, column: 8, scope: !12217, inlinedAt: !15860)
!15869 = !DILocation(line: 165, column: 2, scope: !12217, inlinedAt: !15860)
!15870 = !DILocation(line: 1887, column: 2, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15856, file: !3208, line: 1887, column: 2)
!15872 = !DILocation(line: 1888, column: 29, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15871, file: !3208, line: 1887, column: 26)
!15874 = !DILocation(line: 1888, column: 37, scope: !15873)
!15875 = !DILocation(line: 1888, column: 12, scope: !15873)
!15876 = !DILocation(line: 1888, column: 10, scope: !15873)
!15877 = !DILocation(line: 1890, column: 7, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15873, file: !3208, line: 1890, column: 7)
!15879 = !DILocation(line: 1890, column: 14, scope: !15878)
!15880 = !DILocation(line: 1890, column: 7, scope: !15873)
!15881 = !DILocation(line: 1891, column: 40, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15878, file: !3208, line: 1890, column: 23)
!15883 = !DILocation(line: 1892, column: 12, scope: !15882)
!15884 = !DILocation(line: 1893, column: 12, scope: !15882)
!15885 = !DILocalVariable(name: "thread", arg: 1, scope: !15886, file: !15887, line: 134, type: !3109)
!15886 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15887, file: !15887, line: 134, type: !15888, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15887 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15888 = !DISubroutineType(types: !15889)
!15889 = !{null, !3109, !32, !102}
!15890 = !DILocation(line: 134, column: 54, scope: !15886, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 1891, column: 4, scope: !15882)
!15892 = !DILocalVariable(name: "value", arg: 2, scope: !15886, file: !15887, line: 135, type: !32)
!15893 = !DILocation(line: 135, column: 21, scope: !15886, inlinedAt: !15891)
!15894 = !DILocalVariable(name: "data", arg: 3, scope: !15886, file: !15887, line: 136, type: !102)
!15895 = !DILocation(line: 136, column: 14, scope: !15886, inlinedAt: !15891)
!15896 = !DILocation(line: 138, column: 31, scope: !15886, inlinedAt: !15891)
!15897 = !DILocation(line: 138, column: 39, scope: !15886, inlinedAt: !15891)
!15898 = !DILocation(line: 65, column: 47, scope: !15722, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 138, column: 2, scope: !15886, inlinedAt: !15891)
!15900 = !DILocation(line: 65, column: 68, scope: !15722, inlinedAt: !15899)
!15901 = !DILocation(line: 67, column: 35, scope: !15722, inlinedAt: !15899)
!15902 = !DILocation(line: 67, column: 2, scope: !15722, inlinedAt: !15899)
!15903 = !DILocation(line: 67, column: 10, scope: !15722, inlinedAt: !15899)
!15904 = !DILocation(line: 67, column: 15, scope: !15722, inlinedAt: !15899)
!15905 = !DILocation(line: 67, column: 33, scope: !15722, inlinedAt: !15899)
!15906 = !DILocation(line: 139, column: 27, scope: !15886, inlinedAt: !15891)
!15907 = !DILocation(line: 139, column: 2, scope: !15886, inlinedAt: !15891)
!15908 = !DILocation(line: 139, column: 10, scope: !15886, inlinedAt: !15891)
!15909 = !DILocation(line: 139, column: 15, scope: !15886, inlinedAt: !15891)
!15910 = !DILocation(line: 139, column: 25, scope: !15886, inlinedAt: !15891)
!15911 = !DILocation(line: 1894, column: 29, scope: !15882)
!15912 = !DILocation(line: 1894, column: 4, scope: !15882)
!15913 = !DILocation(line: 1895, column: 33, scope: !15882)
!15914 = !DILocation(line: 1895, column: 10, scope: !15882)
!15915 = !DILocation(line: 1896, column: 17, scope: !15882)
!15916 = !DILocation(line: 1896, column: 4, scope: !15882)
!15917 = !DILocation(line: 1897, column: 8, scope: !15882)
!15918 = !DILocation(line: 1898, column: 3, scope: !15882)
!15919 = !DILocation(line: 1899, column: 2, scope: !15873)
!15920 = !DILocation(line: 189, column: 60, scope: !12257, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 1887, column: 2, scope: !15871)
!15922 = !DILocation(line: 190, column: 23, scope: !12257, inlinedAt: !15921)
!15923 = !DILocation(line: 192, column: 2, scope: !12257, inlinedAt: !15921)
!15924 = !DILocation(line: 215, column: 22, scope: !12257, inlinedAt: !15921)
!15925 = !DILocation(line: 84, column: 56, scope: !12267, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 215, column: 2, scope: !12257, inlinedAt: !15921)
!15927 = !DILocation(line: 87, column: 6, scope: !12271, inlinedAt: !15926)
!15928 = !DILocation(line: 87, column: 10, scope: !12271, inlinedAt: !15926)
!15929 = !DILocation(line: 87, column: 6, scope: !12267, inlinedAt: !15926)
!15930 = !DILocation(line: 88, column: 3, scope: !12275, inlinedAt: !15926)
!15931 = !DILocation(line: 90, column: 2, scope: !12267, inlinedAt: !15926)
!15932 = !DILocation(line: 110, column: 1, scope: !12267, inlinedAt: !15926)
!15933 = distinct !{!15933, !15857, !15934}
!15934 = !DILocation(line: 1899, column: 2, scope: !15856)
!15935 = !DILocation(line: 1901, column: 9, scope: !15842)
!15936 = !DILocation(line: 1901, column: 2, scope: !15842)
!15937 = distinct !DISubprogram(name: "z_sched_wait", scope: !3208, file: !3208, line: 1904, type: !15938, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3097, retainedNodes: !223)
!15938 = !DISubroutineType(types: !15939)
!15939 = !{!103, !12220, !12210, !3140, !13595, !15940}
!15940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15941 = !DILocalVariable(name: "lock", arg: 1, scope: !15937, file: !3208, line: 1904, type: !12220)
!15942 = !DILocation(line: 1904, column: 37, scope: !15937)
!15943 = !DILocalVariable(name: "key", arg: 2, scope: !15937, file: !3208, line: 1904, type: !12210)
!15944 = !DILocation(line: 1904, column: 60, scope: !15937)
!15945 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15937, file: !3208, line: 1905, type: !3140)
!15946 = !DILocation(line: 1905, column: 15, scope: !15937)
!15947 = !DILocalVariable(name: "timeout", arg: 4, scope: !15937, file: !3208, line: 1905, type: !13595)
!15948 = !DILocation(line: 1905, column: 35, scope: !15937)
!15949 = !DILocalVariable(name: "data", arg: 5, scope: !15937, file: !3208, line: 1905, type: !15940)
!15950 = !DILocation(line: 1905, column: 51, scope: !15937)
!15951 = !DILocalVariable(name: "ret", scope: !15937, file: !3208, line: 1907, type: !103)
!15952 = !DILocation(line: 1907, column: 6, scope: !15937)
!15953 = !DILocation(line: 1907, column: 24, scope: !15937)
!15954 = !DILocation(line: 1907, column: 35, scope: !15937)
!15955 = !DILocation(line: 1907, column: 12, scope: !15937)
!15956 = !DILocation(line: 1909, column: 6, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15937, file: !3208, line: 1909, column: 6)
!15958 = !DILocation(line: 1909, column: 11, scope: !15957)
!15959 = !DILocation(line: 1909, column: 6, scope: !15937)
!15960 = !DILocation(line: 1910, column: 11, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15957, file: !3208, line: 1909, column: 20)
!15962 = !DILocation(line: 1910, column: 21, scope: !15961)
!15963 = !DILocation(line: 1910, column: 26, scope: !15961)
!15964 = !DILocation(line: 1910, column: 4, scope: !15961)
!15965 = !DILocation(line: 1910, column: 9, scope: !15961)
!15966 = !DILocation(line: 1911, column: 2, scope: !15961)
!15967 = !DILocation(line: 1912, column: 9, scope: !15937)
!15968 = !DILocation(line: 1912, column: 2, scope: !15937)
!15969 = distinct !DISubprogram(name: "z_data_copy", scope: !15970, file: !15970, line: 22, type: !253, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3549, retainedNodes: !223)
!15970 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15971 = !DILocation(line: 24, column: 2, scope: !15969)
!15972 = !DILocation(line: 27, column: 2, scope: !15969)
!15973 = !DILocation(line: 71, column: 1, scope: !15969)
!15974 = distinct !DISubprogram(name: "z_add_timeout", scope: !3245, file: !3245, line: 88, type: !15975, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{null, !3218, !3237, !15977}
!15977 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2506, line: 67, baseType: !15978)
!15978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2506, line: 65, size: 64, elements: !15979)
!15979 = !{!15980}
!15980 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15978, file: !2506, line: 66, baseType: !2505, size: 64)
!15981 = !DILocalVariable(name: "to", arg: 1, scope: !15974, file: !3245, line: 88, type: !3218)
!15982 = !DILocation(line: 88, column: 37, scope: !15974)
!15983 = !DILocalVariable(name: "fn", arg: 2, scope: !15974, file: !3245, line: 88, type: !3237)
!15984 = !DILocation(line: 88, column: 57, scope: !15974)
!15985 = !DILocalVariable(name: "timeout", arg: 3, scope: !15974, file: !3245, line: 89, type: !15977)
!15986 = !DILocation(line: 89, column: 18, scope: !15974)
!15987 = !DILocation(line: 91, column: 6, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15974, file: !3245, line: 91, column: 6)
!15989 = !DILocation(line: 91, column: 6, scope: !15974)
!15990 = !DILocation(line: 92, column: 3, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15988, file: !3245, line: 91, column: 40)
!15992 = !DILocation(line: 100, column: 11, scope: !15974)
!15993 = !DILocation(line: 100, column: 2, scope: !15974)
!15994 = !DILocation(line: 100, column: 6, scope: !15974)
!15995 = !DILocation(line: 100, column: 9, scope: !15974)
!15996 = !DILocalVariable(name: "__i", scope: !15997, file: !3245, line: 102, type: !15998)
!15997 = distinct !DILexicalBlock(scope: !15974, file: !3245, line: 102, column: 2)
!15998 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !15999)
!15999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !16000)
!16000 = !{!16001}
!16001 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15999, file: !222, line: 33, baseType: !103, size: 32)
!16002 = !DILocation(line: 102, column: 2, scope: !15997)
!16003 = !DILocalVariable(name: "__key", scope: !15997, file: !3245, line: 102, type: !15998)
!16004 = !DILocalVariable(name: "l", arg: 1, scope: !16005, file: !222, line: 136, type: !16008)
!16005 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !16006, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16006 = !DISubroutineType(types: !16007)
!16007 = !{!15998, !16008}
!16008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!16009 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 102, column: 2, scope: !15997)
!16011 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16010)
!16012 = !DILocalVariable(name: "k", scope: !16005, file: !222, line: 139, type: !15998)
!16013 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16010)
!16014 = !DILocalVariable(name: "key", scope: !16015, file: !6304, line: 44, type: !32)
!16015 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6304, file: !6304, line: 42, type: !6305, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16016 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16010)
!16018 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16017)
!16019 = !{i64 1429208}
!16020 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16017)
!16021 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16010)
!16022 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16010)
!16023 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16010)
!16024 = !DILocation(line: 102, column: 2, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !15997, file: !3245, line: 102, column: 2)
!16026 = !DILocalVariable(name: "t", scope: !16027, file: !3245, line: 103, type: !3218)
!16027 = distinct !DILexicalBlock(scope: !16025, file: !3245, line: 102, column: 24)
!16028 = !DILocation(line: 103, column: 20, scope: !16027)
!16029 = !DILocation(line: 106, column: 7, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16027, file: !3245, line: 105, column: 7)
!16031 = !DILocation(line: 106, column: 33, scope: !16030)
!16032 = !DILocation(line: 105, column: 7, scope: !16027)
!16033 = !DILocalVariable(name: "ticks", scope: !16034, file: !3245, line: 107, type: !2505)
!16034 = distinct !DILexicalBlock(scope: !16030, file: !3245, line: 106, column: 39)
!16035 = !DILocation(line: 107, column: 14, scope: !16034)
!16036 = !DILocation(line: 107, column: 22, scope: !16034)
!16037 = !DILocation(line: 107, column: 50, scope: !16034)
!16038 = !DILocation(line: 107, column: 48, scope: !16034)
!16039 = !DILocation(line: 109, column: 17, scope: !16034)
!16040 = !DILocation(line: 109, column: 4, scope: !16034)
!16041 = !DILocation(line: 109, column: 8, scope: !16034)
!16042 = !DILocation(line: 109, column: 15, scope: !16034)
!16043 = !DILocation(line: 110, column: 3, scope: !16034)
!16044 = !DILocation(line: 111, column: 25, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16030, file: !3245, line: 110, column: 10)
!16046 = !DILocation(line: 111, column: 31, scope: !16045)
!16047 = !DILocation(line: 111, column: 37, scope: !16045)
!16048 = !DILocation(line: 111, column: 35, scope: !16045)
!16049 = !DILocation(line: 111, column: 4, scope: !16045)
!16050 = !DILocation(line: 111, column: 8, scope: !16045)
!16051 = !DILocation(line: 111, column: 15, scope: !16045)
!16052 = !DILocation(line: 114, column: 12, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16027, file: !3245, line: 114, column: 3)
!16054 = !DILocation(line: 114, column: 10, scope: !16053)
!16055 = !DILocation(line: 114, column: 8, scope: !16053)
!16056 = !DILocation(line: 114, column: 21, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16053, file: !3245, line: 114, column: 3)
!16058 = !DILocation(line: 114, column: 23, scope: !16057)
!16059 = !DILocation(line: 114, column: 3, scope: !16053)
!16060 = !DILocation(line: 115, column: 8, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16062, file: !3245, line: 115, column: 8)
!16062 = distinct !DILexicalBlock(scope: !16057, file: !3245, line: 114, column: 45)
!16063 = !DILocation(line: 115, column: 11, scope: !16061)
!16064 = !DILocation(line: 115, column: 20, scope: !16061)
!16065 = !DILocation(line: 115, column: 24, scope: !16061)
!16066 = !DILocation(line: 115, column: 18, scope: !16061)
!16067 = !DILocation(line: 115, column: 8, scope: !16062)
!16068 = !DILocation(line: 116, column: 18, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16061, file: !3245, line: 115, column: 32)
!16070 = !DILocation(line: 116, column: 22, scope: !16069)
!16071 = !DILocation(line: 116, column: 5, scope: !16069)
!16072 = !DILocation(line: 116, column: 8, scope: !16069)
!16073 = !DILocation(line: 116, column: 15, scope: !16069)
!16074 = !DILocation(line: 117, column: 23, scope: !16069)
!16075 = !DILocation(line: 117, column: 26, scope: !16069)
!16076 = !DILocation(line: 117, column: 33, scope: !16069)
!16077 = !DILocation(line: 117, column: 37, scope: !16069)
!16078 = !DILocation(line: 117, column: 5, scope: !16069)
!16079 = !DILocation(line: 118, column: 5, scope: !16069)
!16080 = !DILocation(line: 120, column: 18, scope: !16062)
!16081 = !DILocation(line: 120, column: 21, scope: !16062)
!16082 = !DILocation(line: 120, column: 4, scope: !16062)
!16083 = !DILocation(line: 120, column: 8, scope: !16062)
!16084 = !DILocation(line: 120, column: 15, scope: !16062)
!16085 = !DILocation(line: 121, column: 3, scope: !16062)
!16086 = !DILocation(line: 114, column: 41, scope: !16057)
!16087 = !DILocation(line: 114, column: 36, scope: !16057)
!16088 = !DILocation(line: 114, column: 34, scope: !16057)
!16089 = !DILocation(line: 114, column: 3, scope: !16057)
!16090 = distinct !{!16090, !16059, !16091}
!16091 = !DILocation(line: 121, column: 3, scope: !16053)
!16092 = !DILocation(line: 123, column: 7, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16027, file: !3245, line: 123, column: 7)
!16094 = !DILocation(line: 123, column: 9, scope: !16093)
!16095 = !DILocation(line: 123, column: 7, scope: !16027)
!16096 = !DILocation(line: 124, column: 37, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16093, file: !3245, line: 123, column: 18)
!16098 = !DILocation(line: 124, column: 41, scope: !16097)
!16099 = !DILocation(line: 124, column: 4, scope: !16097)
!16100 = !DILocation(line: 125, column: 3, scope: !16097)
!16101 = !DILocation(line: 127, column: 7, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16027, file: !3245, line: 127, column: 7)
!16103 = !DILocation(line: 127, column: 13, scope: !16102)
!16104 = !DILocation(line: 127, column: 10, scope: !16102)
!16105 = !DILocation(line: 127, column: 7, scope: !16027)
!16106 = !DILocalVariable(name: "next_time", scope: !16107, file: !3245, line: 137, type: !250)
!16107 = distinct !DILexicalBlock(scope: !16102, file: !3245, line: 127, column: 22)
!16108 = !DILocation(line: 137, column: 12, scope: !16107)
!16109 = !DILocation(line: 137, column: 24, scope: !16107)
!16110 = !DILocation(line: 139, column: 8, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16107, file: !3245, line: 139, column: 8)
!16112 = !DILocation(line: 139, column: 18, scope: !16111)
!16113 = !DILocation(line: 139, column: 23, scope: !16111)
!16114 = !DILocation(line: 140, column: 22, scope: !16111)
!16115 = !DILocation(line: 140, column: 37, scope: !16111)
!16116 = !DILocation(line: 140, column: 34, scope: !16111)
!16117 = !DILocation(line: 139, column: 8, scope: !16107)
!16118 = !DILocation(line: 141, column: 27, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16111, file: !3245, line: 140, column: 48)
!16120 = !DILocation(line: 141, column: 5, scope: !16119)
!16121 = !DILocation(line: 142, column: 4, scope: !16119)
!16122 = !DILocation(line: 146, column: 3, scope: !16107)
!16123 = !DILocation(line: 147, column: 2, scope: !16027)
!16124 = !DILocalVariable(name: "l", arg: 1, scope: !16125, file: !222, line: 189, type: !16008)
!16125 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !16126, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16126 = !DISubroutineType(types: !16127)
!16127 = !{null, !16008, !15998}
!16128 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 102, column: 2, scope: !16025)
!16130 = !DILocalVariable(name: "key", arg: 2, scope: !16125, file: !222, line: 190, type: !15998)
!16131 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16129)
!16132 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16129)
!16133 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16129)
!16134 = !DILocalVariable(name: "key", arg: 1, scope: !16135, file: !6304, line: 84, type: !32)
!16135 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6304, file: !6304, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16136 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16129)
!16138 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16137)
!16139 = distinct !DILexicalBlock(scope: !16135, file: !6304, line: 87, column: 6)
!16140 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16137)
!16141 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16137)
!16142 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16137)
!16143 = distinct !DILexicalBlock(scope: !16139, file: !6304, line: 87, column: 17)
!16144 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16137)
!16145 = !{i64 1430072}
!16146 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16137)
!16147 = distinct !{!16147, !16002, !16148}
!16148 = !DILocation(line: 147, column: 2, scope: !15997)
!16149 = !DILocation(line: 148, column: 1, scope: !15974)
!16150 = distinct !DISubprogram(name: "elapsed", scope: !3245, file: !3245, line: 62, type: !16151, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!250}
!16153 = !DILocation(line: 64, column: 9, scope: !16150)
!16154 = !DILocation(line: 64, column: 28, scope: !16150)
!16155 = !DILocation(line: 64, column: 35, scope: !16150)
!16156 = !DILocation(line: 64, column: 2, scope: !16150)
!16157 = distinct !DISubprogram(name: "first", scope: !3245, file: !3245, line: 39, type: !16158, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{!3218}
!16160 = !DILocalVariable(name: "t", scope: !16157, file: !3245, line: 41, type: !16161)
!16161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 32)
!16162 = !DILocation(line: 41, column: 15, scope: !16157)
!16163 = !DILocation(line: 41, column: 19, scope: !16157)
!16164 = !DILocation(line: 43, column: 9, scope: !16157)
!16165 = !DILocation(line: 43, column: 11, scope: !16157)
!16166 = !DILocation(line: 43, column: 28, scope: !16157)
!16167 = !DILocation(line: 43, column: 2, scope: !16157)
!16168 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !16169, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16169 = !DISubroutineType(types: !16170)
!16170 = !{null, !16161, !16161}
!16171 = !DILocalVariable(name: "successor", arg: 1, scope: !16168, file: !124, line: 443, type: !16161)
!16172 = !DILocation(line: 443, column: 50, scope: !16168)
!16173 = !DILocalVariable(name: "node", arg: 2, scope: !16168, file: !124, line: 443, type: !16161)
!16174 = !DILocation(line: 443, column: 74, scope: !16168)
!16175 = !DILocalVariable(name: "prev", scope: !16168, file: !124, line: 445, type: !16176)
!16176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16161)
!16177 = !DILocation(line: 445, column: 21, scope: !16168)
!16178 = !DILocation(line: 445, column: 28, scope: !16168)
!16179 = !DILocation(line: 445, column: 39, scope: !16168)
!16180 = !DILocation(line: 447, column: 15, scope: !16168)
!16181 = !DILocation(line: 447, column: 2, scope: !16168)
!16182 = !DILocation(line: 447, column: 8, scope: !16168)
!16183 = !DILocation(line: 447, column: 13, scope: !16168)
!16184 = !DILocation(line: 448, column: 15, scope: !16168)
!16185 = !DILocation(line: 448, column: 2, scope: !16168)
!16186 = !DILocation(line: 448, column: 8, scope: !16168)
!16187 = !DILocation(line: 448, column: 13, scope: !16168)
!16188 = !DILocation(line: 449, column: 15, scope: !16168)
!16189 = !DILocation(line: 449, column: 2, scope: !16168)
!16190 = !DILocation(line: 449, column: 8, scope: !16168)
!16191 = !DILocation(line: 449, column: 13, scope: !16168)
!16192 = !DILocation(line: 450, column: 20, scope: !16168)
!16193 = !DILocation(line: 450, column: 2, scope: !16168)
!16194 = !DILocation(line: 450, column: 13, scope: !16168)
!16195 = !DILocation(line: 450, column: 18, scope: !16168)
!16196 = !DILocation(line: 451, column: 1, scope: !16168)
!16197 = distinct !DISubprogram(name: "next", scope: !3245, file: !3245, line: 46, type: !16198, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{!3218, !3218}
!16200 = !DILocalVariable(name: "t", arg: 1, scope: !16197, file: !3245, line: 46, type: !3218)
!16201 = !DILocation(line: 46, column: 47, scope: !16197)
!16202 = !DILocalVariable(name: "n", scope: !16197, file: !3245, line: 48, type: !16161)
!16203 = !DILocation(line: 48, column: 15, scope: !16197)
!16204 = !DILocation(line: 48, column: 55, scope: !16197)
!16205 = !DILocation(line: 48, column: 58, scope: !16197)
!16206 = !DILocation(line: 48, column: 19, scope: !16197)
!16207 = !DILocation(line: 50, column: 9, scope: !16197)
!16208 = !DILocation(line: 50, column: 11, scope: !16197)
!16209 = !DILocation(line: 50, column: 28, scope: !16197)
!16210 = !DILocation(line: 50, column: 2, scope: !16197)
!16211 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !16212, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{null, !16214, !16161}
!16214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 32)
!16215 = !DILocalVariable(name: "list", arg: 1, scope: !16211, file: !124, line: 404, type: !16214)
!16216 = !DILocation(line: 404, column: 50, scope: !16211)
!16217 = !DILocalVariable(name: "node", arg: 2, scope: !16211, file: !124, line: 404, type: !16161)
!16218 = !DILocation(line: 404, column: 69, scope: !16211)
!16219 = !DILocalVariable(name: "tail", scope: !16211, file: !124, line: 406, type: !16176)
!16220 = !DILocation(line: 406, column: 21, scope: !16211)
!16221 = !DILocation(line: 406, column: 28, scope: !16211)
!16222 = !DILocation(line: 406, column: 34, scope: !16211)
!16223 = !DILocation(line: 408, column: 15, scope: !16211)
!16224 = !DILocation(line: 408, column: 2, scope: !16211)
!16225 = !DILocation(line: 408, column: 8, scope: !16211)
!16226 = !DILocation(line: 408, column: 13, scope: !16211)
!16227 = !DILocation(line: 409, column: 15, scope: !16211)
!16228 = !DILocation(line: 409, column: 2, scope: !16211)
!16229 = !DILocation(line: 409, column: 8, scope: !16211)
!16230 = !DILocation(line: 409, column: 13, scope: !16211)
!16231 = !DILocation(line: 411, column: 15, scope: !16211)
!16232 = !DILocation(line: 411, column: 2, scope: !16211)
!16233 = !DILocation(line: 411, column: 8, scope: !16211)
!16234 = !DILocation(line: 411, column: 13, scope: !16211)
!16235 = !DILocation(line: 412, column: 15, scope: !16211)
!16236 = !DILocation(line: 412, column: 2, scope: !16211)
!16237 = !DILocation(line: 412, column: 8, scope: !16211)
!16238 = !DILocation(line: 412, column: 13, scope: !16211)
!16239 = !DILocation(line: 413, column: 1, scope: !16211)
!16240 = distinct !DISubprogram(name: "next_timeout", scope: !3245, file: !3245, line: 67, type: !16151, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16241 = !DILocalVariable(name: "to", scope: !16240, file: !3245, line: 69, type: !3218)
!16242 = !DILocation(line: 69, column: 19, scope: !16240)
!16243 = !DILocation(line: 69, column: 24, scope: !16240)
!16244 = !DILocalVariable(name: "ticks_elapsed", scope: !16240, file: !3245, line: 70, type: !250)
!16245 = !DILocation(line: 70, column: 10, scope: !16240)
!16246 = !DILocation(line: 70, column: 26, scope: !16240)
!16247 = !DILocalVariable(name: "ret", scope: !16240, file: !3245, line: 71, type: !250)
!16248 = !DILocation(line: 71, column: 10, scope: !16240)
!16249 = !DILocation(line: 73, column: 7, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16240, file: !3245, line: 73, column: 6)
!16251 = !DILocation(line: 73, column: 10, scope: !16250)
!16252 = !DILocation(line: 73, column: 19, scope: !16250)
!16253 = !DILocation(line: 74, column: 17, scope: !16250)
!16254 = !DILocation(line: 74, column: 21, scope: !16250)
!16255 = !DILocation(line: 74, column: 30, scope: !16250)
!16256 = !DILocation(line: 74, column: 28, scope: !16250)
!16257 = !DILocation(line: 74, column: 45, scope: !16250)
!16258 = !DILocation(line: 73, column: 6, scope: !16240)
!16259 = !DILocation(line: 75, column: 7, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16250, file: !3245, line: 74, column: 66)
!16261 = !DILocation(line: 76, column: 2, scope: !16260)
!16262 = !DILocation(line: 77, column: 9, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16250, file: !3245, line: 76, column: 9)
!16264 = !DILocation(line: 77, column: 7, scope: !16263)
!16265 = !DILocation(line: 81, column: 20, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16240, file: !3245, line: 81, column: 6)
!16267 = !DILocation(line: 81, column: 6, scope: !16266)
!16268 = !DILocation(line: 81, column: 32, scope: !16266)
!16269 = !DILocation(line: 81, column: 49, scope: !16266)
!16270 = !DILocation(line: 81, column: 63, scope: !16266)
!16271 = !DILocation(line: 81, column: 61, scope: !16266)
!16272 = !DILocation(line: 81, column: 6, scope: !16240)
!16273 = !DILocation(line: 82, column: 23, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16266, file: !3245, line: 81, column: 68)
!16275 = !DILocation(line: 82, column: 7, scope: !16274)
!16276 = !DILocation(line: 83, column: 2, scope: !16274)
!16277 = !DILocation(line: 85, column: 9, scope: !16240)
!16278 = !DILocation(line: 85, column: 2, scope: !16240)
!16279 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !16280, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16280 = !DISubroutineType(types: !16281)
!16281 = !{!16161, !16214, !16161}
!16282 = !DILocalVariable(name: "list", arg: 1, scope: !16279, file: !124, line: 341, type: !16214)
!16283 = !DILocation(line: 341, column: 61, scope: !16279)
!16284 = !DILocalVariable(name: "node", arg: 2, scope: !16279, file: !124, line: 342, type: !16161)
!16285 = !DILocation(line: 342, column: 26, scope: !16279)
!16286 = !DILocation(line: 344, column: 10, scope: !16279)
!16287 = !DILocation(line: 344, column: 15, scope: !16279)
!16288 = !DILocation(line: 344, column: 9, scope: !16279)
!16289 = !DILocation(line: 344, column: 55, scope: !16279)
!16290 = !DILocation(line: 344, column: 61, scope: !16279)
!16291 = !DILocation(line: 344, column: 26, scope: !16279)
!16292 = !DILocation(line: 344, column: 2, scope: !16279)
!16293 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !16280, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16294 = !DILocalVariable(name: "list", arg: 1, scope: !16293, file: !124, line: 325, type: !16214)
!16295 = !DILocation(line: 325, column: 70, scope: !16293)
!16296 = !DILocalVariable(name: "node", arg: 2, scope: !16293, file: !124, line: 326, type: !16161)
!16297 = !DILocation(line: 326, column: 21, scope: !16293)
!16298 = !DILocation(line: 328, column: 10, scope: !16293)
!16299 = !DILocation(line: 328, column: 18, scope: !16293)
!16300 = !DILocation(line: 328, column: 24, scope: !16293)
!16301 = !DILocation(line: 328, column: 15, scope: !16293)
!16302 = !DILocation(line: 328, column: 9, scope: !16293)
!16303 = !DILocation(line: 328, column: 39, scope: !16293)
!16304 = !DILocation(line: 328, column: 45, scope: !16293)
!16305 = !DILocation(line: 328, column: 2, scope: !16293)
!16306 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !16307, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{!16161, !16214}
!16309 = !DILocalVariable(name: "list", arg: 1, scope: !16306, file: !124, line: 294, type: !16214)
!16310 = !DILocation(line: 294, column: 61, scope: !16306)
!16311 = !DILocation(line: 296, column: 28, scope: !16306)
!16312 = !DILocation(line: 296, column: 9, scope: !16306)
!16313 = !DILocation(line: 296, column: 43, scope: !16306)
!16314 = !DILocation(line: 296, column: 49, scope: !16306)
!16315 = !DILocation(line: 296, column: 2, scope: !16306)
!16316 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !16317, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{!1035, !16214}
!16319 = !DILocalVariable(name: "list", arg: 1, scope: !16316, file: !124, line: 266, type: !16214)
!16320 = !DILocation(line: 266, column: 52, scope: !16316)
!16321 = !DILocation(line: 268, column: 9, scope: !16316)
!16322 = !DILocation(line: 268, column: 15, scope: !16316)
!16323 = !DILocation(line: 268, column: 23, scope: !16316)
!16324 = !DILocation(line: 268, column: 20, scope: !16316)
!16325 = !DILocation(line: 268, column: 2, scope: !16316)
!16326 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3245, file: !3245, line: 150, type: !16327, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16327 = !DISubroutineType(types: !16328)
!16328 = !{!103, !3218}
!16329 = !DILocalVariable(name: "to", arg: 1, scope: !16326, file: !3245, line: 150, type: !3218)
!16330 = !DILocation(line: 150, column: 38, scope: !16326)
!16331 = !DILocalVariable(name: "ret", scope: !16326, file: !3245, line: 152, type: !103)
!16332 = !DILocation(line: 152, column: 6, scope: !16326)
!16333 = !DILocalVariable(name: "__i", scope: !16334, file: !3245, line: 154, type: !15998)
!16334 = distinct !DILexicalBlock(scope: !16326, file: !3245, line: 154, column: 2)
!16335 = !DILocation(line: 154, column: 2, scope: !16334)
!16336 = !DILocalVariable(name: "__key", scope: !16334, file: !3245, line: 154, type: !15998)
!16337 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 154, column: 2, scope: !16334)
!16339 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16338)
!16340 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16338)
!16341 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16338)
!16343 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16342)
!16344 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16342)
!16345 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16338)
!16346 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16338)
!16347 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16338)
!16348 = !DILocation(line: 154, column: 2, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16334, file: !3245, line: 154, column: 2)
!16350 = !DILocation(line: 155, column: 28, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16352, file: !3245, line: 155, column: 7)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !3245, line: 154, column: 24)
!16353 = !DILocation(line: 155, column: 32, scope: !16351)
!16354 = !DILocation(line: 155, column: 7, scope: !16351)
!16355 = !DILocation(line: 155, column: 7, scope: !16352)
!16356 = !DILocation(line: 156, column: 19, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16351, file: !3245, line: 155, column: 39)
!16358 = !DILocation(line: 156, column: 4, scope: !16357)
!16359 = !DILocation(line: 157, column: 8, scope: !16357)
!16360 = !DILocation(line: 158, column: 3, scope: !16357)
!16361 = !DILocation(line: 159, column: 2, scope: !16352)
!16362 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16363)
!16363 = distinct !DILocation(line: 154, column: 2, scope: !16349)
!16364 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16363)
!16365 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16363)
!16366 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16363)
!16367 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16363)
!16369 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16368)
!16370 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16368)
!16371 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16368)
!16372 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16368)
!16373 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16368)
!16374 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16368)
!16375 = distinct !{!16375, !16335, !16376}
!16376 = !DILocation(line: 159, column: 2, scope: !16334)
!16377 = !DILocation(line: 161, column: 9, scope: !16326)
!16378 = !DILocation(line: 161, column: 2, scope: !16326)
!16379 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !16380, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16380 = !DISubroutineType(types: !16381)
!16381 = !{!1035, !16382}
!16382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16383, size: 32)
!16383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3222)
!16384 = !DILocalVariable(name: "node", arg: 1, scope: !16379, file: !124, line: 225, type: !16382)
!16385 = !DILocation(line: 225, column: 59, scope: !16379)
!16386 = !DILocation(line: 227, column: 9, scope: !16379)
!16387 = !DILocation(line: 227, column: 15, scope: !16379)
!16388 = !DILocation(line: 227, column: 20, scope: !16379)
!16389 = !DILocation(line: 227, column: 2, scope: !16379)
!16390 = distinct !DISubprogram(name: "remove_timeout", scope: !3245, file: !3245, line: 53, type: !3239, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16391 = !DILocalVariable(name: "t", arg: 1, scope: !16390, file: !3245, line: 53, type: !3218)
!16392 = !DILocation(line: 53, column: 45, scope: !16390)
!16393 = !DILocation(line: 55, column: 11, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16390, file: !3245, line: 55, column: 6)
!16395 = !DILocation(line: 55, column: 6, scope: !16394)
!16396 = !DILocation(line: 55, column: 14, scope: !16394)
!16397 = !DILocation(line: 55, column: 6, scope: !16390)
!16398 = !DILocation(line: 56, column: 22, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16394, file: !3245, line: 55, column: 23)
!16400 = !DILocation(line: 56, column: 25, scope: !16399)
!16401 = !DILocation(line: 56, column: 8, scope: !16399)
!16402 = !DILocation(line: 56, column: 3, scope: !16399)
!16403 = !DILocation(line: 56, column: 12, scope: !16399)
!16404 = !DILocation(line: 56, column: 19, scope: !16399)
!16405 = !DILocation(line: 57, column: 2, scope: !16399)
!16406 = !DILocation(line: 59, column: 20, scope: !16390)
!16407 = !DILocation(line: 59, column: 23, scope: !16390)
!16408 = !DILocation(line: 59, column: 2, scope: !16390)
!16409 = !DILocation(line: 60, column: 1, scope: !16390)
!16410 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !16411, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16411 = !DISubroutineType(types: !16412)
!16412 = !{null, !16161}
!16413 = !DILocalVariable(name: "node", arg: 1, scope: !16410, file: !124, line: 496, type: !16161)
!16414 = !DILocation(line: 496, column: 50, scope: !16410)
!16415 = !DILocalVariable(name: "prev", scope: !16410, file: !124, line: 498, type: !16176)
!16416 = !DILocation(line: 498, column: 21, scope: !16410)
!16417 = !DILocation(line: 498, column: 28, scope: !16410)
!16418 = !DILocation(line: 498, column: 34, scope: !16410)
!16419 = !DILocalVariable(name: "next", scope: !16410, file: !124, line: 499, type: !16176)
!16420 = !DILocation(line: 499, column: 21, scope: !16410)
!16421 = !DILocation(line: 499, column: 28, scope: !16410)
!16422 = !DILocation(line: 499, column: 34, scope: !16410)
!16423 = !DILocation(line: 501, column: 15, scope: !16410)
!16424 = !DILocation(line: 501, column: 2, scope: !16410)
!16425 = !DILocation(line: 501, column: 8, scope: !16410)
!16426 = !DILocation(line: 501, column: 13, scope: !16410)
!16427 = !DILocation(line: 502, column: 15, scope: !16410)
!16428 = !DILocation(line: 502, column: 2, scope: !16410)
!16429 = !DILocation(line: 502, column: 8, scope: !16410)
!16430 = !DILocation(line: 502, column: 13, scope: !16410)
!16431 = !DILocation(line: 503, column: 17, scope: !16410)
!16432 = !DILocation(line: 503, column: 2, scope: !16410)
!16433 = !DILocation(line: 504, column: 1, scope: !16410)
!16434 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !16411, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16435 = !DILocalVariable(name: "node", arg: 1, scope: !16434, file: !124, line: 211, type: !16161)
!16436 = !DILocation(line: 211, column: 48, scope: !16434)
!16437 = !DILocation(line: 213, column: 2, scope: !16434)
!16438 = !DILocation(line: 213, column: 8, scope: !16434)
!16439 = !DILocation(line: 213, column: 13, scope: !16434)
!16440 = !DILocation(line: 214, column: 2, scope: !16434)
!16441 = !DILocation(line: 214, column: 8, scope: !16434)
!16442 = !DILocation(line: 214, column: 13, scope: !16434)
!16443 = !DILocation(line: 215, column: 1, scope: !16434)
!16444 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3245, file: !3245, line: 183, type: !16445, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16445 = !DISubroutineType(types: !16446)
!16446 = !{!2505, !16447}
!16447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16448, size: 32)
!16448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3219)
!16449 = !DILocalVariable(name: "timeout", arg: 1, scope: !16444, file: !3245, line: 183, type: !16447)
!16450 = !DILocation(line: 183, column: 54, scope: !16444)
!16451 = !DILocalVariable(name: "ticks", scope: !16444, file: !3245, line: 185, type: !2505)
!16452 = !DILocation(line: 185, column: 12, scope: !16444)
!16453 = !DILocalVariable(name: "__i", scope: !16454, file: !3245, line: 187, type: !15998)
!16454 = distinct !DILexicalBlock(scope: !16444, file: !3245, line: 187, column: 2)
!16455 = !DILocation(line: 187, column: 2, scope: !16454)
!16456 = !DILocalVariable(name: "__key", scope: !16454, file: !3245, line: 187, type: !15998)
!16457 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 187, column: 2, scope: !16454)
!16459 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16458)
!16460 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16458)
!16461 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16458)
!16463 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16462)
!16464 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16462)
!16465 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16458)
!16466 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16458)
!16467 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16458)
!16468 = !DILocation(line: 187, column: 2, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16454, file: !3245, line: 187, column: 2)
!16470 = !DILocation(line: 188, column: 23, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16469, file: !3245, line: 187, column: 24)
!16472 = !DILocation(line: 188, column: 11, scope: !16471)
!16473 = !DILocation(line: 188, column: 9, scope: !16471)
!16474 = !DILocation(line: 189, column: 2, scope: !16471)
!16475 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 187, column: 2, scope: !16469)
!16477 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16476)
!16478 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16476)
!16479 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16476)
!16480 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16476)
!16482 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16481)
!16483 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16481)
!16484 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16481)
!16485 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16481)
!16486 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16481)
!16487 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16481)
!16488 = distinct !{!16488, !16455, !16489}
!16489 = !DILocation(line: 189, column: 2, scope: !16454)
!16490 = !DILocation(line: 191, column: 9, scope: !16444)
!16491 = !DILocation(line: 191, column: 2, scope: !16444)
!16492 = distinct !DISubprogram(name: "timeout_rem", scope: !3245, file: !3245, line: 165, type: !16445, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16493 = !DILocalVariable(name: "timeout", arg: 1, scope: !16492, file: !3245, line: 165, type: !16447)
!16494 = !DILocation(line: 165, column: 53, scope: !16492)
!16495 = !DILocalVariable(name: "ticks", scope: !16492, file: !3245, line: 167, type: !2505)
!16496 = !DILocation(line: 167, column: 12, scope: !16492)
!16497 = !DILocation(line: 169, column: 28, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16492, file: !3245, line: 169, column: 6)
!16499 = !DILocation(line: 169, column: 6, scope: !16498)
!16500 = !DILocation(line: 169, column: 6, scope: !16492)
!16501 = !DILocation(line: 170, column: 3, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16498, file: !3245, line: 169, column: 38)
!16503 = !DILocalVariable(name: "t", scope: !16504, file: !3245, line: 173, type: !3218)
!16504 = distinct !DILexicalBlock(scope: !16492, file: !3245, line: 173, column: 2)
!16505 = !DILocation(line: 173, column: 24, scope: !16504)
!16506 = !DILocation(line: 173, column: 28, scope: !16504)
!16507 = !DILocation(line: 173, column: 7, scope: !16504)
!16508 = !DILocation(line: 173, column: 37, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16504, file: !3245, line: 173, column: 2)
!16510 = !DILocation(line: 173, column: 39, scope: !16509)
!16511 = !DILocation(line: 173, column: 2, scope: !16504)
!16512 = !DILocation(line: 174, column: 12, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16509, file: !3245, line: 173, column: 61)
!16514 = !DILocation(line: 174, column: 15, scope: !16513)
!16515 = !DILocation(line: 174, column: 9, scope: !16513)
!16516 = !DILocation(line: 175, column: 7, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16513, file: !3245, line: 175, column: 7)
!16518 = !DILocation(line: 175, column: 18, scope: !16517)
!16519 = !DILocation(line: 175, column: 15, scope: !16517)
!16520 = !DILocation(line: 175, column: 7, scope: !16513)
!16521 = !DILocation(line: 176, column: 4, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16517, file: !3245, line: 175, column: 21)
!16523 = !DILocation(line: 178, column: 2, scope: !16513)
!16524 = !DILocation(line: 173, column: 57, scope: !16509)
!16525 = !DILocation(line: 173, column: 52, scope: !16509)
!16526 = !DILocation(line: 173, column: 50, scope: !16509)
!16527 = !DILocation(line: 173, column: 2, scope: !16509)
!16528 = distinct !{!16528, !16511, !16529}
!16529 = !DILocation(line: 178, column: 2, scope: !16504)
!16530 = !DILocation(line: 180, column: 9, scope: !16492)
!16531 = !DILocation(line: 180, column: 17, scope: !16492)
!16532 = !DILocation(line: 180, column: 15, scope: !16492)
!16533 = !DILocation(line: 180, column: 2, scope: !16492)
!16534 = !DILocation(line: 181, column: 1, scope: !16492)
!16535 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11636, file: !11636, line: 35, type: !16536, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16536 = !DISubroutineType(types: !16537)
!16537 = !{!1035, !16447}
!16538 = !DILocalVariable(name: "to", arg: 1, scope: !16535, file: !11636, line: 35, type: !16447)
!16539 = !DILocation(line: 35, column: 65, scope: !16535)
!16540 = !DILocation(line: 37, column: 31, scope: !16535)
!16541 = !DILocation(line: 37, column: 35, scope: !16535)
!16542 = !DILocation(line: 37, column: 10, scope: !16535)
!16543 = !DILocation(line: 37, column: 9, scope: !16535)
!16544 = !DILocation(line: 37, column: 2, scope: !16535)
!16545 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3245, file: !3245, line: 194, type: !16445, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16546 = !DILocalVariable(name: "timeout", arg: 1, scope: !16545, file: !3245, line: 194, type: !16447)
!16547 = !DILocation(line: 194, column: 52, scope: !16545)
!16548 = !DILocalVariable(name: "ticks", scope: !16545, file: !3245, line: 196, type: !2505)
!16549 = !DILocation(line: 196, column: 12, scope: !16545)
!16550 = !DILocalVariable(name: "__i", scope: !16551, file: !3245, line: 198, type: !15998)
!16551 = distinct !DILexicalBlock(scope: !16545, file: !3245, line: 198, column: 2)
!16552 = !DILocation(line: 198, column: 2, scope: !16551)
!16553 = !DILocalVariable(name: "__key", scope: !16551, file: !3245, line: 198, type: !15998)
!16554 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 198, column: 2, scope: !16551)
!16556 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16555)
!16557 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16555)
!16558 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16555)
!16560 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16559)
!16561 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16559)
!16562 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16555)
!16563 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16555)
!16564 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16555)
!16565 = !DILocation(line: 198, column: 2, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16551, file: !3245, line: 198, column: 2)
!16567 = !DILocation(line: 199, column: 11, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16566, file: !3245, line: 198, column: 24)
!16569 = !DILocation(line: 199, column: 35, scope: !16568)
!16570 = !DILocation(line: 199, column: 23, scope: !16568)
!16571 = !DILocation(line: 199, column: 21, scope: !16568)
!16572 = !DILocation(line: 199, column: 9, scope: !16568)
!16573 = !DILocation(line: 200, column: 2, scope: !16568)
!16574 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16575)
!16575 = distinct !DILocation(line: 198, column: 2, scope: !16566)
!16576 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16575)
!16577 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16575)
!16578 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16575)
!16579 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16575)
!16581 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16580)
!16582 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16580)
!16583 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16580)
!16584 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16580)
!16585 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16580)
!16586 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16580)
!16587 = distinct !{!16587, !16552, !16588}
!16588 = !DILocation(line: 200, column: 2, scope: !16551)
!16589 = !DILocation(line: 202, column: 9, scope: !16545)
!16590 = !DILocation(line: 202, column: 2, scope: !16545)
!16591 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3245, file: !3245, line: 205, type: !16151, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16592 = !DILocalVariable(name: "ret", scope: !16591, file: !3245, line: 207, type: !250)
!16593 = !DILocation(line: 207, column: 10, scope: !16591)
!16594 = !DILocalVariable(name: "__i", scope: !16595, file: !3245, line: 209, type: !15998)
!16595 = distinct !DILexicalBlock(scope: !16591, file: !3245, line: 209, column: 2)
!16596 = !DILocation(line: 209, column: 2, scope: !16595)
!16597 = !DILocalVariable(name: "__key", scope: !16595, file: !3245, line: 209, type: !15998)
!16598 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 209, column: 2, scope: !16595)
!16600 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16599)
!16601 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16599)
!16602 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16599)
!16604 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16603)
!16605 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16603)
!16606 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16599)
!16607 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16599)
!16608 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16599)
!16609 = !DILocation(line: 209, column: 2, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16595, file: !3245, line: 209, column: 2)
!16611 = !DILocation(line: 210, column: 9, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16610, file: !3245, line: 209, column: 24)
!16613 = !DILocation(line: 210, column: 7, scope: !16612)
!16614 = !DILocation(line: 211, column: 2, scope: !16612)
!16615 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 209, column: 2, scope: !16610)
!16617 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16616)
!16618 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16616)
!16619 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16616)
!16620 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16616)
!16622 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16621)
!16623 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16621)
!16624 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16621)
!16625 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16621)
!16626 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16621)
!16627 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16621)
!16628 = distinct !{!16628, !16596, !16629}
!16629 = !DILocation(line: 211, column: 2, scope: !16595)
!16630 = !DILocation(line: 212, column: 9, scope: !16591)
!16631 = !DILocation(line: 212, column: 2, scope: !16591)
!16632 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3245, file: !3245, line: 215, type: !9889, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16633 = !DILocalVariable(name: "ticks", arg: 1, scope: !16632, file: !3245, line: 215, type: !250)
!16634 = !DILocation(line: 215, column: 35, scope: !16632)
!16635 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16632, file: !3245, line: 215, type: !1035)
!16636 = !DILocation(line: 215, column: 47, scope: !16632)
!16637 = !DILocalVariable(name: "__i", scope: !16638, file: !3245, line: 217, type: !15998)
!16638 = distinct !DILexicalBlock(scope: !16632, file: !3245, line: 217, column: 2)
!16639 = !DILocation(line: 217, column: 2, scope: !16638)
!16640 = !DILocalVariable(name: "__key", scope: !16638, file: !3245, line: 217, type: !15998)
!16641 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 217, column: 2, scope: !16638)
!16643 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16642)
!16644 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16642)
!16645 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16642)
!16647 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16646)
!16648 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16646)
!16649 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16642)
!16650 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16642)
!16651 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16642)
!16652 = !DILocation(line: 217, column: 2, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16638, file: !3245, line: 217, column: 2)
!16654 = !DILocalVariable(name: "next_to", scope: !16655, file: !3245, line: 218, type: !103)
!16655 = distinct !DILexicalBlock(scope: !16653, file: !3245, line: 217, column: 24)
!16656 = !DILocation(line: 218, column: 7, scope: !16655)
!16657 = !DILocation(line: 218, column: 17, scope: !16655)
!16658 = !DILocalVariable(name: "sooner", scope: !16655, file: !3245, line: 219, type: !1035)
!16659 = !DILocation(line: 219, column: 8, scope: !16655)
!16660 = !DILocation(line: 219, column: 18, scope: !16655)
!16661 = !DILocation(line: 219, column: 26, scope: !16655)
!16662 = !DILocation(line: 220, column: 10, scope: !16655)
!16663 = !DILocation(line: 220, column: 14, scope: !16655)
!16664 = !DILocation(line: 220, column: 23, scope: !16655)
!16665 = !DILocation(line: 220, column: 20, scope: !16655)
!16666 = !DILocalVariable(name: "imminent", scope: !16655, file: !3245, line: 221, type: !1035)
!16667 = !DILocation(line: 221, column: 8, scope: !16655)
!16668 = !DILocation(line: 221, column: 19, scope: !16655)
!16669 = !DILocation(line: 221, column: 27, scope: !16655)
!16670 = !DILocation(line: 233, column: 8, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16655, file: !3245, line: 233, column: 7)
!16672 = !DILocation(line: 233, column: 17, scope: !16671)
!16673 = !DILocation(line: 233, column: 21, scope: !16671)
!16674 = !DILocation(line: 233, column: 7, scope: !16655)
!16675 = !DILocation(line: 234, column: 26, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16671, file: !3245, line: 233, column: 56)
!16677 = !DILocation(line: 234, column: 47, scope: !16676)
!16678 = !DILocation(line: 234, column: 4, scope: !16676)
!16679 = !DILocation(line: 235, column: 3, scope: !16676)
!16680 = !DILocation(line: 236, column: 2, scope: !16655)
!16681 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 217, column: 2, scope: !16653)
!16683 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16682)
!16684 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16682)
!16685 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16682)
!16686 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16682)
!16688 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16687)
!16689 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16687)
!16690 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16687)
!16691 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16687)
!16692 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16687)
!16693 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16687)
!16694 = distinct !{!16694, !16639, !16695}
!16695 = !DILocation(line: 236, column: 2, scope: !16638)
!16696 = !DILocation(line: 237, column: 1, scope: !16632)
!16697 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3245, file: !3245, line: 239, type: !16698, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16698 = !DISubroutineType(types: !16699)
!16699 = !{null, !250}
!16700 = !DILocalVariable(name: "ticks", arg: 1, scope: !16697, file: !3245, line: 239, type: !250)
!16701 = !DILocation(line: 239, column: 33, scope: !16697)
!16702 = !DILocation(line: 242, column: 15, scope: !16697)
!16703 = !DILocation(line: 242, column: 2, scope: !16697)
!16704 = !DILocalVariable(name: "key", scope: !16697, file: !3245, line: 245, type: !15998)
!16705 = !DILocation(line: 245, column: 19, scope: !16697)
!16706 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 245, column: 25, scope: !16697)
!16708 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16707)
!16709 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16707)
!16710 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16707)
!16712 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16711)
!16713 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16711)
!16714 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16707)
!16715 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16707)
!16716 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16707)
!16717 = !DILocation(line: 245, column: 25, scope: !16697)
!16718 = !DILocation(line: 259, column: 23, scope: !16697)
!16719 = !DILocation(line: 259, column: 21, scope: !16697)
!16720 = !DILocation(line: 261, column: 2, scope: !16697)
!16721 = !DILocation(line: 261, column: 9, scope: !16697)
!16722 = !DILocation(line: 261, column: 17, scope: !16697)
!16723 = !DILocation(line: 261, column: 25, scope: !16697)
!16724 = !DILocation(line: 261, column: 28, scope: !16697)
!16725 = !DILocation(line: 261, column: 37, scope: !16697)
!16726 = !DILocation(line: 261, column: 47, scope: !16697)
!16727 = !DILocation(line: 261, column: 44, scope: !16697)
!16728 = !DILocation(line: 0, scope: !16697)
!16729 = !DILocalVariable(name: "t", scope: !16730, file: !3245, line: 262, type: !3218)
!16730 = distinct !DILexicalBlock(scope: !16697, file: !3245, line: 261, column: 67)
!16731 = !DILocation(line: 262, column: 20, scope: !16730)
!16732 = !DILocation(line: 262, column: 24, scope: !16730)
!16733 = !DILocalVariable(name: "dt", scope: !16730, file: !3245, line: 263, type: !103)
!16734 = !DILocation(line: 263, column: 7, scope: !16730)
!16735 = !DILocation(line: 263, column: 12, scope: !16730)
!16736 = !DILocation(line: 263, column: 15, scope: !16730)
!16737 = !DILocation(line: 265, column: 16, scope: !16730)
!16738 = !DILocation(line: 265, column: 13, scope: !16730)
!16739 = !DILocation(line: 266, column: 3, scope: !16730)
!16740 = !DILocation(line: 266, column: 6, scope: !16730)
!16741 = !DILocation(line: 266, column: 13, scope: !16730)
!16742 = !DILocation(line: 267, column: 18, scope: !16730)
!16743 = !DILocation(line: 267, column: 3, scope: !16730)
!16744 = !DILocation(line: 269, column: 3, scope: !16730)
!16745 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 269, column: 3, scope: !16730)
!16747 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16746)
!16748 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16746)
!16749 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16746)
!16750 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16746)
!16752 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16751)
!16753 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16751)
!16754 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16751)
!16755 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16751)
!16756 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16751)
!16757 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16751)
!16758 = !DILocation(line: 270, column: 3, scope: !16730)
!16759 = !DILocation(line: 270, column: 6, scope: !16730)
!16760 = !DILocation(line: 270, column: 9, scope: !16730)
!16761 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 271, column: 9, scope: !16730)
!16763 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16762)
!16764 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16762)
!16765 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16766)
!16766 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16762)
!16767 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16766)
!16768 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16766)
!16769 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16762)
!16770 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16762)
!16771 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16762)
!16772 = !DILocation(line: 271, column: 9, scope: !16730)
!16773 = !DILocation(line: 272, column: 25, scope: !16730)
!16774 = !DILocation(line: 272, column: 22, scope: !16730)
!16775 = distinct !{!16775, !16720, !16776}
!16776 = !DILocation(line: 273, column: 2, scope: !16697)
!16777 = !DILocation(line: 275, column: 6, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16697, file: !3245, line: 275, column: 6)
!16779 = !DILocation(line: 275, column: 14, scope: !16778)
!16780 = !DILocation(line: 275, column: 6, scope: !16697)
!16781 = !DILocation(line: 276, column: 22, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16778, file: !3245, line: 275, column: 23)
!16783 = !DILocation(line: 276, column: 3, scope: !16782)
!16784 = !DILocation(line: 276, column: 12, scope: !16782)
!16785 = !DILocation(line: 276, column: 19, scope: !16782)
!16786 = !DILocation(line: 277, column: 2, scope: !16782)
!16787 = !DILocation(line: 279, column: 15, scope: !16697)
!16788 = !DILocation(line: 279, column: 12, scope: !16697)
!16789 = !DILocation(line: 280, column: 21, scope: !16697)
!16790 = !DILocation(line: 282, column: 24, scope: !16697)
!16791 = !DILocation(line: 282, column: 2, scope: !16697)
!16792 = !DILocation(line: 284, column: 2, scope: !16697)
!16793 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16794)
!16794 = distinct !DILocation(line: 284, column: 2, scope: !16697)
!16795 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16794)
!16796 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16794)
!16797 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16794)
!16798 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16794)
!16800 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16799)
!16801 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16799)
!16802 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16799)
!16803 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16799)
!16804 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16799)
!16805 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16799)
!16806 = !DILocation(line: 285, column: 1, scope: !16697)
!16807 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3245, file: !3245, line: 287, type: !16808, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16808 = !DISubroutineType(types: !16809)
!16809 = !{!186}
!16810 = !DILocalVariable(name: "t", scope: !16807, file: !3245, line: 289, type: !1936)
!16811 = !DILocation(line: 289, column: 11, scope: !16807)
!16812 = !DILocalVariable(name: "__i", scope: !16813, file: !3245, line: 291, type: !15998)
!16813 = distinct !DILexicalBlock(scope: !16807, file: !3245, line: 291, column: 2)
!16814 = !DILocation(line: 291, column: 2, scope: !16813)
!16815 = !DILocalVariable(name: "__key", scope: !16813, file: !3245, line: 291, type: !15998)
!16816 = !DILocation(line: 136, column: 70, scope: !16005, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 291, column: 2, scope: !16813)
!16818 = !DILocation(line: 138, column: 2, scope: !16005, inlinedAt: !16817)
!16819 = !DILocation(line: 139, column: 19, scope: !16005, inlinedAt: !16817)
!16820 = !DILocation(line: 44, column: 15, scope: !16015, inlinedAt: !16821)
!16821 = distinct !DILocation(line: 145, column: 10, scope: !16005, inlinedAt: !16817)
!16822 = !DILocation(line: 47, column: 2, scope: !16015, inlinedAt: !16821)
!16823 = !DILocation(line: 76, column: 9, scope: !16015, inlinedAt: !16821)
!16824 = !DILocation(line: 145, column: 4, scope: !16005, inlinedAt: !16817)
!16825 = !DILocation(line: 145, column: 8, scope: !16005, inlinedAt: !16817)
!16826 = !DILocation(line: 165, column: 2, scope: !16005, inlinedAt: !16817)
!16827 = !DILocation(line: 291, column: 2, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16813, file: !3245, line: 291, column: 2)
!16829 = !DILocation(line: 292, column: 7, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16828, file: !3245, line: 291, column: 24)
!16831 = !DILocation(line: 292, column: 19, scope: !16830)
!16832 = !DILocation(line: 292, column: 17, scope: !16830)
!16833 = !DILocation(line: 292, column: 5, scope: !16830)
!16834 = !DILocation(line: 293, column: 2, scope: !16830)
!16835 = !DILocation(line: 189, column: 60, scope: !16125, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 291, column: 2, scope: !16828)
!16837 = !DILocation(line: 190, column: 23, scope: !16125, inlinedAt: !16836)
!16838 = !DILocation(line: 192, column: 2, scope: !16125, inlinedAt: !16836)
!16839 = !DILocation(line: 215, column: 22, scope: !16125, inlinedAt: !16836)
!16840 = !DILocation(line: 84, column: 56, scope: !16135, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 215, column: 2, scope: !16125, inlinedAt: !16836)
!16842 = !DILocation(line: 87, column: 6, scope: !16139, inlinedAt: !16841)
!16843 = !DILocation(line: 87, column: 10, scope: !16139, inlinedAt: !16841)
!16844 = !DILocation(line: 87, column: 6, scope: !16135, inlinedAt: !16841)
!16845 = !DILocation(line: 88, column: 3, scope: !16143, inlinedAt: !16841)
!16846 = !DILocation(line: 90, column: 2, scope: !16135, inlinedAt: !16841)
!16847 = !DILocation(line: 110, column: 1, scope: !16135, inlinedAt: !16841)
!16848 = distinct !{!16848, !16814, !16849}
!16849 = !DILocation(line: 293, column: 2, scope: !16813)
!16850 = !DILocation(line: 294, column: 9, scope: !16807)
!16851 = !DILocation(line: 294, column: 2, scope: !16807)
!16852 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3245, file: !3245, line: 297, type: !7409, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16853 = !DILocation(line: 300, column: 19, scope: !16852)
!16854 = !DILocation(line: 300, column: 9, scope: !16852)
!16855 = !DILocation(line: 300, column: 2, scope: !16852)
!16856 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3245, file: !3245, line: 306, type: !16808, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16857 = !DILocation(line: 308, column: 9, scope: !16856)
!16858 = !DILocation(line: 308, column: 2, scope: !16856)
!16859 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3245, file: !3245, line: 319, type: !11064, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16860 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16859, file: !3245, line: 319, type: !173)
!16861 = !DILocation(line: 319, column: 34, scope: !16859)
!16862 = !DILocation(line: 321, column: 2, scope: !16859)
!16863 = !DILocation(line: 321, column: 2, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16859, file: !3245, line: 321, column: 2)
!16865 = !DILocation(line: 322, column: 6, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16859, file: !3245, line: 322, column: 6)
!16867 = !DILocation(line: 322, column: 19, scope: !16866)
!16868 = !DILocation(line: 322, column: 6, scope: !16859)
!16869 = !DILocation(line: 323, column: 3, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16866, file: !3245, line: 322, column: 26)
!16871 = !DILocation(line: 323, column: 3, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16870, file: !3245, line: 323, column: 3)
!16873 = !DILocation(line: 324, column: 3, scope: !16870)
!16874 = !DILocalVariable(name: "start_cycles", scope: !16859, file: !3245, line: 328, type: !173)
!16875 = !DILocation(line: 328, column: 11, scope: !16859)
!16876 = !DILocation(line: 328, column: 26, scope: !16859)
!16877 = !DILocalVariable(name: "cycles_to_wait", scope: !16859, file: !3245, line: 331, type: !173)
!16878 = !DILocation(line: 331, column: 11, scope: !16859)
!16879 = !DILocation(line: 332, column: 13, scope: !16859)
!16880 = !DILocation(line: 332, column: 3, scope: !16859)
!16881 = !DILocation(line: 333, column: 13, scope: !16859)
!16882 = !DILocation(line: 333, column: 3, scope: !16859)
!16883 = !DILocation(line: 332, column: 26, scope: !16859)
!16884 = !DILocation(line: 333, column: 43, scope: !16859)
!16885 = !DILocation(line: 331, column: 28, scope: !16859)
!16886 = !DILocation(line: 337, column: 2, scope: !16859)
!16887 = !DILocalVariable(name: "current_cycles", scope: !16888, file: !3245, line: 338, type: !173)
!16888 = distinct !DILexicalBlock(scope: !16889, file: !3245, line: 337, column: 11)
!16889 = distinct !DILexicalBlock(scope: !16890, file: !3245, line: 337, column: 2)
!16890 = distinct !DILexicalBlock(scope: !16859, file: !3245, line: 337, column: 2)
!16891 = !DILocation(line: 338, column: 12, scope: !16888)
!16892 = !DILocation(line: 338, column: 29, scope: !16888)
!16893 = !DILocation(line: 341, column: 8, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16888, file: !3245, line: 341, column: 7)
!16895 = !DILocation(line: 341, column: 25, scope: !16894)
!16896 = !DILocation(line: 341, column: 23, scope: !16894)
!16897 = !DILocation(line: 341, column: 42, scope: !16894)
!16898 = !DILocation(line: 341, column: 39, scope: !16894)
!16899 = !DILocation(line: 341, column: 7, scope: !16888)
!16900 = !DILocation(line: 342, column: 4, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16894, file: !3245, line: 341, column: 58)
!16902 = !DILocation(line: 337, column: 2, scope: !16889)
!16903 = distinct !{!16903, !16904, !16905}
!16904 = !DILocation(line: 337, column: 2, scope: !16890)
!16905 = !DILocation(line: 344, column: 2, scope: !16890)
!16906 = !DILocation(line: 348, column: 2, scope: !16859)
!16907 = !DILocation(line: 348, column: 2, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16859, file: !3245, line: 348, column: 2)
!16909 = !DILocation(line: 349, column: 1, scope: !16859)
!16910 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !109, file: !109, line: 1675, type: !7409, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16911 = !DILocation(line: 1677, column: 9, scope: !16910)
!16912 = !DILocation(line: 1677, column: 2, scope: !16910)
!16913 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !9831, file: !9831, line: 59, type: !3683, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16914 = !DILocation(line: 64, column: 2, scope: !16913)
!16915 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16916, file: !16916, line: 24, type: !7409, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16916 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16917 = !DILocation(line: 26, column: 9, scope: !16915)
!16918 = !DILocation(line: 26, column: 2, scope: !16915)
!16919 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3245, file: !3245, line: 364, type: !16920, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3215, retainedNodes: !223)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{!1936, !15977}
!16922 = !DILocalVariable(name: "timeout", arg: 1, scope: !16919, file: !3245, line: 364, type: !15977)
!16923 = !DILocation(line: 364, column: 49, scope: !16919)
!16924 = !DILocalVariable(name: "dt", scope: !16919, file: !3245, line: 366, type: !2505)
!16925 = !DILocation(line: 366, column: 12, scope: !16919)
!16926 = !DILocation(line: 368, column: 6, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16919, file: !3245, line: 368, column: 6)
!16928 = !DILocation(line: 368, column: 6, scope: !16919)
!16929 = !DILocation(line: 369, column: 3, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16927, file: !3245, line: 368, column: 40)
!16931 = !DILocation(line: 370, column: 13, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16927, file: !3245, line: 370, column: 13)
!16933 = !DILocation(line: 370, column: 13, scope: !16927)
!16934 = !DILocation(line: 371, column: 10, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16932, file: !3245, line: 370, column: 47)
!16936 = !DILocation(line: 371, column: 3, scope: !16935)
!16937 = !DILocation(line: 374, column: 16, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16932, file: !3245, line: 372, column: 9)
!16939 = !DILocation(line: 374, column: 6, scope: !16938)
!16940 = !DILocation(line: 376, column: 43, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16938, file: !3245, line: 376, column: 7)
!16942 = !DILocation(line: 376, column: 58, scope: !16941)
!16943 = !DILocation(line: 376, column: 7, scope: !16938)
!16944 = !DILocation(line: 377, column: 11, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16941, file: !3245, line: 376, column: 64)
!16946 = !DILocation(line: 377, column: 4, scope: !16945)
!16947 = !DILocation(line: 379, column: 10, scope: !16938)
!16948 = !DILocation(line: 379, column: 33, scope: !16938)
!16949 = !DILocation(line: 379, column: 31, scope: !16938)
!16950 = !DILocation(line: 379, column: 3, scope: !16938)
!16951 = !DILocation(line: 381, column: 1, scope: !16919)
!16952 = distinct !DISubprogram(name: "boot_banner", scope: !16953, file: !16953, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3552, retainedNodes: !223)
!16953 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16954 = !DILocation(line: 34, column: 2, scope: !16952)
!16955 = !DILocation(line: 36, column: 1, scope: !16952)
