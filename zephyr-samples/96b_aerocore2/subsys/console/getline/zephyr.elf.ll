; ModuleID = 'build/96b_aerocore2/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231085 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231065 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231055 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231155 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231145 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231135 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231125 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231115 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231105 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234652 to i8*), void (i8*)* inttoptr (i32 134232483 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234628 to i8*), void (i8*)* inttoptr (i32 134232483 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234604 to i8*), void (i8*)* inttoptr (i32 134232483 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231095 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234268 to i8*), void (i8*)* inttoptr (i32 134231075 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234580 to i8*), void (i8*)* inttoptr (i32 134232483 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234556 to i8*), void (i8*)* inttoptr (i32 134232483 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [59 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_4.__isr_uart_stm32_isr_irq_4 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !744
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !727
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !700
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !716
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !766
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !768
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !778
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !829
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !925
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !914
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !966
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1067
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1107
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1060
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1115
@esc_state = internal global i32 0, align 4, !dbg !1134
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1142
@end = internal unnamed_addr global i8 0, align 1, !dbg !1144
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1138
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1140
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1146
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1452
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1454
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1467
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1343
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1469
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1471
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1473
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1475
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1477
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1479
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.9 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct._thread_arch { i32 48, i32 512 } }, align 4, !dbg !1481
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1444
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.10 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct._thread_arch { i32 48, i32 1024 } }, align 4, !dbg !1483
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1450
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1448
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !824
@.str.61 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1485
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1753
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1695
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1755
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1662
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1664
@__devicehdl_dts_ord_49 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.1.62 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1764
@__devstate_dts_ord_49 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1697
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1796
@__device_dts_ord_49 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.62, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1673
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1675
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.2.63 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1798
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1699
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1813
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1679
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1681
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.3.66 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_57, void (%struct.device*)* @uart_stm32_irq_config_func_3 }, align 4, !dbg !1815
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1701
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1830
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1685
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1687
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.4.67 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60, void (%struct.device*)* @uart_stm32_irq_config_func_4 }, align 4, !dbg !1832
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1703
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1847
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.67, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1691
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1693
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1705
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !1713
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1736
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 711, i32 512 }, %struct._thread_arch { i32 743, i32 0 }], align 4, !dbg !1739
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*) }, section ".intList", align 4, !dbg !1742
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !898
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1783
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1785
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1787
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1789
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*) }, section ".intList", align 4, !dbg !1791
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1800
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1802
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1804
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1806
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*) }, section ".intList", align 4, !dbg !1808
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 1073741824 }], align 4, !dbg !1817
@__pinctrl_dev_config__device_dts_ord_57 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_57, i32 0, i32 0), i8 1 }, align 4, !dbg !1819
@__pinctrl_states__device_dts_ord_57 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_57, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1821
@__pinctrl_state_pins_0__device_dts_ord_57 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2312, i32 512 }, %struct._thread_arch { i32 2280, i32 0 }], align 4, !dbg !1823
@uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 = internal global %struct._isr_list { i32 82, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*) }, section ".intList", align 4, !dbg !1825
@pclken_4 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 -2147483648 }], align 4, !dbg !1834
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !1836
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1838
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2088, i32 512 }, %struct._thread_arch { i32 2056, i32 0 }], align 4, !dbg !1840
@uart_stm32_irq_config_func_4.__isr_uart_stm32_isr_irq_4 = internal global %struct._isr_list { i32 83, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*) }, section ".intList", align 4, !dbg !1842
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1849
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1958
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1960
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1956
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1927
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106], align 4, !dbg !1962
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1341
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2052
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2094
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2097
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2103
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2109
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2318
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2327
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2334
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2339
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.117 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.122, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.123, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.125, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.126, i32 0, i32 0)], align 4, !dbg !2367
@.str.120 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.121 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.122 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.123 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.124 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.125 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.119 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.126 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2479
@.str.8.118 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2492
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2600
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2603
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2605
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2332
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2329
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2607
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2643
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2641
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2196
@.str.197 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2646
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3337 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3395, !srcloc !3398
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3445, !srcloc !3446
  ret void, !dbg !3447
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3450 {
  tail call void @console_getline_init() #26, !dbg !3455
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3456
  br label %1, !dbg !3457

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3458
  call void @llvm.dbg.value(metadata i8* %2, metadata !3453, metadata !DIExpression()), !dbg !3459
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3460
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3461
  %4 = add i32 %3, -1, !dbg !3462
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3463
  %6 = load i8, i8* %5, align 1, !dbg !3463
  %7 = zext i8 %6 to i32, !dbg !3463
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3464
  br label %1, !dbg !3457, !llvm.loop !3465
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3469, metadata !DIExpression()), !dbg !3470
  ret i32 0, !dbg !3471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3472 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3476, metadata !DIExpression()), !dbg !3477
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3478
  ret void, !dbg !3479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3480 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3483
  ret i8* %1, !dbg !3484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3485 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3497, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i8* %0, metadata !3496, metadata !DIExpression()), !dbg !3506
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3507
  ret void, !dbg !3509
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata i8* %1, metadata !3515, metadata !DIExpression()), !dbg !3516
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3517
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3517
  ret i32 %4, !dbg !3518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3519 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3531, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3528, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %1, metadata !3529, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i8* %2, metadata !3530, metadata !DIExpression()), !dbg !3532
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3533
  ret void, !dbg !3534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3539, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %1, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 0, metadata !3541, metadata !DIExpression()), !dbg !3542
  %3 = icmp eq i32 %1, 0, !dbg !3543
  br i1 %3, label %13, label %4, !dbg !3546

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3541, metadata !DIExpression()), !dbg !3542
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3547
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3549
  %8 = load i8, i8* %7, align 1, !dbg !3549
  %9 = zext i8 %8 to i32, !dbg !3549
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3547
  %11 = add nuw i32 %5, 1, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %11, metadata !3541, metadata !DIExpression()), !dbg !3542
  %12 = icmp eq i32 %11, %1, !dbg !3543
  br i1 %12, label %13, label %4, !dbg !3546, !llvm.loop !3551

13:                                               ; preds = %4, %2
  ret void, !dbg !3553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3554 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3558, metadata !DIExpression()), !dbg !3560
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3561
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3559, metadata !DIExpression()), !dbg !3562
  call void @llvm.va_start(i8* nonnull %3), !dbg !3563
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3564
  %5 = load i32, i32* %4, align 4, !dbg !3564
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3564
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3564
  call void @llvm.va_end(i8* nonnull %3), !dbg !3565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3566
  ret void, !dbg !3566
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3567 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3571, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1, metadata !3572, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %2, metadata !3573, metadata !DIExpression()), !dbg !3576
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3577
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3577
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3574, metadata !DIExpression()), !dbg !3578
  call void @llvm.va_start(i8* nonnull %5), !dbg !3579
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3580
  %7 = load i32, i32* %6, align 4, !dbg !3580
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3580
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %9, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.va_end(i8* nonnull %5), !dbg !3581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3582
  ret i32 %9, !dbg !3583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3584 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3591, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %0, metadata !3588, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %1, metadata !3589, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %2, metadata !3590, metadata !DIExpression()), !dbg !3598
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3599
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3592, metadata !DIExpression()), !dbg !3600
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3601
  store i8* %0, i8** %7, align 4, !dbg !3601
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3601
  store i32 %1, i32* %8, align 4, !dbg !3601
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3601
  store i32 0, i32* %9, align 4, !dbg !3601
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3602
  %10 = load i32, i32* %9, align 4, !dbg !3603
  %11 = load i32, i32* %8, align 4, !dbg !3605
  %12 = icmp slt i32 %10, %11, !dbg !3606
  br i1 %12, label %13, label %15, !dbg !3607

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3608
  store i8 0, i8* %14, align 1, !dbg !3610
  br label %15, !dbg !3611

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3612
  ret i32 %10, !dbg !3613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3619, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3620, metadata !DIExpression()), !dbg !3621
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3622
  %4 = load i8*, i8** %3, align 4, !dbg !3622
  %5 = icmp eq i8* %4, null, !dbg !3624
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3625
  br i1 %5, label %12, label %8, !dbg !3626

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3627
  %10 = load i32, i32* %9, align 4, !dbg !3627
  %11 = icmp slt i32 %7, %10, !dbg !3628
  br i1 %11, label %15, label %12, !dbg !3629

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3630
  %14 = add nsw i32 %7, 1, !dbg !3632
  store i32 %14, i32* %13, align 4, !dbg !3632
  br label %25, !dbg !3633

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3634
  %17 = icmp eq i32 %7, %16, !dbg !3636
  br i1 %17, label %18, label %21, !dbg !3637

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3638
  store i32 %19, i32* %6, align 4, !dbg !3638
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3640
  store i8 0, i8* %20, align 1, !dbg !3641
  br label %25, !dbg !3642

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3643
  %23 = add nsw i32 %7, 1, !dbg !3645
  store i32 %23, i32* %6, align 4, !dbg !3645
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3646
  store i8 %22, i8* %24, align 1, !dbg !3647
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3648
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3649 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3659, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %1, metadata !3660, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %2, metadata !3661, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %3, metadata !3662, metadata !DIExpression()), !dbg !3663
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3664
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3665
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3666
  unreachable, !dbg !3667
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3668 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3772
  ret %struct.k_thread* %1, !dbg !3773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3779, metadata !DIExpression()), !dbg !3780
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3781, !srcloc !3783
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3784
  ret void, !dbg !3785
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3786 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3787, !srcloc !3789
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3790
  ret %struct.k_thread* %1, !dbg !3791
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3803, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i8* %1, metadata !3804, metadata !DIExpression()), !dbg !3807
  %3 = icmp eq i8* %1, null, !dbg !3808
  br i1 %3, label %8, label %4, !dbg !3810

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3811
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3811
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3805, metadata !DIExpression()), !dbg !3807
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3812, !range !3813
  call void @llvm.dbg.value(metadata i32 %7, metadata !3806, metadata !DIExpression()), !dbg !3807
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3814
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3815
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3817 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3821, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %1, metadata !3822, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %1, metadata !3823, metadata !DIExpression()), !dbg !3825
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3826
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3824, metadata !DIExpression()), !dbg !3825
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3827
  %5 = ptrtoint i8* %4 to i32, !dbg !3828
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3828
  %7 = sub i32 %5, %6, !dbg !3828
  %8 = lshr i32 %7, 3, !dbg !3829
  ret i32 %8, !dbg !3830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3831 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3835, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %1, metadata !3836, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i1 %2, metadata !3837, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3840
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3841
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3838, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3839, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3840
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3842
  %6 = bitcast i8* %5 to i16*, !dbg !3842
  %7 = load i16, i16* %6, align 2, !dbg !3842
  %8 = and i16 %7, -2, !dbg !3846
  %9 = zext i1 %2 to i16, !dbg !3846
  %10 = or i16 %8, %9, !dbg !3846
  store i16 %10, i16* %6, align 2, !dbg !3842
  ret void, !dbg !3847
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3854
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3855
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3857
  br i1 %4, label %7, label %5, !dbg !3858

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3859
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3861
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3862
  br label %7, !dbg !3863

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3864, !range !3866
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3867
  br i1 %9, label %13, label %10, !dbg !3868

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3869
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3871, !range !3866
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3872
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3873
  call void @llvm.dbg.value(metadata i32 %12, metadata !3853, metadata !DIExpression()), !dbg !3854
  br label %13, !dbg !3874

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3853, metadata !DIExpression()), !dbg !3854
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3875
  ret void, !dbg !3876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3877 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3881, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %1, metadata !3882, metadata !DIExpression()), !dbg !3883
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3884
  %4 = add i32 %3, %1, !dbg !3885
  ret i32 %4, !dbg !3886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3887 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3891, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3893
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3894
  %4 = and i32 %3, 1, !dbg !3895
  %5 = icmp ne i32 %4, 0, !dbg !3894
  ret i1 %5, !dbg !3896
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3899, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %1, metadata !3900, metadata !DIExpression()), !dbg !3904
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3905, !range !3906
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %4, metadata !3901, metadata !DIExpression()), !dbg !3908
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3909
  ret void, !dbg !3910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3911 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3915, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1, metadata !3916, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %2, metadata !3917, metadata !DIExpression()), !dbg !3920
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3921
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3922
  %6 = add i32 %5, %4, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %6, metadata !3918, metadata !DIExpression()), !dbg !3920
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3924
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3925
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3926
  ret void, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3928 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3930, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata i32 %1, metadata !3931, metadata !DIExpression()), !dbg !3932
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3933
  %4 = sub i32 %1, %3, !dbg !3934
  ret i32 %4, !dbg !3935
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3938, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3939, metadata !DIExpression()), !dbg !3943
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3944, !range !3906
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %4, metadata !3940, metadata !DIExpression()), !dbg !3946
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3947
  ret void, !dbg !3948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3949 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3953, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 %1, metadata !3954, metadata !DIExpression()), !dbg !3955
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3956
  %4 = lshr i32 %3, 1, !dbg !3957
  ret i32 %4, !dbg !3958
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3959 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3963, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3964, metadata !DIExpression()), !dbg !3966
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3967
  %4 = add i32 %1, 1, !dbg !3968
  %5 = sub i32 %4, %3, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %5, metadata !3965, metadata !DIExpression()), !dbg !3966
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3970, !range !3971
  %7 = sub nsw i32 31, %6, !dbg !3972
  ret i32 %7, !dbg !3973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3974 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3978, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %1, metadata !3979, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %2, metadata !3980, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3981, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3987
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3988
  %5 = load i32, i32* %4, align 4, !dbg !3988
  %6 = icmp eq i32 %5, 0, !dbg !3989
  br i1 %6, label %7, label %12, !dbg !3990

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3991
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3993
  %10 = load i32, i32* %9, align 4, !dbg !3994
  %11 = or i32 %10, %8, !dbg !3994
  store i32 %11, i32* %9, align 4, !dbg !3994
  store i32 %1, i32* %4, align 4, !dbg !3995
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3996
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3997
  br label %14, !dbg !3998

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3983, metadata !DIExpression()), !dbg !3999
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !4000, !range !4001
  call void @llvm.dbg.value(metadata i32 %13, metadata !3986, metadata !DIExpression()), !dbg !3999
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !4002
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4003
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !4004
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !4005
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4007 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4009, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %1, metadata !4010, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %2, metadata !4011, metadata !DIExpression()), !dbg !4012
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !4013
  ret void, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4017, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %1, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %2, metadata !4019, metadata !DIExpression()), !dbg !4020
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !4021
  ret void, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4025, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 %1, metadata !4026, metadata !DIExpression()), !dbg !4027
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !4028
  ret i32 %3, !dbg !4029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4030 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4034, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %1, metadata !4035, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %2, metadata !4036, metadata !DIExpression()), !dbg !4039
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4040
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4037, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4041
  call void @llvm.dbg.value(metadata i8* %5, metadata !4038, metadata !DIExpression()), !dbg !4039
  %6 = bitcast i8* %5 to i16*, !dbg !4042
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4045
  %8 = load i16, i16* %7, align 2, !dbg !4045
  %9 = zext i16 %8 to i32, !dbg !4045
  ret i32 %9, !dbg !4046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4047 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4051, metadata !DIExpression()), !dbg !4052
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4053
  ret %struct.chunk_unit_t* %2, !dbg !4054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4055 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4059, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 %1, metadata !4060, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 %2, metadata !4061, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 %3, metadata !4062, metadata !DIExpression()), !dbg !4065
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4066
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4063, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4064, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4065
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4067
  call void @llvm.dbg.value(metadata i8* %6, metadata !4064, metadata !DIExpression()), !dbg !4065
  %7 = trunc i32 %3 to i16, !dbg !4068
  %8 = bitcast i8* %6 to i16*, !dbg !4071
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4072
  store i16 %7, i16* %9, align 2, !dbg !4073
  ret void, !dbg !4074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4075 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4079, metadata !DIExpression()), !dbg !4080
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !4081
  ret i32 %2, !dbg !4082
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4087, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %1, metadata !4088, metadata !DIExpression()), !dbg !4089
  %3 = add i32 %1, 4, !dbg !4090
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !4091
  ret i32 %4, !dbg !4092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4097, metadata !DIExpression()), !dbg !4098
  %2 = add i32 %0, 7, !dbg !4099
  %3 = lshr i32 %2, 3, !dbg !4100
  ret i32 %3, !dbg !4101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4102 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4106, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata i32 %1, metadata !4107, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata i32 %2, metadata !4108, metadata !DIExpression()), !dbg !4109
  %4 = shl i32 %2, 1, !dbg !4110
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !4111
  ret void, !dbg !4112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4113 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4115, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %1, metadata !4116, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %2, metadata !4117, metadata !DIExpression()), !dbg !4118
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !4119
  ret void, !dbg !4120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4121 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4123, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 %1, metadata !4124, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 %2, metadata !4125, metadata !DIExpression()), !dbg !4131
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4132
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4126, metadata !DIExpression()), !dbg !4131
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4133
  %6 = icmp eq i32 %5, %1, !dbg !4134
  br i1 %6, label %7, label %14, !dbg !4135

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4136
  %9 = xor i32 %8, -1, !dbg !4138
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4139
  %11 = load i32, i32* %10, align 4, !dbg !4140
  %12 = and i32 %11, %9, !dbg !4140
  store i32 %12, i32* %10, align 4, !dbg !4140
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4141
  store i32 0, i32* %13, align 4, !dbg !4142
  br label %17, !dbg !4143

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %15, metadata !4127, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %5, metadata !4130, metadata !DIExpression()), !dbg !4145
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4146
  store i32 %5, i32* %16, align 4, !dbg !4147
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !4148
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !4149
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4151 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4153, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 %1, metadata !4154, metadata !DIExpression()), !dbg !4155
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !4156
  ret i32 %3, !dbg !4157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4158 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4162, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* %1, metadata !4163, metadata !DIExpression()), !dbg !4169
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4170
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4164, metadata !DIExpression()), !dbg !4169
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %5, metadata !4165, metadata !DIExpression()), !dbg !4169
  %6 = ptrtoint i8* %1 to i32, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %6, metadata !4166, metadata !DIExpression()), !dbg !4169
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !4173
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4173
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %9, metadata !4167, metadata !DIExpression()), !dbg !4169
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !4175
  %11 = shl i32 %10, 3, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %11, metadata !4168, metadata !DIExpression()), !dbg !4169
  %12 = sub i32 %9, %6, !dbg !4177
  %13 = add i32 %12, %11, !dbg !4178
  ret i32 %13, !dbg !4179
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4184, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4190
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4191
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4191
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4186, metadata !DIExpression()), !dbg !4190
  %5 = icmp eq i32 %1, 0, !dbg !4192
  br i1 %5, label %19, label %6, !dbg !4194

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4195
  br i1 %7, label %19, label %8, !dbg !4196

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4197, !range !3813
  call void @llvm.dbg.value(metadata i32 %9, metadata !4188, metadata !DIExpression()), !dbg !4190
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %10, metadata !4189, metadata !DIExpression()), !dbg !4190
  %11 = icmp eq i32 %10, 0, !dbg !4199
  br i1 %11, label %19, label %12, !dbg !4201

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4202
  %14 = icmp ugt i32 %13, %9, !dbg !4204
  br i1 %14, label %15, label %17, !dbg !4205

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4206
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4208
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4209
  br label %17, !dbg !4210

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4211
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4212
  call void @llvm.dbg.value(metadata i8* %18, metadata !4187, metadata !DIExpression()), !dbg !4190
  br label %19, !dbg !4213

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4190
  ret i8* %20, !dbg !4214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4215 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4219, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %1, metadata !4220, metadata !DIExpression()), !dbg !4221
  %3 = lshr i32 %1, 3, !dbg !4222
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4223
  %5 = load i32, i32* %4, align 4, !dbg !4223
  %6 = icmp uge i32 %3, %5, !dbg !4224
  ret i1 %6, !dbg !4225
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4226 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4230, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4231, metadata !DIExpression()), !dbg !4245
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %3, metadata !4232, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4233, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4245
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4247
  %5 = load i32, i32* %4, align 4, !dbg !4247
  %6 = icmp eq i32 %5, 0, !dbg !4248
  br i1 %6, label %19, label %7, !dbg !4249

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4250
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4251
  call void @llvm.dbg.value(metadata i32 %9, metadata !4237, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %8, metadata !4238, metadata !DIExpression()), !dbg !4252
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4253
  %11 = icmp ult i32 %10, %1, !dbg !4255
  br i1 %11, label %13, label %12, !dbg !4256

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4257
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4259
  store i32 %14, i32* %4, align 4, !dbg !4260
  %15 = add nsw i32 %9, -1, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %15, metadata !4237, metadata !DIExpression()), !dbg !4251
  %16 = icmp eq i32 %15, 0, !dbg !4261
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4262
  br i1 %18, label %19, label %7, !dbg !4262, !llvm.loop !4263

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4266
  %21 = load i32, i32* %20, align 4, !dbg !4266
  %22 = add nsw i32 %3, 1, !dbg !4267
  %23 = shl nsw i32 -1, %22, !dbg !4267
  %24 = and i32 %21, %23, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %24, metadata !4240, metadata !DIExpression()), !dbg !4245
  %25 = icmp eq i32 %24, 0, !dbg !4269
  br i1 %25, label %30, label %26, !dbg !4270

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4271, !range !3971
  call void @llvm.dbg.value(metadata i32 %27, metadata !4241, metadata !DIExpression()), !dbg !4272
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4273
  %29 = load i32, i32* %28, align 4, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %29, metadata !4244, metadata !DIExpression()), !dbg !4272
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4274
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4245
  ret i32 %31, !dbg !4275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4276 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4278, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %1, metadata !4279, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %2, metadata !4280, metadata !DIExpression()), !dbg !4284
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %4, metadata !4281, metadata !DIExpression()), !dbg !4284
  %5 = sub i32 %2, %1, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %5, metadata !4282, metadata !DIExpression()), !dbg !4284
  %6 = sub i32 %4, %5, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %6, metadata !4283, metadata !DIExpression()), !dbg !4284
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4288
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4289
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4290
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4291
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4292
  ret void, !dbg !4293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4294 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4298, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i32 %1, metadata !4299, metadata !DIExpression()), !dbg !4302
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4303
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4300, metadata !DIExpression()), !dbg !4302
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %4, metadata !4301, metadata !DIExpression()), !dbg !4302
  ret i8* %4, !dbg !4305
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4306 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4310, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 %1, metadata !4311, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 %2, metadata !4312, metadata !DIExpression()), !dbg !4322
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4323
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4323
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4313, metadata !DIExpression()), !dbg !4322
  %6 = sub i32 0, %1, !dbg !4324
  %7 = and i32 %6, %1, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %7, metadata !4315, metadata !DIExpression()), !dbg !4322
  %8 = icmp eq i32 %7, %1, !dbg !4326
  br i1 %8, label %13, label %9, !dbg !4328

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %10, metadata !4311, metadata !DIExpression()), !dbg !4322
  %11 = icmp ult i32 %7, 4, !dbg !4331
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4331
  br label %17, !dbg !4331

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4332
  br i1 %14, label %15, label %17, !dbg !4335

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4336
  br label %57, !dbg !4338

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4322
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4339
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4311, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 %19, metadata !4314, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32 %18, metadata !4315, metadata !DIExpression()), !dbg !4322
  %21 = icmp eq i32 %2, 0, !dbg !4340
  br i1 %21, label %57, label %22, !dbg !4342

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4343
  br i1 %23, label %57, label %24, !dbg !4344

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4345
  %26 = add i32 %25, %20, !dbg !4346
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4347, !range !3813
  call void @llvm.dbg.value(metadata i32 %27, metadata !4316, metadata !DIExpression()), !dbg !4322
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4348
  call void @llvm.dbg.value(metadata i32 %28, metadata !4317, metadata !DIExpression()), !dbg !4322
  %29 = icmp eq i32 %28, 0, !dbg !4349
  br i1 %29, label %57, label %30, !dbg !4351

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4352
  call void @llvm.dbg.value(metadata i8* %31, metadata !4318, metadata !DIExpression()), !dbg !4322
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4353
  %33 = ptrtoint i8* %32 to i32, !dbg !4353
  %34 = add i32 %20, -1, !dbg !4353
  %35 = add i32 %34, %33, !dbg !4353
  %36 = sub i32 0, %20, !dbg !4353
  %37 = and i32 %35, %36, !dbg !4353
  %38 = inttoptr i32 %37 to i8*, !dbg !4354
  %39 = sub i32 0, %18, !dbg !4355
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4355
  call void @llvm.dbg.value(metadata i8* %40, metadata !4318, metadata !DIExpression()), !dbg !4322
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4356
  %42 = ptrtoint i8* %41 to i32, !dbg !4356
  %43 = add i32 %42, 7, !dbg !4356
  %44 = and i32 %43, -8, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %44, metadata !4319, metadata !DIExpression()), !dbg !4322
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4357
  call void @llvm.dbg.value(metadata i32 %45, metadata !4320, metadata !DIExpression()), !dbg !4322
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4358
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4359
  %48 = sub i32 %44, %47, !dbg !4359
  %49 = ashr exact i32 %48, 3, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %49, metadata !4321, metadata !DIExpression()), !dbg !4322
  %50 = icmp ugt i32 %45, %28, !dbg !4360
  br i1 %50, label %51, label %52, !dbg !4362

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4363
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4365
  br label %52, !dbg !4366

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4367
  %54 = icmp ugt i32 %53, %49, !dbg !4369
  br i1 %54, label %55, label %56, !dbg !4370

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4371
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4373
  br label %56, !dbg !4374

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4375
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4322
  ret i8* %58, !dbg !4376
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4377 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4381, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i8* %1, metadata !4382, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %2, metadata !4383, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %3, metadata !4384, metadata !DIExpression()), !dbg !4400
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4401
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4401
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4385, metadata !DIExpression()), !dbg !4400
  %7 = icmp eq i8* %1, null, !dbg !4402
  br i1 %7, label %8, label %10, !dbg !4404

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4405
  br label %59, !dbg !4407

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4408
  br i1 %11, label %12, label %13, !dbg !4410

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4411
  br label %59, !dbg !4413

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4414
  br i1 %14, label %59, label %15, !dbg !4416

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4417, !range !3813
  call void @llvm.dbg.value(metadata i32 %16, metadata !4386, metadata !DIExpression()), !dbg !4400
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %17, metadata !4387, metadata !DIExpression()), !dbg !4400
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4419
  %19 = ptrtoint i8* %1 to i32, !dbg !4420
  %20 = ptrtoint i8* %18 to i32, !dbg !4420
  %21 = sub i32 %19, %20, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %21, metadata !4388, metadata !DIExpression()), !dbg !4400
  %22 = add i32 %21, %3, !dbg !4421
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %23, metadata !4389, metadata !DIExpression()), !dbg !4400
  %24 = icmp eq i32 %2, 0, !dbg !4423
  br i1 %24, label %29, label %25, !dbg !4424

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4425
  %27 = and i32 %26, %19, !dbg !4426
  %28 = icmp eq i32 %27, 0, !dbg !4426
  br i1 %28, label %29, label %49, !dbg !4427

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4428
  %31 = icmp eq i32 %23, %30, !dbg !4429
  br i1 %31, label %59, label %32, !dbg !4430

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4431
  br i1 %33, label %34, label %36, !dbg !4432

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4433
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4435
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4436
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4437
  br label %59, !dbg !4438

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4439
  br i1 %37, label %49, label %38, !dbg !4440

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4441
  %40 = add i32 %39, %30, !dbg !4442
  %41 = icmp ult i32 %40, %23, !dbg !4443
  br i1 %41, label %49, label %42, !dbg !4444

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %43, metadata !4390, metadata !DIExpression()), !dbg !4446
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4447
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4448
  %45 = icmp ult i32 %43, %44, !dbg !4450
  br i1 %45, label %46, label %48, !dbg !4451

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4452
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4454
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4455
  br label %48, !dbg !4456

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4457
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4458
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %50, metadata !4396, metadata !DIExpression()), !dbg !4400
  %51 = icmp eq i8* %50, null, !dbg !4460
  br i1 %51, label %59, label %52, !dbg !4461

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4462, !range !3906
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4463
  %55 = sub i32 %54, %21, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %55, metadata !4397, metadata !DIExpression()), !dbg !4465
  %56 = icmp ult i32 %55, %3, !dbg !4466
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4466
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4467
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4468
  br label %59, !dbg !4469

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4400
  ret i8* %60, !dbg !4470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4471 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4475, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata i32 %1, metadata !4476, metadata !DIExpression()), !dbg !4477
  %3 = shl i32 %1, 3, !dbg !4478
  %4 = add i32 %3, -4, !dbg !4479
  ret i32 %4, !dbg !4480
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4481 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4485, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i8* %1, metadata !4486, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i32 %2, metadata !4487, metadata !DIExpression()), !dbg !4496
  %4 = add i32 %2, -4, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %4, metadata !4487, metadata !DIExpression()), !dbg !4496
  %5 = ptrtoint i8* %1 to i32, !dbg !4498
  %6 = add i32 %5, 7, !dbg !4498
  %7 = and i32 %6, -8, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %7, metadata !4488, metadata !DIExpression()), !dbg !4496
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4499
  %9 = ptrtoint i8* %8 to i32, !dbg !4499
  %10 = and i32 %9, -8, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %10, metadata !4489, metadata !DIExpression()), !dbg !4496
  %11 = sub i32 %10, %7, !dbg !4500
  %12 = lshr exact i32 %11, 3, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %12, metadata !4490, metadata !DIExpression()), !dbg !4496
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4491, metadata !DIExpression()), !dbg !4496
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4503
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4504
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4505
  store i32 %12, i32* %15, align 8, !dbg !4506
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4507
  store i32 0, i32* %16, align 4, !dbg !4508
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %17, metadata !4492, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4496
  %18 = shl i32 %17, 2, !dbg !4510
  %19 = add i32 %18, 20, !dbg !4511
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %20, metadata !4493, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i32 0, metadata !4494, metadata !DIExpression()), !dbg !4513
  %21 = icmp slt i32 %17, 0, !dbg !4514
  br i1 %21, label %22, label %24, !dbg !4516

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4517
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4518
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4519
  %23 = sub i32 %12, %20, !dbg !4520
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4521
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4522
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4523
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4524
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4525
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4526
  ret void, !dbg !4527

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4494, metadata !DIExpression()), !dbg !4513
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4528
  store i32 0, i32* %26, align 4, !dbg !4530
  %27 = add nuw i32 %25, 1, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %27, metadata !4494, metadata !DIExpression()), !dbg !4513
  %28 = icmp eq i32 %25, %17, !dbg !4514
  br i1 %28, label %22, label %24, !dbg !4516, !llvm.loop !4532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4534 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4544, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %1, metadata !4545, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %2, metadata !4546, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %4, metadata !4548, metadata !DIExpression()), !dbg !4675
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4676
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4676
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4549, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.value(metadata i32 0, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i1 undef, metadata !4555, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4678

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4678

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4679
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %30, metadata !4546, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %29, metadata !4553, metadata !DIExpression()), !dbg !4675
  %31 = load i8, i8* %30, align 1, !dbg !4680
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4678

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4680
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4681
  call void @llvm.dbg.value(metadata i8* %34, metadata !4546, metadata !DIExpression()), !dbg !4675
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %35, metadata !4557, metadata !DIExpression()), !dbg !4682
  %36 = icmp slt i32 %35, 0, !dbg !4683
  %37 = add i32 %29, 1, !dbg !4681
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %36, label %365, label %28, !llvm.loop !4685

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4687
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4562, metadata !DIExpression()), !dbg !4688
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4688
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4607, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4610, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %30, metadata !4613, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i32 -1, metadata !4614, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i32 -1, metadata !4615, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* null, metadata !4616, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %14, metadata !4617, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8 0, metadata !4618, metadata !DIExpression()), !dbg !4689
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %39, metadata !4546, metadata !DIExpression()), !dbg !4675
  %40 = load i24, i24* %15, align 8, !dbg !4691
  %41 = and i24 %40, 256, !dbg !4691
  %42 = icmp eq i24 %41, 0, !dbg !4691
  br i1 %42, label %51, label %43, !dbg !4693

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %44, metadata !4547, metadata !DIExpression()), !dbg !4675
  %45 = bitcast i8* %27 to i32*, !dbg !4694
  %46 = load i32, i32* %45, align 4, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %46, metadata !4614, metadata !DIExpression()), !dbg !4689
  %47 = icmp slt i32 %46, 0, !dbg !4696
  br i1 %47, label %48, label %56, !dbg !4698

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4699
  store i24 %49, i24* %15, align 8, !dbg !4699
  %50 = sub nsw i32 0, %46, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %50, metadata !4614, metadata !DIExpression()), !dbg !4689
  br label %56, !dbg !4702

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4703
  %53 = icmp eq i24 %52, 0, !dbg !4703
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4705
  br label %56, !dbg !4705

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4706
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4689
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %58, metadata !4614, metadata !DIExpression()), !dbg !4689
  %60 = and i24 %57, 1024, !dbg !4706
  %61 = icmp eq i24 %60, 0, !dbg !4706
  br i1 %61, label %69, label %62, !dbg !4707

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4708
  call void @llvm.dbg.value(metadata i8* %63, metadata !4547, metadata !DIExpression()), !dbg !4675
  %64 = bitcast i8* %59 to i32*, !dbg !4708
  %65 = load i32, i32* %64, align 4, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %65, metadata !4619, metadata !DIExpression()), !dbg !4709
  %66 = icmp slt i32 %65, 0, !dbg !4710
  br i1 %66, label %67, label %74, !dbg !4712

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4713
  store i24 %68, i24* %15, align 8, !dbg !4713
  br label %74, !dbg !4715

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4716
  %71 = icmp eq i24 %70, 0, !dbg !4716
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4718
  br label %74, !dbg !4718

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4719
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4689
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4689
  call void @llvm.dbg.value(metadata i8* %77, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %76, metadata !4615, metadata !DIExpression()), !dbg !4689
  store i32 0, i32* %16, align 4, !dbg !4720
  store i32 0, i32* %17, align 8, !dbg !4721
  %78 = lshr i24 %75, 16, !dbg !4719
  call void @llvm.dbg.value(metadata i24 %78, metadata !4622, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4689
  %79 = lshr i24 %75, 11, !dbg !4722
  %80 = and i24 %79, 15, !dbg !4722
  %81 = zext i24 %80 to i32, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %81, metadata !4623, metadata !DIExpression()), !dbg !4689
  %82 = trunc i24 %78 to i3, !dbg !4723
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4723

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4724

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %85, metadata !4547, metadata !DIExpression()), !dbg !4675
  %86 = bitcast i8* %77 to i32*, !dbg !4727
  %87 = load i32, i32* %86, align 4, !dbg !4727
  %88 = sext i32 %87 to i64, !dbg !4727
  store i64 %88, i64* %20, align 8, !dbg !4729
  br label %115, !dbg !4730

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4731
  call void @llvm.dbg.value(metadata i8* %90, metadata !4547, metadata !DIExpression()), !dbg !4675
  %91 = bitcast i8* %77 to i32*, !dbg !4731
  %92 = load i32, i32* %91, align 4, !dbg !4731
  %93 = sext i32 %92 to i64, !dbg !4731
  store i64 %93, i64* %20, align 8, !dbg !4734
  br label %115, !dbg !4735

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4736
  %96 = add i32 %95, 7, !dbg !4736
  %97 = and i32 %96, -8, !dbg !4736
  %98 = inttoptr i32 %97 to i8*, !dbg !4736
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %99, metadata !4547, metadata !DIExpression()), !dbg !4675
  %100 = inttoptr i32 %97 to i64*, !dbg !4736
  %101 = load i64, i64* %100, align 8, !dbg !4736
  store i64 %101, i64* %20, align 8, !dbg !4737
  br label %115, !dbg !4738

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4739
  %104 = add i32 %103, 7, !dbg !4739
  %105 = and i32 %104, -8, !dbg !4739
  %106 = inttoptr i32 %105 to i8*, !dbg !4739
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4739
  call void @llvm.dbg.value(metadata i8* %107, metadata !4547, metadata !DIExpression()), !dbg !4675
  %108 = inttoptr i32 %105 to i64*, !dbg !4739
  %109 = load i64, i64* %108, align 8, !dbg !4739
  store i64 %109, i64* %20, align 8, !dbg !4740
  br label %115, !dbg !4741

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4742
  call void @llvm.dbg.value(metadata i8* %111, metadata !4547, metadata !DIExpression()), !dbg !4675
  %112 = bitcast i8* %77 to i32*, !dbg !4742
  %113 = load i32, i32* %112, align 4, !dbg !4742
  %114 = sext i32 %113 to i64, !dbg !4743
  store i64 %114, i64* %20, align 8, !dbg !4744
  br label %115, !dbg !4745

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4746
  call void @llvm.dbg.value(metadata i8* %117, metadata !4547, metadata !DIExpression()), !dbg !4675
  %118 = trunc i24 %79 to i4, !dbg !4747
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4747

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4748
  %121 = ashr exact i64 %120, 56, !dbg !4748
  store i64 %121, i64* %20, align 8, !dbg !4751
  br label %177, !dbg !4752

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4753
  %124 = ashr exact i64 %123, 48, !dbg !4753
  store i64 %124, i64* %20, align 8, !dbg !4756
  br label %177, !dbg !4757

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4758

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4761
  call void @llvm.dbg.value(metadata i8* %127, metadata !4547, metadata !DIExpression()), !dbg !4675
  %128 = bitcast i8* %77 to i32*, !dbg !4761
  %129 = load i32, i32* %128, align 4, !dbg !4761
  %130 = zext i32 %129 to i64, !dbg !4761
  store i64 %130, i64* %20, align 8, !dbg !4763
  br label %157, !dbg !4764

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4765
  call void @llvm.dbg.value(metadata i8* %132, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %132, metadata !4547, metadata !DIExpression()), !dbg !4675
  %133 = bitcast i8* %77 to i32*, !dbg !4765
  %134 = load i32, i32* %133, align 4, !dbg !4765
  %135 = zext i32 %134 to i64, !dbg !4765
  store i64 %135, i64* %20, align 8, !dbg !4765
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4767
  %138 = add i32 %137, 7, !dbg !4767
  %139 = and i32 %138, -8, !dbg !4767
  %140 = inttoptr i32 %139 to i8*, !dbg !4767
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4767
  call void @llvm.dbg.value(metadata i8* %141, metadata !4547, metadata !DIExpression()), !dbg !4675
  %142 = inttoptr i32 %139 to i64*, !dbg !4767
  %143 = load i64, i64* %142, align 8, !dbg !4767
  store i64 %143, i64* %20, align 8, !dbg !4768
  br label %157, !dbg !4769

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4770
  %146 = add i32 %145, 7, !dbg !4770
  %147 = and i32 %146, -8, !dbg !4770
  %148 = inttoptr i32 %147 to i8*, !dbg !4770
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4770
  call void @llvm.dbg.value(metadata i8* %149, metadata !4547, metadata !DIExpression()), !dbg !4675
  %150 = inttoptr i32 %147 to i64*, !dbg !4770
  %151 = load i64, i64* %150, align 8, !dbg !4770
  store i64 %151, i64* %20, align 8, !dbg !4771
  br label %157, !dbg !4772

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4773
  call void @llvm.dbg.value(metadata i8* %153, metadata !4547, metadata !DIExpression()), !dbg !4675
  %154 = bitcast i8* %77 to i32*, !dbg !4773
  %155 = load i32, i32* %154, align 4, !dbg !4773
  %156 = zext i32 %155 to i64, !dbg !4774
  store i64 %156, i64* %20, align 8, !dbg !4775
  br label %157, !dbg !4776

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4777
  call void @llvm.dbg.value(metadata i8* %159, metadata !4547, metadata !DIExpression()), !dbg !4675
  %160 = trunc i24 %79 to i4, !dbg !4778
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4778

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4779
  store i64 %162, i64* %20, align 8, !dbg !4782
  br label %177, !dbg !4783

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4784
  store i64 %164, i64* %20, align 8, !dbg !4787
  br label %177, !dbg !4788

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4789
  %167 = add i32 %166, 7, !dbg !4789
  %168 = and i32 %167, -8, !dbg !4789
  %169 = inttoptr i32 %168 to i8*, !dbg !4789
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %170, metadata !4547, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %170, metadata !4547, metadata !DIExpression()), !dbg !4675
  %171 = inttoptr i32 %168 to double*, !dbg !4789
  %172 = load double, double* %171, align 8, !dbg !4789
  store double %172, double* %19, align 8, !dbg !4789
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %174, metadata !4547, metadata !DIExpression()), !dbg !4675
  %175 = bitcast i8* %77 to i8**, !dbg !4793
  %176 = load i8*, i8** %175, align 4, !dbg !4793
  store i8* %176, i8** %18, align 8, !dbg !4796
  br label %177, !dbg !4797

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4689
  call void @llvm.dbg.value(metadata i8* %178, metadata !4547, metadata !DIExpression()), !dbg !4675
  %179 = and i24 %75, 3, !dbg !4798
  %180 = icmp eq i24 %179, 0, !dbg !4798
  br i1 %180, label %185, label %181, !dbg !4798

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %182, metadata !4624, metadata !DIExpression()), !dbg !4800
  %183 = icmp slt i32 %182, 0, !dbg !4801
  %184 = add i32 %182, %29, !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4803
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4804

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %188, metadata !4628, metadata !DIExpression()), !dbg !4806
  %189 = icmp slt i32 %188, 0, !dbg !4807
  %190 = add i32 %29, 1, !dbg !4805
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %192, metadata !4616, metadata !DIExpression()), !dbg !4689
  %193 = icmp sgt i32 %76, -1, !dbg !4810
  br i1 %193, label %194, label %196, !dbg !4812

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %195, metadata !4631, metadata !DIExpression()), !dbg !4815
  br label %241, !dbg !4816

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %197, metadata !4631, metadata !DIExpression()), !dbg !4815
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4616, metadata !DIExpression()), !dbg !4689
  %199 = load i64, i64* %20, align 8, !dbg !4819
  %200 = trunc i64 %199 to i8, !dbg !4820
  store i8 %200, i8* %10, align 1, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %23, metadata !4617, metadata !DIExpression()), !dbg !4689
  br label %245, !dbg !4822

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4823
  %203 = icmp eq i24 %202, 0, !dbg !4823
  %204 = trunc i24 %75 to i8, !dbg !4825
  %205 = shl i8 %204, 1, !dbg !4825
  %206 = and i8 %205, 32, !dbg !4825
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4825
  call void @llvm.dbg.value(metadata i8 %207, metadata !4618, metadata !DIExpression()), !dbg !4689
  %208 = load i64, i64* %20, align 8, !dbg !4826
  call void @llvm.dbg.value(metadata i64 %208, metadata !4554, metadata !DIExpression()), !dbg !4675
  %209 = icmp slt i64 %208, 0, !dbg !4827
  br i1 %209, label %210, label %212, !dbg !4829

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4618, metadata !DIExpression()), !dbg !4689
  %211 = sub nsw i64 0, %208, !dbg !4830
  store i64 %211, i64* %20, align 8, !dbg !4832
  br label %212, !dbg !4833

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4689
  call void @llvm.dbg.value(metadata i8 %213, metadata !4618, metadata !DIExpression()), !dbg !4689
  %214 = load i64, i64* %20, align 8, !dbg !4834
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %215, metadata !4616, metadata !DIExpression()), !dbg !4689
  br label %216, !dbg !4836

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4837
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4838
  call void @llvm.dbg.value(metadata i8* %218, metadata !4616, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8 %217, metadata !4618, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.label(metadata !4674), !dbg !4839
  %219 = icmp sgt i32 %76, -1, !dbg !4840
  br i1 %219, label %222, label %220, !dbg !4841

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4842
  br label %245, !dbg !4841

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4844
  %224 = sub i32 %22, %223, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %224, metadata !4633, metadata !DIExpression()), !dbg !4845
  %225 = load i24, i24* %15, align 8, !dbg !4846
  %226 = and i24 %225, -65, !dbg !4846
  store i24 %226, i24* %15, align 8, !dbg !4846
  %227 = icmp ugt i32 %76, %224, !dbg !4847
  br i1 %227, label %228, label %245, !dbg !4849

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4850
  store i32 %229, i32* %16, align 4, !dbg !4852
  br label %245, !dbg !4853

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4854
  %232 = icmp eq i8* %231, null, !dbg !4856
  br i1 %232, label %245, label %233, !dbg !4857

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4858
  %235 = zext i32 %234 to i64, !dbg !4858
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %236, metadata !4616, metadata !DIExpression()), !dbg !4689
  %237 = load i24, i24* %15, align 8, !dbg !4861
  %238 = or i24 %237, 1048576, !dbg !4861
  store i24 %238, i24* %15, align 8, !dbg !4861
  store i8 120, i8* %21, align 1, !dbg !4862
  br label %216, !dbg !4863

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4864
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4867
  br label %363, !dbg !4868

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4869
  call void @llvm.dbg.value(metadata i32 %242, metadata !4631, metadata !DIExpression()), !dbg !4815
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4870
  call void @llvm.dbg.value(metadata i32 -1, metadata !4615, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i32 %29, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %192, metadata !4616, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %243, metadata !4617, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8 0, metadata !4618, metadata !DIExpression()), !dbg !4689
  %244 = icmp eq i8* %192, null, !dbg !4871
  br i1 %244, label %363, label %245, !dbg !4873, !llvm.loop !4685

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4842
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata i32 0, metadata !4637, metadata !DIExpression()), !dbg !4689
  %250 = zext i8 %249 to i32, !dbg !4874
  %251 = icmp eq i8 %249, 0, !dbg !4876
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4689
  %252 = icmp sgt i32 %58, 0, !dbg !4877
  br i1 %252, label %253, label %302, !dbg !4878

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4842
  %255 = icmp eq i24 %254, 0, !dbg !4842
  %256 = ptrtoint i8* %248 to i32, !dbg !4879
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  %257 = ptrtoint i8* %247 to i32, !dbg !4879
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  %258 = xor i1 %251, true, !dbg !4880
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  %259 = sext i1 %258 to i32, !dbg !4880
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  %260 = lshr i24 %246, 19, !dbg !4881
  %261 = and i24 %260, 1, !dbg !4881
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4881
  %263 = zext i24 %262 to i32, !dbg !4881
  %264 = add i32 %257, %259, !dbg !4881
  %265 = add i32 %256, %263, !dbg !4881
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  %266 = and i24 %246, 4194304, !dbg !4882
  %267 = icmp eq i24 %266, 0, !dbg !4882
  %268 = load i32, i32* %16, align 4, !dbg !4884
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4689
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4689
  %269 = load i32, i32* %17, align 8, !dbg !4885
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4885
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4689
  %271 = add i32 %264, %58, !dbg !4885
  %272 = add i32 %265, %268, !dbg !4885
  %273 = add i32 %272, %270, !dbg !4886
  %274 = sub i32 %271, %273, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %274, metadata !4614, metadata !DIExpression()), !dbg !4689
  %275 = and i24 %246, 4, !dbg !4887
  %276 = icmp eq i24 %275, 0, !dbg !4887
  br i1 %276, label %277, label %302, !dbg !4888

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4638, metadata !DIExpression()), !dbg !4889
  %278 = and i24 %246, 64, !dbg !4890
  %279 = icmp eq i24 %278, 0, !dbg !4890
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4891
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4891
  %282 = select i1 %279, i32 32, i32 48, !dbg !4891
  br i1 %280, label %287, label %283, !dbg !4891

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %284, metadata !4643, metadata !DIExpression()), !dbg !4893
  %285 = icmp slt i32 %284, 0, !dbg !4894
  %286 = add i32 %29, 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4689
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %290, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8 undef, metadata !4638, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8 %288, metadata !4618, metadata !DIExpression()), !dbg !4689
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4896
  %292 = add i32 %291, -1, !dbg !4896
  br label %293, !dbg !4896

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4897
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %295, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %294, metadata !4614, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i32 %294, metadata !4614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4689
  %296 = icmp sgt i32 %294, 0, !dbg !4898
  br i1 %296, label %297, label %302, !dbg !4896

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %298, metadata !4614, metadata !DIExpression()), !dbg !4689
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %299, metadata !4649, metadata !DIExpression()), !dbg !4901
  %300 = icmp slt i32 %299, 0, !dbg !4902
  %301 = add i32 %295, 1, !dbg !4900
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %300, label %361, label %293, !llvm.loop !4904

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4689
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4689
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %305, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %304, metadata !4614, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8 %303, metadata !4618, metadata !DIExpression()), !dbg !4689
  %306 = icmp eq i8 %303, 0, !dbg !4906
  br i1 %306, label %312, label %307, !dbg !4907

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4908
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %309, metadata !4652, metadata !DIExpression()), !dbg !4910
  %310 = icmp slt i32 %309, 0, !dbg !4911
  %311 = add i32 %305, 1, !dbg !4909
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %313, metadata !4553, metadata !DIExpression()), !dbg !4675
  %314 = lshr i24 %246, 20, !dbg !4913
  %315 = lshr i24 %246, 19, !dbg !4914
  %316 = or i24 %314, %315, !dbg !4915
  %317 = and i24 %316, 1, !dbg !4915
  %318 = icmp eq i24 %317, 0, !dbg !4915
  br i1 %318, label %323, label %319, !dbg !4916

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %320, metadata !4656, metadata !DIExpression()), !dbg !4918
  %321 = icmp slt i32 %320, 0, !dbg !4919
  %322 = add i32 %313, 1, !dbg !4917
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %324, metadata !4553, metadata !DIExpression()), !dbg !4675
  %325 = and i24 %246, 1048576, !dbg !4921
  %326 = icmp eq i24 %325, 0, !dbg !4921
  br i1 %326, label %333, label %327, !dbg !4922

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4923
  %329 = zext i8 %328 to i32, !dbg !4923
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %330, metadata !4662, metadata !DIExpression()), !dbg !4924
  %331 = icmp slt i32 %330, 0, !dbg !4925
  %332 = add i32 %324, 1, !dbg !4923
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %334, metadata !4553, metadata !DIExpression()), !dbg !4675
  %335 = load i32, i32* %16, align 4, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %335, metadata !4637, metadata !DIExpression()), !dbg !4689
  br label %336, !dbg !4928

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4929
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %338, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %337, metadata !4637, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4689
  %339 = icmp sgt i32 %337, 0, !dbg !4930
  br i1 %339, label %340, label %345, !dbg !4928

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %341, metadata !4637, metadata !DIExpression()), !dbg !4689
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %342, metadata !4666, metadata !DIExpression()), !dbg !4933
  %343 = icmp slt i32 %342, 0, !dbg !4934
  %344 = add i32 %338, 1, !dbg !4932
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %343, label %361, label %336, !llvm.loop !4936

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %346, metadata !4669, metadata !DIExpression()), !dbg !4939
  %347 = icmp slt i32 %346, 0, !dbg !4940
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %349, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %304, metadata !4614, metadata !DIExpression()), !dbg !4689
  %350 = icmp sgt i32 %304, 0, !dbg !4942
  br i1 %350, label %351, label %363, !dbg !4943

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4943
  %353 = add i32 %352, %338, !dbg !4943
  br label %354, !dbg !4943

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %355, metadata !4614, metadata !DIExpression()), !dbg !4689
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %356, metadata !4671, metadata !DIExpression()), !dbg !4945
  %357 = icmp slt i32 %356, 0, !dbg !4946
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !4553, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %359, metadata !4614, metadata !DIExpression()), !dbg !4689
  %360 = icmp sgt i32 %355, 1, !dbg !4942
  br i1 %360, label %354, label %363, !dbg !4943, !llvm.loop !4949

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4686
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4679
  call void @llvm.dbg.value(metadata i32 %364, metadata !4553, metadata !DIExpression()), !dbg !4675
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4686
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4675
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4951
  ret i32 %366, !dbg !4951
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4952 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4956, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i8* %1, metadata !4957, metadata !DIExpression()), !dbg !4958
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4959
  store i24 0, i24* %3, align 4, !dbg !4959
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4959
  store i8 0, i8* %4, align 1, !dbg !4959
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4959
  store i32 0, i32* %5, align 4, !dbg !4959
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4959
  store i32 0, i32* %6, align 4, !dbg !4959
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %7, metadata !4957, metadata !DIExpression()), !dbg !4958
  %8 = load i8, i8* %7, align 1, !dbg !4961
  %9 = icmp eq i8 %8, 37, !dbg !4963
  br i1 %9, label %10, label %12, !dbg !4964

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %11, metadata !4957, metadata !DIExpression()), !dbg !4958
  store i8 37, i8* %4, align 1, !dbg !4967
  br label %18, !dbg !4968

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %13, metadata !4957, metadata !DIExpression()), !dbg !4958
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %14, metadata !4957, metadata !DIExpression()), !dbg !4958
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4971
  call void @llvm.dbg.value(metadata i8* %15, metadata !4957, metadata !DIExpression()), !dbg !4958
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4972
  call void @llvm.dbg.value(metadata i8* %16, metadata !4957, metadata !DIExpression()), !dbg !4958
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4973
  call void @llvm.dbg.value(metadata i8* %17, metadata !4957, metadata !DIExpression()), !dbg !4958
  br label %18, !dbg !4974

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4958
  ret i8* %19, !dbg !4975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4976 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4980, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %1, metadata !4981, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %2, metadata !4982, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %3, metadata !4983, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4987
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4988

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4989
  call void @llvm.dbg.value(metadata i32 %9, metadata !4984, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %8, metadata !4982, metadata !DIExpression()), !dbg !4987
  %10 = icmp ult i8* %8, %3, !dbg !4990
  br i1 %10, label %11, label %13, !dbg !4991

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4992
  br label %17, !dbg !4991

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4993

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4994
  %16 = icmp eq i8 %15, 0, !dbg !4993
  br i1 %16, label %24, label %17, !dbg !4988

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4992
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4995
  call void @llvm.dbg.value(metadata i8* %19, metadata !4982, metadata !DIExpression()), !dbg !4987
  %20 = zext i8 %18 to i32, !dbg !4996
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4997
  call void @llvm.dbg.value(metadata i32 %21, metadata !4985, metadata !DIExpression()), !dbg !4998
  %22 = icmp slt i32 %21, 0, !dbg !4999
  %23 = add i32 %9, 1, !dbg !5001
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression()), !dbg !4987
  br i1 %22, label %24, label %7, !llvm.loop !5002

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4987
  ret i32 %25, !dbg !5004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5005 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5009, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5010, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %2, metadata !5011, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %3, metadata !5012, metadata !DIExpression()), !dbg !5019
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5020
  %6 = load i8, i8* %5, align 1, !dbg !5020
  %7 = zext i8 %6 to i32, !dbg !5021
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !5022
  %9 = icmp eq i32 %8, 0, !dbg !5022
  call void @llvm.dbg.value(metadata i1 %9, metadata !5013, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5019
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %10, metadata !5014, metadata !DIExpression()), !dbg !5019
  %11 = ptrtoint i8* %3 to i32, !dbg !5024
  %12 = ptrtoint i8* %2 to i32, !dbg !5024
  %13 = sub i32 %11, %12, !dbg !5024
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %14, metadata !5016, metadata !DIExpression()), !dbg !5019
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5026

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5019
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5009, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %18, metadata !5016, metadata !DIExpression()), !dbg !5019
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5027
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %25, metadata !5017, metadata !DIExpression()), !dbg !5029
  %26 = icmp ult i32 %25, 10, !dbg !5030
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5031
  %28 = add i32 %27, %25, !dbg !5029
  %29 = trunc i32 %28 to i8, !dbg !5031
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5032
  call void @llvm.dbg.value(metadata i8* %30, metadata !5016, metadata !DIExpression()), !dbg !5019
  store i8 %29, i8* %30, align 1, !dbg !5033
  call void @llvm.dbg.value(metadata i64 %22, metadata !5009, metadata !DIExpression()), !dbg !5019
  %31 = icmp uge i64 %19, %15, !dbg !5034
  %32 = icmp ugt i8* %30, %2, !dbg !5035
  %33 = and i1 %31, %32, !dbg !5035
  br i1 %33, label %17, label %34, !dbg !5036, !llvm.loop !5037

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5039
  %36 = load i24, i24* %35, align 4, !dbg !5039
  %37 = and i24 %36, 32, !dbg !5039
  %38 = icmp eq i24 %37, 0, !dbg !5039
  br i1 %38, label %44, label %39, !dbg !5041

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5042

40:                                               ; preds = %39
  br label %41, !dbg !5044

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5048
  store i24 %43, i24* %35, align 4, !dbg !5048
  br label %44, !dbg !5049

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5049
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !5050 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5056, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i8* %1, metadata !5057, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 %2, metadata !5058, metadata !DIExpression()), !dbg !5059
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5060
  %5 = load i24, i24* %4, align 4, !dbg !5060
  %6 = lshr i24 %5, 11, !dbg !5060
  %7 = and i24 %6, 15, !dbg !5060
  %8 = zext i24 %7 to i32, !dbg !5060
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5061

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5062
  store i32 %2, i32* %10, align 4, !dbg !5064
  br label %28, !dbg !5065

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5066
  store i8 %12, i8* %1, align 1, !dbg !5067
  br label %28, !dbg !5068

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5069
  %15 = bitcast i8* %1 to i16*, !dbg !5070
  store i16 %14, i16* %15, align 2, !dbg !5071
  br label %28, !dbg !5072

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5073
  store i32 %2, i32* %17, align 4, !dbg !5074
  br label %28, !dbg !5075

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5076
  %20 = bitcast i8* %1 to i64*, !dbg !5077
  store i64 %19, i64* %20, align 8, !dbg !5078
  br label %28, !dbg !5079

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5080
  %23 = bitcast i8* %1 to i64*, !dbg !5081
  store i64 %22, i64* %23, align 8, !dbg !5082
  br label %28, !dbg !5083

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5084
  store i32 %2, i32* %25, align 4, !dbg !5085
  br label %28, !dbg !5086

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5087
  store i32 %2, i32* %27, align 4, !dbg !5088
  br label %28, !dbg !5089

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5090
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5094, metadata !DIExpression()), !dbg !5095
  %2 = add i32 %0, -65, !dbg !5096
  %3 = icmp ult i32 %2, 26, !dbg !5097
  %4 = zext i1 %3 to i32, !dbg !5097
  ret i32 %4, !dbg !5098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5099 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5103, metadata !DIExpression()), !dbg !5104
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5105

2:                                                ; preds = %1
  br label %4, !dbg !5106

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5108

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5109
  ret i32 %5, !dbg !5110
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5113, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8 1, metadata !5115, metadata !DIExpression()), !dbg !5116
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5117

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %5, metadata !5114, metadata !DIExpression()), !dbg !5116
  %6 = load i8, i8* %5, align 1, !dbg !5118
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5120

7:                                                ; preds = %4
  br label %11, !dbg !5121

8:                                                ; preds = %4
  br label %11, !dbg !5123

9:                                                ; preds = %4
  br label %11, !dbg !5124

10:                                               ; preds = %4
  br label %11, !dbg !5125

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5126
  %14 = or i24 %13, %12, !dbg !5126
  store i24 %14, i24* %3, align 4, !dbg !5126
  call void @llvm.dbg.value(metadata i8 poison, metadata !5115, metadata !DIExpression()), !dbg !5116
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5114, metadata !DIExpression()), !dbg !5116
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %15, metadata !5114, metadata !DIExpression()), !dbg !5116
  %17 = load i24, i24* %3, align 4, !dbg !5127
  %18 = and i24 %17, 68, !dbg !5129
  %19 = icmp eq i24 %18, 68, !dbg !5129
  br i1 %19, label %20, label %22, !dbg !5129

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5130
  store i24 %21, i24* %3, align 4, !dbg !5130
  br label %22, !dbg !5132

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5134 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5136, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8* %1, metadata !5137, metadata !DIExpression()), !dbg !5140
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5141
  %5 = load i24, i24* %4, align 4, !dbg !5142
  %6 = or i24 %5, 128, !dbg !5142
  store i24 %6, i24* %4, align 4, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %1, metadata !5137, metadata !DIExpression()), !dbg !5140
  %7 = load i8, i8* %1, align 1, !dbg !5143
  %8 = icmp eq i8 %7, 42, !dbg !5145
  br i1 %8, label %9, label %12, !dbg !5146

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5147
  store i24 %10, i24* %4, align 4, !dbg !5147
  call void @llvm.dbg.value(metadata i8* %1, metadata !5137, metadata !DIExpression()), !dbg !5140
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %11, metadata !5137, metadata !DIExpression()), !dbg !5140
  store i8* %11, i8** %3, align 4, !dbg !5149
  br label %29, !dbg !5150

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8** %3, metadata !5137, metadata !DIExpression(DW_OP_deref)), !dbg !5140
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %13, metadata !5139, metadata !DIExpression()), !dbg !5140
  %14 = load i8*, i8** %3, align 4, !dbg !5152
  call void @llvm.dbg.value(metadata i8* %14, metadata !5137, metadata !DIExpression()), !dbg !5140
  %15 = icmp eq i8* %14, %1, !dbg !5154
  br i1 %15, label %29, label %16, !dbg !5155

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5156
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5158
  store i32 %13, i32* %18, align 4, !dbg !5159
  %19 = lshr i32 %13, 31, !dbg !5160
  %20 = lshr i24 %17, 1, !dbg !5161
  %21 = and i24 %20, 1, !dbg !5161
  %22 = zext i24 %21 to i32, !dbg !5161
  %23 = or i32 %19, %22, !dbg !5161
  %24 = trunc i32 %23 to i24, !dbg !5161
  %25 = shl nuw nsw i24 %24, 1, !dbg !5161
  %26 = and i24 %17, -131, !dbg !5161
  %27 = or i24 %26, 128, !dbg !5161
  %28 = or i24 %25, %27, !dbg !5161
  store i24 %28, i24* %4, align 4, !dbg !5161
  br label %29, !dbg !5162

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5140
  ret i8* %30, !dbg !5163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5164 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5166, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression()), !dbg !5169
  %4 = load i8, i8* %1, align 1, !dbg !5170
  %5 = icmp eq i8 %4, 46, !dbg !5171
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5172
  %7 = load i24, i24* %6, align 4, !dbg !5173
  %8 = select i1 %5, i24 512, i24 0, !dbg !5173
  %9 = and i24 %7, -513, !dbg !5173
  %10 = or i24 %9, %8, !dbg !5173
  store i24 %10, i24* %6, align 4, !dbg !5173
  br i1 %5, label %11, label %32, !dbg !5174

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression()), !dbg !5169
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %12, metadata !5167, metadata !DIExpression()), !dbg !5169
  store i8* %12, i8** %3, align 4, !dbg !5175
  %13 = load i8, i8* %12, align 1, !dbg !5176
  %14 = icmp eq i8 %13, 42, !dbg !5178
  br i1 %14, label %15, label %18, !dbg !5179

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5180
  store i24 %16, i24* %6, align 4, !dbg !5180
  call void @llvm.dbg.value(metadata i8* %12, metadata !5167, metadata !DIExpression()), !dbg !5169
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %17, metadata !5167, metadata !DIExpression()), !dbg !5169
  store i8* %17, i8** %3, align 4, !dbg !5182
  br label %32, !dbg !5183

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5167, metadata !DIExpression(DW_OP_deref)), !dbg !5169
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5184
  call void @llvm.dbg.value(metadata i32 %19, metadata !5168, metadata !DIExpression()), !dbg !5169
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5185
  store i32 %19, i32* %20, align 4, !dbg !5186
  %21 = lshr i32 %19, 31, !dbg !5187
  %22 = load i24, i24* %6, align 4, !dbg !5188
  %23 = lshr i24 %22, 1, !dbg !5188
  %24 = and i24 %23, 1, !dbg !5188
  %25 = zext i24 %24 to i32, !dbg !5188
  %26 = or i32 %21, %25, !dbg !5188
  %27 = trunc i32 %26 to i24, !dbg !5188
  %28 = shl nuw nsw i24 %27, 1, !dbg !5188
  %29 = and i24 %22, -3, !dbg !5188
  %30 = or i24 %28, %29, !dbg !5188
  store i24 %30, i24* %6, align 4, !dbg !5188
  %31 = load i8*, i8** %3, align 4, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %31, metadata !5167, metadata !DIExpression()), !dbg !5169
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5169
  ret i8* %33, !dbg !5190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5191 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %1, metadata !5194, metadata !DIExpression()), !dbg !5195
  %3 = load i8, i8* %1, align 1, !dbg !5196
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5197

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %5, metadata !5194, metadata !DIExpression()), !dbg !5195
  %6 = load i8, i8* %5, align 1, !dbg !5201
  %7 = icmp eq i8 %6, 104, !dbg !5202
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5203
  %9 = load i24, i24* %8, align 4, !dbg !5203
  %10 = and i24 %9, -30721, !dbg !5203
  br i1 %7, label %11, label %14, !dbg !5204

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5205
  store i24 %12, i24* %8, align 4, !dbg !5205
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5207
  call void @llvm.dbg.value(metadata i8* %13, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %56, !dbg !5208

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5209
  store i24 %15, i24* %8, align 4, !dbg !5209
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %17, metadata !5194, metadata !DIExpression()), !dbg !5195
  %18 = load i8, i8* %17, align 1, !dbg !5213
  %19 = icmp eq i8 %18, 108, !dbg !5214
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5215
  %21 = load i24, i24* %20, align 4, !dbg !5215
  %22 = and i24 %21, -30721, !dbg !5215
  br i1 %19, label %23, label %26, !dbg !5216

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5217
  store i24 %24, i24* %20, align 4, !dbg !5217
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5219
  call void @llvm.dbg.value(metadata i8* %25, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %56, !dbg !5220

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5221
  store i24 %27, i24* %20, align 4, !dbg !5221
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5223
  %30 = load i24, i24* %29, align 4, !dbg !5224
  %31 = and i24 %30, -30721, !dbg !5224
  %32 = or i24 %31, 10240, !dbg !5224
  store i24 %32, i24* %29, align 4, !dbg !5224
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5225
  call void @llvm.dbg.value(metadata i8* %33, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %56, !dbg !5226

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5227
  %36 = load i24, i24* %35, align 4, !dbg !5228
  %37 = and i24 %36, -30721, !dbg !5228
  %38 = or i24 %37, 12288, !dbg !5228
  store i24 %38, i24* %35, align 4, !dbg !5228
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5229
  call void @llvm.dbg.value(metadata i8* %39, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %56, !dbg !5230

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5231
  %42 = load i24, i24* %41, align 4, !dbg !5232
  %43 = and i24 %42, -30721, !dbg !5232
  %44 = or i24 %43, 14336, !dbg !5232
  store i24 %44, i24* %41, align 4, !dbg !5232
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %45, metadata !5194, metadata !DIExpression()), !dbg !5195
  br label %56, !dbg !5234

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5235
  %48 = load i24, i24* %47, align 4, !dbg !5236
  %49 = and i24 %48, -30723, !dbg !5236
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %50, metadata !5194, metadata !DIExpression()), !dbg !5195
  %51 = or i24 %49, 16386, !dbg !5238
  store i24 %51, i24* %47, align 4, !dbg !5238
  br label %56, !dbg !5239

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5240
  %54 = load i24, i24* %53, align 4, !dbg !5241
  %55 = and i24 %54, -30721, !dbg !5241
  store i24 %55, i24* %53, align 4, !dbg !5241
  br label %56, !dbg !5242

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5194, metadata !DIExpression()), !dbg !5195
  ret i8* %57, !dbg !5243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5244 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5246, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8 0, metadata !5248, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5251
  %3 = load i8, i8* %1, align 1, !dbg !5252
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5253
  store i8 %3, i8* %4, align 1, !dbg !5254
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5255

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5256

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5257
  %9 = load i24, i24* %8, align 4, !dbg !5257
  %10 = and i24 %9, -458753, !dbg !5257
  %11 = or i24 %10, %7, !dbg !5257
  call void @llvm.dbg.label(metadata !5249), !dbg !5258
  %12 = and i24 %9, 30720, !dbg !5259
  %13 = icmp eq i24 %12, 16384, !dbg !5259
  %14 = zext i1 %13 to i24, !dbg !5261
  %15 = or i24 %11, %14, !dbg !5261
  %16 = icmp eq i8 %3, 99, !dbg !5262
  br i1 %16, label %17, label %43, !dbg !5264

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5265
  %19 = icmp ne i24 %18, 0, !dbg !5265
  call void @llvm.dbg.value(metadata i1 %19, metadata !5248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5251
  br label %43, !dbg !5267

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5268
  %22 = load i24, i24* %21, align 4, !dbg !5269
  %23 = and i24 %22, -458753, !dbg !5269
  %24 = or i24 %23, 262144, !dbg !5269
  call void @llvm.dbg.value(metadata i8 1, metadata !5248, metadata !DIExpression()), !dbg !5251
  br label %43, !dbg !5270

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5273
  %27 = load i24, i24* %26, align 4, !dbg !5274
  %28 = and i24 %27, -458753, !dbg !5274
  %29 = or i24 %28, 196608, !dbg !5274
  %30 = and i24 %27, 30720, !dbg !5275
  %31 = icmp eq i24 %30, 16384, !dbg !5275
  br label %43, !dbg !5277

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5278
  %34 = load i24, i24* %33, align 4, !dbg !5279
  %35 = and i24 %34, -458753, !dbg !5279
  %36 = or i24 %35, 196608, !dbg !5279
  %37 = and i24 %34, 30720, !dbg !5280
  %38 = icmp ne i24 %37, 0, !dbg !5280
  br label %43, !dbg !5282

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5283
  %41 = load i24, i24* %40, align 4, !dbg !5284
  %42 = or i24 %41, 1, !dbg !5284
  br label %43, !dbg !5285

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5286
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5287
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5288
  call void @llvm.dbg.value(metadata i8* %48, metadata !5247, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8 poison, metadata !5248, metadata !DIExpression()), !dbg !5251
  %49 = lshr i24 %44, 1, !dbg !5286
  %50 = and i24 %49, 1, !dbg !5286
  %51 = zext i24 %50 to i32, !dbg !5286
  %52 = or i32 %51, %47, !dbg !5286
  %53 = trunc i32 %52 to i24, !dbg !5286
  %54 = shl nuw nsw i24 %53, 1, !dbg !5286
  %55 = and i24 %44, -3, !dbg !5286
  %56 = or i24 %54, %55, !dbg !5286
  store i24 %56, i24* %46, align 4, !dbg !5286
  ret i8* %48, !dbg !5289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5290 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5295, metadata !DIExpression()), !dbg !5298
  %2 = load i8*, i8** %0, align 4, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %2, metadata !5296, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i32 0, metadata !5297, metadata !DIExpression()), !dbg !5298
  %3 = load i8, i8* %2, align 1, !dbg !5300
  %4 = zext i8 %3 to i32, !dbg !5301
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5302
  %6 = icmp eq i32 %5, 0, !dbg !5303
  br i1 %6, label %19, label %7, !dbg !5303

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i8* %10, metadata !5296, metadata !DIExpression()), !dbg !5298
  %11 = mul i32 %9, 10, !dbg !5304
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5306
  call void @llvm.dbg.value(metadata i8* %12, metadata !5296, metadata !DIExpression()), !dbg !5298
  %13 = add i32 %11, -48, !dbg !5307
  %14 = add i32 %13, %8, !dbg !5308
  call void @llvm.dbg.value(metadata i32 %14, metadata !5297, metadata !DIExpression()), !dbg !5298
  %15 = load i8, i8* %12, align 1, !dbg !5300
  %16 = zext i8 %15 to i32, !dbg !5301
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5302
  %18 = icmp eq i32 %17, 0, !dbg !5303
  br i1 %18, label %19, label %7, !dbg !5303, !llvm.loop !5309

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5298
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5298
  store i8* %20, i8** %0, align 4, !dbg !5311
  ret i32 %21, !dbg !5312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5315, metadata !DIExpression()), !dbg !5316
  %2 = add i32 %0, -48, !dbg !5317
  %3 = icmp ult i32 %2, 10, !dbg !5318
  %4 = zext i1 %3 to i32, !dbg !5318
  ret i32 %4, !dbg !5319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5320 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5884, !srcloc !5885
  ret void, !dbg !5886
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5889, metadata !DIExpression()), !dbg !5891
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5892
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5893
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5894, !srcloc !5903
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5894
  call void @llvm.dbg.value(metadata i32 %3, metadata !5900, metadata !DIExpression()) #25, !dbg !5904
  call void @llvm.dbg.value(metadata i32 undef, metadata !5901, metadata !DIExpression()) #25, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %3, metadata !5890, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 %3, metadata !5905, metadata !DIExpression()) #25, !dbg !5910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5912, !srcloc !5913
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5914
  ret i32 0, !dbg !5915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5916 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5918
  %2 = or i32 %1, 512, !dbg !5918
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5918
  ret void, !dbg !5919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5920 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5921
  %2 = or i32 %1, 1024, !dbg !5921
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5921
  ret void, !dbg !5922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5925, metadata !DIExpression()), !dbg !5926
  ret i32 0, !dbg !5927
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5928
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5930
  br i1 %2, label %5, label %3, !dbg !5931

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5932
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5932
  br label %5, !dbg !5935

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5936
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5937
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5938
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5939
  ret i8* %7, !dbg !5940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5941 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5950, metadata !DIExpression()), !dbg !5952
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5953, !srcloc !5955
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5956
  ret i8* %1, !dbg !5957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5958 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5960, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.value(metadata i32 0, metadata !5960, metadata !DIExpression()), !dbg !5961
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5962
  call void @llvm.dbg.value(metadata i32 0, metadata !5960, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5961
  call void @llvm.dbg.value(metadata i32 0, metadata !5960, metadata !DIExpression()), !dbg !5961
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5962
  call void @llvm.dbg.value(metadata i32 0, metadata !5960, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5961
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5967
  ret void, !dbg !5968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6018, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6019, metadata !DIExpression()), !dbg !6020
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !6021
  ret void, !dbg !6022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6023 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6040, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6041, metadata !DIExpression()), !dbg !6043
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6044
  %4 = load i32, i32* %3, align 4, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %4, metadata !6042, metadata !DIExpression()), !dbg !6043
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !6045
  ret void, !dbg !6046
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6047 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %0, metadata !6052, metadata !DIExpression()), !dbg !6054
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6055
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6055
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6053, metadata !DIExpression()), !dbg !6056
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6056
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6057
  %5 = bitcast i8* %4 to i32*, !dbg !6057
  %6 = load i32, i32* %5, align 4, !dbg !6057
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6058
  store i32 %6, i32* %7, align 4, !dbg !6059
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !6060
  unreachable, !dbg !6061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6065, metadata !DIExpression()), !dbg !6066
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !6067
  ret void, !dbg !6068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6073, metadata !DIExpression()), !dbg !6074
  %2 = icmp sgt i32 %0, -1, !dbg !6075
  br i1 %2, label %3, label %8, !dbg !6077

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6078, !srcloc !6080
  %4 = and i32 %0, 31, !dbg !6081
  %5 = shl nuw i32 1, %4, !dbg !6082
  %6 = lshr i32 %0, 5, !dbg !6083
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6084
  store volatile i32 %5, i32* %7, align 4, !dbg !6085
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6086, !srcloc !6087
  br label %8, !dbg !6088

8:                                                ; preds = %3, %1
  ret void, !dbg !6089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6092, metadata !DIExpression()), !dbg !6093
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !6094
  ret void, !dbg !6095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  %2 = icmp sgt i32 %0, -1, !dbg !6100
  br i1 %2, label %3, label %8, !dbg !6102

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6103
  %5 = shl nuw i32 1, %4, !dbg !6105
  %6 = lshr i32 %0, 5, !dbg !6106
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6107
  store volatile i32 %5, i32* %7, align 4, !dbg !6108
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6109, !srcloc !6113
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6114, !srcloc !6117
  br label %8, !dbg !6118

8:                                                ; preds = %3, %1
  ret void, !dbg !6119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6124, metadata !DIExpression()), !dbg !6125
  %2 = lshr i32 %0, 5, !dbg !6126
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6127
  %4 = load volatile i32, i32* %3, align 4, !dbg !6127
  %5 = and i32 %0, 31, !dbg !6128
  %6 = shl nuw i32 1, %5, !dbg !6128
  %7 = and i32 %4, %6, !dbg !6129
  ret i32 %7, !dbg !6130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %1, metadata !6136, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %2, metadata !6137, metadata !DIExpression()), !dbg !6138
  %4 = add i32 %1, 1, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %4, metadata !6136, metadata !DIExpression()), !dbg !6138
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !6142
  ret void, !dbg !6143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6148, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %1, metadata !6149, metadata !DIExpression()), !dbg !6150
  %3 = trunc i32 %1 to i8, !dbg !6151
  %4 = shl i8 %3, 4, !dbg !6151
  %5 = and i32 %0, 15, !dbg !6153
  %6 = add nsw i32 %5, -4, !dbg !6153
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6153
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6153
  %9 = icmp slt i32 %0, 0, !dbg !6153
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6153
  store volatile i8 %4, i8* %10, align 1, !dbg !6151
  ret void, !dbg !6154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6157, metadata !DIExpression()), !dbg !6158
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6159
  ret void, !dbg !6160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6161 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6163
  tail call void @z_arm_int_exit() #26, !dbg !6164
  ret void, !dbg !6165
}

; Function Attrs: optsize
declare !dbg !6166 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6167 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6169 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !6171
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !6172
  tail call void @z_bss_zero() #26, !dbg !6173
  tail call void @z_data_copy() #26, !dbg !6174
  tail call void @z_arm_interrupt_init() #26, !dbg !6175
  tail call void @z_cstart() #29, !dbg !6176
  unreachable, !dbg !6176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6177 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6178
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6179, !srcloc !6182
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6183, !srcloc !6186
  ret void, !dbg !6187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6188 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6189
  %2 = and i32 %1, -15728641, !dbg !6189
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6189
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6190, !srcloc !6197
  call void @llvm.dbg.value(metadata i32 %3, metadata !6195, metadata !DIExpression()) #25, !dbg !6198
  %4 = and i32 %3, -5, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %4, metadata !6200, metadata !DIExpression()) #25, !dbg !6205
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6209, !srcloc !6186
  ret void, !dbg !6211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6215, metadata !DIExpression()), !dbg !6216
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6217
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6218
  store i32 %0, i32* %3, align 4, !dbg !6219
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6220
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6221
  store i32 %4, i32* %5, align 4, !dbg !6222
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6223
  %7 = or i32 %6, 268435456, !dbg !6223
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6223
  call void @llvm.dbg.value(metadata i32 0, metadata !6224, metadata !DIExpression()) #25, !dbg !6227
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6229, !srcloc !6230
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6231
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6232
  %10 = load i32, i32* %9, align 4, !dbg !6232
  ret i32 %10, !dbg !6233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6344, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6345, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %2, metadata !6346, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6347, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %4, metadata !6348, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %5, metadata !6349, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %6, metadata !6350, metadata !DIExpression()), !dbg !6352
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6353
  call void @llvm.dbg.value(metadata i8* %8, metadata !6351, metadata !DIExpression()), !dbg !6352
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6354
  %10 = bitcast i8* %9 to i32*, !dbg !6354
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6355
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6356
  %12 = bitcast i8* %8 to i32*, !dbg !6357
  store i32 %11, i32* %12, align 4, !dbg !6358
  %13 = ptrtoint i8* %4 to i32, !dbg !6359
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6360
  %15 = bitcast i8* %14 to i32*, !dbg !6360
  store i32 %13, i32* %15, align 4, !dbg !6361
  %16 = ptrtoint i8* %5 to i32, !dbg !6362
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6363
  %18 = bitcast i8* %17 to i32*, !dbg !6363
  store i32 %16, i32* %18, align 4, !dbg !6364
  %19 = ptrtoint i8* %6 to i32, !dbg !6365
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6366
  %21 = bitcast i8* %20 to i32*, !dbg !6366
  store i32 %19, i32* %21, align 4, !dbg !6367
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6368
  %23 = bitcast i8* %22 to i32*, !dbg !6368
  store i32 16777216, i32* %23, align 4, !dbg !6369
  %24 = ptrtoint i8* %8 to i32, !dbg !6370
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6371
  store i32 %24, i32* %25, align 8, !dbg !6372
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6373
  store i32 0, i32* %26, align 4, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6381, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i32 %1, metadata !6382, metadata !DIExpression()), !dbg !6387
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6388
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6383, metadata !DIExpression()), !dbg !6387
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6389
  br i1 %4, label %19, label %5, !dbg !6391

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6386, metadata !DIExpression()), !dbg !6387
  %6 = icmp eq i32 %0, -22, !dbg !6392
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6392
  %8 = load i32, i32* %7, align 4, !dbg !6392
  br i1 %6, label %16, label %9, !dbg !6394

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6392
  %11 = icmp ule i32 %10, %0, !dbg !6392
  %12 = icmp ugt i32 %8, %0, !dbg !6392
  %13 = and i1 %12, %11, !dbg !6392
  %14 = icmp ugt i32 %8, %1, !dbg !6392
  %15 = and i1 %14, %13, !dbg !6392
  br i1 %15, label %18, label %19, !dbg !6392

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6392
  br i1 %17, label %18, label %19, !dbg !6394

18:                                               ; preds = %9, %16
  br label %19, !dbg !6395

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6387
  ret i32 %20, !dbg !6397
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6402, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata i8* %1, metadata !6403, metadata !DIExpression()), !dbg !6405
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6404, metadata !DIExpression()), !dbg !6405
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6406
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6407
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6408, !srcloc !6409
  unreachable, !dbg !6410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6411 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6429, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 %1, metadata !6430, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 %2, metadata !6431, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6432, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 0, metadata !6433, metadata !DIExpression()), !dbg !6439
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6440
  %9 = and i32 %8, 511, !dbg !6441
  call void @llvm.dbg.value(metadata i32 %9, metadata !6434, metadata !DIExpression()), !dbg !6439
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6442
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6442
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6443
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6443
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6438, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32 0, metadata !6445, metadata !DIExpression()) #25, !dbg !6448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6450, !srcloc !6451
  call void @llvm.dbg.value(metadata i8* %6, metadata !6436, metadata !DIExpression(DW_OP_deref)), !dbg !6439
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6452
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6437, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i8* %5, metadata !6435, metadata !DIExpression(DW_OP_deref)), !dbg !6439
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6453
  call void @llvm.dbg.value(metadata i32 %12, metadata !6433, metadata !DIExpression()), !dbg !6439
  %13 = load i8, i8* %5, align 1, !dbg !6454, !range !6456
  call void @llvm.dbg.value(metadata i8 %13, metadata !6435, metadata !DIExpression()), !dbg !6439
  %14 = icmp eq i8 %13, 0, !dbg !6454
  br i1 %14, label %15, label %32, !dbg !6457

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6458
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6459
  %18 = load i8, i8* %6, align 1, !dbg !6460, !range !6456
  call void @llvm.dbg.value(metadata i8 %18, metadata !6436, metadata !DIExpression()), !dbg !6439
  %19 = icmp eq i8 %18, 0, !dbg !6460
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6462
  %21 = load i32, i32* %20, align 4, !dbg !6462
  br i1 %19, label %27, label %22, !dbg !6463

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6464
  %24 = icmp eq i32 %23, 0, !dbg !6467
  br i1 %24, label %25, label %31, !dbg !6468

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6469
  br label %29, !dbg !6471

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6472
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6462
  br label %31, !dbg !6474

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6474
  br label %32, !dbg !6475

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6475
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6475
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6475
  ret void, !dbg !6475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6481, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %1, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %2, metadata !6483, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %3, metadata !6484, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8 0, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i8 0, i8* %3, align 1, !dbg !6488
  %5 = icmp ult i32 %2, -16777216, !dbg !6489
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6491
  br i1 %8, label %16, label %9, !dbg !6491

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6492
  %11 = icmp eq i32 %10, 0, !dbg !6492
  br i1 %11, label %12, label %13, !dbg !6494

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i8 1, i8* %3, align 1, !dbg !6497
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6487
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6486, metadata !DIExpression()), !dbg !6487
  br label %16, !dbg !6500

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6487
  ret %struct.__esf* %17, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6506, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 %1, metadata !6507, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i8* %2, metadata !6508, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 0, metadata !6509, metadata !DIExpression()), !dbg !6510
  store i8 0, i8* %2, align 1, !dbg !6511
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6512

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6513
  call void @llvm.dbg.value(metadata i32 %5, metadata !6509, metadata !DIExpression()), !dbg !6510
  br label %11, !dbg !6515

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6516
  call void @llvm.dbg.value(metadata i32 %7, metadata !6509, metadata !DIExpression()), !dbg !6510
  br label %11, !dbg !6517

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6518
  call void @llvm.dbg.value(metadata i32 0, metadata !6509, metadata !DIExpression()), !dbg !6510
  br label %11, !dbg !6519

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6520
  call void @llvm.dbg.value(metadata i32 0, metadata !6509, metadata !DIExpression()), !dbg !6510
  br label %11, !dbg !6521

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6522
  br label %11, !dbg !6523

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6525 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6529, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i8* %1, metadata !6530, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 0, metadata !6531, metadata !DIExpression()), !dbg !6532
  store i8 0, i8* %1, align 1, !dbg !6533
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6534
  %4 = and i32 %3, 2, !dbg !6536
  %5 = icmp eq i32 %4, 0, !dbg !6537
  br i1 %5, label %6, label %33, !dbg !6538

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6539
  %8 = icmp sgt i32 %7, -1, !dbg !6541
  br i1 %8, label %9, label %33, !dbg !6542

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6543
  %11 = and i32 %10, 1073741824, !dbg !6545
  %12 = icmp eq i32 %11, 0, !dbg !6546
  br i1 %12, label %33, label %13, !dbg !6547

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6548
  br i1 %14, label %15, label %18, !dbg !6551

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6552
  %17 = load i32, i32* %16, align 4, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %17, metadata !6531, metadata !DIExpression()), !dbg !6532
  br label %33, !dbg !6554

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6555
  %20 = and i32 %19, 255, !dbg !6557
  %21 = icmp eq i32 %20, 0, !dbg !6558
  br i1 %21, label %24, label %22, !dbg !6559

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %23, metadata !6531, metadata !DIExpression()), !dbg !6532
  br label %33, !dbg !6562

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6563
  %26 = and i32 %25, 65280, !dbg !6565
  %27 = icmp eq i32 %26, 0, !dbg !6566
  br i1 %27, label %29, label %28, !dbg !6567

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6568
  call void @llvm.dbg.value(metadata i32 0, metadata !6531, metadata !DIExpression()), !dbg !6532
  br label %33, !dbg !6570

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6571
  %31 = icmp ult i32 %30, 65536, !dbg !6573
  br i1 %31, label %33, label %32, !dbg !6574

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6531, metadata !DIExpression()), !dbg !6532
  br label %33, !dbg !6577

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6532
  call void @llvm.dbg.value(metadata i32 %34, metadata !6531, metadata !DIExpression()), !dbg !6532
  ret i32 %34, !dbg !6578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6579 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6581, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 %1, metadata !6582, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i8* %2, metadata !6583, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 0, metadata !6584, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 -22, metadata !6585, metadata !DIExpression()), !dbg !6594
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6595
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6597
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6599
  %7 = and i32 %6, 2, !dbg !6600
  %8 = icmp eq i32 %7, 0, !dbg !6601
  br i1 %8, label %19, label %9, !dbg !6602

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6603
  call void @llvm.dbg.value(metadata i32 %10, metadata !6586, metadata !DIExpression()), !dbg !6604
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6605
  %12 = and i32 %11, 128, !dbg !6607
  %13 = icmp eq i32 %12, 0, !dbg !6608
  br i1 %13, label %19, label %14, !dbg !6609

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6585, metadata !DIExpression()), !dbg !6594
  %15 = icmp eq i32 %1, 0, !dbg !6610
  br i1 %15, label %19, label %16, !dbg !6613

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6614
  %18 = and i32 %17, -129, !dbg !6614
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6614
  br label %19, !dbg !6616

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6594
  call void @llvm.dbg.value(metadata i32 %20, metadata !6585, metadata !DIExpression()), !dbg !6594
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6617
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6619
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6621
  %24 = and i32 %23, 16, !dbg !6622
  %25 = icmp eq i32 %24, 0, !dbg !6622
  br i1 %25, label %26, label %30, !dbg !6623

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6624
  %28 = and i32 %27, 2, !dbg !6625
  %29 = icmp eq i32 %28, 0, !dbg !6625
  br i1 %29, label %39, label %30, !dbg !6626

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6627
  %32 = and i32 %31, 2048, !dbg !6628
  %33 = icmp eq i32 %32, 0, !dbg !6628
  br i1 %33, label %39, label %34, !dbg !6629

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6630
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6631
  call void @llvm.dbg.value(metadata i32 %36, metadata !6589, metadata !DIExpression()), !dbg !6632
  %37 = icmp eq i32 %36, 0, !dbg !6633
  br i1 %37, label %39, label %38, !dbg !6635

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6636, metadata !DIExpression()) #25, !dbg !6639
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6642, !srcloc !6643
  call void @llvm.dbg.value(metadata i32 2, metadata !6584, metadata !DIExpression()), !dbg !6594
  br label %39, !dbg !6644

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6594
  call void @llvm.dbg.value(metadata i32 %40, metadata !6584, metadata !DIExpression()), !dbg !6594
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6645
  %42 = and i32 %41, 32, !dbg !6647
  %43 = icmp eq i32 %42, 0, !dbg !6648
  br i1 %43, label %47, label %44, !dbg !6649

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6650
  %46 = and i32 %45, -8193, !dbg !6650
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6650
  br label %47, !dbg !6652

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6653
  %49 = or i32 %48, 255, !dbg !6653
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6653
  store i8 0, i8* %2, align 1, !dbg !6654
  ret i32 %40, !dbg !6655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6656 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6660, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 %0, metadata !6661, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %1, metadata !6662, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 0, metadata !6663, metadata !DIExpression()), !dbg !6667
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6668
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6670
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  %6 = and i32 %5, 512, !dbg !6673
  %7 = icmp eq i32 %6, 0, !dbg !6673
  br i1 %7, label %18, label %8, !dbg !6674

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %9, metadata !6664, metadata !DIExpression()), !dbg !6676
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6677
  %11 = and i32 %10, 32768, !dbg !6679
  %12 = icmp ne i32 %11, 0, !dbg !6680
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6681
  br i1 %14, label %15, label %18, !dbg !6681

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6682
  %17 = and i32 %16, -32769, !dbg !6682
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6682
  br label %18, !dbg !6686

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6687
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6689
  %21 = and i32 %20, 256, !dbg !6691
  %22 = icmp eq i32 %21, 0, !dbg !6692
  br i1 %22, label %23, label %25, !dbg !6693

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6694
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  %27 = or i32 %26, 65280, !dbg !6696
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  store i8 0, i8* %1, align 1, !dbg !6697
  ret void, !dbg !6698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6699 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6705, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 0, metadata !6706, metadata !DIExpression()), !dbg !6707
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6708
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6710
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6712
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6714
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6716
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6718
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6720
  %8 = or i32 %7, -65536, !dbg !6720
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6720
  ret void, !dbg !6721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6722 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6726, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.value(metadata i8* %0, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i8 0, i8* %0, align 1, !dbg !6729
  ret void, !dbg !6730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6731 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6735, metadata !DIExpression()), !dbg !6738
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6739
  %3 = load i32, i32* %2, align 4, !dbg !6739
  %4 = inttoptr i32 %3 to i16*, !dbg !6740
  call void @llvm.dbg.value(metadata i16* %4, metadata !6736, metadata !DIExpression()), !dbg !6738
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6741
  %6 = or i32 %5, 256, !dbg !6741
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6741
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6742, !srcloc !6745
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6746, !srcloc !6749
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6750
  %8 = load i16, i16* %7, align 2, !dbg !6751
  call void @llvm.dbg.value(metadata i16 %8, metadata !6737, metadata !DIExpression()), !dbg !6738
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6752
  %10 = and i32 %9, -257, !dbg !6752
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6752
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6753, !srcloc !6745
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6755, !srcloc !6749
  %11 = icmp eq i16 %8, -8446, !dbg !6757
  ret i1 %11, !dbg !6759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6760 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6761
  %2 = or i32 %1, 16, !dbg !6761
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6761
  ret void, !dbg !6762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6763 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6766, metadata !DIExpression()), !dbg !6767
  br label %1, !dbg !6768

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6766, metadata !DIExpression()), !dbg !6767
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6770
  %3 = add nuw nsw i32 %2, 1, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %3, metadata !6766, metadata !DIExpression()), !dbg !6767
  %4 = icmp eq i32 %3, 91, !dbg !6774
  br i1 %4, label %5, label %1, !dbg !6768, !llvm.loop !6775

5:                                                ; preds = %1
  ret void, !dbg !6777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6780, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.value(metadata i32 1, metadata !6781, metadata !DIExpression()), !dbg !6782
  %2 = and i32 %0, 15, !dbg !6783
  %3 = add nsw i32 %2, -4, !dbg !6783
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6783
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6783
  %6 = icmp slt i32 %0, 0, !dbg !6783
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6783
  store volatile i8 16, i8* %7, align 1, !dbg !6784
  ret void, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6893, metadata !DIExpression()), !dbg !6894
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6895
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6897
  br i1 %3, label %4, label %12, !dbg !6898

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6899, !srcloc !6911
  call void @llvm.dbg.value(metadata i32 %5, metadata !6902, metadata !DIExpression()) #25, !dbg !6912
  %6 = icmp eq i32 %5, 0, !dbg !6913
  br i1 %6, label %12, label %7, !dbg !6914

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6915
  %9 = or i32 %8, 268435456, !dbg !6915
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6915
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6917
  %11 = and i32 %10, -32769, !dbg !6917
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6917
  br label %12, !dbg !6918

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6919
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6921 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6922
  ret void, !dbg !6923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6924
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6925
  %3 = load i32, i32* %2, align 4, !dbg !6925
  %4 = add i32 %3, -64, !dbg !6927
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6924
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6928
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6929
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6930
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6924
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6931
  ret void, !dbg !6932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6933 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6934
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6935, !srcloc !6938
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6939, !srcloc !6942
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6944 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6945, !srcloc !6948
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6949
  ret void, !dbg !6950
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6951 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6966, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i8 %1, metadata !6967, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 %2, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 %3, metadata !6969, metadata !DIExpression()), !dbg !6970
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6971
  ret void, !dbg !6973
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6974 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6979, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8 %1, metadata !6980, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 undef, metadata !6981, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 undef, metadata !6982, metadata !DIExpression()), !dbg !6984
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6985
  call void @llvm.dbg.value(metadata i8 %3, metadata !6983, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6984
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6986
  call void @llvm.dbg.value(metadata i32 %4, metadata !6983, metadata !DIExpression()), !dbg !6984
  %5 = trunc i32 %4 to i8, !dbg !6987
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6988
  ret void, !dbg !6989
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6990 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6994, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8 %1, metadata !6995, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8 %2, metadata !6996, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i1 %3, metadata !6997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7000
  %5 = zext i8 %2 to i32, !dbg !7001
  call void @llvm.dbg.value(metadata i32 %5, metadata !6999, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7000
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6999, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7000
  %7 = icmp eq i8 %1, 0, !dbg !7002
  br i1 %7, label %29, label %8, !dbg !7005

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6999, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 %10, metadata !6998, metadata !DIExpression()), !dbg !7000
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7006
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7009
  %13 = load i32, i32* %12, align 4, !dbg !7009
  %14 = icmp eq i32 %13, 0, !dbg !7010
  br i1 %14, label %25, label %15, !dbg !7011

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7012

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !7014
  %18 = icmp eq i32 %17, 0, !dbg !7014
  br i1 %18, label %29, label %19, !dbg !7015

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7016
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !7017
  call void @llvm.dbg.value(metadata i32 %21, metadata !6999, metadata !DIExpression()), !dbg !7000
  %22 = icmp eq i32 %21, -22, !dbg !7018
  br i1 %22, label %29, label %23, !dbg !7020

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7021
  call void @llvm.dbg.value(metadata i32 %24, metadata !6999, metadata !DIExpression()), !dbg !7000
  br label %25, !dbg !7022

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7000
  call void @llvm.dbg.value(metadata i32 %26, metadata !6999, metadata !DIExpression()), !dbg !7000
  %27 = add nuw nsw i32 %10, 1, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %27, metadata !6998, metadata !DIExpression()), !dbg !7000
  %28 = icmp eq i32 %27, %6, !dbg !7002
  br i1 %28, label %29, label %8, !dbg !7005, !llvm.loop !7024

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7000
  ret i32 %30, !dbg !7026
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7027 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7031, metadata !DIExpression()), !dbg !7033
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7034
  %3 = load i32, i32* %2, align 4, !dbg !7034
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7035, !range !3971
  %5 = icmp ult i32 %4, 2, !dbg !7035
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7036
  br i1 %7, label %8, label %15, !dbg !7036

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7037
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7038
  %11 = load i32, i32* %10, align 4, !dbg !7038
  %12 = and i32 %11, %9, !dbg !7039
  %13 = icmp eq i32 %12, 0, !dbg !7040
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7032, metadata !DIExpression()), !dbg !7033
  ret i32 %16, !dbg !7041
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7042 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7046, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7047, metadata !DIExpression()), !dbg !7049
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7050
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7050
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7048, metadata !DIExpression()), !dbg !7051
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7052
  %6 = load i32, i32* %5, align 4, !dbg !7052
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7053
  store i32 %6, i32* %7, align 4, !dbg !7054
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7055
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7056
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7057
  %11 = load i32, i32* %10, align 4, !dbg !7057
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !7058
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !7059
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7060
  ret i32 %12, !dbg !7061
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7062 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7069, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7070, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i32 undef, metadata !7071, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i32 %2, metadata !7072, metadata !DIExpression()), !dbg !7073
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7074
  %5 = load i32, i32* %4, align 4, !dbg !7074
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !7075
  %7 = or i32 %6, %5, !dbg !7076
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7077
  store i32 %7, i32* %8, align 4, !dbg !7078
  ret void, !dbg !7079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7080 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7085, metadata !DIExpression()), !dbg !7086
  %3 = zext i8 %0 to i32, !dbg !7087
  %4 = icmp ugt i8 %0, 7, !dbg !7089
  br i1 %4, label %6, label %5, !dbg !7090

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !7091
  br label %6, !dbg !7092

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7086
  ret i32 %7, !dbg !7093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7099, metadata !DIExpression()), !dbg !7100
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !7101
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7102
  %4 = load i32, i32* %3, align 4, !dbg !7102
  %5 = and i32 %4, -32, !dbg !7103
  %6 = or i32 %5, %0, !dbg !7104
  %7 = or i32 %6, 16, !dbg !7104
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7105
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7106
  %9 = load i32, i32* %8, align 4, !dbg !7106
  %10 = or i32 %9, 1, !dbg !7107
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7108
  ret void, !dbg !7109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7113, metadata !DIExpression()), !dbg !7114
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7115
  ret void, !dbg !7116
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7121, metadata !DIExpression()), !dbg !7122
  %2 = icmp ult i32 %0, 33, !dbg !7123
  br i1 %2, label %11, label %3, !dbg !7125

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7126
  br i1 %4, label %11, label %5, !dbg !7128

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7129
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7130, !range !3971
  %8 = mul nsw i32 %7, -2, !dbg !7131
  %9 = add nsw i32 %8, 62, !dbg !7131
  %10 = and i32 %9, 62, !dbg !7132
  br label %11, !dbg !7133

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7122
  ret i32 %12, !dbg !7134
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7135 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7139, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8 %1, metadata !7140, metadata !DIExpression()), !dbg !7141
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !7142
  ret void, !dbg !7144
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7145 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7149, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata i8 %1, metadata !7150, metadata !DIExpression()), !dbg !7156
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7157
  call void @llvm.dbg.value(metadata i8 %3, metadata !7151, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7156
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !7158
  call void @llvm.dbg.value(metadata i32 %4, metadata !7151, metadata !DIExpression()), !dbg !7156
  %5 = icmp ne i32 %4, -22, !dbg !7159
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7160
  call void @llvm.dbg.value(metadata i32 %4, metadata !7152, metadata !DIExpression()), !dbg !7161
  br i1 %7, label %8, label %12, !dbg !7160

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7152, metadata !DIExpression()), !dbg !7161
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !7162
  %10 = add i32 %9, 1, !dbg !7165
  call void @llvm.dbg.value(metadata i32 %10, metadata !7152, metadata !DIExpression()), !dbg !7161
  %11 = icmp eq i32 %10, 8, !dbg !7166
  br i1 %11, label %12, label %8, !dbg !7167, !llvm.loop !7168

12:                                               ; preds = %8, %2
  ret void, !dbg !7170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7174, metadata !DIExpression()), !dbg !7175
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7176
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7177
  ret void, !dbg !7178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7179 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7184
  %2 = icmp ugt i32 %1, 8, !dbg !7186
  br i1 %2, label %14, label %3, !dbg !7187

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !7188
  call void @llvm.dbg.value(metadata i32 0, metadata !7183, metadata !DIExpression()), !dbg !7189
  %4 = icmp eq i32 %1, 0, !dbg !7190
  br i1 %4, label %12, label %5, !dbg !7193

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7193

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7183, metadata !DIExpression()), !dbg !7189
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7194
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7196
  %10 = add nuw i32 %8, 1, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %10, metadata !7183, metadata !DIExpression()), !dbg !7189
  %11 = icmp eq i32 %10, %1, !dbg !7190
  br i1 %11, label %12, label %7, !dbg !7193, !llvm.loop !7198

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7200
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7201
  tail call void @arm_core_mpu_enable() #27, !dbg !7202
  br label %14, !dbg !7203

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7189
  ret i32 %15, !dbg !7204
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7205 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7212, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8* %1, metadata !7213, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8* %0, metadata !7214, metadata !DIExpression()), !dbg !7215
  %3 = load i8, i8* %1, align 1, !dbg !7216
  %4 = icmp eq i8 %3, 0, !dbg !7217
  br i1 %4, label %13, label %5, !dbg !7218

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7212, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8* %8, metadata !7213, metadata !DIExpression()), !dbg !7215
  store i8 %6, i8* %7, align 1, !dbg !7219
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7221
  call void @llvm.dbg.value(metadata i8* %9, metadata !7212, metadata !DIExpression()), !dbg !7215
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7222
  call void @llvm.dbg.value(metadata i8* %10, metadata !7213, metadata !DIExpression()), !dbg !7215
  %11 = load i8, i8* %10, align 1, !dbg !7216
  %12 = icmp eq i8 %11, 0, !dbg !7217
  br i1 %12, label %13, label %5, !dbg !7218, !llvm.loop !7223

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7225
  ret i8* %0, !dbg !7226
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7231, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i8* %1, metadata !7232, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i32 %2, metadata !7233, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i8* %0, metadata !7234, metadata !DIExpression()), !dbg !7235
  %4 = icmp eq i32 %2, 0, !dbg !7236
  br i1 %4, label %22, label %5, !dbg !7237

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7231, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i32 %7, metadata !7233, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i8* %8, metadata !7232, metadata !DIExpression()), !dbg !7235
  %9 = load i8, i8* %8, align 1, !dbg !7238
  %10 = icmp eq i8 %9, 0, !dbg !7239
  br i1 %10, label %16, label %11, !dbg !7240

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7241
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7243
  call void @llvm.dbg.value(metadata i8* %12, metadata !7232, metadata !DIExpression()), !dbg !7235
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7244
  call void @llvm.dbg.value(metadata i8* %13, metadata !7231, metadata !DIExpression()), !dbg !7235
  %14 = add i32 %7, -1, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %14, metadata !7233, metadata !DIExpression()), !dbg !7235
  %15 = icmp eq i32 %14, 0, !dbg !7236
  br i1 %15, label %22, label %5, !dbg !7237, !llvm.loop !7246

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7231, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i32 %18, metadata !7233, metadata !DIExpression()), !dbg !7235
  store i8 0, i8* %17, align 1, !dbg !7248
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7250
  call void @llvm.dbg.value(metadata i8* %19, metadata !7231, metadata !DIExpression()), !dbg !7235
  %20 = add i32 %18, -1, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %20, metadata !7233, metadata !DIExpression()), !dbg !7235
  %21 = icmp eq i32 %20, 0, !dbg !7252
  br i1 %21, label %22, label %16, !dbg !7253, !llvm.loop !7254

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7261, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 %1, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 %1, metadata !7263, metadata !DIExpression()), !dbg !7264
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7265

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7261, metadata !DIExpression()), !dbg !7264
  %6 = load i8, i8* %5, align 1, !dbg !7266
  %7 = icmp eq i8 %6, %3, !dbg !7267
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7268
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %10, metadata !7261, metadata !DIExpression()), !dbg !7264
  br i1 %9, label %11, label %4, !dbg !7268, !llvm.loop !7271

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7273
  ret i8* %12, !dbg !7274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7277, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 %1, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i8* null, metadata !7279, metadata !DIExpression()), !dbg !7280
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7281

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7280
  call void @llvm.dbg.value(metadata i8* %6, metadata !7279, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i8* %5, metadata !7277, metadata !DIExpression()), !dbg !7280
  %7 = load i8, i8* %5, align 1, !dbg !7282
  %8 = icmp eq i8 %7, %3, !dbg !7285
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7286
  call void @llvm.dbg.value(metadata i8* %9, metadata !7279, metadata !DIExpression()), !dbg !7280
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7287
  call void @llvm.dbg.value(metadata i8* %10, metadata !7277, metadata !DIExpression()), !dbg !7280
  %11 = icmp eq i8 %7, 0, !dbg !7288
  br i1 %11, label %12, label %4, !dbg !7288, !llvm.loop !7289

12:                                               ; preds = %4
  ret i8* %9, !dbg !7291
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7292 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7296, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7298
  %2 = load i8, i8* %0, align 1, !dbg !7299
  %3 = icmp eq i8 %2, 0, !dbg !7300
  br i1 %3, label %11, label %4, !dbg !7301

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7297, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i8* %6, metadata !7296, metadata !DIExpression()), !dbg !7298
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7302
  call void @llvm.dbg.value(metadata i8* %7, metadata !7296, metadata !DIExpression()), !dbg !7298
  %8 = add i32 %5, 1, !dbg !7304
  call void @llvm.dbg.value(metadata i32 %8, metadata !7297, metadata !DIExpression()), !dbg !7298
  %9 = load i8, i8* %7, align 1, !dbg !7299
  %10 = icmp eq i8 %9, 0, !dbg !7300
  br i1 %10, label %11, label %4, !dbg !7301, !llvm.loop !7305

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7298
  ret i32 %12, !dbg !7307
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7308 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7312, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata i32 %1, metadata !7313, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata i32 0, metadata !7314, metadata !DIExpression()), !dbg !7315
  %3 = load i8, i8* %0, align 1, !dbg !7316
  %4 = icmp ne i8 %3, 0, !dbg !7317
  %5 = icmp ne i32 %1, 0, !dbg !7318
  %6 = and i1 %4, %5, !dbg !7318
  br i1 %6, label %7, label %16, !dbg !7319

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata i8* %9, metadata !7312, metadata !DIExpression()), !dbg !7315
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7320
  call void @llvm.dbg.value(metadata i8* %10, metadata !7312, metadata !DIExpression()), !dbg !7315
  %11 = add nuw i32 %8, 1, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %11, metadata !7314, metadata !DIExpression()), !dbg !7315
  %12 = load i8, i8* %10, align 1, !dbg !7316
  %13 = icmp ne i8 %12, 0, !dbg !7317
  %14 = icmp ult i32 %11, %1, !dbg !7318
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7318
  br i1 %15, label %7, label %16, !dbg !7319, !llvm.loop !7323

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7315
  ret i32 %17, !dbg !7325
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7330, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %1, metadata !7331, metadata !DIExpression()), !dbg !7332
  %3 = load i8, i8* %0, align 1, !dbg !7333
  %4 = load i8, i8* %1, align 1, !dbg !7334
  %5 = icmp ne i8 %3, %4, !dbg !7335
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7336
  br i1 %7, label %18, label %8, !dbg !7336

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %10, metadata !7330, metadata !DIExpression()), !dbg !7332
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7337
  call void @llvm.dbg.value(metadata i8* %11, metadata !7330, metadata !DIExpression()), !dbg !7332
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7339
  call void @llvm.dbg.value(metadata i8* %12, metadata !7331, metadata !DIExpression()), !dbg !7332
  %13 = load i8, i8* %11, align 1, !dbg !7333
  %14 = load i8, i8* %12, align 1, !dbg !7334
  %15 = icmp ne i8 %13, %14, !dbg !7335
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7336
  br i1 %17, label %18, label %8, !dbg !7336, !llvm.loop !7340

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7333
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7334
  %21 = zext i8 %19 to i32, !dbg !7343
  %22 = zext i8 %20 to i32, !dbg !7344
  %23 = sub nsw i32 %21, %22, !dbg !7345
  ret i32 %23, !dbg !7346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7351, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i8* %1, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 %2, metadata !7353, metadata !DIExpression()), !dbg !7354
  %4 = icmp eq i32 %2, 0, !dbg !7355
  br i1 %4, label %23, label %5, !dbg !7355

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7353, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i8* %7, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i8* %8, metadata !7351, metadata !DIExpression()), !dbg !7354
  %9 = load i8, i8* %8, align 1, !dbg !7356
  %10 = load i8, i8* %7, align 1, !dbg !7357
  %11 = icmp ne i8 %9, %10, !dbg !7358
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7359
  br i1 %13, label %19, label %14, !dbg !7359

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7360
  call void @llvm.dbg.value(metadata i8* %15, metadata !7351, metadata !DIExpression()), !dbg !7354
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7362
  call void @llvm.dbg.value(metadata i8* %16, metadata !7352, metadata !DIExpression()), !dbg !7354
  %17 = add i32 %6, -1, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %17, metadata !7353, metadata !DIExpression()), !dbg !7354
  %18 = icmp eq i32 %17, 0, !dbg !7355
  br i1 %18, label %23, label %5, !dbg !7355, !llvm.loop !7364

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7367
  %21 = zext i8 %10 to i32, !dbg !7368
  %22 = sub nsw i32 %20, %21, !dbg !7369
  br label %23, !dbg !7370

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7370
  ret i32 %24, !dbg !7371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7372 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8* %1, metadata !7378, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8** %2, metadata !7379, metadata !DIExpression()), !dbg !7382
  %4 = icmp eq i8* %0, null, !dbg !7383
  br i1 %4, label %5, label %7, !dbg !7383

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7384
  br label %7, !dbg !7383

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7383
  call void @llvm.dbg.value(metadata i8* %8, metadata !7380, metadata !DIExpression()), !dbg !7382
  %9 = load i8, i8* %8, align 1, !dbg !7385
  %10 = icmp eq i8 %9, 0, !dbg !7385
  br i1 %10, label %33, label %11, !dbg !7386

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7380, metadata !DIExpression()), !dbg !7382
  %14 = zext i8 %12 to i32, !dbg !7385
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7387
  %16 = icmp eq i8* %15, null, !dbg !7386
  br i1 %16, label %21, label %17, !dbg !7388

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7389
  call void @llvm.dbg.value(metadata i8* %18, metadata !7380, metadata !DIExpression()), !dbg !7382
  %19 = load i8, i8* %18, align 1, !dbg !7385
  %20 = icmp eq i8 %19, 0, !dbg !7385
  br i1 %20, label %33, label %11, !dbg !7386, !llvm.loop !7391

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7381, metadata !DIExpression()), !dbg !7382
  %24 = zext i8 %22 to i32, !dbg !7393
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7394
  %26 = icmp eq i8* %25, null, !dbg !7395
  br i1 %26, label %27, label %31, !dbg !7396

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7397
  call void @llvm.dbg.value(metadata i8* %28, metadata !7381, metadata !DIExpression()), !dbg !7382
  %29 = load i8, i8* %28, align 1, !dbg !7393
  %30 = icmp eq i8 %29, 0, !dbg !7393
  br i1 %30, label %33, label %21, !dbg !7399, !llvm.loop !7400

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7402
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7405
  br label %33, !dbg !7406

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7382
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7382
  store i8* %34, i8** %2, align 4, !dbg !7382
  ret i8* %35, !dbg !7407
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7408 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7410, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.value(metadata i8* %1, metadata !7411, metadata !DIExpression()), !dbg !7412
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7413
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7414
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7415
  ret i8* %0, !dbg !7416
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7419, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %1, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %2, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression()), !dbg !7424
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %4, metadata !7423, metadata !DIExpression()), !dbg !7424
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7426
  call void @llvm.dbg.value(metadata i8* %5, metadata !7419, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %1, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %2, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %2, metadata !7421, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7424
  %6 = icmp eq i32 %2, 0, !dbg !7427
  br i1 %6, label %18, label %7, !dbg !7428

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7429
  call void @llvm.dbg.value(metadata i8* %9, metadata !7419, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %10, metadata !7420, metadata !DIExpression()), !dbg !7424
  %12 = load i8, i8* %10, align 1, !dbg !7430
  %13 = icmp eq i8 %12, 0, !dbg !7431
  br i1 %13, label %18, label %14, !dbg !7432

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7433
  call void @llvm.dbg.value(metadata i8* %15, metadata !7420, metadata !DIExpression()), !dbg !7424
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7435
  call void @llvm.dbg.value(metadata i8* %16, metadata !7419, metadata !DIExpression()), !dbg !7424
  store i8 %12, i8* %9, align 1, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %11, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %11, metadata !7421, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7424
  %17 = icmp eq i32 %11, 0, !dbg !7427
  br i1 %17, label %18, label %7, !dbg !7428, !llvm.loop !7437

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7424
  store i8 0, i8* %19, align 1, !dbg !7439
  ret i8* %0, !dbg !7440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7441 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7445, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %1, metadata !7446, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %2, metadata !7447, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %0, metadata !7448, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %1, metadata !7449, metadata !DIExpression()), !dbg !7450
  %4 = icmp eq i32 %2, 0, !dbg !7451
  br i1 %4, label %31, label %5, !dbg !7453

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %0, metadata !7448, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %2, metadata !7447, metadata !DIExpression()), !dbg !7450
  %6 = add i32 %2, -1, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %6, metadata !7447, metadata !DIExpression()), !dbg !7450
  %7 = icmp eq i32 %6, 0, !dbg !7455
  br i1 %7, label %23, label %8, !dbg !7456

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7457
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7457
  br label %11, !dbg !7457

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %14, metadata !7448, metadata !DIExpression()), !dbg !7450
  %15 = load i8, i8* %14, align 1, !dbg !7458
  %16 = load i8, i8* %13, align 1, !dbg !7459
  %17 = icmp eq i8 %15, %16, !dbg !7460
  br i1 %17, label %18, label %23, !dbg !7457

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7461
  call void @llvm.dbg.value(metadata i8* %19, metadata !7448, metadata !DIExpression()), !dbg !7450
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7463
  call void @llvm.dbg.value(metadata i8* %20, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %12, metadata !7447, metadata !DIExpression()), !dbg !7450
  %21 = add i32 %12, -1, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %21, metadata !7447, metadata !DIExpression()), !dbg !7450
  %22 = icmp eq i32 %21, 0, !dbg !7455
  br i1 %22, label %23, label %11, !dbg !7456, !llvm.loop !7464

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7450
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7450
  %26 = load i8, i8* %24, align 1, !dbg !7466
  %27 = zext i8 %26 to i32, !dbg !7466
  %28 = load i8, i8* %25, align 1, !dbg !7467
  %29 = zext i8 %28 to i32, !dbg !7467
  %30 = sub nsw i32 %27, %29, !dbg !7468
  br label %31, !dbg !7469

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7450
  ret i32 %32, !dbg !7470
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7475, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %1, metadata !7476, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %1, metadata !7479, metadata !DIExpression()), !dbg !7480
  %4 = ptrtoint i8* %0 to i32, !dbg !7481
  %5 = ptrtoint i8* %1 to i32, !dbg !7481
  %6 = sub i32 %4, %5, !dbg !7481
  %7 = icmp ult i32 %6, %2, !dbg !7483
  br i1 %7, label %10, label %8, !dbg !7484

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7479, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression()), !dbg !7480
  %9 = icmp eq i32 %2, 0, !dbg !7485
  br i1 %9, label %26, label %17, !dbg !7487

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7477, metadata !DIExpression()), !dbg !7480
  %12 = add i32 %11, -1, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %12, metadata !7477, metadata !DIExpression()), !dbg !7480
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7491
  %14 = load i8, i8* %13, align 1, !dbg !7491
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7492
  store i8 %14, i8* %15, align 1, !dbg !7493
  %16 = icmp eq i32 %12, 0, !dbg !7494
  br i1 %16, label %26, label %10, !dbg !7495, !llvm.loop !7496

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7479, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %19, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %20, metadata !7477, metadata !DIExpression()), !dbg !7480
  %21 = load i8, i8* %18, align 1, !dbg !7498
  store i8 %21, i8* %19, align 1, !dbg !7500
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7501
  call void @llvm.dbg.value(metadata i8* %22, metadata !7478, metadata !DIExpression()), !dbg !7480
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7502
  call void @llvm.dbg.value(metadata i8* %23, metadata !7479, metadata !DIExpression()), !dbg !7480
  %24 = add i32 %20, -1, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %24, metadata !7477, metadata !DIExpression()), !dbg !7480
  %25 = icmp eq i32 %24, 0, !dbg !7485
  br i1 %25, label %26, label %17, !dbg !7487, !llvm.loop !7504

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7513, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %1, metadata !7514, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %2, metadata !7515, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %0, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %1, metadata !7517, metadata !DIExpression()), !dbg !7518
  %4 = icmp eq i32 %2, 0, !dbg !7519
  br i1 %4, label %14, label %5, !dbg !7520

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %7, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %8, metadata !7515, metadata !DIExpression()), !dbg !7518
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7521
  call void @llvm.dbg.value(metadata i8* %9, metadata !7517, metadata !DIExpression()), !dbg !7518
  %10 = load i8, i8* %6, align 1, !dbg !7523
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7524
  call void @llvm.dbg.value(metadata i8* %11, metadata !7516, metadata !DIExpression()), !dbg !7518
  store i8 %10, i8* %7, align 1, !dbg !7525
  %12 = add i32 %8, -1, !dbg !7526
  call void @llvm.dbg.value(metadata i32 %12, metadata !7515, metadata !DIExpression()), !dbg !7518
  %13 = icmp eq i32 %12, 0, !dbg !7519
  br i1 %13, label %14, label %5, !dbg !7520, !llvm.loop !7527

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7529
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %1, metadata !7535, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %2, metadata !7536, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i8* %0, metadata !7537, metadata !DIExpression()), !dbg !7539
  %4 = trunc i32 %1 to i8, !dbg !7540
  call void @llvm.dbg.value(metadata i8 %4, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %2, metadata !7536, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i8* %0, metadata !7537, metadata !DIExpression()), !dbg !7539
  %5 = icmp eq i32 %2, 0, !dbg !7541
  br i1 %5, label %12, label %6, !dbg !7542

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7536, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i8* %8, metadata !7537, metadata !DIExpression()), !dbg !7539
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7543
  call void @llvm.dbg.value(metadata i8* %9, metadata !7537, metadata !DIExpression()), !dbg !7539
  store i8 %4, i8* %8, align 1, !dbg !7545
  %10 = add i32 %7, -1, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %10, metadata !7536, metadata !DIExpression()), !dbg !7539
  %11 = icmp eq i32 %10, 0, !dbg !7541
  br i1 %11, label %12, label %6, !dbg !7542, !llvm.loop !7547

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7549
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7554, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 %1, metadata !7555, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 %2, metadata !7556, metadata !DIExpression()), !dbg !7560
  %4 = icmp eq i32 %2, 0, !dbg !7561
  br i1 %4, label %17, label %5, !dbg !7562

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7563

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7564
  call void @llvm.dbg.value(metadata i8* %9, metadata !7557, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %8, metadata !7556, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i8* %9, metadata !7557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7564
  %10 = load i8, i8* %9, align 1, !dbg !7565
  %11 = icmp eq i8 %10, %6, !dbg !7568
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7569
  call void @llvm.dbg.value(metadata i8* %12, metadata !7557, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %13, metadata !7556, metadata !DIExpression()), !dbg !7560
  br i1 %15, label %16, label %7, !dbg !7569, !llvm.loop !7570

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7572

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7560
  ret i8* %19, !dbg !7573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7574 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7578
  ret void, !dbg !7579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7582, metadata !DIExpression()), !dbg !7583
  ret i32 -1, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32* %1, metadata !7590, metadata !DIExpression()), !dbg !7591
  %3 = ptrtoint i32* %1 to i32, !dbg !7592
  %4 = and i32 %3, -2, !dbg !7592
  %5 = icmp eq i32 %4, 2, !dbg !7592
  br i1 %5, label %6, label %9, !dbg !7592

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7593
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7593
  br label %9, !dbg !7594

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7594
  ret i32 %10, !dbg !7595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32* %1, metadata !7599, metadata !DIExpression()), !dbg !7600
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7601
  ret i32 %3, !dbg !7602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32* %1, metadata !7607, metadata !DIExpression()), !dbg !7608
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7609, !srcloc !7611
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7612
  ret i32 %3, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32* %1, metadata !7620, metadata !DIExpression()), !dbg !7623
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7624
  call void @llvm.dbg.value(metadata i32 %3, metadata !7621, metadata !DIExpression()), !dbg !7623
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %4, metadata !7622, metadata !DIExpression()), !dbg !7623
  %5 = icmp ne i32 %3, %4, !dbg !7626
  %6 = sext i1 %5 to i32, !dbg !7627
  ret i32 %6, !dbg !7628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7633, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %1, metadata !7634, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %2, metadata !7635, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32* %3, metadata !7636, metadata !DIExpression()), !dbg !7637
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7638
  ret i32 %5, !dbg !7639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32 %1, metadata !7643, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32 %2, metadata !7644, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32* %3, metadata !7645, metadata !DIExpression()), !dbg !7646
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7647, !srcloc !7649
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7650
  ret i32 %5, !dbg !7651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7654, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %1, metadata !7655, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32* %3, metadata !7657, metadata !DIExpression()), !dbg !7662
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7663
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7665
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7665
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7665
  br i1 %11, label %33, label %12, !dbg !7665

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7662
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7662
  call void @llvm.dbg.value(metadata i8* %14, metadata !7660, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %13, metadata !7658, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()), !dbg !7662
  br label %15, !dbg !7666

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7668
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7662
  call void @llvm.dbg.value(metadata i8* %17, metadata !7660, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %16, metadata !7659, metadata !DIExpression()), !dbg !7662
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7669
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7672
  call void @llvm.dbg.value(metadata i8* %19, metadata !7660, metadata !DIExpression()), !dbg !7662
  %20 = load i8, i8* %17, align 1, !dbg !7673
  %21 = zext i8 %20 to i32, !dbg !7674
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7669
  %23 = icmp eq i32 %22, -1, !dbg !7675
  br i1 %23, label %30, label %24, !dbg !7676

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %25, metadata !7659, metadata !DIExpression()), !dbg !7662
  %26 = icmp eq i32 %25, 0, !dbg !7678
  br i1 %26, label %27, label %15, !dbg !7679, !llvm.loop !7680

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %28, metadata !7658, metadata !DIExpression()), !dbg !7662
  %29 = icmp eq i32 %28, 0, !dbg !7683
  br i1 %29, label %30, label %12, !dbg !7684, !llvm.loop !7685

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7662
  call void @llvm.dbg.value(metadata i32 %31, metadata !7658, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.label(metadata !7661), !dbg !7688
  %32 = sub i32 %2, %31, !dbg !7689
  br label %33, !dbg !7690

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7662
  ret i32 %34, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7696, metadata !DIExpression()), !dbg !7697
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7698
  %3 = icmp eq i32 %2, -1, !dbg !7700
  br i1 %3, label %8, label %4, !dbg !7701

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7702
  %6 = icmp eq i32 %5, -1, !dbg !7703
  %7 = sext i1 %6 to i32, !dbg !7702
  br label %8, !dbg !7704

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7697
  ret i32 %9, !dbg !7705
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7708, metadata !DIExpression()), !dbg !7709
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7710
  ret void, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7716, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7717, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7718, metadata !DIExpression()), !dbg !7722
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7723
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7723
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7723
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %0, metadata !7721, metadata !DIExpression()), !dbg !7722
  %7 = icmp slt i32 %0, %1, !dbg !7724
  br i1 %7, label %8, label %22, !dbg !7727

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7721, metadata !DIExpression()), !dbg !7722
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7728
  %11 = icmp eq i32 %10, 0, !dbg !7728
  br i1 %11, label %19, label %12, !dbg !7731

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7732
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7734
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7734
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7736
  br i1 %15, label %19, label %16, !dbg !7737

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7738
  %18 = load i8*, i8** %17, align 4, !dbg !7738
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7739
  br label %19, !dbg !7740

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7741
  call void @llvm.dbg.value(metadata i32 %20, metadata !7721, metadata !DIExpression()), !dbg !7722
  %21 = icmp eq i32 %20, %1, !dbg !7724
  br i1 %21, label %22, label %8, !dbg !7727, !llvm.loop !7742

22:                                               ; preds = %19, %3
  ret void, !dbg !7744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %2 = shl nuw i32 1, %0, !dbg !7749
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7752
  ret i32 %3, !dbg !7753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7758, metadata !DIExpression()), !dbg !7759
  %2 = shl nuw i32 1, %0, !dbg !7760
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7763
  ret void, !dbg !7764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7768, metadata !DIExpression()), !dbg !7769
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7770
  ret void, !dbg !7771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7775
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7776
  %3 = and i32 %2, %0, !dbg !7776
  %4 = icmp eq i32 %3, %0, !dbg !7777
  %5 = zext i1 %4 to i32, !dbg !7777
  ret i32 %5, !dbg !7778
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7781, metadata !DIExpression()), !dbg !7782
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7783
  ret void, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7789
  ret void, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7795
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7799, metadata !DIExpression()), !dbg !7800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7801
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7819
  ret void, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7823, metadata !DIExpression()), !dbg !7824
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7829, metadata !DIExpression()), !dbg !7830
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7835, metadata !DIExpression()), !dbg !7836
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7843
  ret i32 0, !dbg !7844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !748 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !752, metadata !DIExpression()), !dbg !7845
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7846
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7848
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7850
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7852
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7854
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7856
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7858
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7860
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7862
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7864
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7866
  ret void, !dbg !7868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 0, metadata !7872, metadata !DIExpression()), !dbg !7873
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7874
  %3 = load i32, i32* %2, align 4, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %3, metadata !7872, metadata !DIExpression()), !dbg !7873
  %4 = shl nuw i32 1, %0, !dbg !7875
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7876
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7883
  %3 = or i32 %2, %0, !dbg !7883
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  %2 = icmp slt i32 %0, 32, !dbg !7889
  br i1 %2, label %3, label %5, !dbg !7891

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7892
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7894
  br label %5, !dbg !7895

5:                                                ; preds = %1, %3
  ret void, !dbg !7896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7899, metadata !DIExpression()), !dbg !7900
  %2 = xor i32 %0, -1, !dbg !7901
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7901
  %4 = and i32 %3, %2, !dbg !7901
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7901
  ret void, !dbg !7902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7907, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i32 %1, metadata !7908, metadata !DIExpression()), !dbg !7909
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7910

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7911
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7913
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7914
  br label %11, !dbg !7915

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7916
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7917
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7918
  br label %11, !dbg !7919

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7920
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7921
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7922
  br label %11, !dbg !7923

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7924
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7925
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7926
  br label %11, !dbg !7927

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7931, metadata !DIExpression()), !dbg !7932
  %2 = xor i32 %0, -1, !dbg !7933
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7933
  %4 = and i32 %3, %2, !dbg !7933
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7933
  ret void, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = xor i32 %0, -1, !dbg !7939
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7939
  %4 = and i32 %3, %2, !dbg !7939
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7939
  ret void, !dbg !7940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7945
  %3 = or i32 %2, %0, !dbg !7945
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7945
  ret void, !dbg !7946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7949, metadata !DIExpression()), !dbg !7950
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7951
  %3 = or i32 %2, %0, !dbg !7951
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7951
  ret void, !dbg !7952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7958, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i8* %2, metadata !7959, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7960, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7962, metadata !DIExpression()), !dbg !7963
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7964
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7964
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7966
  br i1 %6, label %7, label %9, !dbg !7967

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7968
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7969
  store i8* %2, i8** %8, align 4, !dbg !7970
  br label %9, !dbg !7971

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7963
  ret i32 %10, !dbg !7972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7977, metadata !DIExpression()), !dbg !7978
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7979
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7980
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7981
  store i8* null, i8** %3, align 4, !dbg !7982
  ret void, !dbg !7983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7986, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* %1, metadata !7987, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* %1, metadata !7988, metadata !DIExpression()), !dbg !7991
  %3 = bitcast i8* %1 to i32*, !dbg !7992
  %4 = load i32, i32* %3, align 4, !dbg !7992
  %5 = add i32 %4, -169, !dbg !7992
  %6 = icmp ult i32 %5, -121, !dbg !7992
  br i1 %6, label %15, label %7, !dbg !7994

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7995
  %9 = inttoptr i32 %8 to i32*, !dbg !7996
  call void @llvm.dbg.value(metadata i32* %9, metadata !7989, metadata !DIExpression()), !dbg !7991
  %10 = load volatile i32, i32* %9, align 4, !dbg !7997
  call void @llvm.dbg.value(metadata i32 %10, metadata !7990, metadata !DIExpression()), !dbg !7991
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7998
  %12 = bitcast i8* %11 to i32*, !dbg !7998
  %13 = load i32, i32* %12, align 4, !dbg !7998
  %14 = or i32 %13, %10, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %14, metadata !7990, metadata !DIExpression()), !dbg !7991
  store volatile i32 %14, i32* %9, align 4, !dbg !8000
  br label %15, !dbg !8001

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7991
  ret i32 %16, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8003 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8005, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %1, metadata !8006, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %1, metadata !8007, metadata !DIExpression()), !dbg !8010
  %3 = bitcast i8* %1 to i32*, !dbg !8011
  %4 = load i32, i32* %3, align 4, !dbg !8011
  %5 = add i32 %4, -169, !dbg !8011
  %6 = icmp ult i32 %5, -121, !dbg !8011
  br i1 %6, label %16, label %7, !dbg !8013

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8014
  %9 = inttoptr i32 %8 to i32*, !dbg !8015
  call void @llvm.dbg.value(metadata i32* %9, metadata !8008, metadata !DIExpression()), !dbg !8010
  %10 = load volatile i32, i32* %9, align 4, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %10, metadata !8009, metadata !DIExpression()), !dbg !8010
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8017
  %12 = bitcast i8* %11 to i32*, !dbg !8017
  %13 = load i32, i32* %12, align 4, !dbg !8017
  %14 = xor i32 %13, -1, !dbg !8018
  %15 = and i32 %10, %14, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %15, metadata !8009, metadata !DIExpression()), !dbg !8010
  store volatile i32 %15, i32* %9, align 4, !dbg !8020
  br label %16, !dbg !8021

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8010
  ret i32 %17, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8025, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %1, metadata !8026, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i32* %2, metadata !8027, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %1, metadata !8028, metadata !DIExpression()), !dbg !8033
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8034
  call void @llvm.dbg.value(metadata i32 %4, metadata !8029, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i32 undef, metadata !8030, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i32 undef, metadata !8031, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i32 %4, metadata !8032, metadata !DIExpression()), !dbg !8033
  %5 = bitcast i8* %1 to i32*, !dbg !8035
  %6 = load i32, i32* %5, align 4, !dbg !8035
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8036

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #27, !dbg !8037
  call void @llvm.dbg.value(metadata i32 %8, metadata !8030, metadata !DIExpression()), !dbg !8033
  br label %19, !dbg !8038

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %10, metadata !8031, metadata !DIExpression()), !dbg !8033
  br label %19, !dbg !8041

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8042
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !8043
  br label %19, !dbg !8044

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8045
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #27, !dbg !8046
  br label %19, !dbg !8047

17:                                               ; preds = %3
  br label %19, !dbg !8048

18:                                               ; preds = %3
  br label %19, !dbg !8049

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8050
  br label %21, !dbg !8051

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8033
  ret i32 %22, !dbg !8051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8052 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8054, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i8* %2, metadata !8056, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i8* %1, metadata !8057, metadata !DIExpression()), !dbg !8062
  %4 = bitcast i8* %1 to i32*, !dbg !8063
  %5 = load i32, i32* %4, align 4, !dbg !8063
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %6, metadata !8061, metadata !DIExpression()), !dbg !8062
  %7 = icmp slt i32 %6, 0, !dbg !8065
  br i1 %7, label %22, label %8, !dbg !8067

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8057, metadata !DIExpression()), !dbg !8062
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8068
  %10 = bitcast i8* %9 to i32*, !dbg !8068
  %11 = load i32, i32* %10, align 4, !dbg !8068
  %12 = lshr i32 %11, 16, !dbg !8068
  %13 = and i32 %12, 7, !dbg !8068
  %14 = lshr i32 %11, 8, !dbg !8069
  %15 = and i32 %14, 31, !dbg !8069
  %16 = shl i32 %13, %15, !dbg !8070
  call void @llvm.dbg.value(metadata i32 %16, metadata !8060, metadata !DIExpression()), !dbg !8062
  %17 = and i32 %11, 255, !dbg !8071
  %18 = or i32 %17, 1073887232, !dbg !8072
  %19 = inttoptr i32 %18 to i32*, !dbg !8073
  call void @llvm.dbg.value(metadata i32* %19, metadata !8058, metadata !DIExpression()), !dbg !8062
  %20 = load volatile i32, i32* %19, align 4, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %20, metadata !8059, metadata !DIExpression()), !dbg !8062
  %21 = or i32 %16, %20, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %21, metadata !8059, metadata !DIExpression()), !dbg !8062
  store volatile i32 %21, i32* %19, align 4, !dbg !8076
  br label %22, !dbg !8077

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8062
  ret i32 %23, !dbg !8078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 0, metadata !8084, metadata !DIExpression()), !dbg !8085
  %2 = add i32 %0, -1, !dbg !8086
  %3 = icmp ult i32 %2, 6, !dbg !8086
  br i1 %3, label %4, label %7, !dbg !8086

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8086
  %6 = load i32, i32* %5, align 4, !dbg !8086
  call void @llvm.dbg.value(metadata i32 %6, metadata !8084, metadata !DIExpression()), !dbg !8085
  br label %7, !dbg !8087

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8085
  ret i32 %8, !dbg !8088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8093, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %1, metadata !8094, metadata !DIExpression()), !dbg !8095
  %3 = udiv i32 %0, %1, !dbg !8096
  ret i32 %3, !dbg !8097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8102, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 24, metadata !8103, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 336, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 %1, metadata !8105, metadata !DIExpression()), !dbg !8106
  %3 = mul i32 %0, 336, !dbg !8107
  %4 = mul nsw i32 %1, 24, !dbg !8108
  %5 = udiv i32 %3, %4, !dbg !8109
  ret i32 %5, !dbg !8110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8111 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8113, metadata !DIExpression()), !dbg !8116
  tail call void @config_enable_default_clocks() #26, !dbg !8117
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8118
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !8118
  %4 = lshr i32 %3, 4, !dbg !8118
  %5 = and i32 %4, 15, !dbg !8118
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8118
  %7 = load i8, i8* %6, align 1, !dbg !8118
  %8 = zext i8 %7 to i32, !dbg !8118
  %9 = lshr i32 %2, %8, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %9, metadata !8114, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8115, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8116
  %10 = icmp ult i32 %9, 168000000, !dbg !8119
  br i1 %10, label %11, label %13, !dbg !8121

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !8122
  br label %13, !dbg !8124

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !8125
  tail call fastcc void @set_up_plls() #27, !dbg !8126
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8127
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !8130
  br label %14, !dbg !8131

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8132
  %16 = icmp eq i32 %15, 8, !dbg !8133
  br i1 %16, label %17, label %14, !dbg !8131, !llvm.loop !8134

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8136
  br i1 %18, label %19, label %21, !dbg !8138

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #26, !dbg !8139
  br label %21, !dbg !8141

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8142
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !8143
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !8144
  ret i32 0, !dbg !8145
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8146 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8148
  %2 = and i32 %1, 240, !dbg !8148
  ret i32 %2, !dbg !8149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8150 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !8151
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !8156
  br label %1, !dbg !8157

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !8158
  %3 = icmp eq i32 %2, 1, !dbg !8159
  br i1 %3, label %4, label %1, !dbg !8157, !llvm.loop !8160

4:                                                ; preds = %1
  ret void, !dbg !8162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8163 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8164
  %2 = icmp eq i32 %1, 8, !dbg !8166
  br i1 %2, label %3, label %4, !dbg !8167

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8168
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8170
  br label %4, !dbg !8171

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8172
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8173
  %6 = and i32 %5, -196609, !dbg !8173
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8173
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8174
  %8 = and i32 %7, -251658241, !dbg !8174
  %9 = or i32 %8, 117440512, !dbg !8174
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8174
  tail call void @config_pll_sysclock() #26, !dbg !8175
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8176
  br label %10, !dbg !8177

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8178
  %12 = icmp eq i32 %11, 1, !dbg !8179
  br i1 %12, label %13, label %10, !dbg !8177, !llvm.loop !8180

13:                                               ; preds = %10
  ret void, !dbg !8182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8183 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8185, metadata !DIExpression()), !dbg !8186
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8187
  %2 = and i32 %1, -241, !dbg !8187
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8187
  ret void, !dbg !8188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8192
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8193
  %3 = and i32 %2, -4, !dbg !8193
  %4 = or i32 %3, %0, !dbg !8193
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8193
  ret void, !dbg !8194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8195 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8196
  %2 = and i32 %1, 12, !dbg !8196
  ret i32 %2, !dbg !8197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8198 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8200, metadata !DIExpression()), !dbg !8201
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8202
  %2 = and i32 %1, -7169, !dbg !8202
  %3 = or i32 %2, 5120, !dbg !8202
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8202
  ret void, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8204 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8206, metadata !DIExpression()), !dbg !8207
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8208
  %2 = and i32 %1, -57345, !dbg !8208
  %3 = or i32 %2, 32768, !dbg !8208
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8208
  ret void, !dbg !8209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8210 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8211
  %2 = icmp eq i32 %1, 1, !dbg !8213
  br i1 %2, label %7, label %3, !dbg !8214

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8215
  br label %4, !dbg !8217

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8218
  %6 = icmp eq i32 %5, 1, !dbg !8219
  br i1 %6, label %7, label %4, !dbg !8217, !llvm.loop !8220

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8222
  br label %8, !dbg !8223

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8224
  %10 = icmp eq i32 %9, 0, !dbg !8225
  br i1 %10, label %11, label %8, !dbg !8223, !llvm.loop !8226

11:                                               ; preds = %8
  ret void, !dbg !8228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8229 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8230
  %2 = and i32 %1, -16777217, !dbg !8230
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8230
  ret void, !dbg !8231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8232 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8233
  %2 = or i32 %1, 16777216, !dbg !8233
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8233
  ret void, !dbg !8234
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8235 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8236
  %2 = lshr i32 %1, 25, !dbg !8237
  %3 = and i32 %2, 1, !dbg !8237
  ret i32 %3, !dbg !8238
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8239 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8240
  %2 = lshr i32 %1, 1, !dbg !8241
  %3 = and i32 %2, 1, !dbg !8241
  ret i32 %3, !dbg !8242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8243 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8244
  %2 = or i32 %1, 1, !dbg !8244
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8246 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8247
  %2 = and i32 %1, -262145, !dbg !8247
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8249 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8250
  %2 = or i32 %1, 65536, !dbg !8250
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8250
  ret void, !dbg !8251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8252 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8253
  %2 = lshr i32 %1, 17, !dbg !8254
  %3 = and i32 %2, 1, !dbg !8254
  ret i32 %3, !dbg !8255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8256 {
  ret i32 24000000, !dbg !8258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8262 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8269, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 24, metadata !8270, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 336, metadata !8271, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 0, metadata !8272, metadata !DIExpression()), !dbg !8273
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8274
  %2 = and i32 %1, -4227072, !dbg !8274
  %3 = or i32 %2, 4215832, !dbg !8274
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8274
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8275
  %5 = and i32 %4, -196609, !dbg !8275
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8275
  ret void, !dbg !8276
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8277 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8280 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8283, metadata !DIExpression()), !dbg !8285
  %2 = bitcast i32* %1 to i8*, !dbg !8286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8286
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8284, metadata !DIExpression()), !dbg !8287
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8288
  %4 = or i32 %3, 268435456, !dbg !8288
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8288
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8289
  %6 = and i32 %5, 268435456, !dbg !8289
  store volatile i32 %6, i32* %1, align 4, !dbg !8290
  %7 = load volatile i32, i32* %1, align 4, !dbg !8291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8292
  ret void, !dbg !8292
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8295, metadata !DIExpression()), !dbg !8296
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8297
  br i1 %2, label %3, label %4, !dbg !8299

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8300
  br label %4, !dbg !8301

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8296
  ret i32 %5, !dbg !8302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8303 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8308, metadata !DIExpression()), !dbg !8309
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8310, !srcloc !8312
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8313
  ret i1 %1, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8315 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8316
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8317
  ret void, !dbg !8318
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8321, metadata !DIExpression()), !dbg !8322
  %2 = icmp eq i32 %0, 10, !dbg !8323
  br i1 %2, label %3, label %4, !dbg !8325

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8326
  br label %4, !dbg !8328

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8329
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8330
  ret i32 %0, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8335, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8 %0, metadata !8336, metadata !DIExpression()), !dbg !8337
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8338, !srcloc !8340
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8341
  ret void, !dbg !8342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8343 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8345, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8 %0, metadata !8346, metadata !DIExpression()), !dbg !8348
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8349
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8347, metadata !DIExpression()), !dbg !8348
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8350
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8350
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8 noundef zeroext %0) #26, !dbg !8351
  ret void, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8353 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8355, metadata !DIExpression()), !dbg !8356
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8357
  ret i1 %1, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8359 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8363, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8364, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8365, metadata !DIExpression()), !dbg !8366
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8367
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8368
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8369
  tail call fastcc void @console_input_init() #27, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8372 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8375
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8376
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8377
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8378
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8379
  %3 = icmp eq i32 %2, 0, !dbg !8380
  br i1 %3, label %8, label %4, !dbg !8380

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8374, metadata !DIExpression(DW_OP_deref)), !dbg !8381
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8382
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8379
  %7 = icmp eq i32 %6, 0, !dbg !8380
  br i1 %7, label %8, label %4, !dbg !8380, !llvm.loop !8384

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8386
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8387
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8390, metadata !DIExpression()), !dbg !8391
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8392, !srcloc !8394
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8399, metadata !DIExpression()), !dbg !8400
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8401, !srcloc !8403
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8410, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8411, metadata !DIExpression()), !dbg !8412
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8413
  ret void, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8417, metadata !DIExpression()), !dbg !8419
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8420
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8418, metadata !DIExpression()), !dbg !8419
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8421
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8421
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8423
  br i1 %4, label %7, label %5, !dbg !8424

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8425
  br label %7, !dbg !8426

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8419
  ret i32 %8, !dbg !8427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8428 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8430, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %0, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i32 1, metadata !8432, metadata !DIExpression()), !dbg !8434
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8435
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8433, metadata !DIExpression()), !dbg !8434
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8436
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8436
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8438
  br i1 %5, label %8, label %6, !dbg !8439

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8* noundef %0, i32 noundef 1) #26, !dbg !8440
  br label %8, !dbg !8441

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8434
  ret i32 %9, !dbg !8442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8443 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8445, metadata !DIExpression()), !dbg !8446
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8447, !srcloc !8449
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8454, metadata !DIExpression()), !dbg !8456
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8457
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8455, metadata !DIExpression()), !dbg !8456
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8458
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8458
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8460
  br i1 %4, label %6, label %5, !dbg !8461

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8462
  br label %6, !dbg !8464

6:                                                ; preds = %5, %0
  ret void, !dbg !8465
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1117 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1119, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i8* %1, metadata !1120, metadata !DIExpression()), !dbg !8466
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8467
  %5 = icmp eq i32 %4, 0, !dbg !8467
  br i1 %5, label %89, label %6, !dbg !8468

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8469
  %8 = icmp eq i32 %7, 0, !dbg !8468
  br i1 %8, label %89, label %9, !dbg !8470

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8471
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8472
  %11 = icmp eq i32 %10, 0, !dbg !8472
  br i1 %11, label %86, label %12, !dbg !8474, !llvm.loop !8475

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1121, metadata !DIExpression(DW_OP_deref)), !dbg !8477
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8478
  call void @llvm.dbg.value(metadata i32 %13, metadata !1123, metadata !DIExpression()), !dbg !8477
  %14 = icmp slt i32 %13, 0, !dbg !8479
  br i1 %14, label %85, label %15, !dbg !8481

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8482
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8482
  br i1 %17, label %18, label %23, !dbg !8483

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8484
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8484
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8484
  call void @llvm.dbg.value(metadata i8* %21, metadata !1124, metadata !DIExpression()), !dbg !8485
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8486
  %22 = icmp eq i8* %21, null, !dbg !8487
  br i1 %22, label %85, label %23, !dbg !8489

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8490
  br i1 %24, label %25, label %29, !dbg !8492

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8493
  call void @llvm.dbg.value(metadata i8 %26, metadata !1121, metadata !DIExpression()), !dbg !8477
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8495
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8495
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8496
  br label %86, !dbg !8497, !llvm.loop !8475

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8498
  %31 = load i8, i8* %3, align 1, !dbg !8477
  call void @llvm.dbg.value(metadata i8 %31, metadata !1121, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i8 %31, metadata !1121, metadata !DIExpression()), !dbg !8477
  br i1 %30, label %32, label %35, !dbg !8500

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8501
  br i1 %33, label %34, label %86, !dbg !8504, !llvm.loop !8475

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8505
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8507
  br label %86, !dbg !8508, !llvm.loop !8475

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8509
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8511
  %38 = icmp eq i32 %37, 0, !dbg !8511
  br i1 %38, label %39, label %74, !dbg !8512

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1121, metadata !DIExpression()), !dbg !8477
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8513, !llvm.loop !8475

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8515
  %42 = icmp eq i8 %41, 0, !dbg !8518
  br i1 %42, label %86, label %43, !dbg !8519, !llvm.loop !8475

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8520
  %45 = add i8 %41, -1, !dbg !8522
  store i8 %45, i8* @cur, align 1, !dbg !8522
  %46 = zext i8 %45 to i32, !dbg !8520
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8520
  %48 = load i8, i8* @end, align 1, !dbg !8523
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8524
  br label %86, !dbg !8525, !llvm.loop !8475

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8526
  br label %86, !dbg !8527, !llvm.loop !8475

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8528
  %52 = load i8, i8* @cur, align 1, !dbg !8529
  %53 = zext i8 %52 to i32, !dbg !8529
  %54 = load i8, i8* @end, align 1, !dbg !8530
  %55 = zext i8 %54 to i32, !dbg !8530
  %56 = add nuw nsw i32 %55, %53, !dbg !8531
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8528
  store i8 0, i8* %57, align 1, !dbg !8532
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8533
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8534
  store i8 0, i8* @cur, align 1, !dbg !8535
  store i8 0, i8* @end, align 1, !dbg !8536
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8537
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8537
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8537
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8537
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8539
  br label %86, !dbg !8540, !llvm.loop !8475

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8541
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8541
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8543
  br i1 %66, label %86, label %67, !dbg !8543, !llvm.loop !8475

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8544
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8544
  %70 = load i8, i8* @cur, align 1, !dbg !8546
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8547
  %72 = load i8, i8* @cur, align 1, !dbg !8548
  %73 = add i8 %72, %71, !dbg !8548
  store i8 %73, i8* @cur, align 1, !dbg !8548
  br label %86, !dbg !8549, !llvm.loop !8475

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8550
  %76 = zext i8 %75 to i32, !dbg !8550
  %77 = load i8, i8* @end, align 1, !dbg !8552
  %78 = zext i8 %77 to i32, !dbg !8552
  %79 = add nuw nsw i32 %78, %76, !dbg !8553
  %80 = icmp ult i32 %79, 127, !dbg !8554
  br i1 %80, label %81, label %86, !dbg !8555

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8556
  %83 = add i8 %75, 1, !dbg !8558
  store i8 %83, i8* @cur, align 1, !dbg !8558
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8556
  call void @llvm.dbg.value(metadata i8 %31, metadata !1121, metadata !DIExpression()), !dbg !8477
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8559
  br label %86, !dbg !8560

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8476
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8476
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8467
  %88 = icmp eq i32 %87, 0, !dbg !8467
  br i1 %88, label %89, label %6, !dbg !8468

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8562 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i8* null, metadata !8566, metadata !DIExpression()), !dbg !8568
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8569
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8567, metadata !DIExpression()), !dbg !8568
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8570
  br i1 %2, label %8, label %3, !dbg !8572

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8573
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8573
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8574
  br i1 %6, label %8, label %7, !dbg !8575

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_57, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8576
  br label %8, !dbg !8578

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8580 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8582, metadata !DIExpression()), !dbg !8583
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8584, !srcloc !8586
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8587
  ret i32 %1, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8589 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8591, metadata !DIExpression()), !dbg !8592
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8593, !srcloc !8595
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8596
  ret i32 %1, !dbg !8597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %0, metadata !8603, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 1, metadata !8604, metadata !DIExpression()), !dbg !8606
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8607
  call void @llvm.dbg.value(metadata i32 %2, metadata !8605, metadata !DIExpression()), !dbg !8606
  %3 = icmp slt i32 %2, 0, !dbg !8608
  br i1 %3, label %4, label %5, !dbg !8610

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8611
  br label %5, !dbg !8613

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8606
  ret i32 %6, !dbg !8614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8615 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8624, metadata !DIExpression()), !dbg !8626
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8627, !srcloc !8629
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8630
  ret i8* %2, !dbg !8631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8632 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8638, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %0, metadata !8639, metadata !DIExpression()), !dbg !8642
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %2, metadata !8640, metadata !DIExpression()), !dbg !8642
  %3 = and i32 %0, 31, !dbg !8644
  %4 = shl nuw i32 1, %3, !dbg !8645
  %5 = and i32 %2, %4, !dbg !8645
  %6 = icmp ne i32 %5, 0, !dbg !8645
  ret i1 %6, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %1, metadata !8652, metadata !DIExpression()), !dbg !8654
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8655
  br i1 %3, label %4, label %11, !dbg !8657

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8658
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8661
  %7 = icmp eq i32 %6, 0, !dbg !8661
  br i1 %7, label %8, label %9, !dbg !8662

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8663
  br label %34, !dbg !8665

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8666
  %10 = add nsw i32 %5, -48, !dbg !8667
  store i32 %10, i32* @ansi_val, align 4, !dbg !8668
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8669
  br label %81, !dbg !8670

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8671
  br i1 %12, label %13, label %34, !dbg !8673

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8674
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8677
  %16 = icmp eq i32 %15, 0, !dbg !8677
  br i1 %16, label %29, label %17, !dbg !8678

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8679
  br i1 %18, label %19, label %24, !dbg !8682

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8683
  %21 = mul i32 %20, 10, !dbg !8683
  %22 = add nsw i32 %14, -48, !dbg !8685
  %23 = add i32 %22, %21, !dbg !8686
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8686
  br label %81, !dbg !8687

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8688
  %26 = mul i32 %25, 10, !dbg !8688
  %27 = add nsw i32 %14, -48, !dbg !8690
  %28 = add i32 %27, %26, !dbg !8691
  store i32 %28, i32* @ansi_val, align 4, !dbg !8691
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8692
  br i1 %30, label %31, label %33, !dbg !8694

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8695
  br i1 %32, label %33, label %81, !dbg !8696

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8697
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8698
  br label %34, !dbg !8699

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8653), !dbg !8700
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8701

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8702
  %37 = load i8, i8* @cur, align 1, !dbg !8705
  %38 = zext i8 %37 to i32, !dbg !8705
  %39 = icmp ugt i32 %36, %38, !dbg !8706
  br i1 %39, label %80, label %40, !dbg !8707

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8708
  %42 = trunc i32 %36 to i8, !dbg !8708
  %43 = add i8 %41, %42, !dbg !8708
  store i8 %43, i8* @end, align 1, !dbg !8708
  %44 = sub i8 %37, %42, !dbg !8709
  store i8 %44, i8* @cur, align 1, !dbg !8709
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8710
  br label %80, !dbg !8711

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8712
  %47 = load i8, i8* @end, align 1, !dbg !8714
  %48 = zext i8 %47 to i32, !dbg !8714
  %49 = icmp ugt i32 %46, %48, !dbg !8715
  br i1 %49, label %80, label %50, !dbg !8716

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8717
  %52 = sub i8 %47, %51, !dbg !8717
  store i8 %52, i8* @end, align 1, !dbg !8717
  %53 = load i8, i8* @cur, align 1, !dbg !8718
  %54 = add i8 %53, %51, !dbg !8718
  store i8 %54, i8* @cur, align 1, !dbg !8718
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8719
  br label %80, !dbg !8720

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8721
  %57 = icmp eq i8 %56, 0, !dbg !8721
  br i1 %57, label %80, label %58, !dbg !8723

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8724
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8725
  %60 = load i8, i8* @cur, align 1, !dbg !8726
  %61 = load i8, i8* @end, align 1, !dbg !8727
  %62 = add i8 %61, %60, !dbg !8727
  store i8 %62, i8* @end, align 1, !dbg !8727
  store i8 0, i8* @cur, align 1, !dbg !8728
  br label %80, !dbg !8729

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8730
  %65 = icmp eq i8 %64, 0, !dbg !8730
  br i1 %65, label %80, label %66, !dbg !8732

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8733
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8734
  %68 = load i8, i8* @end, align 1, !dbg !8735
  %69 = load i8, i8* @cur, align 1, !dbg !8736
  %70 = add i8 %69, %68, !dbg !8736
  store i8 %70, i8* @cur, align 1, !dbg !8736
  store i8 0, i8* @end, align 1, !dbg !8737
  br label %80, !dbg !8738

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8739
  %73 = icmp eq i8 %72, 0, !dbg !8739
  br i1 %73, label %80, label %74, !dbg !8741

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8742
  %75 = load i8, i8* @cur, align 1, !dbg !8743
  %76 = zext i8 %75 to i32, !dbg !8744
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8744
  %78 = load i8, i8* @end, align 1, !dbg !8745
  %79 = add i8 %78, -1, !dbg !8745
  store i8 %79, i8* @end, align 1, !dbg !8745
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8746
  br label %80, !dbg !8747

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8748
  br label %81, !dbg !8749

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8749
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8755, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i32 %0, metadata !8756, metadata !DIExpression()), !dbg !8759
  %2 = and i32 %0, 31, !dbg !8760
  %3 = shl nuw i32 1, %2, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %3, metadata !8757, metadata !DIExpression()), !dbg !8759
  %4 = xor i32 %3, -1, !dbg !8761
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8762
  call void @llvm.dbg.value(metadata i32 %5, metadata !8758, metadata !DIExpression()), !dbg !8759
  %6 = and i32 %5, %3, !dbg !8763
  %7 = icmp ne i32 %6, 0, !dbg !8764
  ret i1 %7, !dbg !8765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8766 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8770, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %0, metadata !8771, metadata !DIExpression()), !dbg !8773
  %2 = and i32 %0, 31, !dbg !8774
  %3 = shl nuw i32 1, %2, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %3, metadata !8772, metadata !DIExpression()), !dbg !8773
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8775
  ret void, !dbg !8776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8779, metadata !DIExpression()), !dbg !8780
  %2 = add i32 %0, -32, !dbg !8781
  %3 = icmp ult i32 %2, 95, !dbg !8781
  %4 = zext i1 %3 to i32, !dbg !8781
  ret i32 %4, !dbg !8782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8 %1, metadata !8788, metadata !DIExpression()), !dbg !8789
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8790
  %3 = icmp eq i8 %1, 0, !dbg !8791
  br i1 %3, label %4, label %5, !dbg !8793

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8794
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8796
  br label %14, !dbg !8797

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8798
  call void @llvm.dbg.value(metadata i8 %1, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8* %0, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8 %1, metadata !8788, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8789
  br label %6, !dbg !8799

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8* %8, metadata !8787, metadata !DIExpression()), !dbg !8789
  %9 = add i8 %7, -1, !dbg !8800
  call void @llvm.dbg.value(metadata i8 %9, metadata !8788, metadata !DIExpression()), !dbg !8789
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8801
  %11 = load i8, i8* %10, align 1, !dbg !8803
  store i8 %11, i8* %8, align 1, !dbg !8804
  call void @llvm.dbg.value(metadata i8* %10, metadata !8787, metadata !DIExpression()), !dbg !8789
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8805
  call void @llvm.dbg.value(metadata i8 %9, metadata !8788, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8789
  %12 = icmp eq i8 %9, 0, !dbg !8806
  br i1 %12, label %13, label %6, !dbg !8799, !llvm.loop !8807

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8809
  tail call fastcc void @cursor_restore() #27, !dbg !8810
  br label %14, !dbg !8811

14:                                               ; preds = %13, %4
  ret void, !dbg !8811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %1, metadata !8817, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %2, metadata !8818, metadata !DIExpression()), !dbg !8820
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8821
  %4 = icmp eq i8 %2, 0, !dbg !8822
  br i1 %4, label %5, label %6, !dbg !8824

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8825
  br label %17, !dbg !8827

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8828
  call void @llvm.dbg.value(metadata i8 %7, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8820
  store i8 %1, i8* %0, align 1, !dbg !8829
  tail call fastcc void @cursor_save() #27, !dbg !8830
  call void @llvm.dbg.value(metadata i8 %7, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %2, metadata !8818, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %2, metadata !8818, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8820
  br label %8, !dbg !8831

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8820
  call void @llvm.dbg.value(metadata i8 %10, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %11, metadata !8818, metadata !DIExpression()), !dbg !8820
  %13 = add i8 %11, -1, !dbg !8832
  call void @llvm.dbg.value(metadata i8 %13, metadata !8818, metadata !DIExpression()), !dbg !8820
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8833
  %14 = load i8, i8* %12, align 1, !dbg !8835
  call void @llvm.dbg.value(metadata i8 %14, metadata !8817, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8* %12, metadata !8816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8820
  store i8 %10, i8* %12, align 1, !dbg !8836
  call void @llvm.dbg.value(metadata i8 %14, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8* %12, metadata !8816, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8820
  call void @llvm.dbg.value(metadata i8 %13, metadata !8818, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8820
  %15 = icmp eq i8 %13, 0, !dbg !8837
  br i1 %15, label %16, label %8, !dbg !8831, !llvm.loop !8838

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8840
  br label %17, !dbg !8841

17:                                               ; preds = %16, %5
  ret void, !dbg !8841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8842 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8843
  ret void, !dbg !8844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8845 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8848 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %0, metadata !8854, metadata !DIExpression()), !dbg !8855
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8856
  ret i32 %2, !dbg !8857
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8858 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8860, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %0, metadata !8861, metadata !DIExpression()), !dbg !8862
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8863
  ret i32 %2, !dbg !8864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8867, metadata !DIExpression()), !dbg !8868
  %2 = add i32 %0, -48, !dbg !8869
  %3 = icmp ult i32 %2, 10, !dbg !8870
  %4 = zext i1 %3 to i32, !dbg !8870
  ret i32 %4, !dbg !8871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8872 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8874, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 4, metadata !8875, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 16, metadata !8876, metadata !DIExpression()), !dbg !8878
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %1, metadata !8877, metadata !DIExpression()), !dbg !8878
  %2 = and i32 %1, 16, !dbg !8880
  %3 = icmp ne i32 %2, 0, !dbg !8881
  ret i1 %3, !dbg !8882
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8883 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %0, metadata !8886, metadata !DIExpression()), !dbg !8888
  %2 = and i32 %0, 31, !dbg !8889
  %3 = shl nuw i32 1, %2, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %3, metadata !8887, metadata !DIExpression()), !dbg !8888
  %4 = xor i32 %3, -1, !dbg !8890
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8891
  ret void, !dbg !8892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8895, metadata !DIExpression()), !dbg !8896
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8897
  ret void, !dbg !8898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8901, metadata !DIExpression()), !dbg !8902
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8905 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8909, metadata !DIExpression()), !dbg !8910
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8911
  ret i32 %1, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8913 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8915, metadata !DIExpression()), !dbg !8917
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8918
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8916, metadata !DIExpression()), !dbg !8917
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8919
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8919
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8921
  br i1 %4, label %7, label %5, !dbg !8922

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8923
  br label %7, !dbg !8924

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8917
  ret i32 %8, !dbg !8925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8928, metadata !DIExpression()), !dbg !8930
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8931
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8932
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8932
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8934
  br i1 %4, label %7, label %5, !dbg !8935

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8936
  br label %7, !dbg !8937

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8930
  ret i32 %8, !dbg !8938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8941, metadata !DIExpression()), !dbg !8943
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8944
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8942, metadata !DIExpression()), !dbg !8943
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8945
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8945
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8947
  br i1 %4, label %6, label %5, !dbg !8948

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8949
  br label %6, !dbg !8951

6:                                                ; preds = %5, %0
  ret void, !dbg !8952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !8955, metadata !DIExpression()), !dbg !8957
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8958
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8956, metadata !DIExpression()), !dbg !8957
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8959
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8959
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8961
  br i1 %4, label %6, label %5, !dbg !8962

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_57) #26, !dbg !8963
  br label %6, !dbg !8965

6:                                                ; preds = %5, %0
  ret void, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8967 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8969, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i8 %1, metadata !8970, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %2, metadata !8971, metadata !DIExpression()), !dbg !8974
  %5 = bitcast i32* %4 to i8*, !dbg !8975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8975
  call void @llvm.dbg.value(metadata i32* %4, metadata !8973, metadata !DIExpression(DW_OP_deref)), !dbg !8974
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %6, metadata !8972, metadata !DIExpression()), !dbg !8974
  %7 = icmp eq i32 %6, 0, !dbg !8977
  br i1 %7, label %8, label %31, !dbg !8979

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8972, metadata !DIExpression()), !dbg !8974
  %9 = and i32 %2, 131072, !dbg !8980
  %10 = icmp eq i32 %9, 0, !dbg !8982
  br i1 %10, label %28, label %11, !dbg !8983

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8984
  %13 = icmp eq i32 %12, 0, !dbg !8987
  br i1 %13, label %18, label %14, !dbg !8988

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8989
  %16 = shl nuw i32 1, %15, !dbg !8989
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8991
  br label %25, !dbg !8992

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8993
  %20 = icmp eq i32 %19, 0, !dbg !8995
  %21 = zext i8 %1 to i32, !dbg !8974
  br i1 %20, label %25, label %22, !dbg !8996

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8997
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8999
  br label %25, !dbg !9000

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9001
  %27 = load i32, i32* %4, align 4, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %30, metadata !8973, metadata !DIExpression()), !dbg !8974
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !9003
  br label %31, !dbg !9004

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9001
  %30 = load i32, i32* %4, align 4, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %30, metadata !8973, metadata !DIExpression()), !dbg !8974
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !9003
  call void @llvm.dbg.value(metadata i32 0, metadata !8972, metadata !DIExpression()), !dbg !8974
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !9005
  ret i32 %6, !dbg !9005
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9010, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32* %1, metadata !9011, metadata !DIExpression()), !dbg !9015
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9016
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9016
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9016
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9012, metadata !DIExpression()), !dbg !9015
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9017
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9017
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9017
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9014, metadata !DIExpression()), !dbg !9015
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !9018
  store i32 %9, i32* %1, align 4, !dbg !9019
  ret i32 0, !dbg !9020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9023, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %1, metadata !9024, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %2, metadata !9025, metadata !DIExpression()), !dbg !9029
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9030
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9030
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9026, metadata !DIExpression()), !dbg !9029
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9031
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9031
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9031
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9027, metadata !DIExpression()), !dbg !9029
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !9032
  call void @llvm.dbg.value(metadata i32 %10, metadata !9028, metadata !DIExpression()), !dbg !9029
  %11 = xor i32 %1, -1, !dbg !9033
  %12 = and i32 %10, %11, !dbg !9034
  %13 = and i32 %2, %1, !dbg !9035
  %14 = or i32 %12, %13, !dbg !9036
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !9037
  ret i32 0, !dbg !9038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %1, metadata !9042, metadata !DIExpression()), !dbg !9045
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9046
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9046
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9046
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9043, metadata !DIExpression()), !dbg !9045
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9047
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9047
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9047
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9044, metadata !DIExpression()), !dbg !9045
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9048
  store volatile i32 %1, i32* %9, align 4, !dbg !9048
  ret i32 0, !dbg !9049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9052, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9053, metadata !DIExpression()), !dbg !9056
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9057
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9057
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9054, metadata !DIExpression()), !dbg !9056
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9058
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9058
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9058
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9055, metadata !DIExpression()), !dbg !9056
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !9059
  ret i32 0, !dbg !9060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9063, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.value(metadata i32 %1, metadata !9064, metadata !DIExpression()), !dbg !9067
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9068
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9068
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9068
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9065, metadata !DIExpression()), !dbg !9067
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9069
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9069
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9069
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9066, metadata !DIExpression()), !dbg !9067
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9070
  %10 = load volatile i32, i32* %9, align 4, !dbg !9070
  %11 = xor i32 %10, %1, !dbg !9070
  store volatile i32 %11, i32* %9, align 4, !dbg !9070
  ret i32 0, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9074, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i8 %1, metadata !9075, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %2, metadata !9076, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %3, metadata !9077, metadata !DIExpression()), !dbg !9084
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9085
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9085
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9085
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9078, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i8* undef, metadata !9079, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 0, metadata !9081, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 0, metadata !9082, metadata !DIExpression()), !dbg !9084
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9086

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9087
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !9091
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9092
  %12 = load i32, i32* %11, align 4, !dbg !9092
  %13 = icmp eq i32 %10, %12, !dbg !9093
  br i1 %13, label %14, label %29, !dbg !9094

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !9095
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !9097
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !9098
  br label %29, !dbg !9099

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9100
  %17 = load i8*, i8** %16, align 4, !dbg !9100
  call void @llvm.dbg.value(metadata i8* %17, metadata !9079, metadata !DIExpression()), !dbg !9084
  %18 = zext i8 %1 to i32, !dbg !9101
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !9103
  %20 = icmp eq i32 %19, 0, !dbg !9104
  br i1 %20, label %21, label %29, !dbg !9105

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9106
  %23 = load i32, i32* %22, align 4, !dbg !9106
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !9107
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9108

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9081, metadata !DIExpression()), !dbg !9084
  br label %27, !dbg !9109

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9081, metadata !DIExpression()), !dbg !9084
  br label %27, !dbg !9111

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9081, metadata !DIExpression()), !dbg !9084
  br label %27, !dbg !9112

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9084
  call void @llvm.dbg.value(metadata i32 %28, metadata !9081, metadata !DIExpression()), !dbg !9084
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !9113
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !9114
  br label %29, !dbg !9114

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9084
  call void @llvm.dbg.value(metadata i32 %30, metadata !9082, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.label(metadata !9083), !dbg !9115
  ret i32 %30, !dbg !9116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9119, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9120, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i1 %2, metadata !9121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9123
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9124
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9124
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9124
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9122, metadata !DIExpression()), !dbg !9123
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9125
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !9126
  ret i32 %8, !dbg !9127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9128 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9135, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i1 %2, metadata !9136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9137
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !9138
  br i1 %4, label %10, label %5, !dbg !9140

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9141
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !9144
  %8 = or i1 %7, %2, !dbg !9145
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9145
  br i1 %2, label %11, label %13, !dbg !9145

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9146

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9147
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !9150
  br label %13, !dbg !9151

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9137
  ret i32 %14, !dbg !9152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9153 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9157, metadata !DIExpression()), !dbg !9158
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9159
  %3 = icmp eq %struct._snode* %2, null, !dbg !9159
  ret i1 %3, !dbg !9159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9164, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9165, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9166, metadata !DIExpression()), !dbg !9168
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9169
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9166, metadata !DIExpression()), !dbg !9168
  %4 = icmp eq %struct._snode* %3, null, !dbg !9171
  br i1 %4, label %15, label %5, !dbg !9169

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9166, metadata !DIExpression()), !dbg !9168
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9173
  br i1 %6, label %9, label %11, !dbg !9176

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9166, metadata !DIExpression()), !dbg !9168
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9173
  br i1 %8, label %9, label %11, !dbg !9176, !llvm.loop !9177

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9178
  br label %15, !dbg !9178

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9166, metadata !DIExpression()), !dbg !9168
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !9171
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9167, metadata !DIExpression()), !dbg !9168
  %14 = icmp eq %struct._snode* %13, null, !dbg !9171
  br i1 %14, label %15, label %7, !dbg !9169, !llvm.loop !9177

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9181 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9186, metadata !DIExpression()), !dbg !9187
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9188
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9188
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9188
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9189
  %5 = icmp eq %struct._snode* %4, null, !dbg !9189
  br i1 %5, label %6, label %8, !dbg !9188

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9191
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9191
  br label %8, !dbg !9191

8:                                                ; preds = %6, %2
  ret void, !dbg !9188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9199
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9199
  ret %struct._snode* %3, !dbg !9200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9205, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9206, metadata !DIExpression()), !dbg !9207
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9208
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9209
  ret void, !dbg !9210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9211 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9213, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9214, metadata !DIExpression()), !dbg !9215
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9216
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9217
  ret void, !dbg !9218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9221, metadata !DIExpression()), !dbg !9222
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9223
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9223
  ret %struct._snode* %3, !dbg !9224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9225 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9227, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9228, metadata !DIExpression()), !dbg !9229
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9230
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9231
  ret void, !dbg !9232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9233 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9237, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9238, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9239, metadata !DIExpression()), !dbg !9240
  %4 = icmp eq %struct._snode* %1, null, !dbg !9241
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9243
  br i1 %4, label %6, label %11, !dbg !9244

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9245
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9247
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9247
  br i1 %8, label %9, label %15, !dbg !9245

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9249
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9249
  br label %15, !dbg !9249

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9251
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9253
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9253
  br i1 %13, label %14, label %15, !dbg !9251

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9255
  br label %15, !dbg !9255

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9244
  ret void, !dbg !9244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9257 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9261, metadata !DIExpression()), !dbg !9262
  %2 = icmp eq %struct._snode* %0, null, !dbg !9263
  br i1 %2, label %5, label %3, !dbg !9263

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9263
  br label %5, !dbg !9263

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9263
  ret %struct._snode* %6, !dbg !9263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9266, metadata !DIExpression()), !dbg !9267
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9268
  ret %struct._snode* %2, !dbg !9268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9269 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9271, metadata !DIExpression()), !dbg !9272
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9273
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9273
  ret %struct._snode* %3, !dbg !9274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9277, metadata !DIExpression()), !dbg !9280
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9281, !range !9282
  call void @llvm.dbg.value(metadata i32 %2, metadata !9278, metadata !DIExpression()), !dbg !9280
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9283
  call void @llvm.dbg.value(metadata i32 %3, metadata !9279, metadata !DIExpression()), !dbg !9280
  ret i32 %3, !dbg !9284
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9287, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i8* %1, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i8* %1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9291
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9291
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9292
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9292
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9292
  %8 = shl nuw i32 1, %0, !dbg !9293
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9294
  ret void, !dbg !9295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9296 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9300, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.value(metadata i32 %1, metadata !9301, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9302, metadata !DIExpression()), !dbg !9306
  %4 = bitcast i64* %3 to i8*, !dbg !9307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9307
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9304, metadata !DIExpression()), !dbg !9306
  store i64 70368744177732, i64* %3, align 8, !dbg !9308
  call void @llvm.dbg.value(metadata i64* %3, metadata !9304, metadata !DIExpression(DW_OP_deref)), !dbg !9306
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %5, metadata !9305, metadata !DIExpression()), !dbg !9306
  %6 = icmp eq i32 %5, 0, !dbg !9310
  br i1 %6, label %7, label %8, !dbg !9312

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9313
  br label %8, !dbg !9314

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9315
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8* %0, metadata !9319, metadata !DIExpression()), !dbg !9321
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9322
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9320, metadata !DIExpression()), !dbg !9321
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9323
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9323
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !9324
  ret i32 %5, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9328, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata i32 %1, metadata !9329, metadata !DIExpression()), !dbg !9331
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %3, metadata !9330, metadata !DIExpression()), !dbg !9331
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9333
  ret void, !dbg !9334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9339, metadata !DIExpression()), !dbg !9340
  %2 = sdiv i32 %0, 4, !dbg !9341
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9342
  %6 = add nsw i32 %5, 16, !dbg !9343
  %7 = shl i32 15, %6, !dbg !9344
  %8 = or i32 %7, %2, !dbg !9345
  ret i32 %8, !dbg !9346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata i32 %1, metadata !9352, metadata !DIExpression()), !dbg !9353
  %3 = and i32 %1, 255, !dbg !9354
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9354
  %5 = load volatile i32, i32* %4, align 4, !dbg !9354
  %6 = lshr i32 %1, 16, !dbg !9354
  %7 = xor i32 %6, -1, !dbg !9354
  %8 = and i32 %5, %7, !dbg !9354
  call void @llvm.dbg.value(metadata i32 %6, metadata !9355, metadata !DIExpression()) #25, !dbg !9359
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9361, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %9, metadata !9358, metadata !DIExpression()) #25, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %9, metadata !9363, metadata !DIExpression()) #25, !dbg !9368
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9370, !range !3971
  %11 = shl i32 %0, %10, !dbg !9354
  %12 = or i32 %11, %8, !dbg !9354
  store volatile i32 %12, i32* %4, align 4, !dbg !9354
  ret void, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9372 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9376, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9377, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i32 %2, metadata !9378, metadata !DIExpression()), !dbg !9381
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9382
  %5 = icmp eq %struct._snode* %4, null, !dbg !9382
  br i1 %5, label %21, label %6, !dbg !9382

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9384
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9379, metadata !DIExpression()), !dbg !9381
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9385
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9385
  %11 = load i32, i32* %10, align 4, !dbg !9385
  %12 = and i32 %11, %2, !dbg !9389
  %13 = icmp eq i32 %12, 0, !dbg !9389
  br i1 %13, label %19, label %14, !dbg !9390

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9379, metadata !DIExpression()), !dbg !9381
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9391
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9391
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9391
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9393
  br label %19, !dbg !9394

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9379, metadata !DIExpression()), !dbg !9381
  %20 = icmp eq %struct._snode* %8, null, !dbg !9395
  br i1 %20, label %21, label %6, !dbg !9395

21:                                               ; preds = %19, %3
  ret void, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9400
  %2 = and i32 %0, 255, !dbg !9401
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9401
  %4 = load volatile i32, i32* %3, align 4, !dbg !9401
  %5 = lshr i32 %0, 16, !dbg !9401
  %6 = and i32 %4, %5, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %5, metadata !9355, metadata !DIExpression()) #25, !dbg !9402
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9404, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %7, metadata !9358, metadata !DIExpression()) #25, !dbg !9402
  call void @llvm.dbg.value(metadata i32 %7, metadata !9363, metadata !DIExpression()) #25, !dbg !9405
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9407, !range !3971
  %9 = lshr i32 %6, %8, !dbg !9408
  ret i32 %9, !dbg !9409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9410 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9415, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9416, metadata !DIExpression()), !dbg !9417
  %3 = shl i32 %1, 16, !dbg !9418
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9418
  store volatile i32 %3, i32* %4, align 4, !dbg !9418
  ret void, !dbg !9419
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9420 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9424, metadata !DIExpression()), !dbg !9425
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9426
  %3 = load volatile i32, i32* %2, align 4, !dbg !9426
  ret i32 %3, !dbg !9427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9428 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()), !dbg !9432
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9433
  store volatile i32 %1, i32* %3, align 4, !dbg !9433
  ret void, !dbg !9434
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9435 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9437, metadata !DIExpression()), !dbg !9438
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9439
  %3 = load volatile i32, i32* %2, align 4, !dbg !9439
  ret i32 %3, !dbg !9440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9445, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata i32* %1, metadata !9446, metadata !DIExpression()), !dbg !9447
  %3 = and i32 %0, 131072, !dbg !9448
  %4 = icmp eq i32 %3, 0, !dbg !9450
  br i1 %4, label %22, label %5, !dbg !9451

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9452
  %6 = and i32 %0, 2, !dbg !9454
  %7 = icmp eq i32 %6, 0, !dbg !9456
  br i1 %7, label %11, label %8, !dbg !9457

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9458
  %10 = icmp eq i32 %9, 0, !dbg !9458
  br i1 %10, label %33, label %11, !dbg !9461

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9462
  store i32 %12, i32* %1, align 4, !dbg !9462
  %13 = and i32 %0, 16, !dbg !9463
  %14 = icmp eq i32 %13, 0, !dbg !9465
  br i1 %14, label %17, label %15, !dbg !9466

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9467
  br label %31, !dbg !9469

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9470
  %19 = icmp eq i32 %18, 0, !dbg !9472
  br i1 %19, label %33, label %20, !dbg !9473

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9474
  br label %31, !dbg !9476

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9477
  %24 = icmp eq i32 %23, 0, !dbg !9479
  br i1 %24, label %31, label %25, !dbg !9480

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9481
  %27 = icmp eq i32 %26, 0, !dbg !9484
  br i1 %27, label %28, label %31, !dbg !9485

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9486
  br label %33, !dbg !9487

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9447
  ret i32 %34, !dbg !9487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9492, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %1, metadata !9493, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %3, metadata !9495, metadata !DIExpression()), !dbg !9503
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9504
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9504
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9504
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9496, metadata !DIExpression()), !dbg !9503
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9505
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9505
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9505
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9497, metadata !DIExpression()), !dbg !9503
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %11, metadata !9498, metadata !DIExpression()), !dbg !9503
  %12 = and i32 %2, 48, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %12, metadata !9499, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9500, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9501, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %2, metadata !9502, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9503
  %13 = lshr i32 %2, 6, !dbg !9508
  %14 = and i32 %13, 1, !dbg !9508
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9509
  %15 = lshr i32 %2, 7, !dbg !9510
  %16 = and i32 %15, 3, !dbg !9510
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9511
  %17 = lshr i32 %2, 9, !dbg !9512
  %18 = and i32 %17, 3, !dbg !9512
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9513
  %19 = icmp eq i32 %12, 32, !dbg !9514
  br i1 %19, label %20, label %24, !dbg !9516

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9517
  br i1 %21, label %22, label %23, !dbg !9520

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9521
  br label %24, !dbg !9523

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9524
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9526
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9527
  ret void, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9531, metadata !DIExpression()), !dbg !9533
  %2 = shl nuw i32 1, %0, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %2, metadata !9532, metadata !DIExpression()), !dbg !9533
  ret i32 %2, !dbg !9535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9536 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9540, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %1, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9542, metadata !DIExpression()), !dbg !9543
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9544
  %5 = load volatile i32, i32* %4, align 4, !dbg !9544
  %6 = xor i32 %1, -1, !dbg !9544
  %7 = and i32 %5, %6, !dbg !9544
  %8 = mul i32 %2, %1, !dbg !9544
  %9 = or i32 %7, %8, !dbg !9544
  store volatile i32 %9, i32* %4, align 4, !dbg !9544
  ret void, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9546 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9548, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.value(metadata i32 %1, metadata !9549, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.value(metadata i32 %2, metadata !9550, metadata !DIExpression()), !dbg !9551
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9552
  %5 = load volatile i32, i32* %4, align 4, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9553
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9555, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9553
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9556
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9558, !range !3971
  %8 = shl nuw nsw i32 %7, 1, !dbg !9552
  %9 = shl i32 3, %8, !dbg !9552
  %10 = xor i32 %9, -1, !dbg !9552
  %11 = and i32 %5, %10, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9561
  %12 = shl i32 %2, %8, !dbg !9552
  %13 = or i32 %11, %12, !dbg !9552
  store volatile i32 %13, i32* %4, align 4, !dbg !9552
  ret void, !dbg !9563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9566, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.value(metadata i32 %1, metadata !9567, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.value(metadata i32 %2, metadata !9568, metadata !DIExpression()), !dbg !9569
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9570
  %5 = load volatile i32, i32* %4, align 4, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9571
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9573, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9571
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9574
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9576, !range !3971
  %8 = shl nuw nsw i32 %7, 1, !dbg !9570
  %9 = shl i32 3, %8, !dbg !9570
  %10 = xor i32 %9, -1, !dbg !9570
  %11 = and i32 %5, %10, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9579
  %12 = shl i32 %2, %8, !dbg !9570
  %13 = or i32 %11, %12, !dbg !9570
  store volatile i32 %13, i32* %4, align 4, !dbg !9570
  ret void, !dbg !9581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9582 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9584, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9587
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9588
  %5 = load volatile i32, i32* %4, align 4, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9589
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9591, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9592
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9594, !range !3971
  %8 = shl nuw nsw i32 %7, 2, !dbg !9588
  %9 = shl i32 15, %8, !dbg !9588
  %10 = xor i32 %9, -1, !dbg !9588
  %11 = and i32 %5, %10, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9597
  %12 = shl i32 %2, %8, !dbg !9588
  %13 = or i32 %11, %12, !dbg !9588
  store volatile i32 %13, i32* %4, align 4, !dbg !9588
  ret void, !dbg !9599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9600 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9602, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %1, metadata !9603, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 %2, metadata !9604, metadata !DIExpression()), !dbg !9605
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9606
  %5 = load volatile i32, i32* %4, align 4, !dbg !9606
  %6 = lshr i32 %1, 8, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %6, metadata !9355, metadata !DIExpression()) #25, !dbg !9607
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9609, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %7, metadata !9358, metadata !DIExpression()) #25, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %7, metadata !9363, metadata !DIExpression()) #25, !dbg !9610
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9612, !range !3971
  %9 = shl nuw nsw i32 %8, 2, !dbg !9606
  %10 = shl i32 15, %9, !dbg !9606
  %11 = xor i32 %10, -1, !dbg !9606
  %12 = and i32 %5, %11, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %6, metadata !9355, metadata !DIExpression()) #25, !dbg !9613
  call void @llvm.dbg.value(metadata i32 %7, metadata !9358, metadata !DIExpression()) #25, !dbg !9613
  call void @llvm.dbg.value(metadata i32 %7, metadata !9363, metadata !DIExpression()) #25, !dbg !9615
  %13 = shl i32 %2, %9, !dbg !9606
  %14 = or i32 %12, %13, !dbg !9606
  store volatile i32 %14, i32* %4, align 4, !dbg !9606
  ret void, !dbg !9617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9618 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9620, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata i32 %1, metadata !9621, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata i32 %2, metadata !9622, metadata !DIExpression()), !dbg !9623
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9624
  %5 = load volatile i32, i32* %4, align 4, !dbg !9624
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9625
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9627, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9628
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9630, !range !3971
  %8 = shl nuw nsw i32 %7, 1, !dbg !9624
  %9 = shl i32 3, %8, !dbg !9624
  %10 = xor i32 %9, -1, !dbg !9624
  %11 = and i32 %5, %10, !dbg !9624
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()) #25, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %6, metadata !9358, metadata !DIExpression()) #25, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %6, metadata !9363, metadata !DIExpression()) #25, !dbg !9633
  %12 = shl i32 %2, %8, !dbg !9624
  %13 = or i32 %11, %12, !dbg !9624
  store volatile i32 %13, i32* %4, align 4, !dbg !9624
  ret void, !dbg !9635
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9638, metadata !DIExpression()), !dbg !9641
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9642
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9642
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9642
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9639, metadata !DIExpression()), !dbg !9641
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9643
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9644
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9645
  br i1 %6, label %7, label %11, !dbg !9647

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %8, metadata !9640, metadata !DIExpression()), !dbg !9641
  %9 = icmp slt i32 %8, 0, !dbg !9649
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9651
  br label %11, !dbg !9651

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9641
  ret i32 %12, !dbg !9652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9653 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9657, metadata !DIExpression()), !dbg !9658
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9659, !srcloc !9661
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9662
  ret i1 %1, !dbg !9663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9668, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i8 1, metadata !9669, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9670, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 0, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9672, metadata !DIExpression()), !dbg !9673
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9674
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9674
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9674
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9670, metadata !DIExpression()), !dbg !9673
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9675
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9678
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9679
  call void @llvm.dbg.value(metadata i32 %7, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 %7, metadata !9671, metadata !DIExpression()), !dbg !9673
  ret i32 %7, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9683, metadata !DIExpression()), !dbg !9684
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9685
  ret i1 %1, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9691, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %1, metadata !9692, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %2, metadata !9693, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %3, metadata !9694, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9695, metadata !DIExpression()), !dbg !9699
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9700
  %5 = icmp eq i32 %3, 17, !dbg !9701
  br i1 %5, label %6, label %14, !dbg !9702

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %7, metadata !9696, metadata !DIExpression()), !dbg !9704
  %8 = icmp eq i32 %7, 0, !dbg !9705
  %9 = shl nuw i32 1, %1, !dbg !9707
  br i1 %8, label %12, label %10, !dbg !9708

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9709
  br label %14, !dbg !9711

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9712
  br label %14, !dbg !9715

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9716
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i8* %1, metadata !9720, metadata !DIExpression()), !dbg !9723
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9724
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9724
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9721, metadata !DIExpression()), !dbg !9723
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9725
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9725
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9727
  %9 = icmp eq i32 %8, 0, !dbg !9727
  br i1 %9, label %12, label %10, !dbg !9728

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9729
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9731
  br label %12, !dbg !9732

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9733
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9735
  %15 = icmp eq i32 %14, 0, !dbg !9735
  br i1 %15, label %19, label %16, !dbg !9736

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9737
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9738
  store i8 %18, i8* %1, align 1, !dbg !9739
  br label %19, !dbg !9740

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9723
  ret i32 %20, !dbg !9741
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9742 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9744, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i8 %1, metadata !9745, metadata !DIExpression()), !dbg !9748
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9749
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9749
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9746, metadata !DIExpression()), !dbg !9748
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9750

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9751
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9754
  %10 = icmp eq i32 %9, 0, !dbg !9754
  br i1 %10, label %18, label %11, !dbg !9755

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9756, !srcloc !9763
  call void @llvm.dbg.value(metadata i32 undef, metadata !9759, metadata !DIExpression()) #25, !dbg !9764
  call void @llvm.dbg.value(metadata i32 undef, metadata !9760, metadata !DIExpression()) #25, !dbg !9764
  call void @llvm.dbg.value(metadata i32 undef, metadata !9747, metadata !DIExpression()), !dbg !9748
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9765
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9767
  %15 = icmp eq i32 %14, 0, !dbg !9767
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9756
  br i1 %15, label %17, label %19, !dbg !9768

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9759, metadata !DIExpression()) #25, !dbg !9764
  call void @llvm.dbg.value(metadata i32 %16, metadata !9747, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i32 undef, metadata !9769, metadata !DIExpression()) #25, !dbg !9772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9774, !srcloc !9775
  br label %18, !dbg !9776

18:                                               ; preds = %17, %7
  br label %7, !dbg !9751, !llvm.loop !9777

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9756
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9779
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %20, metadata !9769, metadata !DIExpression()) #25, !dbg !9781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9783, !srcloc !9775
  ret void, !dbg !9784
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9790
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9791
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9791
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 0, metadata !9789, metadata !DIExpression()), !dbg !9790
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9792
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9792
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9794
  %8 = icmp ne i32 %7, 0, !dbg !9794
  %9 = zext i1 %8 to i32, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %9, metadata !9789, metadata !DIExpression()), !dbg !9790
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9796
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9798
  %12 = icmp eq i32 %11, 0, !dbg !9798
  %13 = or i32 %9, 2, !dbg !9799
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %14, metadata !9789, metadata !DIExpression()), !dbg !9790
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9800
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9802
  %17 = icmp eq i32 %16, 0, !dbg !9802
  %18 = or i32 %14, 4, !dbg !9803
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9803
  call void @llvm.dbg.value(metadata i32 %19, metadata !9789, metadata !DIExpression()), !dbg !9790
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9804
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9806
  %22 = icmp eq i32 %21, 0, !dbg !9806
  %23 = or i32 %19, 8, !dbg !9807
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9807
  call void @llvm.dbg.value(metadata i32 %24, metadata !9789, metadata !DIExpression()), !dbg !9790
  %25 = and i32 %24, 8, !dbg !9808
  %26 = icmp eq i32 %25, 0, !dbg !9808
  br i1 %26, label %29, label %27, !dbg !9810

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9811
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9813
  br label %29, !dbg !9814

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9815
  %31 = icmp eq i32 %30, 0, !dbg !9815
  br i1 %31, label %34, label %32, !dbg !9817

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9818
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9820
  br label %34, !dbg !9821

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9822
  %36 = icmp eq i32 %35, 0, !dbg !9822
  br i1 %36, label %39, label %37, !dbg !9824

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9825
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9827
  br label %39, !dbg !9828

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9829
  %41 = icmp eq i32 %40, 0, !dbg !9829
  br i1 %41, label %44, label %42, !dbg !9831

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9832
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9834
  br label %44, !dbg !9835

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9836
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9837
  ret i32 %24, !dbg !9838
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9841, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9842, metadata !DIExpression()), !dbg !9850
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9851
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9851
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9851
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9843, metadata !DIExpression()), !dbg !9850
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9852
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9852
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9852
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9844, metadata !DIExpression()), !dbg !9850
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9853
  %10 = load i8, i8* %9, align 4, !dbg !9853
  %11 = zext i8 %10 to i32, !dbg !9854
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %12, metadata !9846, metadata !DIExpression()), !dbg !9850
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9856
  %14 = load i8, i8* %13, align 1, !dbg !9856
  %15 = zext i8 %14 to i32, !dbg !9857
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %16, metadata !9847, metadata !DIExpression()), !dbg !9850
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9859
  %18 = load i8, i8* %17, align 2, !dbg !9859
  %19 = zext i8 %18 to i32, !dbg !9860
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9861
  call void @llvm.dbg.value(metadata i32 %20, metadata !9848, metadata !DIExpression()), !dbg !9850
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9862
  %22 = load i8, i8* %21, align 1, !dbg !9862
  %23 = zext i8 %22 to i32, !dbg !9863
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9864
  call void @llvm.dbg.value(metadata i32 %24, metadata !9849, metadata !DIExpression()), !dbg !9850
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9865

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9867
  br i1 %26, label %69, label %27, !dbg !9869

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9870

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9871
  br i1 %29, label %65, label %30, !dbg !9871

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9873
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9850
  br i1 %31, label %38, label %34, !dbg !9875

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9876
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9876

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9879
  br i1 %37, label %38, label %69, !dbg !9880

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9881
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9882
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9883
  %41 = icmp eq i32 %12, %40, !dbg !9885
  br i1 %41, label %43, label %42, !dbg !9886

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9887
  br label %43, !dbg !9889

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9890
  %45 = icmp eq i32 %16, %44, !dbg !9892
  br i1 %45, label %47, label %46, !dbg !9893

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9894
  br label %47, !dbg !9896

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9897
  %49 = icmp eq i32 %20, %48, !dbg !9899
  br i1 %49, label %51, label %50, !dbg !9900

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9901
  br label %51, !dbg !9903

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9904
  %53 = icmp eq i32 %24, %52, !dbg !9906
  br i1 %53, label %55, label %54, !dbg !9907

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9908
  br label %55, !dbg !9910

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9911
  %57 = load i32, i32* %56, align 4, !dbg !9911
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9913
  %59 = load i32, i32* %58, align 4, !dbg !9913
  %60 = icmp eq i32 %57, %59, !dbg !9914
  br i1 %60, label %63, label %61, !dbg !9915

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9916
  %62 = load i32, i32* %56, align 4, !dbg !9918
  store i32 %62, i32* %58, align 4, !dbg !9919
  br label %63, !dbg !9920

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9921
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9922
  br label %69, !dbg !9923

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9871
  %67 = and i8 %66, 1, !dbg !9871
  %68 = icmp eq i8 %67, 0, !dbg !9871
  br i1 %68, label %30, label %69, !dbg !9871

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9850
  ret i32 %70, !dbg !9924
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9927, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9928, metadata !DIExpression()), !dbg !9930
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9931
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9931
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9929, metadata !DIExpression()), !dbg !9930
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9932
  %7 = load i32, i32* %6, align 4, !dbg !9932
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9933
  store i32 %7, i32* %8, align 4, !dbg !9934
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9935, !range !9936
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9937
  %11 = trunc i32 %10 to i8, !dbg !9937
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9938
  store i8 %11, i8* %12, align 4, !dbg !9939
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9940, !range !9941
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9942
  %15 = trunc i32 %14 to i8, !dbg !9942
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9943
  store i8 %15, i8* %16, align 1, !dbg !9944
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9945
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9946, !range !9936
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9947
  %20 = trunc i32 %19 to i8, !dbg !9947
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9948
  store i8 %20, i8* %21, align 2, !dbg !9949
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9950, !range !9951
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9952
  %24 = trunc i32 %23 to i8, !dbg !9952
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9953
  store i8 %24, i8* %25, align 1, !dbg !9954
  ret i32 0, !dbg !9955
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %1, metadata !9959, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %2, metadata !9960, metadata !DIExpression()), !dbg !9964
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9965
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9965
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9965
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9961, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8 0, metadata !9962, metadata !DIExpression()), !dbg !9964
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9966
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9966
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9968
  %10 = icmp eq i32 %9, 0, !dbg !9968
  br i1 %10, label %30, label %11, !dbg !9969

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9970, !srcloc !9763
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %13, metadata !9759, metadata !DIExpression()) #25, !dbg !9972
  call void @llvm.dbg.value(metadata i32 undef, metadata !9760, metadata !DIExpression()) #25, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %13, metadata !9963, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8 0, metadata !9962, metadata !DIExpression()), !dbg !9964
  %14 = icmp sgt i32 %2, 0, !dbg !9973
  br i1 %14, label %15, label %28, !dbg !9974

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9962, metadata !DIExpression()), !dbg !9964
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9975
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9976
  %20 = icmp eq i32 %19, 0, !dbg !9974
  br i1 %20, label %28, label %21, !dbg !9977

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9978
  %23 = add i8 %17, 1, !dbg !9980
  call void @llvm.dbg.value(metadata i8 %23, metadata !9962, metadata !DIExpression()), !dbg !9964
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9981
  %25 = load i8, i8* %24, align 1, !dbg !9981
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9982
  %26 = zext i8 %23 to i32, !dbg !9983
  %27 = icmp slt i32 %26, %2, !dbg !9973
  br i1 %27, label %15, label %28, !dbg !9974, !llvm.loop !9984

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9983
  call void @llvm.dbg.value(metadata i32 %13, metadata !9769, metadata !DIExpression()) #25, !dbg !9986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9988, !srcloc !9775
  br label %30, !dbg !9989

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9964
  ret i32 %31, !dbg !9990
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9993, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.value(metadata i8* %1, metadata !9994, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.value(metadata i32 %2, metadata !9995, metadata !DIExpression()), !dbg !9998
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9999
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9999
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9999
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9996, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.value(metadata i8 0, metadata !9997, metadata !DIExpression()), !dbg !9998
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10000
  call void @llvm.dbg.value(metadata i8 0, metadata !9997, metadata !DIExpression()), !dbg !9998
  %8 = icmp sgt i32 %2, 0, !dbg !10001
  br i1 %8, label %9, label %28, !dbg !10002

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9997, metadata !DIExpression()), !dbg !9998
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10000
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10003
  %14 = icmp eq i32 %13, 0, !dbg !10002
  br i1 %14, label %28, label %15, !dbg !10004

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10005
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !10007
  %18 = add i8 %11, 1, !dbg !10008
  call void @llvm.dbg.value(metadata i8 %18, metadata !9997, metadata !DIExpression()), !dbg !9998
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10009
  store i8 %17, i8* %19, align 1, !dbg !10010
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10011
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !10013
  %22 = icmp eq i32 %21, 0, !dbg !10013
  br i1 %22, label %25, label %23, !dbg !10014

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10015
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !10017
  br label %25, !dbg !10018

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9997, metadata !DIExpression()), !dbg !9998
  %26 = zext i8 %18 to i32, !dbg !10019
  %27 = icmp slt i32 %26, %2, !dbg !10001
  br i1 %27, label %9, label %28, !dbg !10002, !llvm.loop !10020

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10019
  ret i32 %29, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10025, metadata !DIExpression()), !dbg !10027
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10028
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10028
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10028
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10026, metadata !DIExpression()), !dbg !10027
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10029
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10029
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !10030
  ret void, !dbg !10031
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10034, metadata !DIExpression()), !dbg !10036
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10037
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10037
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10037
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10035, metadata !DIExpression()), !dbg !10036
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10038
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10038
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !10039
  ret void, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10043, metadata !DIExpression()), !dbg !10045
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10046
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10046
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10044, metadata !DIExpression()), !dbg !10045
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10047
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10047
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10048
  %8 = icmp eq i32 %7, 0, !dbg !10048
  br i1 %8, label %14, label %9, !dbg !10049

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10050
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !10051
  %12 = icmp ne i32 %11, 0, !dbg !10049
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10052
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10055, metadata !DIExpression()), !dbg !10057
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10058
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10058
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10058
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10056, metadata !DIExpression()), !dbg !10057
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10059
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10059
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10060
  ret void, !dbg !10061
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10064, metadata !DIExpression()), !dbg !10066
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10067
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10067
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10067
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10065, metadata !DIExpression()), !dbg !10066
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10068
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10068
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10069
  ret void, !dbg !10070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10073, metadata !DIExpression()), !dbg !10075
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10076
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10076
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10076
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10074, metadata !DIExpression()), !dbg !10075
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10077
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10077
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !10078
  ret i32 %7, !dbg !10079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10082, metadata !DIExpression()), !dbg !10084
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10085
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10085
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10085
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10083, metadata !DIExpression()), !dbg !10084
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10086
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10086
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10087
  ret i32 %7, !dbg !10088
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10091, metadata !DIExpression()), !dbg !10093
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10094
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10094
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10094
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10092, metadata !DIExpression()), !dbg !10093
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10095
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10095
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !10096
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10097
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10097
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
    i32 1073772544, label %9
    i32 1073773568, label %9
  ], !dbg !10097

9:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !10099
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10101
  br label %11, !dbg !10102

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10101
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10107, metadata !DIExpression()), !dbg !10109
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10110
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10110
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10110
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10108, metadata !DIExpression()), !dbg !10109
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10111
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10111
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !10112
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10113
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10113
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
    i32 1073772544, label %9
    i32 1073773568, label %9
  ], !dbg !10113

9:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !10115
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10117
  br label %11, !dbg !10118

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10117
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10119
  ret void, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10123, metadata !DIExpression()), !dbg !10125
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10126
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10126
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10126
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10124, metadata !DIExpression()), !dbg !10125
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10127
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10127
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10128
  %8 = icmp eq i32 %7, 0, !dbg !10128
  br i1 %8, label %13, label %9, !dbg !10129

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10130
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !10131
  %12 = icmp eq i32 %11, 0, !dbg !10131
  br i1 %12, label %13, label %22, !dbg !10132

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10133
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !10134
  %16 = icmp eq i32 %15, 0, !dbg !10134
  br i1 %16, label %22, label %17, !dbg !10135

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10136
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !10137
  %20 = icmp ne i32 %19, 0, !dbg !10135
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10139 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10141, metadata !DIExpression()), !dbg !10142
  ret i32 1, !dbg !10143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10146, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10147, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i8* %2, metadata !10148, metadata !DIExpression()), !dbg !10150
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10151
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10151
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10151
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10149, metadata !DIExpression()), !dbg !10150
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10152
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10153
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10154
  store i8* %2, i8** %8, align 4, !dbg !10155
  ret void, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10162, metadata !DIExpression()), !dbg !10163
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10164
  %3 = load volatile i32, i32* %2, align 4, !dbg !10164
  %4 = lshr i32 %3, 5, !dbg !10165
  %5 = and i32 %4, 1, !dbg !10165
  ret i32 %5, !dbg !10166
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10167 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10171
  %3 = load volatile i32, i32* %2, align 4, !dbg !10171
  %4 = lshr i32 %3, 5, !dbg !10172
  %5 = and i32 %4, 1, !dbg !10172
  ret i32 %5, !dbg !10173
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10178
  %3 = load volatile i32, i32* %2, align 4, !dbg !10178
  %4 = lshr i32 %3, 6, !dbg !10179
  %5 = and i32 %4, 1, !dbg !10179
  ret i32 %5, !dbg !10180
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10185
  %3 = load volatile i32, i32* %2, align 4, !dbg !10185
  %4 = lshr i32 %3, 6, !dbg !10186
  %5 = and i32 %4, 1, !dbg !10186
  ret i32 %5, !dbg !10187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10192, metadata !DIExpression()), !dbg !10195
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10196

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10203
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10206, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10203
  %5 = and i32 %4, -2, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %5, metadata !10193, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10217
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10217
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10219, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10217
  %7 = icmp eq i32 %6, 0, !dbg !10196
  br i1 %7, label %8, label %3, !dbg !10208, !llvm.loop !10221

8:                                                ; preds = %3
  ret void, !dbg !10222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10225, metadata !DIExpression()), !dbg !10226
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10227
  %3 = load volatile i32, i32* %2, align 4, !dbg !10227
  %4 = and i32 %3, -65, !dbg !10227
  store volatile i32 %4, i32* %2, align 4, !dbg !10227
  ret void, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10231, metadata !DIExpression()), !dbg !10234
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10235

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10236
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10239, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10236
  %5 = and i32 %4, -257, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %5, metadata !10232, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10242
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10242
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10244, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10242
  %7 = icmp eq i32 %6, 0, !dbg !10235
  br i1 %7, label %8, label %3, !dbg !10240, !llvm.loop !10245

8:                                                ; preds = %3
  ret void, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10249, metadata !DIExpression()), !dbg !10252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10253

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10254
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10257, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10254
  %5 = or i32 %4, 1, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %5, metadata !10250, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10260
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10260
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10262, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10260
  %7 = icmp eq i32 %6, 0, !dbg !10253
  br i1 %7, label %8, label %3, !dbg !10258, !llvm.loop !10263

8:                                                ; preds = %3
  ret void, !dbg !10264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10267, metadata !DIExpression()), !dbg !10268
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10269
  %3 = load volatile i32, i32* %2, align 4, !dbg !10269
  %4 = or i32 %3, 64, !dbg !10269
  store volatile i32 %4, i32* %2, align 4, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10273, metadata !DIExpression()), !dbg !10276
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10277

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10278
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10281, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10278
  %5 = or i32 %4, 256, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %5, metadata !10274, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10284
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10284
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10286, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10284
  %7 = icmp eq i32 %6, 0, !dbg !10277
  br i1 %7, label %8, label %3, !dbg !10282, !llvm.loop !10287

8:                                                ; preds = %3
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10291, metadata !DIExpression()), !dbg !10294
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10295

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10296
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10299, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10296
  %5 = and i32 %4, -33, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %5, metadata !10292, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10302
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10302
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10304, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10302
  %7 = icmp eq i32 %6, 0, !dbg !10295
  br i1 %7, label %8, label %3, !dbg !10300, !llvm.loop !10305

8:                                                ; preds = %3
  ret void, !dbg !10306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10307 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10309, metadata !DIExpression()), !dbg !10312
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10313

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10314
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10317, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10314
  %5 = or i32 %4, 32, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %5, metadata !10310, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10320
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10320
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10322, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10320
  %7 = icmp eq i32 %6, 0, !dbg !10313
  br i1 %7, label %8, label %3, !dbg !10318, !llvm.loop !10323

8:                                                ; preds = %3
  ret void, !dbg !10324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10328
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10329
  %3 = load volatile i32, i32* %2, align 4, !dbg !10329
  %4 = lshr i32 %3, 7, !dbg !10330
  %5 = and i32 %4, 1, !dbg !10330
  ret i32 %5, !dbg !10331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10334, metadata !DIExpression()), !dbg !10337
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10338

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10339
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10342, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10339
  %5 = and i32 %4, -65, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %5, metadata !10335, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10345
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10345
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10347, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10345
  %7 = icmp eq i32 %6, 0, !dbg !10338
  br i1 %7, label %8, label %3, !dbg !10343, !llvm.loop !10348

8:                                                ; preds = %3
  ret void, !dbg !10349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10350 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10352, metadata !DIExpression()), !dbg !10355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10356

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10357
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10360, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10357
  %5 = or i32 %4, 64, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %5, metadata !10353, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10363
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10363
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10365, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10363
  %7 = icmp eq i32 %6, 0, !dbg !10356
  br i1 %7, label %8, label %3, !dbg !10361, !llvm.loop !10366

8:                                                ; preds = %3
  ret void, !dbg !10367
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10368 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10372, metadata !DIExpression()), !dbg !10373
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10374
  %3 = load volatile i32, i32* %2, align 4, !dbg !10374
  %4 = trunc i32 %3 to i8, !dbg !10375
  ret i8 %4, !dbg !10376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10379, metadata !DIExpression()), !dbg !10380
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10381
  %3 = load volatile i32, i32* %2, align 4, !dbg !10381
  %4 = lshr i32 %3, 3, !dbg !10382
  %5 = and i32 %4, 1, !dbg !10382
  ret i32 %5, !dbg !10383
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10384 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10386, metadata !DIExpression()), !dbg !10388
  %3 = bitcast i32* %2 to i8*, !dbg !10389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10389
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10387, metadata !DIExpression()), !dbg !10390
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10391
  %5 = load volatile i32, i32* %4, align 4, !dbg !10391
  store volatile i32 %5, i32* %2, align 4, !dbg !10392
  %6 = load volatile i32, i32* %2, align 4, !dbg !10393
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10394
  %8 = load volatile i32, i32* %7, align 4, !dbg !10394
  store volatile i32 %8, i32* %2, align 4, !dbg !10395
  %9 = load volatile i32, i32* %2, align 4, !dbg !10396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10397
  ret void, !dbg !10397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10398 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i8 %1, metadata !10403, metadata !DIExpression()), !dbg !10404
  %3 = zext i8 %1 to i32, !dbg !10405
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10406
  store volatile i32 %3, i32* %4, align 4, !dbg !10407
  ret void, !dbg !10408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10413, metadata !DIExpression()), !dbg !10415
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10416
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10416
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10416
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10414, metadata !DIExpression()), !dbg !10415
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10417
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10417
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10418
  ret i32 %7, !dbg !10419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10424, metadata !DIExpression()), !dbg !10425
  %2 = icmp eq i32 %0, 1024, !dbg !10426
  %3 = select i1 %2, i32 2, i32 0, !dbg !10426
  %4 = icmp eq i32 %0, 1536, !dbg !10426
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10426
  ret i32 %5, !dbg !10427
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10433
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10433
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10433
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10431, metadata !DIExpression()), !dbg !10432
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10434
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10434
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10435
  ret i32 %7, !dbg !10436
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10441, metadata !DIExpression()), !dbg !10442
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10443
  %3 = icmp ult i32 %2, 4, !dbg !10443
  br i1 %3, label %4, label %7, !dbg !10443

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10443
  %6 = load i32, i32* %5, align 4, !dbg !10443
  br label %7, !dbg !10443

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10444
  ret i32 %8, !dbg !10446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10452
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10452
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10452
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10450, metadata !DIExpression()), !dbg !10451
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10453
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10453
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10454
  ret i32 %7, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10460, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10461, metadata !DIExpression()), !dbg !10462
  %3 = icmp eq i32 %0, 4096, !dbg !10463
  %4 = icmp eq i32 %1, 0, !dbg !10463
  %5 = select i1 %4, i32 4, i32 3, !dbg !10463
  %6 = select i1 %4, i32 3, i32 2, !dbg !10463
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10463
  ret i32 %7, !dbg !10464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10467, metadata !DIExpression()), !dbg !10469
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10470
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10470
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10468, metadata !DIExpression()), !dbg !10469
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10471
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10471
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10472
  ret i32 %7, !dbg !10473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10478, metadata !DIExpression()), !dbg !10479
  %2 = icmp eq i32 %0, 768, !dbg !10480
  %3 = zext i1 %2 to i32, !dbg !10479
  ret i32 %3, !dbg !10482
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10485, metadata !DIExpression()), !dbg !10486
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10487
  %3 = load volatile i32, i32* %2, align 4, !dbg !10487
  %4 = and i32 %3, 768, !dbg !10487
  ret i32 %4, !dbg !10488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10489 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10491, metadata !DIExpression()), !dbg !10492
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10493
  %3 = load volatile i32, i32* %2, align 4, !dbg !10493
  %4 = and i32 %3, 4096, !dbg !10493
  ret i32 %4, !dbg !10494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10497, metadata !DIExpression()), !dbg !10498
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10499
  %3 = load volatile i32, i32* %2, align 4, !dbg !10499
  %4 = and i32 %3, 12288, !dbg !10499
  ret i32 %4, !dbg !10500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10503, metadata !DIExpression()), !dbg !10504
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10505
  %3 = load volatile i32, i32* %2, align 4, !dbg !10505
  %4 = and i32 %3, 1536, !dbg !10505
  ret i32 %4, !dbg !10506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10511, metadata !DIExpression()), !dbg !10512
  %2 = icmp eq i32 %0, 2, !dbg !10513
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10513
  %4 = icmp eq i32 %0, 1, !dbg !10513
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10513
  ret i32 %5, !dbg !10514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10519, metadata !DIExpression()), !dbg !10520
  %2 = icmp ult i32 %0, 3, !dbg !10521
  br i1 %2, label %3, label %6, !dbg !10521

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10521
  %5 = load i32, i32* %4, align 4, !dbg !10521
  br label %6, !dbg !10521

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10522
  ret i32 %7, !dbg !10524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 %1, metadata !10530, metadata !DIExpression()), !dbg !10531
  %3 = icmp eq i32 %0, 4, !dbg !10532
  %4 = icmp eq i32 %1, 0, !dbg !10532
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10532
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10532
  ret i32 %6, !dbg !10533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %2 = icmp eq i32 %0, 1, !dbg !10540
  %3 = select i1 %2, i32 768, i32 0, !dbg !10539
  ret i32 %3, !dbg !10542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10545, metadata !DIExpression()), !dbg !10546
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10547
  %3 = load volatile i32, i32* %2, align 4, !dbg !10547
  %4 = and i32 %3, -8193, !dbg !10547
  store volatile i32 %4, i32* %2, align 4, !dbg !10547
  ret void, !dbg !10548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10553, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata i32 %1, metadata !10554, metadata !DIExpression()), !dbg !10556
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10557
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10557
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10555, metadata !DIExpression()), !dbg !10556
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10558
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10558
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10559
  ret void, !dbg !10560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10561 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10563, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i32 %1, metadata !10564, metadata !DIExpression()), !dbg !10566
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10567
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10567
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10567
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10565, metadata !DIExpression()), !dbg !10566
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10568
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10568
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10569
  ret void, !dbg !10570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10573, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 %1, metadata !10574, metadata !DIExpression()), !dbg !10576
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10577
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10577
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10577
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10575, metadata !DIExpression()), !dbg !10576
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10578
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10578
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10579
  ret void, !dbg !10580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10581 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10583, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()), !dbg !10586
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10587
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10587
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10587
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10585, metadata !DIExpression()), !dbg !10586
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10588
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10588
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10589
  ret void, !dbg !10590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10591 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10593, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i32 %1, metadata !10594, metadata !DIExpression()), !dbg !10598
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10599
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10599
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10595, metadata !DIExpression()), !dbg !10598
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10600
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10600
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10600
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10596, metadata !DIExpression()), !dbg !10598
  %10 = bitcast i32* %3 to i8*, !dbg !10601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10601
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10602
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10602
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10606
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10606
  %15 = load i8*, i8** %14, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata i32* %3, metadata !10597, metadata !DIExpression(DW_OP_deref)), !dbg !10598
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10607
  %17 = icmp slt i32 %16, 0, !dbg !10608
  br i1 %17, label %23, label %18, !dbg !10609

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10610
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10610
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10611
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10612
  %22 = load i32, i32* %3, align 4, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %22, metadata !10597, metadata !DIExpression()), !dbg !10598
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10614
  br label %23, !dbg !10615

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10615
  ret void, !dbg !10615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10620
  %3 = load volatile i32, i32* %2, align 4, !dbg !10620
  %4 = or i32 %3, 8192, !dbg !10620
  store volatile i32 %4, i32* %2, align 4, !dbg !10620
  ret void, !dbg !10621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10624, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i8* %1, metadata !10625, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32* %2, metadata !10626, metadata !DIExpression()), !dbg !10628
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10629
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10629
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10629
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10627, metadata !DIExpression()), !dbg !10628
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10630
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10630
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10632
  br i1 %9, label %12, label %10, !dbg !10633

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10634
  br label %12, !dbg !10635

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10628
  ret i32 %13, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10644
  %3 = load volatile i32, i32* %2, align 4, !dbg !10644
  %4 = and i32 %3, -32769, !dbg !10644
  store volatile i32 %4, i32* %2, align 4, !dbg !10644
  ret void, !dbg !10645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10650, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i32 %1, metadata !10651, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i32 0, metadata !10652, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i32 %2, metadata !10653, metadata !DIExpression()), !dbg !10654
  %4 = zext i32 %1 to i64, !dbg !10655
  %5 = mul nuw nsw i64 %4, 25, !dbg !10655
  %6 = zext i32 %2 to i64, !dbg !10655
  %7 = shl nuw nsw i64 %6, 2, !dbg !10655
  %8 = udiv i64 %5, %7, !dbg !10655
  %9 = trunc i64 %8 to i32, !dbg !10655
  %10 = udiv i32 %9, 100, !dbg !10655
  %11 = shl nuw nsw i32 %10, 4, !dbg !10655
  %12 = mul i32 %10, -100, !dbg !10655
  %13 = add i32 %12, %9, !dbg !10655
  %14 = shl i32 %13, 4, !dbg !10655
  %15 = add i32 %14, 50, !dbg !10655
  %16 = udiv i32 %15, 100, !dbg !10655
  %17 = and i32 %16, 240, !dbg !10655
  %18 = add nuw nsw i32 %17, %11, !dbg !10655
  %19 = and i32 %16, 15, !dbg !10655
  %20 = and i32 %18, 65520, !dbg !10658
  %21 = or i32 %20, %19, !dbg !10658
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10659
  store volatile i32 %21, i32* %22, align 4, !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10662 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10664, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %1, metadata !10665, metadata !DIExpression()), !dbg !10666
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10667
  %4 = load volatile i32, i32* %3, align 4, !dbg !10667
  %5 = and i32 %4, -769, !dbg !10667
  %6 = or i32 %5, %1, !dbg !10667
  store volatile i32 %6, i32* %3, align 4, !dbg !10667
  ret void, !dbg !10668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10671, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata i32 %1, metadata !10672, metadata !DIExpression()), !dbg !10673
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10674
  %4 = load volatile i32, i32* %3, align 4, !dbg !10674
  %5 = and i32 %4, -4097, !dbg !10674
  %6 = or i32 %5, %1, !dbg !10674
  store volatile i32 %6, i32* %3, align 4, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %1, metadata !10679, metadata !DIExpression()), !dbg !10680
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10681
  %4 = load volatile i32, i32* %3, align 4, !dbg !10681
  %5 = and i32 %4, -12289, !dbg !10681
  %6 = or i32 %5, %1, !dbg !10681
  store volatile i32 %6, i32* %3, align 4, !dbg !10681
  ret void, !dbg !10682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10685, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 %1, metadata !10686, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10688
  %4 = load volatile i32, i32* %3, align 4, !dbg !10688
  %5 = and i32 %4, -1537, !dbg !10688
  %6 = or i32 %5, %1, !dbg !10688
  store volatile i32 %6, i32* %3, align 4, !dbg !10688
  ret void, !dbg !10689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10692, metadata !DIExpression()), !dbg !10693
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10694
  %3 = load volatile i32, i32* %2, align 4, !dbg !10694
  %4 = and i32 %3, 1, !dbg !10694
  ret i32 %4, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10696 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10698, metadata !DIExpression()), !dbg !10699
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10700
  %3 = load volatile i32, i32* %2, align 4, !dbg !10700
  %4 = lshr i32 %3, 1, !dbg !10701
  %5 = and i32 %4, 1, !dbg !10701
  ret i32 %5, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10705, metadata !DIExpression()), !dbg !10706
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10707
  %3 = load volatile i32, i32* %2, align 4, !dbg !10707
  %4 = lshr i32 %3, 8, !dbg !10708
  %5 = and i32 %4, 1, !dbg !10708
  ret i32 %5, !dbg !10709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10712, metadata !DIExpression()), !dbg !10713
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10714
  store volatile i32 -257, i32* %2, align 4, !dbg !10714
  ret void, !dbg !10715
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10716 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10718, metadata !DIExpression()), !dbg !10720
  %3 = bitcast i32* %2 to i8*, !dbg !10721
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10721
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10719, metadata !DIExpression()), !dbg !10722
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10723
  %5 = load volatile i32, i32* %4, align 4, !dbg !10723
  store volatile i32 %5, i32* %2, align 4, !dbg !10724
  %6 = load volatile i32, i32* %2, align 4, !dbg !10725
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10726
  %8 = load volatile i32, i32* %7, align 4, !dbg !10726
  store volatile i32 %8, i32* %2, align 4, !dbg !10727
  %9 = load volatile i32, i32* %2, align 4, !dbg !10728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10729
  ret void, !dbg !10729
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10730 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10732, metadata !DIExpression()), !dbg !10734
  %3 = bitcast i32* %2 to i8*, !dbg !10735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10735
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10733, metadata !DIExpression()), !dbg !10736
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10737
  %5 = load volatile i32, i32* %4, align 4, !dbg !10737
  store volatile i32 %5, i32* %2, align 4, !dbg !10738
  %6 = load volatile i32, i32* %2, align 4, !dbg !10739
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10740
  %8 = load volatile i32, i32* %7, align 4, !dbg !10740
  store volatile i32 %8, i32* %2, align 4, !dbg !10741
  %9 = load volatile i32, i32* %2, align 4, !dbg !10742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10743
  ret void, !dbg !10743
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10744 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10746, metadata !DIExpression()), !dbg !10748
  %3 = bitcast i32* %2 to i8*, !dbg !10749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10747, metadata !DIExpression()), !dbg !10750
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10751
  %5 = load volatile i32, i32* %4, align 4, !dbg !10751
  store volatile i32 %5, i32* %2, align 4, !dbg !10752
  %6 = load volatile i32, i32* %2, align 4, !dbg !10753
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10754
  %8 = load volatile i32, i32* %7, align 4, !dbg !10754
  store volatile i32 %8, i32* %2, align 4, !dbg !10755
  %9 = load volatile i32, i32* %2, align 4, !dbg !10756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10757
  ret void, !dbg !10757
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1746, metadata !DIExpression()), !dbg !10758
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10759
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10761
  ret void, !dbg !10761
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1795, metadata !DIExpression()), !dbg !10762
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #26, !dbg !10763
  tail call void @arch_irq_enable(i32 noundef 38) #26, !dbg !10765
  ret void, !dbg !10765
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1812, metadata !DIExpression()), !dbg !10766
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #26, !dbg !10767
  tail call void @arch_irq_enable(i32 noundef 39) #26, !dbg !10769
  ret void, !dbg !10769
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_3(%struct.device* nocapture noundef readnone %0) #1 !dbg !1827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1829, metadata !DIExpression()), !dbg !10770
  tail call void @z_arm_irq_priority_set(i32 noundef 82, i32 noundef 0, i32 noundef 0) #26, !dbg !10771
  tail call void @arch_irq_enable(i32 noundef 82) #26, !dbg !10773
  ret void, !dbg !10773
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_4(%struct.device* nocapture noundef readnone %0) #1 !dbg !1844 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1846, metadata !DIExpression()), !dbg !10774
  tail call void @z_arm_irq_priority_set(i32 noundef 83, i32 noundef 0, i32 noundef 0) #26, !dbg !10775
  tail call void @arch_irq_enable(i32 noundef 83) #26, !dbg !10777
  ret void, !dbg !10777
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10780, metadata !DIExpression()), !dbg !10782
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10783
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10783
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10783
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10781, metadata !DIExpression()), !dbg !10782
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10784
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10784
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10786
  br i1 %7, label %11, label %8, !dbg !10787

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10788
  %10 = load i8*, i8** %9, align 4, !dbg !10788
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10790
  br label %11, !dbg !10791

11:                                               ; preds = %8, %1
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10795, metadata !DIExpression()), !dbg !10801
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10802
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10802
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10802
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10796, metadata !DIExpression()), !dbg !10801
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10803
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10803
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10803
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10797, metadata !DIExpression()), !dbg !10801
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10804
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10805
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10805
  %10 = tail call fastcc zeroext i1 @device_is_ready.69(%struct.device* noundef %9) #27, !dbg !10807
  br i1 %10, label %11, label %51, !dbg !10808

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10809
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10810
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10810
  %15 = load i8*, i8** %14, align 4, !dbg !10810
  %16 = tail call fastcc i32 @clock_control_on.70(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %16, metadata !10800, metadata !DIExpression()), !dbg !10801
  %17 = icmp eq i32 %16, 0, !dbg !10812
  br i1 %17, label %18, label %51, !dbg !10814

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10815
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10815
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %21, metadata !10800, metadata !DIExpression()), !dbg !10801
  %22 = icmp slt i32 %21, 0, !dbg !10817
  br i1 %22, label %51, label %23, !dbg !10819

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10820
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10820
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10821
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10822
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10823
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10824
  %28 = load i32, i32* %27, align 4, !dbg !10824
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10826

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10798, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 4096, metadata !10799, metadata !DIExpression()), !dbg !10801
  br label %31, !dbg !10827

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10798, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 0, metadata !10799, metadata !DIExpression()), !dbg !10801
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10830
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10830
  call void @llvm.dbg.value(metadata i32 %33, metadata !10799, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 %32, metadata !10798, metadata !DIExpression()), !dbg !10801
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10831
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10832
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10833
  %36 = load i8, i8* %35, align 4, !dbg !10833, !range !6456
  %37 = icmp eq i8 %36, 0, !dbg !10833
  br i1 %37, label %39, label %38, !dbg !10835

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10836
  br label %39, !dbg !10838

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10839
  %41 = load i32, i32* %40, align 4, !dbg !10839
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10840
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10841
  %43 = load i8, i8* %42, align 4, !dbg !10841, !range !6456
  %44 = icmp eq i8 %43, 0, !dbg !10841
  br i1 %44, label %47, label %45, !dbg !10843

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10844
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10846
  br label %47, !dbg !10847

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10848
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10849
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10850
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10850
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10851
  br label %51, !dbg !10852

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10801
  ret i32 %52, !dbg !10853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10856, metadata !DIExpression()), !dbg !10860
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10861
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10861
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10858, metadata !DIExpression()), !dbg !10860
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10862
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10871, !srcloc !10873
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.71(%struct.device* noundef %0) #27, !dbg !10874
  ret i1 %2, !dbg !10875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.70(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10878, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i8* %1, metadata !10879, metadata !DIExpression()), !dbg !10881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10882
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10882
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10880, metadata !DIExpression()), !dbg !10881
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10883
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10883
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10884
  ret i32 %8, !dbg !10885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10886 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10890, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i8 0, metadata !10891, metadata !DIExpression()), !dbg !10894
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10895
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10893, metadata !DIExpression(DW_OP_deref)), !dbg !10894
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10896
  call void @llvm.dbg.value(metadata i32 %4, metadata !10892, metadata !DIExpression()), !dbg !10894
  %5 = icmp slt i32 %4, 0, !dbg !10897
  br i1 %5, label %9, label %6, !dbg !10899

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10900
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10893, metadata !DIExpression()), !dbg !10894
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10901
  br label %9, !dbg !10902

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10903
  ret i32 %10, !dbg !10903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10906, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 12, metadata !10907, metadata !DIExpression()), !dbg !10910
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10911

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10197, metadata !DIExpression()) #25, !dbg !10912
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10915, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()) #25, !dbg !10912
  %5 = or i32 %4, 12, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %5, metadata !10908, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()) #25, !dbg !10918
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10918
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10920, !srcloc !10220
  call void @llvm.dbg.value(metadata i32 %6, metadata !10216, metadata !DIExpression()) #25, !dbg !10918
  %7 = icmp eq i32 %6, 0, !dbg !10911
  br i1 %7, label %8, label %3, !dbg !10916, !llvm.loop !10921

8:                                                ; preds = %3
  ret void, !dbg !10922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10925, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 %1, metadata !10926, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 %2, metadata !10927, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 0, metadata !10928, metadata !DIExpression()), !dbg !10929
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10930
  %5 = load volatile i32, i32* %4, align 4, !dbg !10930
  %6 = and i32 %5, -5633, !dbg !10930
  %7 = or i32 %2, %1, !dbg !10930
  %8 = or i32 %7, %6, !dbg !10930
  store volatile i32 %8, i32* %4, align 4, !dbg !10930
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10931
  %10 = load volatile i32, i32* %9, align 4, !dbg !10931
  %11 = and i32 %10, -12289, !dbg !10931
  store volatile i32 %11, i32* %9, align 4, !dbg !10931
  ret void, !dbg !10932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10933 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10935, metadata !DIExpression()), !dbg !10936
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10937
  %3 = load volatile i32, i32* %2, align 4, !dbg !10937
  %4 = or i32 %3, 8, !dbg !10937
  store volatile i32 %4, i32* %2, align 4, !dbg !10937
  ret void, !dbg !10938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10939 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10943, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10944, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 0, metadata !10945, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10947
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10947
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10948
  %5 = load i8, i8* %4, align 4, !dbg !10948
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10949
  ret i32 %6, !dbg !10950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.71(%struct.device* noundef %0) unnamed_addr #1 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10955
  ret i1 %2, !dbg !10956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10957 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  tail call fastcc void @__NVIC_SetPriority.73() #27, !dbg !10961
  store i32 16799, i32* @last_load, align 4, !dbg !10962
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10963
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10964
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10965
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10966
  %3 = or i32 %2, 7, !dbg !10966
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10966
  ret i32 0, !dbg !10967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.73() unnamed_addr #15 !dbg !10968 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10970, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 1, metadata !10971, metadata !DIExpression()), !dbg !10972
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10973
  ret void, !dbg !10976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10977 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10979, metadata !DIExpression()), !dbg !10981
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10982
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10983
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10984
  %5 = add i32 %4, %3, !dbg !10984
  store i32 %5, i32* @cycle_count, align 4, !dbg !10984
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10985
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10986
  %7 = sub i32 %5, %6, !dbg !10989
  %8 = udiv i32 %7, 16800, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %8, metadata !10980, metadata !DIExpression()), !dbg !10981
  %9 = mul nuw i32 %8, 16800, !dbg !10991
  %10 = add i32 %9, %6, !dbg !10992
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10992
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10993
  tail call void @z_arm_int_exit() #26, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10996 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10998, metadata !DIExpression()), !dbg !11002
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %2, metadata !10999, metadata !DIExpression()), !dbg !11002
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %3, metadata !11000, metadata !DIExpression()), !dbg !11002
  %4 = and i32 %2, 65536, !dbg !11005
  %5 = icmp ne i32 %4, 0, !dbg !11005
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11007
  %8 = load i32, i32* @last_load, align 4, !dbg !11002
  br i1 %7, label %9, label %13, !dbg !11007

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11008
  %11 = add i32 %10, %8, !dbg !11008
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11008
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11010
  br label %13, !dbg !11011

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11012
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11013
  %16 = add i32 %14, %15, !dbg !11014
  ret i32 %16, !dbg !11015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11020, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i1 %1, metadata !11021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11033
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11034
  br i1 %4, label %5, label %8, !dbg !11034

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11036
  %7 = and i32 %6, -2, !dbg !11036
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11036
  store i32 -16777216, i32* @last_load, align 4, !dbg !11038
  br label %54, !dbg !11039

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %9, metadata !11025, metadata !DIExpression()), !dbg !11033
  br i1 %3, label %18, label %10, !dbg !11041

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11041
  call void @llvm.dbg.value(metadata i32 undef, metadata !11020, metadata !DIExpression()), !dbg !11033
  %12 = icmp slt i32 %11, 1, !dbg !11042
  br i1 %12, label %18, label %13, !dbg !11042

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11042
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11042
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11042
  %17 = add nuw nsw i32 %16, 16799, !dbg !11042
  br label %18, !dbg !11042

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11020, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11043, metadata !DIExpression()) #25, !dbg !11050
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11052, !srcloc !11058
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %21, metadata !11055, metadata !DIExpression()) #25, !dbg !11059
  call void @llvm.dbg.value(metadata i32 undef, metadata !11056, metadata !DIExpression()) #25, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %21, metadata !11049, metadata !DIExpression()) #25, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %21, metadata !11026, metadata !DIExpression()), !dbg !11033
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %22, metadata !11031, metadata !DIExpression()), !dbg !11033
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %23, metadata !11023, metadata !DIExpression()), !dbg !11033
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11062
  %25 = add i32 %24, %22, !dbg !11062
  store i32 %25, i32* @cycle_count, align 4, !dbg !11062
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11063
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11064
  %27 = sub i32 %25, %26, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %27, metadata !11032, metadata !DIExpression()), !dbg !11033
  %28 = icmp slt i32 %27, 0, !dbg !11066
  br i1 %28, label %38, label %29, !dbg !11068

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11022, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i32 undef, metadata !11022, metadata !DIExpression()), !dbg !11033
  %30 = add nuw i32 %19, %27, !dbg !11069
  %31 = urem i32 %30, 16800, !dbg !11071
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11022, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11033
  %32 = sub nuw nsw i32 %19, %31, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %32, metadata !11022, metadata !DIExpression()), !dbg !11033
  %33 = icmp ugt i32 %32, 1050, !dbg !11073
  br i1 %33, label %34, label %36, !dbg !11073

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11022, metadata !DIExpression()), !dbg !11033
  %35 = icmp ugt i32 %32, 16749600, !dbg !11074
  br i1 %35, label %38, label %36, !dbg !11076

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11077
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %40, metadata !11024, metadata !DIExpression()), !dbg !11033
  %41 = add nsw i32 %39, -1, !dbg !11079
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11080
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11081
  %42 = icmp ult i32 %23, %40, !dbg !11082
  br i1 %42, label %43, label %48, !dbg !11084

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11085
  %45 = add i32 %23, %9, !dbg !11087
  %46 = sub i32 %45, %40, !dbg !11088
  %47 = add i32 %46, %44, !dbg !11085
  br label %52, !dbg !11089

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11090
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11092
  %51 = add i32 %49, %50, !dbg !11092
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11093
  store i32 %53, i32* @cycle_count, align 4, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %21, metadata !11094, metadata !DIExpression()) #25, !dbg !11100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11099, metadata !DIExpression()) #25, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %21, metadata !11102, metadata !DIExpression()) #25, !dbg !11105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !11107, !srcloc !11108
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11043, metadata !DIExpression()) #25, !dbg !11114
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11116, !srcloc !11058
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %2, metadata !11055, metadata !DIExpression()) #25, !dbg !11118
  call void @llvm.dbg.value(metadata i32 undef, metadata !11056, metadata !DIExpression()) #25, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %2, metadata !11049, metadata !DIExpression()) #25, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %2, metadata !11112, metadata !DIExpression()), !dbg !11119
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !11120
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11121
  %5 = add i32 %4, %3, !dbg !11122
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11123
  %7 = sub i32 %5, %6, !dbg !11124
  call void @llvm.dbg.value(metadata i32 %7, metadata !11113, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.value(metadata i32 %2, metadata !11094, metadata !DIExpression()) #25, !dbg !11125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11099, metadata !DIExpression()) #25, !dbg !11125
  call void @llvm.dbg.value(metadata i32 %2, metadata !11102, metadata !DIExpression()) #25, !dbg !11127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11129, !srcloc !11108
  %8 = udiv i32 %7, 16800, !dbg !11130
  ret i32 %8, !dbg !11131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11043, metadata !DIExpression()) #25, !dbg !11136
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11138, !srcloc !11058
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %2, metadata !11055, metadata !DIExpression()) #25, !dbg !11140
  call void @llvm.dbg.value(metadata i32 undef, metadata !11056, metadata !DIExpression()) #25, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %2, metadata !11049, metadata !DIExpression()) #25, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %2, metadata !11134, metadata !DIExpression()), !dbg !11141
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !11142
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11143
  %5 = add i32 %4, %3, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %5, metadata !11135, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %2, metadata !11094, metadata !DIExpression()) #25, !dbg !11145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11099, metadata !DIExpression()) #25, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %2, metadata !11102, metadata !DIExpression()) #25, !dbg !11147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11149, !srcloc !11108
  ret i32 %5, !dbg !11150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11151 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11152
  %2 = icmp eq i32 %1, -16777216, !dbg !11154
  br i1 %2, label %3, label %6, !dbg !11155

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11156
  %5 = or i32 %4, 1, !dbg !11156
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11156
  br label %6, !dbg !11158

6:                                                ; preds = %3, %0
  ret void, !dbg !11159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11160 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11161
  %2 = and i32 %1, -2, !dbg !11161
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11161
  ret void, !dbg !11162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11189, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i8 %1, metadata !11190, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11191, metadata !DIExpression()), !dbg !11192
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11193
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11193
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11192
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11194
  %8 = load i8, i8* %6, align 4, !dbg !11195
  %9 = zext i8 %8 to i32, !dbg !11196
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11196
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11197
  br i1 %11, label %18, label %24, !dbg !11198

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11192
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11194
  %14 = load i8, i8* %6, align 4, !dbg !11195
  %15 = zext i8 %14 to i32, !dbg !11196
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11196
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11197
  br i1 %17, label %18, label %24, !dbg !11198, !llvm.loop !11199

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11201
  %21 = load i8, i8* %20, align 1, !dbg !11201
  %22 = icmp eq i8 %21, %1, !dbg !11204
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11205
  br i1 %22, label %24, label %12, !dbg !11206

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11192
  ret i32 %25, !dbg !11207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11208 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11219, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i8 %1, metadata !11220, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i32 %2, metadata !11221, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i32 0, metadata !11224, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i32 0, metadata !11225, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.value(metadata i8 0, metadata !11226, metadata !DIExpression()), !dbg !11236
  %4 = icmp eq i8 %1, 0, !dbg !11237
  br i1 %4, label %35, label %5, !dbg !11238

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11237
  br label %9, !dbg !11238

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11226, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.value(metadata i32 %29, metadata !11224, metadata !DIExpression()), !dbg !11235
  %8 = icmp eq i32 %34, %6, !dbg !11237
  br i1 %8, label %35, label %9, !dbg !11238, !llvm.loop !11239

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11226, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.value(metadata i32 %11, metadata !11224, metadata !DIExpression()), !dbg !11235
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11241
  %13 = load i32, i32* %12, align 4, !dbg !11241
  call void @llvm.dbg.value(metadata i32 %13, metadata !11223, metadata !DIExpression()), !dbg !11235
  %14 = and i32 %13, 31, !dbg !11242
  %15 = icmp ult i32 %14, 16, !dbg !11243
  br i1 %15, label %16, label %20, !dbg !11244

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11245
  %18 = load i32, i32* %17, align 4, !dbg !11245
  %19 = or i32 %18, 32, !dbg !11247
  call void @llvm.dbg.value(metadata i32 %19, metadata !11224, metadata !DIExpression()), !dbg !11235
  br label %28, !dbg !11248

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11249

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11250
  %23 = load i32, i32* %22, align 4, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %23, metadata !11228, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11251
  %24 = lshr i32 %23, 7, !dbg !11252
  %25 = and i32 %24, 16, !dbg !11252
  %26 = or i32 %25, %23, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %26, metadata !11224, metadata !DIExpression()), !dbg !11235
  br label %28, !dbg !11253

27:                                               ; preds = %20
  br label %28, !dbg !11254

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11235
  call void @llvm.dbg.value(metadata i32 %29, metadata !11224, metadata !DIExpression()), !dbg !11235
  %30 = lshr i32 %13, 5, !dbg !11254
  %31 = and i32 %30, 255, !dbg !11254
  call void @llvm.dbg.value(metadata i32 %31, metadata !11222, metadata !DIExpression()), !dbg !11235
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %32, metadata !11225, metadata !DIExpression()), !dbg !11235
  %33 = icmp slt i32 %32, 0, !dbg !11256
  %34 = add nuw nsw i32 %10, 1, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %34, metadata !11226, metadata !DIExpression()), !dbg !11236
  br i1 %33, label %35, label %7, !dbg !11259

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %1, metadata !11266, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %2, metadata !11267, metadata !DIExpression()), !dbg !11269
  %4 = icmp ugt i32 %0, 175, !dbg !11270
  br i1 %4, label %13, label %5, !dbg !11272

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11273
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11274
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11274
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11268, metadata !DIExpression()), !dbg !11269
  %9 = tail call fastcc zeroext i1 @device_is_ready.78(%struct.device* noundef %8) #27, !dbg !11275
  br i1 %9, label %10, label %13, !dbg !11277

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !11278
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !11279
  br label %13, !dbg !11280

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !11269
  ret i32 %14, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.78(%struct.device* noundef %0) unnamed_addr #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11286, metadata !DIExpression()), !dbg !11287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11288, !srcloc !11290
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) #27, !dbg !11291
  ret i1 %2, !dbg !11292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !11293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11295, metadata !DIExpression()), !dbg !11296
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11297
  ret i1 %2, !dbg !11298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11299 {
  ret void, !dbg !11300
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11301 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11303, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 0, metadata !11304, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 2, metadata !11305, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 0, metadata !11306, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i32 2, metadata !11307, metadata !DIExpression()), !dbg !11308
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11309
  %2 = and i32 %1, 12, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %2, metadata !11303, metadata !DIExpression()), !dbg !11308
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11311

3:                                                ; preds = %0
  br label %21, !dbg !11312

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %5, metadata !11306, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11308
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11315
  %7 = and i32 %6, 63, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %7, metadata !11307, metadata !DIExpression()), !dbg !11308
  %8 = and i32 %5, 4194304, !dbg !11317
  %9 = icmp eq i32 %8, 0, !dbg !11317
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !11319
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11319
  %13 = lshr i32 %12, 6, !dbg !11319
  %14 = and i32 %13, 511, !dbg !11319
  %15 = mul i32 %14, %11, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %15, metadata !11304, metadata !DIExpression()), !dbg !11308
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11320
  %17 = lshr i32 %16, 15, !dbg !11321
  %18 = and i32 %17, 6, !dbg !11321
  %19 = add nuw nsw i32 %18, 2, !dbg !11321
  call void @llvm.dbg.value(metadata i32 %19, metadata !11305, metadata !DIExpression()), !dbg !11308
  %20 = udiv i32 %15, %19, !dbg !11322
  br label %21, !dbg !11323

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11324
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11325
  %24 = lshr i32 %23, 4, !dbg !11326
  %25 = and i32 %24, 15, !dbg !11326
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11327
  %27 = load i8, i8* %26, align 1, !dbg !11327
  %28 = zext i8 %27 to i32, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %28, metadata !11303, metadata !DIExpression()), !dbg !11308
  %29 = lshr i32 %22, %28, !dbg !11328
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11328
  ret void, !dbg !11329
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11330 {
  ret i32 0, !dbg !11335
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11336 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11362, metadata !DIExpression()), !dbg !11373
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11374
  br i1 %3, label %311, label %4, !dbg !11376

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11377
  %6 = load i32, i32* %5, align 4, !dbg !11377
  %7 = and i32 %6, 1, !dbg !11379
  %8 = icmp eq i32 %7, 0, !dbg !11380
  br i1 %8, label %66, label %9, !dbg !11381

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11382
  %11 = and i32 %10, 12, !dbg !11382
  %12 = icmp eq i32 %11, 4, !dbg !11385
  br i1 %12, label %21, label %13, !dbg !11386

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11387
  %15 = and i32 %14, 12, !dbg !11387
  %16 = icmp eq i32 %15, 8, !dbg !11388
  br i1 %16, label %17, label %29, !dbg !11389

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11390
  %19 = and i32 %18, 4194304, !dbg !11391
  %20 = icmp eq i32 %19, 0, !dbg !11392
  br i1 %20, label %29, label %21, !dbg !11393

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11394
  %23 = and i32 %22, 131072, !dbg !11394
  %24 = icmp eq i32 %23, 0, !dbg !11394
  br i1 %24, label %66, label %25, !dbg !11397

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11398
  %27 = load i32, i32* %26, align 4, !dbg !11398
  %28 = icmp eq i32 %27, 0, !dbg !11399
  br i1 %28, label %311, label %66, !dbg !11400

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11401
  %31 = load i32, i32* %30, align 4, !dbg !11401
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11405

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11406
  %34 = or i32 %33, 65536, !dbg !11406
  br label %45, !dbg !11406

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11408
  %37 = or i32 %36, 262144, !dbg !11408
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11408
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11408
  %39 = or i32 %38, 65536, !dbg !11408
  br label %45, !dbg !11408

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11411
  %42 = and i32 %41, -65537, !dbg !11411
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11411
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11411
  %44 = and i32 %43, -262145, !dbg !11411
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11413
  %47 = load i32, i32* %30, align 4, !dbg !11414
  %48 = icmp eq i32 %47, 0, !dbg !11416
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !11417
  call void @llvm.dbg.value(metadata i32 %49, metadata !11363, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 %49, metadata !11363, metadata !DIExpression()), !dbg !11373
  br i1 %48, label %58, label %50, !dbg !11418

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11419
  %52 = and i32 %51, 131072, !dbg !11421
  %53 = icmp eq i32 %52, 0, !dbg !11421
  br i1 %53, label %54, label %66, !dbg !11422

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !11423
  %56 = sub i32 %55, %49, !dbg !11426
  %57 = icmp ugt i32 %56, 100, !dbg !11427
  br i1 %57, label %311, label %50, !dbg !11428, !llvm.loop !11429

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11431
  %60 = and i32 %59, 131072, !dbg !11431
  %61 = icmp eq i32 %60, 0, !dbg !11431
  br i1 %61, label %66, label %62, !dbg !11433

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11434
  %64 = sub i32 %63, %49, !dbg !11437
  %65 = icmp ugt i32 %64, 100, !dbg !11438
  br i1 %65, label %311, label %58, !dbg !11439, !llvm.loop !11440

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11442
  %68 = and i32 %67, 2, !dbg !11444
  %69 = icmp eq i32 %68, 0, !dbg !11445
  br i1 %69, label %121, label %70, !dbg !11446

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11447
  %72 = and i32 %71, 12, !dbg !11447
  %73 = icmp eq i32 %72, 0, !dbg !11450
  br i1 %73, label %82, label %74, !dbg !11451

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11452
  %76 = and i32 %75, 12, !dbg !11452
  %77 = icmp eq i32 %76, 8, !dbg !11453
  br i1 %77, label %78, label %90, !dbg !11454

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11455
  %80 = and i32 %79, 4194304, !dbg !11456
  %81 = icmp eq i32 %80, 0, !dbg !11457
  br i1 %81, label %82, label %90, !dbg !11458

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11459
  %84 = and i32 %83, 2, !dbg !11459
  %85 = icmp eq i32 %84, 0, !dbg !11459
  br i1 %85, label %114, label %86, !dbg !11462

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11463
  %88 = load i32, i32* %87, align 4, !dbg !11463
  %89 = icmp eq i32 %88, 1, !dbg !11464
  br i1 %89, label %114, label %311, !dbg !11465

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11466
  %92 = load i32, i32* %91, align 4, !dbg !11466
  %93 = icmp eq i32 %92, 0, !dbg !11469
  br i1 %93, label %104, label %94, !dbg !11470

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11471
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %95, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %96, !dbg !11474

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11475
  %98 = and i32 %97, 2, !dbg !11476
  %99 = icmp eq i32 %98, 0, !dbg !11476
  br i1 %99, label %100, label %114, !dbg !11474

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !11477
  %102 = sub i32 %101, %95, !dbg !11480
  %103 = icmp ugt i32 %102, 2, !dbg !11481
  br i1 %103, label %311, label %96, !dbg !11482, !llvm.loop !11483

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11485
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %105, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %106, !dbg !11488

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11489
  %108 = and i32 %107, 2, !dbg !11489
  %109 = icmp eq i32 %108, 0, !dbg !11489
  br i1 %109, label %121, label %110, !dbg !11488

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11490
  %112 = sub i32 %111, %105, !dbg !11493
  %113 = icmp ugt i32 %112, 2, !dbg !11494
  br i1 %113, label %311, label %106, !dbg !11495, !llvm.loop !11496

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11498
  %116 = and i32 %115, -249, !dbg !11498
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11498
  %118 = load i32, i32* %117, align 4, !dbg !11498
  %119 = shl i32 %118, 3, !dbg !11498
  %120 = or i32 %119, %116, !dbg !11498
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11498
  br label %121, !dbg !11499

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11499
  %123 = and i32 %122, 8, !dbg !11501
  %124 = icmp eq i32 %123, 0, !dbg !11502
  br i1 %124, label %149, label %125, !dbg !11503

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11504
  %127 = load i32, i32* %126, align 4, !dbg !11504
  %128 = icmp eq i32 %127, 0, !dbg !11507
  br i1 %128, label %139, label %129, !dbg !11508

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11509
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !11511
  call void @llvm.dbg.value(metadata i32 %130, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %131, !dbg !11512

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11513
  %133 = and i32 %132, 2, !dbg !11514
  %134 = icmp eq i32 %133, 0, !dbg !11514
  br i1 %134, label %135, label %149, !dbg !11512

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !11515
  %137 = sub i32 %136, %130, !dbg !11518
  %138 = icmp ugt i32 %137, 2, !dbg !11519
  br i1 %138, label %311, label %131, !dbg !11520, !llvm.loop !11521

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11523
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %140, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %141, !dbg !11526

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11527
  %143 = and i32 %142, 2, !dbg !11527
  %144 = icmp eq i32 %143, 0, !dbg !11527
  br i1 %144, label %149, label %145, !dbg !11526

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11528
  %147 = sub i32 %146, %140, !dbg !11531
  %148 = icmp ugt i32 %147, 2, !dbg !11532
  br i1 %148, label %311, label %141, !dbg !11533, !llvm.loop !11534

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11536
  %151 = and i32 %150, 4, !dbg !11537
  %152 = icmp eq i32 %151, 0, !dbg !11538
  br i1 %152, label %221, label %153, !dbg !11539

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11365, metadata !DIExpression()), !dbg !11540
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11541
  %155 = and i32 %154, 268435456, !dbg !11541
  %156 = icmp eq i32 %155, 0, !dbg !11541
  br i1 %156, label %157, label %164, !dbg !11542

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11543
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11543
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11369, metadata !DIExpression()), !dbg !11543
  store volatile i32 0, i32* %2, align 4, !dbg !11543
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11543
  %160 = or i32 %159, 268435456, !dbg !11543
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11543
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11543
  %162 = and i32 %161, 268435456, !dbg !11543
  store volatile i32 %162, i32* %2, align 4, !dbg !11543
  %163 = load volatile i32, i32* %2, align 4, !dbg !11543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11544
  call void @llvm.dbg.value(metadata i32 1, metadata !11365, metadata !DIExpression()), !dbg !11540
  br label %164, !dbg !11545

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()), !dbg !11540
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11546
  %166 = and i32 %165, 256, !dbg !11546
  %167 = icmp eq i32 %166, 0, !dbg !11546
  br i1 %167, label %168, label %180, !dbg !11548

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11549
  %170 = or i32 %169, 256, !dbg !11549
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11549
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !11551
  call void @llvm.dbg.value(metadata i32 %171, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %172, !dbg !11552

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11553
  %174 = and i32 %173, 256, !dbg !11553
  %175 = icmp eq i32 %174, 0, !dbg !11553
  br i1 %175, label %176, label %180, !dbg !11552

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !11554
  %178 = sub i32 %177, %171, !dbg !11557
  %179 = icmp ugt i32 %178, 2, !dbg !11558
  br i1 %179, label %311, label %172, !dbg !11559, !llvm.loop !11560

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11562
  %182 = load i32, i32* %181, align 4, !dbg !11562
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11565

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11566
  %185 = or i32 %184, 1, !dbg !11566
  br label %196, !dbg !11566

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11568
  %188 = or i32 %187, 4, !dbg !11568
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11568
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11568
  %190 = or i32 %189, 1, !dbg !11568
  br label %196, !dbg !11568

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11571
  %193 = and i32 %192, -2, !dbg !11571
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11571
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11571
  %195 = and i32 %194, -5, !dbg !11571
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11573
  %198 = load i32, i32* %181, align 4, !dbg !11574
  %199 = icmp eq i32 %198, 0, !dbg !11576
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !11577
  call void @llvm.dbg.value(metadata i32 %200, metadata !11363, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 %200, metadata !11363, metadata !DIExpression()), !dbg !11373
  br i1 %199, label %209, label %201, !dbg !11578

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11579
  %203 = and i32 %202, 2, !dbg !11581
  %204 = icmp eq i32 %203, 0, !dbg !11581
  br i1 %204, label %205, label %217, !dbg !11582

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11583
  %207 = sub i32 %206, %200, !dbg !11586
  %208 = icmp ugt i32 %207, 5000, !dbg !11587
  br i1 %208, label %311, label %201, !dbg !11588, !llvm.loop !11589

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11591
  %211 = and i32 %210, 2, !dbg !11591
  %212 = icmp eq i32 %211, 0, !dbg !11591
  br i1 %212, label %217, label %213, !dbg !11593

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !11594
  %215 = sub i32 %214, %200, !dbg !11597
  %216 = icmp ugt i32 %215, 5000, !dbg !11598
  br i1 %216, label %311, label %209, !dbg !11599, !llvm.loop !11600

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11602

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11603
  %220 = and i32 %219, -268435457, !dbg !11603
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11603
  br label %221, !dbg !11606

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11607
  %223 = load i32, i32* %222, align 4, !dbg !11607
  %224 = icmp eq i32 %223, 0, !dbg !11609
  br i1 %224, label %310, label %225, !dbg !11610

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11611
  %227 = and i32 %226, 12, !dbg !11611
  %228 = icmp eq i32 %227, 8, !dbg !11614
  br i1 %228, label %277, label %229, !dbg !11615

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11616
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11619
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %231, metadata !11363, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 %231, metadata !11363, metadata !DIExpression()), !dbg !11373
  br i1 %230, label %232, label %269, !dbg !11620

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11621
  %234 = and i32 %233, 33554432, !dbg !11621
  %235 = icmp eq i32 %234, 0, !dbg !11621
  br i1 %235, label %240, label %236, !dbg !11623

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !11624
  %238 = sub i32 %237, %231, !dbg !11627
  %239 = icmp ugt i32 %238, 2, !dbg !11628
  br i1 %239, label %311, label %232, !dbg !11629, !llvm.loop !11630

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11632
  %242 = load i32, i32* %241, align 4, !dbg !11632
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11632
  %244 = load i32, i32* %243, align 4, !dbg !11632
  %245 = or i32 %244, %242, !dbg !11632
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11632
  %247 = load i32, i32* %246, align 4, !dbg !11632
  %248 = shl i32 %247, 6, !dbg !11632
  %249 = or i32 %245, %248, !dbg !11632
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11632
  %251 = load i32, i32* %250, align 4, !dbg !11632
  %252 = shl i32 %251, 15, !dbg !11632
  %253 = add i32 %252, -65536, !dbg !11632
  %254 = and i32 %253, -65536, !dbg !11632
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11632
  %256 = load i32, i32* %255, align 4, !dbg !11632
  %257 = shl i32 %256, 24, !dbg !11632
  %258 = or i32 %249, %257, !dbg !11632
  %259 = or i32 %258, %254, !dbg !11632
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11632
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11633
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %260, metadata !11363, metadata !DIExpression()), !dbg !11373
  br label %261, !dbg !11635

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11636
  %263 = and i32 %262, 33554432, !dbg !11637
  %264 = icmp eq i32 %263, 0, !dbg !11637
  br i1 %264, label %265, label %310, !dbg !11635

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !11638
  %267 = sub i32 %266, %260, !dbg !11641
  %268 = icmp ugt i32 %267, 2, !dbg !11642
  br i1 %268, label %311, label %261, !dbg !11643, !llvm.loop !11644

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  %271 = and i32 %270, 33554432, !dbg !11646
  %272 = icmp eq i32 %271, 0, !dbg !11646
  br i1 %272, label %310, label %273, !dbg !11648

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !11649
  %275 = sub i32 %274, %231, !dbg !11652
  %276 = icmp ugt i32 %275, 2, !dbg !11653
  br i1 %276, label %311, label %269, !dbg !11654, !llvm.loop !11655

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11657
  br i1 %278, label %311, label %279, !dbg !11660

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %280, metadata !11364, metadata !DIExpression()), !dbg !11373
  %281 = and i32 %280, 4194304, !dbg !11663
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11665
  %283 = load i32, i32* %282, align 4, !dbg !11665
  %284 = icmp eq i32 %281, %283, !dbg !11666
  br i1 %284, label %285, label %311, !dbg !11667

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11668
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11669
  %288 = load i32, i32* %287, align 4, !dbg !11669
  %289 = icmp eq i32 %286, %288, !dbg !11670
  br i1 %289, label %290, label %311, !dbg !11671

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11672
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11673
  %293 = load i32, i32* %292, align 4, !dbg !11673
  %294 = shl i32 %293, 6, !dbg !11674
  %295 = icmp eq i32 %291, %294, !dbg !11675
  br i1 %295, label %296, label %311, !dbg !11676

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11677
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11678
  %299 = load i32, i32* %298, align 4, !dbg !11678
  %300 = shl i32 %299, 15, !dbg !11679
  %301 = add i32 %300, -65536, !dbg !11679
  %302 = and i32 %301, -65536, !dbg !11679
  %303 = icmp eq i32 %297, %302, !dbg !11680
  br i1 %303, label %304, label %311, !dbg !11681

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11682
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11683
  %307 = load i32, i32* %306, align 4, !dbg !11683
  %308 = shl i32 %307, 24, !dbg !11684
  %309 = icmp eq i32 %305, %308, !dbg !11685
  br i1 %309, label %310, label %311, !dbg !11686

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11687

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11373
  ret i32 %312, !dbg !11688
}

; Function Attrs: optsize
declare !dbg !11689 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11704, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.value(metadata i32 %1, metadata !11705, metadata !DIExpression()), !dbg !11707
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11708
  br i1 %3, label %115, label %4, !dbg !11710

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11711
  %6 = and i32 %5, 15, !dbg !11711
  %7 = icmp ult i32 %6, %1, !dbg !11713
  br i1 %7, label %8, label %13, !dbg !11714

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11715
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11715
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11717
  %11 = and i32 %10, 15, !dbg !11717
  %12 = icmp eq i32 %11, %1, !dbg !11719
  br i1 %12, label %13, label %115, !dbg !11720

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11721
  %15 = load i32, i32* %14, align 4, !dbg !11721
  %16 = and i32 %15, 2, !dbg !11723
  %17 = icmp eq i32 %16, 0, !dbg !11724
  br i1 %17, label %39, label %18, !dbg !11725

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11726
  %20 = icmp eq i32 %19, 0, !dbg !11729
  br i1 %20, label %25, label %21, !dbg !11730

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11731
  %23 = or i32 %22, 7168, !dbg !11731
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11731
  %24 = load i32, i32* %14, align 4, !dbg !11733
  br label %25, !dbg !11735

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11733
  %27 = and i32 %26, 8, !dbg !11736
  %28 = icmp eq i32 %27, 0, !dbg !11737
  br i1 %28, label %32, label %29, !dbg !11738

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11739
  %31 = or i32 %30, 57344, !dbg !11739
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11739
  br label %32, !dbg !11741

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11742
  %34 = and i32 %33, -241, !dbg !11742
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11742
  %36 = load i32, i32* %35, align 4, !dbg !11742
  %37 = or i32 %34, %36, !dbg !11742
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11742
  %38 = load i32, i32* %14, align 4, !dbg !11743
  br label %39, !dbg !11745

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11743
  %41 = and i32 %40, 1, !dbg !11746
  %42 = icmp eq i32 %41, 0, !dbg !11747
  br i1 %42, label %73, label %43, !dbg !11748

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11749
  %45 = load i32, i32* %44, align 4, !dbg !11749
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11752

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11753
  %48 = and i32 %47, 131072, !dbg !11756
  %49 = icmp eq i32 %48, 0, !dbg !11756
  br i1 %49, label %115, label %58, !dbg !11757

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11758
  %52 = and i32 %51, 33554432, !dbg !11762
  %53 = icmp eq i32 %52, 0, !dbg !11762
  br i1 %53, label %115, label %58, !dbg !11763

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11764
  %56 = and i32 %55, 2, !dbg !11767
  %57 = icmp eq i32 %56, 0, !dbg !11767
  br i1 %57, label %115, label %58, !dbg !11768

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  %60 = and i32 %59, -4, !dbg !11769
  %61 = or i32 %60, %45, !dbg !11769
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %62, metadata !11706, metadata !DIExpression()), !dbg !11707
  br label %63, !dbg !11771

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11772
  %65 = and i32 %64, 12, !dbg !11772
  %66 = load i32, i32* %44, align 4, !dbg !11773
  %67 = shl i32 %66, 2, !dbg !11774
  %68 = icmp eq i32 %65, %67, !dbg !11775
  br i1 %68, label %73, label %69, !dbg !11771

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !11776
  %71 = sub i32 %70, %62, !dbg !11779
  %72 = icmp ugt i32 %71, 5000, !dbg !11780
  br i1 %72, label %115, label %63, !dbg !11781, !llvm.loop !11782

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11784
  %75 = and i32 %74, 15, !dbg !11784
  %76 = icmp ugt i32 %75, %1, !dbg !11786
  br i1 %76, label %77, label %82, !dbg !11787

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11788
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11788
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11790
  %80 = and i32 %79, 15, !dbg !11790
  %81 = icmp eq i32 %80, %1, !dbg !11792
  br i1 %81, label %82, label %115, !dbg !11793

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11794
  %84 = and i32 %83, 4, !dbg !11796
  %85 = icmp eq i32 %84, 0, !dbg !11797
  br i1 %85, label %93, label %86, !dbg !11798

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11799
  %88 = and i32 %87, -7169, !dbg !11799
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11799
  %90 = load i32, i32* %89, align 4, !dbg !11799
  %91 = or i32 %88, %90, !dbg !11799
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11799
  %92 = load i32, i32* %14, align 4, !dbg !11801
  br label %93, !dbg !11803

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11801
  %95 = and i32 %94, 8, !dbg !11804
  %96 = icmp eq i32 %95, 0, !dbg !11805
  br i1 %96, label %104, label %97, !dbg !11806

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11807
  %99 = and i32 %98, -57345, !dbg !11807
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11807
  %101 = load i32, i32* %100, align 4, !dbg !11807
  %102 = shl i32 %101, 3, !dbg !11807
  %103 = or i32 %102, %99, !dbg !11807
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11807
  br label %104, !dbg !11809

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11810
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11811
  %107 = lshr i32 %106, 4, !dbg !11812
  %108 = and i32 %107, 15, !dbg !11812
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11813
  %110 = load i8, i8* %109, align 1, !dbg !11813
  %111 = zext i8 %110 to i32, !dbg !11813
  %112 = lshr i32 %105, %111, !dbg !11814
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11815
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11816
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !11817
  br label %115, !dbg !11818

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11707
  ret i32 %116, !dbg !11819
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11820 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11822, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11823, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11824, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11825, metadata !DIExpression()), !dbg !11826
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11827
  %2 = and i32 %1, 12, !dbg !11828
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11829

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !11825, metadata !DIExpression()), !dbg !11826
  br label %24, !dbg !11830

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11833
  %6 = and i32 %5, 63, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %6, metadata !11822, metadata !DIExpression()), !dbg !11826
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11836
  %8 = and i32 %7, 4194304, !dbg !11836
  %9 = icmp eq i32 %8, 0, !dbg !11838
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11839
  %11 = lshr i32 %10, 6, !dbg !11839
  %12 = and i32 %11, 511, !dbg !11839
  %13 = zext i32 %12 to i64, !dbg !11839
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11839
  %16 = zext i32 %6 to i64, !dbg !11839
  %17 = udiv i64 %15, %16, !dbg !11839
  %18 = trunc i64 %17 to i32, !dbg !11839
  call void @llvm.dbg.value(metadata i32 %18, metadata !11823, metadata !DIExpression()), !dbg !11826
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11840
  %20 = lshr i32 %19, 15, !dbg !11841
  %21 = and i32 %20, 6, !dbg !11841
  %22 = add nuw nsw i32 %21, 2, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %22, metadata !11824, metadata !DIExpression()), !dbg !11826
  %23 = udiv i32 %18, %22, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %23, metadata !11825, metadata !DIExpression()), !dbg !11826
  br label %24, !dbg !11843

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !11844
  call void @llvm.dbg.value(metadata i32 %25, metadata !11825, metadata !DIExpression()), !dbg !11826
  ret i32 %25, !dbg !11845
}

; Function Attrs: optsize
declare !dbg !11846 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11849 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11853, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 %1, metadata !11854, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 %2, metadata !11855, metadata !DIExpression()), !dbg !11873
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11874
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11874
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11856, metadata !DIExpression()), !dbg !11875
  %8 = icmp eq i32 %0, 0, !dbg !11876
  br i1 %8, label %9, label %23, !dbg !11877

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11878
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11878
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11866, metadata !DIExpression()), !dbg !11878
  store volatile i32 0, i32* %5, align 4, !dbg !11878
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11878
  %12 = or i32 %11, 1, !dbg !11878
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11878
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11878
  %14 = and i32 %13, 1, !dbg !11878
  store volatile i32 %14, i32* %5, align 4, !dbg !11878
  %15 = load volatile i32, i32* %5, align 4, !dbg !11878
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11879
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11880
  store i32 256, i32* %16, align 4, !dbg !11881
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11882
  store i32 2, i32* %17, align 4, !dbg !11883
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11884
  store i32 3, i32* %18, align 4, !dbg !11885
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11886
  store i32 0, i32* %19, align 4, !dbg !11887
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11888
  store i32 0, i32* %20, align 4, !dbg !11889
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11890
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11891
  %22 = and i32 %21, -123731969, !dbg !11891
  br label %38, !dbg !11892

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11893
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11870, metadata !DIExpression()), !dbg !11893
  store volatile i32 0, i32* %6, align 4, !dbg !11893
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11893
  %26 = or i32 %25, 4, !dbg !11893
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11893
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11893
  %28 = and i32 %27, 4, !dbg !11893
  store volatile i32 %28, i32* %6, align 4, !dbg !11893
  %29 = load volatile i32, i32* %6, align 4, !dbg !11893
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11894
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11895
  store i32 512, i32* %30, align 4, !dbg !11896
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11897
  store i32 2, i32* %31, align 4, !dbg !11898
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11899
  store i32 3, i32* %32, align 4, !dbg !11900
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11901
  store i32 0, i32* %33, align 4, !dbg !11902
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11903
  store i32 0, i32* %34, align 4, !dbg !11904
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11905
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11906
  %36 = and i32 %35, 134217727, !dbg !11906
  %37 = shl i32 %2, 3, !dbg !11906
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11907
  %42 = or i32 %41, %40, !dbg !11907
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11907
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11908
  ret void, !dbg !11908
}

; Function Attrs: optsize
declare !dbg !11909 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11913 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11914
  ret void, !dbg !11915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11916 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11917
  ret void, !dbg !11918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11919 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11920
  ret i32 %1, !dbg !11921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11922 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11923
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11924
  %3 = lshr i32 %2, 10, !dbg !11925
  %4 = and i32 %3, 7, !dbg !11925
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11926
  %6 = load i8, i8* %5, align 1, !dbg !11926
  %7 = zext i8 %6 to i32, !dbg !11926
  %8 = lshr i32 %1, %7, !dbg !11927
  ret i32 %8, !dbg !11928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11929 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11930
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11931
  %3 = lshr i32 %2, 13, !dbg !11932
  %4 = and i32 %3, 7, !dbg !11932
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11933
  %6 = load i8, i8* %5, align 1, !dbg !11933
  %7 = zext i8 %6 to i32, !dbg !11933
  %8 = lshr i32 %1, %7, !dbg !11934
  ret i32 %8, !dbg !11935
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11940, metadata !DIExpression()), !dbg !11941
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11942
  store i32 15, i32* %2, align 4, !dbg !11943
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11944
  %4 = and i32 %3, 262144, !dbg !11946
  %5 = icmp eq i32 %4, 0, !dbg !11947
  br i1 %5, label %8, label %6, !dbg !11948

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11949
  store i32 327680, i32* %7, align 4, !dbg !11951
  br label %15, !dbg !11952

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11953
  %10 = and i32 %9, 65536, !dbg !11955
  %11 = icmp eq i32 %10, 0, !dbg !11956
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11957
  br i1 %11, label %14, label %13, !dbg !11958

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11959
  br label %15, !dbg !11961

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11962
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %17 = and i32 %16, 1, !dbg !11966
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11967
  store i32 %17, i32* %18, align 4, !dbg !11969
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11970
  %20 = lshr i32 %19, 3, !dbg !11971
  %21 = and i32 %20, 31, !dbg !11971
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11972
  store i32 %21, i32* %22, align 4, !dbg !11973
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11974
  %24 = and i32 %23, 4, !dbg !11976
  %25 = icmp eq i32 %24, 0, !dbg !11977
  br i1 %25, label %28, label %26, !dbg !11978

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11979
  store i32 5, i32* %27, align 4, !dbg !11981
  br label %35, !dbg !11982

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11983
  %30 = and i32 %29, 1, !dbg !11985
  %31 = icmp eq i32 %30, 0, !dbg !11986
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11987
  br i1 %31, label %34, label %33, !dbg !11988

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11989
  br label %35, !dbg !11991

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11992
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11994
  %37 = and i32 %36, 1, !dbg !11996
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11997
  store i32 %37, i32* %38, align 4, !dbg !11999
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12000
  %40 = and i32 %39, 16777216, !dbg !12002
  %41 = icmp eq i32 %40, 0, !dbg !12003
  %42 = select i1 %41, i32 1, i32 2, !dbg !12004
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12005
  store i32 %42, i32* %43, align 4, !dbg !12007
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12008
  %45 = and i32 %44, 4194304, !dbg !12009
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12010
  store i32 %45, i32* %46, align 4, !dbg !12011
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12012
  %48 = and i32 %47, 63, !dbg !12013
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12014
  store i32 %48, i32* %49, align 4, !dbg !12015
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12016
  %51 = lshr i32 %50, 6, !dbg !12017
  %52 = and i32 %51, 511, !dbg !12017
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12018
  store i32 %52, i32* %53, align 4, !dbg !12019
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12020
  %55 = shl i32 %54, 1, !dbg !12021
  %56 = and i32 %55, 393216, !dbg !12021
  %57 = add nuw nsw i32 %56, 131072, !dbg !12021
  %58 = lshr exact i32 %57, 16, !dbg !12022
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12023
  store i32 %58, i32* %59, align 4, !dbg !12024
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12025
  %61 = lshr i32 %60, 24, !dbg !12026
  %62 = and i32 %61, 15, !dbg !12026
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12027
  store i32 %62, i32* %63, align 4, !dbg !12028
  ret void, !dbg !12029
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12030 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12034, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i32* %1, metadata !12035, metadata !DIExpression()), !dbg !12036
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12037
  store i32 15, i32* %3, align 4, !dbg !12038
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12039
  %5 = and i32 %4, 3, !dbg !12040
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12041
  store i32 %5, i32* %6, align 4, !dbg !12042
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12043
  %8 = and i32 %7, 240, !dbg !12044
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12045
  store i32 %8, i32* %9, align 4, !dbg !12046
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12047
  %11 = and i32 %10, 7168, !dbg !12048
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12049
  store i32 %11, i32* %12, align 4, !dbg !12050
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12051
  %14 = lshr i32 %13, 3, !dbg !12052
  %15 = and i32 %14, 7168, !dbg !12052
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12053
  store i32 %15, i32* %16, align 4, !dbg !12054
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12055
  %18 = and i32 %17, 15, !dbg !12056
  store i32 %18, i32* %1, align 4, !dbg !12057
  ret void, !dbg !12058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12059 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12060
  %2 = and i32 %1, 128, !dbg !12060
  %3 = icmp eq i32 %2, 0, !dbg !12060
  br i1 %3, label %5, label %4, !dbg !12062

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !12063
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12065
  br label %5, !dbg !12066

5:                                                ; preds = %4, %0
  ret void, !dbg !12067
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12068 {
  ret void, !dbg !12069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12073, metadata !DIExpression()), !dbg !12074
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !12075
  ret void, !dbg !12076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12080, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i32 1000, metadata !12081, metadata !DIExpression()), !dbg !12082
  %2 = udiv i32 %0, 1000, !dbg !12083
  %3 = add nsw i32 %2, -1, !dbg !12084
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12085
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12086
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12087
  ret void, !dbg !12088
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12089 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12091, metadata !DIExpression()), !dbg !12093
  %3 = bitcast i32* %2 to i8*, !dbg !12094
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12094
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12092, metadata !DIExpression()), !dbg !12095
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12096
  store volatile i32 %4, i32* %2, align 4, !dbg !12095
  %5 = load volatile i32, i32* %2, align 4, !dbg !12097
  %6 = icmp eq i32 %0, -1, !dbg !12098
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()), !dbg !12093
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %8, metadata !12091, metadata !DIExpression()), !dbg !12093
  br label %9, !dbg !12100

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12091, metadata !DIExpression()), !dbg !12093
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()), !dbg !12093
  %12 = shl i32 %11, 15, !dbg !12093
  %13 = ashr i32 %12, 31, !dbg !12093
  %14 = add i32 %13, %10, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %14, metadata !12091, metadata !DIExpression()), !dbg !12093
  %15 = icmp eq i32 %14, 0, !dbg !12100
  br i1 %15, label %16, label %9, !dbg !12100

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12104
  ret void, !dbg !12104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12107, metadata !DIExpression()), !dbg !12108
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12109
  ret void, !dbg !12110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12116, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.value(metadata i32 0, metadata !12119, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.value(metadata i32 0, metadata !12120, metadata !DIExpression()), !dbg !12121
  %2 = icmp eq i32 %0, 0, !dbg !12122
  br i1 %2, label %72, label %3, !dbg !12124

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12125
  %5 = icmp eq i32 %4, 49152, !dbg !12128
  br i1 %5, label %6, label %21, !dbg !12129

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12130
  %8 = select i1 %7, i32 0, i32 5, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %8, metadata !12119, metadata !DIExpression()), !dbg !12121
  %9 = add i32 %0, -120000001, !dbg !12134
  %10 = icmp ult i32 %9, 30000000, !dbg !12134
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %11, metadata !12119, metadata !DIExpression()), !dbg !12121
  %12 = icmp ult i32 %9, -30000000, !dbg !12136
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %13, metadata !12119, metadata !DIExpression()), !dbg !12121
  %14 = icmp ugt i32 %0, 60000000, !dbg !12138
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12140
  br i1 %16, label %21, label %17, !dbg !12140

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12141
  %19 = and i1 %18, %15, !dbg !12144
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12144
  br label %21, !dbg !12144

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12121
  call void @llvm.dbg.value(metadata i32 %22, metadata !12119, metadata !DIExpression()), !dbg !12121
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12145
  %24 = icmp eq i32 %23, 32768, !dbg !12147
  br i1 %24, label %25, label %45, !dbg !12148

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12149
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12152
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %29, metadata !12119, metadata !DIExpression()), !dbg !12121
  %30 = icmp ugt i32 %0, 12000000, !dbg !12153
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12155
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %33, metadata !12119, metadata !DIExpression()), !dbg !12121
  %34 = icmp ugt i32 %0, 90000000, !dbg !12156
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12158
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %37, metadata !12119, metadata !DIExpression()), !dbg !12121
  %38 = icmp ugt i32 %0, 60000000, !dbg !12159
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12161
  br i1 %40, label %45, label %41, !dbg !12161

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12162
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12165
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12165
  br label %45, !dbg !12165

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %46, metadata !12119, metadata !DIExpression()), !dbg !12121
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12167
  %48 = icmp eq i32 %47, 16384, !dbg !12169
  br i1 %48, label %49, label %61, !dbg !12170

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12171
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12174
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %53, metadata !12119, metadata !DIExpression()), !dbg !12121
  %54 = icmp ugt i32 %0, 60000000, !dbg !12175
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12177
  br i1 %56, label %61, label %57, !dbg !12177

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12178
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12181
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12181
  br label %61, !dbg !12181

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %62, metadata !12119, metadata !DIExpression()), !dbg !12121
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #27, !dbg !12182
  call void @llvm.dbg.value(metadata i32 2, metadata !12117, metadata !DIExpression()), !dbg !12121
  br label %63, !dbg !12183

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %64, metadata !12117, metadata !DIExpression()), !dbg !12121
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !12184
  call void @llvm.dbg.value(metadata i32 %65, metadata !12118, metadata !DIExpression()), !dbg !12121
  %66 = add nsw i32 %64, -1, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %66, metadata !12117, metadata !DIExpression()), !dbg !12121
  %67 = icmp ne i32 %65, %62, !dbg !12187
  %68 = icmp ne i32 %66, 0, !dbg !12188
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12188
  br i1 %69, label %63, label %70, !dbg !12189, !llvm.loop !12190

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12192
  call void @llvm.dbg.value(metadata i32 %73, metadata !12120, metadata !DIExpression()), !dbg !12121
  ret i32 %73, !dbg !12193
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12194 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12196
  %2 = and i32 %1, 49152, !dbg !12196
  ret i32 %2, !dbg !12197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12200, metadata !DIExpression()), !dbg !12201
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12202
  %3 = and i32 %2, -16, !dbg !12202
  %4 = or i32 %3, %0, !dbg !12202
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12202
  ret void, !dbg !12203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12205
  %2 = and i32 %1, 15, !dbg !12205
  ret i32 %2, !dbg !12206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12207 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12225, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12226, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 0, metadata !12227, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.value(metadata i32 0, metadata !12228, metadata !DIExpression()), !dbg !12229
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12230
  %4 = icmp eq i32 %3, 0, !dbg !12232
  br i1 %4, label %5, label %21, !dbg !12233

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %6, metadata !12228, metadata !DIExpression()), !dbg !12229
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.88() #27, !dbg !12236
  %8 = icmp eq i32 %7, 1, !dbg !12238
  br i1 %8, label %13, label %9, !dbg !12239

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.89() #27, !dbg !12240
  br label %10, !dbg !12242

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.88() #27, !dbg !12243
  %12 = icmp eq i32 %11, 1, !dbg !12244
  br i1 %12, label %13, label %10, !dbg !12242, !llvm.loop !12245

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12247
  %15 = load i32, i32* %14, align 4, !dbg !12247
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12248
  %17 = load i32, i32* %16, align 4, !dbg !12248
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12249
  %19 = load i32, i32* %18, align 4, !dbg !12249
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.90(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12250
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %20, metadata !12227, metadata !DIExpression()), !dbg !12229
  br label %21, !dbg !12252

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12253
  call void @llvm.dbg.value(metadata i32 %22, metadata !12227, metadata !DIExpression()), !dbg !12229
  ret i32 %22, !dbg !12254
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12255 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12259, metadata !DIExpression()), !dbg !12260
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.92() #27, !dbg !12261
  %2 = icmp ne i32 %1, 0, !dbg !12263
  call void @llvm.dbg.value(metadata i1 %2, metadata !12259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12260
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #27, !dbg !12264
  %4 = icmp ne i32 %3, 0, !dbg !12266
  call void @llvm.dbg.value(metadata i1 undef, metadata !12259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12260
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12267
  %6 = icmp ne i32 %5, 0, !dbg !12269
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12270
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12270
  %9 = zext i1 %8 to i32, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %9, metadata !12259, metadata !DIExpression()), !dbg !12260
  ret i32 %9, !dbg !12271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12276, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12277, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32 0, metadata !12278, metadata !DIExpression()), !dbg !12279
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12280
  %4 = load i32, i32* %3, align 4, !dbg !12280
  %5 = and i32 %4, 63, !dbg !12281
  %6 = udiv i32 %0, %5, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %6, metadata !12278, metadata !DIExpression()), !dbg !12279
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12283
  %8 = load i32, i32* %7, align 4, !dbg !12283
  %9 = and i32 %8, 511, !dbg !12284
  %10 = mul i32 %9, %6, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %10, metadata !12278, metadata !DIExpression()), !dbg !12279
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12286
  %12 = load i32, i32* %11, align 4, !dbg !12286
  %13 = lshr i32 %12, 15, !dbg !12287
  %14 = and i32 %13, 131070, !dbg !12287
  %15 = add nuw nsw i32 %14, 2, !dbg !12287
  %16 = udiv i32 %10, %15, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %16, metadata !12278, metadata !DIExpression()), !dbg !12279
  ret i32 %16, !dbg !12289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.88() unnamed_addr #16 !dbg !12290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12291
  %2 = lshr i32 %1, 1, !dbg !12292
  %3 = and i32 %2, 1, !dbg !12292
  ret i32 %3, !dbg !12293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.89() unnamed_addr #15 !dbg !12294 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12295
  %2 = or i32 %1, 1, !dbg !12295
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12295
  ret void, !dbg !12296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.90(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12299, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 %1, metadata !12300, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 %2, metadata !12301, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 %3, metadata !12302, metadata !DIExpression()), !dbg !12303
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12304
  %6 = and i32 %5, -4227072, !dbg !12304
  %7 = or i32 %1, %0, !dbg !12304
  %8 = shl i32 %2, 6, !dbg !12304
  %9 = or i32 %7, %8, !dbg !12304
  %10 = or i32 %9, %6, !dbg !12304
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12304
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12305
  %12 = and i32 %11, -196609, !dbg !12305
  %13 = or i32 %12, %3, !dbg !12305
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12305
  ret void, !dbg !12306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12311, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12312, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata i32 0, metadata !12313, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata i32 0, metadata !12314, metadata !DIExpression()), !dbg !12315
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12316
  %4 = load i32, i32* %3, align 4, !dbg !12316
  %5 = lshr i32 %4, 4, !dbg !12316
  %6 = and i32 %5, 15, !dbg !12316
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12316
  %8 = load i8, i8* %7, align 1, !dbg !12316
  %9 = zext i8 %8 to i32, !dbg !12316
  %10 = lshr i32 %0, %9, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %10, metadata !12314, metadata !DIExpression()), !dbg !12315
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12317
  %12 = icmp ult i32 %11, %10, !dbg !12319
  br i1 %12, label %13, label %16, !dbg !12320

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12321
  call void @llvm.dbg.value(metadata i32 %14, metadata !12313, metadata !DIExpression()), !dbg !12315
  %15 = icmp eq i32 %14, 0, !dbg !12323
  br i1 %15, label %16, label %30, !dbg !12325

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.91() #27, !dbg !12326
  br label %17, !dbg !12328

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.92() #27, !dbg !12329
  %19 = icmp eq i32 %18, 1, !dbg !12330
  br i1 %19, label %20, label %17, !dbg !12328, !llvm.loop !12331

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12333
  tail call fastcc void @LL_RCC_SetAHBPrescaler.93(i32 noundef %21) #27, !dbg !12334
  tail call fastcc void @LL_RCC_SetSysClkSource.94() #27, !dbg !12335
  br label %22, !dbg !12336

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.95() #27, !dbg !12337
  %24 = icmp eq i32 %23, 8, !dbg !12338
  br i1 %24, label %25, label %22, !dbg !12336, !llvm.loop !12339

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12341
  %27 = load i32, i32* %26, align 4, !dbg !12341
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.96(i32 noundef %27) #27, !dbg !12342
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12343
  %29 = load i32, i32* %28, align 4, !dbg !12343
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.97(i32 noundef %29) #27, !dbg !12344
  br label %30, !dbg !12345

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12346
  %33 = icmp ugt i32 %32, %10, !dbg !12348
  br i1 %33, label %34, label %36, !dbg !12349

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12350
  call void @llvm.dbg.value(metadata i32 %35, metadata !12313, metadata !DIExpression()), !dbg !12315
  br label %36, !dbg !12352

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12315
  call void @llvm.dbg.value(metadata i32 %37, metadata !12313, metadata !DIExpression()), !dbg !12315
  %38 = icmp eq i32 %37, 0, !dbg !12353
  br i1 %38, label %39, label %40, !dbg !12355

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12356
  br label %40, !dbg !12358

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.91() unnamed_addr #15 !dbg !12360 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12361
  %2 = or i32 %1, 16777216, !dbg !12361
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12361
  ret void, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.92() unnamed_addr #16 !dbg !12363 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12364
  %2 = lshr i32 %1, 25, !dbg !12365
  %3 = and i32 %2, 1, !dbg !12365
  ret i32 %3, !dbg !12366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.93(i32 noundef %0) unnamed_addr #15 !dbg !12367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12369, metadata !DIExpression()), !dbg !12370
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12371
  %3 = and i32 %2, -241, !dbg !12371
  %4 = or i32 %3, %0, !dbg !12371
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12371
  ret void, !dbg !12372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.94() unnamed_addr #15 !dbg !12373 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12375, metadata !DIExpression()), !dbg !12376
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12377
  %2 = and i32 %1, -4, !dbg !12377
  %3 = or i32 %2, 2, !dbg !12377
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12377
  ret void, !dbg !12378
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.95() unnamed_addr #16 !dbg !12379 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12380
  %2 = and i32 %1, 12, !dbg !12380
  ret i32 %2, !dbg !12381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.96(i32 noundef %0) unnamed_addr #15 !dbg !12382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12384, metadata !DIExpression()), !dbg !12385
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12386
  %3 = and i32 %2, -7169, !dbg !12386
  %4 = or i32 %3, %0, !dbg !12386
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12386
  ret void, !dbg !12387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.97(i32 noundef %0) unnamed_addr #15 !dbg !12388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12390, metadata !DIExpression()), !dbg !12391
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  %3 = and i32 %2, -57345, !dbg !12392
  %4 = or i32 %3, %0, !dbg !12392
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  ret void, !dbg !12393
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !12394 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12395
  %2 = lshr i32 %1, 29, !dbg !12396
  %3 = and i32 %2, 1, !dbg !12396
  ret i32 %3, !dbg !12397
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12398 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12399
  %2 = lshr i32 %1, 27, !dbg !12400
  %3 = and i32 %2, 1, !dbg !12400
  ret i32 %3, !dbg !12401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12406, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 %1, metadata !12407, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12408, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12409, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 0, metadata !12410, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 0, metadata !12411, metadata !DIExpression()), !dbg !12412
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12413
  %6 = icmp eq i32 %5, 0, !dbg !12415
  br i1 %6, label %7, label %27, !dbg !12416

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %8, metadata !12411, metadata !DIExpression()), !dbg !12412
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.98() #27, !dbg !12419
  %10 = icmp eq i32 %9, 1, !dbg !12421
  br i1 %10, label %19, label %11, !dbg !12422

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12423
  br i1 %12, label %13, label %14, !dbg !12426

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12427
  br label %15, !dbg !12429

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.99() #27, !dbg !12430
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.100() #27, !dbg !12432
  br label %16, !dbg !12433

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.98() #27, !dbg !12434
  %18 = icmp eq i32 %17, 1, !dbg !12435
  br i1 %18, label %19, label %16, !dbg !12433, !llvm.loop !12436

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12438
  %21 = load i32, i32* %20, align 4, !dbg !12438
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12439
  %23 = load i32, i32* %22, align 4, !dbg !12439
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12440
  %25 = load i32, i32* %24, align 4, !dbg !12440
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.90(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12441
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %26, metadata !12410, metadata !DIExpression()), !dbg !12412
  br label %27, !dbg !12443

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12444
  call void @llvm.dbg.value(metadata i32 %28, metadata !12410, metadata !DIExpression()), !dbg !12412
  ret i32 %28, !dbg !12445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.98() unnamed_addr #16 !dbg !12446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12447
  %2 = lshr i32 %1, 17, !dbg !12448
  %3 = and i32 %2, 1, !dbg !12448
  ret i32 %3, !dbg !12449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12450 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12451
  %2 = or i32 %1, 262144, !dbg !12451
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12451
  ret void, !dbg !12452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.99() unnamed_addr #15 !dbg !12453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12454
  %2 = and i32 %1, -262145, !dbg !12454
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12454
  ret void, !dbg !12455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.100() unnamed_addr #15 !dbg !12456 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12457
  %2 = or i32 %1, 65536, !dbg !12457
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12457
  ret void, !dbg !12458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12459 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12462, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata i32 undef, metadata !12462, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata i32 undef, metadata !12462, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12478
  ret void, !dbg !12479
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12480 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12484, metadata !DIExpression()), !dbg !12486
  %2 = icmp eq i8* %0, null, !dbg !12487
  br i1 %2, label %29, label %3, !dbg !12489

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12490
  %5 = icmp eq i8 %4, 0, !dbg !12491
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12492
  br i1 %6, label %29, label %8, !dbg !12492

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12485, metadata !DIExpression()), !dbg !12486
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12493

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12485, metadata !DIExpression()), !dbg !12486
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12495
  br i1 %10, label %11, label %15, !dbg !12500

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12501
  %13 = load i8*, i8** %12, align 4, !dbg !12501
  %14 = icmp eq i8* %13, %0, !dbg !12502
  br i1 %14, label %29, label %15, !dbg !12503

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12504
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12485, metadata !DIExpression()), !dbg !12486
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12505
  br i1 %17, label %7, label %8, !dbg !12506, !llvm.loop !12507

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12485, metadata !DIExpression()), !dbg !12486
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12509
  br i1 %20, label %21, label %26, !dbg !12513

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12514
  %23 = load i8*, i8** %22, align 4, !dbg !12514
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12515
  %25 = icmp eq i32 %24, 0, !dbg !12516
  br i1 %25, label %29, label %26, !dbg !12517

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12518
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12485, metadata !DIExpression()), !dbg !12486
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12519
  br i1 %28, label %29, label %18, !dbg !12493, !llvm.loop !12520

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12486
  ret %struct.device* %30, !dbg !12522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12527, metadata !DIExpression()), !dbg !12528
  %2 = icmp eq %struct.device* %0, null, !dbg !12529
  br i1 %2, label %14, label %3, !dbg !12531

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12532
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12532
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12533
  %7 = load i8, i8* %6, align 1, !dbg !12533
  %8 = and i8 %7, 1, !dbg !12533
  %9 = icmp eq i8 %8, 0, !dbg !12533
  br i1 %9, label %14, label %10, !dbg !12534

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12535
  %12 = load i8, i8* %11, align 1, !dbg !12535
  %13 = icmp eq i8 %12, 0, !dbg !12536
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12528
  ret i1 %15, !dbg !12537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12538 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12543, metadata !DIExpression()), !dbg !12544
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12545
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12547 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12555, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12556, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata i8* %2, metadata !12557, metadata !DIExpression()), !dbg !12560
  %5 = bitcast i32* %4 to i8*, !dbg !12561
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12561
  call void @llvm.dbg.value(metadata i32 0, metadata !12558, metadata !DIExpression()), !dbg !12560
  store i32 0, i32* %4, align 4, !dbg !12562
  call void @llvm.dbg.value(metadata i32* %4, metadata !12558, metadata !DIExpression(DW_OP_deref)), !dbg !12560
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12563
  call void @llvm.dbg.value(metadata i16* %6, metadata !12559, metadata !DIExpression()), !dbg !12560
  %7 = load i32, i32* %4, align 4, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %7, metadata !12558, metadata !DIExpression()), !dbg !12560
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12566
  ret i32 %8, !dbg !12567
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12572, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32* %1, metadata !12573, metadata !DIExpression()), !dbg !12578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12579
  %4 = load i16*, i16** %3, align 4, !dbg !12579
  call void @llvm.dbg.value(metadata i16* %4, metadata !12574, metadata !DIExpression()), !dbg !12578
  %5 = icmp eq i16* %4, null, !dbg !12580
  br i1 %5, label %14, label %6, !dbg !12581

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12582
  call void @llvm.dbg.value(metadata i32 %7, metadata !12575, metadata !DIExpression()), !dbg !12582
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12583
  %9 = load i16, i16* %8, align 2, !dbg !12583
  %10 = add i16 %9, -32767, !dbg !12584
  %11 = icmp ult i16 %10, 2, !dbg !12584
  %12 = add i32 %7, 1, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %12, metadata !12575, metadata !DIExpression()), !dbg !12582
  br i1 %11, label %13, label %6, !dbg !12584, !llvm.loop !12587

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12590
  br label %14, !dbg !12591

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12593 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12597, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i32 %1, metadata !12598, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12599, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i8* %3, metadata !12600, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i32 0, metadata !12601, metadata !DIExpression()), !dbg !12609
  %5 = icmp eq i32 %1, 0, !dbg !12610
  br i1 %5, label %16, label %8, !dbg !12611

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12601, metadata !DIExpression()), !dbg !12609
  %7 = icmp eq i32 %15, %1, !dbg !12610
  br i1 %7, label %16, label %8, !dbg !12611, !llvm.loop !12612

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12601, metadata !DIExpression()), !dbg !12609
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12614
  %11 = load i16, i16* %10, align 2, !dbg !12614
  call void @llvm.dbg.value(metadata i16 %11, metadata !12603, metadata !DIExpression()), !dbg !12615
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12616
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12606, metadata !DIExpression()), !dbg !12615
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12617
  call void @llvm.dbg.value(metadata i32 %13, metadata !12607, metadata !DIExpression()), !dbg !12615
  %14 = icmp slt i32 %13, 0, !dbg !12618
  %15 = add nuw i32 %9, 1, !dbg !12620
  call void @llvm.dbg.value(metadata i32 %15, metadata !12601, metadata !DIExpression()), !dbg !12609
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12622 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12626, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12627, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12628, metadata !DIExpression()), !dbg !12629
  %2 = sext i16 %0 to i32, !dbg !12630
  %3 = icmp slt i16 %0, 1, !dbg !12632
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12633
  %6 = add nsw i32 %2, -1, !dbg !12633
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12633
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12633
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12627, metadata !DIExpression()), !dbg !12629
  ret %struct.device* %8, !dbg !12634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12635 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12637, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12638, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata i8* %2, metadata !12639, metadata !DIExpression()), !dbg !12642
  %5 = bitcast i32* %4 to i8*, !dbg !12643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12643
  call void @llvm.dbg.value(metadata i32 0, metadata !12640, metadata !DIExpression()), !dbg !12642
  store i32 0, i32* %4, align 4, !dbg !12644
  call void @llvm.dbg.value(metadata i32* %4, metadata !12640, metadata !DIExpression(DW_OP_deref)), !dbg !12642
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12645
  call void @llvm.dbg.value(metadata i16* %6, metadata !12641, metadata !DIExpression()), !dbg !12642
  %7 = load i32, i32* %4, align 4, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %7, metadata !12640, metadata !DIExpression()), !dbg !12642
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12648
  ret i32 %8, !dbg !12649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12652, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32* %1, metadata !12653, metadata !DIExpression()), !dbg !12657
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12658
  %4 = load i16*, i16** %3, align 4, !dbg !12658
  call void @llvm.dbg.value(metadata i16* %4, metadata !12654, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 0, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i32 0, metadata !12656, metadata !DIExpression()), !dbg !12657
  %5 = icmp eq i16* %4, null, !dbg !12659
  br i1 %5, label %22, label %6, !dbg !12661

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.value(metadata i16* %8, metadata !12654, metadata !DIExpression()), !dbg !12657
  %9 = load i16, i16* %8, align 2, !dbg !12662
  %10 = icmp eq i16 %9, -32768, !dbg !12666
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()), !dbg !12657
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12667
  call void @llvm.dbg.value(metadata i16* %11, metadata !12654, metadata !DIExpression()), !dbg !12657
  %12 = zext i1 %10 to i32, !dbg !12668
  %13 = add i32 %7, %12, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %13, metadata !12655, metadata !DIExpression()), !dbg !12657
  %14 = icmp eq i32 %13, 2, !dbg !12669
  br i1 %14, label %15, label %6, !dbg !12670

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12657
  call void @llvm.dbg.value(metadata i32 %16, metadata !12656, metadata !DIExpression()), !dbg !12657
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12671
  %18 = load i16, i16* %17, align 2, !dbg !12671
  %19 = icmp eq i16 %18, 32767, !dbg !12672
  %20 = add i32 %16, 1, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %20, metadata !12656, metadata !DIExpression()), !dbg !12657
  br i1 %19, label %21, label %15, !dbg !12675, !llvm.loop !12676

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12678
  br label %22, !dbg !12679

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12680
  call void @llvm.dbg.value(metadata i16* %23, metadata !12654, metadata !DIExpression()), !dbg !12657
  ret i16* %23, !dbg !12681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12682 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12685
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12686
  ret i32* %2, !dbg !12687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12688 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12836, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12837, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12838, metadata !DIExpression()), !dbg !12839
  ret void, !dbg !12840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 %1, metadata !12846, metadata !DIExpression()), !dbg !12847
  ret void, !dbg !12848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12853, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.value(metadata i32 %1, metadata !12854, metadata !DIExpression()), !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12861, metadata !DIExpression()), !dbg !12863
  call void @llvm.dbg.value(metadata i8* %1, metadata !12862, metadata !DIExpression()), !dbg !12863
  ret i32 -134, !dbg !12864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12869, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i8* %1, metadata !12870, metadata !DIExpression()), !dbg !12871
  ret i32 -134, !dbg !12872
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12876, metadata !DIExpression()), !dbg !12877
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12878, !srcloc !12884
  call void @llvm.dbg.value(metadata i32 undef, metadata !12881, metadata !DIExpression()) #25, !dbg !12885
  call void @llvm.dbg.value(metadata i32 undef, metadata !12882, metadata !DIExpression()) #25, !dbg !12885
  br label %3, !dbg !12886

3:                                                ; preds = %3, %1
  br label %3, !dbg !12887, !llvm.loop !12890
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12897, metadata !DIExpression()), !dbg !12899
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12898, metadata !DIExpression()), !dbg !12899
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12900
  unreachable, !dbg !12900
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12903, metadata !DIExpression()), !dbg !12904
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12905
  unreachable, !dbg !12905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12908, metadata !DIExpression()), !dbg !12912
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12909, metadata !DIExpression()), !dbg !12912
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12913, !srcloc !12884
  call void @llvm.dbg.value(metadata i32 undef, metadata !12881, metadata !DIExpression()) #25, !dbg !12915
  call void @llvm.dbg.value(metadata i32 undef, metadata !12882, metadata !DIExpression()) #25, !dbg !12915
  call void @llvm.dbg.value(metadata i32 undef, metadata !12910, metadata !DIExpression()), !dbg !12912
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12911, metadata !DIExpression()), !dbg !12912
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12916
  br i1 %4, label %6, label %5, !dbg !12918

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12919
  br label %7, !dbg !12920

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12919
  br label %7, !dbg !12923

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %8, metadata !12881, metadata !DIExpression()) #25, !dbg !12915
  call void @llvm.dbg.value(metadata i32 %8, metadata !12910, metadata !DIExpression()), !dbg !12912
  %9 = tail call fastcc %struct.k_thread* @k_current_get.107() #28, !dbg !12925
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12911, metadata !DIExpression()), !dbg !12912
  call void @llvm.dbg.value(metadata i32 undef, metadata !12926, metadata !DIExpression()) #25, !dbg !12929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12931, !srcloc !12932
  tail call fastcc void @k_thread_abort.108(%struct.k_thread* noundef %9) #27, !dbg !12933
  ret void, !dbg !12936
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.107() unnamed_addr #9 !dbg !12937 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.109() #28, !dbg !12941
  ret %struct.k_thread* %1, !dbg !12942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.108(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12947, metadata !DIExpression()), !dbg !12948
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12949, !srcloc !12951
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12952
  ret void, !dbg !12953
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.109() unnamed_addr #9 !dbg !12954 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12955, !srcloc !12957
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12958
  ret %struct.k_thread* %1, !dbg !12959
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12960 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12964, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %1, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %2, metadata !12966, metadata !DIExpression()), !dbg !12967
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12974, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i8* %1, metadata !12975, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i32 %2, metadata !12976, metadata !DIExpression()), !dbg !12977
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12978
  ret void, !dbg !12979
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12980 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12981
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #27, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12986, metadata !DIExpression()), !dbg !12987
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12988
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12989
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12990
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12991
  %4 = trunc i32 %0 to i8, !dbg !12992
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12993
  store i8 %4, i8* %5, align 4, !dbg !12994
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12995
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12996
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12997
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12998
  store i8* %8, i8** %9, align 4, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13003, metadata !DIExpression()), !dbg !13009
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13010
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13004, metadata !DIExpression()), !dbg !13009
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13011
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13005, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* null, metadata !13008, metadata !DIExpression()), !dbg !13009
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13012
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13013
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !13014
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13021, metadata !DIExpression()), !dbg !13022
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13023
  ret i8* %2, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13030, metadata !DIExpression()), !dbg !13031
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13032
  %3 = load i8, i8* %2, align 1, !dbg !13033
  %4 = and i8 %3, -5, !dbg !13033
  store i8 %4, i8* %2, align 1, !dbg !13033
  ret void, !dbg !13034
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13035 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !13038
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !13039
  %3 = ptrtoint i8* %2 to i32, !dbg !13048
  %4 = add i32 %3, 2048, !dbg !13049
  call void @llvm.dbg.value(metadata i32 %4, metadata !13043, metadata !DIExpression()) #25, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %4, metadata !13051, metadata !DIExpression()) #25, !dbg !13054
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13056, !srcloc !13057
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13058
  %6 = or i32 %5, 512, !dbg !13058
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13058
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -2, i32 noundef 255) #26, !dbg !13059
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -5, i32 noundef 0) #26, !dbg !13062
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -12, i32 noundef 0) #26, !dbg !13063
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -11, i32 noundef 0) #26, !dbg !13064
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -10, i32 noundef 0) #26, !dbg !13065
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -4, i32 noundef 0) #26, !dbg !13066
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13067
  %8 = or i32 %7, 458752, !dbg !13067
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13067
  tail call void @z_arm_fault_init() #26, !dbg !13068
  tail call void @z_arm_cpu_idle_init() #26, !dbg !13069
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13070
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13073
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !13074
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !13075
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13076
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13076
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13037, metadata !DIExpression()), !dbg !13077
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !13078
  call void @z_device_state_init() #26, !dbg !13079
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !13080
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !13081
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !13082
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !13083
  unreachable, !dbg !13083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2345, metadata !DIExpression()), !dbg !13084
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13085
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13085
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2346, metadata !DIExpression()), !dbg !13084
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2346, metadata !DIExpression()), !dbg !13084
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13086
  br i1 %7, label %8, label %35, !dbg !13087

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2346, metadata !DIExpression()), !dbg !13084
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13088
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13088
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2356, metadata !DIExpression()), !dbg !13089
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13090
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13090
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %14, metadata !2360, metadata !DIExpression()), !dbg !13089
  %15 = icmp eq %struct.device* %11, null, !dbg !13092
  br i1 %15, label %32, label %16, !dbg !13094

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13095
  br i1 %17, label %26, label %18, !dbg !13098

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %19, metadata !2360, metadata !DIExpression()), !dbg !13089
  %20 = icmp ult i32 %19, 255, !dbg !13101
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %21, metadata !2360, metadata !DIExpression()), !dbg !13089
  %22 = trunc i32 %21 to i8, !dbg !13102
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13103
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13103
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13104
  store i8 %22, i8* %25, align 1, !dbg !13105
  br label %26, !dbg !13106

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13107
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13107
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13108
  %30 = load i8, i8* %29, align 1, !dbg !13109
  %31 = or i8 %30, 1, !dbg !13109
  store i8 %31, i8* %29, align 1, !dbg !13109
  br label %32, !dbg !13110

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13111
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2346, metadata !DIExpression()), !dbg !13084
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13086
  br i1 %34, label %8, label %35, !dbg !13087, !llvm.loop !13112

35:                                               ; preds = %32, %1
  ret void, !dbg !13114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.116(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13117, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i32 %1, metadata !13118, metadata !DIExpression()), !dbg !13119
  %3 = trunc i32 %1 to i8, !dbg !13120
  %4 = shl i8 %3, 4, !dbg !13120
  %5 = and i32 %0, 15, !dbg !13123
  %6 = add nsw i32 %5, -4, !dbg !13124
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13125
  store volatile i8 %4, i8* %7, align 1, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: optsize
declare !dbg !13128 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13132, metadata !DIExpression()), !dbg !13133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13134
  store i8 1, i8* %2, align 1, !dbg !13135
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13136
  store i8 1, i8* %3, align 4, !dbg !13137
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13138
  store i32 0, i32* %4, align 4, !dbg !13139
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13140
  store i32 0, i32* %5, align 4, !dbg !13141
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13142
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13143
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13144
  ret void, !dbg !13145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13146 {
  tail call void @z_sched_init() #26, !dbg !13149
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13150
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0)) #26, !dbg !13151
  call void @llvm.dbg.value(metadata i8* %1, metadata !13148, metadata !DIExpression()), !dbg !13152
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !13153
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13154
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !13155
  ret i8* %1, !dbg !13156
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13161, metadata !DIExpression()), !dbg !13162
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !13163
  unreachable, !dbg !13164
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13167, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %1, metadata !13168, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %2, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13171
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !13172
  tail call void @boot_banner() #26, !dbg !13173
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !13174
  tail call void @z_init_static_threads() #26, !dbg !13175
  tail call void @main() #26, !dbg !13176
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13177
  %5 = and i8 %4, -2, !dbg !13177
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13177
  ret void, !dbg !13178
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13179 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13189, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata i8* %1, metadata !13190, metadata !DIExpression()), !dbg !13191
  ret void, !dbg !13192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13193 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13195, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata i8* %1, metadata !13196, metadata !DIExpression()), !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13199 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13200, !srcloc !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13203, metadata !DIExpression()) #25, !dbg !13208
  %2 = icmp ne i32 %1, 0, !dbg !13209
  ret i1 %2, !dbg !13210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13211 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13213
  %3 = load i8, i8* %2, align 4, !dbg !13214
  %4 = or i8 %3, 1, !dbg !13214
  store i8 %4, i8* %2, align 4, !dbg !13214
  ret void, !dbg !13215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13216 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13218
  %3 = load i8, i8* %2, align 4, !dbg !13219
  %4 = and i8 %3, -2, !dbg !13219
  store i8 %4, i8* %2, align 4, !dbg !13219
  ret void, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13221 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13222
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13223
  %3 = load i8, i8* %2, align 4, !dbg !13223
  %4 = and i8 %3, 1, !dbg !13224
  %5 = icmp ne i8 %4, 0, !dbg !13225
  ret i1 %5, !dbg !13226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13231, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i8* %1, metadata !13232, metadata !DIExpression()), !dbg !13233
  ret i32 -88, !dbg !13234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13239, metadata !DIExpression()), !dbg !13240
  ret i8* null, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13246, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8* %1, metadata !13247, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 %2, metadata !13248, metadata !DIExpression()), !dbg !13249
  ret i32 -88, !dbg !13250
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2483, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i8* %1, metadata !2484, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %2, metadata !2485, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 0, metadata !2486, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i8 undef, metadata !2488, metadata !DIExpression()), !dbg !13251
  %4 = icmp eq i8* %1, null, !dbg !13252
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13254
  br i1 %6, label %46, label %7, !dbg !13254

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13255
  %9 = load i8, i8* %8, align 1, !dbg !13255
  call void @llvm.dbg.value(metadata i8 %9, metadata !2488, metadata !DIExpression()), !dbg !13251
  %10 = add i32 %2, -1, !dbg !13256
  call void @llvm.dbg.value(metadata i32 %10, metadata !2485, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i8 0, metadata !2489, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i8 %9, metadata !2488, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 0, metadata !2486, metadata !DIExpression()), !dbg !13251
  %11 = icmp eq i8 %9, 0, !dbg !13258
  br i1 %11, label %12, label %15, !dbg !13260

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13261
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13262
  store i8 0, i8* %14, align 1, !dbg !13263
  br label %46, !dbg !13264

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2489, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i8 %17, metadata !2488, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %18, metadata !2486, metadata !DIExpression()), !dbg !13251
  %19 = zext i8 %17 to i32, !dbg !13265
  %20 = zext i8 %16 to i32, !dbg !13266
  %21 = shl nuw i32 1, %20, !dbg !13266
  call void @llvm.dbg.value(metadata i32 %21, metadata !2487, metadata !DIExpression()), !dbg !13251
  %22 = and i32 %21, %19, !dbg !13268
  %23 = icmp eq i32 %22, 0, !dbg !13270
  br i1 %23, label %42, label %24, !dbg !13271

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13272
  %26 = sub i32 %10, %18, !dbg !13273
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13274
  %28 = load i8*, i8** %27, align 4, !dbg !13274
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13275
  %30 = load i32, i32* %29, align 4, !dbg !13275
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13276
  %32 = add i32 %31, %18, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %32, metadata !2486, metadata !DIExpression()), !dbg !13251
  %33 = trunc i32 %21 to i8, !dbg !13278
  %34 = xor i8 %33, -1, !dbg !13278
  %35 = and i8 %17, %34, !dbg !13278
  call void @llvm.dbg.value(metadata i8 %35, metadata !2488, metadata !DIExpression()), !dbg !13251
  %36 = icmp eq i8 %35, 0, !dbg !13279
  br i1 %36, label %12, label %37, !dbg !13281

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13282
  %39 = sub i32 %10, %32, !dbg !13284
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.118, i32 0, i32 0), i32 noundef 1) #27, !dbg !13285
  %41 = add i32 %40, %32, !dbg !13286
  call void @llvm.dbg.value(metadata i32 %41, metadata !2486, metadata !DIExpression()), !dbg !13251
  br label %42, !dbg !13287

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13251
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13251
  call void @llvm.dbg.value(metadata i8 %44, metadata !2488, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %43, metadata !2486, metadata !DIExpression()), !dbg !13251
  %45 = add i8 %16, 1, !dbg !13288
  call void @llvm.dbg.value(metadata i8 %45, metadata !2489, metadata !DIExpression()), !dbg !13257
  br label %15, !dbg !13260

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.119, i32 0, i32 0), %3 ], !dbg !13251
  ret i8* %47, !dbg !13289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13290 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13294, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 %1, metadata !13295, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i8* %2, metadata !13296, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 %3, metadata !13297, metadata !DIExpression()), !dbg !13299
  %5 = icmp ult i32 %1, %3, !dbg !13300
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %6, metadata !13298, metadata !DIExpression()), !dbg !13299
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13301
  ret i32 %6, !dbg !13302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13307, metadata !DIExpression()), !dbg !13308
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13320, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13321, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 %2, metadata !13322, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13323, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i8* %4, metadata !13324, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i8* %5, metadata !13325, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i8* %6, metadata !13326, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 %7, metadata !13327, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i32 %8, metadata !13328, metadata !DIExpression()), !dbg !13331
  call void @llvm.dbg.value(metadata i8* undef, metadata !13329, metadata !DIExpression()), !dbg !13331
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13332
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13333
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13334
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13335
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13336
  call void @llvm.dbg.value(metadata i8* %13, metadata !13330, metadata !DIExpression()), !dbg !13331
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13337
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13338
  store i8* null, i8** %14, align 4, !dbg !13339
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13340
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13340
  br i1 %16, label %20, label %17, !dbg !13342

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13343
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13343
  br label %20, !dbg !13344

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13331
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13345
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13347
  ret i8* %13, !dbg !13348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13349 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13354, metadata !DIExpression()), !dbg !13355
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13356
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13357
  ret void, !dbg !13358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13359 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %1, metadata !13365, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %2, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %3, metadata !13367, metadata !DIExpression()), !dbg !13368
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13369
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13370
  %6 = trunc i32 %3 to i8, !dbg !13371
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13372
  store i8 %6, i8* %7, align 4, !dbg !13373
  %8 = trunc i32 %2 to i8, !dbg !13374
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13375
  store i8 %8, i8* %9, align 1, !dbg !13376
  %10 = trunc i32 %1 to i8, !dbg !13377
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13378
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13378
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13378
  store i8 %10, i8* %13, align 2, !dbg !13379
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13380
  store i8 0, i8* %14, align 1, !dbg !13381
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13382
  ret void, !dbg !13383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13388, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13389, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 %2, metadata !13390, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13396
  %4 = add i32 %2, 7, !dbg !13397
  %5 = and i32 %4, -8, !dbg !13397
  %6 = add i32 %5, 64, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %6, metadata !13391, metadata !DIExpression()), !dbg !13396
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.129(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13399
  call void @llvm.dbg.value(metadata i8* %7, metadata !13394, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 %5, metadata !13392, metadata !DIExpression()), !dbg !13396
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13400
  call void @llvm.dbg.value(metadata i8* %8, metadata !13393, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13396
  %9 = ptrtoint i8* %7 to i32, !dbg !13401
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13402
  store i32 %9, i32* %10, align 4, !dbg !13403
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13404
  store i32 %5, i32* %11, align 4, !dbg !13405
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13406
  store i32 0, i32* %12, align 4, !dbg !13407
  call void @llvm.dbg.value(metadata i8* %8, metadata !13393, metadata !DIExpression()), !dbg !13396
  ret i8* %8, !dbg !13408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.129(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13409 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13413, metadata !DIExpression()), !dbg !13414
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13415
  ret i8* %2, !dbg !13416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13417 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13422, metadata !DIExpression()), !dbg !13423
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13424
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13425
  ret void, !dbg !13426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13427 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13429, metadata !DIExpression()), !dbg !13430
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13431
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13432
  ret void, !dbg !13433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13434 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13438, metadata !DIExpression()), !dbg !13439
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13440
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13441
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13442
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13443
  ret void, !dbg !13444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13445 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13450, metadata !DIExpression()), !dbg !13451
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13452
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13453
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13454
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13455
  ret void, !dbg !13456
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13457 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13474, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13465, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13466, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %2, metadata !13467, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13468, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i8* %4, metadata !13469, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i8* %5, metadata !13470, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i8* %6, metadata !13471, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %7, metadata !13472, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %8, metadata !13473, metadata !DIExpression()), !dbg !13475
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13476
  %13 = icmp eq i64 %11, -1, !dbg !13477
  br i1 %13, label %15, label %14, !dbg !13479

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13480
  br label %15, !dbg !13482

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13484 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13489, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13488, metadata !DIExpression()), !dbg !13490
  %4 = icmp eq i64 %3, 0, !dbg !13491
  br i1 %4, label %5, label %6, !dbg !13493

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13494
  br label %7, !dbg !13496

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13497
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13504, metadata !DIExpression()), !dbg !13505
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13506, !srcloc !13508
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13509
  ret void, !dbg !13510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13511 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13514, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13513, metadata !DIExpression()), !dbg !13515
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13516
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13517
  ret void, !dbg !13518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13519 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13521, metadata !DIExpression()), !dbg !13541
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13542

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13543
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13539, metadata !DIExpression()), !dbg !13544
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13545

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13521, metadata !DIExpression()), !dbg !13541
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13546
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13546
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13549
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13549
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13550
  %9 = load i32, i32* %8, align 4, !dbg !13550
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13551
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13551
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13552
  %13 = load i8*, i8** %12, align 4, !dbg !13552
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13553
  %15 = load i8*, i8** %14, align 4, !dbg !13553
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13554
  %17 = load i8*, i8** %16, align 4, !dbg !13554
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13555
  %19 = load i32, i32* %18, align 4, !dbg !13555
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13556
  %21 = load i32, i32* %20, align 4, !dbg !13556
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13557
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13558
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13559
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13560
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13560
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13561
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13521, metadata !DIExpression()), !dbg !13541
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13562
  br i1 %27, label %2, label %1, !dbg !13542, !llvm.loop !13564

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13543
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13539, metadata !DIExpression()), !dbg !13544
  br label %29, !dbg !13545

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13566
  ret void, !dbg !13567

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13539, metadata !DIExpression()), !dbg !13544
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13568
  %33 = load i32, i32* %32, align 4, !dbg !13568
  %34 = icmp eq i32 %33, -1, !dbg !13572
  br i1 %34, label %43, label %35, !dbg !13573

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13574
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13574
  %38 = icmp sgt i32 %33, 0, !dbg !13576
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13576
  %40 = zext i32 %39 to i64, !dbg !13576
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13576
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13577
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13577
  br label %43, !dbg !13578

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13579
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13539, metadata !DIExpression()), !dbg !13544
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13580
  br i1 %45, label %30, label %29, !dbg !13545, !llvm.loop !13582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13584 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13589, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i64 %0, metadata !13591, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i32 1000, metadata !13596, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i32 10000, metadata !13597, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 1, metadata !13598, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 0, metadata !13599, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 1, metadata !13600, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 0, metadata !13601, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 1, metadata !13602, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i8 0, metadata !13603, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i64 0, metadata !13604, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.value(metadata i64 0, metadata !13604, metadata !DIExpression()), !dbg !13608
  %2 = mul i64 %0, 10, !dbg !13610
  ret i64 %2, !dbg !13616
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13617 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %1, metadata !13620, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %2, metadata !13621, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %3, metadata !13622, metadata !DIExpression()), !dbg !13623
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13624
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13625
  %7 = load i8, i8* %6, align 4, !dbg !13626
  %8 = or i8 %7, 4, !dbg !13626
  store i8 %8, i8* %6, align 4, !dbg !13626
  tail call void @z_thread_essential_clear() #27, !dbg !13627
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13628
  unreachable, !dbg !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13633, metadata !DIExpression()), !dbg !13634
  ret i32 -134, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13636 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13640, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.value(metadata i32 %1, metadata !13641, metadata !DIExpression()), !dbg !13642
  ret i32 -134, !dbg !13643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13651, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13652, metadata !DIExpression()), !dbg !13653
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13654
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13656
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13653
  ret i32 %6, !dbg !13657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13658 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13662, metadata !DIExpression()), !dbg !13663
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13664
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13663
  ret i32 %3, !dbg !13666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13667 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13669
  ret void, !dbg !13670
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13673, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i8* %1, metadata !13674, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i8* %2, metadata !13675, metadata !DIExpression()), !dbg !13676
  br label %4, !dbg !13677

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13678, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #25, !dbg !13686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #25, !dbg !13686
  tail call fastcc void @k_cpu_idle() #27, !dbg !13687
  br label %4, !dbg !13677, !llvm.loop !13688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13690 {
  tail call void @arch_cpu_idle() #26, !dbg !13691
  ret void, !dbg !13692
}

; Function Attrs: optsize
declare !dbg !13693 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13694 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13698, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i1 %1, metadata !13699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13704
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13705
  br i1 %3, label %13, label %4, !dbg !13706

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13707
  %6 = icmp eq i8 %5, 0, !dbg !13708
  br i1 %6, label %13, label %7, !dbg !13709

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13701, metadata !DIExpression()), !dbg !13710
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13711
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13711
  %10 = load i8*, i8** %9, align 4, !dbg !13711
  call void @llvm.dbg.value(metadata i8* %10, metadata !13700, metadata !DIExpression()), !dbg !13704
  br i1 %1, label %11, label %15, !dbg !13712

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13713
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13714
  br label %15, !dbg !13717

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13718
  call void @llvm.dbg.value(metadata i8* %14, metadata !13700, metadata !DIExpression()), !dbg !13704
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13720
  call void @llvm.dbg.value(metadata i8* %16, metadata !13700, metadata !DIExpression()), !dbg !13704
  ret i8* %16, !dbg !13721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13722 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13726, metadata !DIExpression()), !dbg !13727
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13728
  %3 = load i32, i32* %2, align 4, !dbg !13728
  %4 = trunc i32 %3 to i8, !dbg !13729
  %5 = and i8 %4, 3, !dbg !13729
  ret i8 %5, !dbg !13730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13731 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13752, metadata !DIExpression()), !dbg !13753
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13754
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13755
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13756
  tail call fastcc void @z_waitq_init.134(%union.anon* noundef nonnull %3) #27, !dbg !13757
  ret void, !dbg !13758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13759 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13764, metadata !DIExpression()), !dbg !13765
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13766
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13767
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13768
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13769
  ret void, !dbg !13770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.134(%union.anon* noundef %0) unnamed_addr #4 !dbg !13771 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13776, metadata !DIExpression()), !dbg !13777
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13778
  tail call fastcc void @sys_dlist_init.135(%struct._dnode* noundef %2) #27, !dbg !13779
  ret void, !dbg !13780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.135(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13781 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13786, metadata !DIExpression()), !dbg !13787
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13788
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13789
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13790
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13793 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13795, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13882, metadata !DIExpression()) #25, !dbg !13889
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13891, !srcloc !13897
  call void @llvm.dbg.value(metadata i32 undef, metadata !13894, metadata !DIExpression()) #25, !dbg !13898
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #25, !dbg !13898
  call void @llvm.dbg.value(metadata i32 undef, metadata !13888, metadata !DIExpression()) #25, !dbg !13889
  call void @llvm.dbg.value(metadata i32 undef, metadata !13796, metadata !DIExpression()), !dbg !13881
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13899
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13900
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13801, metadata !DIExpression()), !dbg !13881
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13901
  br i1 %5, label %7, label %6, !dbg !13903

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13904
  br label %7, !dbg !13906

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13891
  call void @llvm.dbg.value(metadata i32 %8, metadata !13894, metadata !DIExpression()) #25, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %8, metadata !13888, metadata !DIExpression()) #25, !dbg !13889
  call void @llvm.dbg.value(metadata i32 %8, metadata !13796, metadata !DIExpression()), !dbg !13881
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13907
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13908
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13908
  ret void, !dbg !13909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i8* %1, metadata !13915, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata i32 0, metadata !13923, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata i8* %1, metadata !13924, metadata !DIExpression()), !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13927, metadata !DIExpression()), !dbg !13933
  call void @llvm.dbg.value(metadata i32 0, metadata !13932, metadata !DIExpression()), !dbg !13933
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13935
  store i32 0, i32* %3, align 4, !dbg !13936
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13937
  store i8* %1, i8** %4, align 4, !dbg !13938
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13939
  ret void, !dbg !13940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13941 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13945, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i8* %1, metadata !13946, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i8* %2, metadata !13947, metadata !DIExpression()), !dbg !13948
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13949
  ret void, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13951 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13955, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8* %1, metadata !13956, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8* %2, metadata !13957, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i1 %3, metadata !13958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13965
  call void @llvm.dbg.value(metadata i1 %4, metadata !13959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13965
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13882, metadata !DIExpression()) #25, !dbg !13967
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13969, !srcloc !13897
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %8, metadata !13894, metadata !DIExpression()) #25, !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #25, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %8, metadata !13888, metadata !DIExpression()) #25, !dbg !13967
  call void @llvm.dbg.value(metadata i32 %8, metadata !13961, metadata !DIExpression()), !dbg !13965
  br i1 %4, label %9, label %13, !dbg !13972

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13973
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13976
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13976
  call void @llvm.dbg.value(metadata i8* %12, metadata !13956, metadata !DIExpression()), !dbg !13965
  br label %13, !dbg !13977

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13956, metadata !DIExpression()), !dbg !13965
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13978
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13979
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13960, metadata !DIExpression()), !dbg !13965
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13980
  br i1 %17, label %20, label %18, !dbg !13982

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13983
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13985
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13985
  br label %36, !dbg !13986

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13987

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13988
  call void @llvm.dbg.value(metadata i8* %22, metadata !13962, metadata !DIExpression()), !dbg !13989
  %23 = icmp eq i8* %22, null, !dbg !13990
  br i1 %23, label %24, label %25, !dbg !13992

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13993, metadata !DIExpression()) #25, !dbg !13999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13998, metadata !DIExpression()) #25, !dbg !13999
  call void @llvm.dbg.value(metadata i32 %8, metadata !14002, metadata !DIExpression()) #25, !dbg !14005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14007, !srcloc !14008
  call void @llvm.dbg.value(metadata i8* %22, metadata !13957, metadata !DIExpression()), !dbg !13965
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13962, metadata !DIExpression()), !dbg !13989
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !14009
  %27 = bitcast i8* %26 to i8**, !dbg !14009
  store i8* %2, i8** %27, align 4, !dbg !14010
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !14011
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !14012
  call void @llvm.dbg.value(metadata i8* %22, metadata !13957, metadata !DIExpression()), !dbg !13965
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14013
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !14015
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !14016
  call void @llvm.dbg.value(metadata i8* undef, metadata !13957, metadata !DIExpression()), !dbg !13965
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14017
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !14018
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !14019
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !14020
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !14020
  br label %36, !dbg !14021

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13965
  ret i32 %37, !dbg !14022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14023 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14027, metadata !DIExpression()), !dbg !14028
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14029
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !14029
  ret %struct.z_heap_bucket* %3, !dbg !14030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !14031 {
  call void @llvm.dbg.value(metadata i32 8, metadata !14034, metadata !DIExpression()), !dbg !14035
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !14036
  ret i8* %1, !dbg !14037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !14038 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14042, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i8 %1, metadata !14043, metadata !DIExpression()), !dbg !14044
  %3 = zext i8 %1 to i32, !dbg !14045
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14046
  store i32 %3, i32* %4, align 4, !dbg !14047
  ret void, !dbg !14048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14049 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14053, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14054, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14055, metadata !DIExpression()), !dbg !14056
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14057
  br i1 %4, label %5, label %6, !dbg !14059

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !14060
  br label %11, !dbg !14060

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14062
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !14062
  br i1 %8, label %9, label %10, !dbg !14057

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !14064
  br label %11, !dbg !14064

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !14066
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !14066
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !14059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14068 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14072, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14073, metadata !DIExpression()), !dbg !14074
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14075
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !14075
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14075
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14076
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14076
  br i1 %5, label %6, label %8, !dbg !14075

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14078
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14078
  br label %8, !dbg !14078

8:                                                ; preds = %6, %2
  ret void, !dbg !14075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14084, metadata !DIExpression()), !dbg !14085
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14086
  %3 = load i32, i32* %2, align 4, !dbg !14086
  %4 = and i32 %3, -4, !dbg !14087
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !14088
  ret %struct.z_heap_bucket* %5, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14092, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14093, metadata !DIExpression()), !dbg !14094
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !14095
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14096
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14096
  br i1 %4, label %5, label %6, !dbg !14095

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14098
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14098
  br label %7, !dbg !14098

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !14100
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14100
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14102 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14106, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14107, metadata !DIExpression()), !dbg !14109
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !14110
  call void @llvm.dbg.value(metadata i8 %3, metadata !14108, metadata !DIExpression()), !dbg !14109
  %4 = zext i8 %3 to i32, !dbg !14111
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !14112
  %6 = or i32 %4, %5, !dbg !14113
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14114
  store i32 %6, i32* %7, align 4, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14119, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14120, metadata !DIExpression()), !dbg !14121
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14122
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !14123
  ret void, !dbg !14124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !14125 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14127, metadata !DIExpression()), !dbg !14129
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14128, metadata !DIExpression()), !dbg !14129
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14130
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !14131
  ret void, !dbg !14132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14133 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14135, metadata !DIExpression()), !dbg !14136
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14137
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !14137
  ret %struct.z_heap_bucket* %3, !dbg !14138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14143, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %1, metadata !14144, metadata !DIExpression()), !dbg !14145
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14150, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.value(metadata i8* %1, metadata !14151, metadata !DIExpression()), !dbg !14152
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !14153
  ret void, !dbg !14154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14155 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14159, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %1, metadata !14160, metadata !DIExpression()), !dbg !14162
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %3, metadata !14161, metadata !DIExpression()), !dbg !14162
  ret i32 %3, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14165 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14167, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i8* %1, metadata !14168, metadata !DIExpression()), !dbg !14170
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %3, metadata !14169, metadata !DIExpression()), !dbg !14170
  ret i32 %3, !dbg !14172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14173 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14177, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i8* %1, metadata !14178, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i8* %2, metadata !14179, metadata !DIExpression()), !dbg !14182
  %4 = icmp eq i8* %1, null, !dbg !14183
  %5 = icmp eq i8* %2, null, !dbg !14183
  %6 = or i1 %4, %5, !dbg !14183
  br i1 %6, label %29, label %7, !dbg !14183

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13882, metadata !DIExpression()) #25, !dbg !14186
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14188, !srcloc !13897
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !14188
  call void @llvm.dbg.value(metadata i32 %10, metadata !13894, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %10, metadata !13888, metadata !DIExpression()) #25, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %10, metadata !14180, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14181, metadata !DIExpression()), !dbg !14182
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14191
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14194
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i8* %1, metadata !14178, metadata !DIExpression()), !dbg !14182
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14195
  br i1 %13, label %24, label %14, !dbg !14196

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14181, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i8* %16, metadata !14178, metadata !DIExpression()), !dbg !14182
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !14197
  %17 = bitcast i8* %16 to i8**, !dbg !14199
  %18 = load i8*, i8** %17, align 4, !dbg !14200
  call void @llvm.dbg.value(metadata i8* %18, metadata !14178, metadata !DIExpression()), !dbg !14182
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14201
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14181, metadata !DIExpression()), !dbg !14182
  %20 = icmp ne i8* %18, null, !dbg !14202
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !14195
  %22 = select i1 %20, i1 %21, i1 false, !dbg !14195
  br i1 %22, label %14, label %23, !dbg !14196, !llvm.loop !14203

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14205

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14206
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14209
  br label %27, !dbg !14210

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14211
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14211
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !14182
  ret i32 %30, !dbg !14212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14213 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14217, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %1, metadata !14218, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %2, metadata !14219, metadata !DIExpression()), !dbg !14220
  %4 = icmp ne i8* %1, null, !dbg !14221
  %5 = icmp ne i8* %2, null, !dbg !14221
  %6 = and i1 %4, %5, !dbg !14221
  br i1 %6, label %7, label %15, !dbg !14221

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14223
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14223
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14226
  br i1 %9, label %11, label %12, !dbg !14227

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14228
  br label %13, !dbg !14228

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14230
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14227
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14227
  br label %15, !dbg !14227

15:                                               ; preds = %13, %3
  ret void, !dbg !14232
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14233 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14249, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14250, metadata !DIExpression()), !dbg !14252
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.138(%struct._slist* noundef %1) #27, !dbg !14253
  br i1 %3, label %13, label %4, !dbg !14255

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14256
  %6 = load i8*, i8** %5, align 4, !dbg !14256
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14257
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14257
  %9 = load i8*, i8** %8, align 4, !dbg !14257
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %10, metadata !14251, metadata !DIExpression()), !dbg !14252
  %11 = icmp eq i32 %10, 0, !dbg !14259
  br i1 %11, label %12, label %13, !dbg !14261

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14262
  br label %13, !dbg !14263

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14252
  ret i32 %14, !dbg !14264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.138(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14265 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14269, metadata !DIExpression()), !dbg !14270
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.139(%struct._slist* noundef %0) #27, !dbg !14271
  %3 = icmp eq %struct._snode* %2, null, !dbg !14271
  ret i1 %3, !dbg !14271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14272 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14276, metadata !DIExpression()), !dbg !14277
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14278
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14279
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14280
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14281
  ret void, !dbg !14282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.139(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14287, metadata !DIExpression()), !dbg !14288
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14289
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14289
  ret %struct._snode* %3, !dbg !14290
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14291 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14300, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14299, metadata !DIExpression()), !dbg !14307
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13882, metadata !DIExpression()) #25, !dbg !14309
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14311, !srcloc !13897
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14311
  call void @llvm.dbg.value(metadata i32 %5, metadata !13894, metadata !DIExpression()) #25, !dbg !14313
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #25, !dbg !14313
  call void @llvm.dbg.value(metadata i32 %5, metadata !13888, metadata !DIExpression()) #25, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %5, metadata !14301, metadata !DIExpression()), !dbg !14307
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14314
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14314
  br i1 %7, label %11, label %8, !dbg !14315, !prof !14316

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14317
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14303, metadata !DIExpression()), !dbg !14318
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14319
  call void @llvm.dbg.value(metadata i8* %10, metadata !14302, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.value(metadata i32 %5, metadata !13993, metadata !DIExpression()) #25, !dbg !14320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13998, metadata !DIExpression()) #25, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %5, metadata !14002, metadata !DIExpression()) #25, !dbg !14322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14324, !srcloc !14008
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14300, metadata !DIExpression()), !dbg !14307
  %13 = icmp eq i64 %12, 0, !dbg !14325
  br i1 %13, label %14, label %15, !dbg !14327

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13993, metadata !DIExpression()) #25, !dbg !14328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13998, metadata !DIExpression()) #25, !dbg !14328
  call void @llvm.dbg.value(metadata i32 %5, metadata !14002, metadata !DIExpression()) #25, !dbg !14331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14333, !srcloc !14008
  br label %24, !dbg !14334

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14335
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14336
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %18, metadata !14306, metadata !DIExpression()), !dbg !14307
  %19 = icmp eq i32 %18, 0, !dbg !14337
  br i1 %19, label %20, label %24, !dbg !14338

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14339
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14340
  %23 = load i8*, i8** %22, align 4, !dbg !14340
  br label %24, !dbg !14338

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14307
  ret i8* %25, !dbg !14341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14342 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14346, metadata !DIExpression()), !dbg !14347
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14348
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14348
  ret i1 %3, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14351, metadata !DIExpression()), !dbg !14353
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14354
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14352, metadata !DIExpression()), !dbg !14353
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14354
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14354
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14355
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14355
  br i1 %5, label %6, label %8, !dbg !14354

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14357
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14357
  br label %8, !dbg !14357

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14354
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14363, metadata !DIExpression()), !dbg !14366
  call void @llvm.dbg.value(metadata i8* %1, metadata !14364, metadata !DIExpression()), !dbg !14366
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14367
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14368
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14369
  call void @llvm.dbg.value(metadata i1 %5, metadata !14365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14366
  ret i1 %5, !dbg !14370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14371 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14375, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14376, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14377, metadata !DIExpression()), !dbg !14379
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14380
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14377, metadata !DIExpression()), !dbg !14379
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14382
  br i1 %4, label %15, label %5, !dbg !14380

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14377, metadata !DIExpression()), !dbg !14379
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14384
  br i1 %6, label %9, label %11, !dbg !14387

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14377, metadata !DIExpression()), !dbg !14379
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14384
  br i1 %8, label %9, label %11, !dbg !14387, !llvm.loop !14388

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14389
  br label %15, !dbg !14389

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14377, metadata !DIExpression()), !dbg !14379
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14382
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14378, metadata !DIExpression()), !dbg !14379
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14382
  br i1 %14, label %15, label %7, !dbg !14380, !llvm.loop !14388

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14392 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14394, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14395, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14396, metadata !DIExpression()), !dbg !14397
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14398
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14400
  br i1 %4, label %6, label %11, !dbg !14401

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14402
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14404
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14404
  br i1 %8, label %9, label %15, !dbg !14402

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14406
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14406
  br label %15, !dbg !14406

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14408
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14410
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14410
  br i1 %13, label %14, label %15, !dbg !14408

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14412
  br label %15, !dbg !14412

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14401
  ret void, !dbg !14401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14414 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14418
  br i1 %2, label %5, label %3, !dbg !14418

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14418
  br label %5, !dbg !14418

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14418
  ret %struct.z_heap_bucket* %6, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14421, metadata !DIExpression()), !dbg !14422
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14423
  ret %struct.z_heap_bucket* %2, !dbg !14423
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14424 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14426, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i8* %1, metadata !14427, metadata !DIExpression()), !dbg !14429
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14430
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14430
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14428, metadata !DIExpression()), !dbg !14429
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14432
  br i1 %5, label %14, label %6, !dbg !14430

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14430

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14428, metadata !DIExpression()), !dbg !14429
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14434
  br i1 %10, label %15, label %11, !dbg !14437

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14432
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14428, metadata !DIExpression()), !dbg !14429
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14432
  br i1 %13, label %14, label %8, !dbg !14430, !llvm.loop !14438

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14440
  br label %15, !dbg !14441

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14447, metadata !DIExpression()), !dbg !14449
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14450
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14451
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14452
  call void @llvm.dbg.value(metadata i8* %4, metadata !14448, metadata !DIExpression()), !dbg !14449
  ret i8* %4, !dbg !14453
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14454 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14456, metadata !DIExpression()), !dbg !14458
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14459
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14460
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14461
  call void @llvm.dbg.value(metadata i8* %4, metadata !14457, metadata !DIExpression()), !dbg !14458
  ret i8* %4, !dbg !14462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14467, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14468, metadata !DIExpression()), !dbg !14471
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14472
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14472
  %5 = load i8, i8* %4, align 2, !dbg !14472
  call void @llvm.dbg.value(metadata i8 %5, metadata !14469, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14471
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14473
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14473
  %8 = load i8, i8* %7, align 2, !dbg !14473
  call void @llvm.dbg.value(metadata i8 %8, metadata !14470, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14471
  %9 = icmp eq i8 %8, %5, !dbg !14474
  %10 = sext i8 %5 to i32, !dbg !14476
  %11 = sext i8 %8 to i32, !dbg !14476
  %12 = sub nsw i32 %11, %10, !dbg !14476
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14476
  ret i32 %13, !dbg !14477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14482, metadata !DIExpression()), !dbg !14483
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14484
  %3 = icmp eq i32 %2, 0, !dbg !14486
  br i1 %3, label %8, label %4, !dbg !14487

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14488
  %6 = add i32 %5, %2, !dbg !14490
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14491
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14492
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14493
  br label %8, !dbg !14494

8:                                                ; preds = %4, %1
  ret void, !dbg !14495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14500, metadata !DIExpression()), !dbg !14502
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14503
  call void @llvm.dbg.value(metadata i32 %1, metadata !14501, metadata !DIExpression()), !dbg !14502
  ret i32 %1, !dbg !14504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14509, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 %1, metadata !14510, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 0, metadata !14511, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !14527
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14529, !srcloc !14535
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %4, metadata !14532, metadata !DIExpression()) #25, !dbg !14536
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !14536
  call void @llvm.dbg.value(metadata i32 %4, metadata !14526, metadata !DIExpression()) #25, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %4, metadata !14517, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()), !dbg !14519
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14537
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14540
  %6 = icmp sgt i32 %0, 0, !dbg !14541
  %7 = icmp sgt i32 %5, 2, !dbg !14543
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14543
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14543
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14544
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14545
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14546
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #25, !dbg !14553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !14553
  call void @llvm.dbg.value(metadata i32 %4, metadata !14555, metadata !DIExpression()) #25, !dbg !14558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14560, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !14511, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()), !dbg !14519
  ret void, !dbg !14562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14565, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i32 %0, metadata !14567, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14582
  call void @llvm.dbg.value(metadata i32 1000, metadata !14570, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i32 10000, metadata !14571, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i8 1, metadata !14572, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i1 true, metadata !14573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14582
  call void @llvm.dbg.value(metadata i1 true, metadata !14574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14582
  call void @llvm.dbg.value(metadata i8 0, metadata !14575, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i1 true, metadata !14576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14582
  call void @llvm.dbg.value(metadata i1 false, metadata !14577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14582
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !14582
  %2 = mul i32 %0, 10, !dbg !14584
  ret i32 %2, !dbg !14590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14593, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !14596
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14598, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !14600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %3, metadata !14594, metadata !DIExpression()), !dbg !14595
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14601
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14603
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14604
  br i1 %6, label %7, label %8, !dbg !14605

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !14608
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !14610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14612, !srcloc !14561
  br label %24, !dbg !14613

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14614
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14615
  %10 = icmp eq i32 %9, 0, !dbg !14615
  br i1 %10, label %21, label %11, !dbg !14617

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14618
  br i1 %12, label %13, label %21, !dbg !14619

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14620
  %15 = icmp sgt i32 %14, %0, !dbg !14623
  br i1 %15, label %19, label %16, !dbg !14624

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14625
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %18, metadata !14594, metadata !DIExpression()), !dbg !14595
  br label %22, !dbg !14627

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14628
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14628
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14630
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14595
  call void @llvm.dbg.value(metadata i32 %23, metadata !14594, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 %23, metadata !14547, metadata !DIExpression()) #25, !dbg !14632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %23, metadata !14555, metadata !DIExpression()) #25, !dbg !14634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14636, !srcloc !14561
  br label %24, !dbg !14637

24:                                               ; preds = %22, %7
  ret void, !dbg !14637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14642, metadata !DIExpression()), !dbg !14644
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14645
  %3 = icmp eq i32 %2, 0, !dbg !14645
  br i1 %3, label %16, label %4, !dbg !14646

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14647
  br i1 %5, label %16, label %6, !dbg !14648

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14649
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14649
  %9 = load i8, i8* %8, align 2, !dbg !14649
  %10 = sext i8 %9 to i32, !dbg !14650
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14651
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14652
  br i1 %12, label %16, label %13, !dbg !14653

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14654
  %15 = xor i1 %14, true, !dbg !14655
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14644
  call void @llvm.dbg.value(metadata i1 %17, metadata !14643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14644
  ret i1 %17, !dbg !14656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14657 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14661, metadata !DIExpression()), !dbg !14663
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14664
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14662, metadata !DIExpression()), !dbg !14663
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14665
  br i1 %3, label %5, label %4, !dbg !14667

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14668
  br label %5, !dbg !14670

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14661, metadata !DIExpression()), !dbg !14663
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14671
  ret i32 %6, !dbg !14672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14675, metadata !DIExpression()), !dbg !14677
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14678
  %3 = load i8, i8* %2, align 1, !dbg !14678
  call void @llvm.dbg.value(metadata i8 %3, metadata !14676, metadata !DIExpression()), !dbg !14677
  %4 = and i8 %3, 31, !dbg !14679
  %5 = icmp ne i8 %4, 0, !dbg !14680
  ret i1 %5, !dbg !14681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14684, metadata !DIExpression()), !dbg !14685
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14686
  br i1 %2, label %3, label %7, !dbg !14688

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #25, !dbg !14692
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14695
  %5 = load i8, i8* %4, align 1, !dbg !14696
  %6 = and i8 %5, 127, !dbg !14696
  store i8 %6, i8* %4, align 1, !dbg !14696
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()) #25, !dbg !14700
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14704
  br label %7, !dbg !14705

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #25, !dbg !14709
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14711
  %9 = load i8, i8* %8, align 1, !dbg !14712
  %10 = or i8 %9, -128, !dbg !14712
  store i8 %10, i8* %8, align 1, !dbg !14712
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14713, metadata !DIExpression()) #25, !dbg !14716
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14720, metadata !DIExpression()) #25, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()) #25, !dbg !14728
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14730
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14727, metadata !DIExpression()) #25, !dbg !14728
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14732
  br i1 %12, label %23, label %13, !dbg !14730

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14727, metadata !DIExpression()) #25, !dbg !14728
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14734
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14727, metadata !DIExpression()) #25, !dbg !14728
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14735
  %17 = icmp sgt i32 %16, 0, !dbg !14738
  br i1 %17, label %18, label %20, !dbg !14739

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14740
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14742
  br label %25, !dbg !14743

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14732
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14727, metadata !DIExpression()) #25, !dbg !14728
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14732
  br i1 %22, label %23, label %13, !dbg !14730, !llvm.loop !14744

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14746
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14747
  br label %25, !dbg !14748

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14749
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14750
  %28 = zext i1 %27 to i32, !dbg !14750
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14751
  ret void, !dbg !14752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14753 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14755, metadata !DIExpression()), !dbg !14756
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14757
  ret i1 %2, !dbg !14758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14761, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14762, metadata !DIExpression()), !dbg !14763
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14764
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14765
  ret void, !dbg !14766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14767 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14771, metadata !DIExpression()), !dbg !14772
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14773
  br i1 %2, label %6, label %3, !dbg !14773

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14774
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14774
  br label %6, !dbg !14773

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14773
  ret %struct._dnode* %7, !dbg !14775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14776 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14780, metadata !DIExpression()), !dbg !14784
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14781, metadata !DIExpression()), !dbg !14784
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14785
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14785
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14782, metadata !DIExpression()), !dbg !14784
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14786
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14787
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14788
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14789
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14790
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14791
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14792
  ret void, !dbg !14793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14798, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14799, metadata !DIExpression()), !dbg !14800
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14801
  br i1 %3, label %6, label %4, !dbg !14802

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14803
  br label %6, !dbg !14802

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14802
  ret %struct._dnode* %7, !dbg !14804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14809, metadata !DIExpression()), !dbg !14812
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14810, metadata !DIExpression()), !dbg !14812
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14813
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14813
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14811, metadata !DIExpression()), !dbg !14812
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14814
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14815
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14816
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14817
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14818
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14819
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()), !dbg !14826
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14834, metadata !DIExpression()) #25, !dbg !14836
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14837
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14838
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14838
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14825, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14839, metadata !DIExpression()) #25, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %0, metadata !14844, metadata !DIExpression()) #25, !dbg !14845
  %6 = icmp eq i32 %0, 0, !dbg !14848
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14850
  br i1 %6, label %8, label %15, !dbg !14851

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14852
  br i1 %9, label %15, label %10, !dbg !14854

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14855
  br i1 %11, label %15, label %12, !dbg !14857

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14858
  %14 = icmp eq i32 %13, 0, !dbg !14858
  br i1 %14, label %18, label %15, !dbg !14860

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14861
  br i1 %16, label %18, label %17, !dbg !14864

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14865
  br label %18, !dbg !14867

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14850
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14850
  ret void, !dbg !14868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14869 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14873, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14874, metadata !DIExpression()), !dbg !14876
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14877
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14875, metadata !DIExpression()), !dbg !14876
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14874, metadata !DIExpression()), !dbg !14876
  ret %struct.k_thread* %3, !dbg !14878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14882
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14883
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14884
  %4 = xor i1 %3, true, !dbg !14885
  ret i1 %4, !dbg !14886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14889, metadata !DIExpression()), !dbg !14890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14891
  %3 = load i16, i16* %2, align 2, !dbg !14891
  %4 = icmp ult i16 %3, 128, !dbg !14892
  %5 = zext i1 %4 to i32, !dbg !14892
  ret i32 %5, !dbg !14893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14894 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14900, metadata !DIExpression()), !dbg !14901
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14902
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14903
  %4 = xor i1 %3, true, !dbg !14904
  ret i1 %4, !dbg !14905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14906 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14912, metadata !DIExpression()), !dbg !14913
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14914
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14914
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14915
  ret i1 %4, !dbg !14916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14917 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14919, metadata !DIExpression()), !dbg !14921
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14920, metadata !DIExpression()), !dbg !14921
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14922
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14922
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14923
  br i1 %5, label %9, label %6, !dbg !14924

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14925
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14925
  br label %9, !dbg !14924

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14924
  ret %struct._dnode* %10, !dbg !14926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14927 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14931, metadata !DIExpression()), !dbg !14932
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14933
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14933
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14934
  ret i1 %4, !dbg !14935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14936 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14940, metadata !DIExpression()), !dbg !14943
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14944
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14944
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14941, metadata !DIExpression()), !dbg !14943
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14945
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14945
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14942, metadata !DIExpression()), !dbg !14943
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14946
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14947
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14948
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14949
  tail call fastcc void @sys_dnode_init.142(%struct._dnode* noundef %0) #27, !dbg !14950
  ret void, !dbg !14951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.142(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14954, metadata !DIExpression()), !dbg !14955
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14956
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14957
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14958
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14959
  ret void, !dbg !14960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i32 128, metadata !14966, metadata !DIExpression()), !dbg !14967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14968
  %3 = load i8, i8* %2, align 1, !dbg !14968
  %4 = icmp slt i8 %3, 0, !dbg !14969
  ret i1 %4, !dbg !14970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14975, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 %1, metadata !14976, metadata !DIExpression()), !dbg !14977
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14978
  ret i1 %3, !dbg !14979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14982, metadata !DIExpression()), !dbg !14983
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14984
  ret i1 %2, !dbg !14985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata i32 %1, metadata !14989, metadata !DIExpression()), !dbg !14990
  %3 = icmp slt i32 %0, %1, !dbg !14991
  ret i1 %3, !dbg !14992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15001
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15003, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15003
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15005
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %3, metadata !14998, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15011
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15015, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15000
  ret void, !dbg !15016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15019, metadata !DIExpression()), !dbg !15020
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15021
  br i1 %2, label %24, label %3, !dbg !15023

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15024
  br i1 %4, label %5, label %24, !dbg !15025

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #25, !dbg !15026
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15029
  %7 = load i8, i8* %6, align 1, !dbg !15030
  %8 = or i8 %7, -128, !dbg !15030
  store i8 %8, i8* %6, align 1, !dbg !15030
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14713, metadata !DIExpression()) #25, !dbg !15031
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14720, metadata !DIExpression()) #25, !dbg !15033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()) #25, !dbg !15033
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15035
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14727, metadata !DIExpression()) #25, !dbg !15033
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15036
  br i1 %10, label %21, label %11, !dbg !15035

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14727, metadata !DIExpression()) #25, !dbg !15033
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14727, metadata !DIExpression()) #25, !dbg !15033
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !15038
  %15 = icmp sgt i32 %14, 0, !dbg !15039
  br i1 %15, label %16, label %18, !dbg !15040

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15041
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !15042
  br label %23, !dbg !15043

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !15036
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14727, metadata !DIExpression()) #25, !dbg !15033
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15036
  br i1 %20, label %21, label %11, !dbg !15035, !llvm.loop !15044

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15046
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !15047
  br label %23, !dbg !15048

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15049
  br label %24, !dbg !15050

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15054, metadata !DIExpression()), !dbg !15055
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !15056
  br i1 %2, label %6, label %3, !dbg !15057

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !15058
  %5 = xor i1 %4, true, !dbg !15057
  br label %6, !dbg !15057

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15062, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.value(metadata i32 0, metadata !15063, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15068
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15070, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15070
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15072
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15072
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15068
  call void @llvm.dbg.value(metadata i32 %3, metadata !15065, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15063, metadata !DIExpression()), !dbg !15067
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !15073
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15076
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15078
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15080, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15063, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15063, metadata !DIExpression()), !dbg !15067
  ret void, !dbg !15081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15084, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15089, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15089
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15087
  call void @llvm.dbg.value(metadata i32 %3, metadata !15085, metadata !DIExpression()), !dbg !15086
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !15092
  br i1 %4, label %5, label %6, !dbg !15094

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15095
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15098
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15100, !srcloc !14561
  br label %8, !dbg !15101

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.147(%struct.k_thread* noundef %0) #27, !dbg !15102
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15103
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15104
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15104
  br label %8, !dbg !15105

8:                                                ; preds = %6, %5
  ret void, !dbg !15105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()), !dbg !15109
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15110
  %3 = load i8, i8* %2, align 1, !dbg !15110
  %4 = and i8 %3, 4, !dbg !15111
  %5 = icmp eq i8 %4, 0, !dbg !15112
  ret i1 %5, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.147(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15116, metadata !DIExpression()), !dbg !15117
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15118
  %3 = load i8, i8* %2, align 1, !dbg !15119
  %4 = and i8 %3, -5, !dbg !15119
  store i8 %4, i8* %2, align 1, !dbg !15119
  ret void, !dbg !15120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15121 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15124, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15123, metadata !DIExpression()), !dbg !15125
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !15126
  br i1 %4, label %5, label %9, !dbg !15128

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !15129
  br i1 %6, label %7, label %9, !dbg !15130

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15131, metadata !DIExpression()) #25, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !15137
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !15140
  br label %10, !dbg !15141

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15147, !srcloc !14561
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15153, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata i32 %0, metadata !15155, metadata !DIExpression()), !dbg !15160
  %2 = icmp eq i32 %0, 0, !dbg !15162
  br i1 %2, label %3, label %6, !dbg !15163

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15164, !srcloc !15171
  call void @llvm.dbg.value(metadata i32 %4, metadata !15167, metadata !DIExpression()) #25, !dbg !15172
  %5 = icmp eq i32 %4, 0, !dbg !15173
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15154
  ret i1 %7, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15175 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15178
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15177, metadata !DIExpression()), !dbg !15179
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15180
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15181
  ret i1 %3, !dbg !15182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %2, metadata !15186, metadata !DIExpression()), !dbg !15187
  ret i32 %2, !dbg !15189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()), !dbg !15196
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15197
  call void @llvm.dbg.value(metadata i32 0, metadata !15193, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15199
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15201, !srcloc !14535
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %4, metadata !14532, metadata !DIExpression()) #25, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %4, metadata !14526, metadata !DIExpression()) #25, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %4, metadata !15195, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15193, metadata !DIExpression()), !dbg !15198
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15204
  br i1 %5, label %6, label %10, !dbg !15208

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #25, !dbg !15209
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15212
  %8 = load i8, i8* %7, align 1, !dbg !15213
  %9 = and i8 %8, 127, !dbg !15213
  store i8 %9, i8* %7, align 1, !dbg !15213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()) #25, !dbg !15214
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15216
  br label %10, !dbg !15217

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15218
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15219
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15220
  %13 = zext i1 %12 to i32, !dbg !15220
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #25, !dbg !15222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15222
  call void @llvm.dbg.value(metadata i32 %4, metadata !14555, metadata !DIExpression()) #25, !dbg !15224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15226, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15193, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15193, metadata !DIExpression()), !dbg !15198
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15227
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15229
  br i1 %15, label %16, label %17, !dbg !15230

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15231
  br label %17, !dbg !15233

17:                                               ; preds = %16, %10
  ret void, !dbg !15234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15237, metadata !DIExpression()), !dbg !15238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15239
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15240
  ret i32 %3, !dbg !15241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15244, metadata !DIExpression()), !dbg !15245
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15246
  %3 = load i8, i8* %2, align 1, !dbg !15247
  %4 = or i8 %3, 16, !dbg !15247
  store i8 %4, i8* %2, align 1, !dbg !15247
  ret void, !dbg !15248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15249 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15250, !srcloc !14535
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %2, metadata !14532, metadata !DIExpression()) #25, !dbg !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15252
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15253
  ret void, !dbg !15254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15257, metadata !DIExpression()), !dbg !15258
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15259
  br i1 %2, label %3, label %5, !dbg !15261

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15262
  br label %6, !dbg !15264

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14555, metadata !DIExpression()) #25, !dbg !15265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15268, !srcloc !14561
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15272, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15275
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15277, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %3, metadata !15273, metadata !DIExpression()), !dbg !15274
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15280
  br i1 %4, label %6, label %5, !dbg !15282

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15288, !srcloc !14561
  br label %8, !dbg !15289

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15290
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15291
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15292
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15292
  br label %8, !dbg !15293

8:                                                ; preds = %6, %5
  ret void, !dbg !15293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15296, metadata !DIExpression()), !dbg !15297
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15298
  %3 = load i8, i8* %2, align 1, !dbg !15298
  %4 = and i8 %3, 16, !dbg !15299
  %5 = icmp ne i8 %4, 0, !dbg !15300
  ret i1 %5, !dbg !15301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15302 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15304, metadata !DIExpression()), !dbg !15305
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15306
  %3 = load i8, i8* %2, align 1, !dbg !15307
  %4 = and i8 %3, -17, !dbg !15307
  store i8 %4, i8* %2, align 1, !dbg !15307
  ret void, !dbg !15308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15309 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15319, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15317, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15318, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata i32 0, metadata !15320, metadata !DIExpression()), !dbg !15324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15325
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15327, !srcloc !14535
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %5, metadata !14532, metadata !DIExpression()) #25, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %5, metadata !14526, metadata !DIExpression()) #25, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %5, metadata !15322, metadata !DIExpression()), !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15320, metadata !DIExpression()), !dbg !15324
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %5, metadata !14547, metadata !DIExpression()) #25, !dbg !15333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %5, metadata !14555, metadata !DIExpression()) #25, !dbg !15335
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15337, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15320, metadata !DIExpression()), !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15320, metadata !DIExpression()), !dbg !15324
  ret void, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15339 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15343, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15341, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15342, metadata !DIExpression()), !dbg !15344
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15345
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15346
  ret void, !dbg !15347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15352, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15353, metadata !DIExpression()), !dbg !15354
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15355
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15356
  %3 = icmp eq %union.anon* %1, null, !dbg !15357
  br i1 %3, label %21, label %4, !dbg !15359

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15360
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15362
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15363
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14720, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()) #25, !dbg !15364
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15366
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14727, metadata !DIExpression()) #25, !dbg !15364
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15367
  br i1 %8, label %19, label %9, !dbg !15366

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14727, metadata !DIExpression()) #25, !dbg !15364
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15368
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14727, metadata !DIExpression()) #25, !dbg !15364
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15369
  %13 = icmp sgt i32 %12, 0, !dbg !15370
  br i1 %13, label %14, label %16, !dbg !15371

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15372
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15373
  br label %21, !dbg !15374

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15367
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14727, metadata !DIExpression()) #25, !dbg !15364
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15367
  br i1 %18, label %19, label %9, !dbg !15366, !llvm.loop !15375

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15377
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15378
  br label %21, !dbg !15379

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15381 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15386, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15385, metadata !DIExpression()), !dbg !15387
  %4 = icmp eq i64 %3, -1, !dbg !15388
  br i1 %4, label %6, label %5, !dbg !15390

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15391
  br label %6, !dbg !15393

6:                                                ; preds = %5, %2
  ret void, !dbg !15394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15395 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15398, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15397, metadata !DIExpression()), !dbg !15399
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15400
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15401
  ret void, !dbg !15402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15405, metadata !DIExpression()), !dbg !15413
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15414
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15406, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 0, metadata !15407, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15416
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15418, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15409, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()), !dbg !15415
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15421
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15422
  %7 = load i8, i8* %6, align 1, !dbg !15422
  %8 = and i8 %7, 40, !dbg !15423
  %9 = icmp eq i8 %8, 0, !dbg !15423
  call void @llvm.dbg.value(metadata i1 %9, metadata !15410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15424
  br i1 %9, label %10, label %17, !dbg !15425

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15426
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15426
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15426
  %14 = icmp eq %union.anon* %13, null, !dbg !15430
  br i1 %14, label %16, label %15, !dbg !15431

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15432
  br label %16, !dbg !15434

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.147(%struct.k_thread* noundef nonnull %3) #27, !dbg !15435
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15436
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15437
  br label %17, !dbg !15438

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15418
  call void @llvm.dbg.value(metadata i32 %18, metadata !14532, metadata !DIExpression()) #25, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %18, metadata !14526, metadata !DIExpression()) #25, !dbg !15416
  call void @llvm.dbg.value(metadata i32 %18, metadata !15409, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !15441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15443, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15407, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()), !dbg !15415
  ret void, !dbg !15444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15445 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15447, metadata !DIExpression()), !dbg !15448
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15449
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15450
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15451
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15452
  ret void, !dbg !15453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15456, metadata !DIExpression()), !dbg !15457
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15458
  %3 = load i8, i8* %2, align 1, !dbg !15459
  %4 = and i8 %3, -3, !dbg !15459
  store i8 %4, i8* %2, align 1, !dbg !15459
  ret void, !dbg !15460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15463, metadata !DIExpression()), !dbg !15464
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15465
  br i1 %2, label %3, label %7, !dbg !15467

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #25, !dbg !15468
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15471
  %5 = load i8, i8* %4, align 1, !dbg !15472
  %6 = and i8 %5, 127, !dbg !15472
  store i8 %6, i8* %4, align 1, !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()) #25, !dbg !15473
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15475
  br label %7, !dbg !15476

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15478
  %10 = zext i1 %9 to i32, !dbg !15478
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15479
  ret void, !dbg !15480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15483, metadata !DIExpression()), !dbg !15484
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15485
  %3 = load i8, i8* %2, align 1, !dbg !15486
  %4 = or i8 %3, 2, !dbg !15486
  store i8 %4, i8* %2, align 1, !dbg !15486
  ret void, !dbg !15487
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15490, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.value(metadata i32 0, metadata !15491, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15496
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15498, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %3, metadata !15493, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15495
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15506
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15508, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15491, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15495
  ret void, !dbg !15509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15510 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15516, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 %0, metadata !15514, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15515, metadata !DIExpression()), !dbg !15521
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15522
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15523
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15524
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15525
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %6, metadata !15517, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 0, metadata !15518, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15528
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15530, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15528
  call void @llvm.dbg.value(metadata i32 undef, metadata !15520, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15527
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15533
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15537
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15538
  br i1 %10, label %11, label %12, !dbg !15539

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15540
  br label %12, !dbg !15542

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15530
  call void @llvm.dbg.value(metadata i32 %13, metadata !14532, metadata !DIExpression()) #25, !dbg !15532
  call void @llvm.dbg.value(metadata i32 %13, metadata !14526, metadata !DIExpression()) #25, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %13, metadata !15520, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !15545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15547, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15518, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15527
  ret i32 %6, !dbg !15548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15549 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15554, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata i64 undef, metadata !15556, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15553, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15555, metadata !DIExpression()), !dbg !15557
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15558
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15560
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15562, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15560
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15565
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15566
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15131, metadata !DIExpression()) #25, !dbg !15567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !15567
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15569
  ret i32 %9, !dbg !15570
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15571 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15575, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15576, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 0, metadata !15577, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15582
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15584, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 undef, metadata !15579, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15576, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()), !dbg !15581
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15587
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15576, metadata !DIExpression()), !dbg !15580
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15590
  br i1 %5, label %7, label %6, !dbg !15592

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15593
  br label %7, !dbg !15595

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %8, metadata !14532, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %8, metadata !14526, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 %8, metadata !15579, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !15598
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15600, !srcloc !14561
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15576, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()), !dbg !15581
  ret %struct.k_thread* %4, !dbg !15601
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15602 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15604, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15605, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !15606, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15611
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15613, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15608, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15605, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()), !dbg !15610
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15616
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15605, metadata !DIExpression()), !dbg !15609
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15619
  br i1 %5, label %8, label %6, !dbg !15621

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15622
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15624
  br label %8, !dbg !15625

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %9, metadata !14532, metadata !DIExpression()) #25, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %9, metadata !14526, metadata !DIExpression()) #25, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %9, metadata !15608, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !15626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !15628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15630, !srcloc !14561
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15605, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()), !dbg !15610
  ret %struct.k_thread* %4, !dbg !15631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15634, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15490, metadata !DIExpression()) #25, !dbg !15636
  call void @llvm.dbg.value(metadata i32 0, metadata !15491, metadata !DIExpression()) #25, !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15641, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15641
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15643
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %3, metadata !15493, metadata !DIExpression()) #25, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()) #25, !dbg !15638
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !15645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15645
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !15647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15649, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15491, metadata !DIExpression()) #25, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()) #25, !dbg !15638
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15650
  ret void, !dbg !15651
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15654, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.value(metadata i32 %1, metadata !15655, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.value(metadata i8 0, metadata !15656, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.value(metadata i32 0, metadata !15657, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15662
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15664, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !15666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15666
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !15662
  call void @llvm.dbg.value(metadata i32 undef, metadata !15659, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata i8 poison, metadata !15656, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15657, metadata !DIExpression()), !dbg !15661
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15667
  call void @llvm.dbg.value(metadata i1 %6, metadata !15656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15660
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15670

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #25, !dbg !15671
  %11 = load i8, i8* %4, align 1, !dbg !15677
  %12 = and i8 %11, 127, !dbg !15677
  store i8 %12, i8* %4, align 1, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()) #25, !dbg !15678
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15680
  store i8 %9, i8* %8, align 2, !dbg !15681
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14706, metadata !DIExpression()) #25, !dbg !15682
  %13 = load i8, i8* %4, align 1, !dbg !15684
  %14 = or i8 %13, -128, !dbg !15684
  store i8 %14, i8* %4, align 1, !dbg !15684
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14713, metadata !DIExpression()) #25, !dbg !15685
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14720, metadata !DIExpression()) #25, !dbg !15687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()) #25, !dbg !15687
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15689
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14727, metadata !DIExpression()) #25, !dbg !15687
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15690
  br i1 %16, label %26, label %17, !dbg !15689

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14727, metadata !DIExpression()) #25, !dbg !15687
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14727, metadata !DIExpression()) #25, !dbg !15687
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15692
  %21 = icmp sgt i32 %20, 0, !dbg !15693
  br i1 %21, label %22, label %23, !dbg !15694

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15695
  br label %27, !dbg !15696

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15690
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14727, metadata !DIExpression()) #25, !dbg !15687
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15690
  br i1 %25, label %26, label %17, !dbg !15689, !llvm.loop !15697

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15699
  br label %27, !dbg !15700

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15701
  br label %29, !dbg !15702

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15703
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15664
  call void @llvm.dbg.value(metadata i32 %30, metadata !14532, metadata !DIExpression()) #25, !dbg !15666
  call void @llvm.dbg.value(metadata i32 %30, metadata !14526, metadata !DIExpression()) #25, !dbg !15662
  call void @llvm.dbg.value(metadata i32 %30, metadata !15659, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15705
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !15707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15709, !srcloc !14561
  call void @llvm.dbg.value(metadata i8 poison, metadata !15656, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15657, metadata !DIExpression()), !dbg !15661
  ret i1 %6, !dbg !15710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15711 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15715, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.value(metadata i32 %1, metadata !15716, metadata !DIExpression()), !dbg !15718
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15719
  call void @llvm.dbg.value(metadata i1 %3, metadata !15717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15718
  br i1 %3, label %4, label %12, !dbg !15720

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15722
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15723
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15723
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15723
  %9 = load i8, i8* %8, align 1, !dbg !15723
  %10 = icmp eq i8 %9, 0, !dbg !15724
  br i1 %10, label %11, label %12, !dbg !15725

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15726
  br label %12, !dbg !15728

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15730 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15732, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15736
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15738, !srcloc !14535
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15738
  call void @llvm.dbg.value(metadata i32 %2, metadata !14532, metadata !DIExpression()) #25, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %2, metadata !14526, metadata !DIExpression()) #25, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %2, metadata !15734, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15735
  tail call fastcc void @z_sched_lock() #27, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %2, metadata !14547, metadata !DIExpression()) #25, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15744
  call void @llvm.dbg.value(metadata i32 %2, metadata !14555, metadata !DIExpression()) #25, !dbg !15746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15748, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15732, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15735
  ret void, !dbg !15749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15750 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15751
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15752
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15752
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15752
  %5 = load i8, i8* %4, align 1, !dbg !15753
  %6 = add i8 %5, -1, !dbg !15753
  store i8 %6, i8* %4, align 1, !dbg !15753
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15754, !srcloc !15756
  ret void, !dbg !15757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15758 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15760, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !15764
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15766, !srcloc !14535
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %2, metadata !14532, metadata !DIExpression()) #25, !dbg !15768
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %2, metadata !14526, metadata !DIExpression()) #25, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %2, metadata !15762, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()), !dbg !15763
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15769
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15772
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15772
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15772
  %7 = load i8, i8* %6, align 1, !dbg !15773
  %8 = add i8 %7, 1, !dbg !15773
  store i8 %8, i8* %6, align 1, !dbg !15773
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15774
  call void @llvm.dbg.value(metadata i32 %2, metadata !14547, metadata !DIExpression()) #25, !dbg !15775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %2, metadata !14555, metadata !DIExpression()) #25, !dbg !15777
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15779, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 1, metadata !15760, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()), !dbg !15763
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15780
  ret void, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15782 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15783
  ret %struct.k_thread* %1, !dbg !15784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15789, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15790, metadata !DIExpression()), !dbg !15794
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15791, metadata !DIExpression()), !dbg !15794
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15792, metadata !DIExpression()), !dbg !15794
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15797
  call void @llvm.dbg.value(metadata i32 %5, metadata !15793, metadata !DIExpression()), !dbg !15794
  %6 = icmp sgt i32 %5, 0, !dbg !15798
  br i1 %6, label %17, label %7, !dbg !15800

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15801
  br i1 %8, label %17, label %9, !dbg !15803

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15804
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15804
  %12 = load i32, i32* %11, align 8, !dbg !15804
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15806
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15806
  %15 = load i32, i32* %14, align 8, !dbg !15806
  %16 = icmp ult i32 %12, %15, !dbg !15807
  br label %17, !dbg !15808

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15809
  ret i1 %18, !dbg !15810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15811 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15828, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15829, metadata !DIExpression()), !dbg !15843
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15844
  %5 = load i32, i32* %4, align 4, !dbg !15845
  %6 = add nsw i32 %5, 1, !dbg !15845
  store i32 %6, i32* %4, align 4, !dbg !15845
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15846
  store i32 %5, i32* %7, align 8, !dbg !15847
  %8 = load i32, i32* %4, align 4, !dbg !15848
  %9 = icmp eq i32 %8, 0, !dbg !15849
  br i1 %9, label %10, label %32, !dbg !15850

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15851
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15851
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15831, metadata !DIExpression()), !dbg !15851
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15851
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15851
  %14 = load i32, i32* %13, align 4, !dbg !15851
  %15 = shl i32 %14, 2, !dbg !15851
  %16 = alloca i8, i32 %15, align 8, !dbg !15851
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15851
  store i8* %16, i8** %17, align 4, !dbg !15851
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15851
  %19 = alloca i8, i32 %14, align 8, !dbg !15851
  store i8* %19, i8** %18, align 4, !dbg !15851
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15851
  store i32 -1, i32* %20, align 4, !dbg !15851
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15840, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15830, metadata !DIExpression()), !dbg !15843
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15854
  br i1 %22, label %23, label %24, !dbg !15851

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15854
  br label %32, !dbg !15855

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15830, metadata !DIExpression()), !dbg !15843
  %26 = load i32, i32* %4, align 4, !dbg !15856
  %27 = add nsw i32 %26, 1, !dbg !15856
  store i32 %27, i32* %4, align 4, !dbg !15856
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15858
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15858
  store i32 %26, i32* %29, align 8, !dbg !15859
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15840, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15830, metadata !DIExpression()), !dbg !15843
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15854
  br i1 %31, label %23, label %24, !dbg !15851, !llvm.loop !15860

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15862
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15863
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15864
  ret void, !dbg !15865
}

; Function Attrs: optsize
declare !dbg !15866 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15871 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15874 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15877, metadata !DIExpression()), !dbg !15878
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15879
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15880
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15881
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15882
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15882
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15884
  br i1 %7, label %8, label %10, !dbg !15885

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15886
  store i32 0, i32* %9, align 4, !dbg !15888
  br label %10, !dbg !15889

10:                                               ; preds = %8, %2
  ret void, !dbg !15890
}

; Function Attrs: optsize
declare !dbg !15891 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15892 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15897, metadata !DIExpression()), !dbg !15899
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15900
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15901
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15898, metadata !DIExpression()), !dbg !15899
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15897, metadata !DIExpression()), !dbg !15899
  ret %struct.k_thread* %4, !dbg !15902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15903 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15907, metadata !DIExpression()), !dbg !15908
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15909
  ret %struct.rbnode* %2, !dbg !15910
}

; Function Attrs: optsize
declare !dbg !15911 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15914 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15926, metadata !DIExpression()), !dbg !15930
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15931
  %3 = load i32, i32* %2, align 4, !dbg !15931
  %4 = icmp eq i32 %3, 0, !dbg !15933
  br i1 %4, label %10, label %5, !dbg !15934

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15927, metadata !DIExpression()), !dbg !15930
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15935, !range !3971
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15936
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15928, metadata !DIExpression()), !dbg !15930
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15937
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15929, metadata !DIExpression()), !dbg !15930
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15927, metadata !DIExpression()), !dbg !15930
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15930
  ret %struct.k_thread* %11, !dbg !15938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15939 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15943, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i32 0, metadata !15944, metadata !DIExpression()), !dbg !15946
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15945, metadata !DIExpression()), !dbg !15946
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15948
  br i1 %3, label %8, label %4, !dbg !15949

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15950
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15952
  call void @llvm.dbg.value(metadata i32 1, metadata !15944, metadata !DIExpression()), !dbg !15946
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15945, metadata !DIExpression()), !dbg !15946
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15948
  br i1 %7, label %8, label %4, !dbg !15949, !llvm.loop !15953

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15946
  ret i32 %9, !dbg !15955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15956 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15958, metadata !DIExpression()), !dbg !15959
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15960
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15961
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15962
  ret %struct.k_thread* %4, !dbg !15963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15964 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15973, metadata !DIExpression()), !dbg !15974
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15975
  tail call fastcc void @sys_dlist_init.161(%struct._dnode* noundef nonnull %2) #27, !dbg !15976
  ret void, !dbg !15977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.161(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15978 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15982, metadata !DIExpression()), !dbg !15983
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15984
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15985
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15986
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15987
  ret void, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15989 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15990
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15991
  ret void, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15998, metadata !DIExpression()), !dbg !15999
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16000
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16000
  %4 = load i8, i8* %3, align 2, !dbg !16000
  %5 = sext i8 %4 to i32, !dbg !16001
  ret i32 %5, !dbg !16002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16007, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i32 %1, metadata !16008, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()), !dbg !16010
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !16011
  ret void, !dbg !16012
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16013 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !16014
  br i1 %1, label %8, label %2, !dbg !16015

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !16016
  br i1 %3, label %8, label %4, !dbg !16017

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16018
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !16019
  %7 = xor i1 %6, true, !dbg !16017
  br label %8, !dbg !16017

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16021 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16022, !range !6456
  %2 = icmp eq i8 %1, 0, !dbg !16022
  ret i1 %2, !dbg !16023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !16027
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16029, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !16027
  call void @llvm.dbg.value(metadata i32 undef, metadata !16026, metadata !DIExpression()), !dbg !16032
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14689, metadata !DIExpression()) #25, !dbg !16036
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16038
  %4 = load i8, i8* %3, align 1, !dbg !16039
  %5 = and i8 %4, 127, !dbg !16039
  store i8 %5, i8* %3, align 1, !dbg !16039
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14697, metadata !DIExpression()) #25, !dbg !16040
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !16042
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16043
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14706, metadata !DIExpression()) #25, !dbg !16044
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16046
  %8 = load i8, i8* %7, align 1, !dbg !16047
  %9 = or i8 %8, -128, !dbg !16047
  store i8 %9, i8* %7, align 1, !dbg !16047
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14713, metadata !DIExpression()) #25, !dbg !16048
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14720, metadata !DIExpression()) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14726, metadata !DIExpression()) #25, !dbg !16050
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16052
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14727, metadata !DIExpression()) #25, !dbg !16050
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16053
  br i1 %11, label %22, label %12, !dbg !16052

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14727, metadata !DIExpression()) #25, !dbg !16050
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14727, metadata !DIExpression()) #25, !dbg !16050
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !16055
  %16 = icmp sgt i32 %15, 0, !dbg !16056
  br i1 %16, label %17, label %19, !dbg !16057

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16058
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !16059
  br label %24, !dbg !16060

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !16053
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14727, metadata !DIExpression()) #25, !dbg !16050
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16053
  br i1 %21, label %22, label %12, !dbg !16052, !llvm.loop !16061

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16063
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !16064
  br label %24, !dbg !16065

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16029
  call void @llvm.dbg.value(metadata i32 %25, metadata !14532, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %25, metadata !14526, metadata !DIExpression()) #25, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %25, metadata !16026, metadata !DIExpression()), !dbg !16032
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !16067
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !16069
  ret void, !dbg !16070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16071 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16075, metadata !DIExpression()), !dbg !16078
  %3 = icmp eq i64 %2, -1, !dbg !16079
  br i1 %3, label %4, label %6, !dbg !16081

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16082
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !16084
  br label %11, !dbg !16085

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16076, metadata !DIExpression()), !dbg !16078
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !16086
  %8 = sext i32 %7 to i64, !dbg !16086
  call void @llvm.dbg.value(metadata i64 %8, metadata !16076, metadata !DIExpression()), !dbg !16078
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !16087
  %10 = trunc i64 %9 to i32, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %10, metadata !16077, metadata !DIExpression()), !dbg !16078
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16078
  ret i32 %12, !dbg !16088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16093, metadata !DIExpression()), !dbg !16094
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16095, !srcloc !16097
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !16098
  ret void, !dbg !16099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16100 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16104, metadata !DIExpression()), !dbg !16108
  %2 = icmp eq i64 %0, 0, !dbg !16109
  br i1 %2, label %3, label %4, !dbg !16111

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !16112
  br label %29, !dbg !16114

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16106, metadata !DIExpression()), !dbg !16108
  %5 = icmp sgt i64 %0, -3, !dbg !16115
  br i1 %5, label %6, label %10, !dbg !16117

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16118
  %8 = trunc i64 %0 to i32, !dbg !16120
  %9 = add i32 %7, %8, !dbg !16120
  call void @llvm.dbg.value(metadata i32 %9, metadata !16105, metadata !DIExpression()), !dbg !16108
  br label %13, !dbg !16121

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16122
  %12 = sub i32 -2, %11, !dbg !16122
  call void @llvm.dbg.value(metadata i32 %12, metadata !16105, metadata !DIExpression()), !dbg !16108
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16124
  call void @llvm.dbg.value(metadata i32 %14, metadata !16105, metadata !DIExpression()), !dbg !16108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !16125
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16127, !srcloc !14535
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16127
  call void @llvm.dbg.value(metadata i32 %16, metadata !14532, metadata !DIExpression()) #25, !dbg !16129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !16129
  call void @llvm.dbg.value(metadata i32 %16, metadata !14526, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 %16, metadata !16107, metadata !DIExpression()), !dbg !16108
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16130
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16131
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !16132
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16133
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16134
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !16134
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16135
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !16136
  call void @llvm.dbg.value(metadata i32 %16, metadata !15131, metadata !DIExpression()) #25, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !16137
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !16139
  %22 = zext i32 %14 to i64, !dbg !16140
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16141
  %24 = zext i32 %23 to i64, !dbg !16141
  %25 = sub nsw i64 %22, %24, !dbg !16142
  call void @llvm.dbg.value(metadata i64 %25, metadata !16104, metadata !DIExpression()), !dbg !16108
  %26 = icmp sgt i64 %25, 0, !dbg !16143
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16143
  %28 = trunc i64 %27 to i32, !dbg !16143
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16108
  ret i32 %30, !dbg !16144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16145 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16147, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i64 %0, metadata !14567, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i32 10000, metadata !14570, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i32 1000, metadata !14571, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i8 1, metadata !14572, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i1 false, metadata !14573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16149
  call void @llvm.dbg.value(metadata i1 false, metadata !14574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16149
  call void @llvm.dbg.value(metadata i8 0, metadata !14575, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i1 false, metadata !14576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16149
  call void @llvm.dbg.value(metadata i1 true, metadata !14577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16149
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i64 %0, metadata !14567, metadata !DIExpression()), !dbg !16149
  %2 = udiv i64 %0, 10, !dbg !16151
  ret i64 %2, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16156 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16157, !srcloc !16159
  tail call void @z_impl_k_yield() #27, !dbg !16160
  ret void, !dbg !16161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16166, metadata !DIExpression()), !dbg !16168
  %2 = sext i32 %0 to i64, !dbg !16169
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !16170
  call void @llvm.dbg.value(metadata i64 %3, metadata !16167, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16168
  %4 = shl i64 %3, 32, !dbg !16171
  %5 = ashr exact i64 %4, 32, !dbg !16171
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !16172
  call void @llvm.dbg.value(metadata i32 %6, metadata !16167, metadata !DIExpression()), !dbg !16168
  %7 = sext i32 %6 to i64, !dbg !16173
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !16174
  %9 = trunc i64 %8 to i32, !dbg !16174
  ret i32 %9, !dbg !16175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16176 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16178, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i64 %0, metadata !14567, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14570, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 10000, metadata !14571, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i8 1, metadata !14572, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i1 false, metadata !14573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16180
  call void @llvm.dbg.value(metadata i1 true, metadata !14574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16180
  call void @llvm.dbg.value(metadata i8 0, metadata !14575, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i1 false, metadata !14576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16180
  call void @llvm.dbg.value(metadata i1 true, metadata !14577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16180
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16180
  %2 = add i64 %0, 99, !dbg !16182
  call void @llvm.dbg.value(metadata i64 %2, metadata !14567, metadata !DIExpression()), !dbg !16180
  %3 = udiv i64 %2, 100, !dbg !16183
  ret i64 %3, !dbg !16184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16185 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i64 %0, metadata !14567, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i32 10000, metadata !14570, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14571, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i8 1, metadata !14572, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i1 false, metadata !14573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16189
  call void @llvm.dbg.value(metadata i1 false, metadata !14574, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16189
  call void @llvm.dbg.value(metadata i8 0, metadata !14575, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i1 true, metadata !14576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16189
  call void @llvm.dbg.value(metadata i1 false, metadata !14577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16189
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.value(metadata i64 0, metadata !14578, metadata !DIExpression()), !dbg !16189
  %2 = mul i64 %0, 100, !dbg !16191
  ret i64 %2, !dbg !16193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !16198
  br i1 %2, label %14, label %3, !dbg !16200

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16201
  %5 = icmp slt i32 %4, 0, !dbg !16203
  br i1 %5, label %6, label %10, !dbg !16204

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16205
  %8 = load i8, i8* %7, align 1, !dbg !16205
  %9 = icmp eq i8 %8, 16, !dbg !16208
  br i1 %9, label %10, label %14, !dbg !16209

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16210
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16211
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16212, !srcloc !15171
  call void @llvm.dbg.value(metadata i32 %11, metadata !15167, metadata !DIExpression()) #25, !dbg !16216
  %12 = icmp eq i32 %11, 0, !dbg !16217
  br i1 %12, label %13, label %14, !dbg !16218

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16219
  br label %14, !dbg !16221

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16226
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16227
  %3 = load i8, i8* %2, align 1, !dbg !16227
  %4 = and i8 %3, 2, !dbg !16228
  %5 = icmp ne i8 %4, 0, !dbg !16229
  ret i1 %5, !dbg !16230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16231 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16236
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16235, metadata !DIExpression()), !dbg !16237
  ret %struct.k_thread* %1, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16239 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16240, !srcloc !15171
  call void @llvm.dbg.value(metadata i32 %1, metadata !15167, metadata !DIExpression()) #25, !dbg !16243
  %2 = icmp eq i32 %1, 0, !dbg !16244
  br i1 %2, label %3, label %8, !dbg !16245

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16246
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16247
  %6 = icmp ne i32 %5, 0, !dbg !16245
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16251, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !16254
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16256, !srcloc !14535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16256
  call void @llvm.dbg.value(metadata i32 %3, metadata !14532, metadata !DIExpression()) #25, !dbg !16258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !16258
  call void @llvm.dbg.value(metadata i32 %3, metadata !14526, metadata !DIExpression()) #25, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %3, metadata !16252, metadata !DIExpression()), !dbg !16253
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16259
  %5 = load i8, i8* %4, align 4, !dbg !16259
  %6 = and i8 %5, 1, !dbg !16261
  %7 = icmp eq i8 %6, 0, !dbg !16262
  br i1 %7, label %9, label %8, !dbg !16263

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !16264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !16264
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !16267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16269, !srcloc !14561
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16270, !srcloc !16272
  br label %24, !dbg !16273

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16274
  %11 = load i8, i8* %10, align 1, !dbg !16274
  %12 = and i8 %11, 8, !dbg !16276
  %13 = icmp eq i8 %12, 0, !dbg !16277
  br i1 %13, label %15, label %14, !dbg !16278

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !16282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16284, !srcloc !14561
  br label %24, !dbg !16285

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16286
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16287
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16289
  br i1 %17, label %18, label %23, !dbg !16290

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16291, !srcloc !15171
  call void @llvm.dbg.value(metadata i32 %19, metadata !15167, metadata !DIExpression()) #25, !dbg !16294
  %20 = icmp eq i32 %19, 0, !dbg !16295
  br i1 %20, label %21, label %23, !dbg !16296

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15131, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !16297
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16300
  br label %23, !dbg !16301

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata i32 %3, metadata !14555, metadata !DIExpression()) #25, !dbg !16304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16306, !srcloc !14561
  br label %24, !dbg !16307

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16310, metadata !DIExpression()), !dbg !16311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16312
  %3 = load i8, i8* %2, align 1, !dbg !16312
  %4 = and i8 %3, 8, !dbg !16314
  %5 = icmp eq i8 %4, 0, !dbg !16315
  br i1 %5, label %6, label %20, !dbg !16316

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16317
  %8 = or i8 %7, 8, !dbg !16317
  store i8 %8, i8* %2, align 1, !dbg !16317
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16319
  br i1 %9, label %10, label %12, !dbg !16321

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #25, !dbg !16322
  %11 = and i8 %8, 95, !dbg !16325
  store i8 %11, i8* %2, align 1, !dbg !16325
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()) #25, !dbg !16326
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16328
  br label %12, !dbg !16329

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16330
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16330
  %15 = icmp eq %union.anon* %14, null, !dbg !16332
  br i1 %15, label %17, label %16, !dbg !16333

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16334
  br label %17, !dbg !16336

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16337
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16338
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16339
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16340
  br label %20, !dbg !16341

20:                                               ; preds = %17, %1
  ret void, !dbg !16342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16343 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16347, metadata !DIExpression()), !dbg !16349
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16348, metadata !DIExpression()), !dbg !16349
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16351
  br i1 %3, label %10, label %4, !dbg !16352

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16353
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16355
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16356, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata i32 0, metadata !16361, metadata !DIExpression()), !dbg !16362
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16364
  store i32 0, i32* %7, align 4, !dbg !16365
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16366
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16348, metadata !DIExpression()), !dbg !16349
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16351
  br i1 %9, label %10, label %4, !dbg !16352, !llvm.loop !16367

10:                                               ; preds = %4, %1
  ret void, !dbg !16369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16370 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16375, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16374, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !16379
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16381, !srcloc !14535
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16381
  call void @llvm.dbg.value(metadata i32 %4, metadata !14532, metadata !DIExpression()) #25, !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !16383
  call void @llvm.dbg.value(metadata i32 %4, metadata !14526, metadata !DIExpression()) #25, !dbg !16379
  call void @llvm.dbg.value(metadata i32 %4, metadata !16376, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 0, metadata !16377, metadata !DIExpression()), !dbg !16378
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16384
  %6 = load i8, i8* %5, align 1, !dbg !16384
  %7 = and i8 %6, 8, !dbg !16386
  %8 = icmp eq i8 %7, 0, !dbg !16387
  br i1 %8, label %9, label %24, !dbg !16388

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16375, metadata !DIExpression()), !dbg !16378
  %11 = icmp eq i64 %10, 0, !dbg !16389
  br i1 %11, label %24, label %12, !dbg !16391

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16392
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16394
  br i1 %14, label %24, label %15, !dbg !16395

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16396
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16396
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16397
  %19 = icmp eq %union.anon* %17, %18, !dbg !16398
  br i1 %19, label %24, label %20, !dbg !16399

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16400
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16402
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16403
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16404
  call void @llvm.dbg.value(metadata i32 %4, metadata !15131, metadata !DIExpression()) #25, !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15136, metadata !DIExpression()) #25, !dbg !16405
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %23, metadata !16377, metadata !DIExpression()), !dbg !16378
  br label %26, !dbg !16408

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16409
  call void @llvm.dbg.value(metadata i32 %25, metadata !16377, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #25, !dbg !16410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %4, metadata !14555, metadata !DIExpression()) #25, !dbg !16412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16414, !srcloc !14561
  br label %26, !dbg !16415

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16378
  ret i32 %27, !dbg !16416
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16417 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16421, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i32 %1, metadata !16422, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i8* %2, metadata !16423, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i8 0, metadata !16425, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i32 0, metadata !16426, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14520, metadata !DIExpression()) #25, !dbg !16431
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16433, !srcloc !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14532, metadata !DIExpression()) #25, !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14533, metadata !DIExpression()) #25, !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #25, !dbg !16431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i8 poison, metadata !16425, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16426, metadata !DIExpression()), !dbg !16430
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16436
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16424, metadata !DIExpression()), !dbg !16429
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16439
  br i1 %7, label %12, label %8, !dbg !16441

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16442, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata i32 %1, metadata !16447, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata i8* %2, metadata !16448, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16356, metadata !DIExpression()), !dbg !16452
  call void @llvm.dbg.value(metadata i32 %1, metadata !16361, metadata !DIExpression()), !dbg !16452
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16454
  store i32 %1, i32* %9, align 4, !dbg !16455
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16456
  store i8* %2, i8** %10, align 4, !dbg !16457
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16458
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16459
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16460
  call void @llvm.dbg.value(metadata i8 1, metadata !16425, metadata !DIExpression()), !dbg !16429
  br label %12, !dbg !16461

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16433
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %14, metadata !14532, metadata !DIExpression()) #25, !dbg !16435
  call void @llvm.dbg.value(metadata i32 %14, metadata !14526, metadata !DIExpression()) #25, !dbg !16431
  call void @llvm.dbg.value(metadata i32 %14, metadata !16428, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i8 poison, metadata !16425, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #25, !dbg !16462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #25, !dbg !16462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()) #25, !dbg !16464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16466, !srcloc !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !16426, metadata !DIExpression()), !dbg !16430
  ret i1 %13, !dbg !16467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16468 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16473, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.value(metadata i64 undef, metadata !16475, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16472, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16474, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.value(metadata i8** %4, metadata !16476, metadata !DIExpression()), !dbg !16478
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16479
  call void @llvm.dbg.value(metadata i32 %6, metadata !16477, metadata !DIExpression()), !dbg !16478
  %7 = icmp eq i8** %4, null, !dbg !16480
  br i1 %7, label %12, label %8, !dbg !16482

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16483
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16485
  %11 = load i8*, i8** %10, align 4, !dbg !16485
  store i8* %11, i8** %4, align 4, !dbg !16486
  br label %12, !dbg !16487

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16489 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16491
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16492
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #26, !dbg !16493
  ret void, !dbg !16494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16495 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16505, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16503, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16504, metadata !DIExpression()), !dbg !16522
  %5 = icmp eq i64 %4, -1, !dbg !16523
  br i1 %5, label %55, label %6, !dbg !16525

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16526
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16527
  call void @llvm.dbg.value(metadata i32 0, metadata !16506, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16536
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16538, !srcloc !16544
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %9, metadata !16541, metadata !DIExpression()) #25, !dbg !16545
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %9, metadata !16535, metadata !DIExpression()) #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %9, metadata !16512, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 undef, metadata !16506, metadata !DIExpression()), !dbg !16528
  %10 = icmp slt i64 %4, -1, !dbg !16546
  br i1 %10, label %11, label %17, !dbg !16547

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16548
  %13 = add i64 %4, %12, !dbg !16549
  %14 = sub i64 -2, %13, !dbg !16549
  call void @llvm.dbg.value(metadata i64 %14, metadata !16516, metadata !DIExpression()), !dbg !16550
  %15 = icmp sgt i64 %14, 1, !dbg !16551
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16551
  br label %22, !dbg !16552

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16553
  %19 = tail call fastcc i32 @elapsed.172() #27, !dbg !16555
  %20 = sext i32 %19 to i64, !dbg !16555
  %21 = add nsw i64 %18, %20, !dbg !16556
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16557
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16558
  store i64 %23, i64* %24, align 8, !dbg !16559
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16560
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16513, metadata !DIExpression()), !dbg !16562
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16563
  br i1 %26, label %42, label %27, !dbg !16563

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16564
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16513, metadata !DIExpression()), !dbg !16562
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16568
  %31 = load i64, i64* %30, align 8, !dbg !16568
  %32 = icmp slt i64 %28, %31, !dbg !16569
  br i1 %32, label %33, label %38, !dbg !16570

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16568
  %35 = sub nsw i64 %31, %28, !dbg !16571
  store i64 %35, i64* %34, align 8, !dbg !16571
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16573
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16574
  tail call fastcc void @sys_dlist_insert.173(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16575
  br label %44, !dbg !16576

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16577
  store i64 %39, i64* %24, align 8, !dbg !16577
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16578
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16513, metadata !DIExpression()), !dbg !16562
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16563
  br i1 %41, label %42, label %27, !dbg !16563, !llvm.loop !16579

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16581
  tail call fastcc void @sys_dlist_append.174(%struct._dnode* noundef %43) #27, !dbg !16584
  br label %44, !dbg !16585

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16586
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16587
  br i1 %46, label %47, label %54, !dbg !16588

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16589
  call void @llvm.dbg.value(metadata i32 %48, metadata !16519, metadata !DIExpression()), !dbg !16590
  %49 = icmp ne i32 %48, 0, !dbg !16591
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16593
  br i1 %52, label %54, label %53, !dbg !16593

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16594
  br label %54, !dbg !16596

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16597, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %9, metadata !16605, metadata !DIExpression()) #25, !dbg !16608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16610, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16506, metadata !DIExpression()), !dbg !16528
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.172() unnamed_addr #1 !dbg !16613 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16616
  %2 = icmp eq i32 %1, 0, !dbg !16617
  br i1 %2, label %3, label %5, !dbg !16616

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16618
  br label %5, !dbg !16616

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16616
  ret i32 %6, !dbg !16619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16620 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.177() #27, !dbg !16626
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16624, metadata !DIExpression()), !dbg !16627
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16628
  ret %struct._timeout* %2, !dbg !16629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.173(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16630 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16634, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16635, metadata !DIExpression()), !dbg !16638
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16639
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16639
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16636, metadata !DIExpression()), !dbg !16638
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16640
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16641
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16642
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16643
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16644
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16645
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16646
  ret void, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16648 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16652, metadata !DIExpression()), !dbg !16654
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16655
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.175(%struct._dnode* noundef %2) #27, !dbg !16656
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16653, metadata !DIExpression()), !dbg !16654
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16657
  ret %struct._timeout* %4, !dbg !16658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.174(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16659 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16664, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16665, metadata !DIExpression()), !dbg !16667
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16668
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16666, metadata !DIExpression()), !dbg !16667
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16669
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16670
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16671
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16672
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16673
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16674
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16675
  ret void, !dbg !16676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16677 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16682
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16679, metadata !DIExpression()), !dbg !16683
  %2 = tail call fastcc i32 @elapsed.172() #27, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %2, metadata !16680, metadata !DIExpression()), !dbg !16683
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16685
  br i1 %3, label %14, label %4, !dbg !16687

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16688
  %6 = load i64, i64* %5, align 8, !dbg !16688
  %7 = sext i32 %2 to i64, !dbg !16689
  %8 = sub nsw i64 %6, %7, !dbg !16690
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16691
  br i1 %9, label %14, label %10, !dbg !16692

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16693
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16693
  %13 = trunc i64 %12 to i32, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %13, metadata !16681, metadata !DIExpression()), !dbg !16683
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16695
  call void @llvm.dbg.value(metadata i32 %15, metadata !16681, metadata !DIExpression()), !dbg !16683
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16696
  %17 = icmp ne i32 %16, 0, !dbg !16698
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16699
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %20, metadata !16681, metadata !DIExpression()), !dbg !16683
  ret i32 %20, !dbg !16700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.175(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16701 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16705, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16706, metadata !DIExpression()), !dbg !16707
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16708
  br i1 %2, label %5, label %3, !dbg !16709

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.176(%struct._dnode* noundef nonnull %0) #27, !dbg !16710
  br label %5, !dbg !16709

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16709
  ret %struct._dnode* %6, !dbg !16711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.176(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16712 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16714, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16715, metadata !DIExpression()), !dbg !16716
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16717
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16718
  br i1 %3, label %7, label %4, !dbg !16719

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16720
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16720
  br label %7, !dbg !16719

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16719
  ret %struct._dnode* %8, !dbg !16721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.177() unnamed_addr #5 !dbg !16722 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16726, metadata !DIExpression()), !dbg !16727
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.178() #27, !dbg !16728
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16728
  ret %struct._dnode* %3, !dbg !16729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.178() unnamed_addr #5 !dbg !16730 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16734, metadata !DIExpression()), !dbg !16735
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16736
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16737
  ret i1 %2, !dbg !16738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16739 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16743, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 -22, metadata !16744, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 0, metadata !16745, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16750
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16752, !srcloc !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()) #25, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16747, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 -22, metadata !16744, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16745, metadata !DIExpression()), !dbg !16749
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16744, metadata !DIExpression()), !dbg !16748
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.181(%struct._dnode* noundef %3) #27, !dbg !16755
  br i1 %4, label %5, label %6, !dbg !16759

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16760
  call void @llvm.dbg.value(metadata i32 0, metadata !16744, metadata !DIExpression()), !dbg !16748
  br label %6, !dbg !16762

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16748
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16752
  call void @llvm.dbg.value(metadata i32 %8, metadata !16541, metadata !DIExpression()) #25, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %8, metadata !16535, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %8, metadata !16747, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 %7, metadata !16744, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16597, metadata !DIExpression()) #25, !dbg !16763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #25, !dbg !16765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16767, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16745, metadata !DIExpression()), !dbg !16749
  ret i32 %7, !dbg !16768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.181(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16769 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16775, metadata !DIExpression()), !dbg !16776
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16777
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16777
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16778
  ret i1 %4, !dbg !16779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16780 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16782, metadata !DIExpression()), !dbg !16783
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16784
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16786
  br i1 %3, label %10, label %4, !dbg !16787

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16788
  %6 = load i64, i64* %5, align 8, !dbg !16788
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16790
  %8 = load i64, i64* %7, align 8, !dbg !16791
  %9 = add nsw i64 %8, %6, !dbg !16791
  store i64 %9, i64* %7, align 8, !dbg !16791
  br label %10, !dbg !16792

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16793
  tail call fastcc void @sys_dlist_remove.182(%struct._dnode* noundef %11) #27, !dbg !16794
  ret void, !dbg !16795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.182(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16796 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16800, metadata !DIExpression()), !dbg !16803
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16804
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16804
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16801, metadata !DIExpression()), !dbg !16803
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16805
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16805
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16802, metadata !DIExpression()), !dbg !16803
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16806
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16807
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16808
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16809
  tail call fastcc void @sys_dnode_init.183(%struct._dnode* noundef %0) #27, !dbg !16810
  ret void, !dbg !16811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.183(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16812 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16814, metadata !DIExpression()), !dbg !16815
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16816
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16817
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16818
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16819
  ret void, !dbg !16820
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16821 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16827, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i64 0, metadata !16828, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i32 0, metadata !16829, metadata !DIExpression()), !dbg !16833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16834
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16836, !srcloc !16544
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %3, metadata !16541, metadata !DIExpression()) #25, !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16838
  call void @llvm.dbg.value(metadata i32 %3, metadata !16535, metadata !DIExpression()) #25, !dbg !16834
  call void @llvm.dbg.value(metadata i32 %3, metadata !16831, metadata !DIExpression()), !dbg !16833
  call void @llvm.dbg.value(metadata i64 0, metadata !16828, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !16829, metadata !DIExpression()), !dbg !16833
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16839
  call void @llvm.dbg.value(metadata i64 %4, metadata !16828, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata i32 %3, metadata !16597, metadata !DIExpression()) #25, !dbg !16842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16842
  call void @llvm.dbg.value(metadata i32 %3, metadata !16605, metadata !DIExpression()) #25, !dbg !16844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16846, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16829, metadata !DIExpression()), !dbg !16833
  ret i64 %4, !dbg !16847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16848 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16850, metadata !DIExpression()), !dbg !16854
  call void @llvm.dbg.value(metadata i64 0, metadata !16851, metadata !DIExpression()), !dbg !16854
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.184(%struct._timeout* noundef %0) #27, !dbg !16855
  br i1 %2, label %21, label %3, !dbg !16857

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16858
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16852, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.value(metadata i64 0, metadata !16851, metadata !DIExpression()), !dbg !16854
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16860
  br i1 %5, label %16, label %6, !dbg !16862

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16852, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.value(metadata i64 %8, metadata !16851, metadata !DIExpression()), !dbg !16854
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16863
  %10 = load i64, i64* %9, align 8, !dbg !16863
  %11 = add nsw i64 %10, %8, !dbg !16865
  call void @llvm.dbg.value(metadata i64 %11, metadata !16851, metadata !DIExpression()), !dbg !16854
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16866
  br i1 %12, label %16, label %13, !dbg !16868

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16869
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16852, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.value(metadata i64 %11, metadata !16851, metadata !DIExpression()), !dbg !16854
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16860
  br i1 %15, label %16, label %6, !dbg !16862, !llvm.loop !16870

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16854
  call void @llvm.dbg.value(metadata i64 %17, metadata !16851, metadata !DIExpression()), !dbg !16854
  %18 = tail call fastcc i32 @elapsed.172() #27, !dbg !16872
  %19 = sext i32 %18 to i64, !dbg !16872
  %20 = sub nsw i64 %17, %19, !dbg !16873
  br label %21, !dbg !16874

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16854
  ret i64 %22, !dbg !16875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.184(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16876 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16880, metadata !DIExpression()), !dbg !16881
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16882
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.181(%struct._dnode* noundef %2) #27, !dbg !16883
  %4 = xor i1 %3, true, !dbg !16884
  ret i1 %4, !dbg !16885
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16886 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16888, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.value(metadata i64 0, metadata !16889, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.value(metadata i32 0, metadata !16890, metadata !DIExpression()), !dbg !16894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16895
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16897, !srcloc !16544
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %3, metadata !16541, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 %3, metadata !16535, metadata !DIExpression()) #25, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %3, metadata !16892, metadata !DIExpression()), !dbg !16894
  call void @llvm.dbg.value(metadata i64 0, metadata !16889, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()), !dbg !16894
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16900
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16903
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16889, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16893
  call void @llvm.dbg.value(metadata i32 %3, metadata !16597, metadata !DIExpression()) #25, !dbg !16904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16904
  call void @llvm.dbg.value(metadata i32 %3, metadata !16605, metadata !DIExpression()) #25, !dbg !16906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16908, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16890, metadata !DIExpression()), !dbg !16894
  %6 = add i64 %5, %4, !dbg !16909
  ret i64 %6, !dbg !16910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16911 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 0, metadata !16914, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16919
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16921, !srcloc !16544
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %2, metadata !16541, metadata !DIExpression()) #25, !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %2, metadata !16535, metadata !DIExpression()) #25, !dbg !16919
  call void @llvm.dbg.value(metadata i32 %2, metadata !16916, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata i32 -1, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16914, metadata !DIExpression()), !dbg !16918
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16924
  call void @llvm.dbg.value(metadata i32 %3, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 %2, metadata !16597, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16927
  call void @llvm.dbg.value(metadata i32 %2, metadata !16605, metadata !DIExpression()) #25, !dbg !16929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16931, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16914, metadata !DIExpression()), !dbg !16918
  ret i32 %3, !dbg !16932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16935, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.value(metadata i1 %1, metadata !16936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16945
  call void @llvm.dbg.value(metadata i32 0, metadata !16937, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16947
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16949, !srcloc !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()) #25, !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16939, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16946
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16952
  call void @llvm.dbg.value(metadata i32 %4, metadata !16940, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata i1 undef, metadata !16943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16953
  %5 = icmp slt i32 %4, 2, !dbg !16954
  call void @llvm.dbg.value(metadata i1 %5, metadata !16944, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16953
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16955
  call void @llvm.dbg.value(metadata i1 %6, metadata !16943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16953
  br i1 %7, label %11, label %8, !dbg !16955

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16957
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16957
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16959
  br label %11, !dbg !16960

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %12, metadata !16541, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %12, metadata !16535, metadata !DIExpression()) #25, !dbg !16947
  call void @llvm.dbg.value(metadata i32 %12, metadata !16939, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16597, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()) #25, !dbg !16963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16965, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 1, metadata !16937, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16946
  ret void, !dbg !16966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16971, metadata !DIExpression()), !dbg !16976
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !16978
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16980, !srcloc !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()) #25, !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16972, metadata !DIExpression()), !dbg !16976
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16976
  call void @llvm.dbg.value(metadata i32 undef, metadata !16972, metadata !DIExpression()), !dbg !16976
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16983
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16984
  br i1 %4, label %28, label %5, !dbg !16985

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16986
  %10 = load i64, i64* %9, align 8, !dbg !16986
  %11 = sext i32 %8 to i64, !dbg !16987
  %12 = icmp sgt i64 %10, %11, !dbg !16988
  br i1 %12, label %26, label %13, !dbg !16989

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16976
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16973, metadata !DIExpression()), !dbg !16990
  %15 = trunc i64 %10 to i32, !dbg !16991
  call void @llvm.dbg.value(metadata i32 %15, metadata !16975, metadata !DIExpression()), !dbg !16990
  %16 = sext i32 %15 to i64, !dbg !16992
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16993
  %18 = add i64 %17, %16, !dbg !16993
  store i64 %18, i64* @curr_tick, align 8, !dbg !16993
  store i64 0, i64* %9, align 8, !dbg !16994
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %14, metadata !16597, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata i32 %14, metadata !16605, metadata !DIExpression()) #25, !dbg !16998
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17000, !srcloc !16611
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17001
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17001
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !17003
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17005, !srcloc !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()) #25, !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16972, metadata !DIExpression()), !dbg !16976
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17008
  %23 = sub nsw i32 %22, %15, !dbg !17008
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16976
  call void @llvm.dbg.value(metadata i32 undef, metadata !16972, metadata !DIExpression()), !dbg !16976
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16983
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16984
  br i1 %25, label %28, label %5, !dbg !16985, !llvm.loop !17009

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17011
  store i64 %27, i64* %9, align 8, !dbg !17011
  br label %32, !dbg !17014

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16976
  %31 = sext i32 %30 to i64, !dbg !17015
  br label %32, !dbg !17015

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17015
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16976
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17016
  %37 = add i64 %36, %33, !dbg !17016
  store i64 %37, i64* @curr_tick, align 8, !dbg !17016
  store i32 0, i32* @announce_remaining, align 4, !dbg !17017
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !17018
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !17019
  call void @llvm.dbg.value(metadata i32 %35, metadata !16597, metadata !DIExpression()) #25, !dbg !17020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !17020
  call void @llvm.dbg.value(metadata i32 %35, metadata !16605, metadata !DIExpression()) #25, !dbg !17022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17024, !srcloc !16611
  ret void, !dbg !17025
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17026 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17030, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.value(metadata i32 0, metadata !17031, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16529, metadata !DIExpression()) #25, !dbg !17036
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17038, !srcloc !16544
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %2, metadata !16541, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata i32 %2, metadata !16535, metadata !DIExpression()) #25, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %2, metadata !17033, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata i64 0, metadata !17030, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()), !dbg !17035
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17041
  %4 = tail call fastcc i32 @elapsed.172() #27, !dbg !17044
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17030, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17034
  call void @llvm.dbg.value(metadata i32 %2, metadata !16597, metadata !DIExpression()) #25, !dbg !17045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16602, metadata !DIExpression()) #25, !dbg !17045
  call void @llvm.dbg.value(metadata i32 %2, metadata !16605, metadata !DIExpression()) #25, !dbg !17047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17049, !srcloc !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()), !dbg !17035
  %5 = sext i32 %4 to i64, !dbg !17044
  %6 = add i64 %3, %5, !dbg !17050
  ret i64 %6, !dbg !17051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17052 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !17053
  %2 = trunc i64 %1 to i32, !dbg !17054
  ret i32 %2, !dbg !17055
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17056 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !17057
  ret i64 %1, !dbg !17058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17061, metadata !DIExpression()), !dbg !17068
  %2 = icmp eq i32 %0, 0, !dbg !17069
  br i1 %2, label %10, label %3, !dbg !17071

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !17072
  call void @llvm.dbg.value(metadata i32 %4, metadata !17062, metadata !DIExpression()), !dbg !17068
  %5 = mul i32 %0, 168, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %5, metadata !17063, metadata !DIExpression()), !dbg !17068
  br label %6, !dbg !17074

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %7, metadata !17064, metadata !DIExpression()), !dbg !17076
  %8 = sub i32 %7, %4, !dbg !17077
  %9 = icmp ult i32 %8, %5, !dbg !17079
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17081 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !17082
  ret i32 %1, !dbg !17083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17084 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !17086
  ret i32 %1, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17088 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17092, metadata !DIExpression()), !dbg !17094
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17095

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !17096
  br label %14, !dbg !17100

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17093, metadata !DIExpression()), !dbg !17094
  %6 = icmp slt i64 %2, -1, !dbg !17101
  br i1 %6, label %7, label %9, !dbg !17104

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17105
  br label %14, !dbg !17106

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !17108
  %11 = icmp ugt i64 %2, 1, !dbg !17109
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17109
  %13 = add nsw i64 %10, %12, !dbg !17110
  br label %14, !dbg !17111

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17112
  ret i64 %15, !dbg !17113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17117, metadata !DIExpression()), !dbg !17150
  %2 = icmp eq i8* %0, null, !dbg !17151
  br i1 %2, label %7, label %3, !dbg !17153

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17118, metadata !DIExpression()), !dbg !17150
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17154
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17118, metadata !DIExpression()), !dbg !17150
  call void @llvm.dbg.value(metadata i8* %4, metadata !17117, metadata !DIExpression()), !dbg !17150
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17156
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !17157
  br label %7, !dbg !17158

7:                                                ; preds = %3, %1
  ret void, !dbg !17159
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17164, metadata !DIExpression()), !dbg !17168
  call void @llvm.dbg.value(metadata i32 %1, metadata !17165, metadata !DIExpression()), !dbg !17168
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !17169
  br i1 %3, label %11, label %4, !dbg !17171

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17172
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17174
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17174
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17167, metadata !DIExpression()), !dbg !17168
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17175
  br i1 %8, label %11, label %9, !dbg !17177

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !17178
  call void @llvm.dbg.value(metadata i8* %10, metadata !17166, metadata !DIExpression()), !dbg !17168
  br label %11, !dbg !17180

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !17181
  call void @llvm.dbg.value(metadata i8* %12, metadata !17166, metadata !DIExpression()), !dbg !17168
  ret i8* %12, !dbg !17182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17183 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17187, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i32 %1, metadata !17188, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i32 %2, metadata !17189, metadata !DIExpression()), !dbg !17193
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17189, metadata !DIExpression(DW_OP_deref)), !dbg !17193
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17194
  br i1 %5, label %14, label %6, !dbg !17196

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17197
  call void @llvm.dbg.value(metadata i32 %7, metadata !17192, metadata !DIExpression()), !dbg !17193
  %8 = load i32, i32* %4, align 4, !dbg !17198
  call void @llvm.dbg.value(metadata i32 %8, metadata !17189, metadata !DIExpression()), !dbg !17193
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !17199
  call void @llvm.dbg.value(metadata i8* %9, metadata !17190, metadata !DIExpression()), !dbg !17193
  %10 = icmp eq i8* %9, null, !dbg !17200
  br i1 %10, label %14, label %11, !dbg !17202

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17203
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17191, metadata !DIExpression()), !dbg !17193
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17204
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17205
  call void @llvm.dbg.value(metadata i8* %13, metadata !17191, metadata !DIExpression()), !dbg !17193
  call void @llvm.dbg.value(metadata i8* %13, metadata !17190, metadata !DIExpression()), !dbg !17193
  br label %14, !dbg !17206

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !17193
  ret i8* %15, !dbg !17207
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17213, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i32 4, metadata !17214, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.value(metadata i32* %1, metadata !17215, metadata !DIExpression()), !dbg !17216
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17217
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17217
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17217
  store i32 %5, i32* %1, align 4, !dbg !17217
  ret i1 %4, !dbg !17218
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17219 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.197, i32 0, i32 0)) #26, !dbg !17221
  ret void, !dbg !17222
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17225, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17226, metadata !DIExpression()), !dbg !17246
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17247

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17248

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17226, metadata !DIExpression()), !dbg !17246
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17249
  %6 = load i8*, i8** %5, align 4, !dbg !17249
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17253
  %8 = load i32, i32* %7, align 4, !dbg !17253
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17254
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17255
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17226, metadata !DIExpression()), !dbg !17246
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17256
  br i1 %10, label %3, label %2, !dbg !17247, !llvm.loop !17258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17260 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17264, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i8* %1, metadata !17265, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 %2, metadata !17266, metadata !DIExpression()), !dbg !17267
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17268
  tail call fastcc void @z_waitq_init.199(%union.anon* noundef nonnull %4) #27, !dbg !17269
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17270
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17271
  ret void, !dbg !17272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.199(%union.anon* noundef %0) unnamed_addr #4 !dbg !17273 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17278, metadata !DIExpression()), !dbg !17279
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17280
  tail call fastcc void @sys_dlist_init.200(%struct._dnode* noundef %2) #27, !dbg !17281
  ret void, !dbg !17282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.200(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17283 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17288, metadata !DIExpression()), !dbg !17289
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17290
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17291
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17292
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17293
  ret void, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17295 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17306, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17303, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 %1, metadata !17304, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 %2, metadata !17305, metadata !DIExpression()), !dbg !17316
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17317
  call void @llvm.dbg.value(metadata i64 %6, metadata !17308, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i8* null, metadata !17309, metadata !DIExpression()), !dbg !17316
  %7 = icmp eq i64 %5, -1, !dbg !17318
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17318
  call void @llvm.dbg.value(metadata i64 %8, metadata !17308, metadata !DIExpression()), !dbg !17316
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17320, metadata !DIExpression()) #25, !dbg !17327
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17329, !srcloc !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17332, metadata !DIExpression()) #25, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()) #25, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()) #25, !dbg !17327
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i8 0, metadata !17315, metadata !DIExpression()), !dbg !17316
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17309, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i8 0, metadata !17315, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17316
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i8* %12, metadata !17309, metadata !DIExpression()), !dbg !17316
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17339
  call void @llvm.dbg.value(metadata i64 %13, metadata !17307, metadata !DIExpression()), !dbg !17316
  %14 = icmp eq i8* %12, null, !dbg !17340
  br i1 %14, label %15, label %31, !dbg !17342

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17316
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17342

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17315, metadata !DIExpression()), !dbg !17316
  %20 = sub nsw i64 %8, %18, !dbg !17343
  %21 = icmp slt i64 %20, 1, !dbg !17344
  br i1 %21, label %31, label %22, !dbg !17345

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17316
  call void @llvm.dbg.value(metadata i8 undef, metadata !17315, metadata !DIExpression()), !dbg !17316
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17346
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17346
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17320, metadata !DIExpression()) #25, !dbg !17347
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17349, !srcloc !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17332, metadata !DIExpression()) #25, !dbg !17351
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()) #25, !dbg !17351
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()) #25, !dbg !17347
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i8* null, metadata !17309, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17316
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17337
  call void @llvm.dbg.value(metadata i8* %28, metadata !17309, metadata !DIExpression()), !dbg !17316
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17339
  call void @llvm.dbg.value(metadata i64 %29, metadata !17307, metadata !DIExpression()), !dbg !17316
  %30 = icmp eq i8* %28, null, !dbg !17340
  br i1 %30, label %17, label %31, !dbg !17342, !llvm.loop !17352

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17337
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17316
  call void @llvm.dbg.value(metadata i8* %33, metadata !17309, metadata !DIExpression()), !dbg !17316
  call void @llvm.dbg.value(metadata i32 %34, metadata !17355, metadata !DIExpression()) #25, !dbg !17361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17360, metadata !DIExpression()) #25, !dbg !17361
  call void @llvm.dbg.value(metadata i32 %34, metadata !17363, metadata !DIExpression()) #25, !dbg !17366
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17368, !srcloc !17369
  ret i8* %33, !dbg !17370
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17371 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17377, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17375, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 %1, metadata !17376, metadata !DIExpression()), !dbg !17379
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17380
  call void @llvm.dbg.value(metadata i8* %4, metadata !17378, metadata !DIExpression()), !dbg !17379
  ret i8* %4, !dbg !17381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17382 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17386, metadata !DIExpression()), !dbg !17389
  call void @llvm.dbg.value(metadata i8* %1, metadata !17387, metadata !DIExpression()), !dbg !17389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17320, metadata !DIExpression()) #25, !dbg !17390
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17392, !srcloc !17335
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17392
  call void @llvm.dbg.value(metadata i32 %4, metadata !17332, metadata !DIExpression()) #25, !dbg !17394
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()) #25, !dbg !17394
  call void @llvm.dbg.value(metadata i32 %4, metadata !17326, metadata !DIExpression()) #25, !dbg !17390
  call void @llvm.dbg.value(metadata i32 %4, metadata !17388, metadata !DIExpression()), !dbg !17389
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17395
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17396
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17397
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17399
  %8 = icmp eq i32 %7, 0, !dbg !17400
  br i1 %8, label %12, label %9, !dbg !17401

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17402
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17403
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17403
  br label %13, !dbg !17405

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17355, metadata !DIExpression()) #25, !dbg !17406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17360, metadata !DIExpression()) #25, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %4, metadata !17363, metadata !DIExpression()) #25, !dbg !17409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17411, !srcloc !17369
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17412
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!785, !2, !2679, !2681, !27, !2683, !2685, !2718, !2755, !111, !168, !197, !2757, !2768, !2814, !2816, !2844, !2872, !2915, !2986, !3031, !367, !510, !3059, !546, !556, !581, !831, !3064, !968, !1148, !1487, !1851, !3103, !1964, !2054, !3105, !3191, !3256, !2105, !3259, !2111, !2474, !3277, !3279, !2494, !3320, !2609, !3323, !3325, !2648}
!llvm.ident = !{!3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327, !3327}
!llvm.module.flags = !{!3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 501, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 492, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 494, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 495, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 496, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 497, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 498, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 499, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 500, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !696, line: 72, type: !780, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !682, globals: !693, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!614 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!615 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!616 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!617 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!618 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!619 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!620 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!621 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!622 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!623 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!624 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!625 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!626 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!627 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!628 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!629 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!630 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!631 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!632 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!633 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!634 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!635 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!636 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!637 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!638 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!639 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!640 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!641 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!642 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!643 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!644 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!645 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!646 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!647 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!648 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!649 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!650 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!651 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!652 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!653 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!654 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!655 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!656 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!657 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!658 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!659 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!660 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!661 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!662 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!663 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!664 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!665 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!666 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!667 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!668 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!669 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!670 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!671 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!672 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!673 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!674 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!675 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!676 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!677 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!678 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!679 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!680 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!681 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!682 = !{!204, !103, !102, !683}
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 486, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 478, size: 192, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !685, file: !116, line: 480, baseType: !120, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !685, file: !116, line: 481, baseType: !120, size: 32, offset: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !685, file: !116, line: 482, baseType: !120, size: 32, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !685, file: !116, line: 483, baseType: !120, size: 32, offset: 96)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !685, file: !116, line: 484, baseType: !120, size: 32, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !685, file: !116, line: 485, baseType: !120, size: 32, offset: 160)
!693 = !{!694, !700, !716, !727, !744, !579, !746, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778}
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !581, file: !696, line: 424, type: !697, isLocal: false, isDefinition: true, align: 16)
!696 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !698)
!698 = !{!699}
!699 = !DISubrange(count: 4)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !581, file: !696, line: 424, type: !702, isLocal: false, isDefinition: true, align: 32)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !704)
!704 = !{!705, !706, !707, !708, !714, !715}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !703, file: !141, line: 380, baseType: !144, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !703, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !703, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !703, file: !141, line: 386, baseType: !709, size: 32, offset: 96)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !711)
!711 = !{!712, !713}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !710, file: !141, line: 359, baseType: !154, size: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !710, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !703, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !703, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !581, file: !696, line: 424, type: !718, isLocal: true, isDefinition: true, align: 32)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !720)
!720 = !{!721, !726}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !719, file: !132, line: 60, baseType: !722, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!723 = !DISubroutineType(types: !724)
!724 = !{!103, !725}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !719, file: !132, line: 65, baseType: !725, size: 32, offset: 32)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !696, line: 423, type: !729, isLocal: true, isDefinition: true)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !696, line: 107, size: 1472, elements: !730)
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !729, file: !696, line: 109, baseType: !732, size: 1472)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 1472, elements: !742)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !696, line: 101, size: 64, elements: !734)
!734 = !{!735, !741}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !733, file: !696, line: 102, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !737, line: 63, baseType: !738)
!737 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !103, !102}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !733, file: !696, line: 103, baseType: !102, size: 32, offset: 32)
!742 = !{!743}
!743 = !DISubrange(count: 23)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !581, file: !696, line: 424, type: !710, isLocal: true, isDefinition: true, align: 8)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !748, file: !696, line: 493, type: !753, isLocal: true, isDefinition: true, align: 32)
!748 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !696, file: !696, line: 460, type: !749, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !751)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !725}
!751 = !{!752}
!752 = !DILocalVariable(name: "dev", arg: 1, scope: !748, file: !696, line: 460, type: !725)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !754)
!754 = !{!755, !757, !758, !759}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !753, file: !10, line: 55, baseType: !756, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !753, file: !10, line: 57, baseType: !756, size: 32, offset: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !753, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !753, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !748, file: !696, line: 497, type: !753, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !748, file: !696, line: 507, type: !753, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !748, file: !696, line: 512, type: !753, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !748, file: !696, line: 516, type: !753, isLocal: true, isDefinition: true, align: 32)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !748, file: !696, line: 523, type: !753, isLocal: true, isDefinition: true, align: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !748, file: !696, line: 527, type: !753, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !748, file: !696, line: 581, type: !753, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !748, file: !696, line: 586, type: !753, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !748, file: !696, line: 591, type: !753, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !748, file: !696, line: 595, type: !753, isLocal: true, isDefinition: true, align: 32)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 736, elements: !742)
!781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 165, baseType: !584)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !785, file: !790, line: 29, type: !826, isLocal: false, isDefinition: true, align: 16)
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !787, splitDebugInlining: false, nameTableKind: None)
!786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!787 = !{!788, !783, !794, !796, !798, !800, !802, !804, !806, !808, !810, !812, !814, !816, !818, !820, !822, !824}
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !785, file: !790, line: 24, type: !791, isLocal: false, isDefinition: true, align: 16)
!790 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 304, elements: !792)
!792 = !{!793}
!793 = !DISubrange(count: 19)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !785, file: !790, line: 36, type: !697, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !785, file: !790, line: 43, type: !697, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !785, file: !790, line: 50, type: !697, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !785, file: !790, line: 57, type: !697, isLocal: false, isDefinition: true, align: 16)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !785, file: !790, line: 64, type: !697, isLocal: false, isDefinition: true, align: 16)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !785, file: !790, line: 71, type: !697, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !785, file: !790, line: 78, type: !697, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !785, file: !790, line: 85, type: !697, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !785, file: !790, line: 92, type: !697, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !785, file: !790, line: 99, type: !697, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !785, file: !790, line: 106, type: !697, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !785, file: !790, line: 113, type: !697, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !785, file: !790, line: 120, type: !697, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !785, file: !790, line: 127, type: !697, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !785, file: !790, line: 134, type: !697, isLocal: false, isDefinition: true, align: 16)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !785, file: !790, line: 141, type: !697, isLocal: false, isDefinition: true, align: 16)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !827)
!827 = !{!828}
!828 = !DISubrange(count: 3)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !831, file: !894, line: 398, type: !927, isLocal: true, isDefinition: true)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !833, retainedTypes: !846, globals: !891, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!833 = !{!834, !30, !839}
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !835, line: 197, baseType: !32, size: 32, elements: !836)
!835 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!837, !838}
!837 = !DIEnumerator(name: "SUCCESS", value: 0)
!838 = !DIEnumerator(name: "ERROR", value: 1)
!839 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !840, line: 44, baseType: !32, size: 32, elements: !841)
!840 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!841 = !{!842, !843, !844, !845}
!842 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!843 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!844 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!845 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!846 = !{!102, !103, !121, !847, !884, !890}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 677, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 643, size: 1152, elements: !850)
!850 = !{!851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !849, file: !116, line: 645, baseType: !120, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !849, file: !116, line: 646, baseType: !120, size: 32, offset: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !849, file: !116, line: 647, baseType: !120, size: 32, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !849, file: !116, line: 648, baseType: !120, size: 32, offset: 96)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !849, file: !116, line: 649, baseType: !120, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !849, file: !116, line: 650, baseType: !120, size: 32, offset: 160)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !849, file: !116, line: 651, baseType: !120, size: 32, offset: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !849, file: !116, line: 652, baseType: !121, size: 32, offset: 224)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !849, file: !116, line: 653, baseType: !120, size: 32, offset: 256)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !849, file: !116, line: 654, baseType: !120, size: 32, offset: 288)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !849, file: !116, line: 655, baseType: !862, size: 64, offset: 320)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !849, file: !116, line: 656, baseType: !120, size: 32, offset: 384)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !849, file: !116, line: 657, baseType: !120, size: 32, offset: 416)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !849, file: !116, line: 658, baseType: !120, size: 32, offset: 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !849, file: !116, line: 659, baseType: !121, size: 32, offset: 480)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !849, file: !116, line: 660, baseType: !120, size: 32, offset: 512)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !849, file: !116, line: 661, baseType: !120, size: 32, offset: 544)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !849, file: !116, line: 662, baseType: !862, size: 64, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !849, file: !116, line: 663, baseType: !120, size: 32, offset: 640)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !849, file: !116, line: 664, baseType: !120, size: 32, offset: 672)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !849, file: !116, line: 665, baseType: !120, size: 32, offset: 704)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !849, file: !116, line: 666, baseType: !121, size: 32, offset: 736)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !849, file: !116, line: 667, baseType: !120, size: 32, offset: 768)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !849, file: !116, line: 668, baseType: !120, size: 32, offset: 800)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !849, file: !116, line: 669, baseType: !862, size: 64, offset: 832)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !849, file: !116, line: 670, baseType: !120, size: 32, offset: 896)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !849, file: !116, line: 671, baseType: !120, size: 32, offset: 928)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !849, file: !116, line: 672, baseType: !862, size: 64, offset: 960)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !849, file: !116, line: 673, baseType: !120, size: 32, offset: 1024)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !849, file: !116, line: 674, baseType: !120, size: 32, offset: 1056)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !849, file: !116, line: 675, baseType: !120, size: 32, offset: 1088)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !849, file: !116, line: 676, baseType: !120, size: 32, offset: 1120)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !886, line: 343, size: 64, elements: !887)
!886 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!887 = !{!888, !889}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !885, file: !886, line: 344, baseType: !121, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !885, file: !886, line: 345, baseType: !121, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!891 = !{!892, !898, !914, !925, !829}
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !831, file: !894, line: 752, type: !895, isLocal: false, isDefinition: true, align: 16)
!894 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1024, elements: !896)
!896 = !{!897}
!897 = !DISubrange(count: 64)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !831, file: !894, line: 752, type: !900, isLocal: false, isDefinition: true, align: 32)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !902)
!902 = !{!903, !904, !905, !906, !912, !913}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !901, file: !141, line: 380, baseType: !144, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !901, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !901, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !901, file: !141, line: 386, baseType: !907, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !909)
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !908, file: !141, line: 359, baseType: !154, size: 8)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !908, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !901, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !901, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !831, file: !894, line: 752, type: !916, isLocal: true, isDefinition: true, align: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !918)
!918 = !{!919, !924}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !917, file: !132, line: 60, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !917, file: !132, line: 65, baseType: !923, size: 32, offset: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !831, file: !894, line: 752, type: !908, isLocal: true, isDefinition: true, align: 8)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !840, line: 100, size: 224, elements: !928)
!928 = !{!929, !935, !936, !945, !950, !955, !961}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !927, file: !840, line: 101, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !840, line: 76, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!103, !923, !934}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !840, line: 56, baseType: !102)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !927, file: !840, line: 102, baseType: !930, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !927, file: !840, line: 103, baseType: !937, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !840, line: 83, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!103, !923, !934, !941, !102}
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !840, line: 72, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !923, !934, !102}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !927, file: !840, line: 104, baseType: !946, size: 32, offset: 96)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !840, line: 79, baseType: !947)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!103, !923, !934, !890}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !927, file: !840, line: 105, baseType: !951, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !840, line: 88, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!839, !923, !934}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !927, file: !840, line: 106, baseType: !956, size: 32, offset: 160)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !840, line: 92, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!103, !923, !934, !960}
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !840, line: 64, baseType: !102)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !927, file: !840, line: 107, baseType: !962, size: 32, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !840, line: 96, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{!103, !923, !934, !102}
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "avail_queue", scope: !968, file: !972, line: 108, type: !1069, isLocal: true, isDefinition: true)
!968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !970, retainedTypes: !979, globals: !1059, splitDebugInlining: false, nameTableKind: None)
!969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!970 = !{!30, !971}
!971 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !972, line: 214, baseType: !32, size: 32, elements: !973)
!972 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!973 = !{!974, !975, !976, !977, !978}
!974 = !DIEnumerator(name: "ESC_ESC", value: 0)
!975 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!976 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!977 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!978 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!979 = !{!102, !103, !980, !32, !24}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !983)
!983 = !{!984, !1003, !1007, !1011, !1024, !1029, !1033, !1037, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !982, file: !209, line: 365, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!103, !988, !230}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !991)
!991 = !{!992, !993, !994, !995, !1001, !1002}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !990, file: !141, line: 380, baseType: !144, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !990, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !990, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !990, file: !141, line: 386, baseType: !996, size: 32, offset: 96)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !997, file: !141, line: 359, baseType: !154, size: 8)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !997, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !990, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !990, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !982, file: !209, line: 366, baseType: !1004, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !988, !155}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !982, file: !209, line: 374, baseType: !1008, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!103, !988}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !982, file: !209, line: 377, baseType: !1012, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!103, !988, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1017, file: !209, line: 123, baseType: !121, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1017, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1017, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1017, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1017, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !982, file: !209, line: 379, baseType: !1025, size: 32, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!103, !988, !1028}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !982, file: !209, line: 384, baseType: !1030, size: 32, offset: 160)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!103, !988, !261, !103}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !982, file: !209, line: 393, baseType: !1034, size: 32, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!103, !988, !267, !268}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !982, file: !209, line: 402, baseType: !1038, size: 32, offset: 224)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !988}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !982, file: !209, line: 405, baseType: !1038, size: 32, offset: 256)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !982, file: !209, line: 408, baseType: !1008, size: 32, offset: 288)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !982, file: !209, line: 411, baseType: !1038, size: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !982, file: !209, line: 414, baseType: !1038, size: 32, offset: 352)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !982, file: !209, line: 417, baseType: !1008, size: 32, offset: 384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !982, file: !209, line: 420, baseType: !1008, size: 32, offset: 416)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !982, file: !209, line: 423, baseType: !1038, size: 32, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !982, file: !209, line: 426, baseType: !1038, size: 32, offset: 480)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !982, file: !209, line: 429, baseType: !1008, size: 32, offset: 512)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !982, file: !209, line: 432, baseType: !1008, size: 32, offset: 544)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !982, file: !209, line: 435, baseType: !1052, size: 32, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{null, !988, !1055, !102}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !988, !102}
!1059 = !{!1060, !966, !1067, !1107, !1112, !1115, !1134, !1138, !1140, !1142, !1144}
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !968, file: !972, line: 603, type: !1062, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1063, file: !132, line: 60, baseType: !1008, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1063, file: !132, line: 65, baseType: !988, size: 32, offset: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "lines_queue", scope: !968, file: !972, line: 109, type: !1069, isLocal: true, isDefinition: true)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1071)
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1070, file: !296, line: 2209, baseType: !1073, size: 128)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1074)
!1074 = !{!1075, !1086, !1088}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1073, file: !296, line: 1710, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1078)
!1078 = !{!1079, !1085}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1077, file: !303, line: 42, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1083)
!1083 = !{!1084}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1082, file: !303, line: 36, baseType: !312, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1077, file: !303, line: 43, baseType: !1080, size: 32, offset: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1073, file: !296, line: 1711, baseType: !1087, offset: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1073, file: !296, line: 1712, baseType: !1089, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1090, file: !320, line: 232, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1095)
!1095 = !{!1096, !1102}
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !1094, file: !325, line: 38, baseType: !1097, size: 32)
!1097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1094, file: !325, line: 38, size: 32, elements: !1098)
!1098 = !{!1099, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1097, file: !325, line: 39, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1097, file: !325, line: 40, baseType: !1100, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, scope: !1094, file: !325, line: 42, baseType: !1103, size: 32, offset: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1094, file: !325, line: 42, size: 32, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1103, file: !325, line: 43, baseType: !1100, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1103, file: !325, line: 44, baseType: !1100, size: 32)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "completion_cb", scope: !968, file: !972, line: 110, type: !1109, isLocal: true, isDefinition: true)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!154, !344, !154}
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !968, file: !972, line: 38, type: !1114, isLocal: true, isDefinition: true)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "cmd", scope: !1117, file: !972, line: 435, type: !1128, isLocal: true, isDefinition: true)
!1117 = distinct !DISubprogram(name: "uart_console_isr", scope: !972, file: !972, line: 428, type: !1057, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !1118)
!1118 = !{!1119, !1120, !1121, !1123, !1124}
!1119 = !DILocalVariable(name: "unused", arg: 1, scope: !1117, file: !972, line: 428, type: !988)
!1120 = !DILocalVariable(name: "user_data", arg: 2, scope: !1117, file: !972, line: 428, type: !102)
!1121 = !DILocalVariable(name: "byte", scope: !1122, file: !972, line: 436, type: !154)
!1122 = distinct !DILexicalBlock(scope: !1117, file: !972, line: 434, column: 48)
!1123 = !DILocalVariable(name: "rx", scope: !1122, file: !972, line: 437, type: !103)
!1124 = !DILocalVariable(name: "ret", scope: !1125, file: !972, line: 461, type: !102)
!1125 = distinct !DILexicalBlock(scope: !1126, file: !972, line: 461, column: 10)
!1126 = distinct !DILexicalBlock(scope: !1127, file: !972, line: 460, column: 13)
!1127 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 460, column: 7)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1130)
!1130 = !{!1131, !1132, !1133}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1129, file: !350, line: 23, baseType: !353, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1129, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1129, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "esc_state", scope: !968, file: !972, line: 228, type: !1136, isLocal: true, isDefinition: true)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1137, line: 22, baseType: !354)
!1137 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "ansi_val", scope: !968, file: !972, line: 229, type: !32, isLocal: true, isDefinition: true)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !968, file: !972, line: 229, type: !32, isLocal: true, isDefinition: true)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "cur", scope: !968, file: !972, line: 230, type: !154, isLocal: true, isDefinition: true)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "end", scope: !968, file: !972, line: 230, type: !154, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1148, file: !1317, line: 762, type: !1456, isLocal: true, isDefinition: true)
!1148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1150, retainedTypes: !1168, globals: !1314, splitDebugInlining: false, nameTableKind: None)
!1149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!1150 = !{!30, !1151, !1157, !1162, !839}
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1152, line: 506, baseType: !32, size: 32, elements: !1153)
!1152 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1153 = !{!1154, !1155, !1156}
!1154 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1155 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1156 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1152, line: 512, baseType: !32, size: 32, elements: !1158)
!1158 = !{!1159, !1160, !1161}
!1159 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1160 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1161 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !737, line: 43, baseType: !32, size: 32, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1165 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1166 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1167 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1168 = !{!102, !103, !1169, !1239, !1244, !1204, !1157, !1151, !1249, !1250, !121, !1264, !1219, !344, !1274, !1275}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1152, line: 523, size: 288, elements: !1172)
!1172 = !{!1173, !1194, !1200, !1205, !1209, !1210, !1211, !1215, !1235}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1171, file: !1152, line: 524, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!103, !1177, !1192, !1193}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1190, !1191}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1179, file: !141, line: 380, baseType: !144, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1179, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1179, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1179, file: !141, line: 386, baseType: !1185, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1186, file: !141, line: 359, baseType: !154, size: 8)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1186, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1179, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1179, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1152, line: 237, baseType: !154)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1152, line: 257, baseType: !121)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1171, file: !1152, line: 530, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!103, !1177, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1152, line: 229, baseType: !121)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1171, file: !1152, line: 532, baseType: !1201, size: 32, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!103, !1177, !1204, !1199}
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1152, line: 216, baseType: !121)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1171, file: !1152, line: 535, baseType: !1206, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!103, !1177, !1204}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1171, file: !1152, line: 537, baseType: !1206, size: 32, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1171, file: !1152, line: 539, baseType: !1206, size: 32, offset: 160)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1171, file: !1152, line: 541, baseType: !1212, size: 32, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!103, !1177, !1192, !1151, !1157}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1171, file: !1152, line: 544, baseType: !1216, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!103, !1177, !1219, !157}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1152, line: 478, size: 96, elements: !1221)
!1221 = !{!1222, !1229, !1234}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1220, file: !1152, line: 482, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1224, line: 33, baseType: !1225)
!1224 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1224, line: 29, size: 32, elements: !1226)
!1226 = !{!1227}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1225, file: !1224, line: 30, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1220, file: !1152, line: 485, baseType: !1230, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1152, line: 464, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !1177, !1219, !1204}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1220, file: !1152, line: 493, baseType: !1204, size: 32, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1171, file: !1152, line: 547, baseType: !1236, size: 32, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!121, !1177}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1152, line: 428, size: 32, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1241, file: !1152, line: 434, baseType: !1204, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1152, line: 441, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1246, file: !1152, line: 447, baseType: !1204, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 583, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 572, size: 320, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1252, file: !116, line: 574, baseType: !120, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1252, file: !116, line: 575, baseType: !120, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1252, file: !116, line: 576, baseType: !120, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1252, file: !116, line: 577, baseType: !120, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1252, file: !116, line: 578, baseType: !120, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1252, file: !116, line: 579, baseType: !120, size: 32, offset: 160)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1252, file: !116, line: 580, baseType: !120, size: 32, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1252, file: !116, line: 581, baseType: !120, size: 32, offset: 224)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1252, file: !116, line: 582, baseType: !1263, size: 64, offset: 256)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 596, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 589, size: 288, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1272, !1273}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1266, file: !116, line: 591, baseType: !120, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1266, file: !116, line: 592, baseType: !120, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1266, file: !116, line: 593, baseType: !1271, size: 128, offset: 64)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !698)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1266, file: !116, line: 594, baseType: !862, size: 64, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1266, file: !116, line: 595, baseType: !120, size: 32, offset: 256)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !840, line: 100, size: 224, elements: !1278)
!1278 = !{!1279, !1284, !1285, !1294, !1299, !1304, !1309}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1277, file: !840, line: 101, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !840, line: 76, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1177, !934}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1277, file: !840, line: 102, baseType: !1280, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1277, file: !840, line: 103, baseType: !1286, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !840, line: 83, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!103, !1177, !934, !1290, !102}
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !840, line: 72, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1177, !934, !102}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1277, file: !840, line: 104, baseType: !1295, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !840, line: 79, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!103, !1177, !934, !890}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1277, file: !840, line: 105, baseType: !1300, size: 32, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !840, line: 88, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!839, !1177, !934}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1277, file: !840, line: 106, baseType: !1305, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !840, line: 92, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!103, !1177, !934, !960}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1277, file: !840, line: 107, baseType: !1310, size: 32, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !840, line: 96, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1177, !934, !102}
!1314 = !{!1315, !1321, !1323, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448, !1450, !1146, !1452, !1454, !1467, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483}
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !1148, file: !1317, line: 762, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1317 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 5)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !1148, file: !1317, line: 762, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !1148, file: !1317, line: 762, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1327)
!1327 = !{!1328, !1332}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1326, file: !132, line: 60, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!103, !1177}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1326, file: !132, line: 65, baseType: !1177, size: 32, offset: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !1148, file: !1317, line: 766, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !1148, file: !1317, line: 766, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !1148, file: !1317, line: 766, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !1148, file: !1317, line: 770, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !1148, file: !1317, line: 770, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !1148, file: !1317, line: 770, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !1148, file: !1317, line: 774, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !1148, file: !1317, line: 774, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !1148, file: !1317, line: 774, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1148, file: !1317, line: 778, type: !1353, isLocal: false, isDefinition: true, align: 16)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 112, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 7)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1148, file: !1317, line: 778, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1148, file: !1317, line: 778, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !1148, file: !1317, line: 782, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !1148, file: !1317, line: 782, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !1148, file: !1317, line: 782, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !1148, file: !1317, line: 786, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !1148, file: !1317, line: 786, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !1148, file: !1317, line: 786, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !1148, file: !1317, line: 790, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !1148, file: !1317, line: 790, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !1148, file: !1317, line: 790, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !1148, file: !1317, line: 794, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !1148, file: !1317, line: 794, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !1148, file: !1317, line: 794, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !1148, file: !1317, line: 798, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !1148, file: !1317, line: 798, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !1148, file: !1317, line: 798, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !1148, file: !1317, line: 802, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !1148, file: !1317, line: 802, type: !1178, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !1148, file: !1317, line: 802, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1148, file: !1317, line: 762, type: !1398, isLocal: true, isDefinition: true)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1399, line: 237, size: 128, elements: !1400)
!1399 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !1399, line: 239, baseType: !1246, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1398, file: !1399, line: 241, baseType: !1177, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1398, file: !1399, line: 243, baseType: !1404, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1224, line: 40, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1224, line: 35, size: 64, elements: !1406)
!1406 = !{!1407, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1405, file: !1224, line: 36, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1405, file: !1224, line: 37, baseType: !1408, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !1148, file: !1317, line: 762, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1148, file: !1317, line: 766, type: !1398, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !1148, file: !1317, line: 766, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1148, file: !1317, line: 770, type: !1398, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !1148, file: !1317, line: 770, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1148, file: !1317, line: 774, type: !1398, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !1148, file: !1317, line: 774, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1148, file: !1317, line: 778, type: !1398, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1148, file: !1317, line: 778, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1148, file: !1317, line: 782, type: !1398, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !1148, file: !1317, line: 782, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1148, file: !1317, line: 786, type: !1398, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !1148, file: !1317, line: 786, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1148, file: !1317, line: 790, type: !1398, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !1148, file: !1317, line: 790, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1148, file: !1317, line: 794, type: !1398, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !1148, file: !1317, line: 794, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !1148, file: !1317, line: 798, type: !1398, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !1148, file: !1317, line: 798, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !1148, file: !1317, line: 802, type: !1398, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !1148, file: !1317, line: 802, type: !1186, isLocal: true, isDefinition: true, align: 8)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1148, file: !1317, line: 656, type: !1170, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1148, file: !1317, line: 766, type: !1456, isLocal: true, isDefinition: true)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1399, line: 224, size: 160, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !1399, line: 226, baseType: !1241, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1457, file: !1399, line: 228, baseType: !890, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1457, file: !1399, line: 230, baseType: !103, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1457, file: !1399, line: 231, baseType: !1463, size: 64, offset: 96)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !886, line: 343, size: 64, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1463, file: !886, line: 344, baseType: !121, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1463, file: !886, line: 345, baseType: !121, size: 32, offset: 32)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1148, file: !1317, line: 770, type: !1456, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1148, file: !1317, line: 774, type: !1456, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1148, file: !1317, line: 778, type: !1456, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1148, file: !1317, line: 782, type: !1456, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1148, file: !1317, line: 786, type: !1456, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1148, file: !1317, line: 790, type: !1456, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1148, file: !1317, line: 794, type: !1456, isLocal: true, isDefinition: true)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !1148, file: !1317, line: 798, type: !1456, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !1148, file: !1317, line: 802, type: !1456, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1487, file: !1658, line: 1914, type: !1766, isLocal: true, isDefinition: true)
!1487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1489, retainedTypes: !1522, globals: !1655, splitDebugInlining: false, nameTableKind: None)
!1488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!1489 = !{!30, !1490, !1497, !1504, !1511, !1517, !839}
!1490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496}
!1492 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1493 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1494 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1495 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1496 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1497 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503}
!1499 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1500 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1501 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1502 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1503 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1504 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510}
!1506 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1507 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1508 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1509 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1510 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1511 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1512)
!1512 = !{!1513, !1514, !1515, !1516}
!1513 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1514 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1515 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1516 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1520 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1521 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1522 = !{!102, !103, !1523, !155, !154, !1602, !121, !934, !1613, !429, !1652, !1654}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1526)
!1526 = !{!1527, !1546, !1550, !1554, !1567, !1572, !1576, !1580, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1525, file: !209, line: 365, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!103, !1531, !230}
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538, !1544, !1545}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1533, file: !141, line: 380, baseType: !144, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1533, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1533, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1533, file: !141, line: 386, baseType: !1539, size: 32, offset: 96)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1540, file: !141, line: 359, baseType: !154, size: 8)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1540, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1533, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1533, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1525, file: !209, line: 366, baseType: !1547, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1531, !155}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1525, file: !209, line: 374, baseType: !1551, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1531}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1525, file: !209, line: 377, baseType: !1555, size: 32, offset: 96)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!103, !1531, !1558}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1560, file: !209, line: 123, baseType: !121, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1560, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1560, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1560, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1560, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1525, file: !209, line: 379, baseType: !1568, size: 32, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!103, !1531, !1571}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1525, file: !209, line: 384, baseType: !1573, size: 32, offset: 160)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!103, !1531, !261, !103}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1525, file: !209, line: 393, baseType: !1577, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1531, !267, !268}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1525, file: !209, line: 402, baseType: !1581, size: 32, offset: 224)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1531}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1525, file: !209, line: 405, baseType: !1581, size: 32, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1525, file: !209, line: 408, baseType: !1551, size: 32, offset: 288)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1525, file: !209, line: 411, baseType: !1581, size: 32, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1525, file: !209, line: 414, baseType: !1581, size: 32, offset: 352)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1525, file: !209, line: 417, baseType: !1551, size: 32, offset: 384)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1525, file: !209, line: 420, baseType: !1551, size: 32, offset: 416)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1525, file: !209, line: 423, baseType: !1581, size: 32, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1525, file: !209, line: 426, baseType: !1581, size: 32, offset: 480)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1525, file: !209, line: 429, baseType: !1551, size: 32, offset: 512)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1525, file: !209, line: 432, baseType: !1551, size: 32, offset: 544)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1525, file: !209, line: 435, baseType: !1595, size: 32, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{null, !1531, !1598, !102}
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{null, !1531, !102}
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 836, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 827, size: 224, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1604, file: !116, line: 829, baseType: !120, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1604, file: !116, line: 830, baseType: !120, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1604, file: !116, line: 831, baseType: !120, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1604, file: !116, line: 832, baseType: !120, size: 32, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1604, file: !116, line: 833, baseType: !120, size: 32, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1604, file: !116, line: 834, baseType: !120, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1604, file: !116, line: 835, baseType: !120, size: 32, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !840, line: 100, size: 224, elements: !1616)
!1616 = !{!1617, !1622, !1623, !1632, !1637, !1642, !1647}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1615, file: !840, line: 101, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !840, line: 76, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!103, !1531, !934}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1615, file: !840, line: 102, baseType: !1618, size: 32, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1615, file: !840, line: 103, baseType: !1624, size: 32, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !840, line: 83, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!103, !1531, !934, !1628, !102}
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !840, line: 72, baseType: !1629)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1531, !934, !102}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1615, file: !840, line: 104, baseType: !1633, size: 32, offset: 96)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !840, line: 79, baseType: !1634)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!103, !1531, !934, !890}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1615, file: !840, line: 105, baseType: !1638, size: 32, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !840, line: 88, baseType: !1639)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!839, !1531, !934}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1615, file: !840, line: 106, baseType: !1643, size: 32, offset: 160)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !840, line: 92, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!103, !1531, !934, !960}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1615, file: !840, line: 107, baseType: !1648, size: 32, offset: 192)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !840, line: 96, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!103, !1531, !934, !102}
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1653)
!1653 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1655 = !{!1656, !1662, !1664, !1671, !1673, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1703, !1485, !1705, !1713, !1736, !1739, !1742, !1753, !1755, !1764, !1783, !1785, !1787, !1789, !1791, !1796, !1798, !1800, !1802, !1804, !1806, !1808, !1813, !1815, !1817, !1819, !1821, !1823, !1825, !1830, !1832, !1834, !1836, !1838, !1840, !1842, !1847}
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1659, isLocal: false, isDefinition: true, align: 16)
!1658 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1660)
!1660 = !{!1661}
!1661 = !DISubrange(count: 8)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1532, isLocal: false, isDefinition: true, align: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1666, isLocal: true, isDefinition: true, align: 32)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1667, file: !132, line: 60, baseType: !1551, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1667, file: !132, line: 65, baseType: !1531, size: 32, offset: 32)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1659, isLocal: false, isDefinition: true, align: 16)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1532, isLocal: false, isDefinition: true, align: 32)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1666, isLocal: true, isDefinition: true, align: 32)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1659, isLocal: false, isDefinition: true, align: 16)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1532, isLocal: false, isDefinition: true, align: 32)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1666, isLocal: true, isDefinition: true, align: 32)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1659, isLocal: false, isDefinition: true, align: 16)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1532, isLocal: false, isDefinition: true, align: 32)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1666, isLocal: true, isDefinition: true, align: 32)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1659, isLocal: false, isDefinition: true, align: 16)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1532, isLocal: false, isDefinition: true, align: 32)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1666, isLocal: true, isDefinition: true, align: 32)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1540, isLocal: true, isDefinition: true, align: 8)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1540, isLocal: true, isDefinition: true, align: 8)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1540, isLocal: true, isDefinition: true, align: 8)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1540, isLocal: true, isDefinition: true, align: 8)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1540, isLocal: true, isDefinition: true, align: 8)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1487, file: !1658, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 64, elements: !504)
!1708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !886, line: 343, size: 64, elements: !1710)
!1710 = !{!1711, !1712}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1709, file: !886, line: 344, baseType: !121, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1709, file: !886, line: 345, baseType: !121, size: 32, offset: 32)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1715, isLocal: true, isDefinition: true)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1717, line: 60, size: 64, elements: !1718)
!1717 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1718 = !{!1719, !1735}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1716, file: !1717, line: 69, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1717, line: 50, size: 64, elements: !1723)
!1723 = !{!1724, !1733, !1734}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1722, file: !1717, line: 52, baseType: !1725, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1728, line: 37, baseType: !1729)
!1728 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1728, line: 32, size: 64, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1729, file: !1728, line: 34, baseType: !121, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1729, file: !1728, line: 36, baseType: !121, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1722, file: !1717, line: 54, baseType: !154, size: 8, offset: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1722, file: !1717, line: 56, baseType: !154, size: 8, offset: 40)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1716, file: !1717, line: 71, baseType: !154, size: 8, offset: 32)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1738, isLocal: true, isDefinition: true)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 64, elements: !504)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1487, file: !1658, line: 1914, type: !1741, isLocal: true, isDefinition: true)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1726, size: 128, elements: !363)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1744, file: !1658, line: 1914, type: !1747, isLocal: true, isDefinition: true, align: 32)
!1744 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1658, file: !1658, line: 1914, type: !1582, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !1745)
!1745 = !{!1746}
!1746 = !DILocalVariable(name: "dev", arg: 1, scope: !1744, file: !1658, line: 1914, type: !1531)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1747, file: !10, line: 55, baseType: !756, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1747, file: !10, line: 57, baseType: !756, size: 32, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1747, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1747, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1487, file: !1658, line: 1539, type: !1524, isLocal: true, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1487, file: !1658, line: 1914, type: !1757, isLocal: true, isDefinition: true)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1758, line: 74, size: 128, elements: !1759)
!1758 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1759 = !{!1760, !1761, !1762, !1763}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1757, file: !1758, line: 76, baseType: !121, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1757, file: !1758, line: 78, baseType: !1531, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1757, file: !1758, line: 80, baseType: !1598, size: 32, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1757, file: !1758, line: 81, baseType: !102, size: 32, offset: 96)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1487, file: !1658, line: 1914, type: !1766, isLocal: true, isDefinition: true)
!1766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1758, line: 22, size: 256, elements: !1768)
!1768 = !{!1769, !1770, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1781}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1767, file: !1758, line: 24, baseType: !1602, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1767, file: !1758, line: 26, baseType: !1771, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1767, file: !1758, line: 28, baseType: !204, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1767, file: !1758, line: 30, baseType: !157, size: 8, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1767, file: !1758, line: 32, baseType: !103, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1767, file: !1758, line: 34, baseType: !157, size: 8, offset: 160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1767, file: !1758, line: 36, baseType: !157, size: 8, offset: 168)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1767, file: !1758, line: 38, baseType: !157, size: 8, offset: 176)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1767, file: !1758, line: 40, baseType: !157, size: 8, offset: 184)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1767, file: !1758, line: 41, baseType: !1780, size: 32, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1767, file: !1758, line: 44, baseType: !1782, size: 32, offset: 224)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1581)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1487, file: !1658, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1715, isLocal: true, isDefinition: true)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1738, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1487, file: !1658, line: 1914, type: !1741, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1793, file: !1658, line: 1914, type: !1747, isLocal: true, isDefinition: true, align: 32)
!1793 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1658, file: !1658, line: 1914, type: !1582, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !1794)
!1794 = !{!1795}
!1795 = !DILocalVariable(name: "dev", arg: 1, scope: !1793, file: !1658, line: 1914, type: !1531)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1487, file: !1658, line: 1914, type: !1757, isLocal: true, isDefinition: true)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1487, file: !1658, line: 1914, type: !1766, isLocal: true, isDefinition: true)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1487, file: !1658, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1715, isLocal: true, isDefinition: true)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1738, isLocal: true, isDefinition: true)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1487, file: !1658, line: 1914, type: !1741, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1810, file: !1658, line: 1914, type: !1747, isLocal: true, isDefinition: true, align: 32)
!1810 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1658, file: !1658, line: 1914, type: !1582, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !1811)
!1811 = !{!1812}
!1812 = !DILocalVariable(name: "dev", arg: 1, scope: !1810, file: !1658, line: 1914, type: !1531)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1487, file: !1658, line: 1914, type: !1757, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1487, file: !1658, line: 1914, type: !1766, isLocal: true, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1487, file: !1658, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1715, isLocal: true, isDefinition: true)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1738, isLocal: true, isDefinition: true)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_57", scope: !1487, file: !1658, line: 1914, type: !1741, isLocal: true, isDefinition: true)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_3", scope: !1827, file: !1658, line: 1914, type: !1747, isLocal: true, isDefinition: true, align: 32)
!1827 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_3", scope: !1658, file: !1658, line: 1914, type: !1582, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !1828)
!1828 = !{!1829}
!1829 = !DILocalVariable(name: "dev", arg: 1, scope: !1827, file: !1658, line: 1914, type: !1531)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1487, file: !1658, line: 1914, type: !1757, isLocal: true, isDefinition: true)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1487, file: !1658, line: 1914, type: !1766, isLocal: true, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1487, file: !1658, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1715, isLocal: true, isDefinition: true)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1738, isLocal: true, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1487, file: !1658, line: 1914, type: !1741, isLocal: true, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_4", scope: !1844, file: !1658, line: 1914, type: !1747, isLocal: true, isDefinition: true, align: 32)
!1844 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_4", scope: !1658, file: !1658, line: 1914, type: !1582, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !1845)
!1845 = !{!1846}
!1846 = !DILocalVariable(name: "dev", arg: 1, scope: !1844, file: !1658, line: 1914, type: !1531)
!1847 = !DIGlobalVariableExpression(var: !1848, expr: !DIExpression())
!1848 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1487, file: !1658, line: 1914, type: !1757, isLocal: true, isDefinition: true)
!1849 = !DIGlobalVariableExpression(var: !1850, expr: !DIExpression())
!1850 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1851, file: !1929, line: 65, type: !120, isLocal: true, isDefinition: true)
!1851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1853, retainedTypes: !1854, globals: !1926, splitDebugInlining: false, nameTableKind: None)
!1852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!1853 = !{!584}
!1854 = !{!200, !1855, !756, !154, !121, !1863, !1894}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1857, file: !515, line: 766, baseType: !120, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1857, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1857, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1857, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1866)
!1866 = !{!1867, !1869, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1884, !1889, !1893}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1865, file: !515, line: 413, baseType: !1868, size: 256)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1660)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1865, file: !515, line: 414, baseType: !1870, size: 768, offset: 256)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1871)
!1871 = !{!1872}
!1872 = !DISubrange(count: 24)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1865, file: !515, line: 415, baseType: !1868, size: 256, offset: 1024)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1865, file: !515, line: 416, baseType: !1870, size: 768, offset: 1280)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1865, file: !515, line: 417, baseType: !1868, size: 256, offset: 2048)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1865, file: !515, line: 418, baseType: !1870, size: 768, offset: 2304)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1865, file: !515, line: 419, baseType: !1868, size: 256, offset: 3072)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1865, file: !515, line: 420, baseType: !1870, size: 768, offset: 3328)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1865, file: !515, line: 421, baseType: !1868, size: 256, offset: 4096)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1865, file: !515, line: 422, baseType: !1881, size: 1792, offset: 4352)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1882)
!1882 = !{!1883}
!1883 = !DISubrange(count: 56)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1865, file: !515, line: 423, baseType: !1885, size: 1920, offset: 6144)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 1920, elements: !1887)
!1886 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1887 = !{!1888}
!1888 = !DISubrange(count: 240)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1865, file: !515, line: 424, baseType: !1890, size: 20608, offset: 8064)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1891)
!1891 = !{!1892}
!1892 = !DISubrange(count: 644)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1865, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1897)
!1897 = !{!1898, !1899, !1900, !1901, !1902, !1903, !1904, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1917, !1918, !1919, !1921, !1923, !1925}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1896, file: !515, line: 447, baseType: !519, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1896, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1896, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1896, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1896, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1896, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1896, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 96, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 12)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1896, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1896, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1896, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1896, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1896, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1896, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1896, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1896, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1896, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1896, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1896, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !698)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1896, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1319)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1896, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1319)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1896, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1926 = !{!1927, !1953, !1956, !1958, !1960, !1849}
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1851, file: !1929, line: 285, type: !1930, isLocal: true, isDefinition: true, align: 32)
!1929 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1932)
!1932 = !{!1933, !1952}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1931, file: !132, line: 60, baseType: !1934, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!103, !1937}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1950, !1951}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1939, file: !141, line: 380, baseType: !144, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1939, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1939, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1939, file: !141, line: 386, baseType: !1945, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1946, file: !141, line: 359, baseType: !154, size: 8)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1946, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1939, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1939, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1931, file: !132, line: 65, baseType: !1937, size: 32, offset: 32)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "lock", scope: !1851, file: !1929, line: 34, type: !1955, isLocal: true, isDefinition: true)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "last_load", scope: !1851, file: !1929, line: 36, type: !121, isLocal: true, isDefinition: true)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1851, file: !1929, line: 48, type: !121, isLocal: true, isDefinition: true)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1851, file: !1929, line: 54, type: !121, isLocal: true, isDefinition: true)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1964, file: !2046, line: 22, type: !2048, isLocal: true, isDefinition: true)
!1964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1966, retainedTypes: !1967, globals: !2043, splitDebugInlining: false, nameTableKind: None)
!1965 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!1966 = !{!1151, !1157}
!1967 = !{!1968, !2032, !2037, !1204, !1157, !1151, !2042, !102}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1152, line: 523, size: 288, elements: !1971)
!1971 = !{!1972, !1991, !1995, !1999, !2003, !2004, !2005, !2009, !2028}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1970, file: !1152, line: 524, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!103, !1976, !1192, !1193}
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1979)
!1979 = !{!1980, !1981, !1982, !1983, !1989, !1990}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1978, file: !141, line: 380, baseType: !144, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1978, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1978, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1978, file: !141, line: 386, baseType: !1984, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1985, file: !141, line: 359, baseType: !154, size: 8)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1985, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1978, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1978, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1970, file: !1152, line: 530, baseType: !1992, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!103, !1976, !1198}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1970, file: !1152, line: 532, baseType: !1996, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!103, !1976, !1204, !1199}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1970, file: !1152, line: 535, baseType: !2000, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!103, !1976, !1204}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1970, file: !1152, line: 537, baseType: !2000, size: 32, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1970, file: !1152, line: 539, baseType: !2000, size: 32, offset: 160)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1970, file: !1152, line: 541, baseType: !2006, size: 32, offset: 192)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!103, !1976, !1192, !1151, !1157}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1970, file: !1152, line: 544, baseType: !2010, size: 32, offset: 224)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!103, !1976, !2013, !157}
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1152, line: 478, size: 96, elements: !2015)
!2015 = !{!2016, !2022, !2027}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2014, file: !1152, line: 482, baseType: !2017, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1224, line: 33, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1224, line: 29, size: 32, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2018, file: !1224, line: 30, baseType: !2021, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2014, file: !1152, line: 485, baseType: !2023, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1152, line: 464, baseType: !2024)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{null, !1976, !2013, !1204}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2014, file: !1152, line: 493, baseType: !1204, size: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1970, file: !1152, line: 547, baseType: !2029, size: 32, offset: 256)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!121, !1976}
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1152, line: 428, size: 32, elements: !2035)
!2035 = !{!2036}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2034, file: !1152, line: 434, baseType: !1204, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1152, line: 441, size: 32, elements: !2040)
!2040 = !{!2041}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2039, file: !1152, line: 447, baseType: !1204, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2043 = !{!2044, !1962}
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2045 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1964, file: !2046, line: 37, type: !2047, isLocal: true, isDefinition: true)
!2046 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2049, size: 352, elements: !2050)
!2049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1976)
!2050 = !{!2051}
!2051 = !DISubrange(count: 11)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2054, file: !2096, line: 139, type: !2102, isLocal: false, isDefinition: true)
!2054 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2055, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2056, globals: !2093, splitDebugInlining: false, nameTableKind: None)
!2055 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2056 = !{!2057}
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 677, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 643, size: 1152, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2059, file: !116, line: 645, baseType: !120, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2059, file: !116, line: 646, baseType: !120, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2059, file: !116, line: 647, baseType: !120, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2059, file: !116, line: 648, baseType: !120, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2059, file: !116, line: 649, baseType: !120, size: 32, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2059, file: !116, line: 650, baseType: !120, size: 32, offset: 160)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2059, file: !116, line: 651, baseType: !120, size: 32, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2059, file: !116, line: 652, baseType: !121, size: 32, offset: 224)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2059, file: !116, line: 653, baseType: !120, size: 32, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2059, file: !116, line: 654, baseType: !120, size: 32, offset: 288)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2059, file: !116, line: 655, baseType: !862, size: 64, offset: 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2059, file: !116, line: 656, baseType: !120, size: 32, offset: 384)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2059, file: !116, line: 657, baseType: !120, size: 32, offset: 416)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2059, file: !116, line: 658, baseType: !120, size: 32, offset: 448)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2059, file: !116, line: 659, baseType: !121, size: 32, offset: 480)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2059, file: !116, line: 660, baseType: !120, size: 32, offset: 512)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2059, file: !116, line: 661, baseType: !120, size: 32, offset: 544)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2059, file: !116, line: 662, baseType: !862, size: 64, offset: 576)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2059, file: !116, line: 663, baseType: !120, size: 32, offset: 640)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2059, file: !116, line: 664, baseType: !120, size: 32, offset: 672)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2059, file: !116, line: 665, baseType: !120, size: 32, offset: 704)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2059, file: !116, line: 666, baseType: !121, size: 32, offset: 736)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2059, file: !116, line: 667, baseType: !120, size: 32, offset: 768)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2059, file: !116, line: 668, baseType: !120, size: 32, offset: 800)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2059, file: !116, line: 669, baseType: !862, size: 64, offset: 832)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2059, file: !116, line: 670, baseType: !120, size: 32, offset: 896)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2059, file: !116, line: 671, baseType: !120, size: 32, offset: 928)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2059, file: !116, line: 672, baseType: !862, size: 64, offset: 960)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2059, file: !116, line: 673, baseType: !120, size: 32, offset: 1024)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2059, file: !116, line: 674, baseType: !120, size: 32, offset: 1056)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2059, file: !116, line: 675, baseType: !120, size: 32, offset: 1088)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2059, file: !116, line: 676, baseType: !120, size: 32, offset: 1120)
!2093 = !{!2094, !2097, !2052}
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2054, file: !2096, line: 137, type: !121, isLocal: false, isDefinition: true)
!2096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2097 = !DIGlobalVariableExpression(var: !2098, expr: !DIExpression())
!2098 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2054, file: !2096, line: 138, type: !2099, isLocal: false, isDefinition: true)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !2100)
!2100 = !{!2101}
!2101 = !DISubrange(count: 16)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1660)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2105, file: !2108, line: 23, type: !268, isLocal: false, isDefinition: true)
!2105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2107, splitDebugInlining: false, nameTableKind: None)
!2106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2107 = !{!2103}
!2108 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2111, file: !2115, line: 86, type: !2364, isLocal: false, isDefinition: true, align: 512)
!2111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2113, retainedTypes: !2122, globals: !2195, splitDebugInlining: false, nameTableKind: None)
!2112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2113 = !{!2114, !30, !584}
!2114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2115, line: 63, baseType: !32, size: 32, elements: !2116)
!2115 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2116 = !{!2117, !2118, !2119, !2120, !2121}
!2117 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2118 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2119 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2120 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2121 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2122 = !{!22, !204, !102, !103, !2123, !344, !121, !2153, !756, !154, !2178}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2126, line: 51, size: 64, elements: !2127)
!2126 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2127 = !{!2128, !2148}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2125, file: !2126, line: 52, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2126, line: 38, baseType: !2130)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!103, !2133, !267, !429}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2146, !2147}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2135, file: !141, line: 380, baseType: !144, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2135, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2135, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2135, file: !141, line: 386, baseType: !2141, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2143)
!2143 = !{!2144, !2145}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2142, file: !141, line: 359, baseType: !154, size: 8)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2142, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2135, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2135, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2125, file: !2126, line: 53, baseType: !2149, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2126, line: 47, baseType: !2150)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!103, !2133, !267, !429, !121}
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2155, file: !515, line: 447, baseType: !519, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2155, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2155, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2155, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2155, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2155, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2155, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2155, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2155, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2155, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2155, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2155, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2155, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2155, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2155, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2155, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2155, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2155, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2155, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2155, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2155, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2180, file: !515, line: 413, baseType: !1868, size: 256)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2180, file: !515, line: 414, baseType: !1870, size: 768, offset: 256)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2180, file: !515, line: 415, baseType: !1868, size: 256, offset: 1024)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2180, file: !515, line: 416, baseType: !1870, size: 768, offset: 1280)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2180, file: !515, line: 417, baseType: !1868, size: 256, offset: 2048)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2180, file: !515, line: 418, baseType: !1870, size: 768, offset: 2304)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2180, file: !515, line: 419, baseType: !1868, size: 256, offset: 3072)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2180, file: !515, line: 420, baseType: !1870, size: 768, offset: 3328)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2180, file: !515, line: 421, baseType: !1868, size: 256, offset: 4096)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2180, file: !515, line: 422, baseType: !1881, size: 1792, offset: 4352)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2180, file: !515, line: 423, baseType: !1885, size: 1920, offset: 6144)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2180, file: !515, line: 424, baseType: !1890, size: 20608, offset: 8064)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2180, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2195 = !{!2196, !2318, !2327, !2329, !2109, !2332, !2334, !2339}
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "_kernel", scope: !2111, file: !2115, line: 40, type: !2198, isLocal: false, isDefinition: true)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2199)
!2199 = !{!2200, !2313}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2198, file: !320, line: 159, baseType: !2201, size: 192)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 192, elements: !504)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2203)
!2203 = !{!2204, !2205, !2206, !2307, !2308, !2309, !2310}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2202, file: !320, line: 102, baseType: !121, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2202, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2202, file: !320, line: 108, baseType: !2207, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2209)
!2209 = !{!2210, !2268, !2280, !2281, !2282, !2283, !2289, !2302}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2208, file: !379, line: 247, baseType: !2211, size: 384)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2212)
!2212 = !{!2213, !2237, !2244, !2245, !2246, !2255, !2256, !2257}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !379, line: 60, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !379, line: 60, size: 64, elements: !2215)
!2215 = !{!2216, !2231}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2214, file: !379, line: 61, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2219)
!2219 = !{!2220, !2226}
!2220 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !325, line: 38, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !325, line: 38, size: 32, elements: !2222)
!2222 = !{!2223, !2225}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2221, file: !325, line: 39, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2221, file: !325, line: 40, baseType: !2224, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !325, line: 42, baseType: !2227, size: 32, offset: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !325, line: 42, size: 32, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2227, file: !325, line: 43, baseType: !2224, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2227, file: !325, line: 44, baseType: !2224, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2214, file: !379, line: 62, baseType: !2232, size: 64)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2232, file: !404, line: 50, baseType: !2235, size: 64)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2236, size: 64, elements: !363)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2211, file: !379, line: 68, baseType: !2238, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2241)
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2240, file: !320, line: 232, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2218)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2211, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2211, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !379, line: 90, baseType: !2247, size: 16, offset: 112)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !379, line: 90, size: 16, elements: !2248)
!2248 = !{!2249, !2254}
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2247, file: !379, line: 91, baseType: !2250, size: 16)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2247, file: !379, line: 91, size: 16, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2250, file: !379, line: 96, baseType: !425, size: 8)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2250, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2247, file: !379, line: 100, baseType: !429, size: 16)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2211, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2211, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2211, file: !379, line: 131, baseType: !2258, size: 192, offset: 192)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2259)
!2259 = !{!2260, !2261, !2267}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2258, file: !320, line: 245, baseType: !2217, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2258, file: !320, line: 246, baseType: !2262, size: 32, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2263)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{null, !2266}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2258, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2208, file: !379, line: 250, baseType: !2269, size: 288, offset: 384)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2270)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2269, file: !446, line: 26, baseType: !121, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2269, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2269, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2269, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2269, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2269, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2269, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2269, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2269, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2208, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2208, file: !379, line: 256, baseType: !2239, size: 64, offset: 704)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2208, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2208, file: !379, line: 300, baseType: !2284, size: 96, offset: 800)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2285)
!2285 = !{!2286, !2287, !2288}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2284, file: !379, line: 153, baseType: !22, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2284, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2284, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2208, file: !379, line: 325, baseType: !2290, size: 32, offset: 896)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2292)
!2292 = !{!2293, !2299, !2300}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2291, file: !296, line: 5074, baseType: !2294, size: 96)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2295)
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2294, file: !472, line: 57, baseType: !475, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2294, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2294, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2291, file: !296, line: 5075, baseType: !2239, size: 64, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2291, file: !296, line: 5076, baseType: !2301, offset: 160)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2208, file: !379, line: 343, baseType: !2303, size: 64, offset: 928)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2304)
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2303, file: !446, line: 63, baseType: !121, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2303, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2202, file: !320, line: 111, baseType: !2207, size: 32, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2202, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2202, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2202, file: !320, line: 153, baseType: !2311, offset: 168)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2312, line: 33, elements: !317)
!2312 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2198, file: !320, line: 170, baseType: !2314, size: 96, offset: 192)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2315)
!2315 = !{!2316, !2317}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2314, file: !320, line: 86, baseType: !2207, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2314, file: !320, line: 90, baseType: !2243, size: 64, offset: 32)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2111, file: !2115, line: 43, type: !2320, isLocal: false, isDefinition: true, align: 512)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2321, size: 8704, elements: !2325)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2322, line: 47, size: 8, elements: !2323)
!2322 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2323 = !{!2324}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2321, file: !2322, line: 48, baseType: !146, size: 8)
!2325 = !{!2326}
!2326 = !DISubrange(count: 1088)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2111, file: !2115, line: 44, type: !2208, isLocal: false, isDefinition: true)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2111, file: !2115, line: 48, type: !2331, isLocal: false, isDefinition: true)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2208, size: 1024, elements: !504)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2111, file: !2115, line: 217, type: !157, isLocal: false, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2111, file: !2115, line: 50, type: !2336, isLocal: true, isDefinition: true, align: 512)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2321, size: 3072, elements: !2337)
!2337 = !{!505, !2338}
!2338 = !DISubrange(count: 384)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "levels", scope: !2341, file: !2115, line: 232, type: !2361, isLocal: true, isDefinition: true)
!2341 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2115, file: !2115, line: 230, type: !2342, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !2344)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2114}
!2344 = !{!2345, !2346, !2356, !2360}
!2345 = !DILocalVariable(name: "level", arg: 1, scope: !2341, file: !2115, line: 230, type: !2114)
!2346 = !DILocalVariable(name: "entry", scope: !2341, file: !2115, line: 244, type: !2347)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2350)
!2350 = !{!2351, !2355}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2349, file: !132, line: 60, baseType: !2352, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!103, !2133}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2349, file: !132, line: 65, baseType: !2133, size: 32, offset: 32)
!2356 = !DILocalVariable(name: "dev", scope: !2357, file: !2115, line: 247, type: !2133)
!2357 = distinct !DILexicalBlock(scope: !2358, file: !2115, line: 246, column: 64)
!2358 = distinct !DILexicalBlock(scope: !2359, file: !2115, line: 246, column: 2)
!2359 = distinct !DILexicalBlock(scope: !2341, file: !2115, line: 246, column: 2)
!2360 = !DILocalVariable(name: "rc", scope: !2357, file: !2115, line: 248, type: !103)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2347, size: 192, elements: !2362)
!2362 = !{!2363}
!2363 = !DISubrange(count: 6)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2321, size: 16896, elements: !2365)
!2365 = !{!505, !2366}
!2366 = !DISubrange(count: 2112)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "states_str", scope: !2369, file: !2370, line: 276, type: !2491, isLocal: true, isDefinition: true)
!2369 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2370, file: !2370, line: 271, type: !2371, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !2482)
!2370 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!144, !2373, !344, !204}
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2374)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2376)
!2376 = !{!2377, !2435, !2447, !2448, !2449, !2450, !2456, !2469}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2375, file: !379, line: 247, baseType: !2378, size: 384)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2379)
!2379 = !{!2380, !2404, !2411, !2412, !2413, !2422, !2423, !2424}
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !379, line: 60, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2378, file: !379, line: 60, size: 64, elements: !2382)
!2382 = !{!2383, !2398}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2381, file: !379, line: 61, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2386)
!2386 = !{!2387, !2393}
!2387 = !DIDerivedType(tag: DW_TAG_member, scope: !2385, file: !325, line: 38, baseType: !2388, size: 32)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2385, file: !325, line: 38, size: 32, elements: !2389)
!2389 = !{!2390, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2388, file: !325, line: 39, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2388, file: !325, line: 40, baseType: !2391, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, scope: !2385, file: !325, line: 42, baseType: !2394, size: 32, offset: 32)
!2394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2385, file: !325, line: 42, size: 32, elements: !2395)
!2395 = !{!2396, !2397}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2394, file: !325, line: 43, baseType: !2391, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2394, file: !325, line: 44, baseType: !2391, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2381, file: !379, line: 62, baseType: !2399, size: 64)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2400)
!2400 = !{!2401}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2399, file: !404, line: 50, baseType: !2402, size: 64)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2403, size: 64, elements: !363)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2378, file: !379, line: 68, baseType: !2405, size: 32, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2408)
!2408 = !{!2409}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2407, file: !320, line: 232, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2385)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2378, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2378, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !379, line: 90, baseType: !2414, size: 16, offset: 112)
!2414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2378, file: !379, line: 90, size: 16, elements: !2415)
!2415 = !{!2416, !2421}
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2414, file: !379, line: 91, baseType: !2417, size: 16)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2414, file: !379, line: 91, size: 16, elements: !2418)
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2417, file: !379, line: 96, baseType: !425, size: 8)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2417, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2414, file: !379, line: 100, baseType: !429, size: 16)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2378, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2378, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2378, file: !379, line: 131, baseType: !2425, size: 192, offset: 192)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2426)
!2426 = !{!2427, !2428, !2434}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2425, file: !320, line: 245, baseType: !2384, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2425, file: !320, line: 246, baseType: !2429, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2430)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 32)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{null, !2433}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2425, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2375, file: !379, line: 250, baseType: !2436, size: 288, offset: 384)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2436, file: !446, line: 26, baseType: !121, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2436, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2436, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2436, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2436, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2436, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2436, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2436, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2436, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2375, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2375, file: !379, line: 256, baseType: !2406, size: 64, offset: 704)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2375, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2375, file: !379, line: 300, baseType: !2451, size: 96, offset: 800)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2452)
!2452 = !{!2453, !2454, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2451, file: !379, line: 153, baseType: !22, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2451, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2451, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2375, file: !379, line: 325, baseType: !2457, size: 32, offset: 896)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2459)
!2459 = !{!2460, !2466, !2467}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2458, file: !296, line: 5074, baseType: !2461, size: 96)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2462)
!2462 = !{!2463, !2464, !2465}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2461, file: !472, line: 57, baseType: !475, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2461, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2461, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2458, file: !296, line: 5075, baseType: !2406, size: 64, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2458, file: !296, line: 5076, baseType: !2468, offset: 160)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2375, file: !379, line: 343, baseType: !2470, size: 64, offset: 928)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2471)
!2471 = !{!2472, !2473}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2470, file: !446, line: 63, baseType: !121, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2470, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2474 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2475, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2476, globals: !2478, splitDebugInlining: false, nameTableKind: None)
!2475 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2476 = !{!102, !144, !200, !154, !103, !2477, !24, !204, !344, !22, !121, !1652}
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2478 = !{!2367, !2479}
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "states_sz", scope: !2369, file: !2370, line: 279, type: !2481, isLocal: true, isDefinition: true)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2047, size: 256, elements: !1660)
!2482 = !{!2483, !2484, !2485, !2486, !2487, !2488, !2489}
!2483 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2369, file: !2370, line: 271, type: !2373)
!2484 = !DILocalVariable(name: "buf", arg: 2, scope: !2369, file: !2370, line: 271, type: !344)
!2485 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2369, file: !2370, line: 271, type: !204)
!2486 = !DILocalVariable(name: "off", scope: !2369, file: !2370, line: 273, type: !204)
!2487 = !DILocalVariable(name: "bit", scope: !2369, file: !2370, line: 274, type: !154)
!2488 = !DILocalVariable(name: "thread_state", scope: !2369, file: !2370, line: 275, type: !154)
!2489 = !DILocalVariable(name: "index", scope: !2490, file: !2370, line: 293, type: !154)
!2490 = distinct !DILexicalBlock(scope: !2369, file: !2370, line: 293, column: 2)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1660)
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2494, file: !2602, line: 56, type: !2591, isLocal: false, isDefinition: true)
!2494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2496, globals: !2599, splitDebugInlining: false, nameTableKind: None)
!2495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2496 = !{!2497, !344, !102, !2597, !267, !200, !756, !103, !121, !1652, !2598}
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2499)
!2499 = !{!2500, !2558, !2570, !2571, !2572, !2573, !2579, !2592}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2498, file: !379, line: 247, baseType: !2501, size: 384)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2502)
!2502 = !{!2503, !2527, !2534, !2535, !2536, !2545, !2546, !2547}
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !379, line: 60, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !379, line: 60, size: 64, elements: !2505)
!2505 = !{!2506, !2521}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2504, file: !379, line: 61, baseType: !2507, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2509)
!2509 = !{!2510, !2516}
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !325, line: 38, baseType: !2511, size: 32)
!2511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !325, line: 38, size: 32, elements: !2512)
!2512 = !{!2513, !2515}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2511, file: !325, line: 39, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2511, file: !325, line: 40, baseType: !2514, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !325, line: 42, baseType: !2517, size: 32, offset: 32)
!2517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !325, line: 42, size: 32, elements: !2518)
!2518 = !{!2519, !2520}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2517, file: !325, line: 43, baseType: !2514, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2517, file: !325, line: 44, baseType: !2514, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2504, file: !379, line: 62, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2523)
!2523 = !{!2524}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2522, file: !404, line: 50, baseType: !2525, size: 64)
!2525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2526, size: 64, elements: !363)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2501, file: !379, line: 68, baseType: !2528, size: 32, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2530)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2531)
!2531 = !{!2532}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2530, file: !320, line: 232, baseType: !2533, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2508)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2501, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2501, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !379, line: 90, baseType: !2537, size: 16, offset: 112)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !379, line: 90, size: 16, elements: !2538)
!2538 = !{!2539, !2544}
!2539 = !DIDerivedType(tag: DW_TAG_member, scope: !2537, file: !379, line: 91, baseType: !2540, size: 16)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2537, file: !379, line: 91, size: 16, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2540, file: !379, line: 96, baseType: !425, size: 8)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2540, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2537, file: !379, line: 100, baseType: !429, size: 16)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2501, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2501, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2501, file: !379, line: 131, baseType: !2548, size: 192, offset: 192)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2549)
!2549 = !{!2550, !2551, !2557}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2548, file: !320, line: 245, baseType: !2507, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2548, file: !320, line: 246, baseType: !2552, size: 32, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2553)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{null, !2556}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2548, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2498, file: !379, line: 250, baseType: !2559, size: 288, offset: 384)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2559, file: !446, line: 26, baseType: !121, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2559, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2559, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2559, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2559, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2559, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2559, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2559, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2559, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2498, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2498, file: !379, line: 256, baseType: !2529, size: 64, offset: 704)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2498, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2498, file: !379, line: 300, baseType: !2574, size: 96, offset: 800)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2575)
!2575 = !{!2576, !2577, !2578}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2574, file: !379, line: 153, baseType: !22, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2574, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2574, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2498, file: !379, line: 325, baseType: !2580, size: 32, offset: 896)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2582)
!2582 = !{!2583, !2589, !2590}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2581, file: !296, line: 5074, baseType: !2584, size: 96)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2585)
!2585 = !{!2586, !2587, !2588}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2584, file: !472, line: 57, baseType: !475, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2584, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2584, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2581, file: !296, line: 5075, baseType: !2529, size: 64, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2581, file: !296, line: 5076, baseType: !2591, offset: 160)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2498, file: !379, line: 343, baseType: !2593, size: 64, offset: 928)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2593, file: !446, line: 63, baseType: !121, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2593, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2599 = !{!2492, !2600, !2603, !2605}
!2600 = !DIGlobalVariableExpression(var: !2601, expr: !DIExpression())
!2601 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2494, file: !2602, line: 404, type: !103, isLocal: true, isDefinition: true)
!2602 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2494, file: !2602, line: 405, type: !103, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "pending_current", scope: !2494, file: !2602, line: 425, type: !2497, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2609, file: !2639, line: 15, type: !1652, isLocal: true, isDefinition: true)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2611, globals: !2636, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2611 = !{!200, !102, !756, !121, !1652, !103, !2612, !344, !202}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2614)
!2614 = !{!2615, !2630, !2635}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2613, file: !320, line: 245, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2618)
!2618 = !{!2619, !2625}
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !325, line: 38, baseType: !2620, size: 32)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !325, line: 38, size: 32, elements: !2621)
!2621 = !{!2622, !2624}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2620, file: !325, line: 39, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2620, file: !325, line: 40, baseType: !2623, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !325, line: 42, baseType: !2626, size: 32, offset: 32)
!2626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !325, line: 42, size: 32, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2626, file: !325, line: 43, baseType: !2623, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2626, file: !325, line: 44, baseType: !2623, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2613, file: !320, line: 246, baseType: !2631, size: 32, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2632)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{null, !2612}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2613, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2636 = !{!2607, !2637, !2641, !2643}
!2637 = !DIGlobalVariableExpression(var: !2638, expr: !DIExpression())
!2638 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2609, file: !2639, line: 19, type: !2640, isLocal: true, isDefinition: true)
!2639 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2641 = !DIGlobalVariableExpression(var: !2642, expr: !DIExpression())
!2642 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2609, file: !2639, line: 25, type: !103, isLocal: true, isDefinition: true)
!2643 = !DIGlobalVariableExpression(var: !2644, expr: !DIExpression())
!2644 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2609, file: !2639, line: 17, type: !2645, isLocal: true, isDefinition: true)
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2617)
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2648, file: !2667, line: 55, type: !2668, isLocal: true, isDefinition: true, align: 32)
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2650, globals: !2666, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2650 = !{!102, !200, !103, !2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2654)
!2654 = !{!2655, !2661}
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2653, file: !325, line: 38, baseType: !2656, size: 32)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2653, file: !325, line: 38, size: 32, elements: !2657)
!2657 = !{!2658, !2660}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2656, file: !325, line: 39, baseType: !2659, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2656, file: !325, line: 40, baseType: !2659, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, scope: !2653, file: !325, line: 42, baseType: !2662, size: 32, offset: 32)
!2662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2653, file: !325, line: 42, size: 32, elements: !2663)
!2663 = !{!2664, !2665}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2662, file: !325, line: 43, baseType: !2659, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2662, file: !325, line: 44, baseType: !2659, size: 32)
!2666 = !{!2646}
!2667 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2670)
!2670 = !{!2671, !2678}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2669, file: !132, line: 60, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!103, !2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2677)
!2677 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2669, file: !132, line: 65, baseType: !2675, size: 32, offset: 32)
!2679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2680, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2680 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2687, retainedTypes: !2695, splitDebugInlining: false, nameTableKind: None)
!2686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2687 = !{!30, !2688}
!2688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2689, line: 54, baseType: !32, size: 32, elements: !2690)
!2689 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2690 = !{!2691, !2692, !2693, !2694}
!2691 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2692 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2693 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2694 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2695 = !{!102, !204, !267, !24, !2696, !22, !2702, !103, !890, !2717}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2689, line: 58, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2689, line: 58, size: 64, elements: !2699)
!2699 = !{!2700}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2698, file: !2689, line: 58, baseType: !2701, size: 64)
!2701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1660)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2689, line: 68, size: 128, elements: !2704)
!2704 = !{!2705, !2708, !2709, !2710}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2703, file: !2689, line: 69, baseType: !2706, size: 64)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2707, size: 64, elements: !363)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2689, line: 61, baseType: !121)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2703, file: !2689, line: 70, baseType: !2707, size: 32, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2703, file: !2689, line: 71, baseType: !121, size: 32, offset: 96)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2703, file: !2689, line: 77, baseType: !2711, offset: 128)
!2711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2712, elements: !2715)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2689, line: 64, size: 32, elements: !2713)
!2713 = !{!2714}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2712, file: !2689, line: 65, baseType: !2707, size: 32)
!2715 = !{!2716}
!2716 = !DISubrange(count: 0)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2720, retainedTypes: !2740, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2720 = !{!2721, !2729}
!2721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2722, line: 69, baseType: !32, size: 32, elements: !2723)
!2722 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2723 = !{!2724, !2725, !2726, !2727, !2728}
!2724 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2725 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2726 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2727 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2728 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2722, line: 56, baseType: !32, size: 32, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739}
!2731 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2732 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2733 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2734 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2735 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2736 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2737 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2738 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2739 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2740 = !{!103, !2721, !2729, !2741, !426, !164, !2743, !2744, !155, !430, !144, !204, !102, !22, !32, !2746, !2747, !2748, !354, !2749, !203, !2750, !2742, !2751, !2752, !2753, !2754}
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2722, line: 31, baseType: !2742)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2722, line: 32, baseType: !2745)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1653)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2756 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2759, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2758 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2759 = !{!2760, !30}
!2760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2761, line: 27, baseType: !32, size: 32, elements: !2762)
!2761 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2762 = !{!2763, !2764, !2765, !2766, !2767}
!2763 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2764 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2765 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2766 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2767 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2770, retainedTypes: !2771, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2770 = !{!584, !2760, !30}
!2771 = !{!782, !2772, !102, !103, !756, !121, !154, !2789}
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2774)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2775)
!2775 = !{!2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2774, file: !515, line: 413, baseType: !1868, size: 256)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2774, file: !515, line: 414, baseType: !1870, size: 768, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2774, file: !515, line: 415, baseType: !1868, size: 256, offset: 1024)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2774, file: !515, line: 416, baseType: !1870, size: 768, offset: 1280)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2774, file: !515, line: 417, baseType: !1868, size: 256, offset: 2048)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2774, file: !515, line: 418, baseType: !1870, size: 768, offset: 2304)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2774, file: !515, line: 419, baseType: !1868, size: 256, offset: 3072)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2774, file: !515, line: 420, baseType: !1870, size: 768, offset: 3328)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2774, file: !515, line: 421, baseType: !1868, size: 256, offset: 4096)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2774, file: !515, line: 422, baseType: !1881, size: 1792, offset: 4352)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2774, file: !515, line: 423, baseType: !1885, size: 1920, offset: 6144)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2774, file: !515, line: 424, baseType: !1890, size: 20608, offset: 8064)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2774, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2791)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2792)
!2792 = !{!2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2791, file: !515, line: 447, baseType: !519, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2791, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2791, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2791, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2791, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2791, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2791, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2791, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2791, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2791, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2791, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2791, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2791, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2791, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2791, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2791, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2791, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2791, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2791, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2791, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2791, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2818, splitDebugInlining: false, nameTableKind: None)
!2817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2818 = !{!102, !103, !22, !2819}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2821)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2821, file: !515, line: 447, baseType: !519, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2821, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2821, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2821, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2821, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2821, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2821, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2821, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2821, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2821, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2821, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2821, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2821, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2821, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2821, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2821, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2821, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2821, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2821, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2821, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2821, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2846, splitDebugInlining: false, nameTableKind: None)
!2845 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2846 = !{!2847, !102, !103}
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2849)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2849, file: !515, line: 447, baseType: !519, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2849, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2849, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2849, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2849, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2849, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2849, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2849, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2849, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2849, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2849, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2849, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2849, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2849, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2849, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2849, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2849, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2849, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2849, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2849, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2849, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2874, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2874 = !{!2875, !121, !102, !103}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2877, line: 98, size: 256, elements: !2878)
!2877 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2878 = !{!2879, !2884, !2889, !2894, !2899, !2904, !2909, !2914}
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 99, baseType: !2880, size: 32)
!2880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 99, size: 32, elements: !2881)
!2881 = !{!2882, !2883}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2880, file: !2877, line: 99, baseType: !121, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2880, file: !2877, line: 99, baseType: !121, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 100, baseType: !2885, size: 32, offset: 32)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 100, size: 32, elements: !2886)
!2886 = !{!2887, !2888}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2885, file: !2877, line: 100, baseType: !121, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2885, file: !2877, line: 100, baseType: !121, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 101, baseType: !2890, size: 32, offset: 64)
!2890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 101, size: 32, elements: !2891)
!2891 = !{!2892, !2893}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2890, file: !2877, line: 101, baseType: !121, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2890, file: !2877, line: 101, baseType: !121, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 102, baseType: !2895, size: 32, offset: 96)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 102, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2895, file: !2877, line: 102, baseType: !121, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2895, file: !2877, line: 102, baseType: !121, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 103, baseType: !2900, size: 32, offset: 128)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 103, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2900, file: !2877, line: 103, baseType: !121, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2900, file: !2877, line: 103, baseType: !121, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 104, baseType: !2905, size: 32, offset: 160)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 104, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2905, file: !2877, line: 104, baseType: !121, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2905, file: !2877, line: 104, baseType: !121, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !2877, line: 105, baseType: !2910, size: 32, offset: 192)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !2877, line: 105, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2910, file: !2877, line: 105, baseType: !121, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2910, file: !2877, line: 105, baseType: !121, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2876, file: !2877, line: 106, baseType: !121, size: 32, offset: 224)
!2915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2759, retainedTypes: !2917, splitDebugInlining: false, nameTableKind: None)
!2916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2917 = !{!2918, !102, !103, !2943, !2717, !121}
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2920)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2921)
!2921 = !{!2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2920, file: !515, line: 447, baseType: !519, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2920, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2920, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2920, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2920, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2920, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2920, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2920, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2920, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2920, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2920, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2920, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2920, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2920, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2920, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2920, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2920, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2920, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2920, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2920, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2920, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2877, line: 141, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2877, line: 97, size: 256, elements: !2946)
!2946 = !{!2947}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2945, file: !2877, line: 107, baseType: !2948, size: 256)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2877, line: 98, size: 256, elements: !2949)
!2949 = !{!2950, !2955, !2960, !2965, !2970, !2975, !2980, !2985}
!2950 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 99, baseType: !2951, size: 32)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 99, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2951, file: !2877, line: 99, baseType: !121, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2951, file: !2877, line: 99, baseType: !121, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 100, baseType: !2956, size: 32, offset: 32)
!2956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 100, size: 32, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2956, file: !2877, line: 100, baseType: !121, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2956, file: !2877, line: 100, baseType: !121, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 101, baseType: !2961, size: 32, offset: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 101, size: 32, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2961, file: !2877, line: 101, baseType: !121, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2961, file: !2877, line: 101, baseType: !121, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 102, baseType: !2966, size: 32, offset: 96)
!2966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 102, size: 32, elements: !2967)
!2967 = !{!2968, !2969}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2966, file: !2877, line: 102, baseType: !121, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2966, file: !2877, line: 102, baseType: !121, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 103, baseType: !2971, size: 32, offset: 128)
!2971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 103, size: 32, elements: !2972)
!2972 = !{!2973, !2974}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2971, file: !2877, line: 103, baseType: !121, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2971, file: !2877, line: 103, baseType: !121, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 104, baseType: !2976, size: 32, offset: 160)
!2976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 104, size: 32, elements: !2977)
!2977 = !{!2978, !2979}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2976, file: !2877, line: 104, baseType: !121, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2976, file: !2877, line: 104, baseType: !121, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, scope: !2948, file: !2877, line: 105, baseType: !2981, size: 32, offset: 192)
!2981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2948, file: !2877, line: 105, size: 32, elements: !2982)
!2982 = !{!2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2981, file: !2877, line: 105, baseType: !121, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2981, file: !2877, line: 105, baseType: !121, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2948, file: !2877, line: 106, baseType: !121, size: 32, offset: 224)
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1853, retainedTypes: !2988, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!2988 = !{!782, !756, !154, !121, !2989, !3006}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2991, file: !515, line: 413, baseType: !1868, size: 256)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2991, file: !515, line: 414, baseType: !1870, size: 768, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2991, file: !515, line: 415, baseType: !1868, size: 256, offset: 1024)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2991, file: !515, line: 416, baseType: !1870, size: 768, offset: 1280)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2991, file: !515, line: 417, baseType: !1868, size: 256, offset: 2048)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2991, file: !515, line: 418, baseType: !1870, size: 768, offset: 2304)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2991, file: !515, line: 419, baseType: !1868, size: 256, offset: 3072)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2991, file: !515, line: 420, baseType: !1870, size: 768, offset: 3328)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2991, file: !515, line: 421, baseType: !1868, size: 256, offset: 4096)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2991, file: !515, line: 422, baseType: !1881, size: 1792, offset: 4352)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2991, file: !515, line: 423, baseType: !1885, size: 1920, offset: 6144)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2991, file: !515, line: 424, baseType: !1890, size: 20608, offset: 8064)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2991, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !3008)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !3009)
!3009 = !{!3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3008, file: !515, line: 447, baseType: !519, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3008, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3008, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3008, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3008, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3008, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3008, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3008, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3008, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3008, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3008, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3008, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3008, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3008, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3008, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3008, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3008, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3008, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3008, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3008, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3008, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!3031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3033, splitDebugInlining: false, nameTableKind: None)
!3032 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3033 = !{!3034, !102, !103}
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !3036)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !3037)
!3037 = !{!3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3036, file: !515, line: 447, baseType: !519, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3036, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3036, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3036, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3036, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3036, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3036, file: !515, line: 453, baseType: !1905, size: 96, offset: 192)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3036, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3036, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3036, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3036, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3036, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3036, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3036, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3036, file: !515, line: 461, baseType: !1916, size: 64, offset: 512)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3036, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3036, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3036, file: !515, line: 464, baseType: !1920, size: 128, offset: 640)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3036, file: !515, line: 465, baseType: !1922, size: 160, offset: 768)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3036, file: !515, line: 466, baseType: !1924, size: 160, offset: 928)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3036, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!3059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3061, splitDebugInlining: false, nameTableKind: None)
!3060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3061 = !{!146, !344, !204, !230, !3062, !155, !102}
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!3064 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3065, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3066, splitDebugInlining: false, nameTableKind: None)
!3065 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3066 = !{!3067}
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 677, baseType: !3069)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 643, size: 1152, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3069, file: !116, line: 645, baseType: !120, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3069, file: !116, line: 646, baseType: !120, size: 32, offset: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3069, file: !116, line: 647, baseType: !120, size: 32, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3069, file: !116, line: 648, baseType: !120, size: 32, offset: 96)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3069, file: !116, line: 649, baseType: !120, size: 32, offset: 128)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3069, file: !116, line: 650, baseType: !120, size: 32, offset: 160)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3069, file: !116, line: 651, baseType: !120, size: 32, offset: 192)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3069, file: !116, line: 652, baseType: !121, size: 32, offset: 224)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3069, file: !116, line: 653, baseType: !120, size: 32, offset: 256)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3069, file: !116, line: 654, baseType: !120, size: 32, offset: 288)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3069, file: !116, line: 655, baseType: !862, size: 64, offset: 320)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3069, file: !116, line: 656, baseType: !120, size: 32, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3069, file: !116, line: 657, baseType: !120, size: 32, offset: 416)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3069, file: !116, line: 658, baseType: !120, size: 32, offset: 448)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3069, file: !116, line: 659, baseType: !121, size: 32, offset: 480)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3069, file: !116, line: 660, baseType: !120, size: 32, offset: 512)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3069, file: !116, line: 661, baseType: !120, size: 32, offset: 544)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3069, file: !116, line: 662, baseType: !862, size: 64, offset: 576)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3069, file: !116, line: 663, baseType: !120, size: 32, offset: 640)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3069, file: !116, line: 664, baseType: !120, size: 32, offset: 672)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3069, file: !116, line: 665, baseType: !120, size: 32, offset: 704)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3069, file: !116, line: 666, baseType: !121, size: 32, offset: 736)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3069, file: !116, line: 667, baseType: !120, size: 32, offset: 768)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3069, file: !116, line: 668, baseType: !120, size: 32, offset: 800)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3069, file: !116, line: 669, baseType: !862, size: 64, offset: 832)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3069, file: !116, line: 670, baseType: !120, size: 32, offset: 896)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3069, file: !116, line: 671, baseType: !120, size: 32, offset: 928)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3069, file: !116, line: 672, baseType: !862, size: 64, offset: 960)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3069, file: !116, line: 673, baseType: !120, size: 32, offset: 1024)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3069, file: !116, line: 674, baseType: !120, size: 32, offset: 1056)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3069, file: !116, line: 675, baseType: !120, size: 32, offset: 1088)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3069, file: !116, line: 676, baseType: !120, size: 32, offset: 1120)
!3103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3104, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3104 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3107, retainedTypes: !3123, splitDebugInlining: false, nameTableKind: None)
!3106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3107 = !{!3108, !3115, !3119}
!3108 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3109, line: 38, baseType: !32, size: 32, elements: !3110)
!3109 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3110 = !{!3111, !3112, !3113, !3114}
!3111 = !DIEnumerator(name: "HAL_OK", value: 0)
!3112 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3113 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3114 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !835, line: 184, baseType: !32, size: 32, elements: !3116)
!3116 = !{!3117, !3118}
!3117 = !DIEnumerator(name: "RESET", value: 0)
!3118 = !DIEnumerator(name: "SET", value: 1)
!3119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !835, line: 190, baseType: !32, size: 32, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIEnumerator(name: "DISABLE", value: 0)
!3122 = !DIEnumerator(name: "ENABLE", value: 1)
!3123 = !{!102, !3124, !154, !121, !1654, !3160, !3166, !3177, !429, !3178, !1652}
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 677, baseType: !3126)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 643, size: 1152, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3126, file: !116, line: 645, baseType: !120, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3126, file: !116, line: 646, baseType: !120, size: 32, offset: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3126, file: !116, line: 647, baseType: !120, size: 32, offset: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3126, file: !116, line: 648, baseType: !120, size: 32, offset: 96)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3126, file: !116, line: 649, baseType: !120, size: 32, offset: 128)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3126, file: !116, line: 650, baseType: !120, size: 32, offset: 160)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3126, file: !116, line: 651, baseType: !120, size: 32, offset: 192)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3126, file: !116, line: 652, baseType: !121, size: 32, offset: 224)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3126, file: !116, line: 653, baseType: !120, size: 32, offset: 256)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3126, file: !116, line: 654, baseType: !120, size: 32, offset: 288)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3126, file: !116, line: 655, baseType: !862, size: 64, offset: 320)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3126, file: !116, line: 656, baseType: !120, size: 32, offset: 384)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3126, file: !116, line: 657, baseType: !120, size: 32, offset: 416)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3126, file: !116, line: 658, baseType: !120, size: 32, offset: 448)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3126, file: !116, line: 659, baseType: !121, size: 32, offset: 480)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3126, file: !116, line: 660, baseType: !120, size: 32, offset: 512)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3126, file: !116, line: 661, baseType: !120, size: 32, offset: 544)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3126, file: !116, line: 662, baseType: !862, size: 64, offset: 576)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3126, file: !116, line: 663, baseType: !120, size: 32, offset: 640)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3126, file: !116, line: 664, baseType: !120, size: 32, offset: 672)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3126, file: !116, line: 665, baseType: !120, size: 32, offset: 704)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3126, file: !116, line: 666, baseType: !121, size: 32, offset: 736)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3126, file: !116, line: 667, baseType: !120, size: 32, offset: 768)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3126, file: !116, line: 668, baseType: !120, size: 32, offset: 800)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3126, file: !116, line: 669, baseType: !862, size: 64, offset: 832)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3126, file: !116, line: 670, baseType: !120, size: 32, offset: 896)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3126, file: !116, line: 671, baseType: !120, size: 32, offset: 928)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3126, file: !116, line: 672, baseType: !862, size: 64, offset: 960)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3126, file: !116, line: 673, baseType: !120, size: 32, offset: 1024)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3126, file: !116, line: 674, baseType: !120, size: 32, offset: 1056)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3126, file: !116, line: 675, baseType: !120, size: 32, offset: 1088)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3126, file: !116, line: 676, baseType: !120, size: 32, offset: 1120)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 637, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 633, size: 64, elements: !3163)
!3163 = !{!3164, !3165}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3162, file: !116, line: 635, baseType: !120, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3162, file: !116, line: 636, baseType: !120, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 501, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 492, size: 224, elements: !3169)
!3169 = !{!3170, !3171, !3172, !3173, !3174, !3175, !3176}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3168, file: !116, line: 494, baseType: !120, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3168, file: !116, line: 495, baseType: !120, size: 32, offset: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3168, file: !116, line: 496, baseType: !120, size: 32, offset: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3168, file: !116, line: 497, baseType: !120, size: 32, offset: 96)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3168, file: !116, line: 498, baseType: !120, size: 32, offset: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3168, file: !116, line: 499, baseType: !120, size: 32, offset: 160)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3168, file: !116, line: 500, baseType: !120, size: 32, offset: 192)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 583, baseType: !3180)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 572, size: 320, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3180, file: !116, line: 574, baseType: !120, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3180, file: !116, line: 575, baseType: !120, size: 32, offset: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3180, file: !116, line: 576, baseType: !120, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3180, file: !116, line: 577, baseType: !120, size: 32, offset: 96)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3180, file: !116, line: 578, baseType: !120, size: 32, offset: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3180, file: !116, line: 579, baseType: !120, size: 32, offset: 160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3180, file: !116, line: 580, baseType: !120, size: 32, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3180, file: !116, line: 581, baseType: !120, size: 32, offset: 224)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3180, file: !116, line: 582, baseType: !1263, size: 64, offset: 256)
!3191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3193, retainedTypes: !3194, splitDebugInlining: false, nameTableKind: None)
!3192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3193 = !{!834}
!3194 = !{!3195, !121, !3203, !3209, !3220}
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3197)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3198)
!3198 = !{!3199, !3200, !3201, !3202}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3197, file: !515, line: 766, baseType: !120, size: 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3197, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3197, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3197, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 637, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 633, size: 64, elements: !3206)
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3205, file: !116, line: 635, baseType: !120, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3205, file: !116, line: 636, baseType: !120, size: 32, offset: 32)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 501, baseType: !3211)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 492, size: 224, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3216, !3217, !3218, !3219}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3211, file: !116, line: 494, baseType: !120, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3211, file: !116, line: 495, baseType: !120, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3211, file: !116, line: 496, baseType: !120, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3211, file: !116, line: 497, baseType: !120, size: 32, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3211, file: !116, line: 498, baseType: !120, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3211, file: !116, line: 499, baseType: !120, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3211, file: !116, line: 500, baseType: !120, size: 32, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 677, baseType: !3222)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 643, size: 1152, elements: !3223)
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3222, file: !116, line: 645, baseType: !120, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3222, file: !116, line: 646, baseType: !120, size: 32, offset: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3222, file: !116, line: 647, baseType: !120, size: 32, offset: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3222, file: !116, line: 648, baseType: !120, size: 32, offset: 96)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3222, file: !116, line: 649, baseType: !120, size: 32, offset: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3222, file: !116, line: 650, baseType: !120, size: 32, offset: 160)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3222, file: !116, line: 651, baseType: !120, size: 32, offset: 192)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3222, file: !116, line: 652, baseType: !121, size: 32, offset: 224)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3222, file: !116, line: 653, baseType: !120, size: 32, offset: 256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3222, file: !116, line: 654, baseType: !120, size: 32, offset: 288)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3222, file: !116, line: 655, baseType: !862, size: 64, offset: 320)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3222, file: !116, line: 656, baseType: !120, size: 32, offset: 384)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3222, file: !116, line: 657, baseType: !120, size: 32, offset: 416)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3222, file: !116, line: 658, baseType: !120, size: 32, offset: 448)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3222, file: !116, line: 659, baseType: !121, size: 32, offset: 480)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3222, file: !116, line: 660, baseType: !120, size: 32, offset: 512)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3222, file: !116, line: 661, baseType: !120, size: 32, offset: 544)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3222, file: !116, line: 662, baseType: !862, size: 64, offset: 576)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3222, file: !116, line: 663, baseType: !120, size: 32, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3222, file: !116, line: 664, baseType: !120, size: 32, offset: 672)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3222, file: !116, line: 665, baseType: !120, size: 32, offset: 704)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3222, file: !116, line: 666, baseType: !121, size: 32, offset: 736)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3222, file: !116, line: 667, baseType: !120, size: 32, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3222, file: !116, line: 668, baseType: !120, size: 32, offset: 800)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3222, file: !116, line: 669, baseType: !862, size: 64, offset: 832)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3222, file: !116, line: 670, baseType: !120, size: 32, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3222, file: !116, line: 671, baseType: !120, size: 32, offset: 928)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3222, file: !116, line: 672, baseType: !862, size: 64, offset: 960)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3222, file: !116, line: 673, baseType: !120, size: 32, offset: 1024)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3222, file: !116, line: 674, baseType: !120, size: 32, offset: 1056)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3222, file: !116, line: 675, baseType: !120, size: 32, offset: 1088)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3222, file: !116, line: 676, baseType: !120, size: 32, offset: 1120)
!3256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3258, splitDebugInlining: false, nameTableKind: None)
!3257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3258 = !{!102, !204}
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3261, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3261 = !{!3262, !3269, !30}
!3262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3263, line: 14, baseType: !32, size: 32, elements: !3264)
!3263 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3264 = !{!3265, !3266, !3267, !3268}
!3265 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3266 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3267 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3268 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3263, line: 42, baseType: !32, size: 32, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274, !3275, !3276}
!3271 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3272 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3273 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3274 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3275 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3276 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3277 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3278, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3278 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3280, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3281, retainedTypes: !3292, splitDebugInlining: false, nameTableKind: None)
!3280 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3281 = !{!3282, !30}
!3282 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3283)
!3283 = !{!3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291}
!3284 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3285 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3286 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3287 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3288 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3289 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3290 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3291 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3292 = !{!102, !154, !3293, !344, !3303, !157, !3304, !103, !3305, !312}
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 32)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3295, line: 25, size: 64, elements: !3296)
!3295 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3296 = !{!3297, !3302}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3294, file: !3295, line: 26, baseType: !3298, size: 32)
!3298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3299)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3300)
!3300 = !{!3301}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3299, file: !303, line: 36, baseType: !312, size: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3294, file: !3295, line: 27, baseType: !102, size: 32, offset: 32)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3307)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3308)
!3308 = !{!3309, !3315}
!3309 = !DIDerivedType(tag: DW_TAG_member, scope: !3307, file: !325, line: 38, baseType: !3310, size: 32)
!3310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3307, file: !325, line: 38, size: 32, elements: !3311)
!3311 = !{!3312, !3314}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3310, file: !325, line: 39, baseType: !3313, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3310, file: !325, line: 40, baseType: !3313, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, scope: !3307, file: !325, line: 42, baseType: !3316, size: 32, offset: 32)
!3316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3307, file: !325, line: 42, size: 32, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3316, file: !325, line: 43, baseType: !3313, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3316, file: !325, line: 44, baseType: !3313, size: 32)
!3320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3322, splitDebugInlining: false, nameTableKind: None)
!3321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3322 = !{!22, !102, !103}
!3323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3326, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3326 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3327 = !{!"Ubuntu clang version 14.0.6"}
!3328 = !{i32 7, !"Dwarf Version", i32 4}
!3329 = !{i32 2, !"Debug Info Version", i32 3}
!3330 = !{i32 1, !"wchar_size", i32 4}
!3331 = !{i32 1, !"min_enum_size", i32 4}
!3332 = !{i32 1, !"branch-target-enforcement", i32 0}
!3333 = !{i32 1, !"sign-return-address", i32 0}
!3334 = !{i32 1, !"sign-return-address-all", i32 0}
!3335 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3336 = !{i32 7, !"frame-pointer", i32 2}
!3337 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3338, file: !3338, line: 26, type: !3339, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !317)
!3338 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3339 = !DISubroutineType(types: !3340)
!3340 = !{null}
!3341 = !DILocation(line: 28, column: 1, scope: !3337)
!3342 = !{i64 2155743297, i64 2155743317, i64 2155743380}
!3343 = !DILocation(line: 29, column: 1, scope: !3337)
!3344 = !{i64 2155743712, i64 2155743732, i64 2155743795}
!3345 = !DILocation(line: 30, column: 1, scope: !3337)
!3346 = !{i64 2155744131, i64 2155744151, i64 2155744214}
!3347 = !DILocation(line: 31, column: 1, scope: !3337)
!3348 = !{i64 2155748611, i64 2155748631, i64 2155748694}
!3349 = !DILocation(line: 33, column: 1, scope: !3337)
!3350 = !{i64 2155748903, i64 2155748923, i64 2155748986}
!3351 = !DILocation(line: 35, column: 1, scope: !3337)
!3352 = !{i64 2155749228, i64 2155749248, i64 2155749311}
!3353 = !DILocation(line: 50, column: 1, scope: !3337)
!3354 = !{i64 2155749655, i64 2155749675, i64 2155749738}
!3355 = !DILocation(line: 54, column: 1, scope: !3337)
!3356 = !{i64 2155750094, i64 2155750114, i64 2155750177}
!3357 = !DILocation(line: 61, column: 1, scope: !3337)
!3358 = !{i64 2155750411, i64 2155750431, i64 2155750494}
!3359 = !DILocation(line: 63, column: 1, scope: !3337)
!3360 = !{i64 2155750791, i64 2155750811, i64 2155750874}
!3361 = !DILocation(line: 64, column: 1, scope: !3337)
!3362 = !{i64 2155751313, i64 2155751333, i64 2155751396}
!3363 = !DILocation(line: 65, column: 1, scope: !3337)
!3364 = !{i64 2155751811, i64 2155751831, i64 2155751894}
!3365 = !DILocation(line: 66, column: 1, scope: !3337)
!3366 = !{i64 2155752293, i64 2155752313, i64 2155752376}
!3367 = !DILocation(line: 67, column: 1, scope: !3337)
!3368 = !{i64 2155752800, i64 2155752820, i64 2155752883}
!3369 = !DILocation(line: 68, column: 1, scope: !3337)
!3370 = !{i64 2155753288, i64 2155753308, i64 2155753371}
!3371 = !DILocation(line: 70, column: 1, scope: !3337)
!3372 = !{i64 2155753756, i64 2155753776, i64 2155753839}
!3373 = !DILocation(line: 71, column: 1, scope: !3337)
!3374 = !{i64 2155754198, i64 2155754218, i64 2155754281}
!3375 = !DILocation(line: 72, column: 1, scope: !3337)
!3376 = !{i64 2155754656, i64 2155754676, i64 2155754739}
!3377 = !DILocation(line: 79, column: 1, scope: !3337)
!3378 = !{i64 2155755110, i64 2155755130, i64 2155755193}
!3379 = !DILocation(line: 80, column: 1, scope: !3337)
!3380 = !{i64 2155755621, i64 2155755641, i64 2155755704}
!3381 = !DILocation(line: 82, column: 1, scope: !3337)
!3382 = !{i64 2155756112, i64 2155756132, i64 2155756195}
!3383 = !DILocation(line: 97, column: 1, scope: !3337)
!3384 = !{i64 2155756449, i64 2155756469, i64 2155756532}
!3385 = !DILocation(line: 99, column: 1, scope: !3337)
!3386 = !{i64 2155756667, i64 2155756687, i64 2155756750}
!3387 = !DILocation(line: 102, column: 1, scope: !3337)
!3388 = !{i64 2155756924, i64 2155756944, i64 2155757007}
!3389 = !DILocation(line: 105, column: 1, scope: !3337)
!3390 = !{i64 2155757164, i64 2155757184, i64 2155757247}
!3391 = !DILocation(line: 115, column: 1, scope: !3337)
!3392 = !{i64 2155757503, i64 2155757523, i64 2155757586}
!3393 = !DILocation(line: 118, column: 1, scope: !3337)
!3394 = !{i64 2155761908, i64 2155761928, i64 2155761991}
!3395 = !DILocation(line: 32, column: 1, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3337, file: !3397, discriminator: 0)
!3397 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3398 = !{i64 2155762264, i64 2155762284, i64 2155762347}
!3399 = !DILocation(line: 33, column: 1, scope: !3396)
!3400 = !{i64 2155762776, i64 2155762796, i64 2155762859}
!3401 = !DILocation(line: 53, column: 1, scope: !3396)
!3402 = !{i64 2155763284, i64 2155763304, i64 2155763367}
!3403 = !DILocation(line: 54, column: 1, scope: !3396)
!3404 = !{i64 2155763702, i64 2155763722, i64 2155763785}
!3405 = !DILocation(line: 55, column: 1, scope: !3396)
!3406 = !{i64 2155764120, i64 2155764140, i64 2155764203}
!3407 = !DILocation(line: 56, column: 1, scope: !3396)
!3408 = !{i64 2155764538, i64 2155764558, i64 2155764621}
!3409 = !DILocation(line: 57, column: 1, scope: !3396)
!3410 = !{i64 2155764956, i64 2155764976, i64 2155765039}
!3411 = !DILocation(line: 58, column: 1, scope: !3396)
!3412 = !{i64 2155765374, i64 2155765394, i64 2155765457}
!3413 = !DILocation(line: 59, column: 1, scope: !3396)
!3414 = !{i64 2155765792, i64 2155765812, i64 2155765875}
!3415 = !DILocation(line: 60, column: 1, scope: !3396)
!3416 = !{i64 2155766216, i64 2155766236, i64 2155766299}
!3417 = !DILocation(line: 61, column: 1, scope: !3396)
!3418 = !{i64 2155766533, i64 2155766553, i64 2155766616}
!3419 = !DILocation(line: 70, column: 1, scope: !3396)
!3420 = !{i64 2155766762, i64 2155766782, i64 2155766845}
!3421 = !DILocation(line: 72, column: 1, scope: !3396)
!3422 = !{i64 2155767094, i64 2155767114, i64 2155767177}
!3423 = !DILocation(line: 73, column: 1, scope: !3396)
!3424 = !{i64 2155767544, i64 2155767564, i64 2155767627}
!3425 = !DILocation(line: 74, column: 1, scope: !3396)
!3426 = !{i64 2155767994, i64 2155768014, i64 2155768077}
!3427 = !DILocation(line: 75, column: 1, scope: !3396)
!3428 = !{i64 2155768444, i64 2155768464, i64 2155768527}
!3429 = !DILocation(line: 76, column: 1, scope: !3396)
!3430 = !{i64 2155768894, i64 2155768914, i64 2155768977}
!3431 = !DILocation(line: 77, column: 1, scope: !3396)
!3432 = !{i64 2155769344, i64 2155769364, i64 2155769427}
!3433 = !DILocation(line: 78, column: 1, scope: !3396)
!3434 = !{i64 2155769794, i64 2155769814, i64 2155769877}
!3435 = !DILocation(line: 79, column: 1, scope: !3396)
!3436 = !{i64 2155770244, i64 2155770264, i64 2155770327}
!3437 = !DILocation(line: 80, column: 1, scope: !3396)
!3438 = !{i64 2155770697, i64 2155770717, i64 2155770780}
!3439 = !DILocation(line: 84, column: 1, scope: !3396)
!3440 = !{i64 2155771029, i64 2155771049, i64 2155771112}
!3441 = !DILocation(line: 91, column: 1, scope: !3396)
!3442 = !{i64 2155775487, i64 2155775507, i64 2155775570}
!3443 = !DILocation(line: 93, column: 1, scope: !3396)
!3444 = !{i64 2155775854, i64 2155775874, i64 2155775937}
!3445 = !DILocation(line: 106, column: 1, scope: !3396)
!3446 = !{i64 2155776124, i64 2155776144, i64 2155776207}
!3447 = !DILocation(line: 11, column: 1, scope: !3448)
!3448 = !DILexicalBlockFile(scope: !3337, file: !3449, discriminator: 0)
!3449 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3450 = distinct !DISubprogram(name: "main", scope: !3451, file: !3451, line: 12, type: !3339, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !3452)
!3451 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3452 = !{!3453}
!3453 = !DILocalVariable(name: "s", scope: !3454, file: !3451, line: 19, type: !344)
!3454 = distinct !DILexicalBlock(scope: !3450, file: !3451, line: 18, column: 12)
!3455 = !DILocation(line: 14, column: 2, scope: !3450)
!3456 = !DILocation(line: 16, column: 2, scope: !3450)
!3457 = !DILocation(line: 18, column: 2, scope: !3450)
!3458 = !DILocation(line: 19, column: 13, scope: !3454)
!3459 = !DILocation(line: 0, scope: !3454)
!3460 = !DILocation(line: 21, column: 3, scope: !3454)
!3461 = !DILocation(line: 22, column: 37, scope: !3454)
!3462 = !DILocation(line: 22, column: 47, scope: !3454)
!3463 = !DILocation(line: 22, column: 35, scope: !3454)
!3464 = !DILocation(line: 22, column: 3, scope: !3454)
!3465 = distinct !{!3465, !3457, !3466}
!3466 = !DILocation(line: 23, column: 2, scope: !3450)
!3467 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3468)
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "c", arg: 1, scope: !3467, file: !105, line: 45, type: !103)
!3470 = !DILocation(line: 0, scope: !3467)
!3471 = !DILocation(line: 50, column: 2, scope: !3467)
!3472 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3473, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3475)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{null, !106}
!3475 = !{!3476}
!3476 = !DILocalVariable(name: "fn", arg: 1, scope: !3472, file: !105, line: 63, type: !106)
!3477 = !DILocation(line: 0, scope: !3472)
!3478 = !DILocation(line: 65, column: 12, scope: !3472)
!3479 = !DILocation(line: 66, column: 1, scope: !3472)
!3480 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3481, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!102}
!3483 = !DILocation(line: 78, column: 9, scope: !3480)
!3484 = !DILocation(line: 78, column: 2, scope: !3480)
!3485 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3486, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3495)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{null, !144, !3488}
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3489, line: 99, baseType: !3490)
!3489 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3489, line: 40, baseType: !3491)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3493)
!3493 = !{!3494}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3492, file: !105, line: 79, baseType: !102, size: 32)
!3495 = !{!3496, !3497, !3498}
!3496 = !DILocalVariable(name: "fmt", arg: 1, scope: !3485, file: !105, line: 113, type: !144)
!3497 = !DILocalVariable(name: "ap", arg: 2, scope: !3485, file: !105, line: 113, type: !3488)
!3498 = !DILocalVariable(name: "ctx", scope: !3499, file: !105, line: 121, type: !3501)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !105, line: 120, column: 27)
!3500 = distinct !DILexicalBlock(scope: !3485, file: !105, line: 120, column: 6)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3501, file: !105, line: 85, baseType: !32, size: 32)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3501, file: !105, line: 86, baseType: !3505, offset: 32)
!3505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2715)
!3506 = !DILocation(line: 0, scope: !3485)
!3507 = !DILocation(line: 148, column: 3, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3500, file: !105, line: 138, column: 9)
!3509 = !DILocation(line: 155, column: 1, scope: !3485)
!3510 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3511, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!103, !103, !102}
!3513 = !{!3514, !3515}
!3514 = !DILocalVariable(name: "c", arg: 1, scope: !3510, file: !105, line: 107, type: !103)
!3515 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3510, file: !105, line: 107, type: !102)
!3516 = !DILocation(line: 0, scope: !3510)
!3517 = !DILocation(line: 110, column: 9, scope: !3510)
!3518 = !DILocation(line: 110, column: 2, scope: !3510)
!3519 = distinct !DISubprogram(name: "cbvprintf", scope: !3520, file: !3520, line: 739, type: !3521, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3527)
!3520 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!103, !3523, !102, !144, !3488}
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3520, line: 297, baseType: !3524)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 32)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!103, null}
!3527 = !{!3528, !3529, !3530, !3531}
!3528 = !DILocalVariable(name: "out", arg: 1, scope: !3519, file: !3520, line: 739, type: !3523)
!3529 = !DILocalVariable(name: "ctx", arg: 2, scope: !3519, file: !3520, line: 739, type: !102)
!3530 = !DILocalVariable(name: "format", arg: 3, scope: !3519, file: !3520, line: 739, type: !144)
!3531 = !DILocalVariable(name: "ap", arg: 4, scope: !3519, file: !3520, line: 739, type: !3488)
!3532 = !DILocation(line: 0, scope: !3519)
!3533 = !DILocation(line: 741, column: 9, scope: !3519)
!3534 = !DILocation(line: 741, column: 2, scope: !3519)
!3535 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3536, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3538)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{null, !344, !204}
!3538 = !{!3539, !3540, !3541}
!3539 = !DILocalVariable(name: "c", arg: 1, scope: !3535, file: !105, line: 157, type: !344)
!3540 = !DILocalVariable(name: "n", arg: 2, scope: !3535, file: !105, line: 157, type: !204)
!3541 = !DILocalVariable(name: "i", scope: !3535, file: !105, line: 159, type: !204)
!3542 = !DILocation(line: 0, scope: !3535)
!3543 = !DILocation(line: 164, column: 16, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !105, line: 164, column: 2)
!3545 = distinct !DILexicalBlock(scope: !3535, file: !105, line: 164, column: 2)
!3546 = !DILocation(line: 164, column: 2, scope: !3545)
!3547 = !DILocation(line: 165, column: 3, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3544, file: !105, line: 164, column: 26)
!3549 = !DILocation(line: 165, column: 13, scope: !3548)
!3550 = !DILocation(line: 164, column: 22, scope: !3544)
!3551 = distinct !{!3551, !3546, !3552}
!3552 = !DILocation(line: 166, column: 2, scope: !3545)
!3553 = !DILocation(line: 171, column: 1, scope: !3535)
!3554 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3555, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !144, null}
!3557 = !{!3558, !3559}
!3558 = !DILocalVariable(name: "fmt", arg: 1, scope: !3554, file: !105, line: 203, type: !144)
!3559 = !DILocalVariable(name: "ap", scope: !3554, file: !105, line: 205, type: !3488)
!3560 = !DILocation(line: 0, scope: !3554)
!3561 = !DILocation(line: 205, column: 2, scope: !3554)
!3562 = !DILocation(line: 205, column: 10, scope: !3554)
!3563 = !DILocation(line: 207, column: 2, scope: !3554)
!3564 = !DILocation(line: 209, column: 2, scope: !3554)
!3565 = !DILocation(line: 211, column: 2, scope: !3554)
!3566 = !DILocation(line: 212, column: 1, scope: !3554)
!3567 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3568, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3570)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!103, !344, !204, !144, null}
!3570 = !{!3571, !3572, !3573, !3574, !3575}
!3571 = !DILocalVariable(name: "str", arg: 1, scope: !3567, file: !105, line: 239, type: !344)
!3572 = !DILocalVariable(name: "size", arg: 2, scope: !3567, file: !105, line: 239, type: !204)
!3573 = !DILocalVariable(name: "fmt", arg: 3, scope: !3567, file: !105, line: 239, type: !144)
!3574 = !DILocalVariable(name: "ap", scope: !3567, file: !105, line: 241, type: !3488)
!3575 = !DILocalVariable(name: "ret", scope: !3567, file: !105, line: 242, type: !103)
!3576 = !DILocation(line: 0, scope: !3567)
!3577 = !DILocation(line: 241, column: 2, scope: !3567)
!3578 = !DILocation(line: 241, column: 10, scope: !3567)
!3579 = !DILocation(line: 244, column: 2, scope: !3567)
!3580 = !DILocation(line: 245, column: 8, scope: !3567)
!3581 = !DILocation(line: 246, column: 2, scope: !3567)
!3582 = !DILocation(line: 249, column: 1, scope: !3567)
!3583 = !DILocation(line: 248, column: 2, scope: !3567)
!3584 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3585, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3587)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!103, !344, !204, !144, !3488}
!3587 = !{!3588, !3589, !3590, !3591, !3592}
!3588 = !DILocalVariable(name: "str", arg: 1, scope: !3584, file: !105, line: 251, type: !344)
!3589 = !DILocalVariable(name: "size", arg: 2, scope: !3584, file: !105, line: 251, type: !204)
!3590 = !DILocalVariable(name: "fmt", arg: 3, scope: !3584, file: !105, line: 251, type: !144)
!3591 = !DILocalVariable(name: "ap", arg: 4, scope: !3584, file: !105, line: 251, type: !3488)
!3592 = !DILocalVariable(name: "ctx", scope: !3584, file: !105, line: 253, type: !3593)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3594)
!3594 = !{!3595, !3596, !3597}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3593, file: !105, line: 218, baseType: !344, size: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3593, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3593, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3598 = !DILocation(line: 0, scope: !3584)
!3599 = !DILocation(line: 253, column: 2, scope: !3584)
!3600 = !DILocation(line: 253, column: 21, scope: !3584)
!3601 = !DILocation(line: 253, column: 27, scope: !3584)
!3602 = !DILocation(line: 255, column: 2, scope: !3584)
!3603 = !DILocation(line: 257, column: 10, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3584, file: !105, line: 257, column: 6)
!3605 = !DILocation(line: 257, column: 22, scope: !3604)
!3606 = !DILocation(line: 257, column: 16, scope: !3604)
!3607 = !DILocation(line: 257, column: 6, scope: !3584)
!3608 = !DILocation(line: 258, column: 3, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3604, file: !105, line: 257, column: 27)
!3610 = !DILocation(line: 258, column: 18, scope: !3609)
!3611 = !DILocation(line: 259, column: 2, scope: !3609)
!3612 = !DILocation(line: 262, column: 1, scope: !3584)
!3613 = !DILocation(line: 261, column: 2, scope: !3584)
!3614 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3615, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3618)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!103, !103, !3617}
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 32)
!3618 = !{!3619, !3620}
!3619 = !DILocalVariable(name: "c", arg: 1, scope: !3614, file: !105, line: 223, type: !103)
!3620 = !DILocalVariable(name: "ctx", arg: 2, scope: !3614, file: !105, line: 223, type: !3617)
!3621 = !DILocation(line: 0, scope: !3614)
!3622 = !DILocation(line: 225, column: 11, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3614, file: !105, line: 225, column: 6)
!3624 = !DILocation(line: 225, column: 15, scope: !3623)
!3625 = !DILocation(line: 0, scope: !3623)
!3626 = !DILocation(line: 225, column: 23, scope: !3623)
!3627 = !DILocation(line: 225, column: 45, scope: !3623)
!3628 = !DILocation(line: 225, column: 37, scope: !3623)
!3629 = !DILocation(line: 225, column: 6, scope: !3614)
!3630 = !DILocation(line: 226, column: 8, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !105, line: 225, column: 50)
!3632 = !DILocation(line: 226, column: 13, scope: !3631)
!3633 = !DILocation(line: 227, column: 3, scope: !3631)
!3634 = !DILocation(line: 230, column: 29, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3614, file: !105, line: 230, column: 6)
!3636 = !DILocation(line: 230, column: 17, scope: !3635)
!3637 = !DILocation(line: 230, column: 6, scope: !3614)
!3638 = !DILocation(line: 231, column: 22, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !105, line: 230, column: 34)
!3640 = !DILocation(line: 231, column: 3, scope: !3639)
!3641 = !DILocation(line: 231, column: 26, scope: !3639)
!3642 = !DILocation(line: 232, column: 2, scope: !3639)
!3643 = !DILocation(line: 233, column: 28, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3635, file: !105, line: 232, column: 9)
!3645 = !DILocation(line: 233, column: 22, scope: !3644)
!3646 = !DILocation(line: 233, column: 3, scope: !3644)
!3647 = !DILocation(line: 233, column: 26, scope: !3644)
!3648 = !DILocation(line: 237, column: 1, scope: !3614)
!3649 = distinct !DISubprogram(name: "z_thread_entry", scope: !3650, file: !3650, line: 30, type: !3651, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !3658)
!3650 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !3653, !102, !102, !102}
!3653 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3654, line: 46, baseType: !3655)
!3654 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 32)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{null, !102, !102, !102}
!3658 = !{!3659, !3660, !3661, !3662}
!3659 = !DILocalVariable(name: "entry", arg: 1, scope: !3649, file: !3650, line: 30, type: !3653)
!3660 = !DILocalVariable(name: "p1", arg: 2, scope: !3649, file: !3650, line: 31, type: !102)
!3661 = !DILocalVariable(name: "p2", arg: 3, scope: !3649, file: !3650, line: 31, type: !102)
!3662 = !DILocalVariable(name: "p3", arg: 4, scope: !3649, file: !3650, line: 31, type: !102)
!3663 = !DILocation(line: 0, scope: !3649)
!3664 = !DILocation(line: 36, column: 2, scope: !3649)
!3665 = !DILocation(line: 38, column: 17, scope: !3649)
!3666 = !DILocation(line: 38, column: 2, scope: !3649)
!3667 = !DILocation(line: 45, column: 2, scope: !3649)
!3668 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3669, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !317)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!3671}
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3672)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 32)
!3673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3674)
!3674 = !{!3675, !3733, !3745, !3746, !3747, !3748, !3754, !3767}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3673, file: !379, line: 247, baseType: !3676, size: 384)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3677)
!3677 = !{!3678, !3702, !3709, !3710, !3711, !3720, !3721, !3722}
!3678 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !379, line: 60, baseType: !3679, size: 64)
!3679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !379, line: 60, size: 64, elements: !3680)
!3680 = !{!3681, !3696}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3679, file: !379, line: 61, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3683)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3684)
!3684 = !{!3685, !3691}
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3683, file: !325, line: 38, baseType: !3686, size: 32)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3683, file: !325, line: 38, size: 32, elements: !3687)
!3687 = !{!3688, !3690}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3686, file: !325, line: 39, baseType: !3689, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3686, file: !325, line: 40, baseType: !3689, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, scope: !3683, file: !325, line: 42, baseType: !3692, size: 32, offset: 32)
!3692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3683, file: !325, line: 42, size: 32, elements: !3693)
!3693 = !{!3694, !3695}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3692, file: !325, line: 43, baseType: !3689, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3692, file: !325, line: 44, baseType: !3689, size: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3679, file: !379, line: 62, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3698)
!3698 = !{!3699}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3697, file: !404, line: 50, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3701, size: 64, elements: !363)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3676, file: !379, line: 68, baseType: !3703, size: 32, offset: 64)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 32)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3705)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3706)
!3706 = !{!3707}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3705, file: !320, line: 232, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3683)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3676, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3676, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3711 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !379, line: 90, baseType: !3712, size: 16, offset: 112)
!3712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !379, line: 90, size: 16, elements: !3713)
!3713 = !{!3714, !3719}
!3714 = !DIDerivedType(tag: DW_TAG_member, scope: !3712, file: !379, line: 91, baseType: !3715, size: 16)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3712, file: !379, line: 91, size: 16, elements: !3716)
!3716 = !{!3717, !3718}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3715, file: !379, line: 96, baseType: !425, size: 8)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3715, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3712, file: !379, line: 100, baseType: !429, size: 16)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3676, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3676, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3676, file: !379, line: 131, baseType: !3723, size: 192, offset: 192)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3724)
!3724 = !{!3725, !3726, !3732}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3723, file: !320, line: 245, baseType: !3682, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3723, file: !320, line: 246, baseType: !3727, size: 32, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3728)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 32)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3723, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3673, file: !379, line: 250, baseType: !3734, size: 288, offset: 384)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3734, file: !446, line: 26, baseType: !121, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3734, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3734, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3734, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3734, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3734, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3734, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3734, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3734, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3673, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3673, file: !379, line: 256, baseType: !3704, size: 64, offset: 704)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3673, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3673, file: !379, line: 300, baseType: !3749, size: 96, offset: 800)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3750)
!3750 = !{!3751, !3752, !3753}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3749, file: !379, line: 153, baseType: !22, size: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3749, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3749, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3673, file: !379, line: 325, baseType: !3755, size: 32, offset: 896)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 32)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3757)
!3757 = !{!3758, !3764, !3765}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3756, file: !296, line: 5074, baseType: !3759, size: 96)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3760)
!3760 = !{!3761, !3762, !3763}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3759, file: !472, line: 57, baseType: !475, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3759, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3759, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3756, file: !296, line: 5075, baseType: !3704, size: 64, offset: 96)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3756, file: !296, line: 5076, baseType: !3766, offset: 160)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3673, file: !379, line: 343, baseType: !3768, size: 64, offset: 928)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3768, file: !446, line: 63, baseType: !121, size: 32)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3768, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3772 = !DILocation(line: 535, column: 9, scope: !3668)
!3773 = !DILocation(line: 535, column: 2, scope: !3668)
!3774 = distinct !DISubprogram(name: "k_thread_abort", scope: !3775, file: !3775, line: 188, type: !3776, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !3778)
!3775 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !3671}
!3778 = !{!3779}
!3779 = !DILocalVariable(name: "thread", arg: 1, scope: !3774, file: !3775, line: 188, type: !3671)
!3780 = !DILocation(line: 0, scope: !3774)
!3781 = !DILocation(line: 197, column: 2, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3774, file: !3775, line: 197, column: 2)
!3783 = !{i64 2155434952}
!3784 = !DILocation(line: 198, column: 2, scope: !3774)
!3785 = !DILocation(line: 199, column: 1, scope: !3774)
!3786 = distinct !DISubprogram(name: "z_current_get", scope: !3775, file: !3775, line: 173, type: !3669, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !317)
!3787 = !DILocation(line: 180, column: 2, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3786, file: !3775, line: 180, column: 2)
!3789 = !{i64 2155434884}
!3790 = !DILocation(line: 181, column: 9, scope: !3786)
!3791 = !DILocation(line: 181, column: 2, scope: !3786)
!3792 = distinct !DISubprogram(name: "sys_heap_free", scope: !3793, file: !3793, line: 163, type: !3794, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3802)
!3793 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3794 = !DISubroutineType(types: !3795)
!3795 = !{null, !3796, !102}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 32)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3798)
!3798 = !{!3799, !3800, !3801}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3797, file: !472, line: 57, baseType: !2702, size: 32)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3797, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3797, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3802 = !{!3803, !3804, !3805, !3806}
!3803 = !DILocalVariable(name: "heap", arg: 1, scope: !3792, file: !3793, line: 163, type: !3796)
!3804 = !DILocalVariable(name: "mem", arg: 2, scope: !3792, file: !3793, line: 163, type: !102)
!3805 = !DILocalVariable(name: "h", scope: !3792, file: !3793, line: 168, type: !2702)
!3806 = !DILocalVariable(name: "c", scope: !3792, file: !3793, line: 169, type: !2707)
!3807 = !DILocation(line: 0, scope: !3792)
!3808 = !DILocation(line: 165, column: 10, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3792, file: !3793, line: 165, column: 6)
!3810 = !DILocation(line: 165, column: 6, scope: !3792)
!3811 = !DILocation(line: 168, column: 27, scope: !3792)
!3812 = !DILocation(line: 169, column: 16, scope: !3792)
!3813 = !{i32 0, i32 536870912}
!3814 = !DILocation(line: 187, column: 2, scope: !3792)
!3815 = !DILocation(line: 197, column: 2, scope: !3792)
!3816 = !DILocation(line: 198, column: 1, scope: !3792)
!3817 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3793, file: !3793, line: 157, type: !3818, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3820)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!2707, !2702, !102}
!3820 = !{!3821, !3822, !3823, !3824}
!3821 = !DILocalVariable(name: "h", arg: 1, scope: !3817, file: !3793, line: 157, type: !2702)
!3822 = !DILocalVariable(name: "p", arg: 2, scope: !3817, file: !3793, line: 157, type: !102)
!3823 = !DILocalVariable(name: "mem", scope: !3817, file: !3793, line: 159, type: !267)
!3824 = !DILocalVariable(name: "base", scope: !3817, file: !3793, line: 159, type: !267)
!3825 = !DILocation(line: 0, scope: !3817)
!3826 = !DILocation(line: 159, column: 39, scope: !3817)
!3827 = !DILocation(line: 160, column: 14, scope: !3817)
!3828 = !DILocation(line: 160, column: 38, scope: !3817)
!3829 = !DILocation(line: 160, column: 46, scope: !3817)
!3830 = !DILocation(line: 160, column: 2, scope: !3817)
!3831 = distinct !DISubprogram(name: "set_chunk_used", scope: !2689, file: !2689, line: 147, type: !3832, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3834)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{null, !2702, !2707, !157}
!3834 = !{!3835, !3836, !3837, !3838, !3839}
!3835 = !DILocalVariable(name: "h", arg: 1, scope: !3831, file: !2689, line: 147, type: !2702)
!3836 = !DILocalVariable(name: "c", arg: 2, scope: !3831, file: !2689, line: 147, type: !2707)
!3837 = !DILocalVariable(name: "used", arg: 3, scope: !3831, file: !2689, line: 147, type: !157)
!3838 = !DILocalVariable(name: "buf", scope: !3831, file: !2689, line: 149, type: !2696)
!3839 = !DILocalVariable(name: "cmem", scope: !3831, file: !2689, line: 150, type: !102)
!3840 = !DILocation(line: 0, scope: !3831)
!3841 = !DILocation(line: 149, column: 22, scope: !3831)
!3842 = !DILocation(line: 0, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !2689, line: 159, column: 7)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !2689, line: 158, column: 9)
!3845 = distinct !DILexicalBlock(scope: !3831, file: !2689, line: 152, column: 6)
!3846 = !DILocation(line: 159, column: 7, scope: !3844)
!3847 = !DILocation(line: 165, column: 1, scope: !3831)
!3848 = distinct !DISubprogram(name: "free_chunk", scope: !3793, file: !3793, line: 133, type: !3849, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !2702, !2707}
!3851 = !{!3852, !3853}
!3852 = !DILocalVariable(name: "h", arg: 1, scope: !3848, file: !3793, line: 133, type: !2702)
!3853 = !DILocalVariable(name: "c", arg: 2, scope: !3848, file: !3793, line: 133, type: !2707)
!3854 = !DILocation(line: 0, scope: !3848)
!3855 = !DILocation(line: 136, column: 21, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3848, file: !3793, line: 136, column: 6)
!3857 = !DILocation(line: 136, column: 7, scope: !3856)
!3858 = !DILocation(line: 136, column: 6, scope: !3848)
!3859 = !DILocation(line: 137, column: 3, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3856, file: !3793, line: 136, column: 41)
!3861 = !DILocation(line: 138, column: 22, scope: !3860)
!3862 = !DILocation(line: 138, column: 3, scope: !3860)
!3863 = !DILocation(line: 139, column: 2, scope: !3860)
!3864 = !DILocation(line: 142, column: 21, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3848, file: !3793, line: 142, column: 6)
!3866 = !{i32 -65535, i32 536903678}
!3867 = !DILocation(line: 142, column: 7, scope: !3865)
!3868 = !DILocation(line: 142, column: 6, scope: !3848)
!3869 = !DILocation(line: 143, column: 3, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3865, file: !3793, line: 142, column: 40)
!3871 = !DILocation(line: 144, column: 19, scope: !3870)
!3872 = !DILocation(line: 144, column: 3, scope: !3870)
!3873 = !DILocation(line: 145, column: 7, scope: !3870)
!3874 = !DILocation(line: 146, column: 2, scope: !3870)
!3875 = !DILocation(line: 148, column: 2, scope: !3848)
!3876 = !DILocation(line: 149, column: 1, scope: !3848)
!3877 = distinct !DISubprogram(name: "right_chunk", scope: !2689, file: !2689, line: 204, type: !3878, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3880)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!2707, !2702, !2707}
!3880 = !{!3881, !3882}
!3881 = !DILocalVariable(name: "h", arg: 1, scope: !3877, file: !2689, line: 204, type: !2702)
!3882 = !DILocalVariable(name: "c", arg: 2, scope: !3877, file: !2689, line: 204, type: !2707)
!3883 = !DILocation(line: 0, scope: !3877)
!3884 = !DILocation(line: 206, column: 13, scope: !3877)
!3885 = !DILocation(line: 206, column: 11, scope: !3877)
!3886 = !DILocation(line: 206, column: 2, scope: !3877)
!3887 = distinct !DISubprogram(name: "chunk_used", scope: !2689, file: !2689, line: 137, type: !3888, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3890)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!157, !2702, !2707}
!3890 = !{!3891, !3892}
!3891 = !DILocalVariable(name: "h", arg: 1, scope: !3887, file: !2689, line: 137, type: !2702)
!3892 = !DILocalVariable(name: "c", arg: 2, scope: !3887, file: !2689, line: 137, type: !2707)
!3893 = !DILocation(line: 0, scope: !3887)
!3894 = !DILocation(line: 139, column: 9, scope: !3887)
!3895 = !DILocation(line: 139, column: 42, scope: !3887)
!3896 = !DILocation(line: 139, column: 2, scope: !3887)
!3897 = distinct !DISubprogram(name: "free_list_remove", scope: !3793, file: !3793, line: 60, type: !3849, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3898)
!3898 = !{!3899, !3900, !3901}
!3899 = !DILocalVariable(name: "h", arg: 1, scope: !3897, file: !3793, line: 60, type: !2702)
!3900 = !DILocalVariable(name: "c", arg: 2, scope: !3897, file: !3793, line: 60, type: !2707)
!3901 = !DILocalVariable(name: "bidx", scope: !3902, file: !3793, line: 63, type: !103)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !3793, line: 62, column: 31)
!3903 = distinct !DILexicalBlock(scope: !3897, file: !3793, line: 62, column: 6)
!3904 = !DILocation(line: 0, scope: !3897)
!3905 = !DILocation(line: 63, column: 28, scope: !3902)
!3906 = !{i32 0, i32 32768}
!3907 = !DILocation(line: 63, column: 14, scope: !3902)
!3908 = !DILocation(line: 0, scope: !3902)
!3909 = !DILocation(line: 64, column: 3, scope: !3902)
!3910 = !DILocation(line: 66, column: 1, scope: !3897)
!3911 = distinct !DISubprogram(name: "merge_chunks", scope: !3793, file: !3793, line: 125, type: !3912, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3914)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{null, !2702, !2707, !2707}
!3914 = !{!3915, !3916, !3917, !3918}
!3915 = !DILocalVariable(name: "h", arg: 1, scope: !3911, file: !3793, line: 125, type: !2702)
!3916 = !DILocalVariable(name: "lc", arg: 2, scope: !3911, file: !3793, line: 125, type: !2707)
!3917 = !DILocalVariable(name: "rc", arg: 3, scope: !3911, file: !3793, line: 125, type: !2707)
!3918 = !DILocalVariable(name: "newsz", scope: !3911, file: !3793, line: 127, type: !3919)
!3919 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2689, line: 62, baseType: !121)
!3920 = !DILocation(line: 0, scope: !3911)
!3921 = !DILocation(line: 127, column: 20, scope: !3911)
!3922 = !DILocation(line: 127, column: 40, scope: !3911)
!3923 = !DILocation(line: 127, column: 38, scope: !3911)
!3924 = !DILocation(line: 129, column: 2, scope: !3911)
!3925 = !DILocation(line: 130, column: 25, scope: !3911)
!3926 = !DILocation(line: 130, column: 2, scope: !3911)
!3927 = !DILocation(line: 131, column: 1, scope: !3911)
!3928 = distinct !DISubprogram(name: "left_chunk", scope: !2689, file: !2689, line: 199, type: !3878, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3929)
!3929 = !{!3930, !3931}
!3930 = !DILocalVariable(name: "h", arg: 1, scope: !3928, file: !2689, line: 199, type: !2702)
!3931 = !DILocalVariable(name: "c", arg: 2, scope: !3928, file: !2689, line: 199, type: !2707)
!3932 = !DILocation(line: 0, scope: !3928)
!3933 = !DILocation(line: 201, column: 13, scope: !3928)
!3934 = !DILocation(line: 201, column: 11, scope: !3928)
!3935 = !DILocation(line: 201, column: 2, scope: !3928)
!3936 = distinct !DISubprogram(name: "free_list_add", scope: !3793, file: !3793, line: 98, type: !3849, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3937)
!3937 = !{!3938, !3939, !3940}
!3938 = !DILocalVariable(name: "h", arg: 1, scope: !3936, file: !3793, line: 98, type: !2702)
!3939 = !DILocalVariable(name: "c", arg: 2, scope: !3936, file: !3793, line: 98, type: !2707)
!3940 = !DILocalVariable(name: "bidx", scope: !3941, file: !3793, line: 101, type: !103)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !3793, line: 100, column: 31)
!3942 = distinct !DILexicalBlock(scope: !3936, file: !3793, line: 100, column: 6)
!3943 = !DILocation(line: 0, scope: !3936)
!3944 = !DILocation(line: 101, column: 28, scope: !3941)
!3945 = !DILocation(line: 101, column: 14, scope: !3941)
!3946 = !DILocation(line: 0, scope: !3941)
!3947 = !DILocation(line: 102, column: 3, scope: !3941)
!3948 = !DILocation(line: 104, column: 1, scope: !3936)
!3949 = distinct !DISubprogram(name: "chunk_size", scope: !2689, file: !2689, line: 142, type: !3950, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3952)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!3919, !2702, !2707}
!3952 = !{!3953, !3954}
!3953 = !DILocalVariable(name: "h", arg: 1, scope: !3949, file: !2689, line: 142, type: !2702)
!3954 = !DILocalVariable(name: "c", arg: 2, scope: !3949, file: !2689, line: 142, type: !2707)
!3955 = !DILocation(line: 0, scope: !3949)
!3956 = !DILocation(line: 144, column: 9, scope: !3949)
!3957 = !DILocation(line: 144, column: 42, scope: !3949)
!3958 = !DILocation(line: 144, column: 2, scope: !3949)
!3959 = distinct !DISubprogram(name: "bucket_idx", scope: !2689, file: !2689, line: 250, type: !3960, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!103, !2702, !3919}
!3962 = !{!3963, !3964, !3965}
!3963 = !DILocalVariable(name: "h", arg: 1, scope: !3959, file: !2689, line: 250, type: !2702)
!3964 = !DILocalVariable(name: "sz", arg: 2, scope: !3959, file: !2689, line: 250, type: !3919)
!3965 = !DILocalVariable(name: "usable_sz", scope: !3959, file: !2689, line: 252, type: !32)
!3966 = !DILocation(line: 0, scope: !3959)
!3967 = !DILocation(line: 252, column: 32, scope: !3959)
!3968 = !DILocation(line: 252, column: 30, scope: !3959)
!3969 = !DILocation(line: 252, column: 50, scope: !3959)
!3970 = !DILocation(line: 253, column: 14, scope: !3959)
!3971 = !{i32 0, i32 33}
!3972 = !DILocation(line: 253, column: 12, scope: !3959)
!3973 = !DILocation(line: 253, column: 2, scope: !3959)
!3974 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3793, file: !3793, line: 68, type: !3975, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !3977)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !2702, !2707, !103}
!3977 = !{!3978, !3979, !3980, !3981, !3983, !3986}
!3978 = !DILocalVariable(name: "h", arg: 1, scope: !3974, file: !3793, line: 68, type: !2702)
!3979 = !DILocalVariable(name: "c", arg: 2, scope: !3974, file: !3793, line: 68, type: !2707)
!3980 = !DILocalVariable(name: "bidx", arg: 3, scope: !3974, file: !3793, line: 68, type: !103)
!3981 = !DILocalVariable(name: "b", scope: !3974, file: !3793, line: 70, type: !3982)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!3983 = !DILocalVariable(name: "second", scope: !3984, file: !3793, line: 84, type: !2707)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !3793, line: 80, column: 9)
!3985 = distinct !DILexicalBlock(scope: !3974, file: !3793, line: 72, column: 6)
!3986 = !DILocalVariable(name: "first", scope: !3984, file: !3793, line: 85, type: !2707)
!3987 = !DILocation(line: 0, scope: !3974)
!3988 = !DILocation(line: 72, column: 9, scope: !3985)
!3989 = !DILocation(line: 72, column: 14, scope: !3985)
!3990 = !DILocation(line: 72, column: 6, scope: !3974)
!3991 = !DILocation(line: 76, column: 23, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3985, file: !3793, line: 72, column: 21)
!3993 = !DILocation(line: 76, column: 6, scope: !3992)
!3994 = !DILocation(line: 76, column: 20, scope: !3992)
!3995 = !DILocation(line: 77, column: 11, scope: !3992)
!3996 = !DILocation(line: 78, column: 3, scope: !3992)
!3997 = !DILocation(line: 79, column: 3, scope: !3992)
!3998 = !DILocation(line: 80, column: 2, scope: !3992)
!3999 = !DILocation(line: 0, scope: !3984)
!4000 = !DILocation(line: 85, column: 21, scope: !3984)
!4001 = !{i32 0, i32 65536}
!4002 = !DILocation(line: 87, column: 3, scope: !3984)
!4003 = !DILocation(line: 88, column: 3, scope: !3984)
!4004 = !DILocation(line: 89, column: 3, scope: !3984)
!4005 = !DILocation(line: 90, column: 3, scope: !3984)
!4006 = !DILocation(line: 96, column: 1, scope: !3974)
!4007 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2689, file: !2689, line: 187, type: !3912, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011}
!4009 = !DILocalVariable(name: "h", arg: 1, scope: !4007, file: !2689, line: 187, type: !2702)
!4010 = !DILocalVariable(name: "c", arg: 2, scope: !4007, file: !2689, line: 187, type: !2707)
!4011 = !DILocalVariable(name: "prev", arg: 3, scope: !4007, file: !2689, line: 188, type: !2707)
!4012 = !DILocation(line: 0, scope: !4007)
!4013 = !DILocation(line: 190, column: 2, scope: !4007)
!4014 = !DILocation(line: 191, column: 1, scope: !4007)
!4015 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2689, file: !2689, line: 193, type: !3912, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4016)
!4016 = !{!4017, !4018, !4019}
!4017 = !DILocalVariable(name: "h", arg: 1, scope: !4015, file: !2689, line: 193, type: !2702)
!4018 = !DILocalVariable(name: "c", arg: 2, scope: !4015, file: !2689, line: 193, type: !2707)
!4019 = !DILocalVariable(name: "next", arg: 3, scope: !4015, file: !2689, line: 194, type: !2707)
!4020 = !DILocation(line: 0, scope: !4015)
!4021 = !DILocation(line: 196, column: 2, scope: !4015)
!4022 = !DILocation(line: 197, column: 1, scope: !4015)
!4023 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2689, file: !2689, line: 177, type: !3878, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4024)
!4024 = !{!4025, !4026}
!4025 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2689, line: 177, type: !2702)
!4026 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !2689, line: 177, type: !2707)
!4027 = !DILocation(line: 0, scope: !4023)
!4028 = !DILocation(line: 179, column: 9, scope: !4023)
!4029 = !DILocation(line: 179, column: 2, scope: !4023)
!4030 = distinct !DISubprogram(name: "chunk_field", scope: !2689, file: !2689, line: 107, type: !4031, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!2707, !2702, !2707, !2688}
!4033 = !{!4034, !4035, !4036, !4037, !4038}
!4034 = !DILocalVariable(name: "h", arg: 1, scope: !4030, file: !2689, line: 107, type: !2702)
!4035 = !DILocalVariable(name: "c", arg: 2, scope: !4030, file: !2689, line: 107, type: !2707)
!4036 = !DILocalVariable(name: "f", arg: 3, scope: !4030, file: !2689, line: 108, type: !2688)
!4037 = !DILocalVariable(name: "buf", scope: !4030, file: !2689, line: 110, type: !2696)
!4038 = !DILocalVariable(name: "cmem", scope: !4030, file: !2689, line: 111, type: !102)
!4039 = !DILocation(line: 0, scope: !4030)
!4040 = !DILocation(line: 110, column: 22, scope: !4030)
!4041 = !DILocation(line: 111, column: 15, scope: !4030)
!4042 = !DILocation(line: 116, column: 11, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !2689, line: 115, column: 9)
!4044 = distinct !DILexicalBlock(scope: !4030, file: !2689, line: 113, column: 6)
!4045 = !DILocation(line: 116, column: 10, scope: !4043)
!4046 = !DILocation(line: 118, column: 1, scope: !4030)
!4047 = distinct !DISubprogram(name: "chunk_buf", scope: !2689, file: !2689, line: 101, type: !4048, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4050)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!2696, !2702}
!4050 = !{!4051}
!4051 = !DILocalVariable(name: "h", arg: 1, scope: !4047, file: !2689, line: 101, type: !2702)
!4052 = !DILocation(line: 0, scope: !4047)
!4053 = !DILocation(line: 104, column: 9, scope: !4047)
!4054 = !DILocation(line: 104, column: 2, scope: !4047)
!4055 = distinct !DISubprogram(name: "chunk_set", scope: !2689, file: !2689, line: 120, type: !4056, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4058)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{null, !2702, !2707, !2688, !2707}
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4064}
!4059 = !DILocalVariable(name: "h", arg: 1, scope: !4055, file: !2689, line: 120, type: !2702)
!4060 = !DILocalVariable(name: "c", arg: 2, scope: !4055, file: !2689, line: 120, type: !2707)
!4061 = !DILocalVariable(name: "f", arg: 3, scope: !4055, file: !2689, line: 121, type: !2688)
!4062 = !DILocalVariable(name: "val", arg: 4, scope: !4055, file: !2689, line: 121, type: !2707)
!4063 = !DILocalVariable(name: "buf", scope: !4055, file: !2689, line: 125, type: !2696)
!4064 = !DILocalVariable(name: "cmem", scope: !4055, file: !2689, line: 126, type: !102)
!4065 = !DILocation(line: 0, scope: !4055)
!4066 = !DILocation(line: 125, column: 22, scope: !4055)
!4067 = !DILocation(line: 126, column: 15, scope: !4055)
!4068 = !DILocation(line: 133, column: 27, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !2689, line: 131, column: 9)
!4070 = distinct !DILexicalBlock(scope: !4055, file: !2689, line: 128, column: 6)
!4071 = !DILocation(line: 133, column: 4, scope: !4069)
!4072 = !DILocation(line: 133, column: 3, scope: !4069)
!4073 = !DILocation(line: 133, column: 25, scope: !4069)
!4074 = !DILocation(line: 135, column: 1, scope: !4055)
!4075 = distinct !DISubprogram(name: "min_chunk_size", scope: !2689, file: !2689, line: 240, type: !4076, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!3919, !2702}
!4078 = !{!4079}
!4079 = !DILocalVariable(name: "h", arg: 1, scope: !4075, file: !2689, line: 240, type: !2702)
!4080 = !DILocation(line: 0, scope: !4075)
!4081 = !DILocation(line: 242, column: 9, scope: !4075)
!4082 = !DILocation(line: 242, column: 2, scope: !4075)
!4083 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2689, file: !2689, line: 235, type: !4084, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4086)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{!3919, !2702, !204}
!4086 = !{!4087, !4088}
!4087 = !DILocalVariable(name: "h", arg: 1, scope: !4083, file: !2689, line: 235, type: !2702)
!4088 = !DILocalVariable(name: "bytes", arg: 2, scope: !4083, file: !2689, line: 235, type: !204)
!4089 = !DILocation(line: 0, scope: !4083)
!4090 = !DILocation(line: 237, column: 39, scope: !4083)
!4091 = !DILocation(line: 237, column: 9, scope: !4083)
!4092 = !DILocation(line: 237, column: 2, scope: !4083)
!4093 = distinct !DISubprogram(name: "chunksz", scope: !2689, file: !2689, line: 230, type: !4094, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4096)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!3919, !204}
!4096 = !{!4097}
!4097 = !DILocalVariable(name: "bytes", arg: 1, scope: !4093, file: !2689, line: 230, type: !204)
!4098 = !DILocation(line: 0, scope: !4093)
!4099 = !DILocation(line: 232, column: 29, scope: !4093)
!4100 = !DILocation(line: 232, column: 35, scope: !4093)
!4101 = !DILocation(line: 232, column: 2, scope: !4093)
!4102 = distinct !DISubprogram(name: "set_chunk_size", scope: !2689, file: !2689, line: 172, type: !4103, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4105)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{null, !2702, !2707, !3919}
!4105 = !{!4106, !4107, !4108}
!4106 = !DILocalVariable(name: "h", arg: 1, scope: !4102, file: !2689, line: 172, type: !2702)
!4107 = !DILocalVariable(name: "c", arg: 2, scope: !4102, file: !2689, line: 172, type: !2707)
!4108 = !DILocalVariable(name: "size", arg: 3, scope: !4102, file: !2689, line: 172, type: !3919)
!4109 = !DILocation(line: 0, scope: !4102)
!4110 = !DILocation(line: 174, column: 38, scope: !4102)
!4111 = !DILocation(line: 174, column: 2, scope: !4102)
!4112 = !DILocation(line: 175, column: 1, scope: !4102)
!4113 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2689, file: !2689, line: 209, type: !4103, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4114)
!4114 = !{!4115, !4116, !4117}
!4115 = !DILocalVariable(name: "h", arg: 1, scope: !4113, file: !2689, line: 209, type: !2702)
!4116 = !DILocalVariable(name: "c", arg: 2, scope: !4113, file: !2689, line: 209, type: !2707)
!4117 = !DILocalVariable(name: "size", arg: 3, scope: !4113, file: !2689, line: 210, type: !3919)
!4118 = !DILocation(line: 0, scope: !4113)
!4119 = !DILocation(line: 212, column: 2, scope: !4113)
!4120 = !DILocation(line: 213, column: 1, scope: !4113)
!4121 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3793, file: !3793, line: 34, type: !3975, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4130}
!4123 = !DILocalVariable(name: "h", arg: 1, scope: !4121, file: !3793, line: 34, type: !2702)
!4124 = !DILocalVariable(name: "c", arg: 2, scope: !4121, file: !3793, line: 34, type: !2707)
!4125 = !DILocalVariable(name: "bidx", arg: 3, scope: !4121, file: !3793, line: 34, type: !103)
!4126 = !DILocalVariable(name: "b", scope: !4121, file: !3793, line: 36, type: !3982)
!4127 = !DILocalVariable(name: "first", scope: !4128, file: !3793, line: 47, type: !2707)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !3793, line: 46, column: 9)
!4129 = distinct !DILexicalBlock(scope: !4121, file: !3793, line: 42, column: 6)
!4130 = !DILocalVariable(name: "second", scope: !4128, file: !3793, line: 48, type: !2707)
!4131 = !DILocation(line: 0, scope: !4121)
!4132 = !DILocation(line: 36, column: 29, scope: !4121)
!4133 = !DILocation(line: 42, column: 6, scope: !4129)
!4134 = !DILocation(line: 42, column: 28, scope: !4129)
!4135 = !DILocation(line: 42, column: 6, scope: !4121)
!4136 = !DILocation(line: 44, column: 24, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4129, file: !3793, line: 42, column: 34)
!4138 = !DILocation(line: 44, column: 23, scope: !4137)
!4139 = !DILocation(line: 44, column: 6, scope: !4137)
!4140 = !DILocation(line: 44, column: 20, scope: !4137)
!4141 = !DILocation(line: 45, column: 6, scope: !4137)
!4142 = !DILocation(line: 45, column: 11, scope: !4137)
!4143 = !DILocation(line: 46, column: 2, scope: !4137)
!4144 = !DILocation(line: 47, column: 21, scope: !4128)
!4145 = !DILocation(line: 0, scope: !4128)
!4146 = !DILocation(line: 50, column: 6, scope: !4128)
!4147 = !DILocation(line: 50, column: 11, scope: !4128)
!4148 = !DILocation(line: 51, column: 3, scope: !4128)
!4149 = !DILocation(line: 52, column: 3, scope: !4128)
!4150 = !DILocation(line: 58, column: 1, scope: !4121)
!4151 = distinct !DISubprogram(name: "next_free_chunk", scope: !2689, file: !2689, line: 182, type: !3878, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4152)
!4152 = !{!4153, !4154}
!4153 = !DILocalVariable(name: "h", arg: 1, scope: !4151, file: !2689, line: 182, type: !2702)
!4154 = !DILocalVariable(name: "c", arg: 2, scope: !4151, file: !2689, line: 182, type: !2707)
!4155 = !DILocation(line: 0, scope: !4151)
!4156 = !DILocation(line: 184, column: 9, scope: !4151)
!4157 = !DILocation(line: 184, column: 2, scope: !4151)
!4158 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3793, file: !3793, line: 200, type: !4159, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4161)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!204, !3796, !102}
!4161 = !{!4162, !4163, !4164, !4165, !4166, !4167, !4168}
!4162 = !DILocalVariable(name: "heap", arg: 1, scope: !4158, file: !3793, line: 200, type: !3796)
!4163 = !DILocalVariable(name: "mem", arg: 2, scope: !4158, file: !3793, line: 200, type: !102)
!4164 = !DILocalVariable(name: "h", scope: !4158, file: !3793, line: 202, type: !2702)
!4165 = !DILocalVariable(name: "c", scope: !4158, file: !3793, line: 203, type: !2707)
!4166 = !DILocalVariable(name: "addr", scope: !4158, file: !3793, line: 204, type: !204)
!4167 = !DILocalVariable(name: "chunk_base", scope: !4158, file: !3793, line: 205, type: !204)
!4168 = !DILocalVariable(name: "chunk_sz", scope: !4158, file: !3793, line: 206, type: !204)
!4169 = !DILocation(line: 0, scope: !4158)
!4170 = !DILocation(line: 202, column: 27, scope: !4158)
!4171 = !DILocation(line: 203, column: 16, scope: !4158)
!4172 = !DILocation(line: 204, column: 16, scope: !4158)
!4173 = !DILocation(line: 205, column: 31, scope: !4158)
!4174 = !DILocation(line: 205, column: 22, scope: !4158)
!4175 = !DILocation(line: 206, column: 20, scope: !4158)
!4176 = !DILocation(line: 206, column: 37, scope: !4158)
!4177 = !DILocation(line: 208, column: 26, scope: !4158)
!4178 = !DILocation(line: 208, column: 18, scope: !4158)
!4179 = !DILocation(line: 208, column: 2, scope: !4158)
!4180 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3793, file: !3793, line: 263, type: !4181, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!102, !3796, !204}
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189}
!4184 = !DILocalVariable(name: "heap", arg: 1, scope: !4180, file: !3793, line: 263, type: !3796)
!4185 = !DILocalVariable(name: "bytes", arg: 2, scope: !4180, file: !3793, line: 263, type: !204)
!4186 = !DILocalVariable(name: "h", scope: !4180, file: !3793, line: 265, type: !2702)
!4187 = !DILocalVariable(name: "mem", scope: !4180, file: !3793, line: 266, type: !102)
!4188 = !DILocalVariable(name: "chunk_sz", scope: !4180, file: !3793, line: 272, type: !3919)
!4189 = !DILocalVariable(name: "c", scope: !4180, file: !3793, line: 273, type: !2707)
!4190 = !DILocation(line: 0, scope: !4180)
!4191 = !DILocation(line: 265, column: 27, scope: !4180)
!4192 = !DILocation(line: 268, column: 12, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4180, file: !3793, line: 268, column: 6)
!4194 = !DILocation(line: 268, column: 18, scope: !4193)
!4195 = !DILocation(line: 268, column: 21, scope: !4193)
!4196 = !DILocation(line: 268, column: 6, scope: !4180)
!4197 = !DILocation(line: 272, column: 23, scope: !4180)
!4198 = !DILocation(line: 273, column: 16, scope: !4180)
!4199 = !DILocation(line: 274, column: 8, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4180, file: !3793, line: 274, column: 6)
!4201 = !DILocation(line: 274, column: 6, scope: !4180)
!4202 = !DILocation(line: 279, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4180, file: !3793, line: 279, column: 6)
!4204 = !DILocation(line: 279, column: 23, scope: !4203)
!4205 = !DILocation(line: 279, column: 6, scope: !4180)
!4206 = !DILocation(line: 280, column: 24, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4203, file: !3793, line: 279, column: 35)
!4208 = !DILocation(line: 280, column: 3, scope: !4207)
!4209 = !DILocation(line: 281, column: 3, scope: !4207)
!4210 = !DILocation(line: 282, column: 2, scope: !4207)
!4211 = !DILocation(line: 284, column: 2, scope: !4180)
!4212 = !DILocation(line: 286, column: 8, scope: !4180)
!4213 = !DILocation(line: 298, column: 2, scope: !4180)
!4214 = !DILocation(line: 299, column: 1, scope: !4180)
!4215 = distinct !DISubprogram(name: "size_too_big", scope: !2689, file: !2689, line: 256, type: !4216, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4218)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!157, !2702, !204}
!4218 = !{!4219, !4220}
!4219 = !DILocalVariable(name: "h", arg: 1, scope: !4215, file: !2689, line: 256, type: !2702)
!4220 = !DILocalVariable(name: "bytes", arg: 2, scope: !4215, file: !2689, line: 256, type: !204)
!4221 = !DILocation(line: 0, scope: !4215)
!4222 = !DILocation(line: 262, column: 16, scope: !4215)
!4223 = !DILocation(line: 262, column: 36, scope: !4215)
!4224 = !DILocation(line: 262, column: 30, scope: !4215)
!4225 = !DILocation(line: 262, column: 2, scope: !4215)
!4226 = distinct !DISubprogram(name: "alloc_chunk", scope: !3793, file: !3793, line: 211, type: !4227, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4229)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!2707, !2702, !3919}
!4229 = !{!4230, !4231, !4232, !4233, !4234, !4237, !4238, !4240, !4241, !4244}
!4230 = !DILocalVariable(name: "h", arg: 1, scope: !4226, file: !3793, line: 211, type: !2702)
!4231 = !DILocalVariable(name: "sz", arg: 2, scope: !4226, file: !3793, line: 211, type: !3919)
!4232 = !DILocalVariable(name: "bi", scope: !4226, file: !3793, line: 213, type: !103)
!4233 = !DILocalVariable(name: "b", scope: !4226, file: !3793, line: 214, type: !3982)
!4234 = !DILocalVariable(name: "first", scope: !4235, file: !3793, line: 233, type: !2707)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3793, line: 232, column: 15)
!4236 = distinct !DILexicalBlock(scope: !4226, file: !3793, line: 232, column: 6)
!4237 = !DILocalVariable(name: "i", scope: !4235, file: !3793, line: 234, type: !103)
!4238 = !DILocalVariable(name: "c", scope: !4239, file: !3793, line: 236, type: !2707)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !3793, line: 235, column: 6)
!4240 = !DILocalVariable(name: "bmask", scope: !4226, file: !3793, line: 249, type: !121)
!4241 = !DILocalVariable(name: "minbucket", scope: !4242, file: !3793, line: 252, type: !103)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !3793, line: 251, column: 19)
!4243 = distinct !DILexicalBlock(scope: !4226, file: !3793, line: 251, column: 6)
!4244 = !DILocalVariable(name: "c", scope: !4242, file: !3793, line: 253, type: !2707)
!4245 = !DILocation(line: 0, scope: !4226)
!4246 = !DILocation(line: 213, column: 11, scope: !4226)
!4247 = !DILocation(line: 232, column: 9, scope: !4236)
!4248 = !DILocation(line: 232, column: 6, scope: !4236)
!4249 = !DILocation(line: 232, column: 6, scope: !4226)
!4250 = !DILocation(line: 236, column: 21, scope: !4239)
!4251 = !DILocation(line: 0, scope: !4235)
!4252 = !DILocation(line: 0, scope: !4239)
!4253 = !DILocation(line: 237, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4239, file: !3793, line: 237, column: 8)
!4255 = !DILocation(line: 237, column: 25, scope: !4254)
!4256 = !DILocation(line: 237, column: 8, scope: !4239)
!4257 = !DILocation(line: 238, column: 5, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !3793, line: 237, column: 32)
!4259 = !DILocation(line: 241, column: 14, scope: !4239)
!4260 = !DILocation(line: 241, column: 12, scope: !4239)
!4261 = !DILocation(line: 243, column: 12, scope: !4235)
!4262 = !DILocation(line: 243, column: 16, scope: !4235)
!4263 = distinct !{!4263, !4264, !4265}
!4264 = !DILocation(line: 235, column: 3, scope: !4235)
!4265 = !DILocation(line: 243, column: 35, scope: !4235)
!4266 = !DILocation(line: 249, column: 22, scope: !4226)
!4267 = !DILocation(line: 249, column: 39, scope: !4226)
!4268 = !DILocation(line: 249, column: 36, scope: !4226)
!4269 = !DILocation(line: 251, column: 12, scope: !4243)
!4270 = !DILocation(line: 251, column: 6, scope: !4226)
!4271 = !DILocation(line: 252, column: 19, scope: !4242)
!4272 = !DILocation(line: 0, scope: !4242)
!4273 = !DILocation(line: 253, column: 39, scope: !4242)
!4274 = !DILocation(line: 255, column: 3, scope: !4242)
!4275 = !DILocation(line: 261, column: 1, scope: !4226)
!4276 = distinct !DISubprogram(name: "split_chunks", scope: !3793, file: !3793, line: 109, type: !3912, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4277)
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283}
!4278 = !DILocalVariable(name: "h", arg: 1, scope: !4276, file: !3793, line: 109, type: !2702)
!4279 = !DILocalVariable(name: "lc", arg: 2, scope: !4276, file: !3793, line: 109, type: !2707)
!4280 = !DILocalVariable(name: "rc", arg: 3, scope: !4276, file: !3793, line: 109, type: !2707)
!4281 = !DILocalVariable(name: "sz0", scope: !4276, file: !3793, line: 114, type: !3919)
!4282 = !DILocalVariable(name: "lsz", scope: !4276, file: !3793, line: 115, type: !3919)
!4283 = !DILocalVariable(name: "rsz", scope: !4276, file: !3793, line: 116, type: !3919)
!4284 = !DILocation(line: 0, scope: !4276)
!4285 = !DILocation(line: 114, column: 18, scope: !4276)
!4286 = !DILocation(line: 115, column: 21, scope: !4276)
!4287 = !DILocation(line: 116, column: 22, scope: !4276)
!4288 = !DILocation(line: 118, column: 2, scope: !4276)
!4289 = !DILocation(line: 119, column: 2, scope: !4276)
!4290 = !DILocation(line: 120, column: 2, scope: !4276)
!4291 = !DILocation(line: 121, column: 25, scope: !4276)
!4292 = !DILocation(line: 121, column: 2, scope: !4276)
!4293 = !DILocation(line: 122, column: 1, scope: !4276)
!4294 = distinct !DISubprogram(name: "chunk_mem", scope: !3793, file: !3793, line: 24, type: !4295, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4297)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!102, !2702, !2707}
!4297 = !{!4298, !4299, !4300, !4301}
!4298 = !DILocalVariable(name: "h", arg: 1, scope: !4294, file: !3793, line: 24, type: !2702)
!4299 = !DILocalVariable(name: "c", arg: 2, scope: !4294, file: !3793, line: 24, type: !2707)
!4300 = !DILocalVariable(name: "buf", scope: !4294, file: !3793, line: 26, type: !2696)
!4301 = !DILocalVariable(name: "ret", scope: !4294, file: !3793, line: 27, type: !267)
!4302 = !DILocation(line: 0, scope: !4294)
!4303 = !DILocation(line: 26, column: 22, scope: !4294)
!4304 = !DILocation(line: 27, column: 38, scope: !4294)
!4305 = !DILocation(line: 31, column: 2, scope: !4294)
!4306 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3793, file: !3793, line: 301, type: !4307, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!102, !3796, !204, !204}
!4309 = !{!4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321}
!4310 = !DILocalVariable(name: "heap", arg: 1, scope: !4306, file: !3793, line: 301, type: !3796)
!4311 = !DILocalVariable(name: "align", arg: 2, scope: !4306, file: !3793, line: 301, type: !204)
!4312 = !DILocalVariable(name: "bytes", arg: 3, scope: !4306, file: !3793, line: 301, type: !204)
!4313 = !DILocalVariable(name: "h", scope: !4306, file: !3793, line: 303, type: !2702)
!4314 = !DILocalVariable(name: "gap", scope: !4306, file: !3793, line: 304, type: !204)
!4315 = !DILocalVariable(name: "rew", scope: !4306, file: !3793, line: 304, type: !204)
!4316 = !DILocalVariable(name: "padded_sz", scope: !4306, file: !3793, line: 335, type: !3919)
!4317 = !DILocalVariable(name: "c0", scope: !4306, file: !3793, line: 336, type: !2707)
!4318 = !DILocalVariable(name: "mem", scope: !4306, file: !3793, line: 341, type: !267)
!4319 = !DILocalVariable(name: "end", scope: !4306, file: !3793, line: 345, type: !2696)
!4320 = !DILocalVariable(name: "c", scope: !4306, file: !3793, line: 348, type: !2707)
!4321 = !DILocalVariable(name: "c_end", scope: !4306, file: !3793, line: 349, type: !2707)
!4322 = !DILocation(line: 0, scope: !4306)
!4323 = !DILocation(line: 303, column: 27, scope: !4306)
!4324 = !DILocation(line: 313, column: 16, scope: !4306)
!4325 = !DILocation(line: 313, column: 14, scope: !4306)
!4326 = !DILocation(line: 314, column: 12, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4306, file: !3793, line: 314, column: 6)
!4328 = !DILocation(line: 314, column: 6, scope: !4306)
!4329 = !DILocation(line: 315, column: 9, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4327, file: !3793, line: 314, column: 20)
!4331 = !DILocation(line: 316, column: 9, scope: !4330)
!4332 = !DILocation(line: 318, column: 13, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !3793, line: 318, column: 7)
!4334 = distinct !DILexicalBlock(scope: !4327, file: !3793, line: 317, column: 9)
!4335 = !DILocation(line: 318, column: 7, scope: !4334)
!4336 = !DILocation(line: 319, column: 11, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4333, file: !3793, line: 318, column: 39)
!4338 = !DILocation(line: 319, column: 4, scope: !4337)
!4339 = !DILocation(line: 0, scope: !4327)
!4340 = !DILocation(line: 326, column: 12, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4306, file: !3793, line: 326, column: 6)
!4342 = !DILocation(line: 326, column: 17, scope: !4341)
!4343 = !DILocation(line: 326, column: 20, scope: !4341)
!4344 = !DILocation(line: 326, column: 6, scope: !4306)
!4345 = !DILocation(line: 335, column: 50, scope: !4306)
!4346 = !DILocation(line: 335, column: 58, scope: !4306)
!4347 = !DILocation(line: 335, column: 24, scope: !4306)
!4348 = !DILocation(line: 336, column: 17, scope: !4306)
!4349 = !DILocation(line: 338, column: 9, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4306, file: !3793, line: 338, column: 6)
!4351 = !DILocation(line: 338, column: 6, scope: !4306)
!4352 = !DILocation(line: 341, column: 17, scope: !4306)
!4353 = !DILocation(line: 344, column: 20, scope: !4306)
!4354 = !DILocation(line: 344, column: 8, scope: !4306)
!4355 = !DILocation(line: 344, column: 47, scope: !4306)
!4356 = !DILocation(line: 345, column: 39, scope: !4306)
!4357 = !DILocation(line: 348, column: 16, scope: !4306)
!4358 = !DILocation(line: 349, column: 26, scope: !4306)
!4359 = !DILocation(line: 349, column: 24, scope: !4306)
!4360 = !DILocation(line: 353, column: 8, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4306, file: !3793, line: 353, column: 6)
!4362 = !DILocation(line: 353, column: 6, scope: !4306)
!4363 = !DILocation(line: 354, column: 3, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4361, file: !3793, line: 353, column: 14)
!4365 = !DILocation(line: 355, column: 3, scope: !4364)
!4366 = !DILocation(line: 356, column: 2, scope: !4364)
!4367 = !DILocation(line: 359, column: 6, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4306, file: !3793, line: 359, column: 6)
!4369 = !DILocation(line: 359, column: 24, scope: !4368)
!4370 = !DILocation(line: 359, column: 6, scope: !4306)
!4371 = !DILocation(line: 360, column: 3, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4368, file: !3793, line: 359, column: 33)
!4373 = !DILocation(line: 361, column: 3, scope: !4372)
!4374 = !DILocation(line: 362, column: 2, scope: !4372)
!4375 = !DILocation(line: 364, column: 2, scope: !4306)
!4376 = !DILocation(line: 377, column: 1, scope: !4306)
!4377 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3793, file: !3793, line: 379, type: !4378, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4380)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!102, !3796, !102, !204, !204}
!4380 = !{!4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4396, !4397}
!4381 = !DILocalVariable(name: "heap", arg: 1, scope: !4377, file: !3793, line: 379, type: !3796)
!4382 = !DILocalVariable(name: "ptr", arg: 2, scope: !4377, file: !3793, line: 379, type: !102)
!4383 = !DILocalVariable(name: "align", arg: 3, scope: !4377, file: !3793, line: 380, type: !204)
!4384 = !DILocalVariable(name: "bytes", arg: 4, scope: !4377, file: !3793, line: 380, type: !204)
!4385 = !DILocalVariable(name: "h", scope: !4377, file: !3793, line: 382, type: !2702)
!4386 = !DILocalVariable(name: "c", scope: !4377, file: !3793, line: 399, type: !2707)
!4387 = !DILocalVariable(name: "rc", scope: !4377, file: !3793, line: 400, type: !2707)
!4388 = !DILocalVariable(name: "align_gap", scope: !4377, file: !3793, line: 401, type: !204)
!4389 = !DILocalVariable(name: "chunks_need", scope: !4377, file: !3793, line: 402, type: !3919)
!4390 = !DILocalVariable(name: "split_size", scope: !4391, file: !3793, line: 435, type: !3919)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3793, line: 433, column: 61)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3793, line: 432, column: 13)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3793, line: 409, column: 13)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !3793, line: 406, column: 13)
!4395 = distinct !DILexicalBlock(scope: !4377, file: !3793, line: 404, column: 6)
!4396 = !DILocalVariable(name: "ptr2", scope: !4377, file: !3793, line: 474, type: !102)
!4397 = !DILocalVariable(name: "prev_size", scope: !4398, file: !3793, line: 477, type: !204)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !3793, line: 476, column: 20)
!4399 = distinct !DILexicalBlock(scope: !4377, file: !3793, line: 476, column: 6)
!4400 = !DILocation(line: 0, scope: !4377)
!4401 = !DILocation(line: 382, column: 27, scope: !4377)
!4402 = !DILocation(line: 385, column: 10, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4377, file: !3793, line: 385, column: 6)
!4404 = !DILocation(line: 385, column: 6, scope: !4377)
!4405 = !DILocation(line: 386, column: 10, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4403, file: !3793, line: 385, column: 19)
!4407 = !DILocation(line: 386, column: 3, scope: !4406)
!4408 = !DILocation(line: 388, column: 12, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4377, file: !3793, line: 388, column: 6)
!4410 = !DILocation(line: 388, column: 6, scope: !4377)
!4411 = !DILocation(line: 389, column: 3, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4409, file: !3793, line: 388, column: 18)
!4413 = !DILocation(line: 390, column: 3, scope: !4412)
!4414 = !DILocation(line: 395, column: 6, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4377, file: !3793, line: 395, column: 6)
!4416 = !DILocation(line: 395, column: 6, scope: !4377)
!4417 = !DILocation(line: 399, column: 16, scope: !4377)
!4418 = !DILocation(line: 400, column: 17, scope: !4377)
!4419 = !DILocation(line: 401, column: 49, scope: !4377)
!4420 = !DILocation(line: 401, column: 36, scope: !4377)
!4421 = !DILocation(line: 402, column: 52, scope: !4377)
!4422 = !DILocation(line: 402, column: 26, scope: !4377)
!4423 = !DILocation(line: 404, column: 6, scope: !4395)
!4424 = !DILocation(line: 404, column: 12, scope: !4395)
!4425 = !DILocation(line: 404, column: 40, scope: !4395)
!4426 = !DILocation(line: 404, column: 31, scope: !4395)
!4427 = !DILocation(line: 404, column: 6, scope: !4377)
!4428 = !DILocation(line: 406, column: 13, scope: !4394)
!4429 = !DILocation(line: 406, column: 30, scope: !4394)
!4430 = !DILocation(line: 406, column: 13, scope: !4395)
!4431 = !DILocation(line: 409, column: 30, scope: !4393)
!4432 = !DILocation(line: 409, column: 13, scope: !4394)
!4433 = !DILocation(line: 420, column: 24, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4393, file: !3793, line: 409, column: 45)
!4435 = !DILocation(line: 420, column: 3, scope: !4434)
!4436 = !DILocation(line: 421, column: 3, scope: !4434)
!4437 = !DILocation(line: 422, column: 3, scope: !4434)
!4438 = !DILocation(line: 431, column: 3, scope: !4434)
!4439 = !DILocation(line: 432, column: 14, scope: !4392)
!4440 = !DILocation(line: 432, column: 32, scope: !4392)
!4441 = !DILocation(line: 433, column: 26, scope: !4392)
!4442 = !DILocation(line: 433, column: 24, scope: !4392)
!4443 = !DILocation(line: 433, column: 44, scope: !4392)
!4444 = !DILocation(line: 432, column: 13, scope: !4393)
!4445 = !DILocation(line: 435, column: 38, scope: !4391)
!4446 = !DILocation(line: 0, scope: !4391)
!4447 = !DILocation(line: 445, column: 3, scope: !4391)
!4448 = !DILocation(line: 447, column: 20, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4391, file: !3793, line: 447, column: 7)
!4450 = !DILocation(line: 447, column: 18, scope: !4449)
!4451 = !DILocation(line: 447, column: 7, scope: !4391)
!4452 = !DILocation(line: 448, column: 27, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !3793, line: 447, column: 39)
!4454 = !DILocation(line: 448, column: 4, scope: !4453)
!4455 = !DILocation(line: 449, column: 4, scope: !4453)
!4456 = !DILocation(line: 450, column: 3, scope: !4453)
!4457 = !DILocation(line: 452, column: 3, scope: !4391)
!4458 = !DILocation(line: 453, column: 3, scope: !4391)
!4459 = !DILocation(line: 474, column: 15, scope: !4377)
!4460 = !DILocation(line: 476, column: 11, scope: !4399)
!4461 = !DILocation(line: 476, column: 6, scope: !4377)
!4462 = !DILocation(line: 477, column: 42, scope: !4398)
!4463 = !DILocation(line: 477, column: 22, scope: !4398)
!4464 = !DILocation(line: 477, column: 60, scope: !4398)
!4465 = !DILocation(line: 0, scope: !4398)
!4466 = !DILocation(line: 479, column: 21, scope: !4398)
!4467 = !DILocation(line: 479, column: 3, scope: !4398)
!4468 = !DILocation(line: 480, column: 3, scope: !4398)
!4469 = !DILocation(line: 481, column: 2, scope: !4398)
!4470 = !DILocation(line: 483, column: 1, scope: !4377)
!4471 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2689, file: !2689, line: 245, type: !4472, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4474)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!204, !2702, !3919}
!4474 = !{!4475, !4476}
!4475 = !DILocalVariable(name: "h", arg: 1, scope: !4471, file: !2689, line: 245, type: !2702)
!4476 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4471, file: !2689, line: 245, type: !3919)
!4477 = !DILocation(line: 0, scope: !4471)
!4478 = !DILocation(line: 247, column: 20, scope: !4471)
!4479 = !DILocation(line: 247, column: 33, scope: !4471)
!4480 = !DILocation(line: 247, column: 2, scope: !4471)
!4481 = distinct !DISubprogram(name: "sys_heap_init", scope: !3793, file: !3793, line: 485, type: !4482, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{null, !3796, !102, !204}
!4484 = !{!4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494}
!4485 = !DILocalVariable(name: "heap", arg: 1, scope: !4481, file: !3793, line: 485, type: !3796)
!4486 = !DILocalVariable(name: "mem", arg: 2, scope: !4481, file: !3793, line: 485, type: !102)
!4487 = !DILocalVariable(name: "bytes", arg: 3, scope: !4481, file: !3793, line: 485, type: !204)
!4488 = !DILocalVariable(name: "addr", scope: !4481, file: !3793, line: 502, type: !22)
!4489 = !DILocalVariable(name: "end", scope: !4481, file: !3793, line: 503, type: !22)
!4490 = !DILocalVariable(name: "heap_sz", scope: !4481, file: !3793, line: 504, type: !3919)
!4491 = !DILocalVariable(name: "h", scope: !4481, file: !3793, line: 509, type: !2702)
!4492 = !DILocalVariable(name: "nb_buckets", scope: !4481, file: !3793, line: 520, type: !103)
!4493 = !DILocalVariable(name: "chunk0_size", scope: !4481, file: !3793, line: 521, type: !3919)
!4494 = !DILocalVariable(name: "i", scope: !4495, file: !3793, line: 526, type: !103)
!4495 = distinct !DILexicalBlock(scope: !4481, file: !3793, line: 526, column: 2)
!4496 = !DILocation(line: 0, scope: !4481)
!4497 = !DILocation(line: 499, column: 8, scope: !4481)
!4498 = !DILocation(line: 502, column: 19, scope: !4481)
!4499 = !DILocation(line: 503, column: 18, scope: !4481)
!4500 = !DILocation(line: 504, column: 27, scope: !4481)
!4501 = !DILocation(line: 504, column: 35, scope: !4481)
!4502 = !DILocation(line: 509, column: 21, scope: !4481)
!4503 = !DILocation(line: 510, column: 8, scope: !4481)
!4504 = !DILocation(line: 510, column: 13, scope: !4481)
!4505 = !DILocation(line: 511, column: 5, scope: !4481)
!4506 = !DILocation(line: 511, column: 15, scope: !4481)
!4507 = !DILocation(line: 512, column: 5, scope: !4481)
!4508 = !DILocation(line: 512, column: 19, scope: !4481)
!4509 = !DILocation(line: 520, column: 19, scope: !4481)
!4510 = !DILocation(line: 522, column: 21, scope: !4481)
!4511 = !DILocation(line: 521, column: 56, scope: !4481)
!4512 = !DILocation(line: 521, column: 26, scope: !4481)
!4513 = !DILocation(line: 0, scope: !4495)
!4514 = !DILocation(line: 526, column: 20, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4495, file: !3793, line: 526, column: 2)
!4516 = !DILocation(line: 526, column: 2, scope: !4495)
!4517 = !DILocation(line: 531, column: 2, scope: !4481)
!4518 = !DILocation(line: 532, column: 2, scope: !4481)
!4519 = !DILocation(line: 533, column: 2, scope: !4481)
!4520 = !DILocation(line: 536, column: 41, scope: !4481)
!4521 = !DILocation(line: 536, column: 2, scope: !4481)
!4522 = !DILocation(line: 537, column: 2, scope: !4481)
!4523 = !DILocation(line: 540, column: 2, scope: !4481)
!4524 = !DILocation(line: 541, column: 2, scope: !4481)
!4525 = !DILocation(line: 542, column: 2, scope: !4481)
!4526 = !DILocation(line: 544, column: 2, scope: !4481)
!4527 = !DILocation(line: 545, column: 1, scope: !4481)
!4528 = !DILocation(line: 527, column: 17, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4515, file: !3793, line: 526, column: 39)
!4530 = !DILocation(line: 527, column: 22, scope: !4529)
!4531 = !DILocation(line: 526, column: 35, scope: !4515)
!4532 = distinct !{!4532, !4516, !4533}
!4533 = !DILocation(line: 528, column: 2, scope: !4495)
!4534 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2722, file: !2722, line: 1338, type: !4535, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !4543)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!103, !3523, !102, !144, !4537, !121}
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3489, line: 99, baseType: !4538)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3489, line: 40, baseType: !4539)
!4539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2722, baseType: !4540)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4541)
!4541 = !{!4542}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4540, file: !2722, baseType: !102, size: 32)
!4543 = !{!4544, !4545, !4546, !4547, !4548, !4549, !4553, !4554, !4555, !4557, !4562, !4607, !4610, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4622, !4623, !4624, !4628, !4631, !4633, !4636, !4637, !4638, !4643, !4649, !4652, !4656, !4662, !4666, !4669, !4671, !4674}
!4544 = !DILocalVariable(name: "out", arg: 1, scope: !4534, file: !2722, line: 1338, type: !3523)
!4545 = !DILocalVariable(name: "ctx", arg: 2, scope: !4534, file: !2722, line: 1338, type: !102)
!4546 = !DILocalVariable(name: "fp", arg: 3, scope: !4534, file: !2722, line: 1338, type: !144)
!4547 = !DILocalVariable(name: "ap", arg: 4, scope: !4534, file: !2722, line: 1339, type: !4537)
!4548 = !DILocalVariable(name: "flags", arg: 5, scope: !4534, file: !2722, line: 1339, type: !121)
!4549 = !DILocalVariable(name: "buf", scope: !4534, file: !2722, line: 1341, type: !4550)
!4550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4551)
!4551 = !{!4552}
!4552 = !DISubrange(count: 22)
!4553 = !DILocalVariable(name: "count", scope: !4534, file: !2722, line: 1342, type: !204)
!4554 = !DILocalVariable(name: "sint", scope: !4534, file: !2722, line: 1343, type: !2741)
!4555 = !DILocalVariable(name: "tagged_ap", scope: !4534, file: !2722, line: 1345, type: !4556)
!4556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4557 = !DILocalVariable(name: "rc", scope: !4558, file: !2722, line: 1377, type: !103)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2722, line: 1377, column: 4)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2722, line: 1376, column: 19)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1376, column: 7)
!4561 = distinct !DILexicalBlock(scope: !4534, file: !2722, line: 1375, column: 19)
!4562 = !DILocalVariable(name: "state", scope: !4561, file: !2722, line: 1395, type: !4563)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4534, file: !2722, line: 1392, size: 192, elements: !4564)
!4564 = !{!4565, !4575}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4563, file: !2722, line: 1393, baseType: !4566, size: 64)
!4566 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2722, line: 166, size: 64, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4572, !4574}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4566, file: !2722, line: 168, baseType: !2741, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4566, file: !2722, line: 171, baseType: !2744, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4566, file: !2722, line: 174, baseType: !4571, size: 64)
!4571 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4566, file: !2722, line: 177, baseType: !4573, size: 64)
!4573 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4566, file: !2722, line: 180, baseType: !102, size: 32)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4563, file: !2722, line: 1394, baseType: !4576, size: 96, offset: 64)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2722, line: 189, size: 96, elements: !4577)
!4577 = !{!4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4602}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4576, file: !2722, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4576, file: !2722, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4576, file: !2722, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4576, file: !2722, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4576, file: !2722, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4576, file: !2722, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4576, file: !2722, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4576, file: !2722, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4576, file: !2722, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4576, file: !2722, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4576, file: !2722, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4576, file: !2722, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4576, file: !2722, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4576, file: !2722, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4576, file: !2722, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4576, file: !2722, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4576, file: !2722, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4576, file: !2722, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4576, file: !2722, line: 260, baseType: !155, size: 8, offset: 24)
!4597 = !DIDerivedType(tag: DW_TAG_member, scope: !4576, file: !2722, line: 262, baseType: !4598, size: 32, offset: 32)
!4598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4576, file: !2722, line: 262, size: 32, elements: !4599)
!4599 = !{!4600, !4601}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4598, file: !2722, line: 267, baseType: !103, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4598, file: !2722, line: 289, baseType: !103, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, scope: !4576, file: !2722, line: 292, baseType: !4603, size: 32, offset: 64)
!4603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4576, file: !2722, line: 292, size: 32, elements: !4604)
!4604 = !{!4605, !4606}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4603, file: !2722, line: 297, baseType: !103, size: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4603, file: !2722, line: 306, baseType: !103, size: 32)
!4607 = !DILocalVariable(name: "conv", scope: !4561, file: !2722, line: 1400, type: !4608)
!4608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4609)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 32)
!4610 = !DILocalVariable(name: "value", scope: !4561, file: !2722, line: 1401, type: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4612)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 32)
!4613 = !DILocalVariable(name: "sp", scope: !4561, file: !2722, line: 1402, type: !144)
!4614 = !DILocalVariable(name: "width", scope: !4561, file: !2722, line: 1403, type: !103)
!4615 = !DILocalVariable(name: "precision", scope: !4561, file: !2722, line: 1404, type: !103)
!4616 = !DILocalVariable(name: "bps", scope: !4561, file: !2722, line: 1405, type: !144)
!4617 = !DILocalVariable(name: "bpe", scope: !4561, file: !2722, line: 1406, type: !144)
!4618 = !DILocalVariable(name: "sign", scope: !4561, file: !2722, line: 1407, type: !146)
!4619 = !DILocalVariable(name: "arg", scope: !4620, file: !2722, line: 1432, type: !103)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2722, line: 1431, column: 24)
!4621 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1431, column: 7)
!4622 = !DILocalVariable(name: "specifier_cat", scope: !4561, file: !2722, line: 1468, type: !2721)
!4623 = !DILocalVariable(name: "length_mod", scope: !4561, file: !2722, line: 1470, type: !2729)
!4624 = !DILocalVariable(name: "rc", scope: !4625, file: !2722, line: 1575, type: !103)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2722, line: 1575, column: 4)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2722, line: 1574, column: 43)
!4627 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1574, column: 7)
!4628 = !DILocalVariable(name: "rc", scope: !4629, file: !2722, line: 1584, type: !103)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1584, column: 4)
!4630 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1582, column: 28)
!4631 = !DILocalVariable(name: "len", scope: !4632, file: !2722, line: 1589, type: !204)
!4632 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1586, column: 13)
!4633 = !DILocalVariable(name: "len", scope: !4634, file: !2722, line: 1641, type: !204)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2722, line: 1640, column: 24)
!4635 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1640, column: 8)
!4636 = !DILocalVariable(name: "nj_len", scope: !4561, file: !2722, line: 1722, type: !204)
!4637 = !DILocalVariable(name: "pad_len", scope: !4561, file: !2722, line: 1723, type: !103)
!4638 = !DILocalVariable(name: "pad", scope: !4639, file: !2722, line: 1751, type: !146)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2722, line: 1750, column: 26)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !2722, line: 1750, column: 8)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2722, line: 1747, column: 18)
!4642 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1747, column: 7)
!4643 = !DILocalVariable(name: "rc", scope: !4644, file: !2722, line: 1758, type: !103)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2722, line: 1758, column: 7)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2722, line: 1757, column: 21)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2722, line: 1757, column: 10)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2722, line: 1756, column: 26)
!4648 = distinct !DILexicalBlock(scope: !4639, file: !2722, line: 1756, column: 9)
!4649 = !DILocalVariable(name: "rc", scope: !4650, file: !2722, line: 1765, type: !103)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2722, line: 1765, column: 6)
!4651 = distinct !DILexicalBlock(scope: !4639, file: !2722, line: 1764, column: 25)
!4652 = !DILocalVariable(name: "rc", scope: !4653, file: !2722, line: 1774, type: !103)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2722, line: 1774, column: 4)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2722, line: 1773, column: 18)
!4655 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1773, column: 7)
!4656 = !DILocalVariable(name: "rc", scope: !4657, file: !2722, line: 1819, type: !103)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2722, line: 1819, column: 5)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !2722, line: 1818, column: 44)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2722, line: 1818, column: 8)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2722, line: 1817, column: 10)
!4661 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1777, column: 7)
!4662 = !DILocalVariable(name: "rc", scope: !4663, file: !2722, line: 1823, type: !103)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2722, line: 1823, column: 5)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2722, line: 1822, column: 26)
!4665 = distinct !DILexicalBlock(scope: !4660, file: !2722, line: 1822, column: 8)
!4666 = !DILocalVariable(name: "rc", scope: !4667, file: !2722, line: 1828, type: !103)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !2722, line: 1828, column: 5)
!4668 = distinct !DILexicalBlock(scope: !4660, file: !2722, line: 1827, column: 26)
!4669 = !DILocalVariable(name: "rc", scope: !4670, file: !2722, line: 1831, type: !103)
!4670 = distinct !DILexicalBlock(scope: !4660, file: !2722, line: 1831, column: 4)
!4671 = !DILocalVariable(name: "rc", scope: !4672, file: !2722, line: 1836, type: !103)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !2722, line: 1836, column: 4)
!4673 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1835, column: 21)
!4674 = !DILabel(scope: !4630, name: "prec_int_pad0", file: !2722, line: 1634)
!4675 = !DILocation(line: 0, scope: !4534)
!4676 = !DILocation(line: 1341, column: 2, scope: !4534)
!4677 = !DILocation(line: 1341, column: 7, scope: !4534)
!4678 = !DILocation(line: 1375, column: 2, scope: !4534)
!4679 = !DILocation(line: 1342, column: 9, scope: !4534)
!4680 = !DILocation(line: 1375, column: 9, scope: !4534)
!4681 = !DILocation(line: 1377, column: 4, scope: !4558)
!4682 = !DILocation(line: 0, scope: !4558)
!4683 = !DILocation(line: 1377, column: 4, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4558, file: !2722, line: 1377, column: 4)
!4685 = distinct !{!4685, !4678, !4686}
!4686 = !DILocation(line: 1839, column: 2, scope: !4534)
!4687 = !DILocation(line: 1392, column: 3, scope: !4561)
!4688 = !DILocation(line: 1395, column: 5, scope: !4561)
!4689 = !DILocation(line: 0, scope: !4561)
!4690 = !DILocation(line: 1409, column: 8, scope: !4561)
!4691 = !DILocation(line: 1414, column: 13, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1414, column: 7)
!4693 = !DILocation(line: 1414, column: 7, scope: !4561)
!4694 = !DILocation(line: 1415, column: 12, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4692, file: !2722, line: 1414, column: 25)
!4696 = !DILocation(line: 1417, column: 14, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4695, file: !2722, line: 1417, column: 8)
!4698 = !DILocation(line: 1417, column: 8, scope: !4695)
!4699 = !DILocation(line: 1418, column: 21, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4697, file: !2722, line: 1417, column: 19)
!4701 = !DILocation(line: 1419, column: 13, scope: !4700)
!4702 = !DILocation(line: 1420, column: 4, scope: !4700)
!4703 = !DILocation(line: 1421, column: 20, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4692, file: !2722, line: 1421, column: 14)
!4705 = !DILocation(line: 1421, column: 14, scope: !4692)
!4706 = !DILocation(line: 1431, column: 13, scope: !4621)
!4707 = !DILocation(line: 1431, column: 7, scope: !4561)
!4708 = !DILocation(line: 1432, column: 14, scope: !4620)
!4709 = !DILocation(line: 0, scope: !4620)
!4710 = !DILocation(line: 1434, column: 12, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4620, file: !2722, line: 1434, column: 8)
!4712 = !DILocation(line: 1434, column: 8, scope: !4620)
!4713 = !DILocation(line: 1435, column: 24, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4711, file: !2722, line: 1434, column: 17)
!4715 = !DILocation(line: 1436, column: 4, scope: !4714)
!4716 = !DILocation(line: 1439, column: 20, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4621, file: !2722, line: 1439, column: 14)
!4718 = !DILocation(line: 1439, column: 14, scope: !4621)
!4719 = !DILocation(line: 1469, column: 37, scope: !4561)
!4720 = !DILocation(line: 1448, column: 20, scope: !4561)
!4721 = !DILocation(line: 1449, column: 22, scope: !4561)
!4722 = !DILocation(line: 1471, column: 34, scope: !4561)
!4723 = !DILocation(line: 1478, column: 7, scope: !4561)
!4724 = !DILocation(line: 1479, column: 4, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2722, line: 1478, column: 40)
!4726 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1478, column: 7)
!4727 = !DILocation(line: 1484, column: 19, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !2722, line: 1479, column: 24)
!4729 = !DILocation(line: 1484, column: 17, scope: !4728)
!4730 = !DILocation(line: 1485, column: 5, scope: !4728)
!4731 = !DILocation(line: 1492, column: 20, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2722, line: 1491, column: 12)
!4733 = distinct !DILexicalBlock(scope: !4728, file: !2722, line: 1487, column: 9)
!4734 = !DILocation(line: 1492, column: 18, scope: !4732)
!4735 = !DILocation(line: 1494, column: 5, scope: !4728)
!4736 = !DILocation(line: 1497, column: 23, scope: !4728)
!4737 = !DILocation(line: 1496, column: 17, scope: !4728)
!4738 = !DILocation(line: 1498, column: 5, scope: !4728)
!4739 = !DILocation(line: 1501, column: 23, scope: !4728)
!4740 = !DILocation(line: 1500, column: 17, scope: !4728)
!4741 = !DILocation(line: 1502, column: 5, scope: !4728)
!4742 = !DILocation(line: 1513, column: 23, scope: !4728)
!4743 = !DILocation(line: 1513, column: 6, scope: !4728)
!4744 = !DILocation(line: 1512, column: 17, scope: !4728)
!4745 = !DILocation(line: 1514, column: 5, scope: !4728)
!4746 = !DILocation(line: 0, scope: !4728)
!4747 = !DILocation(line: 1516, column: 8, scope: !4725)
!4748 = !DILocation(line: 1517, column: 19, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !2722, line: 1516, column: 33)
!4750 = distinct !DILexicalBlock(scope: !4725, file: !2722, line: 1516, column: 8)
!4751 = !DILocation(line: 1517, column: 17, scope: !4749)
!4752 = !DILocation(line: 1518, column: 4, scope: !4749)
!4753 = !DILocation(line: 1519, column: 19, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !2722, line: 1518, column: 39)
!4755 = distinct !DILexicalBlock(scope: !4750, file: !2722, line: 1518, column: 15)
!4756 = !DILocation(line: 1519, column: 17, scope: !4754)
!4757 = !DILocation(line: 1520, column: 4, scope: !4754)
!4758 = !DILocation(line: 1522, column: 4, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !2722, line: 1521, column: 47)
!4760 = distinct !DILexicalBlock(scope: !4726, file: !2722, line: 1521, column: 14)
!4761 = !DILocation(line: 1527, column: 19, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !2722, line: 1522, column: 24)
!4763 = !DILocation(line: 1527, column: 17, scope: !4762)
!4764 = !DILocation(line: 1528, column: 5, scope: !4762)
!4765 = !DILocation(line: 0, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !2722, line: 1530, column: 9)
!4767 = !DILocation(line: 1540, column: 23, scope: !4762)
!4768 = !DILocation(line: 1539, column: 17, scope: !4762)
!4769 = !DILocation(line: 1542, column: 5, scope: !4762)
!4770 = !DILocation(line: 1545, column: 23, scope: !4762)
!4771 = !DILocation(line: 1544, column: 17, scope: !4762)
!4772 = !DILocation(line: 1547, column: 5, scope: !4762)
!4773 = !DILocation(line: 1551, column: 23, scope: !4762)
!4774 = !DILocation(line: 1551, column: 6, scope: !4762)
!4775 = !DILocation(line: 1550, column: 17, scope: !4762)
!4776 = !DILocation(line: 1552, column: 5, scope: !4762)
!4777 = !DILocation(line: 0, scope: !4762)
!4778 = !DILocation(line: 1554, column: 8, scope: !4759)
!4779 = !DILocation(line: 1555, column: 19, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !2722, line: 1554, column: 33)
!4781 = distinct !DILexicalBlock(scope: !4759, file: !2722, line: 1554, column: 8)
!4782 = !DILocation(line: 1555, column: 17, scope: !4780)
!4783 = !DILocation(line: 1556, column: 4, scope: !4780)
!4784 = !DILocation(line: 1557, column: 19, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !2722, line: 1556, column: 39)
!4786 = distinct !DILexicalBlock(scope: !4781, file: !2722, line: 1556, column: 15)
!4787 = !DILocation(line: 1557, column: 17, scope: !4785)
!4788 = !DILocation(line: 1558, column: 4, scope: !4785)
!4789 = !DILocation(line: 0, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2722, line: 1560, column: 8)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !2722, line: 1559, column: 45)
!4792 = distinct !DILexicalBlock(scope: !4760, file: !2722, line: 1559, column: 14)
!4793 = !DILocation(line: 1566, column: 17, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !2722, line: 1565, column: 46)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !2722, line: 1565, column: 14)
!4796 = !DILocation(line: 1566, column: 15, scope: !4794)
!4797 = !DILocation(line: 1567, column: 3, scope: !4794)
!4798 = !DILocation(line: 1574, column: 21, scope: !4627)
!4799 = !DILocation(line: 1575, column: 4, scope: !4625)
!4800 = !DILocation(line: 0, scope: !4625)
!4801 = !DILocation(line: 1575, column: 4, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4625, file: !2722, line: 1575, column: 4)
!4803 = !DILocation(line: 1582, column: 17, scope: !4561)
!4804 = !DILocation(line: 1582, column: 3, scope: !4561)
!4805 = !DILocation(line: 1584, column: 4, scope: !4629)
!4806 = !DILocation(line: 0, scope: !4629)
!4807 = !DILocation(line: 1584, column: 4, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4629, file: !2722, line: 1584, column: 4)
!4809 = !DILocation(line: 1587, column: 31, scope: !4632)
!4810 = !DILocation(line: 1591, column: 18, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4632, file: !2722, line: 1591, column: 8)
!4812 = !DILocation(line: 1591, column: 8, scope: !4632)
!4813 = !DILocation(line: 1592, column: 11, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !2722, line: 1591, column: 24)
!4815 = !DILocation(line: 0, scope: !4632)
!4816 = !DILocation(line: 1593, column: 4, scope: !4814)
!4817 = !DILocation(line: 1594, column: 11, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !2722, line: 1593, column: 11)
!4819 = !DILocation(line: 1604, column: 51, scope: !4630)
!4820 = !DILocation(line: 1604, column: 13, scope: !4630)
!4821 = !DILocation(line: 1604, column: 11, scope: !4630)
!4822 = !DILocation(line: 1606, column: 4, scope: !4630)
!4823 = !DILocation(line: 1609, column: 14, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1609, column: 8)
!4825 = !DILocation(line: 1609, column: 8, scope: !4630)
!4826 = !DILocation(line: 1619, column: 18, scope: !4630)
!4827 = !DILocation(line: 1620, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1620, column: 8)
!4829 = !DILocation(line: 1620, column: 8, scope: !4630)
!4830 = !DILocation(line: 1622, column: 36, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !2722, line: 1620, column: 18)
!4832 = !DILocation(line: 1622, column: 17, scope: !4831)
!4833 = !DILocation(line: 1623, column: 4, scope: !4831)
!4834 = !DILocation(line: 1632, column: 29, scope: !4630)
!4835 = !DILocation(line: 1632, column: 10, scope: !4630)
!4836 = !DILocation(line: 1632, column: 4, scope: !4630)
!4837 = !DILocation(line: 1407, column: 8, scope: !4561)
!4838 = !DILocation(line: 0, scope: !4630)
!4839 = !DILocation(line: 1634, column: 3, scope: !4630)
!4840 = !DILocation(line: 1640, column: 18, scope: !4635)
!4841 = !DILocation(line: 1640, column: 8, scope: !4630)
!4842 = !DILocation(line: 1729, column: 13, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1729, column: 7)
!4844 = !DILocation(line: 1641, column: 22, scope: !4634)
!4845 = !DILocation(line: 0, scope: !4634)
!4846 = !DILocation(line: 1646, column: 21, scope: !4634)
!4847 = !DILocation(line: 1649, column: 13, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4634, file: !2722, line: 1649, column: 9)
!4849 = !DILocation(line: 1649, column: 9, scope: !4634)
!4850 = !DILocation(line: 1650, column: 35, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4848, file: !2722, line: 1649, column: 34)
!4852 = !DILocation(line: 1650, column: 23, scope: !4851)
!4853 = !DILocation(line: 1651, column: 5, scope: !4851)
!4854 = !DILocation(line: 1660, column: 15, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1660, column: 8)
!4856 = !DILocation(line: 1660, column: 19, scope: !4855)
!4857 = !DILocation(line: 1660, column: 8, scope: !4630)
!4858 = !DILocation(line: 1661, column: 23, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !2722, line: 1660, column: 28)
!4860 = !DILocation(line: 1661, column: 11, scope: !4859)
!4861 = !DILocation(line: 1665, column: 22, scope: !4859)
!4862 = !DILocation(line: 1666, column: 21, scope: !4859)
!4863 = !DILocation(line: 1668, column: 5, scope: !4859)
!4864 = !DILocation(line: 1677, column: 30, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2722, line: 1676, column: 49)
!4866 = distinct !DILexicalBlock(scope: !4630, file: !2722, line: 1676, column: 8)
!4867 = !DILocation(line: 1677, column: 5, scope: !4865)
!4868 = !DILocation(line: 1680, column: 4, scope: !4630)
!4869 = !DILocation(line: 0, scope: !4811)
!4870 = !DILocation(line: 1597, column: 14, scope: !4632)
!4871 = !DILocation(line: 1699, column: 11, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1699, column: 7)
!4873 = !DILocation(line: 1699, column: 7, scope: !4561)
!4874 = !DILocation(line: 1725, column: 7, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1725, column: 7)
!4876 = !DILocation(line: 1725, column: 12, scope: !4875)
!4877 = !DILocation(line: 1747, column: 13, scope: !4642)
!4878 = !DILocation(line: 1747, column: 7, scope: !4561)
!4879 = !DILocation(line: 1722, column: 24, scope: !4561)
!4880 = !DILocation(line: 1725, column: 7, scope: !4561)
!4881 = !DILocation(line: 1729, column: 7, scope: !4561)
!4882 = !DILocation(line: 1736, column: 13, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4561, file: !2722, line: 1736, column: 7)
!4884 = !DILocation(line: 1735, column: 19, scope: !4561)
!4885 = !DILocation(line: 1736, column: 7, scope: !4561)
!4886 = !DILocation(line: 1748, column: 10, scope: !4641)
!4887 = !DILocation(line: 1750, column: 15, scope: !4640)
!4888 = !DILocation(line: 1750, column: 8, scope: !4641)
!4889 = !DILocation(line: 0, scope: !4639)
!4890 = !DILocation(line: 1756, column: 15, scope: !4648)
!4891 = !DILocation(line: 1756, column: 9, scope: !4639)
!4892 = !DILocation(line: 1758, column: 7, scope: !4644)
!4893 = !DILocation(line: 0, scope: !4644)
!4894 = !DILocation(line: 1758, column: 7, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4644, file: !2722, line: 1758, column: 7)
!4896 = !DILocation(line: 1764, column: 5, scope: !4639)
!4897 = !DILocation(line: 0, scope: !4641)
!4898 = !DILocation(line: 1764, column: 20, scope: !4639)
!4899 = !DILocation(line: 1764, column: 17, scope: !4639)
!4900 = !DILocation(line: 1765, column: 6, scope: !4650)
!4901 = !DILocation(line: 0, scope: !4650)
!4902 = !DILocation(line: 1765, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4650, file: !2722, line: 1765, column: 6)
!4904 = distinct !{!4904, !4896, !4905}
!4905 = !DILocation(line: 1766, column: 5, scope: !4639)
!4906 = !DILocation(line: 1773, column: 12, scope: !4655)
!4907 = !DILocation(line: 1773, column: 7, scope: !4561)
!4908 = !DILocation(line: 1773, column: 7, scope: !4655)
!4909 = !DILocation(line: 1774, column: 4, scope: !4653)
!4910 = !DILocation(line: 0, scope: !4653)
!4911 = !DILocation(line: 1774, column: 4, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4653, file: !2722, line: 1774, column: 4)
!4913 = !DILocation(line: 1818, column: 8, scope: !4659)
!4914 = !DILocation(line: 1818, column: 27, scope: !4659)
!4915 = !DILocation(line: 1818, column: 25, scope: !4659)
!4916 = !DILocation(line: 1818, column: 8, scope: !4660)
!4917 = !DILocation(line: 1819, column: 5, scope: !4657)
!4918 = !DILocation(line: 0, scope: !4657)
!4919 = !DILocation(line: 1819, column: 5, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4657, file: !2722, line: 1819, column: 5)
!4921 = !DILocation(line: 1822, column: 14, scope: !4665)
!4922 = !DILocation(line: 1822, column: 8, scope: !4660)
!4923 = !DILocation(line: 1823, column: 5, scope: !4663)
!4924 = !DILocation(line: 0, scope: !4663)
!4925 = !DILocation(line: 1823, column: 5, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4663, file: !2722, line: 1823, column: 5)
!4927 = !DILocation(line: 1826, column: 20, scope: !4660)
!4928 = !DILocation(line: 1827, column: 4, scope: !4660)
!4929 = !DILocation(line: 0, scope: !4660)
!4930 = !DILocation(line: 1827, column: 21, scope: !4660)
!4931 = !DILocation(line: 1827, column: 18, scope: !4660)
!4932 = !DILocation(line: 1828, column: 5, scope: !4667)
!4933 = !DILocation(line: 0, scope: !4667)
!4934 = !DILocation(line: 1828, column: 5, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4667, file: !2722, line: 1828, column: 5)
!4936 = distinct !{!4936, !4928, !4937}
!4937 = !DILocation(line: 1829, column: 4, scope: !4660)
!4938 = !DILocation(line: 1831, column: 4, scope: !4670)
!4939 = !DILocation(line: 0, scope: !4670)
!4940 = !DILocation(line: 1831, column: 4, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4670, file: !2722, line: 1831, column: 4)
!4942 = !DILocation(line: 1835, column: 16, scope: !4561)
!4943 = !DILocation(line: 1835, column: 3, scope: !4561)
!4944 = !DILocation(line: 1836, column: 4, scope: !4672)
!4945 = !DILocation(line: 0, scope: !4672)
!4946 = !DILocation(line: 1836, column: 4, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4672, file: !2722, line: 1836, column: 4)
!4948 = !DILocation(line: 1837, column: 4, scope: !4673)
!4949 = distinct !{!4949, !4943, !4950}
!4950 = !DILocation(line: 1838, column: 3, scope: !4561)
!4951 = !DILocation(line: 1844, column: 1, scope: !4534)
!4952 = distinct !DISubprogram(name: "extract_conversion", scope: !2722, file: !2722, line: 642, type: !4953, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!144, !4609, !144}
!4955 = !{!4956, !4957}
!4956 = !DILocalVariable(name: "conv", arg: 1, scope: !4952, file: !2722, line: 642, type: !4609)
!4957 = !DILocalVariable(name: "sp", arg: 2, scope: !4952, file: !2722, line: 643, type: !144)
!4958 = !DILocation(line: 0, scope: !4952)
!4959 = !DILocation(line: 645, column: 10, scope: !4952)
!4960 = !DILocation(line: 653, column: 2, scope: !4952)
!4961 = !DILocation(line: 654, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !2722, line: 654, column: 6)
!4963 = !DILocation(line: 654, column: 10, scope: !4962)
!4964 = !DILocation(line: 654, column: 6, scope: !4952)
!4965 = !DILocation(line: 655, column: 24, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4962, file: !2722, line: 654, column: 18)
!4967 = !DILocation(line: 655, column: 19, scope: !4966)
!4968 = !DILocation(line: 656, column: 3, scope: !4966)
!4969 = !DILocation(line: 659, column: 7, scope: !4952)
!4970 = !DILocation(line: 660, column: 7, scope: !4952)
!4971 = !DILocation(line: 661, column: 7, scope: !4952)
!4972 = !DILocation(line: 662, column: 7, scope: !4952)
!4973 = !DILocation(line: 663, column: 7, scope: !4952)
!4974 = !DILocation(line: 665, column: 2, scope: !4952)
!4975 = !DILocation(line: 666, column: 1, scope: !4952)
!4976 = distinct !DISubprogram(name: "outs", scope: !2722, file: !2722, line: 1319, type: !4977, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !4979)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!103, !3523, !102, !144, !144}
!4979 = !{!4980, !4981, !4982, !4983, !4984, !4985}
!4980 = !DILocalVariable(name: "out", arg: 1, scope: !4976, file: !2722, line: 1319, type: !3523)
!4981 = !DILocalVariable(name: "ctx", arg: 2, scope: !4976, file: !2722, line: 1320, type: !102)
!4982 = !DILocalVariable(name: "sp", arg: 3, scope: !4976, file: !2722, line: 1321, type: !144)
!4983 = !DILocalVariable(name: "ep", arg: 4, scope: !4976, file: !2722, line: 1322, type: !144)
!4984 = !DILocalVariable(name: "count", scope: !4976, file: !2722, line: 1324, type: !204)
!4985 = !DILocalVariable(name: "rc", scope: !4986, file: !2722, line: 1327, type: !103)
!4986 = distinct !DILexicalBlock(scope: !4976, file: !2722, line: 1326, column: 45)
!4987 = !DILocation(line: 0, scope: !4976)
!4988 = !DILocation(line: 1326, column: 2, scope: !4976)
!4989 = !DILocation(line: 1324, column: 9, scope: !4976)
!4990 = !DILocation(line: 1326, column: 13, scope: !4976)
!4991 = !DILocation(line: 1326, column: 19, scope: !4976)
!4992 = !DILocation(line: 1327, column: 21, scope: !4986)
!4993 = !DILocation(line: 1326, column: 36, scope: !4976)
!4994 = !DILocation(line: 1326, column: 39, scope: !4976)
!4995 = !DILocation(line: 1327, column: 24, scope: !4986)
!4996 = !DILocation(line: 1327, column: 16, scope: !4986)
!4997 = !DILocation(line: 1327, column: 12, scope: !4986)
!4998 = !DILocation(line: 0, scope: !4986)
!4999 = !DILocation(line: 1329, column: 10, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4986, file: !2722, line: 1329, column: 7)
!5001 = !DILocation(line: 1329, column: 7, scope: !4986)
!5002 = distinct !{!5002, !4988, !5003}
!5003 = !DILocation(line: 1333, column: 2, scope: !4976)
!5004 = !DILocation(line: 1336, column: 1, scope: !4976)
!5005 = distinct !DISubprogram(name: "encode_uint", scope: !2722, file: !2722, line: 788, type: !5006, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5008)
!5006 = !DISubroutineType(types: !5007)
!5007 = !{!344, !2744, !4609, !344, !144}
!5008 = !{!5009, !5010, !5011, !5012, !5013, !5014, !5016, !5017}
!5009 = !DILocalVariable(name: "value", arg: 1, scope: !5005, file: !2722, line: 788, type: !2744)
!5010 = !DILocalVariable(name: "conv", arg: 2, scope: !5005, file: !2722, line: 789, type: !4609)
!5011 = !DILocalVariable(name: "bps", arg: 3, scope: !5005, file: !2722, line: 790, type: !344)
!5012 = !DILocalVariable(name: "bpe", arg: 4, scope: !5005, file: !2722, line: 791, type: !144)
!5013 = !DILocalVariable(name: "upcase", scope: !5005, file: !2722, line: 793, type: !157)
!5014 = !DILocalVariable(name: "radix", scope: !5005, file: !2722, line: 794, type: !5015)
!5015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5016 = !DILocalVariable(name: "bp", scope: !5005, file: !2722, line: 795, type: !344)
!5017 = !DILocalVariable(name: "lsv", scope: !5018, file: !2722, line: 798, type: !32)
!5018 = distinct !DILexicalBlock(scope: !5005, file: !2722, line: 797, column: 5)
!5019 = !DILocation(line: 0, scope: !5005)
!5020 = !DILocation(line: 793, column: 35, scope: !5005)
!5021 = !DILocation(line: 793, column: 24, scope: !5005)
!5022 = !DILocation(line: 793, column: 16, scope: !5005)
!5023 = !DILocation(line: 794, column: 29, scope: !5005)
!5024 = !DILocation(line: 795, column: 24, scope: !5005)
!5025 = !DILocation(line: 795, column: 17, scope: !5005)
!5026 = !DILocation(line: 797, column: 2, scope: !5005)
!5027 = !DILocation(line: 802, column: 9, scope: !5018)
!5028 = !DILocation(line: 798, column: 22, scope: !5018)
!5029 = !DILocation(line: 0, scope: !5018)
!5030 = !DILocation(line: 800, column: 16, scope: !5018)
!5031 = !DILocation(line: 800, column: 11, scope: !5018)
!5032 = !DILocation(line: 800, column: 4, scope: !5018)
!5033 = !DILocation(line: 800, column: 9, scope: !5018)
!5034 = !DILocation(line: 803, column: 18, scope: !5005)
!5035 = !DILocation(line: 803, column: 24, scope: !5005)
!5036 = !DILocation(line: 803, column: 2, scope: !5018)
!5037 = distinct !{!5037, !5026, !5038}
!5038 = !DILocation(line: 803, column: 37, scope: !5005)
!5039 = !DILocation(line: 808, column: 12, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5005, file: !2722, line: 808, column: 6)
!5041 = !DILocation(line: 808, column: 6, scope: !5005)
!5042 = !DILocation(line: 809, column: 7, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !2722, line: 808, column: 23)
!5044 = !DILocation(line: 813, column: 3, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !2722, line: 811, column: 27)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !2722, line: 811, column: 14)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !2722, line: 809, column: 7)
!5048 = !DILocation(line: 0, scope: !5047)
!5049 = !DILocation(line: 818, column: 2, scope: !5005)
!5050 = distinct !DISubprogram(name: "store_count", scope: !2722, file: !2722, line: 1280, type: !5051, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5055)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{null, !5053, !102, !103}
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 32)
!5054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4576)
!5055 = !{!5056, !5057, !5058}
!5056 = !DILocalVariable(name: "conv", arg: 1, scope: !5050, file: !2722, line: 1280, type: !5053)
!5057 = !DILocalVariable(name: "dp", arg: 2, scope: !5050, file: !2722, line: 1281, type: !102)
!5058 = !DILocalVariable(name: "count", arg: 3, scope: !5050, file: !2722, line: 1282, type: !103)
!5059 = !DILocation(line: 0, scope: !5050)
!5060 = !DILocation(line: 1284, column: 38, scope: !5050)
!5061 = !DILocation(line: 1284, column: 2, scope: !5050)
!5062 = !DILocation(line: 1286, column: 4, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5050, file: !2722, line: 1284, column: 50)
!5064 = !DILocation(line: 1286, column: 14, scope: !5063)
!5065 = !DILocation(line: 1287, column: 3, scope: !5063)
!5066 = !DILocation(line: 1289, column: 24, scope: !5063)
!5067 = !DILocation(line: 1289, column: 22, scope: !5063)
!5068 = !DILocation(line: 1290, column: 3, scope: !5063)
!5069 = !DILocation(line: 1292, column: 18, scope: !5063)
!5070 = !DILocation(line: 1292, column: 4, scope: !5063)
!5071 = !DILocation(line: 1292, column: 16, scope: !5063)
!5072 = !DILocation(line: 1293, column: 3, scope: !5063)
!5073 = !DILocation(line: 1295, column: 4, scope: !5063)
!5074 = !DILocation(line: 1295, column: 15, scope: !5063)
!5075 = !DILocation(line: 1296, column: 3, scope: !5063)
!5076 = !DILocation(line: 1298, column: 22, scope: !5063)
!5077 = !DILocation(line: 1298, column: 4, scope: !5063)
!5078 = !DILocation(line: 1298, column: 20, scope: !5063)
!5079 = !DILocation(line: 1299, column: 3, scope: !5063)
!5080 = !DILocation(line: 1301, column: 21, scope: !5063)
!5081 = !DILocation(line: 1301, column: 4, scope: !5063)
!5082 = !DILocation(line: 1301, column: 19, scope: !5063)
!5083 = !DILocation(line: 1302, column: 3, scope: !5063)
!5084 = !DILocation(line: 1304, column: 4, scope: !5063)
!5085 = !DILocation(line: 1304, column: 17, scope: !5063)
!5086 = !DILocation(line: 1305, column: 3, scope: !5063)
!5087 = !DILocation(line: 1307, column: 4, scope: !5063)
!5088 = !DILocation(line: 1307, column: 20, scope: !5063)
!5089 = !DILocation(line: 1308, column: 3, scope: !5063)
!5090 = !DILocation(line: 1316, column: 1, scope: !5050)
!5091 = distinct !DISubprogram(name: "isupper", scope: !5092, file: !5092, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5093)
!5092 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5093 = !{!5094}
!5094 = !DILocalVariable(name: "a", arg: 1, scope: !5091, file: !5092, line: 16, type: !103)
!5095 = !DILocation(line: 0, scope: !5091)
!5096 = !DILocation(line: 18, column: 29, scope: !5091)
!5097 = !DILocation(line: 18, column: 45, scope: !5091)
!5098 = !DILocation(line: 18, column: 2, scope: !5091)
!5099 = distinct !DISubprogram(name: "conversion_radix", scope: !2722, file: !2722, line: 761, type: !5100, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!204, !146}
!5102 = !{!5103}
!5103 = !DILocalVariable(name: "specifier", arg: 1, scope: !5099, file: !2722, line: 761, type: !146)
!5104 = !DILocation(line: 0, scope: !5099)
!5105 = !DILocation(line: 763, column: 2, scope: !5099)
!5106 = !DILocation(line: 770, column: 3, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5099, file: !2722, line: 763, column: 21)
!5108 = !DILocation(line: 774, column: 3, scope: !5107)
!5109 = !DILocation(line: 0, scope: !5107)
!5110 = !DILocation(line: 776, column: 1, scope: !5099)
!5111 = distinct !DISubprogram(name: "extract_flags", scope: !2722, file: !2722, line: 339, type: !4953, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5112)
!5112 = !{!5113, !5114, !5115}
!5113 = !DILocalVariable(name: "conv", arg: 1, scope: !5111, file: !2722, line: 339, type: !4609)
!5114 = !DILocalVariable(name: "sp", arg: 2, scope: !5111, file: !2722, line: 340, type: !144)
!5115 = !DILocalVariable(name: "loop", scope: !5111, file: !2722, line: 342, type: !157)
!5116 = !DILocation(line: 0, scope: !5111)
!5117 = !DILocation(line: 344, column: 2, scope: !5111)
!5118 = !DILocation(line: 345, column: 11, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5111, file: !2722, line: 344, column: 5)
!5120 = !DILocation(line: 345, column: 3, scope: !5119)
!5121 = !DILocation(line: 351, column: 4, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5119, file: !2722, line: 345, column: 16)
!5123 = !DILocation(line: 354, column: 4, scope: !5122)
!5124 = !DILocation(line: 357, column: 4, scope: !5122)
!5125 = !DILocation(line: 360, column: 4, scope: !5122)
!5126 = !DILocation(line: 0, scope: !5122)
!5127 = !DILocation(line: 370, column: 12, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5111, file: !2722, line: 370, column: 6)
!5129 = !DILocation(line: 370, column: 22, scope: !5128)
!5130 = !DILocation(line: 371, column: 19, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !2722, line: 370, column: 42)
!5132 = !DILocation(line: 372, column: 2, scope: !5131)
!5133 = !DILocation(line: 376, column: 2, scope: !5111)
!5134 = distinct !DISubprogram(name: "extract_width", scope: !2722, file: !2722, line: 388, type: !4953, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5135)
!5135 = !{!5136, !5137, !5138, !5139}
!5136 = !DILocalVariable(name: "conv", arg: 1, scope: !5134, file: !2722, line: 388, type: !4609)
!5137 = !DILocalVariable(name: "sp", arg: 2, scope: !5134, file: !2722, line: 389, type: !144)
!5138 = !DILocalVariable(name: "wp", scope: !5134, file: !2722, line: 398, type: !144)
!5139 = !DILocalVariable(name: "width", scope: !5134, file: !2722, line: 399, type: !204)
!5140 = !DILocation(line: 0, scope: !5134)
!5141 = !DILocation(line: 391, column: 8, scope: !5134)
!5142 = !DILocation(line: 391, column: 22, scope: !5134)
!5143 = !DILocation(line: 393, column: 6, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5134, file: !2722, line: 393, column: 6)
!5145 = !DILocation(line: 393, column: 10, scope: !5144)
!5146 = !DILocation(line: 393, column: 6, scope: !5134)
!5147 = !DILocation(line: 394, column: 20, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !2722, line: 393, column: 18)
!5149 = !DILocation(line: 395, column: 10, scope: !5148)
!5150 = !DILocation(line: 395, column: 3, scope: !5148)
!5151 = !DILocation(line: 399, column: 17, scope: !5134)
!5152 = !DILocation(line: 401, column: 6, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5134, file: !2722, line: 401, column: 6)
!5154 = !DILocation(line: 401, column: 9, scope: !5153)
!5155 = !DILocation(line: 401, column: 6, scope: !5134)
!5156 = !DILocation(line: 402, column: 23, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !2722, line: 401, column: 16)
!5158 = !DILocation(line: 403, column: 9, scope: !5157)
!5159 = !DILocation(line: 403, column: 21, scope: !5157)
!5160 = !DILocation(line: 405, column: 11, scope: !5157)
!5161 = !DILocation(line: 404, column: 21, scope: !5157)
!5162 = !DILocation(line: 406, column: 2, scope: !5157)
!5163 = !DILocation(line: 409, column: 1, scope: !5134)
!5164 = distinct !DISubprogram(name: "extract_prec", scope: !2722, file: !2722, line: 420, type: !4953, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5165)
!5165 = !{!5166, !5167, !5168}
!5166 = !DILocalVariable(name: "conv", arg: 1, scope: !5164, file: !2722, line: 420, type: !4609)
!5167 = !DILocalVariable(name: "sp", arg: 2, scope: !5164, file: !2722, line: 421, type: !144)
!5168 = !DILocalVariable(name: "prec", scope: !5164, file: !2722, line: 435, type: !204)
!5169 = !DILocation(line: 0, scope: !5164)
!5170 = !DILocation(line: 423, column: 24, scope: !5164)
!5171 = !DILocation(line: 423, column: 28, scope: !5164)
!5172 = !DILocation(line: 423, column: 8, scope: !5164)
!5173 = !DILocation(line: 423, column: 21, scope: !5164)
!5174 = !DILocation(line: 425, column: 6, scope: !5164)
!5175 = !DILocation(line: 428, column: 2, scope: !5164)
!5176 = !DILocation(line: 430, column: 6, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5164, file: !2722, line: 430, column: 6)
!5178 = !DILocation(line: 430, column: 10, scope: !5177)
!5179 = !DILocation(line: 430, column: 6, scope: !5164)
!5180 = !DILocation(line: 431, column: 19, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !2722, line: 430, column: 18)
!5182 = !DILocation(line: 432, column: 10, scope: !5181)
!5183 = !DILocation(line: 432, column: 3, scope: !5181)
!5184 = !DILocation(line: 435, column: 16, scope: !5164)
!5185 = !DILocation(line: 437, column: 8, scope: !5164)
!5186 = !DILocation(line: 437, column: 19, scope: !5164)
!5187 = !DILocation(line: 439, column: 10, scope: !5164)
!5188 = !DILocation(line: 438, column: 20, scope: !5164)
!5189 = !DILocation(line: 441, column: 9, scope: !5164)
!5190 = !DILocation(line: 442, column: 1, scope: !5164)
!5191 = distinct !DISubprogram(name: "extract_length", scope: !2722, file: !2722, line: 453, type: !4953, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5192)
!5192 = !{!5193, !5194}
!5193 = !DILocalVariable(name: "conv", arg: 1, scope: !5191, file: !2722, line: 453, type: !4609)
!5194 = !DILocalVariable(name: "sp", arg: 2, scope: !5191, file: !2722, line: 454, type: !144)
!5195 = !DILocation(line: 0, scope: !5191)
!5196 = !DILocation(line: 456, column: 10, scope: !5191)
!5197 = !DILocation(line: 456, column: 2, scope: !5191)
!5198 = !DILocation(line: 458, column: 8, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !2722, line: 458, column: 7)
!5200 = distinct !DILexicalBlock(scope: !5191, file: !2722, line: 456, column: 15)
!5201 = !DILocation(line: 458, column: 7, scope: !5199)
!5202 = !DILocation(line: 458, column: 13, scope: !5199)
!5203 = !DILocation(line: 0, scope: !5199)
!5204 = !DILocation(line: 458, column: 7, scope: !5200)
!5205 = !DILocation(line: 459, column: 21, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5199, file: !2722, line: 458, column: 21)
!5207 = !DILocation(line: 460, column: 4, scope: !5206)
!5208 = !DILocation(line: 461, column: 3, scope: !5206)
!5209 = !DILocation(line: 462, column: 21, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5199, file: !2722, line: 461, column: 10)
!5211 = !DILocation(line: 466, column: 8, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5200, file: !2722, line: 466, column: 7)
!5213 = !DILocation(line: 466, column: 7, scope: !5212)
!5214 = !DILocation(line: 466, column: 13, scope: !5212)
!5215 = !DILocation(line: 0, scope: !5212)
!5216 = !DILocation(line: 466, column: 7, scope: !5200)
!5217 = !DILocation(line: 467, column: 21, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5212, file: !2722, line: 466, column: 21)
!5219 = !DILocation(line: 468, column: 4, scope: !5218)
!5220 = !DILocation(line: 469, column: 3, scope: !5218)
!5221 = !DILocation(line: 470, column: 21, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5212, file: !2722, line: 469, column: 10)
!5223 = !DILocation(line: 474, column: 9, scope: !5200)
!5224 = !DILocation(line: 474, column: 20, scope: !5200)
!5225 = !DILocation(line: 475, column: 3, scope: !5200)
!5226 = !DILocation(line: 476, column: 3, scope: !5200)
!5227 = !DILocation(line: 478, column: 9, scope: !5200)
!5228 = !DILocation(line: 478, column: 20, scope: !5200)
!5229 = !DILocation(line: 479, column: 3, scope: !5200)
!5230 = !DILocation(line: 480, column: 3, scope: !5200)
!5231 = !DILocation(line: 482, column: 9, scope: !5200)
!5232 = !DILocation(line: 482, column: 20, scope: !5200)
!5233 = !DILocation(line: 483, column: 3, scope: !5200)
!5234 = !DILocation(line: 484, column: 3, scope: !5200)
!5235 = !DILocation(line: 486, column: 9, scope: !5200)
!5236 = !DILocation(line: 486, column: 20, scope: !5200)
!5237 = !DILocation(line: 487, column: 3, scope: !5200)
!5238 = !DILocation(line: 492, column: 21, scope: !5200)
!5239 = !DILocation(line: 493, column: 3, scope: !5200)
!5240 = !DILocation(line: 495, column: 9, scope: !5200)
!5241 = !DILocation(line: 495, column: 20, scope: !5200)
!5242 = !DILocation(line: 496, column: 3, scope: !5200)
!5243 = !DILocation(line: 498, column: 2, scope: !5191)
!5244 = distinct !DISubprogram(name: "extract_specifier", scope: !2722, file: !2722, line: 513, type: !4953, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5245)
!5245 = !{!5246, !5247, !5248, !5249}
!5246 = !DILocalVariable(name: "conv", arg: 1, scope: !5244, file: !2722, line: 513, type: !4609)
!5247 = !DILocalVariable(name: "sp", arg: 2, scope: !5244, file: !2722, line: 514, type: !144)
!5248 = !DILocalVariable(name: "unsupported", scope: !5244, file: !2722, line: 516, type: !157)
!5249 = !DILabel(scope: !5250, name: "int_conv", file: !2722, line: 526)
!5250 = distinct !DILexicalBlock(scope: !5244, file: !2722, line: 520, column: 27)
!5251 = !DILocation(line: 0, scope: !5244)
!5252 = !DILocation(line: 518, column: 20, scope: !5244)
!5253 = !DILocation(line: 518, column: 8, scope: !5244)
!5254 = !DILocation(line: 518, column: 18, scope: !5244)
!5255 = !DILocation(line: 520, column: 2, scope: !5244)
!5256 = !DILocation(line: 525, column: 3, scope: !5250)
!5257 = !DILocation(line: 0, scope: !5250)
!5258 = !DILocation(line: 526, column: 1, scope: !5250)
!5259 = !DILocation(line: 528, column: 24, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5250, file: !2722, line: 528, column: 7)
!5261 = !DILocation(line: 528, column: 7, scope: !5250)
!5262 = !DILocation(line: 535, column: 23, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5250, file: !2722, line: 535, column: 7)
!5264 = !DILocation(line: 535, column: 7, scope: !5250)
!5265 = !DILocation(line: 536, column: 36, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5263, file: !2722, line: 535, column: 31)
!5267 = !DILocation(line: 537, column: 3, scope: !5266)
!5268 = !DILocation(line: 570, column: 9, scope: !5250)
!5269 = !DILocation(line: 570, column: 23, scope: !5250)
!5270 = !DILocation(line: 575, column: 4, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !2722, line: 573, column: 48)
!5272 = distinct !DILexicalBlock(scope: !5250, file: !2722, line: 573, column: 7)
!5273 = !DILocation(line: 603, column: 9, scope: !5250)
!5274 = !DILocation(line: 603, column: 23, scope: !5250)
!5275 = !DILocation(line: 605, column: 24, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5250, file: !2722, line: 605, column: 7)
!5277 = !DILocation(line: 605, column: 7, scope: !5250)
!5278 = !DILocation(line: 612, column: 9, scope: !5250)
!5279 = !DILocation(line: 612, column: 23, scope: !5250)
!5280 = !DILocation(line: 619, column: 24, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5250, file: !2722, line: 619, column: 7)
!5282 = !DILocation(line: 619, column: 7, scope: !5250)
!5283 = !DILocation(line: 625, column: 9, scope: !5250)
!5284 = !DILocation(line: 625, column: 17, scope: !5250)
!5285 = !DILocation(line: 626, column: 3, scope: !5250)
!5286 = !DILocation(line: 629, column: 20, scope: !5244)
!5287 = !DILocation(line: 629, column: 8, scope: !5244)
!5288 = !DILocation(line: 518, column: 23, scope: !5244)
!5289 = !DILocation(line: 631, column: 2, scope: !5244)
!5290 = distinct !DISubprogram(name: "extract_decimal", scope: !2722, file: !2722, line: 318, type: !5291, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5294)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{!204, !5293}
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5294 = !{!5295, !5296, !5297}
!5295 = !DILocalVariable(name: "str", arg: 1, scope: !5290, file: !2722, line: 318, type: !5293)
!5296 = !DILocalVariable(name: "sp", scope: !5290, file: !2722, line: 320, type: !144)
!5297 = !DILocalVariable(name: "val", scope: !5290, file: !2722, line: 321, type: !204)
!5298 = !DILocation(line: 0, scope: !5290)
!5299 = !DILocation(line: 320, column: 19, scope: !5290)
!5300 = !DILocation(line: 323, column: 37, scope: !5290)
!5301 = !DILocation(line: 323, column: 17, scope: !5290)
!5302 = !DILocation(line: 323, column: 9, scope: !5290)
!5303 = !DILocation(line: 323, column: 2, scope: !5290)
!5304 = !DILocation(line: 324, column: 13, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5290, file: !2722, line: 323, column: 43)
!5306 = !DILocation(line: 324, column: 24, scope: !5305)
!5307 = !DILocation(line: 324, column: 19, scope: !5305)
!5308 = !DILocation(line: 324, column: 27, scope: !5305)
!5309 = distinct !{!5309, !5303, !5310}
!5310 = !DILocation(line: 325, column: 2, scope: !5290)
!5311 = !DILocation(line: 326, column: 7, scope: !5290)
!5312 = !DILocation(line: 327, column: 2, scope: !5290)
!5313 = distinct !DISubprogram(name: "isdigit", scope: !5092, file: !5092, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !5314)
!5314 = !{!5315}
!5315 = !DILocalVariable(name: "a", arg: 1, scope: !5313, file: !5092, line: 43, type: !103)
!5316 = !DILocation(line: 0, scope: !5313)
!5317 = !DILocation(line: 45, column: 29, scope: !5313)
!5318 = !DILocation(line: 45, column: 45, scope: !5313)
!5319 = !DILocation(line: 45, column: 2, scope: !5313)
!5320 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5321, file: !5321, line: 9, type: !3339, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !317)
!5321 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!5322 = !DILocation(line: 11, column: 1, scope: !5320)
!5323 = !{i64 2147561558, i64 2147561601, i64 2147561641}
!5324 = !DILocation(line: 12, column: 1, scope: !5320)
!5325 = !{i64 2147565785, i64 2147565828, i64 2147565868}
!5326 = !DILocation(line: 13, column: 1, scope: !5320)
!5327 = !{i64 2147565994, i64 2147566037, i64 2147566077}
!5328 = !DILocation(line: 14, column: 1, scope: !5320)
!5329 = !{i64 2147566211, i64 2147566254, i64 2147566294}
!5330 = !DILocation(line: 15, column: 1, scope: !5320)
!5331 = !{i64 2147566380, i64 2147566423, i64 2147566463}
!5332 = !DILocation(line: 16, column: 1, scope: !5320)
!5333 = !{i64 2147566543, i64 2147566586, i64 2147566626}
!5334 = !DILocation(line: 17, column: 1, scope: !5320)
!5335 = !{i64 2147566727, i64 2147566770, i64 2147566810}
!5336 = !DILocation(line: 18, column: 1, scope: !5320)
!5337 = !{i64 2147566906, i64 2147566949, i64 2147566989}
!5338 = !DILocation(line: 19, column: 1, scope: !5320)
!5339 = !{i64 2147567149, i64 2147567192, i64 2147567232}
!5340 = !DILocation(line: 20, column: 1, scope: !5320)
!5341 = !{i64 2147567384, i64 2147567427, i64 2147567467}
!5342 = !DILocation(line: 21, column: 1, scope: !5320)
!5343 = !{i64 2147567571, i64 2147567614, i64 2147567654}
!5344 = !DILocation(line: 22, column: 1, scope: !5320)
!5345 = !{i64 2147567787, i64 2147567830, i64 2147567870}
!5346 = !DILocation(line: 23, column: 1, scope: !5320)
!5347 = !{i64 2147567990, i64 2147568033, i64 2147568073}
!5348 = !DILocation(line: 24, column: 1, scope: !5320)
!5349 = !{i64 2147568193, i64 2147568236, i64 2147568276}
!5350 = !DILocation(line: 25, column: 1, scope: !5320)
!5351 = !{i64 2147568368, i64 2147568411, i64 2147568451}
!5352 = !DILocation(line: 26, column: 1, scope: !5320)
!5353 = !{i64 2147568576, i64 2147568619, i64 2147568659}
!5354 = !DILocation(line: 27, column: 1, scope: !5320)
!5355 = !{i64 2147568780, i64 2147568823, i64 2147568863}
!5356 = !DILocation(line: 28, column: 1, scope: !5320)
!5357 = !{i64 2147568973, i64 2147569016, i64 2147569056}
!5358 = !DILocation(line: 29, column: 1, scope: !5320)
!5359 = !{i64 2147569175, i64 2147569218, i64 2147569258}
!5360 = !DILocation(line: 30, column: 1, scope: !5320)
!5361 = !{i64 2147569402, i64 2147569445, i64 2147569485}
!5362 = !DILocation(line: 31, column: 1, scope: !5320)
!5363 = !{i64 2147569604, i64 2147569647, i64 2147569687}
!5364 = !DILocation(line: 32, column: 1, scope: !5320)
!5365 = !{i64 2147569819, i64 2147569862, i64 2147569902}
!5366 = !DILocation(line: 33, column: 1, scope: !5320)
!5367 = !{i64 2147569991, i64 2147570034, i64 2147570074}
!5368 = !DILocation(line: 34, column: 1, scope: !5320)
!5369 = !{i64 2147570193, i64 2147570236, i64 2147570276}
!5370 = !DILocation(line: 35, column: 1, scope: !5320)
!5371 = !{i64 2147570419, i64 2147570462, i64 2147570502}
!5372 = !DILocation(line: 36, column: 1, scope: !5320)
!5373 = !{i64 2147570618, i64 2147570661, i64 2147570701}
!5374 = !DILocation(line: 37, column: 1, scope: !5320)
!5375 = !{i64 2147570793, i64 2147570836, i64 2147570876}
!5376 = !DILocation(line: 38, column: 1, scope: !5320)
!5377 = !{i64 2147571046, i64 2147571089, i64 2147571129}
!5378 = !DILocation(line: 39, column: 1, scope: !5320)
!5379 = !{i64 2147571287, i64 2147571330, i64 2147571370}
!5380 = !DILocation(line: 40, column: 1, scope: !5320)
!5381 = !{i64 2147571522, i64 2147571565, i64 2147571605}
!5382 = !DILocation(line: 41, column: 1, scope: !5320)
!5383 = !{i64 2147571748, i64 2147571791, i64 2147571831}
!5384 = !DILocation(line: 42, column: 1, scope: !5320)
!5385 = !{i64 2147571974, i64 2147572017, i64 2147572057}
!5386 = !DILocation(line: 43, column: 1, scope: !5320)
!5387 = !{i64 2147572209, i64 2147572252, i64 2147572292}
!5388 = !DILocation(line: 44, column: 1, scope: !5320)
!5389 = !{i64 2147572444, i64 2147572487, i64 2147572527}
!5390 = !DILocation(line: 45, column: 1, scope: !5320)
!5391 = !{i64 2147572679, i64 2147572722, i64 2147572762}
!5392 = !DILocation(line: 46, column: 1, scope: !5320)
!5393 = !{i64 2147572917, i64 2147572960, i64 2147573000}
!5394 = !DILocation(line: 47, column: 1, scope: !5320)
!5395 = !{i64 2147573191, i64 2147573234, i64 2147573274}
!5396 = !DILocation(line: 48, column: 1, scope: !5320)
!5397 = !{i64 2147573429, i64 2147573472, i64 2147573512}
!5398 = !DILocation(line: 49, column: 1, scope: !5320)
!5399 = !{i64 2147573682, i64 2147573725, i64 2147573765}
!5400 = !DILocation(line: 50, column: 1, scope: !5320)
!5401 = !{i64 2147573926, i64 2147573969, i64 2147574009}
!5402 = !DILocation(line: 51, column: 1, scope: !5320)
!5403 = !{i64 2147574176, i64 2147574219, i64 2147574259}
!5404 = !DILocation(line: 52, column: 1, scope: !5320)
!5405 = !{i64 2147574417, i64 2147574460, i64 2147574500}
!5406 = !DILocation(line: 53, column: 1, scope: !5320)
!5407 = !{i64 2147578725, i64 2147578768, i64 2147578808}
!5408 = !DILocation(line: 54, column: 1, scope: !5320)
!5409 = !{i64 2147578960, i64 2147579003, i64 2147579043}
!5410 = !DILocation(line: 55, column: 1, scope: !5320)
!5411 = !{i64 2147579195, i64 2147579238, i64 2147579278}
!5412 = !DILocation(line: 56, column: 1, scope: !5320)
!5413 = !{i64 2147579430, i64 2147579473, i64 2147579513}
!5414 = !DILocation(line: 57, column: 1, scope: !5320)
!5415 = !{i64 2147579665, i64 2147579708, i64 2147579748}
!5416 = !DILocation(line: 58, column: 1, scope: !5320)
!5417 = !{i64 2147579909, i64 2147579952, i64 2147579992}
!5418 = !DILocation(line: 59, column: 1, scope: !5320)
!5419 = !{i64 2147580147, i64 2147580190, i64 2147580230}
!5420 = !DILocation(line: 60, column: 1, scope: !5320)
!5421 = !{i64 2147580388, i64 2147580431, i64 2147580471}
!5422 = !DILocation(line: 61, column: 1, scope: !5320)
!5423 = !{i64 2147580668, i64 2147580711, i64 2147580751}
!5424 = !DILocation(line: 62, column: 1, scope: !5320)
!5425 = !{i64 2147580927, i64 2147580970, i64 2147581010}
!5426 = !DILocation(line: 63, column: 1, scope: !5320)
!5427 = !{i64 2147581165, i64 2147581208, i64 2147581248}
!5428 = !DILocation(line: 64, column: 1, scope: !5320)
!5429 = !{i64 2147581424, i64 2147581467, i64 2147581507}
!5430 = !DILocation(line: 65, column: 1, scope: !5320)
!5431 = !{i64 2147581653, i64 2147581696, i64 2147581736}
!5432 = !DILocation(line: 66, column: 1, scope: !5320)
!5433 = !{i64 2147581861, i64 2147581904, i64 2147581944}
!5434 = !DILocation(line: 67, column: 1, scope: !5320)
!5435 = !{i64 2147582072, i64 2147582115, i64 2147582155}
!5436 = !DILocation(line: 68, column: 1, scope: !5320)
!5437 = !{i64 2147582307, i64 2147582350, i64 2147582390}
!5438 = !DILocation(line: 69, column: 1, scope: !5320)
!5439 = !{i64 2147582536, i64 2147582579, i64 2147582619}
!5440 = !DILocation(line: 70, column: 1, scope: !5320)
!5441 = !{i64 2147582774, i64 2147582817, i64 2147582857}
!5442 = !DILocation(line: 71, column: 1, scope: !5320)
!5443 = !{i64 2147583006, i64 2147583049, i64 2147583089}
!5444 = !DILocation(line: 72, column: 1, scope: !5320)
!5445 = !{i64 2147583232, i64 2147583275, i64 2147583315}
!5446 = !DILocation(line: 73, column: 1, scope: !5320)
!5447 = !{i64 2147583449, i64 2147583492, i64 2147583532}
!5448 = !DILocation(line: 74, column: 1, scope: !5320)
!5449 = !{i64 2147583681, i64 2147583724, i64 2147583764}
!5450 = !DILocation(line: 75, column: 1, scope: !5320)
!5451 = !{i64 2147583907, i64 2147583950, i64 2147583990}
!5452 = !DILocation(line: 76, column: 1, scope: !5320)
!5453 = !{i64 2147584121, i64 2147584164, i64 2147584204}
!5454 = !DILocation(line: 77, column: 1, scope: !5320)
!5455 = !{i64 2147584341, i64 2147584384, i64 2147584424}
!5456 = !DILocation(line: 78, column: 1, scope: !5320)
!5457 = !{i64 2147584573, i64 2147584616, i64 2147584656}
!5458 = !DILocation(line: 79, column: 1, scope: !5320)
!5459 = !{i64 2147584781, i64 2147584824, i64 2147584864}
!5460 = !DILocation(line: 80, column: 1, scope: !5320)
!5461 = !{i64 2147584986, i64 2147585029, i64 2147585069}
!5462 = !DILocation(line: 81, column: 1, scope: !5320)
!5463 = !{i64 2147585203, i64 2147585246, i64 2147585286}
!5464 = !DILocation(line: 82, column: 1, scope: !5320)
!5465 = !{i64 2147585417, i64 2147585460, i64 2147585500}
!5466 = !DILocation(line: 83, column: 1, scope: !5320)
!5467 = !{i64 2147585643, i64 2147585686, i64 2147585726}
!5468 = !DILocation(line: 84, column: 1, scope: !5320)
!5469 = !{i64 2147585863, i64 2147585906, i64 2147585946}
!5470 = !DILocation(line: 85, column: 1, scope: !5320)
!5471 = !{i64 2147586068, i64 2147586111, i64 2147586151}
!5472 = !DILocation(line: 86, column: 1, scope: !5320)
!5473 = !{i64 2147586300, i64 2147586343, i64 2147586383}
!5474 = !DILocation(line: 87, column: 1, scope: !5320)
!5475 = !{i64 2147586535, i64 2147586578, i64 2147586618}
!5476 = !DILocation(line: 88, column: 1, scope: !5320)
!5477 = !{i64 2147590846, i64 2147590889, i64 2147590929}
!5478 = !DILocation(line: 89, column: 1, scope: !5320)
!5479 = !{i64 2147591096, i64 2147591139, i64 2147591179}
!5480 = !DILocation(line: 90, column: 1, scope: !5320)
!5481 = !{i64 2147591334, i64 2147591377, i64 2147591417}
!5482 = !DILocation(line: 91, column: 1, scope: !5320)
!5483 = !{i64 2147591545, i64 2147591588, i64 2147591628}
!5484 = !DILocation(line: 92, column: 1, scope: !5320)
!5485 = !{i64 2147591762, i64 2147591805, i64 2147591845}
!5486 = !DILocation(line: 93, column: 1, scope: !5320)
!5487 = !{i64 2147591958, i64 2147592001, i64 2147592041}
!5488 = !DILocation(line: 94, column: 1, scope: !5320)
!5489 = !{i64 2147592160, i64 2147592203, i64 2147592243}
!5490 = !DILocation(line: 95, column: 1, scope: !5320)
!5491 = !{i64 2147592353, i64 2147592396, i64 2147592436}
!5492 = !DILocation(line: 96, column: 1, scope: !5320)
!5493 = !{i64 2147592561, i64 2147592604, i64 2147592644}
!5494 = !DILocation(line: 97, column: 1, scope: !5320)
!5495 = !{i64 2147592757, i64 2147592800, i64 2147592840}
!5496 = !DILocation(line: 98, column: 1, scope: !5320)
!5497 = !{i64 2147592968, i64 2147593011, i64 2147593051}
!5498 = !DILocation(line: 99, column: 1, scope: !5320)
!5499 = !{i64 2147593179, i64 2147593222, i64 2147593262}
!5500 = !DILocation(line: 100, column: 1, scope: !5320)
!5501 = !{i64 2147593378, i64 2147593421, i64 2147593461}
!5502 = !DILocation(line: 101, column: 1, scope: !5320)
!5503 = !{i64 2147593553, i64 2147593596, i64 2147593636}
!5504 = !DILocation(line: 102, column: 1, scope: !5320)
!5505 = !{i64 2147593737, i64 2147593780, i64 2147593820}
!5506 = !DILocation(line: 103, column: 1, scope: !5320)
!5507 = !{i64 2147593939, i64 2147593982, i64 2147594022}
!5508 = !DILocation(line: 104, column: 1, scope: !5320)
!5509 = !{i64 2147594120, i64 2147594163, i64 2147594203}
!5510 = !DILocation(line: 105, column: 1, scope: !5320)
!5511 = !{i64 2147594319, i64 2147594362, i64 2147594402}
!5512 = !DILocation(line: 106, column: 1, scope: !5320)
!5513 = !{i64 2147594485, i64 2147594528, i64 2147594568}
!5514 = !DILocation(line: 107, column: 1, scope: !5320)
!5515 = !{i64 2147594669, i64 2147594712, i64 2147594752}
!5516 = !DILocation(line: 108, column: 1, scope: !5320)
!5517 = !{i64 2147594859, i64 2147594902, i64 2147594942}
!5518 = !DILocation(line: 109, column: 1, scope: !5320)
!5519 = !{i64 2147595043, i64 2147595086, i64 2147595126}
!5520 = !DILocation(line: 110, column: 1, scope: !5320)
!5521 = !{i64 2147595257, i64 2147595300, i64 2147595340}
!5522 = !DILocation(line: 111, column: 1, scope: !5320)
!5523 = !{i64 2147595468, i64 2147595511, i64 2147595551}
!5524 = !DILocation(line: 112, column: 1, scope: !5320)
!5525 = !{i64 2147595691, i64 2147595734, i64 2147595774}
!5526 = !DILocation(line: 113, column: 1, scope: !5320)
!5527 = !{i64 2147595875, i64 2147595918, i64 2147595958}
!5528 = !DILocation(line: 114, column: 1, scope: !5320)
!5529 = !{i64 2147596089, i64 2147596132, i64 2147596172}
!5530 = !DILocation(line: 115, column: 1, scope: !5320)
!5531 = !{i64 2147596255, i64 2147596298, i64 2147596338}
!5532 = !DILocation(line: 116, column: 1, scope: !5320)
!5533 = !{i64 2147596436, i64 2147596479, i64 2147596519}
!5534 = !DILocation(line: 117, column: 1, scope: !5320)
!5535 = !{i64 2147596629, i64 2147596672, i64 2147596712}
!5536 = !DILocation(line: 118, column: 1, scope: !5320)
!5537 = !{i64 2147596855, i64 2147596898, i64 2147596938}
!5538 = !DILocation(line: 119, column: 1, scope: !5320)
!5539 = !{i64 2147597069, i64 2147597112, i64 2147597152}
!5540 = !DILocation(line: 120, column: 1, scope: !5320)
!5541 = !{i64 2147597295, i64 2147597338, i64 2147597378}
!5542 = !DILocation(line: 121, column: 1, scope: !5320)
!5543 = !{i64 2147597512, i64 2147597555, i64 2147597595}
!5544 = !DILocation(line: 122, column: 1, scope: !5320)
!5545 = !{i64 2147597789, i64 2147597832, i64 2147597872}
!5546 = !DILocation(line: 123, column: 1, scope: !5320)
!5547 = !{i64 2147598015, i64 2147598058, i64 2147598098}
!5548 = !DILocation(line: 124, column: 1, scope: !5320)
!5549 = !{i64 2147598223, i64 2147598266, i64 2147598306}
!5550 = !DILocation(line: 125, column: 1, scope: !5320)
!5551 = !{i64 2147598419, i64 2147598462, i64 2147598502}
!5552 = !DILocation(line: 126, column: 1, scope: !5320)
!5553 = !{i64 2147598684, i64 2147598727, i64 2147598767}
!5554 = !DILocation(line: 127, column: 1, scope: !5320)
!5555 = !{i64 2147598898, i64 2147598941, i64 2147598981}
!5556 = !DILocation(line: 128, column: 1, scope: !5320)
!5557 = !{i64 2147599073, i64 2147599116, i64 2147599156}
!5558 = !DILocation(line: 129, column: 1, scope: !5320)
!5559 = !{i64 2147599327, i64 2147599370, i64 2147599410}
!5560 = !DILocation(line: 130, column: 1, scope: !5320)
!5561 = !{i64 2147599526, i64 2147599569, i64 2147599609}
!5562 = !DILocation(line: 131, column: 1, scope: !5320)
!5563 = !{i64 2147599768, i64 2147599811, i64 2147599851}
!5564 = !DILocation(line: 132, column: 1, scope: !5320)
!5565 = !{i64 2147603992, i64 2147604035, i64 2147604075}
!5566 = !DILocation(line: 133, column: 1, scope: !5320)
!5567 = !{i64 2147604179, i64 2147604222, i64 2147604262}
!5568 = !DILocation(line: 134, column: 1, scope: !5320)
!5569 = !{i64 2147604372, i64 2147604415, i64 2147604455}
!5570 = !DILocation(line: 135, column: 1, scope: !5320)
!5571 = !{i64 2147604555, i64 2147604598, i64 2147604638}
!5572 = !DILocation(line: 136, column: 1, scope: !5320)
!5573 = !{i64 2147604769, i64 2147604812, i64 2147604852}
!5574 = !DILocation(line: 137, column: 1, scope: !5320)
!5575 = !{i64 2147604980, i64 2147605023, i64 2147605063}
!5576 = !DILocation(line: 138, column: 1, scope: !5320)
!5577 = !{i64 2147605200, i64 2147605243, i64 2147605283}
!5578 = !DILocation(line: 139, column: 1, scope: !5320)
!5579 = !{i64 2147605407, i64 2147605450, i64 2147605490}
!5580 = !DILocation(line: 140, column: 1, scope: !5320)
!5581 = !{i64 2147605680, i64 2147605723, i64 2147605763}
!5582 = !DILocation(line: 141, column: 1, scope: !5320)
!5583 = !{i64 2147605928, i64 2147605971, i64 2147606011}
!5584 = !DILocation(line: 142, column: 1, scope: !5320)
!5585 = !{i64 2147606127, i64 2147606170, i64 2147606210}
!5586 = !DILocation(line: 143, column: 1, scope: !5320)
!5587 = !{i64 2147606362, i64 2147606405, i64 2147606445}
!5588 = !DILocation(line: 144, column: 1, scope: !5320)
!5589 = !{i64 2147606612, i64 2147606655, i64 2147606695}
!5590 = !DILocation(line: 145, column: 1, scope: !5320)
!5591 = !{i64 2147606814, i64 2147606857, i64 2147606897}
!5592 = !DILocation(line: 146, column: 1, scope: !5320)
!5593 = !{i64 2147607037, i64 2147607080, i64 2147607120}
!5594 = !DILocation(line: 147, column: 1, scope: !5320)
!5595 = !{i64 2147607251, i64 2147607294, i64 2147607334}
!5596 = !DILocation(line: 148, column: 1, scope: !5320)
!5597 = !{i64 2147607495, i64 2147607538, i64 2147607578}
!5598 = !DILocation(line: 149, column: 1, scope: !5320)
!5599 = !{i64 2147607724, i64 2147607767, i64 2147607807}
!5600 = !DILocation(line: 150, column: 1, scope: !5320)
!5601 = !{i64 2147607953, i64 2147607996, i64 2147608036}
!5602 = !DILocation(line: 151, column: 1, scope: !5320)
!5603 = !{i64 2147608161, i64 2147608204, i64 2147608244}
!5604 = !DILocation(line: 152, column: 1, scope: !5320)
!5605 = !{i64 2147608399, i64 2147608442, i64 2147608482}
!5606 = !DILocation(line: 153, column: 1, scope: !5320)
!5607 = !{i64 2147608625, i64 2147608668, i64 2147608708}
!5608 = !DILocation(line: 154, column: 1, scope: !5320)
!5609 = !{i64 2147608884, i64 2147608927, i64 2147608967}
!5610 = !DILocation(line: 155, column: 1, scope: !5320)
!5611 = !{i64 2147609104, i64 2147609147, i64 2147609187}
!5612 = !DILocation(line: 156, column: 1, scope: !5320)
!5613 = !{i64 2147609336, i64 2147609379, i64 2147609419}
!5614 = !DILocation(line: 157, column: 1, scope: !5320)
!5615 = !{i64 2147609577, i64 2147609620, i64 2147609660}
!5616 = !DILocation(line: 158, column: 1, scope: !5320)
!5617 = !{i64 2147609818, i64 2147609861, i64 2147609901}
!5618 = !DILocation(line: 159, column: 1, scope: !5320)
!5619 = !{i64 2147610041, i64 2147610084, i64 2147610124}
!5620 = !DILocation(line: 160, column: 1, scope: !5320)
!5621 = !{i64 2147610258, i64 2147610301, i64 2147610341}
!5622 = !DILocation(line: 161, column: 1, scope: !5320)
!5623 = !{i64 2147610499, i64 2147610542, i64 2147610582}
!5624 = !DILocation(line: 162, column: 1, scope: !5320)
!5625 = !{i64 2147610686, i64 2147610729, i64 2147610769}
!5626 = !DILocation(line: 163, column: 1, scope: !5320)
!5627 = !{i64 2147610873, i64 2147610916, i64 2147610956}
!5628 = !DILocation(line: 164, column: 1, scope: !5320)
!5629 = !{i64 2147611036, i64 2147611079, i64 2147611119}
!5630 = !DILocation(line: 165, column: 1, scope: !5320)
!5631 = !{i64 2147611295, i64 2147611338, i64 2147611378}
!5632 = !DILocation(line: 166, column: 1, scope: !5320)
!5633 = !{i64 2147611518, i64 2147611561, i64 2147611601}
!5634 = !DILocation(line: 167, column: 1, scope: !5320)
!5635 = !{i64 2147611747, i64 2147611790, i64 2147611830}
!5636 = !DILocation(line: 168, column: 1, scope: !5320)
!5637 = !{i64 2147611943, i64 2147611986, i64 2147612026}
!5638 = !DILocation(line: 169, column: 1, scope: !5320)
!5639 = !{i64 2147612155, i64 2147612198, i64 2147612238}
!5640 = !DILocation(line: 170, column: 1, scope: !5320)
!5641 = !{i64 2147612376, i64 2147612419, i64 2147612459}
!5642 = !DILocation(line: 171, column: 1, scope: !5320)
!5643 = !{i64 2147616651, i64 2147616694, i64 2147616734}
!5644 = !DILocation(line: 172, column: 1, scope: !5320)
!5645 = !{i64 2147616841, i64 2147616884, i64 2147616924}
!5646 = !DILocation(line: 173, column: 1, scope: !5320)
!5647 = !{i64 2147617040, i64 2147617083, i64 2147617123}
!5648 = !DILocation(line: 174, column: 1, scope: !5320)
!5649 = !{i64 2147617245, i64 2147617288, i64 2147617328}
!5650 = !DILocation(line: 175, column: 1, scope: !5320)
!5651 = !{i64 2147617465, i64 2147617508, i64 2147617548}
!5652 = !DILocation(line: 176, column: 1, scope: !5320)
!5653 = !{i64 2147617666, i64 2147617709, i64 2147617749}
!5654 = !DILocation(line: 177, column: 1, scope: !5320)
!5655 = !{i64 2147617865, i64 2147617908, i64 2147617948}
!5656 = !DILocation(line: 178, column: 1, scope: !5320)
!5657 = !{i64 2147618070, i64 2147618113, i64 2147618153}
!5658 = !DILocation(line: 179, column: 1, scope: !5320)
!5659 = !{i64 2147618239, i64 2147618282, i64 2147618322}
!5660 = !DILocation(line: 180, column: 1, scope: !5320)
!5661 = !{i64 2147618423, i64 2147618466, i64 2147618506}
!5662 = !DILocation(line: 181, column: 1, scope: !5320)
!5663 = !{i64 2147618607, i64 2147618650, i64 2147618690}
!5664 = !DILocation(line: 182, column: 1, scope: !5320)
!5665 = !{i64 2147618794, i64 2147618837, i64 2147618877}
!5666 = !DILocation(line: 183, column: 1, scope: !5320)
!5667 = !{i64 2147618978, i64 2147619021, i64 2147619061}
!5668 = !DILocation(line: 184, column: 1, scope: !5320)
!5669 = !{i64 2147619216, i64 2147619259, i64 2147619299}
!5670 = !DILocation(line: 185, column: 1, scope: !5320)
!5671 = !{i64 2147619446, i64 2147619489, i64 2147619529}
!5672 = !DILocation(line: 186, column: 1, scope: !5320)
!5673 = !{i64 2147619675, i64 2147619718, i64 2147619758}
!5674 = !DILocation(line: 187, column: 1, scope: !5320)
!5675 = !{i64 2147619862, i64 2147619905, i64 2147619945}
!5676 = !DILocation(line: 188, column: 1, scope: !5320)
!5677 = !{i64 2147620058, i64 2147620101, i64 2147620141}
!5678 = !DILocation(line: 189, column: 1, scope: !5320)
!5679 = !{i64 2147620266, i64 2147620309, i64 2147620349}
!5680 = !DILocation(line: 190, column: 1, scope: !5320)
!5681 = !{i64 2147620478, i64 2147620521, i64 2147620561}
!5682 = !DILocation(line: 191, column: 1, scope: !5320)
!5683 = !{i64 2147620677, i64 2147620720, i64 2147620760}
!5684 = !DILocation(line: 192, column: 1, scope: !5320)
!5685 = !{i64 2147620915, i64 2147620958, i64 2147620998}
!5686 = !DILocation(line: 193, column: 1, scope: !5320)
!5687 = !{i64 2147621111, i64 2147621154, i64 2147621194}
!5688 = !DILocation(line: 194, column: 1, scope: !5320)
!5689 = !{i64 2147621313, i64 2147621356, i64 2147621396}
!5690 = !DILocation(line: 195, column: 1, scope: !5320)
!5691 = !{i64 2147621506, i64 2147621549, i64 2147621589}
!5692 = !DILocation(line: 196, column: 1, scope: !5320)
!5693 = !{i64 2147621740, i64 2147621783, i64 2147621823}
!5694 = !DILocation(line: 197, column: 1, scope: !5320)
!5695 = !{i64 2147621903, i64 2147621946, i64 2147621986}
!5696 = !DILocation(line: 198, column: 1, scope: !5320)
!5697 = !{i64 2147622142, i64 2147622185, i64 2147622225}
!5698 = !DILocation(line: 199, column: 1, scope: !5320)
!5699 = !{i64 2147622381, i64 2147622424, i64 2147622464}
!5700 = !DILocation(line: 200, column: 1, scope: !5320)
!5701 = !{i64 2147622617, i64 2147622660, i64 2147622700}
!5702 = !DILocation(line: 201, column: 1, scope: !5320)
!5703 = !{i64 2147622847, i64 2147622890, i64 2147622930}
!5704 = !DILocation(line: 202, column: 1, scope: !5320)
!5705 = !{i64 2147623034, i64 2147623077, i64 2147623117}
!5706 = !DILocation(line: 203, column: 1, scope: !5320)
!5707 = !{i64 2147623233, i64 2147623276, i64 2147623316}
!5708 = !DILocation(line: 204, column: 1, scope: !5320)
!5709 = !{i64 2147623504, i64 2147623547, i64 2147623587}
!5710 = !DILocation(line: 205, column: 1, scope: !5320)
!5711 = !{i64 2147623679, i64 2147623722, i64 2147623762}
!5712 = !DILocation(line: 206, column: 1, scope: !5320)
!5713 = !{i64 2147623913, i64 2147623956, i64 2147623996}
!5714 = !DILocation(line: 207, column: 1, scope: !5320)
!5715 = !{i64 2147624121, i64 2147624164, i64 2147624204}
!5716 = !DILocation(line: 208, column: 1, scope: !5320)
!5717 = !{i64 2147624320, i64 2147624363, i64 2147624403}
!5718 = !DILocation(line: 209, column: 1, scope: !5320)
!5719 = !{i64 2147624538, i64 2147624581, i64 2147624621}
!5720 = !DILocation(line: 210, column: 1, scope: !5320)
!5721 = !{i64 2147624728, i64 2147624771, i64 2147624811}
!5722 = !DILocation(line: 211, column: 1, scope: !5320)
!5723 = !{i64 2147624924, i64 2147624967, i64 2147625007}
!5724 = !DILocation(line: 212, column: 1, scope: !5320)
!5725 = !{i64 2147625130, i64 2147625173, i64 2147625213}
!5726 = !DILocation(line: 213, column: 1, scope: !5320)
!5727 = !{i64 2147625335, i64 2147625378, i64 2147625418}
!5728 = !DILocation(line: 214, column: 1, scope: !5320)
!5729 = !{i64 2147625561, i64 2147625604, i64 2147625644}
!5730 = !DILocation(line: 215, column: 1, scope: !5320)
!5731 = !{i64 2147629854, i64 2147629897, i64 2147629937}
!5732 = !DILocation(line: 216, column: 1, scope: !5320)
!5733 = !{i64 2147630038, i64 2147630081, i64 2147630121}
!5734 = !DILocation(line: 217, column: 1, scope: !5320)
!5735 = !{i64 2147630247, i64 2147630290, i64 2147630330}
!5736 = !DILocation(line: 218, column: 1, scope: !5320)
!5737 = !{i64 2147630431, i64 2147630474, i64 2147630514}
!5738 = !DILocation(line: 219, column: 1, scope: !5320)
!5739 = !{i64 2147630657, i64 2147630700, i64 2147630740}
!5740 = !DILocation(line: 220, column: 1, scope: !5320)
!5741 = !{i64 2147630883, i64 2147630926, i64 2147630966}
!5742 = !DILocation(line: 221, column: 1, scope: !5320)
!5743 = !{i64 2147631109, i64 2147631152, i64 2147631192}
!5744 = !DILocation(line: 222, column: 1, scope: !5320)
!5745 = !{i64 2147631335, i64 2147631378, i64 2147631418}
!5746 = !DILocation(line: 223, column: 1, scope: !5320)
!5747 = !{i64 2147631561, i64 2147631604, i64 2147631644}
!5748 = !DILocation(line: 224, column: 1, scope: !5320)
!5749 = !{i64 2147631793, i64 2147631836, i64 2147631876}
!5750 = !DILocation(line: 225, column: 1, scope: !5320)
!5751 = !{i64 2147632031, i64 2147632074, i64 2147632114}
!5752 = !DILocation(line: 226, column: 1, scope: !5320)
!5753 = !{i64 2147632251, i64 2147632294, i64 2147632334}
!5754 = !DILocation(line: 227, column: 1, scope: !5320)
!5755 = !{i64 2147632495, i64 2147632538, i64 2147632578}
!5756 = !DILocation(line: 228, column: 1, scope: !5320)
!5757 = !{i64 2147632736, i64 2147632779, i64 2147632819}
!5758 = !DILocation(line: 229, column: 1, scope: !5320)
!5759 = !{i64 2147632971, i64 2147633014, i64 2147633054}
!5760 = !DILocation(line: 230, column: 1, scope: !5320)
!5761 = !{i64 2147633203, i64 2147633246, i64 2147633286}
!5762 = !DILocation(line: 231, column: 1, scope: !5320)
!5763 = !{i64 2147633405, i64 2147633448, i64 2147633488}
!5764 = !DILocation(line: 232, column: 1, scope: !5320)
!5765 = !{i64 2147633655, i64 2147633698, i64 2147633738}
!5766 = !DILocation(line: 233, column: 1, scope: !5320)
!5767 = !{i64 2147633893, i64 2147633936, i64 2147633976}
!5768 = !DILocation(line: 234, column: 1, scope: !5320)
!5769 = !{i64 2147634077, i64 2147634120, i64 2147634160}
!5770 = !DILocation(line: 235, column: 1, scope: !5320)
!5771 = !{i64 2147634301, i64 2147634344, i64 2147634384}
!5772 = !DILocation(line: 236, column: 1, scope: !5320)
!5773 = !{i64 2147634539, i64 2147634582, i64 2147634622}
!5774 = !DILocation(line: 237, column: 1, scope: !5320)
!5775 = !{i64 2147634777, i64 2147634820, i64 2147634860}
!5776 = !DILocation(line: 238, column: 1, scope: !5320)
!5777 = !{i64 2147634970, i64 2147635013, i64 2147635053}
!5778 = !DILocation(line: 239, column: 1, scope: !5320)
!5779 = !{i64 2147635223, i64 2147635266, i64 2147635306}
!5780 = !DILocation(line: 240, column: 1, scope: !5320)
!5781 = !{i64 2147635437, i64 2147635480, i64 2147635520}
!5782 = !DILocation(line: 241, column: 1, scope: !5320)
!5783 = !{i64 2147635645, i64 2147635688, i64 2147635728}
!5784 = !DILocation(line: 242, column: 1, scope: !5320)
!5785 = !{i64 2147635835, i64 2147635878, i64 2147635918}
!5786 = !DILocation(line: 243, column: 1, scope: !5320)
!5787 = !{i64 2147636049, i64 2147636092, i64 2147636132}
!5788 = !DILocation(line: 244, column: 1, scope: !5320)
!5789 = !{i64 2147636311, i64 2147636354, i64 2147636394}
!5790 = !DILocation(line: 245, column: 1, scope: !5320)
!5791 = !{i64 2147636522, i64 2147636565, i64 2147636605}
!5792 = !DILocation(line: 246, column: 1, scope: !5320)
!5793 = !{i64 2147636766, i64 2147636809, i64 2147636849}
!5794 = !DILocation(line: 247, column: 1, scope: !5320)
!5795 = !{i64 2147636977, i64 2147637020, i64 2147637060}
!5796 = !DILocation(line: 248, column: 1, scope: !5320)
!5797 = !{i64 2147637206, i64 2147637249, i64 2147637289}
!5798 = !DILocation(line: 249, column: 1, scope: !5320)
!5799 = !{i64 2147637471, i64 2147637514, i64 2147637554}
!5800 = !DILocation(line: 250, column: 1, scope: !5320)
!5801 = !{i64 2147637676, i64 2147637719, i64 2147637759}
!5802 = !DILocation(line: 251, column: 1, scope: !5320)
!5803 = !{i64 2147637872, i64 2147637915, i64 2147637955}
!5804 = !DILocation(line: 252, column: 1, scope: !5320)
!5805 = !{i64 2147638095, i64 2147638138, i64 2147638178}
!5806 = !DILocation(line: 253, column: 1, scope: !5320)
!5807 = !{i64 2147638258, i64 2147638301, i64 2147638341}
!5808 = !DILocation(line: 254, column: 1, scope: !5320)
!5809 = !{i64 2147642524, i64 2147642567, i64 2147642607}
!5810 = !DILocation(line: 255, column: 1, scope: !5320)
!5811 = !{i64 2147642744, i64 2147642787, i64 2147642827}
!5812 = !DILocation(line: 256, column: 1, scope: !5320)
!5813 = !{i64 2147642958, i64 2147643001, i64 2147643041}
!5814 = !DILocation(line: 257, column: 1, scope: !5320)
!5815 = !{i64 2147643172, i64 2147643215, i64 2147643255}
!5816 = !DILocation(line: 258, column: 1, scope: !5320)
!5817 = !{i64 2147643383, i64 2147643426, i64 2147643466}
!5818 = !DILocation(line: 259, column: 1, scope: !5320)
!5819 = !{i64 2147643576, i64 2147643619, i64 2147643659}
!5820 = !DILocation(line: 260, column: 1, scope: !5320)
!5821 = !{i64 2147643775, i64 2147643818, i64 2147643858}
!5822 = !DILocation(line: 261, column: 1, scope: !5320)
!5823 = !{i64 2147643971, i64 2147644014, i64 2147644054}
!5824 = !DILocation(line: 262, column: 1, scope: !5320)
!5825 = !{i64 2147644170, i64 2147644213, i64 2147644253}
!5826 = !DILocation(line: 263, column: 1, scope: !5320)
!5827 = !{i64 2147644342, i64 2147644385, i64 2147644425}
!5828 = !DILocation(line: 264, column: 1, scope: !5320)
!5829 = !{i64 2147644535, i64 2147644578, i64 2147644618}
!5830 = !DILocation(line: 265, column: 1, scope: !5320)
!5831 = !{i64 2147644731, i64 2147644774, i64 2147644814}
!5832 = !DILocation(line: 266, column: 1, scope: !5320)
!5833 = !{i64 2147644958, i64 2147645001, i64 2147645041}
!5834 = !DILocation(line: 267, column: 1, scope: !5320)
!5835 = !{i64 2147645175, i64 2147645218, i64 2147645258}
!5836 = !DILocation(line: 268, column: 1, scope: !5320)
!5837 = !{i64 2147645467, i64 2147645510, i64 2147645550}
!5838 = !DILocation(line: 269, column: 1, scope: !5320)
!5839 = !{i64 2147645699, i64 2147645742, i64 2147645782}
!5840 = !DILocation(line: 270, column: 1, scope: !5320)
!5841 = !{i64 2147645916, i64 2147645959, i64 2147645999}
!5842 = !DILocation(line: 271, column: 1, scope: !5320)
!5843 = !{i64 2147646123, i64 2147646166, i64 2147646206}
!5844 = !DILocation(line: 272, column: 1, scope: !5320)
!5845 = !{i64 2147646324, i64 2147646367, i64 2147646407}
!5846 = !DILocation(line: 273, column: 1, scope: !5320)
!5847 = !{i64 2147646556, i64 2147646599, i64 2147646639}
!5848 = !DILocation(line: 274, column: 1, scope: !5320)
!5849 = !{i64 2147646764, i64 2147646807, i64 2147646847}
!5850 = !DILocation(line: 275, column: 1, scope: !5320)
!5851 = !{i64 2147646954, i64 2147646997, i64 2147647037}
!5852 = !DILocation(line: 276, column: 1, scope: !5320)
!5853 = !{i64 2147647180, i64 2147647223, i64 2147647263}
!5854 = !DILocation(line: 277, column: 1, scope: !5320)
!5855 = !{i64 2147647369, i64 2147647412, i64 2147647452}
!5856 = !DILocation(line: 278, column: 1, scope: !5320)
!5857 = !{i64 2147647640, i64 2147647683, i64 2147647723}
!5858 = !DILocation(line: 279, column: 1, scope: !5320)
!5859 = !{i64 2147647860, i64 2147647903, i64 2147647943}
!5860 = !DILocation(line: 280, column: 1, scope: !5320)
!5861 = !{i64 2147648113, i64 2147648156, i64 2147648196}
!5862 = !DILocation(line: 281, column: 1, scope: !5320)
!5863 = !{i64 2147648321, i64 2147648364, i64 2147648404}
!5864 = !DILocation(line: 282, column: 1, scope: !5320)
!5865 = !{i64 2147648553, i64 2147648596, i64 2147648636}
!5866 = !DILocation(line: 283, column: 1, scope: !5320)
!5867 = !{i64 2147648764, i64 2147648807, i64 2147648847}
!5868 = !DILocation(line: 284, column: 1, scope: !5320)
!5869 = !{i64 2147648954, i64 2147648997, i64 2147649037}
!5870 = !DILocation(line: 285, column: 1, scope: !5320)
!5871 = !{i64 2147649168, i64 2147649211, i64 2147649251}
!5872 = !DILocation(line: 286, column: 1, scope: !5320)
!5873 = !{i64 2147649367, i64 2147649410, i64 2147649450}
!5874 = !DILocation(line: 287, column: 1, scope: !5320)
!5875 = !{i64 2147649554, i64 2147649597, i64 2147649637}
!5876 = !DILocation(line: 288, column: 1, scope: !5320)
!5877 = !{i64 2147649762, i64 2147649805, i64 2147649845}
!5878 = !DILocation(line: 289, column: 1, scope: !5320)
!5879 = !{i64 2147649991, i64 2147650034, i64 2147650074}
!5880 = !DILocation(line: 290, column: 1, scope: !5320)
!5881 = !{i64 2147650193, i64 2147650236, i64 2147650276}
!5882 = !DILocation(line: 291, column: 1, scope: !5320)
!5883 = !{i64 2147650392, i64 2147650435, i64 2147650475}
!5884 = !DILocation(line: 292, column: 1, scope: !5320)
!5885 = !{i64 2147650609, i64 2147650652, i64 2147650692}
!5886 = !DILocation(line: 294, column: 1, scope: !5320)
!5887 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5888)
!5888 = !{!5889, !5890}
!5889 = !DILocalVariable(name: "arg", arg: 1, scope: !5887, file: !129, line: 30, type: !138)
!5890 = !DILocalVariable(name: "key", scope: !5887, file: !129, line: 32, type: !121)
!5891 = !DILocation(line: 0, scope: !5887)
!5892 = !DILocation(line: 37, column: 2, scope: !5887)
!5893 = !DILocation(line: 38, column: 2, scope: !5887)
!5894 = !DILocation(line: 55, column: 2, scope: !5895, inlinedAt: !5902)
!5895 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5899)
!5896 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!32}
!5899 = !{!5900, !5901}
!5900 = !DILocalVariable(name: "key", scope: !5895, file: !5896, line: 44, type: !32)
!5901 = !DILocalVariable(name: "tmp", scope: !5895, file: !5896, line: 53, type: !32)
!5902 = distinct !DILocation(line: 40, column: 8, scope: !5887)
!5903 = !{i64 2505385}
!5904 = !DILocation(line: 0, scope: !5895, inlinedAt: !5902)
!5905 = !DILocalVariable(name: "key", arg: 1, scope: !5906, file: !5896, line: 84, type: !32)
!5906 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5909)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{null, !32}
!5909 = !{!5905}
!5910 = !DILocation(line: 0, scope: !5906, inlinedAt: !5911)
!5911 = distinct !DILocation(line: 47, column: 2, scope: !5887)
!5912 = !DILocation(line: 95, column: 2, scope: !5906, inlinedAt: !5911)
!5913 = !{i64 2506202}
!5914 = !DILocation(line: 51, column: 18, scope: !5887)
!5915 = !DILocation(line: 53, column: 2, scope: !5887)
!5916 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5917, file: !5917, line: 1609, type: !3339, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5917 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5918 = !DILocation(line: 1611, column: 3, scope: !5916)
!5919 = !DILocation(line: 1612, column: 1, scope: !5916)
!5920 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5917, file: !5917, line: 1629, type: !3339, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5921 = !DILocation(line: 1631, column: 3, scope: !5920)
!5922 = !DILocation(line: 1632, column: 1, scope: !5920)
!5923 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5924)
!5924 = !{!5925}
!5925 = !DILocalVariable(name: "dev", arg: 1, scope: !5923, file: !171, line: 26, type: !179)
!5926 = !DILocation(line: 0, scope: !5923)
!5927 = !DILocation(line: 68, column: 2, scope: !5923)
!5928 = !DILocation(line: 25, column: 6, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5930 = !DILocation(line: 25, column: 10, scope: !5929)
!5931 = !DILocation(line: 25, column: 6, scope: !341)
!5932 = !DILocation(line: 26, column: 3, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !294, line: 26, column: 3)
!5934 = distinct !DILexicalBlock(scope: !5929, file: !294, line: 25, column: 19)
!5935 = !DILocation(line: 27, column: 2, scope: !5934)
!5936 = !DILocation(line: 29, column: 8, scope: !347)
!5937 = !DILocation(line: 0, scope: !347)
!5938 = !DILocation(line: 29, column: 6, scope: !341)
!5939 = !DILocation(line: 30, column: 14, scope: !341)
!5940 = !DILocation(line: 30, column: 2, scope: !341)
!5941 = distinct !DISubprogram(name: "k_queue_get", scope: !3775, file: !3775, line: 649, type: !5942, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5949)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!102, !5944, !5945}
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5945 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5946)
!5946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5947)
!5947 = !{!5948}
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5946, file: !201, line: 66, baseType: !200, size: 64)
!5949 = !{!5950, !5951}
!5950 = !DILocalVariable(name: "queue", arg: 1, scope: !5941, file: !3775, line: 649, type: !5944)
!5951 = !DILocalVariable(name: "timeout", arg: 2, scope: !5941, file: !3775, line: 649, type: !5945)
!5952 = !DILocation(line: 0, scope: !5941)
!5953 = !DILocation(line: 658, column: 2, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5941, file: !3775, line: 658, column: 2)
!5955 = !{i64 2155436703}
!5956 = !DILocation(line: 659, column: 9, scope: !5941)
!5957 = !DILocation(line: 659, column: 2, scope: !5941)
!5958 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3339, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5959)
!5959 = !{!5960}
!5960 = !DILocalVariable(name: "i", scope: !5958, file: !294, line: 35, type: !103)
!5961 = !DILocation(line: 0, scope: !5958)
!5962 = !DILocation(line: 38, column: 3, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !294, line: 38, column: 3)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !294, line: 37, column: 46)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !294, line: 37, column: 2)
!5966 = distinct !DILexicalBlock(scope: !5958, file: !294, line: 37, column: 2)
!5967 = !DILocation(line: 45, column: 2, scope: !5958)
!5968 = !DILocation(line: 46, column: 1, scope: !5958)
!5969 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5970, file: !5970, line: 57, type: !5971, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !6017)
!5970 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !DISubroutineType(types: !5972)
!5972 = !{null, !32, !5973}
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 32)
!5974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5975)
!5975 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2877, line: 141, baseType: !5976)
!5976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2877, line: 97, size: 256, elements: !5977)
!5977 = !{!5978}
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5976, file: !2877, line: 107, baseType: !5979, size: 256)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2877, line: 98, size: 256, elements: !5980)
!5980 = !{!5981, !5986, !5991, !5996, !6001, !6006, !6011, !6016}
!5981 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 99, baseType: !5982, size: 32)
!5982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 99, size: 32, elements: !5983)
!5983 = !{!5984, !5985}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5982, file: !2877, line: 99, baseType: !121, size: 32)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5982, file: !2877, line: 99, baseType: !121, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 100, baseType: !5987, size: 32, offset: 32)
!5987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 100, size: 32, elements: !5988)
!5988 = !{!5989, !5990}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5987, file: !2877, line: 100, baseType: !121, size: 32)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5987, file: !2877, line: 100, baseType: !121, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 101, baseType: !5992, size: 32, offset: 64)
!5992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 101, size: 32, elements: !5993)
!5993 = !{!5994, !5995}
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5992, file: !2877, line: 101, baseType: !121, size: 32)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5992, file: !2877, line: 101, baseType: !121, size: 32)
!5996 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 102, baseType: !5997, size: 32, offset: 96)
!5997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 102, size: 32, elements: !5998)
!5998 = !{!5999, !6000}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5997, file: !2877, line: 102, baseType: !121, size: 32)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5997, file: !2877, line: 102, baseType: !121, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 103, baseType: !6002, size: 32, offset: 128)
!6002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 103, size: 32, elements: !6003)
!6003 = !{!6004, !6005}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6002, file: !2877, line: 103, baseType: !121, size: 32)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6002, file: !2877, line: 103, baseType: !121, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 104, baseType: !6007, size: 32, offset: 160)
!6007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 104, size: 32, elements: !6008)
!6008 = !{!6009, !6010}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6007, file: !2877, line: 104, baseType: !121, size: 32)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6007, file: !2877, line: 104, baseType: !121, size: 32)
!6011 = !DIDerivedType(tag: DW_TAG_member, scope: !5979, file: !2877, line: 105, baseType: !6012, size: 32, offset: 192)
!6012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5979, file: !2877, line: 105, size: 32, elements: !6013)
!6013 = !{!6014, !6015}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6012, file: !2877, line: 105, baseType: !121, size: 32)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6012, file: !2877, line: 105, baseType: !121, size: 32)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5979, file: !2877, line: 106, baseType: !121, size: 32, offset: 224)
!6017 = !{!6018, !6019}
!6018 = !DILocalVariable(name: "reason", arg: 1, scope: !5969, file: !5970, line: 57, type: !32)
!6019 = !DILocalVariable(name: "esf", arg: 2, scope: !5969, file: !5970, line: 57, type: !5973)
!6020 = !DILocation(line: 0, scope: !5969)
!6021 = !DILocation(line: 63, column: 2, scope: !5969)
!6022 = !DILocation(line: 64, column: 1, scope: !5969)
!6023 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5970, file: !5970, line: 82, type: !6024, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !6039)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !5973, !6026}
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 32)
!6027 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6028)
!6028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6029)
!6029 = !{!6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6028, file: !446, line: 26, baseType: !121, size: 32)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6028, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6028, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6028, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6028, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6028, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6028, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6028, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6028, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6039 = !{!6040, !6041, !6042}
!6040 = !DILocalVariable(name: "esf", arg: 1, scope: !6023, file: !5970, line: 82, type: !5973)
!6041 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6023, file: !5970, line: 82, type: !6026)
!6042 = !DILocalVariable(name: "reason", scope: !6023, file: !5970, line: 88, type: !32)
!6043 = !DILocation(line: 0, scope: !6023)
!6044 = !DILocation(line: 88, column: 35, scope: !6023)
!6045 = !DILocation(line: 108, column: 2, scope: !6023)
!6046 = !DILocation(line: 131, column: 1, scope: !6023)
!6047 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5970, file: !5970, line: 133, type: !6048, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !102}
!6050 = !{!6051, !6052, !6053}
!6051 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6047, file: !5970, line: 133, type: !102)
!6052 = !DILocalVariable(name: "ssf_contents", scope: !6047, file: !5970, line: 135, type: !890)
!6053 = !DILocalVariable(name: "oops_esf", scope: !6047, file: !5970, line: 136, type: !5975)
!6054 = !DILocation(line: 0, scope: !6047)
!6055 = !DILocation(line: 136, column: 2, scope: !6047)
!6056 = !DILocation(line: 136, column: 15, scope: !6047)
!6057 = !DILocation(line: 139, column: 22, scope: !6047)
!6058 = !DILocation(line: 139, column: 17, scope: !6047)
!6059 = !DILocation(line: 139, column: 20, scope: !6047)
!6060 = !DILocation(line: 141, column: 2, scope: !6047)
!6061 = !DILocation(line: 142, column: 2, scope: !6047)
!6062 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6063, file: !6063, line: 40, type: !5907, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6064)
!6063 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6064 = !{!6065}
!6065 = !DILocalVariable(name: "irq", arg: 1, scope: !6062, file: !6063, line: 40, type: !32)
!6066 = !DILocation(line: 0, scope: !6062)
!6067 = !DILocation(line: 42, column: 2, scope: !6062)
!6068 = !DILocation(line: 43, column: 1, scope: !6062)
!6069 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !6070, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6072)
!6070 = !DISubroutineType(types: !6071)
!6071 = !{null, !782}
!6072 = !{!6073}
!6073 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6069, file: !515, line: 1684, type: !782)
!6074 = !DILocation(line: 0, scope: !6069)
!6075 = !DILocation(line: 1686, column: 23, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6069, file: !515, line: 1686, column: 7)
!6077 = !DILocation(line: 1686, column: 7, scope: !6069)
!6078 = !DILocation(line: 1688, column: 5, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6076, file: !515, line: 1687, column: 3)
!6080 = !{i64 2151638954}
!6081 = !DILocation(line: 1689, column: 81, scope: !6079)
!6082 = !DILocation(line: 1689, column: 60, scope: !6079)
!6083 = !DILocation(line: 1689, column: 34, scope: !6079)
!6084 = !DILocation(line: 1689, column: 5, scope: !6079)
!6085 = !DILocation(line: 1689, column: 43, scope: !6079)
!6086 = !DILocation(line: 1690, column: 5, scope: !6079)
!6087 = !{i64 2151639068}
!6088 = !DILocation(line: 1691, column: 3, scope: !6079)
!6089 = !DILocation(line: 1692, column: 1, scope: !6069)
!6090 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6063, file: !6063, line: 45, type: !5907, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6091)
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "irq", arg: 1, scope: !6090, file: !6063, line: 45, type: !32)
!6093 = !DILocation(line: 0, scope: !6090)
!6094 = !DILocation(line: 47, column: 2, scope: !6090)
!6095 = !DILocation(line: 48, column: 1, scope: !6090)
!6096 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !6070, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6097)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6096, file: !515, line: 1722, type: !782)
!6099 = !DILocation(line: 0, scope: !6096)
!6100 = !DILocation(line: 1724, column: 23, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6096, file: !515, line: 1724, column: 7)
!6102 = !DILocation(line: 1724, column: 7, scope: !6096)
!6103 = !DILocation(line: 1726, column: 81, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !515, line: 1725, column: 3)
!6105 = !DILocation(line: 1726, column: 60, scope: !6104)
!6106 = !DILocation(line: 1726, column: 34, scope: !6104)
!6107 = !DILocation(line: 1726, column: 5, scope: !6104)
!6108 = !DILocation(line: 1726, column: 43, scope: !6104)
!6109 = !DILocation(line: 271, column: 3, scope: !6110, inlinedAt: !6112)
!6110 = distinct !DISubprogram(name: "__DSB", scope: !6111, file: !6111, line: 269, type: !3339, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !317)
!6111 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6112 = distinct !DILocation(line: 1727, column: 5, scope: !6104)
!6113 = !{i64 4093337}
!6114 = !DILocation(line: 260, column: 3, scope: !6115, inlinedAt: !6116)
!6115 = distinct !DISubprogram(name: "__ISB", scope: !6111, file: !6111, line: 258, type: !3339, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !317)
!6116 = distinct !DILocation(line: 1728, column: 5, scope: !6104)
!6117 = !{i64 4093054}
!6118 = !DILocation(line: 1729, column: 3, scope: !6104)
!6119 = !DILocation(line: 1730, column: 1, scope: !6096)
!6120 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6063, file: !6063, line: 50, type: !6121, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6123)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{!103, !32}
!6123 = !{!6124}
!6124 = !DILocalVariable(name: "irq", arg: 1, scope: !6120, file: !6063, line: 50, type: !32)
!6125 = !DILocation(line: 0, scope: !6120)
!6126 = !DILocation(line: 52, column: 20, scope: !6120)
!6127 = !DILocation(line: 52, column: 9, scope: !6120)
!6128 = !DILocation(line: 52, column: 41, scope: !6120)
!6129 = !DILocation(line: 52, column: 39, scope: !6120)
!6130 = !DILocation(line: 52, column: 2, scope: !6120)
!6131 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6063, file: !6063, line: 64, type: !6132, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6134)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{null, !32, !32, !121}
!6134 = !{!6135, !6136, !6137}
!6135 = !DILocalVariable(name: "irq", arg: 1, scope: !6131, file: !6063, line: 64, type: !32)
!6136 = !DILocalVariable(name: "prio", arg: 2, scope: !6131, file: !6063, line: 64, type: !32)
!6137 = !DILocalVariable(name: "flags", arg: 3, scope: !6131, file: !6063, line: 64, type: !121)
!6138 = !DILocation(line: 0, scope: !6131)
!6139 = !DILocation(line: 83, column: 8, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !6063, line: 82, column: 9)
!6141 = distinct !DILexicalBlock(scope: !6131, file: !6063, line: 76, column: 6)
!6142 = !DILocation(line: 95, column: 2, scope: !6131)
!6143 = !DILocation(line: 96, column: 1, scope: !6131)
!6144 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6145, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6147)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{null, !782, !121}
!6147 = !{!6148, !6149}
!6148 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6144, file: !515, line: 1814, type: !782)
!6149 = !DILocalVariable(name: "priority", arg: 2, scope: !6144, file: !515, line: 1814, type: !121)
!6150 = !DILocation(line: 0, scope: !6144)
!6151 = !DILocation(line: 0, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6144, file: !515, line: 1816, column: 7)
!6153 = !DILocation(line: 1816, column: 7, scope: !6144)
!6154 = !DILocation(line: 1824, column: 1, scope: !6144)
!6155 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6063, file: !6063, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6156)
!6156 = !{!6157}
!6157 = !DILocalVariable(name: "unused", arg: 1, scope: !6155, file: !6063, line: 155, type: !13)
!6158 = !DILocation(line: 0, scope: !6155)
!6159 = !DILocation(line: 159, column: 2, scope: !6155)
!6160 = !DILocation(line: 160, column: 1, scope: !6155)
!6161 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6162, file: !6162, line: 87, type: !3339, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2814, retainedNodes: !317)
!6162 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6163 = !DILocation(line: 89, column: 2, scope: !6161)
!6164 = !DILocation(line: 90, column: 2, scope: !6161)
!6165 = !DILocation(line: 91, column: 1, scope: !6161)
!6166 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6162, file: !6162, line: 23, type: !3339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6167 = !DISubprogram(name: "z_arm_int_exit", scope: !6168, file: !6168, line: 153, type: !3339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6168 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6169 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6170, file: !6170, line: 256, type: !3339, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !317)
!6170 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6171 = !DILocation(line: 258, column: 2, scope: !6169)
!6172 = !DILocation(line: 260, column: 2, scope: !6169)
!6173 = !DILocation(line: 262, column: 2, scope: !6169)
!6174 = !DILocation(line: 263, column: 2, scope: !6169)
!6175 = !DILocation(line: 267, column: 2, scope: !6169)
!6176 = !DILocation(line: 268, column: 2, scope: !6169)
!6177 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6170, file: !6170, line: 53, type: !3339, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !317)
!6178 = !DILocation(line: 55, column: 12, scope: !6177)
!6179 = !DILocation(line: 271, column: 3, scope: !6180, inlinedAt: !6181)
!6180 = distinct !DISubprogram(name: "__DSB", scope: !6111, file: !6111, line: 269, type: !3339, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !317)
!6181 = distinct !DILocation(line: 56, column: 2, scope: !6177)
!6182 = !{i64 4092008}
!6183 = !DILocation(line: 260, column: 3, scope: !6184, inlinedAt: !6185)
!6184 = distinct !DISubprogram(name: "__ISB", scope: !6111, file: !6111, line: 258, type: !3339, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !317)
!6185 = distinct !DILocation(line: 57, column: 2, scope: !6177)
!6186 = !{i64 4091725}
!6187 = !DILocation(line: 58, column: 1, scope: !6177)
!6188 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6170, file: !6170, line: 96, type: !3339, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !317)
!6189 = !DILocation(line: 103, column: 13, scope: !6188)
!6190 = !DILocation(line: 975, column: 3, scope: !6191, inlinedAt: !6196)
!6191 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6111, file: !6111, line: 971, type: !6192, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !6194)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!121}
!6194 = !{!6195}
!6195 = !DILocalVariable(name: "result", scope: !6191, file: !6111, line: 973, type: !121)
!6196 = distinct !DILocation(line: 189, column: 16, scope: !6188)
!6197 = !{i64 4112838}
!6198 = !DILocation(line: 0, scope: !6191, inlinedAt: !6196)
!6199 = !DILocation(line: 189, column: 32, scope: !6188)
!6200 = !DILocalVariable(name: "control", arg: 1, scope: !6201, file: !6111, line: 1001, type: !121)
!6201 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6111, file: !6111, line: 1001, type: !6202, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{null, !121}
!6204 = !{!6200}
!6205 = !DILocation(line: 0, scope: !6201, inlinedAt: !6206)
!6206 = distinct !DILocation(line: 189, column: 2, scope: !6188)
!6207 = !DILocation(line: 1003, column: 3, scope: !6201, inlinedAt: !6206)
!6208 = !{i64 4113558}
!6209 = !DILocation(line: 260, column: 3, scope: !6184, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 1004, column: 3, scope: !6201, inlinedAt: !6206)
!6211 = !DILocation(line: 191, column: 1, scope: !6188)
!6212 = distinct !DISubprogram(name: "arch_swap", scope: !6213, file: !6213, line: 33, type: !6121, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !6214)
!6213 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6214 = !{!6215}
!6215 = !DILocalVariable(name: "key", arg: 1, scope: !6212, file: !6213, line: 33, type: !32)
!6216 = !DILocation(line: 0, scope: !6212)
!6217 = !DILocation(line: 36, column: 2, scope: !6212)
!6218 = !DILocation(line: 36, column: 17, scope: !6212)
!6219 = !DILocation(line: 36, column: 25, scope: !6212)
!6220 = !DILocation(line: 37, column: 37, scope: !6212)
!6221 = !DILocation(line: 37, column: 17, scope: !6212)
!6222 = !DILocation(line: 37, column: 35, scope: !6212)
!6223 = !DILocation(line: 41, column: 12, scope: !6212)
!6224 = !DILocalVariable(name: "key", arg: 1, scope: !6225, file: !5896, line: 84, type: !32)
!6225 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !6226)
!6226 = !{!6224}
!6227 = !DILocation(line: 0, scope: !6225, inlinedAt: !6228)
!6228 = distinct !DILocation(line: 44, column: 2, scope: !6212)
!6229 = !DILocation(line: 95, column: 2, scope: !6225, inlinedAt: !6228)
!6230 = !{i64 2592852}
!6231 = !DILocation(line: 53, column: 9, scope: !6212)
!6232 = !DILocation(line: 53, column: 24, scope: !6212)
!6233 = !DILocation(line: 53, column: 2, scope: !6212)
!6234 = distinct !DISubprogram(name: "arch_new_thread", scope: !6235, file: !6235, line: 56, type: !6236, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !6343)
!6235 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !6238, !6338, !344, !3653, !102, !102, !102}
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6239, size: 32)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6240)
!6240 = !{!6241, !6299, !6311, !6312, !6313, !6314, !6320, !6333}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6239, file: !379, line: 247, baseType: !6242, size: 384)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6243)
!6243 = !{!6244, !6268, !6275, !6276, !6277, !6286, !6287, !6288}
!6244 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !379, line: 60, baseType: !6245, size: 64)
!6245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !379, line: 60, size: 64, elements: !6246)
!6246 = !{!6247, !6262}
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6245, file: !379, line: 61, baseType: !6248, size: 64)
!6248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6249)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6250)
!6250 = !{!6251, !6257}
!6251 = !DIDerivedType(tag: DW_TAG_member, scope: !6249, file: !325, line: 38, baseType: !6252, size: 32)
!6252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6249, file: !325, line: 38, size: 32, elements: !6253)
!6253 = !{!6254, !6256}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6252, file: !325, line: 39, baseType: !6255, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6252, file: !325, line: 40, baseType: !6255, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, scope: !6249, file: !325, line: 42, baseType: !6258, size: 32, offset: 32)
!6258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6249, file: !325, line: 42, size: 32, elements: !6259)
!6259 = !{!6260, !6261}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6258, file: !325, line: 43, baseType: !6255, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6258, file: !325, line: 44, baseType: !6255, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6245, file: !379, line: 62, baseType: !6263, size: 64)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6264)
!6264 = !{!6265}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6263, file: !404, line: 50, baseType: !6266, size: 64)
!6266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6267, size: 64, elements: !363)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6242, file: !379, line: 68, baseType: !6269, size: 32, offset: 64)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 32)
!6270 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6271)
!6271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6272)
!6272 = !{!6273}
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6271, file: !320, line: 232, baseType: !6274, size: 64)
!6274 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6249)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6242, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6242, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6277 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !379, line: 90, baseType: !6278, size: 16, offset: 112)
!6278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !379, line: 90, size: 16, elements: !6279)
!6279 = !{!6280, !6285}
!6280 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !379, line: 91, baseType: !6281, size: 16)
!6281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6278, file: !379, line: 91, size: 16, elements: !6282)
!6282 = !{!6283, !6284}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6281, file: !379, line: 96, baseType: !425, size: 8)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6281, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6278, file: !379, line: 100, baseType: !429, size: 16)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6242, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6242, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6242, file: !379, line: 131, baseType: !6289, size: 192, offset: 192)
!6289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6290)
!6290 = !{!6291, !6292, !6298}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6289, file: !320, line: 245, baseType: !6248, size: 64)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6289, file: !320, line: 246, baseType: !6293, size: 32, offset: 64)
!6293 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6294)
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 32)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{null, !6297}
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6289, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6239, file: !379, line: 250, baseType: !6300, size: 288, offset: 384)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6301)
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6300, file: !446, line: 26, baseType: !121, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6300, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6300, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6300, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6300, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6300, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6300, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6300, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6300, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6239, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6239, file: !379, line: 256, baseType: !6270, size: 64, offset: 704)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6239, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6239, file: !379, line: 300, baseType: !6315, size: 96, offset: 800)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6316)
!6316 = !{!6317, !6318, !6319}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6315, file: !379, line: 153, baseType: !22, size: 32)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6315, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6315, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6239, file: !379, line: 325, baseType: !6321, size: 32, offset: 896)
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6322, size: 32)
!6322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6323)
!6323 = !{!6324, !6330, !6331}
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6322, file: !296, line: 5074, baseType: !6325, size: 96)
!6325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6326)
!6326 = !{!6327, !6328, !6329}
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6325, file: !472, line: 57, baseType: !475, size: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6325, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6325, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6322, file: !296, line: 5075, baseType: !6270, size: 64, offset: 96)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6322, file: !296, line: 5076, baseType: !6332, offset: 160)
!6332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6239, file: !379, line: 343, baseType: !6334, size: 64, offset: 928)
!6334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6335)
!6335 = !{!6336, !6337}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6334, file: !446, line: 63, baseType: !121, size: 32)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6334, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 32)
!6339 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !6340)
!6340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2322, line: 47, size: 8, elements: !6341)
!6341 = !{!6342}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6340, file: !2322, line: 48, baseType: !146, size: 8)
!6343 = !{!6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351}
!6344 = !DILocalVariable(name: "thread", arg: 1, scope: !6234, file: !6235, line: 56, type: !6238)
!6345 = !DILocalVariable(name: "stack", arg: 2, scope: !6234, file: !6235, line: 56, type: !6338)
!6346 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6234, file: !6235, line: 57, type: !344)
!6347 = !DILocalVariable(name: "entry", arg: 4, scope: !6234, file: !6235, line: 57, type: !3653)
!6348 = !DILocalVariable(name: "p1", arg: 5, scope: !6234, file: !6235, line: 58, type: !102)
!6349 = !DILocalVariable(name: "p2", arg: 6, scope: !6234, file: !6235, line: 58, type: !102)
!6350 = !DILocalVariable(name: "p3", arg: 7, scope: !6234, file: !6235, line: 58, type: !102)
!6351 = !DILocalVariable(name: "iframe", scope: !6234, file: !6235, line: 60, type: !2875)
!6352 = !DILocation(line: 0, scope: !6234)
!6353 = !DILocation(line: 85, column: 11, scope: !6234)
!6354 = !DILocation(line: 93, column: 10, scope: !6234)
!6355 = !DILocation(line: 98, column: 13, scope: !6234)
!6356 = !DILocation(line: 100, column: 15, scope: !6234)
!6357 = !DILocation(line: 100, column: 10, scope: !6234)
!6358 = !DILocation(line: 100, column: 13, scope: !6234)
!6359 = !DILocation(line: 101, column: 15, scope: !6234)
!6360 = !DILocation(line: 101, column: 10, scope: !6234)
!6361 = !DILocation(line: 101, column: 13, scope: !6234)
!6362 = !DILocation(line: 102, column: 15, scope: !6234)
!6363 = !DILocation(line: 102, column: 10, scope: !6234)
!6364 = !DILocation(line: 102, column: 13, scope: !6234)
!6365 = !DILocation(line: 103, column: 15, scope: !6234)
!6366 = !DILocation(line: 103, column: 10, scope: !6234)
!6367 = !DILocation(line: 103, column: 13, scope: !6234)
!6368 = !DILocation(line: 106, column: 10, scope: !6234)
!6369 = !DILocation(line: 106, column: 15, scope: !6234)
!6370 = !DILocation(line: 122, column: 29, scope: !6234)
!6371 = !DILocation(line: 122, column: 23, scope: !6234)
!6372 = !DILocation(line: 122, column: 27, scope: !6234)
!6373 = !DILocation(line: 123, column: 15, scope: !6234)
!6374 = !DILocation(line: 123, column: 23, scope: !6234)
!6375 = !DILocation(line: 143, column: 1, scope: !6234)
!6376 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6235, file: !6235, line: 385, type: !6377, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !6380)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!121, !6379, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6380 = !{!6381, !6382, !6383, !6386}
!6381 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6376, file: !6235, line: 385, type: !6379)
!6382 = !DILocalVariable(name: "psp", arg: 2, scope: !6376, file: !6235, line: 385, type: !6379)
!6383 = !DILocalVariable(name: "thread", scope: !6376, file: !6235, line: 388, type: !6384)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 32)
!6385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6239)
!6386 = !DILocalVariable(name: "guard_len", scope: !6376, file: !6235, line: 405, type: !121)
!6387 = !DILocation(line: 0, scope: !6376)
!6388 = !DILocation(line: 388, column: 34, scope: !6376)
!6389 = !DILocation(line: 390, column: 13, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6376, file: !6235, line: 390, column: 6)
!6391 = !DILocation(line: 390, column: 6, scope: !6376)
!6392 = !DILocation(line: 438, column: 6, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6376, file: !6235, line: 438, column: 6)
!6394 = !DILocation(line: 438, column: 6, scope: !6376)
!6395 = !DILocation(line: 442, column: 3, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !6235, line: 440, column: 22)
!6397 = !DILocation(line: 455, column: 1, scope: !6376)
!6398 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6235, file: !6235, line: 530, type: !6399, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !6238, !344, !3653}
!6401 = !{!6402, !6403, !6404}
!6402 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6398, file: !6235, line: 530, type: !6238)
!6403 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6398, file: !6235, line: 530, type: !344)
!6404 = !DILocalVariable(name: "_main", arg: 3, scope: !6398, file: !6235, line: 531, type: !3653)
!6405 = !DILocation(line: 0, scope: !6398)
!6406 = !DILocation(line: 535, column: 11, scope: !6398)
!6407 = !DILocation(line: 560, column: 2, scope: !6398)
!6408 = !DILocation(line: 576, column: 2, scope: !6398)
!6409 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6410 = !DILocation(line: 603, column: 2, scope: !6398)
!6411 = distinct !DISubprogram(name: "z_arm_fault", scope: !6412, file: !6412, line: 1036, type: !6413, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6428)
!6412 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6413 = !DISubroutineType(types: !6414)
!6414 = !{null, !121, !121, !121, !6415}
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6416, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6417)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6418)
!6418 = !{!6419, !6420, !6421, !6422, !6423, !6424, !6425, !6426, !6427}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6417, file: !446, line: 26, baseType: !121, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6417, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6417, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6417, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6417, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6417, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6417, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6417, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6417, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6428 = !{!6429, !6430, !6431, !6432, !6433, !6434, !6435, !6436, !6437, !6438}
!6429 = !DILocalVariable(name: "msp", arg: 1, scope: !6411, file: !6412, line: 1036, type: !121)
!6430 = !DILocalVariable(name: "psp", arg: 2, scope: !6411, file: !6412, line: 1036, type: !121)
!6431 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6411, file: !6412, line: 1036, type: !121)
!6432 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6411, file: !6412, line: 1037, type: !6415)
!6433 = !DILocalVariable(name: "reason", scope: !6411, file: !6412, line: 1039, type: !121)
!6434 = !DILocalVariable(name: "fault", scope: !6411, file: !6412, line: 1040, type: !103)
!6435 = !DILocalVariable(name: "recoverable", scope: !6411, file: !6412, line: 1041, type: !157)
!6436 = !DILocalVariable(name: "nested_exc", scope: !6411, file: !6412, line: 1041, type: !157)
!6437 = !DILocalVariable(name: "esf", scope: !6411, file: !6412, line: 1042, type: !2943)
!6438 = !DILocalVariable(name: "esf_copy", scope: !6411, file: !6412, line: 1047, type: !2944)
!6439 = !DILocation(line: 0, scope: !6411)
!6440 = !DILocation(line: 1040, column: 19, scope: !6411)
!6441 = !DILocation(line: 1040, column: 24, scope: !6411)
!6442 = !DILocation(line: 1041, column: 2, scope: !6411)
!6443 = !DILocation(line: 1047, column: 2, scope: !6411)
!6444 = !DILocation(line: 1047, column: 15, scope: !6411)
!6445 = !DILocalVariable(name: "key", arg: 1, scope: !6446, file: !5896, line: 84, type: !32)
!6446 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6447)
!6447 = !{!6445}
!6448 = !DILocation(line: 0, scope: !6446, inlinedAt: !6449)
!6449 = distinct !DILocation(line: 1050, column: 2, scope: !6411)
!6450 = !DILocation(line: 95, column: 2, scope: !6446, inlinedAt: !6449)
!6451 = !{i64 2626096}
!6452 = !DILocation(line: 1055, column: 9, scope: !6411)
!6453 = !DILocation(line: 1063, column: 11, scope: !6411)
!6454 = !DILocation(line: 1064, column: 6, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6411, file: !6412, line: 1064, column: 6)
!6456 = !{i8 0, i8 2}
!6457 = !DILocation(line: 1064, column: 6, scope: !6411)
!6458 = !DILocation(line: 1070, column: 20, scope: !6411)
!6459 = !DILocation(line: 1070, column: 2, scope: !6411)
!6460 = !DILocation(line: 1089, column: 6, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6411, file: !6412, line: 1089, column: 6)
!6462 = !DILocation(line: 0, scope: !6461)
!6463 = !DILocation(line: 1089, column: 6, scope: !6411)
!6464 = !DILocation(line: 1090, column: 28, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !6412, line: 1090, column: 7)
!6466 = distinct !DILexicalBlock(scope: !6461, file: !6412, line: 1089, column: 18)
!6467 = !DILocation(line: 1090, column: 44, scope: !6465)
!6468 = !DILocation(line: 1090, column: 7, scope: !6466)
!6469 = !DILocation(line: 1091, column: 24, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6465, file: !6412, line: 1090, column: 50)
!6471 = !DILocation(line: 1092, column: 3, scope: !6470)
!6472 = !DILocation(line: 1094, column: 23, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6461, file: !6412, line: 1093, column: 9)
!6474 = !DILocation(line: 1097, column: 2, scope: !6411)
!6475 = !DILocation(line: 1098, column: 1, scope: !6411)
!6476 = distinct !DISubprogram(name: "get_esf", scope: !6412, file: !6412, line: 894, type: !6477, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6480)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!2943, !121, !121, !121, !6479}
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6480 = !{!6481, !6482, !6483, !6484, !6485, !6486}
!6481 = !DILocalVariable(name: "msp", arg: 1, scope: !6476, file: !6412, line: 894, type: !121)
!6482 = !DILocalVariable(name: "psp", arg: 2, scope: !6476, file: !6412, line: 894, type: !121)
!6483 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6476, file: !6412, line: 894, type: !121)
!6484 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6476, file: !6412, line: 895, type: !6479)
!6485 = !DILocalVariable(name: "alternative_state_exc", scope: !6476, file: !6412, line: 897, type: !157)
!6486 = !DILocalVariable(name: "ptr_esf", scope: !6476, file: !6412, line: 898, type: !2943)
!6487 = !DILocation(line: 0, scope: !6476)
!6488 = !DILocation(line: 900, column: 14, scope: !6476)
!6489 = !DILocation(line: 902, column: 49, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6476, file: !6412, line: 902, column: 6)
!6491 = !DILocation(line: 902, column: 6, scope: !6476)
!6492 = !DILocation(line: 983, column: 18, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6476, file: !6412, line: 983, column: 6)
!6494 = !DILocation(line: 991, column: 7, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !6412, line: 990, column: 30)
!6496 = distinct !DILexicalBlock(scope: !6476, file: !6412, line: 990, column: 6)
!6497 = !DILocation(line: 998, column: 16, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !6412, line: 995, column: 10)
!6499 = distinct !DILexicalBlock(scope: !6495, file: !6412, line: 991, column: 7)
!6500 = !DILocation(line: 1002, column: 2, scope: !6476)
!6501 = !DILocation(line: 1003, column: 1, scope: !6476)
!6502 = distinct !DISubprogram(name: "fault_handle", scope: !6412, file: !6412, line: 786, type: !6503, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!121, !2943, !103, !6479}
!6505 = !{!6506, !6507, !6508, !6509}
!6506 = !DILocalVariable(name: "esf", arg: 1, scope: !6502, file: !6412, line: 786, type: !2943)
!6507 = !DILocalVariable(name: "fault", arg: 2, scope: !6502, file: !6412, line: 786, type: !103)
!6508 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6502, file: !6412, line: 786, type: !6479)
!6509 = !DILocalVariable(name: "reason", scope: !6502, file: !6412, line: 788, type: !121)
!6510 = !DILocation(line: 0, scope: !6502)
!6511 = !DILocation(line: 790, column: 15, scope: !6502)
!6512 = !DILocation(line: 792, column: 2, scope: !6502)
!6513 = !DILocation(line: 794, column: 12, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6502, file: !6412, line: 792, column: 17)
!6515 = !DILocation(line: 795, column: 3, scope: !6514)
!6516 = !DILocation(line: 800, column: 12, scope: !6514)
!6517 = !DILocation(line: 801, column: 3, scope: !6514)
!6518 = !DILocation(line: 803, column: 12, scope: !6514)
!6519 = !DILocation(line: 804, column: 3, scope: !6514)
!6520 = !DILocation(line: 806, column: 12, scope: !6514)
!6521 = !DILocation(line: 807, column: 3, scope: !6514)
!6522 = !DILocation(line: 814, column: 3, scope: !6514)
!6523 = !DILocation(line: 815, column: 3, scope: !6514)
!6524 = !DILocation(line: 829, column: 2, scope: !6502)
!6525 = distinct !DISubprogram(name: "hard_fault", scope: !6412, file: !6412, line: 709, type: !6526, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6528)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!121, !2943, !6479}
!6528 = !{!6529, !6530, !6531}
!6529 = !DILocalVariable(name: "esf", arg: 1, scope: !6525, file: !6412, line: 709, type: !2943)
!6530 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6525, file: !6412, line: 709, type: !6479)
!6531 = !DILocalVariable(name: "reason", scope: !6525, file: !6412, line: 711, type: !121)
!6532 = !DILocation(line: 0, scope: !6525)
!6533 = !DILocation(line: 732, column: 15, scope: !6525)
!6534 = !DILocation(line: 734, column: 12, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6525, file: !6412, line: 734, column: 6)
!6536 = !DILocation(line: 734, column: 17, scope: !6535)
!6537 = !DILocation(line: 734, column: 41, scope: !6535)
!6538 = !DILocation(line: 734, column: 6, scope: !6525)
!6539 = !DILocation(line: 736, column: 19, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6535, file: !6412, line: 736, column: 13)
!6541 = !DILocation(line: 736, column: 49, scope: !6540)
!6542 = !DILocation(line: 736, column: 13, scope: !6535)
!6543 = !DILocation(line: 738, column: 19, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6540, file: !6412, line: 738, column: 13)
!6545 = !DILocation(line: 738, column: 24, scope: !6544)
!6546 = !DILocation(line: 738, column: 47, scope: !6544)
!6547 = !DILocation(line: 738, column: 13, scope: !6540)
!6548 = !DILocation(line: 740, column: 7, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !6412, line: 740, column: 7)
!6550 = distinct !DILexicalBlock(scope: !6544, file: !6412, line: 738, column: 53)
!6551 = !DILocation(line: 740, column: 7, scope: !6550)
!6552 = !DILocation(line: 742, column: 24, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !6412, line: 740, column: 38)
!6554 = !DILocation(line: 743, column: 3, scope: !6553)
!6555 = !DILocation(line: 743, column: 20, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6549, file: !6412, line: 743, column: 14)
!6557 = !DILocation(line: 743, column: 25, scope: !6556)
!6558 = !DILocation(line: 743, column: 52, scope: !6556)
!6559 = !DILocation(line: 743, column: 14, scope: !6549)
!6560 = !DILocation(line: 744, column: 13, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6556, file: !6412, line: 743, column: 58)
!6562 = !DILocation(line: 745, column: 3, scope: !6561)
!6563 = !DILocation(line: 745, column: 20, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6556, file: !6412, line: 745, column: 14)
!6565 = !DILocation(line: 745, column: 25, scope: !6564)
!6566 = !DILocation(line: 745, column: 52, scope: !6564)
!6567 = !DILocation(line: 745, column: 14, scope: !6556)
!6568 = !DILocation(line: 746, column: 13, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6564, file: !6412, line: 745, column: 58)
!6570 = !DILocation(line: 747, column: 3, scope: !6569)
!6571 = !DILocation(line: 747, column: 20, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6564, file: !6412, line: 747, column: 14)
!6573 = !DILocation(line: 747, column: 52, scope: !6572)
!6574 = !DILocation(line: 747, column: 14, scope: !6564)
!6575 = !DILocation(line: 748, column: 13, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !6412, line: 747, column: 58)
!6577 = !DILocation(line: 753, column: 3, scope: !6576)
!6578 = !DILocation(line: 766, column: 2, scope: !6525)
!6579 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6412, file: !6412, line: 229, type: !6503, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6580)
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6589}
!6581 = !DILocalVariable(name: "esf", arg: 1, scope: !6579, file: !6412, line: 229, type: !2943)
!6582 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6579, file: !6412, line: 229, type: !103)
!6583 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6579, file: !6412, line: 230, type: !6479)
!6584 = !DILocalVariable(name: "reason", scope: !6579, file: !6412, line: 232, type: !121)
!6585 = !DILocalVariable(name: "mmfar", scope: !6579, file: !6412, line: 233, type: !121)
!6586 = !DILocalVariable(name: "temp", scope: !6587, file: !6412, line: 254, type: !121)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !6412, line: 244, column: 48)
!6588 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 244, column: 6)
!6589 = !DILocalVariable(name: "min_stack_ptr", scope: !6590, file: !6412, line: 309, type: !121)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !6412, line: 308, column: 43)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !6412, line: 308, column: 7)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !6412, line: 289, column: 40)
!6593 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 288, column: 6)
!6594 = !DILocation(line: 0, scope: !6579)
!6595 = !DILocation(line: 237, column: 12, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 237, column: 6)
!6597 = !DILocation(line: 241, column: 12, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 241, column: 6)
!6599 = !DILocation(line: 244, column: 12, scope: !6588)
!6600 = !DILocation(line: 244, column: 17, scope: !6588)
!6601 = !DILocation(line: 244, column: 42, scope: !6588)
!6602 = !DILocation(line: 244, column: 6, scope: !6579)
!6603 = !DILocation(line: 254, column: 24, scope: !6587)
!6604 = !DILocation(line: 0, scope: !6587)
!6605 = !DILocation(line: 256, column: 13, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6587, file: !6412, line: 256, column: 7)
!6607 = !DILocation(line: 256, column: 18, scope: !6606)
!6608 = !DILocation(line: 256, column: 44, scope: !6606)
!6609 = !DILocation(line: 256, column: 7, scope: !6587)
!6610 = !DILocation(line: 259, column: 24, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !6412, line: 259, column: 8)
!6612 = distinct !DILexicalBlock(scope: !6606, file: !6412, line: 256, column: 50)
!6613 = !DILocation(line: 259, column: 8, scope: !6612)
!6614 = !DILocation(line: 261, column: 15, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !6412, line: 259, column: 30)
!6616 = !DILocation(line: 262, column: 4, scope: !6615)
!6617 = !DILocation(line: 265, column: 12, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 265, column: 6)
!6619 = !DILocation(line: 269, column: 12, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 269, column: 6)
!6621 = !DILocation(line: 288, column: 12, scope: !6593)
!6622 = !DILocation(line: 288, column: 17, scope: !6593)
!6623 = !DILocation(line: 288, column: 41, scope: !6593)
!6624 = !DILocation(line: 289, column: 9, scope: !6593)
!6625 = !DILocation(line: 289, column: 14, scope: !6593)
!6626 = !DILocation(line: 288, column: 6, scope: !6579)
!6627 = !DILocation(line: 308, column: 12, scope: !6591)
!6628 = !DILocation(line: 308, column: 17, scope: !6591)
!6629 = !DILocation(line: 308, column: 7, scope: !6592)
!6630 = !DILocation(line: 310, column: 6, scope: !6590)
!6631 = !DILocation(line: 309, column: 29, scope: !6590)
!6632 = !DILocation(line: 0, scope: !6590)
!6633 = !DILocation(line: 312, column: 8, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6590, file: !6412, line: 312, column: 8)
!6635 = !DILocation(line: 312, column: 8, scope: !6590)
!6636 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6637, file: !6111, line: 1099, type: !121)
!6637 = distinct !DISubprogram(name: "__set_PSP", scope: !6111, file: !6111, line: 1099, type: !6202, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6638)
!6638 = !{!6636}
!6639 = !DILocation(line: 0, scope: !6637, inlinedAt: !6640)
!6640 = distinct !DILocation(line: 338, column: 5, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6634, file: !6412, line: 312, column: 23)
!6642 = !DILocation(line: 1101, column: 3, scope: !6637, inlinedAt: !6640)
!6643 = !{i64 4142977}
!6644 = !DILocation(line: 341, column: 4, scope: !6641)
!6645 = !DILocation(line: 360, column: 12, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6579, file: !6412, line: 360, column: 6)
!6647 = !DILocation(line: 360, column: 17, scope: !6646)
!6648 = !DILocation(line: 360, column: 41, scope: !6646)
!6649 = !DILocation(line: 360, column: 6, scope: !6579)
!6650 = !DILocation(line: 361, column: 14, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6646, file: !6412, line: 360, column: 47)
!6652 = !DILocation(line: 362, column: 2, scope: !6651)
!6653 = !DILocation(line: 366, column: 12, scope: !6579)
!6654 = !DILocation(line: 369, column: 15, scope: !6579)
!6655 = !DILocation(line: 371, column: 2, scope: !6579)
!6656 = distinct !DISubprogram(name: "bus_fault", scope: !6412, file: !6412, line: 383, type: !6657, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6659)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!103, !2943, !103, !6479}
!6659 = !{!6660, !6661, !6662, !6663, !6664}
!6660 = !DILocalVariable(name: "esf", arg: 1, scope: !6656, file: !6412, line: 383, type: !2943)
!6661 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6656, file: !6412, line: 383, type: !103)
!6662 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6656, file: !6412, line: 383, type: !6479)
!6663 = !DILocalVariable(name: "reason", scope: !6656, file: !6412, line: 385, type: !121)
!6664 = !DILocalVariable(name: "bfar", scope: !6665, file: !6412, line: 405, type: !121)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !6412, line: 395, column: 42)
!6666 = distinct !DILexicalBlock(scope: !6656, file: !6412, line: 395, column: 6)
!6667 = !DILocation(line: 0, scope: !6656)
!6668 = !DILocation(line: 389, column: 11, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6656, file: !6412, line: 389, column: 6)
!6670 = !DILocation(line: 392, column: 11, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6656, file: !6412, line: 392, column: 6)
!6672 = !DILocation(line: 395, column: 11, scope: !6666)
!6673 = !DILocation(line: 395, column: 16, scope: !6666)
!6674 = !DILocation(line: 395, column: 6, scope: !6656)
!6675 = !DILocation(line: 405, column: 3, scope: !6665)
!6676 = !DILocation(line: 0, scope: !6665)
!6677 = !DILocation(line: 407, column: 13, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6665, file: !6412, line: 407, column: 7)
!6679 = !DILocation(line: 407, column: 18, scope: !6678)
!6680 = !DILocation(line: 407, column: 44, scope: !6678)
!6681 = !DILocation(line: 407, column: 7, scope: !6665)
!6682 = !DILocation(line: 411, column: 15, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6412, line: 409, column: 30)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6412, line: 409, column: 8)
!6685 = distinct !DILexicalBlock(scope: !6678, file: !6412, line: 407, column: 50)
!6686 = !DILocation(line: 412, column: 4, scope: !6683)
!6687 = !DILocation(line: 415, column: 11, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6656, file: !6412, line: 415, column: 6)
!6689 = !DILocation(line: 418, column: 12, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6656, file: !6412, line: 418, column: 6)
!6691 = !DILocation(line: 418, column: 17, scope: !6690)
!6692 = !DILocation(line: 418, column: 41, scope: !6690)
!6693 = !DILocation(line: 418, column: 6, scope: !6656)
!6694 = !DILocation(line: 423, column: 18, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6690, file: !6412, line: 423, column: 13)
!6696 = !DILocation(line: 524, column: 12, scope: !6656)
!6697 = !DILocation(line: 526, column: 15, scope: !6656)
!6698 = !DILocation(line: 528, column: 2, scope: !6656)
!6699 = distinct !DISubprogram(name: "usage_fault", scope: !6412, file: !6412, line: 539, type: !6700, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6704)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!121, !6702}
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6703, size: 32)
!6703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2944)
!6704 = !{!6705, !6706}
!6705 = !DILocalVariable(name: "esf", arg: 1, scope: !6699, file: !6412, line: 539, type: !6702)
!6706 = !DILocalVariable(name: "reason", scope: !6699, file: !6412, line: 541, type: !121)
!6707 = !DILocation(line: 0, scope: !6699)
!6708 = !DILocation(line: 546, column: 12, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 546, column: 6)
!6710 = !DILocation(line: 549, column: 12, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 549, column: 6)
!6712 = !DILocation(line: 567, column: 12, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 567, column: 6)
!6714 = !DILocation(line: 570, column: 12, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 570, column: 6)
!6716 = !DILocation(line: 573, column: 12, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 573, column: 6)
!6718 = !DILocation(line: 576, column: 12, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6699, file: !6412, line: 576, column: 6)
!6720 = !DILocation(line: 581, column: 12, scope: !6699)
!6721 = !DILocation(line: 583, column: 2, scope: !6699)
!6722 = distinct !DISubprogram(name: "debug_monitor", scope: !6412, file: !6412, line: 632, type: !6723, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6725)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{null, !2943, !6479}
!6725 = !{!6726, !6727}
!6726 = !DILocalVariable(name: "esf", arg: 1, scope: !6722, file: !6412, line: 632, type: !2943)
!6727 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6722, file: !6412, line: 632, type: !6479)
!6728 = !DILocation(line: 0, scope: !6722)
!6729 = !DILocation(line: 634, column: 15, scope: !6722)
!6730 = !DILocation(line: 652, column: 1, scope: !6722)
!6731 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6412, file: !6412, line: 658, type: !6732, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !6734)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!157, !2943}
!6734 = !{!6735, !6736, !6737}
!6735 = !DILocalVariable(name: "esf", arg: 1, scope: !6731, file: !6412, line: 658, type: !2943)
!6736 = !DILocalVariable(name: "ret_addr", scope: !6731, file: !6412, line: 660, type: !2717)
!6737 = !DILocalVariable(name: "fault_insn", scope: !6731, file: !6412, line: 686, type: !429)
!6738 = !DILocation(line: 0, scope: !6731)
!6739 = !DILocation(line: 660, column: 46, scope: !6731)
!6740 = !DILocation(line: 660, column: 23, scope: !6731)
!6741 = !DILocation(line: 682, column: 11, scope: !6731)
!6742 = !DILocation(line: 271, column: 3, scope: !6743, inlinedAt: !6744)
!6743 = distinct !DISubprogram(name: "__DSB", scope: !6111, file: !6111, line: 269, type: !3339, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !317)
!6744 = distinct !DILocation(line: 683, column: 2, scope: !6731)
!6745 = !{i64 4119112}
!6746 = !DILocation(line: 260, column: 3, scope: !6747, inlinedAt: !6748)
!6747 = distinct !DISubprogram(name: "__ISB", scope: !6111, file: !6111, line: 258, type: !3339, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !317)
!6748 = distinct !DILocation(line: 684, column: 2, scope: !6731)
!6749 = !{i64 4118829}
!6750 = !DILocation(line: 686, column: 35, scope: !6731)
!6751 = !DILocation(line: 686, column: 24, scope: !6731)
!6752 = !DILocation(line: 688, column: 11, scope: !6731)
!6753 = !DILocation(line: 271, column: 3, scope: !6743, inlinedAt: !6754)
!6754 = distinct !DILocation(line: 689, column: 2, scope: !6731)
!6755 = !DILocation(line: 260, column: 3, scope: !6747, inlinedAt: !6756)
!6756 = distinct !DILocation(line: 690, column: 2, scope: !6731)
!6757 = !DILocation(line: 693, column: 45, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6731, file: !6412, line: 693, column: 6)
!6759 = !DILocation(line: 699, column: 1, scope: !6731)
!6760 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6412, file: !6412, line: 1107, type: !3339, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !317)
!6761 = !DILocation(line: 1111, column: 11, scope: !6760)
!6762 = !DILocation(line: 1136, column: 1, scope: !6760)
!6763 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6764, file: !6764, line: 26, type: !3339, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !6765)
!6764 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6765 = !{!6766}
!6766 = !DILocalVariable(name: "irq", scope: !6763, file: !6764, line: 28, type: !103)
!6767 = !DILocation(line: 0, scope: !6763)
!6768 = !DILocation(line: 30, column: 2, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6763, file: !6764, line: 30, column: 2)
!6770 = !DILocation(line: 31, column: 3, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6764, line: 30, column: 39)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !6764, line: 30, column: 2)
!6773 = !DILocation(line: 30, column: 35, scope: !6772)
!6774 = !DILocation(line: 30, column: 13, scope: !6772)
!6775 = distinct !{!6775, !6768, !6776}
!6776 = !DILocation(line: 32, column: 2, scope: !6769)
!6777 = !DILocation(line: 33, column: 1, scope: !6763)
!6778 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6145, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !6779)
!6779 = !{!6780, !6781}
!6780 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6778, file: !515, line: 1814, type: !782)
!6781 = !DILocalVariable(name: "priority", arg: 2, scope: !6778, file: !515, line: 1814, type: !121)
!6782 = !DILocation(line: 0, scope: !6778)
!6783 = !DILocation(line: 1816, column: 7, scope: !6778)
!6784 = !DILocation(line: 0, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6778, file: !515, line: 1816, column: 7)
!6786 = !DILocation(line: 1824, column: 1, scope: !6778)
!6787 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6788, file: !6788, line: 27, type: !6789, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !6892)
!6788 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6789 = !DISubroutineType(types: !6790)
!6790 = !{null, !6791}
!6791 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6792)
!6792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 32)
!6793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6794)
!6794 = !{!6795, !6853, !6865, !6866, !6867, !6868, !6874, !6887}
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6793, file: !379, line: 247, baseType: !6796, size: 384)
!6796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6797)
!6797 = !{!6798, !6822, !6829, !6830, !6831, !6840, !6841, !6842}
!6798 = !DIDerivedType(tag: DW_TAG_member, scope: !6796, file: !379, line: 60, baseType: !6799, size: 64)
!6799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6796, file: !379, line: 60, size: 64, elements: !6800)
!6800 = !{!6801, !6816}
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6799, file: !379, line: 61, baseType: !6802, size: 64)
!6802 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6803)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6804)
!6804 = !{!6805, !6811}
!6805 = !DIDerivedType(tag: DW_TAG_member, scope: !6803, file: !325, line: 38, baseType: !6806, size: 32)
!6806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6803, file: !325, line: 38, size: 32, elements: !6807)
!6807 = !{!6808, !6810}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6806, file: !325, line: 39, baseType: !6809, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6806, file: !325, line: 40, baseType: !6809, size: 32)
!6811 = !DIDerivedType(tag: DW_TAG_member, scope: !6803, file: !325, line: 42, baseType: !6812, size: 32, offset: 32)
!6812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6803, file: !325, line: 42, size: 32, elements: !6813)
!6813 = !{!6814, !6815}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6812, file: !325, line: 43, baseType: !6809, size: 32)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6812, file: !325, line: 44, baseType: !6809, size: 32)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6799, file: !379, line: 62, baseType: !6817, size: 64)
!6817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6818)
!6818 = !{!6819}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6817, file: !404, line: 50, baseType: !6820, size: 64)
!6820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6821, size: 64, elements: !363)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 32)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6796, file: !379, line: 68, baseType: !6823, size: 32, offset: 64)
!6823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6824, size: 32)
!6824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6825)
!6825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6826)
!6826 = !{!6827}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6825, file: !320, line: 232, baseType: !6828, size: 64)
!6828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6803)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6796, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6796, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6831 = !DIDerivedType(tag: DW_TAG_member, scope: !6796, file: !379, line: 90, baseType: !6832, size: 16, offset: 112)
!6832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6796, file: !379, line: 90, size: 16, elements: !6833)
!6833 = !{!6834, !6839}
!6834 = !DIDerivedType(tag: DW_TAG_member, scope: !6832, file: !379, line: 91, baseType: !6835, size: 16)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6832, file: !379, line: 91, size: 16, elements: !6836)
!6836 = !{!6837, !6838}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6835, file: !379, line: 96, baseType: !425, size: 8)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6835, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6832, file: !379, line: 100, baseType: !429, size: 16)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6796, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6796, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6796, file: !379, line: 131, baseType: !6843, size: 192, offset: 192)
!6843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6844)
!6844 = !{!6845, !6846, !6852}
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6843, file: !320, line: 245, baseType: !6802, size: 64)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6843, file: !320, line: 246, baseType: !6847, size: 32, offset: 64)
!6847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6848)
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 32)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !6851}
!6851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6843, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6793, file: !379, line: 250, baseType: !6854, size: 288, offset: 384)
!6854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6855)
!6855 = !{!6856, !6857, !6858, !6859, !6860, !6861, !6862, !6863, !6864}
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6854, file: !446, line: 26, baseType: !121, size: 32)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6854, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6854, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6854, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6854, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6854, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6854, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6854, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6854, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6793, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6793, file: !379, line: 256, baseType: !6824, size: 64, offset: 704)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6793, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6793, file: !379, line: 300, baseType: !6869, size: 96, offset: 800)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6870)
!6870 = !{!6871, !6872, !6873}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6869, file: !379, line: 153, baseType: !22, size: 32)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6869, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6869, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6793, file: !379, line: 325, baseType: !6875, size: 32, offset: 896)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 32)
!6876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6877)
!6877 = !{!6878, !6884, !6885}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6876, file: !296, line: 5074, baseType: !6879, size: 96)
!6879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6880)
!6880 = !{!6881, !6882, !6883}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6879, file: !472, line: 57, baseType: !475, size: 32)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6879, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6879, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6876, file: !296, line: 5075, baseType: !6824, size: 64, offset: 96)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6876, file: !296, line: 5076, baseType: !6886, offset: 160)
!6886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6793, file: !379, line: 343, baseType: !6888, size: 64, offset: 928)
!6888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6889)
!6889 = !{!6890, !6891}
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6888, file: !446, line: 63, baseType: !121, size: 32)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6888, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6892 = !{!6893}
!6893 = !DILocalVariable(name: "thread", arg: 1, scope: !6787, file: !6788, line: 27, type: !6791)
!6894 = !DILocation(line: 0, scope: !6787)
!6895 = !DILocation(line: 29, column: 6, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6787, file: !6788, line: 29, column: 6)
!6897 = !DILocation(line: 29, column: 15, scope: !6896)
!6898 = !DILocation(line: 29, column: 6, scope: !6787)
!6899 = !DILocation(line: 1031, column: 3, scope: !6900, inlinedAt: !6903)
!6900 = distinct !DISubprogram(name: "__get_IPSR", scope: !6111, file: !6111, line: 1027, type: !6192, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !6901)
!6901 = !{!6902}
!6902 = !DILocalVariable(name: "result", scope: !6900, file: !6111, line: 1029, type: !121)
!6903 = distinct !DILocation(line: 48, column: 10, scope: !6904, inlinedAt: !6908)
!6904 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6905, file: !6905, line: 46, type: !6906, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3031, retainedNodes: !317)
!6905 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!157}
!6908 = distinct !DILocation(line: 30, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6788, line: 30, column: 7)
!6910 = distinct !DILexicalBlock(scope: !6896, file: !6788, line: 29, column: 26)
!6911 = !{i64 4107960}
!6912 = !DILocation(line: 0, scope: !6900, inlinedAt: !6903)
!6913 = !DILocation(line: 48, column: 9, scope: !6904, inlinedAt: !6908)
!6914 = !DILocation(line: 30, column: 7, scope: !6910)
!6915 = !DILocation(line: 42, column: 14, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6909, file: !6788, line: 30, column: 25)
!6917 = !DILocation(line: 48, column: 15, scope: !6916)
!6918 = !DILocation(line: 49, column: 3, scope: !6916)
!6919 = !DILocation(line: 52, column: 2, scope: !6787)
!6920 = !DILocation(line: 53, column: 1, scope: !6787)
!6921 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3339, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6922 = !DILocation(line: 134, column: 2, scope: !6921)
!6923 = !DILocation(line: 156, column: 1, scope: !6921)
!6924 = !DILocation(line: 0, scope: !373)
!6925 = !DILocation(line: 289, column: 36, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6927 = !DILocation(line: 289, column: 42, scope: !6926)
!6928 = !DILocation(line: 300, column: 36, scope: !373)
!6929 = !DILocation(line: 301, column: 35, scope: !373)
!6930 = !DILocation(line: 302, column: 37, scope: !373)
!6931 = !DILocation(line: 311, column: 2, scope: !373)
!6932 = !DILocation(line: 316, column: 1, scope: !373)
!6933 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3339, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6934 = !DILocation(line: 188, column: 12, scope: !6933)
!6935 = !DILocation(line: 271, column: 3, scope: !6936, inlinedAt: !6937)
!6936 = distinct !DISubprogram(name: "__DSB", scope: !6111, file: !6111, line: 269, type: !3339, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6937 = distinct !DILocation(line: 192, column: 2, scope: !6933)
!6938 = !{i64 4301472}
!6939 = !DILocation(line: 260, column: 3, scope: !6940, inlinedAt: !6941)
!6940 = distinct !DISubprogram(name: "__ISB", scope: !6111, file: !6111, line: 258, type: !3339, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6941 = distinct !DILocation(line: 193, column: 2, scope: !6933)
!6942 = !{i64 4301189}
!6943 = !DILocation(line: 194, column: 1, scope: !6933)
!6944 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3339, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6945 = !DILocation(line: 282, column: 3, scope: !6946, inlinedAt: !6947)
!6946 = distinct !DISubprogram(name: "__DMB", scope: !6111, file: !6111, line: 280, type: !3339, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6947 = distinct !DILocation(line: 202, column: 2, scope: !6944)
!6948 = !{i64 4301748}
!6949 = !DILocation(line: 205, column: 12, scope: !6944)
!6950 = !DILocation(line: 206, column: 1, scope: !6944)
!6951 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6952, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6965)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{null, !6954, !262, !6379, !6379}
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 32)
!6955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6956)
!6956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6957)
!6957 = !{!6958, !6959, !6960}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6956, file: !494, line: 53, baseType: !22, size: 32)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6956, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6956, file: !494, line: 55, baseType: !6961, size: 32, offset: 64)
!6961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6962)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6963)
!6963 = !{!6964}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6962, file: !500, line: 150, baseType: !121, size: 32)
!6965 = !{!6966, !6967, !6968, !6969}
!6966 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6951, file: !543, line: 276, type: !6954)
!6967 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6951, file: !543, line: 276, type: !262)
!6968 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6951, file: !543, line: 277, type: !6379)
!6969 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6951, file: !543, line: 277, type: !6379)
!6970 = !DILocation(line: 0, scope: !6951)
!6971 = !DILocation(line: 279, column: 6, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6951, file: !543, line: 279, column: 6)
!6973 = !DILocation(line: 285, column: 1, scope: !6951)
!6974 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6975, file: !6975, line: 220, type: !6976, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6978)
!6975 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!103, !6954, !262, !6379, !6379}
!6978 = !{!6979, !6980, !6981, !6982, !6983}
!6979 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6974, file: !6975, line: 221, type: !6954)
!6980 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6974, file: !6975, line: 221, type: !262)
!6981 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6974, file: !6975, line: 222, type: !6379)
!6982 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6974, file: !6975, line: 223, type: !6379)
!6983 = !DILocalVariable(name: "mpu_reg_index", scope: !6974, file: !6975, line: 225, type: !103)
!6984 = !DILocation(line: 0, scope: !6974)
!6985 = !DILocation(line: 225, column: 22, scope: !6974)
!6986 = !DILocation(line: 233, column: 18, scope: !6974)
!6987 = !DILocation(line: 236, column: 23, scope: !6974)
!6988 = !DILocation(line: 236, column: 21, scope: !6974)
!6989 = !DILocation(line: 238, column: 2, scope: !6974)
!6990 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6991, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6993)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{!103, !6954, !154, !154, !157}
!6993 = !{!6994, !6995, !6996, !6997, !6998, !6999}
!6994 = !DILocalVariable(name: "regions", arg: 1, scope: !6990, file: !543, line: 106, type: !6954)
!6995 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6990, file: !543, line: 106, type: !154)
!6996 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6990, file: !543, line: 106, type: !154)
!6997 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6990, file: !543, line: 107, type: !157)
!6998 = !DILocalVariable(name: "i", scope: !6990, file: !543, line: 109, type: !103)
!6999 = !DILocalVariable(name: "reg_index", scope: !6990, file: !543, line: 110, type: !103)
!7000 = !DILocation(line: 0, scope: !6990)
!7001 = !DILocation(line: 110, column: 18, scope: !6990)
!7002 = !DILocation(line: 112, column: 16, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !543, line: 112, column: 2)
!7004 = distinct !DILexicalBlock(scope: !6990, file: !543, line: 112, column: 2)
!7005 = !DILocation(line: 112, column: 2, scope: !7004)
!7006 = !DILocation(line: 113, column: 7, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !543, line: 113, column: 7)
!7008 = distinct !DILexicalBlock(scope: !7003, file: !543, line: 112, column: 36)
!7009 = !DILocation(line: 113, column: 18, scope: !7007)
!7010 = !DILocation(line: 113, column: 23, scope: !7007)
!7011 = !DILocation(line: 113, column: 7, scope: !7008)
!7012 = !DILocation(line: 118, column: 23, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7008, file: !543, line: 118, column: 7)
!7014 = !DILocation(line: 119, column: 7, scope: !7013)
!7015 = !DILocation(line: 118, column: 7, scope: !7008)
!7016 = !DILocation(line: 124, column: 36, scope: !7008)
!7017 = !DILocation(line: 124, column: 15, scope: !7008)
!7018 = !DILocation(line: 126, column: 17, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7008, file: !543, line: 126, column: 7)
!7020 = !DILocation(line: 126, column: 7, scope: !7008)
!7021 = !DILocation(line: 131, column: 12, scope: !7008)
!7022 = !DILocation(line: 132, column: 2, scope: !7008)
!7023 = !DILocation(line: 112, column: 32, scope: !7003)
!7024 = distinct !{!7024, !7005, !7025}
!7025 = !DILocation(line: 132, column: 2, scope: !7004)
!7026 = !DILocation(line: 135, column: 1, scope: !6990)
!7027 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6975, file: !6975, line: 63, type: !7028, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7030)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!103, !6954}
!7030 = !{!7031, !7032}
!7031 = !DILocalVariable(name: "part", arg: 1, scope: !7027, file: !6975, line: 63, type: !6954)
!7032 = !DILocalVariable(name: "partition_is_valid", scope: !7027, file: !6975, line: 70, type: !103)
!7033 = !DILocation(line: 0, scope: !7027)
!7034 = !DILocation(line: 71, column: 11, scope: !7027)
!7035 = !DILocation(line: 71, column: 37, scope: !7027)
!7036 = !DILocation(line: 72, column: 3, scope: !7027)
!7037 = !DILocation(line: 71, column: 30, scope: !7027)
!7038 = !DILocation(line: 75, column: 11, scope: !7027)
!7039 = !DILocation(line: 75, column: 17, scope: !7027)
!7040 = !DILocation(line: 75, column: 38, scope: !7027)
!7041 = !DILocation(line: 77, column: 2, scope: !7027)
!7042 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !7043, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7045)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{!103, !262, !6954}
!7045 = !{!7046, !7047, !7048}
!7046 = !DILocalVariable(name: "index", arg: 1, scope: !7042, file: !543, line: 79, type: !262)
!7047 = !DILocalVariable(name: "new_region", arg: 2, scope: !7042, file: !543, line: 80, type: !6954)
!7048 = !DILocalVariable(name: "region_conf", scope: !7042, file: !543, line: 82, type: !532)
!7049 = !DILocation(line: 0, scope: !7042)
!7050 = !DILocation(line: 82, column: 2, scope: !7042)
!7051 = !DILocation(line: 82, column: 24, scope: !7042)
!7052 = !DILocation(line: 87, column: 33, scope: !7042)
!7053 = !DILocation(line: 87, column: 14, scope: !7042)
!7054 = !DILocation(line: 87, column: 19, scope: !7042)
!7055 = !DILocation(line: 91, column: 55, scope: !7042)
!7056 = !DILocation(line: 92, column: 16, scope: !7042)
!7057 = !DILocation(line: 92, column: 53, scope: !7042)
!7058 = !DILocation(line: 91, column: 2, scope: !7042)
!7059 = !DILocation(line: 95, column: 9, scope: !7042)
!7060 = !DILocation(line: 97, column: 1, scope: !7042)
!7061 = !DILocation(line: 95, column: 2, scope: !7042)
!7062 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6975, file: !6975, line: 113, type: !7063, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7068)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !7065, !7066, !121, !121}
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7067, size: 32)
!7067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6961)
!7068 = !{!7069, !7070, !7071, !7072}
!7069 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7062, file: !6975, line: 114, type: !7065)
!7070 = !DILocalVariable(name: "attr", arg: 2, scope: !7062, file: !6975, line: 115, type: !7066)
!7071 = !DILocalVariable(name: "base", arg: 3, scope: !7062, file: !6975, line: 115, type: !121)
!7072 = !DILocalVariable(name: "size", arg: 4, scope: !7062, file: !6975, line: 115, type: !121)
!7073 = !DILocation(line: 0, scope: !7062)
!7074 = !DILocation(line: 127, column: 23, scope: !7062)
!7075 = !DILocation(line: 127, column: 35, scope: !7062)
!7076 = !DILocation(line: 127, column: 33, scope: !7062)
!7077 = !DILocation(line: 127, column: 10, scope: !7062)
!7078 = !DILocation(line: 127, column: 15, scope: !7062)
!7079 = !DILocation(line: 129, column: 1, scope: !7062)
!7080 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !7081, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7083)
!7081 = !DISubroutineType(types: !7082)
!7082 = !{!103, !262, !530}
!7083 = !{!7084, !7085}
!7084 = !DILocalVariable(name: "index", arg: 1, scope: !7080, file: !543, line: 57, type: !262)
!7085 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7080, file: !543, line: 58, type: !530)
!7086 = !DILocation(line: 0, scope: !7080)
!7087 = !DILocation(line: 61, column: 6, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7080, file: !543, line: 61, column: 6)
!7089 = !DILocation(line: 61, column: 12, scope: !7088)
!7090 = !DILocation(line: 61, column: 6, scope: !7080)
!7091 = !DILocation(line: 71, column: 2, scope: !7080)
!7092 = !DILocation(line: 73, column: 2, scope: !7080)
!7093 = !DILocation(line: 74, column: 1, scope: !7080)
!7094 = distinct !DISubprogram(name: "region_init", scope: !6975, file: !6975, line: 29, type: !7095, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7097)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{null, !6379, !530}
!7097 = !{!7098, !7099}
!7098 = !DILocalVariable(name: "index", arg: 1, scope: !7094, file: !6975, line: 29, type: !6379)
!7099 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7094, file: !6975, line: 30, type: !530)
!7100 = !DILocation(line: 0, scope: !7094)
!7101 = !DILocation(line: 33, column: 2, scope: !7094)
!7102 = !DILocation(line: 47, column: 28, scope: !7094)
!7103 = !DILocation(line: 47, column: 33, scope: !7094)
!7104 = !DILocation(line: 48, column: 26, scope: !7094)
!7105 = !DILocation(line: 47, column: 12, scope: !7094)
!7106 = !DILocation(line: 49, column: 32, scope: !7094)
!7107 = !DILocation(line: 49, column: 37, scope: !7094)
!7108 = !DILocation(line: 49, column: 12, scope: !7094)
!7109 = !DILocation(line: 53, column: 1, scope: !7094)
!7110 = distinct !DISubprogram(name: "set_region_number", scope: !7111, file: !7111, line: 32, type: !6202, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7112)
!7111 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7112 = !{!7113}
!7113 = !DILocalVariable(name: "index", arg: 1, scope: !7110, file: !7111, line: 32, type: !121)
!7114 = !DILocation(line: 0, scope: !7110)
!7115 = !DILocation(line: 34, column: 11, scope: !7110)
!7116 = !DILocation(line: 35, column: 1, scope: !7110)
!7117 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6975, file: !6975, line: 88, type: !7118, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7120)
!7118 = !DISubroutineType(types: !7119)
!7119 = !{!121, !121}
!7120 = !{!7121}
!7121 = !DILocalVariable(name: "size", arg: 1, scope: !7117, file: !6975, line: 88, type: !121)
!7122 = !DILocation(line: 0, scope: !7117)
!7123 = !DILocation(line: 91, column: 11, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7117, file: !6975, line: 91, column: 6)
!7125 = !DILocation(line: 91, column: 6, scope: !7117)
!7126 = !DILocation(line: 100, column: 11, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7117, file: !6975, line: 100, column: 6)
!7128 = !DILocation(line: 100, column: 6, scope: !7117)
!7129 = !DILocation(line: 104, column: 35, scope: !7117)
!7130 = !DILocation(line: 104, column: 16, scope: !7117)
!7131 = !DILocation(line: 104, column: 50, scope: !7117)
!7132 = !DILocation(line: 104, column: 72, scope: !7117)
!7133 = !DILocation(line: 104, column: 2, scope: !7117)
!7134 = !DILocation(line: 106, column: 1, scope: !7117)
!7135 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !7136, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7138)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{null, !6954, !154}
!7138 = !{!7139, !7140}
!7139 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7135, file: !543, line: 308, type: !6954)
!7140 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7135, file: !543, line: 308, type: !154)
!7141 = !DILocation(line: 0, scope: !7135)
!7142 = !DILocation(line: 310, column: 6, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7135, file: !543, line: 310, column: 6)
!7144 = !DILocation(line: 316, column: 1, scope: !7135)
!7145 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6975, file: !6975, line: 249, type: !7146, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7148)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!103, !6954, !154}
!7148 = !{!7149, !7150, !7151, !7152}
!7149 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7145, file: !6975, line: 250, type: !6954)
!7150 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7145, file: !6975, line: 250, type: !154)
!7151 = !DILocalVariable(name: "mpu_reg_index", scope: !7145, file: !6975, line: 252, type: !103)
!7152 = !DILocalVariable(name: "i", scope: !7153, file: !6975, line: 264, type: !103)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6975, line: 264, column: 3)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !6975, line: 261, column: 32)
!7155 = distinct !DILexicalBlock(scope: !7145, file: !6975, line: 261, column: 6)
!7156 = !DILocation(line: 0, scope: !7145)
!7157 = !DILocation(line: 252, column: 22, scope: !7145)
!7158 = !DILocation(line: 258, column: 18, scope: !7145)
!7159 = !DILocation(line: 261, column: 20, scope: !7155)
!7160 = !DILocation(line: 261, column: 6, scope: !7145)
!7161 = !DILocation(line: 0, scope: !7153)
!7162 = !DILocation(line: 265, column: 4, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6975, line: 264, column: 59)
!7164 = distinct !DILexicalBlock(scope: !7153, file: !6975, line: 264, column: 3)
!7165 = !DILocation(line: 264, column: 55, scope: !7164)
!7166 = !DILocation(line: 264, column: 33, scope: !7164)
!7167 = !DILocation(line: 264, column: 3, scope: !7153)
!7168 = distinct !{!7168, !7167, !7169}
!7169 = !DILocation(line: 266, column: 3, scope: !7153)
!7170 = !DILocation(line: 269, column: 2, scope: !7145)
!7171 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7172, file: !7172, line: 218, type: !6202, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7173)
!7172 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7173 = !{!7174}
!7174 = !DILocalVariable(name: "rnr", arg: 1, scope: !7171, file: !7172, line: 218, type: !121)
!7175 = !DILocation(line: 0, scope: !7171)
!7176 = !DILocation(line: 220, column: 12, scope: !7171)
!7177 = !DILocation(line: 221, column: 13, scope: !7171)
!7178 = !DILocation(line: 222, column: 1, scope: !7171)
!7179 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !7180, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7182)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!103}
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "r_index", scope: !7179, file: !543, line: 328, type: !121)
!7184 = !DILocation(line: 330, column: 17, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7179, file: !543, line: 330, column: 6)
!7186 = !DILocation(line: 330, column: 29, scope: !7185)
!7187 = !DILocation(line: 330, column: 6, scope: !7179)
!7188 = !DILocation(line: 347, column: 2, scope: !7179)
!7189 = !DILocation(line: 0, scope: !7179)
!7190 = !DILocation(line: 364, column: 29, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !543, line: 364, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7179, file: !543, line: 364, column: 2)
!7193 = !DILocation(line: 364, column: 2, scope: !7192)
!7194 = !DILocation(line: 365, column: 25, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7191, file: !543, line: 364, column: 66)
!7196 = !DILocation(line: 365, column: 3, scope: !7195)
!7197 = !DILocation(line: 364, column: 62, scope: !7191)
!7198 = distinct !{!7198, !7193, !7199}
!7199 = !DILocation(line: 366, column: 2, scope: !7192)
!7200 = !DILocation(line: 369, column: 23, scope: !7179)
!7201 = !DILocation(line: 369, column: 21, scope: !7179)
!7202 = !DILocation(line: 372, column: 2, scope: !7179)
!7203 = !DILocation(line: 443, column: 2, scope: !7179)
!7204 = !DILocation(line: 444, column: 1, scope: !7179)
!7205 = distinct !DISubprogram(name: "strcpy", scope: !7206, file: !7206, line: 20, type: !7207, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7211)
!7206 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7207 = !DISubroutineType(types: !7208)
!7208 = !{!344, !7209, !7210}
!7209 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7210 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7211 = !{!7212, !7213, !7214}
!7212 = !DILocalVariable(name: "d", arg: 1, scope: !7205, file: !7206, line: 20, type: !7209)
!7213 = !DILocalVariable(name: "s", arg: 2, scope: !7205, file: !7206, line: 20, type: !7210)
!7214 = !DILocalVariable(name: "dest", scope: !7205, file: !7206, line: 22, type: !344)
!7215 = !DILocation(line: 0, scope: !7205)
!7216 = !DILocation(line: 24, column: 9, scope: !7205)
!7217 = !DILocation(line: 24, column: 12, scope: !7205)
!7218 = !DILocation(line: 24, column: 2, scope: !7205)
!7219 = !DILocation(line: 25, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7205, file: !7206, line: 24, column: 21)
!7221 = !DILocation(line: 26, column: 4, scope: !7220)
!7222 = !DILocation(line: 27, column: 4, scope: !7220)
!7223 = distinct !{!7223, !7218, !7224}
!7224 = !DILocation(line: 28, column: 2, scope: !7205)
!7225 = !DILocation(line: 30, column: 5, scope: !7205)
!7226 = !DILocation(line: 32, column: 2, scope: !7205)
!7227 = distinct !DISubprogram(name: "strncpy", scope: !7206, file: !7206, line: 42, type: !7228, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7230)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{!344, !7209, !7210, !204}
!7230 = !{!7231, !7232, !7233, !7234}
!7231 = !DILocalVariable(name: "d", arg: 1, scope: !7227, file: !7206, line: 42, type: !7209)
!7232 = !DILocalVariable(name: "s", arg: 2, scope: !7227, file: !7206, line: 42, type: !7210)
!7233 = !DILocalVariable(name: "n", arg: 3, scope: !7227, file: !7206, line: 42, type: !204)
!7234 = !DILocalVariable(name: "dest", scope: !7227, file: !7206, line: 44, type: !344)
!7235 = !DILocation(line: 0, scope: !7227)
!7236 = !DILocation(line: 46, column: 12, scope: !7227)
!7237 = !DILocation(line: 46, column: 17, scope: !7227)
!7238 = !DILocation(line: 46, column: 20, scope: !7227)
!7239 = !DILocation(line: 46, column: 23, scope: !7227)
!7240 = !DILocation(line: 46, column: 2, scope: !7227)
!7241 = !DILocation(line: 47, column: 6, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7227, file: !7206, line: 46, column: 32)
!7243 = !DILocation(line: 48, column: 4, scope: !7242)
!7244 = !DILocation(line: 49, column: 4, scope: !7242)
!7245 = !DILocation(line: 50, column: 4, scope: !7242)
!7246 = distinct !{!7246, !7240, !7247}
!7247 = !DILocation(line: 51, column: 2, scope: !7227)
!7248 = !DILocation(line: 54, column: 6, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7227, file: !7206, line: 53, column: 16)
!7250 = !DILocation(line: 55, column: 4, scope: !7249)
!7251 = !DILocation(line: 56, column: 4, scope: !7249)
!7252 = !DILocation(line: 53, column: 11, scope: !7227)
!7253 = !DILocation(line: 53, column: 2, scope: !7227)
!7254 = distinct !{!7254, !7253, !7255}
!7255 = !DILocation(line: 57, column: 2, scope: !7227)
!7256 = !DILocation(line: 59, column: 2, scope: !7227)
!7257 = distinct !DISubprogram(name: "strchr", scope: !7206, file: !7206, line: 69, type: !7258, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7260)
!7258 = !DISubroutineType(types: !7259)
!7259 = !{!344, !144, !103}
!7260 = !{!7261, !7262, !7263}
!7261 = !DILocalVariable(name: "s", arg: 1, scope: !7257, file: !7206, line: 69, type: !144)
!7262 = !DILocalVariable(name: "c", arg: 2, scope: !7257, file: !7206, line: 69, type: !103)
!7263 = !DILocalVariable(name: "tmp", scope: !7257, file: !7206, line: 71, type: !146)
!7264 = !DILocation(line: 0, scope: !7257)
!7265 = !DILocation(line: 73, column: 2, scope: !7257)
!7266 = !DILocation(line: 73, column: 10, scope: !7257)
!7267 = !DILocation(line: 73, column: 13, scope: !7257)
!7268 = !DILocation(line: 73, column: 21, scope: !7257)
!7269 = !DILocation(line: 74, column: 4, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7257, file: !7206, line: 73, column: 38)
!7271 = distinct !{!7271, !7265, !7272}
!7272 = !DILocation(line: 75, column: 2, scope: !7257)
!7273 = !DILocation(line: 77, column: 9, scope: !7257)
!7274 = !DILocation(line: 77, column: 2, scope: !7257)
!7275 = distinct !DISubprogram(name: "strrchr", scope: !7206, file: !7206, line: 87, type: !7258, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7276)
!7276 = !{!7277, !7278, !7279}
!7277 = !DILocalVariable(name: "s", arg: 1, scope: !7275, file: !7206, line: 87, type: !144)
!7278 = !DILocalVariable(name: "c", arg: 2, scope: !7275, file: !7206, line: 87, type: !103)
!7279 = !DILocalVariable(name: "match", scope: !7275, file: !7206, line: 89, type: !344)
!7280 = !DILocation(line: 0, scope: !7275)
!7281 = !DILocation(line: 91, column: 2, scope: !7275)
!7282 = !DILocation(line: 92, column: 7, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !7206, line: 92, column: 7)
!7284 = distinct !DILexicalBlock(scope: !7275, file: !7206, line: 91, column: 5)
!7285 = !DILocation(line: 92, column: 10, scope: !7283)
!7286 = !DILocation(line: 92, column: 7, scope: !7284)
!7287 = !DILocation(line: 95, column: 13, scope: !7275)
!7288 = !DILocation(line: 95, column: 2, scope: !7284)
!7289 = distinct !{!7289, !7281, !7290}
!7290 = !DILocation(line: 95, column: 15, scope: !7275)
!7291 = !DILocation(line: 97, column: 2, scope: !7275)
!7292 = distinct !DISubprogram(name: "strlen", scope: !7206, file: !7206, line: 107, type: !7293, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7295)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!204, !144}
!7295 = !{!7296, !7297}
!7296 = !DILocalVariable(name: "s", arg: 1, scope: !7292, file: !7206, line: 107, type: !144)
!7297 = !DILocalVariable(name: "n", scope: !7292, file: !7206, line: 109, type: !204)
!7298 = !DILocation(line: 0, scope: !7292)
!7299 = !DILocation(line: 111, column: 9, scope: !7292)
!7300 = !DILocation(line: 111, column: 12, scope: !7292)
!7301 = !DILocation(line: 111, column: 2, scope: !7292)
!7302 = !DILocation(line: 112, column: 4, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7292, file: !7206, line: 111, column: 21)
!7304 = !DILocation(line: 113, column: 4, scope: !7303)
!7305 = distinct !{!7305, !7301, !7306}
!7306 = !DILocation(line: 114, column: 2, scope: !7292)
!7307 = !DILocation(line: 116, column: 2, scope: !7292)
!7308 = distinct !DISubprogram(name: "strnlen", scope: !7206, file: !7206, line: 126, type: !7309, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7311)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!204, !144, !204}
!7311 = !{!7312, !7313, !7314}
!7312 = !DILocalVariable(name: "s", arg: 1, scope: !7308, file: !7206, line: 126, type: !144)
!7313 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7308, file: !7206, line: 126, type: !204)
!7314 = !DILocalVariable(name: "n", scope: !7308, file: !7206, line: 128, type: !204)
!7315 = !DILocation(line: 0, scope: !7308)
!7316 = !DILocation(line: 130, column: 9, scope: !7308)
!7317 = !DILocation(line: 130, column: 12, scope: !7308)
!7318 = !DILocation(line: 130, column: 20, scope: !7308)
!7319 = !DILocation(line: 130, column: 2, scope: !7308)
!7320 = !DILocation(line: 131, column: 4, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7308, file: !7206, line: 130, column: 35)
!7322 = !DILocation(line: 132, column: 4, scope: !7321)
!7323 = distinct !{!7323, !7319, !7324}
!7324 = !DILocation(line: 133, column: 2, scope: !7308)
!7325 = !DILocation(line: 135, column: 2, scope: !7308)
!7326 = distinct !DISubprogram(name: "strcmp", scope: !7206, file: !7206, line: 145, type: !7327, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7329)
!7327 = !DISubroutineType(types: !7328)
!7328 = !{!103, !144, !144}
!7329 = !{!7330, !7331}
!7330 = !DILocalVariable(name: "s1", arg: 1, scope: !7326, file: !7206, line: 145, type: !144)
!7331 = !DILocalVariable(name: "s2", arg: 2, scope: !7326, file: !7206, line: 145, type: !144)
!7332 = !DILocation(line: 0, scope: !7326)
!7333 = !DILocation(line: 147, column: 10, scope: !7326)
!7334 = !DILocation(line: 147, column: 17, scope: !7326)
!7335 = !DILocation(line: 147, column: 14, scope: !7326)
!7336 = !DILocation(line: 147, column: 22, scope: !7326)
!7337 = !DILocation(line: 148, column: 5, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7326, file: !7206, line: 147, column: 40)
!7339 = !DILocation(line: 149, column: 5, scope: !7338)
!7340 = distinct !{!7340, !7341, !7342}
!7341 = !DILocation(line: 147, column: 2, scope: !7326)
!7342 = !DILocation(line: 150, column: 2, scope: !7326)
!7343 = !DILocation(line: 152, column: 9, scope: !7326)
!7344 = !DILocation(line: 152, column: 15, scope: !7326)
!7345 = !DILocation(line: 152, column: 13, scope: !7326)
!7346 = !DILocation(line: 152, column: 2, scope: !7326)
!7347 = distinct !DISubprogram(name: "strncmp", scope: !7206, file: !7206, line: 162, type: !7348, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7350)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!103, !144, !144, !204}
!7350 = !{!7351, !7352, !7353}
!7351 = !DILocalVariable(name: "s1", arg: 1, scope: !7347, file: !7206, line: 162, type: !144)
!7352 = !DILocalVariable(name: "s2", arg: 2, scope: !7347, file: !7206, line: 162, type: !144)
!7353 = !DILocalVariable(name: "n", arg: 3, scope: !7347, file: !7206, line: 162, type: !204)
!7354 = !DILocation(line: 0, scope: !7347)
!7355 = !DILocation(line: 164, column: 17, scope: !7347)
!7356 = !DILocation(line: 164, column: 21, scope: !7347)
!7357 = !DILocation(line: 164, column: 28, scope: !7347)
!7358 = !DILocation(line: 164, column: 25, scope: !7347)
!7359 = !DILocation(line: 164, column: 33, scope: !7347)
!7360 = !DILocation(line: 165, column: 5, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7347, file: !7206, line: 164, column: 51)
!7362 = !DILocation(line: 166, column: 5, scope: !7361)
!7363 = !DILocation(line: 167, column: 4, scope: !7361)
!7364 = distinct !{!7364, !7365, !7366}
!7365 = !DILocation(line: 164, column: 2, scope: !7347)
!7366 = !DILocation(line: 168, column: 2, scope: !7347)
!7367 = !DILocation(line: 170, column: 25, scope: !7347)
!7368 = !DILocation(line: 170, column: 31, scope: !7347)
!7369 = !DILocation(line: 170, column: 29, scope: !7347)
!7370 = !DILocation(line: 170, column: 9, scope: !7347)
!7371 = !DILocation(line: 170, column: 2, scope: !7347)
!7372 = distinct !DISubprogram(name: "strtok_r", scope: !7206, file: !7206, line: 180, type: !7373, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7376)
!7373 = !DISubroutineType(types: !7374)
!7374 = !{!344, !344, !144, !7375}
!7375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7376 = !{!7377, !7378, !7379, !7380, !7381}
!7377 = !DILocalVariable(name: "str", arg: 1, scope: !7372, file: !7206, line: 180, type: !344)
!7378 = !DILocalVariable(name: "sep", arg: 2, scope: !7372, file: !7206, line: 180, type: !144)
!7379 = !DILocalVariable(name: "state", arg: 3, scope: !7372, file: !7206, line: 180, type: !7375)
!7380 = !DILocalVariable(name: "start", scope: !7372, file: !7206, line: 182, type: !344)
!7381 = !DILocalVariable(name: "end", scope: !7372, file: !7206, line: 182, type: !344)
!7382 = !DILocation(line: 0, scope: !7372)
!7383 = !DILocation(line: 184, column: 10, scope: !7372)
!7384 = !DILocation(line: 184, column: 22, scope: !7372)
!7385 = !DILocation(line: 187, column: 9, scope: !7372)
!7386 = !DILocation(line: 187, column: 16, scope: !7372)
!7387 = !DILocation(line: 187, column: 19, scope: !7372)
!7388 = !DILocation(line: 187, column: 2, scope: !7372)
!7389 = !DILocation(line: 188, column: 8, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7372, file: !7206, line: 187, column: 40)
!7391 = distinct !{!7391, !7388, !7392}
!7392 = !DILocation(line: 189, column: 2, scope: !7372)
!7393 = !DILocation(line: 198, column: 9, scope: !7372)
!7394 = !DILocation(line: 198, column: 18, scope: !7372)
!7395 = !DILocation(line: 198, column: 17, scope: !7372)
!7396 = !DILocation(line: 198, column: 2, scope: !7372)
!7397 = !DILocation(line: 199, column: 6, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7372, file: !7206, line: 198, column: 37)
!7399 = !DILocation(line: 198, column: 14, scope: !7372)
!7400 = distinct !{!7400, !7396, !7401}
!7401 = !DILocation(line: 200, column: 2, scope: !7372)
!7402 = !DILocation(line: 203, column: 8, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !7206, line: 202, column: 20)
!7404 = distinct !DILexicalBlock(scope: !7372, file: !7206, line: 202, column: 6)
!7405 = !DILocation(line: 204, column: 16, scope: !7403)
!7406 = !DILocation(line: 205, column: 2, scope: !7403)
!7407 = !DILocation(line: 210, column: 1, scope: !7372)
!7408 = distinct !DISubprogram(name: "strcat", scope: !7206, file: !7206, line: 212, type: !7207, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7409)
!7409 = !{!7410, !7411}
!7410 = !DILocalVariable(name: "dest", arg: 1, scope: !7408, file: !7206, line: 212, type: !7209)
!7411 = !DILocalVariable(name: "src", arg: 2, scope: !7408, file: !7206, line: 212, type: !7210)
!7412 = !DILocation(line: 0, scope: !7408)
!7413 = !DILocation(line: 214, column: 16, scope: !7408)
!7414 = !DILocation(line: 214, column: 14, scope: !7408)
!7415 = !DILocation(line: 214, column: 2, scope: !7408)
!7416 = !DILocation(line: 215, column: 2, scope: !7408)
!7417 = distinct !DISubprogram(name: "strncat", scope: !7206, file: !7206, line: 218, type: !7228, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7418)
!7418 = !{!7419, !7420, !7421, !7422, !7423}
!7419 = !DILocalVariable(name: "dest", arg: 1, scope: !7417, file: !7206, line: 218, type: !7209)
!7420 = !DILocalVariable(name: "src", arg: 2, scope: !7417, file: !7206, line: 218, type: !7210)
!7421 = !DILocalVariable(name: "n", arg: 3, scope: !7417, file: !7206, line: 219, type: !204)
!7422 = !DILocalVariable(name: "orig_dest", scope: !7417, file: !7206, line: 221, type: !344)
!7423 = !DILocalVariable(name: "len", scope: !7417, file: !7206, line: 222, type: !204)
!7424 = !DILocation(line: 0, scope: !7417)
!7425 = !DILocation(line: 222, column: 15, scope: !7417)
!7426 = !DILocation(line: 224, column: 7, scope: !7417)
!7427 = !DILocation(line: 225, column: 14, scope: !7417)
!7428 = !DILocation(line: 225, column: 19, scope: !7417)
!7429 = !DILocation(line: 225, column: 11, scope: !7417)
!7430 = !DILocation(line: 225, column: 23, scope: !7417)
!7431 = !DILocation(line: 225, column: 28, scope: !7417)
!7432 = !DILocation(line: 225, column: 2, scope: !7417)
!7433 = !DILocation(line: 226, column: 17, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7417, file: !7206, line: 225, column: 38)
!7435 = !DILocation(line: 226, column: 8, scope: !7434)
!7436 = !DILocation(line: 226, column: 11, scope: !7434)
!7437 = distinct !{!7437, !7432, !7438}
!7438 = !DILocation(line: 227, column: 2, scope: !7417)
!7439 = !DILocation(line: 228, column: 8, scope: !7417)
!7440 = !DILocation(line: 230, column: 2, scope: !7417)
!7441 = distinct !DISubprogram(name: "memcmp", scope: !7206, file: !7206, line: 239, type: !7442, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7444)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!103, !13, !13, !204}
!7444 = !{!7445, !7446, !7447, !7448, !7449}
!7445 = !DILocalVariable(name: "m1", arg: 1, scope: !7441, file: !7206, line: 239, type: !13)
!7446 = !DILocalVariable(name: "m2", arg: 2, scope: !7441, file: !7206, line: 239, type: !13)
!7447 = !DILocalVariable(name: "n", arg: 3, scope: !7441, file: !7206, line: 239, type: !204)
!7448 = !DILocalVariable(name: "c1", scope: !7441, file: !7206, line: 241, type: !144)
!7449 = !DILocalVariable(name: "c2", scope: !7441, file: !7206, line: 242, type: !144)
!7450 = !DILocation(line: 0, scope: !7441)
!7451 = !DILocation(line: 244, column: 7, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7441, file: !7206, line: 244, column: 6)
!7453 = !DILocation(line: 244, column: 6, scope: !7441)
!7454 = !DILocation(line: 248, column: 10, scope: !7441)
!7455 = !DILocation(line: 248, column: 14, scope: !7441)
!7456 = !DILocation(line: 248, column: 19, scope: !7441)
!7457 = !DILocation(line: 248, column: 2, scope: !7441)
!7458 = !DILocation(line: 248, column: 23, scope: !7441)
!7459 = !DILocation(line: 248, column: 30, scope: !7441)
!7460 = !DILocation(line: 248, column: 27, scope: !7441)
!7461 = !DILocation(line: 249, column: 5, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7441, file: !7206, line: 248, column: 36)
!7463 = !DILocation(line: 250, column: 5, scope: !7462)
!7464 = distinct !{!7464, !7457, !7465}
!7465 = !DILocation(line: 251, column: 2, scope: !7441)
!7466 = !DILocation(line: 253, column: 9, scope: !7441)
!7467 = !DILocation(line: 253, column: 15, scope: !7441)
!7468 = !DILocation(line: 253, column: 13, scope: !7441)
!7469 = !DILocation(line: 253, column: 2, scope: !7441)
!7470 = !DILocation(line: 254, column: 1, scope: !7441)
!7471 = distinct !DISubprogram(name: "memmove", scope: !7206, file: !7206, line: 263, type: !7472, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7474)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{!102, !102, !13, !204}
!7474 = !{!7475, !7476, !7477, !7478, !7479}
!7475 = !DILocalVariable(name: "d", arg: 1, scope: !7471, file: !7206, line: 263, type: !102)
!7476 = !DILocalVariable(name: "s", arg: 2, scope: !7471, file: !7206, line: 263, type: !13)
!7477 = !DILocalVariable(name: "n", arg: 3, scope: !7471, file: !7206, line: 263, type: !204)
!7478 = !DILocalVariable(name: "dest", scope: !7471, file: !7206, line: 265, type: !344)
!7479 = !DILocalVariable(name: "src", scope: !7471, file: !7206, line: 266, type: !144)
!7480 = !DILocation(line: 0, scope: !7471)
!7481 = !DILocation(line: 268, column: 21, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7471, file: !7206, line: 268, column: 6)
!7483 = !DILocation(line: 268, column: 28, scope: !7482)
!7484 = !DILocation(line: 268, column: 6, scope: !7471)
!7485 = !DILocation(line: 280, column: 12, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7482, file: !7206, line: 278, column: 9)
!7487 = !DILocation(line: 280, column: 3, scope: !7486)
!7488 = !DILocation(line: 275, column: 5, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !7206, line: 274, column: 17)
!7490 = distinct !DILexicalBlock(scope: !7482, file: !7206, line: 268, column: 33)
!7491 = !DILocation(line: 276, column: 14, scope: !7489)
!7492 = !DILocation(line: 276, column: 4, scope: !7489)
!7493 = !DILocation(line: 276, column: 12, scope: !7489)
!7494 = !DILocation(line: 274, column: 12, scope: !7490)
!7495 = !DILocation(line: 274, column: 3, scope: !7490)
!7496 = distinct !{!7496, !7495, !7497}
!7497 = !DILocation(line: 277, column: 3, scope: !7490)
!7498 = !DILocation(line: 281, column: 12, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7486, file: !7206, line: 280, column: 17)
!7500 = !DILocation(line: 281, column: 10, scope: !7499)
!7501 = !DILocation(line: 282, column: 8, scope: !7499)
!7502 = !DILocation(line: 283, column: 7, scope: !7499)
!7503 = !DILocation(line: 284, column: 5, scope: !7499)
!7504 = distinct !{!7504, !7487, !7505}
!7505 = !DILocation(line: 285, column: 3, scope: !7486)
!7506 = !DILocation(line: 288, column: 2, scope: !7471)
!7507 = distinct !DISubprogram(name: "memcpy", scope: !7206, file: !7206, line: 298, type: !7508, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7512)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!102, !7510, !7511, !204}
!7510 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7511 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7512 = !{!7513, !7514, !7515, !7516, !7517}
!7513 = !DILocalVariable(name: "d", arg: 1, scope: !7507, file: !7206, line: 298, type: !7510)
!7514 = !DILocalVariable(name: "s", arg: 2, scope: !7507, file: !7206, line: 298, type: !7511)
!7515 = !DILocalVariable(name: "n", arg: 3, scope: !7507, file: !7206, line: 298, type: !204)
!7516 = !DILocalVariable(name: "d_byte", scope: !7507, file: !7206, line: 302, type: !230)
!7517 = !DILocalVariable(name: "s_byte", scope: !7507, file: !7206, line: 303, type: !3062)
!7518 = !DILocation(line: 0, scope: !7507)
!7519 = !DILocation(line: 337, column: 11, scope: !7507)
!7520 = !DILocation(line: 337, column: 2, scope: !7507)
!7521 = !DILocation(line: 338, column: 25, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7507, file: !7206, line: 337, column: 16)
!7523 = !DILocation(line: 338, column: 17, scope: !7522)
!7524 = !DILocation(line: 338, column: 11, scope: !7522)
!7525 = !DILocation(line: 338, column: 15, scope: !7522)
!7526 = !DILocation(line: 339, column: 4, scope: !7522)
!7527 = distinct !{!7527, !7520, !7528}
!7528 = !DILocation(line: 340, column: 2, scope: !7507)
!7529 = !DILocation(line: 342, column: 2, scope: !7507)
!7530 = distinct !DISubprogram(name: "memset", scope: !7206, file: !7206, line: 352, type: !7531, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!102, !102, !103, !204}
!7533 = !{!7534, !7535, !7536, !7537, !7538}
!7534 = !DILocalVariable(name: "buf", arg: 1, scope: !7530, file: !7206, line: 352, type: !102)
!7535 = !DILocalVariable(name: "c", arg: 2, scope: !7530, file: !7206, line: 352, type: !103)
!7536 = !DILocalVariable(name: "n", arg: 3, scope: !7530, file: !7206, line: 352, type: !204)
!7537 = !DILocalVariable(name: "d_byte", scope: !7530, file: !7206, line: 356, type: !230)
!7538 = !DILocalVariable(name: "c_byte", scope: !7530, file: !7206, line: 357, type: !155)
!7539 = !DILocation(line: 0, scope: !7530)
!7540 = !DILocation(line: 357, column: 25, scope: !7530)
!7541 = !DILocation(line: 389, column: 11, scope: !7530)
!7542 = !DILocation(line: 389, column: 2, scope: !7530)
!7543 = !DILocation(line: 390, column: 11, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7530, file: !7206, line: 389, column: 16)
!7545 = !DILocation(line: 390, column: 15, scope: !7544)
!7546 = !DILocation(line: 391, column: 4, scope: !7544)
!7547 = distinct !{!7547, !7542, !7548}
!7548 = !DILocation(line: 392, column: 2, scope: !7530)
!7549 = !DILocation(line: 394, column: 2, scope: !7530)
!7550 = distinct !DISubprogram(name: "memchr", scope: !7206, file: !7206, line: 404, type: !7551, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !7553)
!7551 = !DISubroutineType(types: !7552)
!7552 = !{!102, !13, !103, !204}
!7553 = !{!7554, !7555, !7556, !7557}
!7554 = !DILocalVariable(name: "s", arg: 1, scope: !7550, file: !7206, line: 404, type: !13)
!7555 = !DILocalVariable(name: "c", arg: 2, scope: !7550, file: !7206, line: 404, type: !103)
!7556 = !DILocalVariable(name: "n", arg: 3, scope: !7550, file: !7206, line: 404, type: !204)
!7557 = !DILocalVariable(name: "p", scope: !7558, file: !7206, line: 407, type: !3062)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !7206, line: 406, column: 14)
!7559 = distinct !DILexicalBlock(scope: !7550, file: !7206, line: 406, column: 6)
!7560 = !DILocation(line: 0, scope: !7550)
!7561 = !DILocation(line: 406, column: 8, scope: !7559)
!7562 = !DILocation(line: 406, column: 6, scope: !7550)
!7563 = !DILocation(line: 409, column: 3, scope: !7558)
!7564 = !DILocation(line: 0, scope: !7558)
!7565 = !DILocation(line: 410, column: 8, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !7206, line: 410, column: 8)
!7567 = distinct !DILexicalBlock(scope: !7558, file: !7206, line: 409, column: 6)
!7568 = !DILocation(line: 410, column: 13, scope: !7566)
!7569 = !DILocation(line: 410, column: 8, scope: !7567)
!7570 = distinct !{!7570, !7563, !7571}
!7571 = !DILocation(line: 414, column: 20, scope: !7558)
!7572 = !DILocation(line: 417, column: 2, scope: !7550)
!7573 = !DILocation(line: 418, column: 1, scope: !7550)
!7574 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3473, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7575)
!7575 = !{!7576}
!7576 = !DILocalVariable(name: "hook", arg: 1, scope: !7574, file: !553, line: 23, type: !106)
!7577 = !DILocation(line: 0, scope: !7574)
!7578 = !DILocation(line: 25, column: 15, scope: !7574)
!7579 = !DILocation(line: 26, column: 1, scope: !7574)
!7580 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7581)
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "c", arg: 1, scope: !7580, file: !553, line: 14, type: !103)
!7583 = !DILocation(line: 0, scope: !7580)
!7584 = !DILocation(line: 18, column: 2, scope: !7580)
!7585 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7586, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7588)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!103, !103, !549}
!7588 = !{!7589, !7590}
!7589 = !DILocalVariable(name: "c", arg: 1, scope: !7585, file: !553, line: 28, type: !103)
!7590 = !DILocalVariable(name: "stream", arg: 2, scope: !7585, file: !553, line: 28, type: !549)
!7591 = !DILocation(line: 0, scope: !7585)
!7592 = !DILocation(line: 30, column: 27, scope: !7585)
!7593 = !DILocation(line: 30, column: 50, scope: !7585)
!7594 = !DILocation(line: 30, column: 9, scope: !7585)
!7595 = !DILocation(line: 30, column: 2, scope: !7585)
!7596 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7586, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7597)
!7597 = !{!7598, !7599}
!7598 = !DILocalVariable(name: "c", arg: 1, scope: !7596, file: !553, line: 41, type: !103)
!7599 = !DILocalVariable(name: "stream", arg: 2, scope: !7596, file: !553, line: 41, type: !549)
!7600 = !DILocation(line: 0, scope: !7596)
!7601 = !DILocation(line: 43, column: 9, scope: !7596)
!7602 = !DILocation(line: 43, column: 2, scope: !7596)
!7603 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7604, file: !7604, line: 72, type: !7586, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7605)
!7604 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!7605 = !{!7606, !7607}
!7606 = !DILocalVariable(name: "c", arg: 1, scope: !7603, file: !7604, line: 72, type: !103)
!7607 = !DILocalVariable(name: "stream", arg: 2, scope: !7603, file: !7604, line: 72, type: !549)
!7608 = !DILocation(line: 0, scope: !7603)
!7609 = !DILocation(line: 81, column: 2, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7603, file: !7604, line: 81, column: 2)
!7611 = !{i64 2155500417}
!7612 = !DILocation(line: 82, column: 9, scope: !7603)
!7613 = !DILocation(line: 82, column: 2, scope: !7603)
!7614 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7615, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7618)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!103, !7210, !7617}
!7617 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7618 = !{!7619, !7620, !7621, !7622}
!7619 = !DILocalVariable(name: "s", arg: 1, scope: !7614, file: !553, line: 46, type: !7210)
!7620 = !DILocalVariable(name: "stream", arg: 2, scope: !7614, file: !553, line: 46, type: !7617)
!7621 = !DILocalVariable(name: "len", scope: !7614, file: !553, line: 48, type: !103)
!7622 = !DILocalVariable(name: "ret", scope: !7614, file: !553, line: 49, type: !103)
!7623 = !DILocation(line: 0, scope: !7614)
!7624 = !DILocation(line: 48, column: 12, scope: !7614)
!7625 = !DILocation(line: 51, column: 8, scope: !7614)
!7626 = !DILocation(line: 53, column: 13, scope: !7614)
!7627 = !DILocation(line: 53, column: 9, scope: !7614)
!7628 = !DILocation(line: 53, column: 2, scope: !7614)
!7629 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7630, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7632)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!204, !7511, !204, !204, !7617}
!7632 = !{!7633, !7634, !7635, !7636}
!7633 = !DILocalVariable(name: "ptr", arg: 1, scope: !7629, file: !553, line: 99, type: !7511)
!7634 = !DILocalVariable(name: "size", arg: 2, scope: !7629, file: !553, line: 99, type: !204)
!7635 = !DILocalVariable(name: "nitems", arg: 3, scope: !7629, file: !553, line: 99, type: !204)
!7636 = !DILocalVariable(name: "stream", arg: 4, scope: !7629, file: !553, line: 100, type: !7617)
!7637 = !DILocation(line: 0, scope: !7629)
!7638 = !DILocation(line: 102, column: 9, scope: !7629)
!7639 = !DILocation(line: 102, column: 2, scope: !7629)
!7640 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7604, file: !7604, line: 96, type: !7630, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7641)
!7641 = !{!7642, !7643, !7644, !7645}
!7642 = !DILocalVariable(name: "ptr", arg: 1, scope: !7640, file: !7604, line: 96, type: !7511)
!7643 = !DILocalVariable(name: "size", arg: 2, scope: !7640, file: !7604, line: 96, type: !204)
!7644 = !DILocalVariable(name: "nitems", arg: 3, scope: !7640, file: !7604, line: 96, type: !204)
!7645 = !DILocalVariable(name: "stream", arg: 4, scope: !7640, file: !7604, line: 96, type: !7617)
!7646 = !DILocation(line: 0, scope: !7640)
!7647 = !DILocation(line: 107, column: 2, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7640, file: !7604, line: 107, column: 2)
!7649 = !{i64 2155500521}
!7650 = !DILocation(line: 108, column: 9, scope: !7640)
!7651 = !DILocation(line: 108, column: 2, scope: !7640)
!7652 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7630, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7653)
!7653 = !{!7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661}
!7654 = !DILocalVariable(name: "ptr", arg: 1, scope: !7652, file: !553, line: 56, type: !7511)
!7655 = !DILocalVariable(name: "size", arg: 2, scope: !7652, file: !553, line: 56, type: !204)
!7656 = !DILocalVariable(name: "nitems", arg: 3, scope: !7652, file: !553, line: 57, type: !204)
!7657 = !DILocalVariable(name: "stream", arg: 4, scope: !7652, file: !553, line: 57, type: !7617)
!7658 = !DILocalVariable(name: "i", scope: !7652, file: !553, line: 59, type: !204)
!7659 = !DILocalVariable(name: "j", scope: !7652, file: !553, line: 60, type: !204)
!7660 = !DILocalVariable(name: "p", scope: !7652, file: !553, line: 61, type: !3062)
!7661 = !DILabel(scope: !7652, name: "done", file: !553, line: 82)
!7662 = !DILocation(line: 0, scope: !7652)
!7663 = !DILocation(line: 63, column: 14, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7652, file: !553, line: 63, column: 6)
!7665 = !DILocation(line: 63, column: 24, scope: !7664)
!7666 = !DILocation(line: 72, column: 3, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7652, file: !553, line: 70, column: 5)
!7668 = !DILocation(line: 0, scope: !7667)
!7669 = !DILocation(line: 73, column: 8, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !553, line: 73, column: 8)
!7671 = distinct !DILexicalBlock(scope: !7667, file: !553, line: 72, column: 6)
!7672 = !DILocation(line: 73, column: 29, scope: !7670)
!7673 = !DILocation(line: 73, column: 27, scope: !7670)
!7674 = !DILocation(line: 73, column: 21, scope: !7670)
!7675 = !DILocation(line: 73, column: 33, scope: !7670)
!7676 = !DILocation(line: 73, column: 8, scope: !7671)
!7677 = !DILocation(line: 76, column: 5, scope: !7671)
!7678 = !DILocation(line: 77, column: 14, scope: !7667)
!7679 = !DILocation(line: 77, column: 3, scope: !7671)
!7680 = distinct !{!7680, !7666, !7681}
!7681 = !DILocation(line: 77, column: 17, scope: !7667)
!7682 = !DILocation(line: 79, column: 4, scope: !7667)
!7683 = !DILocation(line: 80, column: 13, scope: !7652)
!7684 = !DILocation(line: 80, column: 2, scope: !7667)
!7685 = distinct !{!7685, !7686, !7687}
!7686 = !DILocation(line: 70, column: 2, scope: !7652)
!7687 = !DILocation(line: 80, column: 16, scope: !7652)
!7688 = !DILocation(line: 82, column: 1, scope: !7652)
!7689 = !DILocation(line: 83, column: 17, scope: !7652)
!7690 = !DILocation(line: 83, column: 2, scope: !7652)
!7691 = !DILocation(line: 84, column: 1, scope: !7652)
!7692 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7693, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7695)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!103, !144}
!7695 = !{!7696}
!7696 = !DILocalVariable(name: "s", arg: 1, scope: !7692, file: !553, line: 106, type: !144)
!7697 = !DILocation(line: 0, scope: !7692)
!7698 = !DILocation(line: 108, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7692, file: !553, line: 108, column: 6)
!7700 = !DILocation(line: 108, column: 23, scope: !7699)
!7701 = !DILocation(line: 108, column: 6, scope: !7692)
!7702 = !DILocation(line: 112, column: 9, scope: !7692)
!7703 = !DILocation(line: 112, column: 29, scope: !7692)
!7704 = !DILocation(line: 112, column: 2, scope: !7692)
!7705 = !DILocation(line: 113, column: 1, scope: !7692)
!7706 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !696, file: !696, line: 368, type: !749, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7707)
!7707 = !{!7708}
!7708 = !DILocalVariable(name: "dev", arg: 1, scope: !7706, file: !696, line: 368, type: !725)
!7709 = !DILocation(line: 0, scope: !7706)
!7710 = !DILocation(line: 370, column: 2, scope: !7706)
!7711 = !DILocation(line: 371, column: 1, scope: !7706)
!7712 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !696, file: !696, line: 243, type: !7713, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7715)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{null, !103, !103, !725}
!7715 = !{!7716, !7717, !7718, !7719, !7721}
!7716 = !DILocalVariable(name: "min", arg: 1, scope: !7712, file: !696, line: 243, type: !103)
!7717 = !DILocalVariable(name: "max", arg: 2, scope: !7712, file: !696, line: 243, type: !103)
!7718 = !DILocalVariable(name: "dev", arg: 3, scope: !7712, file: !696, line: 243, type: !725)
!7719 = !DILocalVariable(name: "data", scope: !7712, file: !696, line: 245, type: !7720)
!7720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!7721 = !DILocalVariable(name: "line", scope: !7712, file: !696, line: 246, type: !103)
!7722 = !DILocation(line: 0, scope: !7712)
!7723 = !DILocation(line: 245, column: 38, scope: !7712)
!7724 = !DILocation(line: 249, column: 24, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !696, line: 249, column: 2)
!7726 = distinct !DILexicalBlock(scope: !7712, file: !696, line: 249, column: 2)
!7727 = !DILocation(line: 249, column: 2, scope: !7726)
!7728 = !DILocation(line: 251, column: 7, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !696, line: 251, column: 7)
!7730 = distinct !DILexicalBlock(scope: !7725, file: !696, line: 249, column: 39)
!7731 = !DILocation(line: 251, column: 7, scope: !7730)
!7732 = !DILocation(line: 253, column: 4, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !696, line: 251, column: 36)
!7734 = !DILocation(line: 256, column: 24, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7733, file: !696, line: 256, column: 8)
!7736 = !DILocation(line: 256, column: 9, scope: !7735)
!7737 = !DILocation(line: 256, column: 8, scope: !7733)
!7738 = !DILocation(line: 260, column: 43, scope: !7733)
!7739 = !DILocation(line: 260, column: 4, scope: !7733)
!7740 = !DILocation(line: 261, column: 3, scope: !7733)
!7741 = !DILocation(line: 249, column: 35, scope: !7725)
!7742 = distinct !{!7742, !7727, !7743}
!7743 = !DILocation(line: 262, column: 2, scope: !7726)
!7744 = !DILocation(line: 263, column: 1, scope: !7712)
!7745 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !696, file: !696, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7746)
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "line", arg: 1, scope: !7745, file: !696, line: 158, type: !103)
!7748 = !DILocation(line: 0, scope: !7745)
!7749 = !DILocation(line: 170, column: 38, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !696, line: 160, column: 17)
!7751 = distinct !DILexicalBlock(scope: !7745, file: !696, line: 160, column: 6)
!7752 = !DILocation(line: 170, column: 10, scope: !7750)
!7753 = !DILocation(line: 176, column: 1, scope: !7745)
!7754 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !696, file: !696, line: 183, type: !7755, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7757)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{null, !103}
!7757 = !{!7758}
!7758 = !DILocalVariable(name: "line", arg: 1, scope: !7754, file: !696, line: 183, type: !103)
!7759 = !DILocation(line: 0, scope: !7754)
!7760 = !DILocation(line: 195, column: 28, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !696, line: 185, column: 17)
!7762 = distinct !DILexicalBlock(scope: !7754, file: !696, line: 185, column: 6)
!7763 = !DILocation(line: 195, column: 3, scope: !7761)
!7764 = !DILocation(line: 200, column: 1, scope: !7754)
!7765 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7766, file: !7766, line: 910, type: !6202, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7767)
!7766 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7767 = !{!7768}
!7768 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7765, file: !7766, line: 910, type: !121)
!7769 = !DILocation(line: 0, scope: !7765)
!7770 = !DILocation(line: 912, column: 3, scope: !7765)
!7771 = !DILocation(line: 913, column: 1, scope: !7765)
!7772 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7766, file: !7766, line: 834, type: !7118, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7773)
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7772, file: !7766, line: 834, type: !121)
!7775 = !DILocation(line: 0, scope: !7772)
!7776 = !DILocation(line: 836, column: 11, scope: !7772)
!7777 = !DILocation(line: 836, column: 40, scope: !7772)
!7778 = !DILocation(line: 836, column: 3, scope: !7772)
!7779 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !696, file: !696, line: 304, type: !749, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7780)
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "dev", arg: 1, scope: !7779, file: !696, line: 304, type: !725)
!7782 = !DILocation(line: 0, scope: !7779)
!7783 = !DILocation(line: 306, column: 2, scope: !7779)
!7784 = !DILocation(line: 307, column: 1, scope: !7779)
!7785 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !696, file: !696, line: 299, type: !749, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "dev", arg: 1, scope: !7785, file: !696, line: 299, type: !725)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 301, column: 2, scope: !7785)
!7790 = !DILocation(line: 302, column: 1, scope: !7785)
!7791 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !696, file: !696, line: 294, type: !749, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7792)
!7792 = !{!7793}
!7793 = !DILocalVariable(name: "dev", arg: 1, scope: !7791, file: !696, line: 294, type: !725)
!7794 = !DILocation(line: 0, scope: !7791)
!7795 = !DILocation(line: 296, column: 2, scope: !7791)
!7796 = !DILocation(line: 297, column: 1, scope: !7791)
!7797 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !696, file: !696, line: 397, type: !749, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7798)
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !696, line: 397, type: !725)
!7800 = !DILocation(line: 0, scope: !7797)
!7801 = !DILocation(line: 399, column: 2, scope: !7797)
!7802 = !DILocation(line: 400, column: 1, scope: !7797)
!7803 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !696, file: !696, line: 392, type: !749, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7804)
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7803, file: !696, line: 392, type: !725)
!7806 = !DILocation(line: 0, scope: !7803)
!7807 = !DILocation(line: 394, column: 2, scope: !7803)
!7808 = !DILocation(line: 395, column: 1, scope: !7803)
!7809 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !696, file: !696, line: 289, type: !749, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "dev", arg: 1, scope: !7809, file: !696, line: 289, type: !725)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 291, column: 2, scope: !7809)
!7814 = !DILocation(line: 292, column: 1, scope: !7809)
!7815 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !696, file: !696, line: 387, type: !749, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7816)
!7816 = !{!7817}
!7817 = !DILocalVariable(name: "dev", arg: 1, scope: !7815, file: !696, line: 387, type: !725)
!7818 = !DILocation(line: 0, scope: !7815)
!7819 = !DILocation(line: 389, column: 2, scope: !7815)
!7820 = !DILocation(line: 390, column: 1, scope: !7815)
!7821 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !696, file: !696, line: 382, type: !749, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7822)
!7822 = !{!7823}
!7823 = !DILocalVariable(name: "dev", arg: 1, scope: !7821, file: !696, line: 382, type: !725)
!7824 = !DILocation(line: 0, scope: !7821)
!7825 = !DILocation(line: 384, column: 2, scope: !7821)
!7826 = !DILocation(line: 385, column: 1, scope: !7821)
!7827 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !696, file: !696, line: 373, type: !749, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !696, line: 373, type: !725)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 375, column: 2, scope: !7827)
!7832 = !DILocation(line: 376, column: 1, scope: !7827)
!7833 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !696, file: !696, line: 284, type: !749, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7834)
!7834 = !{!7835}
!7835 = !DILocalVariable(name: "dev", arg: 1, scope: !7833, file: !696, line: 284, type: !725)
!7836 = !DILocation(line: 0, scope: !7833)
!7837 = !DILocation(line: 286, column: 2, scope: !7833)
!7838 = !DILocation(line: 287, column: 1, scope: !7833)
!7839 = distinct !DISubprogram(name: "stm32_exti_init", scope: !696, file: !696, line: 416, type: !723, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7840)
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !696, line: 416, type: !725)
!7842 = !DILocation(line: 0, scope: !7839)
!7843 = !DILocation(line: 418, column: 2, scope: !7839)
!7844 = !DILocation(line: 420, column: 2, scope: !7839)
!7845 = !DILocation(line: 0, scope: !748)
!7846 = !DILocation(line: 493, column: 2, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !748, file: !696, line: 493, column: 2)
!7848 = !DILocation(line: 497, column: 2, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !748, file: !696, line: 497, column: 2)
!7850 = !DILocation(line: 507, column: 2, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !748, file: !696, line: 507, column: 2)
!7852 = !DILocation(line: 512, column: 2, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !748, file: !696, line: 512, column: 2)
!7854 = !DILocation(line: 516, column: 2, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !748, file: !696, line: 516, column: 2)
!7856 = !DILocation(line: 523, column: 2, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !748, file: !696, line: 523, column: 2)
!7858 = !DILocation(line: 527, column: 2, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !748, file: !696, line: 527, column: 2)
!7860 = !DILocation(line: 581, column: 2, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !748, file: !696, line: 581, column: 2)
!7862 = !DILocation(line: 586, column: 2, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !748, file: !696, line: 586, column: 2)
!7864 = !DILocation(line: 591, column: 2, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !748, file: !696, line: 591, column: 2)
!7866 = !DILocation(line: 595, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !748, file: !696, line: 595, column: 2)
!7868 = !DILocation(line: 607, column: 1, scope: !748)
!7869 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !696, file: !696, line: 112, type: !7755, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7870)
!7870 = !{!7871, !7872}
!7871 = !DILocalVariable(name: "line", arg: 1, scope: !7869, file: !696, line: 112, type: !103)
!7872 = !DILocalVariable(name: "irqnum", scope: !7869, file: !696, line: 114, type: !103)
!7873 = !DILocation(line: 0, scope: !7869)
!7874 = !DILocation(line: 121, column: 11, scope: !7869)
!7875 = !DILocation(line: 130, column: 26, scope: !7869)
!7876 = !DILocation(line: 130, column: 2, scope: !7869)
!7877 = !DILocation(line: 134, column: 2, scope: !7869)
!7878 = !DILocation(line: 135, column: 1, scope: !7869)
!7879 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7766, file: !7766, line: 268, type: !6202, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7880)
!7880 = !{!7881}
!7881 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7879, file: !7766, line: 268, type: !121)
!7882 = !DILocation(line: 0, scope: !7879)
!7883 = !DILocation(line: 270, column: 3, scope: !7879)
!7884 = !DILocation(line: 271, column: 1, scope: !7879)
!7885 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !696, file: !696, line: 137, type: !7755, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "line", arg: 1, scope: !7885, file: !696, line: 137, type: !103)
!7888 = !DILocation(line: 0, scope: !7885)
!7889 = !DILocation(line: 141, column: 11, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7885, file: !696, line: 141, column: 6)
!7891 = !DILocation(line: 141, column: 6, scope: !7885)
!7892 = !DILocation(line: 145, column: 28, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7890, file: !696, line: 141, column: 17)
!7894 = !DILocation(line: 145, column: 3, scope: !7893)
!7895 = !DILocation(line: 147, column: 2, scope: !7893)
!7896 = !DILocation(line: 151, column: 1, scope: !7885)
!7897 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7766, file: !7766, line: 309, type: !6202, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7898)
!7898 = !{!7899}
!7899 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7897, file: !7766, line: 309, type: !121)
!7900 = !DILocation(line: 0, scope: !7897)
!7901 = !DILocation(line: 311, column: 3, scope: !7897)
!7902 = !DILocation(line: 312, column: 1, scope: !7897)
!7903 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !696, file: !696, line: 202, type: !7904, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7906)
!7904 = !DISubroutineType(types: !7905)
!7905 = !{null, !103, !103}
!7906 = !{!7907, !7908}
!7907 = !DILocalVariable(name: "line", arg: 1, scope: !7903, file: !696, line: 202, type: !103)
!7908 = !DILocalVariable(name: "trigger", arg: 2, scope: !7903, file: !696, line: 202, type: !103)
!7909 = !DILocation(line: 0, scope: !7903)
!7910 = !DILocation(line: 211, column: 2, scope: !7903)
!7911 = !DILocation(line: 213, column: 36, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7903, file: !696, line: 211, column: 19)
!7913 = !DILocation(line: 213, column: 3, scope: !7912)
!7914 = !DILocation(line: 214, column: 3, scope: !7912)
!7915 = !DILocation(line: 215, column: 3, scope: !7912)
!7916 = !DILocation(line: 217, column: 35, scope: !7912)
!7917 = !DILocation(line: 217, column: 3, scope: !7912)
!7918 = !DILocation(line: 218, column: 3, scope: !7912)
!7919 = !DILocation(line: 219, column: 3, scope: !7912)
!7920 = !DILocation(line: 221, column: 36, scope: !7912)
!7921 = !DILocation(line: 221, column: 3, scope: !7912)
!7922 = !DILocation(line: 222, column: 3, scope: !7912)
!7923 = !DILocation(line: 223, column: 3, scope: !7912)
!7924 = !DILocation(line: 225, column: 35, scope: !7912)
!7925 = !DILocation(line: 225, column: 3, scope: !7912)
!7926 = !DILocation(line: 226, column: 3, scope: !7912)
!7927 = !DILocation(line: 227, column: 3, scope: !7912)
!7928 = !DILocation(line: 232, column: 1, scope: !7903)
!7929 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7766, file: !7766, line: 573, type: !6202, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7930)
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7929, file: !7766, line: 573, type: !121)
!7932 = !DILocation(line: 0, scope: !7929)
!7933 = !DILocation(line: 575, column: 3, scope: !7929)
!7934 = !DILocation(line: 577, column: 1, scope: !7929)
!7935 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7766, file: !7766, line: 703, type: !6202, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7935, file: !7766, line: 703, type: !121)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 705, column: 3, scope: !7935)
!7940 = !DILocation(line: 706, column: 1, scope: !7935)
!7941 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7766, file: !7766, line: 529, type: !6202, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7942)
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7941, file: !7766, line: 529, type: !121)
!7944 = !DILocation(line: 0, scope: !7941)
!7945 = !DILocation(line: 531, column: 3, scope: !7941)
!7946 = !DILocation(line: 533, column: 1, scope: !7941)
!7947 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7766, file: !7766, line: 661, type: !6202, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7948)
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7947, file: !7766, line: 661, type: !121)
!7950 = !DILocation(line: 0, scope: !7947)
!7951 = !DILocation(line: 663, column: 3, scope: !7947)
!7952 = !DILocation(line: 664, column: 1, scope: !7947)
!7953 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !696, file: !696, line: 433, type: !7954, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7956)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!103, !103, !736, !102}
!7956 = !{!7957, !7958, !7959, !7960, !7962}
!7957 = !DILocalVariable(name: "line", arg: 1, scope: !7953, file: !696, line: 433, type: !103)
!7958 = !DILocalVariable(name: "cb", arg: 2, scope: !7953, file: !696, line: 433, type: !736)
!7959 = !DILocalVariable(name: "arg", arg: 3, scope: !7953, file: !696, line: 433, type: !102)
!7960 = !DILocalVariable(name: "dev", scope: !7953, file: !696, line: 435, type: !7961)
!7961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!7962 = !DILocalVariable(name: "data", scope: !7953, file: !696, line: 436, type: !7720)
!7963 = !DILocation(line: 0, scope: !7953)
!7964 = !DILocation(line: 438, column: 21, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7953, file: !696, line: 438, column: 6)
!7966 = !DILocation(line: 438, column: 6, scope: !7965)
!7967 = !DILocation(line: 438, column: 6, scope: !7953)
!7968 = !DILocation(line: 442, column: 20, scope: !7953)
!7969 = !DILocation(line: 443, column: 17, scope: !7953)
!7970 = !DILocation(line: 443, column: 22, scope: !7953)
!7971 = !DILocation(line: 445, column: 2, scope: !7953)
!7972 = !DILocation(line: 446, column: 1, scope: !7953)
!7973 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !696, file: !696, line: 448, type: !7755, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7974)
!7974 = !{!7975, !7976, !7977}
!7975 = !DILocalVariable(name: "line", arg: 1, scope: !7973, file: !696, line: 448, type: !103)
!7976 = !DILocalVariable(name: "dev", scope: !7973, file: !696, line: 450, type: !7961)
!7977 = !DILocalVariable(name: "data", scope: !7973, file: !696, line: 451, type: !7720)
!7978 = !DILocation(line: 0, scope: !7973)
!7979 = !DILocation(line: 453, column: 17, scope: !7973)
!7980 = !DILocation(line: 453, column: 20, scope: !7973)
!7981 = !DILocation(line: 454, column: 17, scope: !7973)
!7982 = !DILocation(line: 454, column: 22, scope: !7973)
!7983 = !DILocation(line: 455, column: 1, scope: !7973)
!7984 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !894, file: !894, line: 183, type: !932, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7985)
!7985 = !{!7986, !7987, !7988, !7989, !7990}
!7986 = !DILocalVariable(name: "dev", arg: 1, scope: !7984, file: !894, line: 183, type: !923)
!7987 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7984, file: !894, line: 184, type: !934)
!7988 = !DILocalVariable(name: "pclken", scope: !7984, file: !894, line: 186, type: !884)
!7989 = !DILocalVariable(name: "reg", scope: !7984, file: !894, line: 187, type: !1654)
!7990 = !DILocalVariable(name: "reg_val", scope: !7984, file: !894, line: 188, type: !121)
!7991 = !DILocation(line: 0, scope: !7984)
!7992 = !DILocation(line: 192, column: 6, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7984, file: !894, line: 192, column: 6)
!7994 = !DILocation(line: 192, column: 6, scope: !7984)
!7995 = !DILocation(line: 197, column: 52, scope: !7984)
!7996 = !DILocation(line: 197, column: 8, scope: !7984)
!7997 = !DILocation(line: 198, column: 12, scope: !7984)
!7998 = !DILocation(line: 199, column: 21, scope: !7984)
!7999 = !DILocation(line: 199, column: 10, scope: !7984)
!8000 = !DILocation(line: 200, column: 7, scope: !7984)
!8001 = !DILocation(line: 202, column: 2, scope: !7984)
!8002 = !DILocation(line: 203, column: 1, scope: !7984)
!8003 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !894, file: !894, line: 205, type: !932, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8004)
!8004 = !{!8005, !8006, !8007, !8008, !8009}
!8005 = !DILocalVariable(name: "dev", arg: 1, scope: !8003, file: !894, line: 205, type: !923)
!8006 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8003, file: !894, line: 206, type: !934)
!8007 = !DILocalVariable(name: "pclken", scope: !8003, file: !894, line: 208, type: !884)
!8008 = !DILocalVariable(name: "reg", scope: !8003, file: !894, line: 209, type: !1654)
!8009 = !DILocalVariable(name: "reg_val", scope: !8003, file: !894, line: 210, type: !121)
!8010 = !DILocation(line: 0, scope: !8003)
!8011 = !DILocation(line: 214, column: 6, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8003, file: !894, line: 214, column: 6)
!8013 = !DILocation(line: 214, column: 6, scope: !8003)
!8014 = !DILocation(line: 219, column: 52, scope: !8003)
!8015 = !DILocation(line: 219, column: 8, scope: !8003)
!8016 = !DILocation(line: 220, column: 12, scope: !8003)
!8017 = !DILocation(line: 221, column: 22, scope: !8003)
!8018 = !DILocation(line: 221, column: 13, scope: !8003)
!8019 = !DILocation(line: 221, column: 10, scope: !8003)
!8020 = !DILocation(line: 222, column: 7, scope: !8003)
!8021 = !DILocation(line: 224, column: 2, scope: !8003)
!8022 = !DILocation(line: 225, column: 1, scope: !8003)
!8023 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !894, file: !894, line: 262, type: !948, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8024)
!8024 = !{!8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032}
!8025 = !DILocalVariable(name: "clock", arg: 1, scope: !8023, file: !894, line: 262, type: !923)
!8026 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8023, file: !894, line: 263, type: !934)
!8027 = !DILocalVariable(name: "rate", arg: 3, scope: !8023, file: !894, line: 264, type: !890)
!8028 = !DILocalVariable(name: "pclken", scope: !8023, file: !894, line: 266, type: !884)
!8029 = !DILocalVariable(name: "ahb_clock", scope: !8023, file: !894, line: 273, type: !121)
!8030 = !DILocalVariable(name: "apb1_clock", scope: !8023, file: !894, line: 274, type: !121)
!8031 = !DILocalVariable(name: "apb2_clock", scope: !8023, file: !894, line: 276, type: !121)
!8032 = !DILocalVariable(name: "ahb3_clock", scope: !8023, file: !894, line: 286, type: !121)
!8033 = !DILocation(line: 0, scope: !8023)
!8034 = !DILocation(line: 273, column: 23, scope: !8023)
!8035 = !DILocation(line: 299, column: 18, scope: !8023)
!8036 = !DILocation(line: 299, column: 2, scope: !8023)
!8037 = !DILocation(line: 274, column: 24, scope: !8023)
!8038 = !DILocation(line: 319, column: 3, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8023, file: !894, line: 299, column: 23)
!8040 = !DILocation(line: 276, column: 24, scope: !8023)
!8041 = !DILocation(line: 323, column: 3, scope: !8039)
!8042 = !DILocation(line: 346, column: 33, scope: !8039)
!8043 = !DILocation(line: 346, column: 11, scope: !8039)
!8044 = !DILocation(line: 350, column: 3, scope: !8039)
!8045 = !DILocation(line: 354, column: 33, scope: !8039)
!8046 = !DILocation(line: 354, column: 11, scope: !8039)
!8047 = !DILocation(line: 358, column: 3, scope: !8039)
!8048 = !DILocation(line: 374, column: 3, scope: !8039)
!8049 = !DILocation(line: 379, column: 3, scope: !8039)
!8050 = !DILocation(line: 0, scope: !8039)
!8051 = !DILocation(line: 396, column: 1, scope: !8023)
!8052 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !894, file: !894, line: 227, type: !964, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8053)
!8053 = !{!8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061}
!8054 = !DILocalVariable(name: "dev", arg: 1, scope: !8052, file: !894, line: 227, type: !923)
!8055 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8052, file: !894, line: 228, type: !934)
!8056 = !DILocalVariable(name: "data", arg: 3, scope: !8052, file: !894, line: 229, type: !102)
!8057 = !DILocalVariable(name: "pclken", scope: !8052, file: !894, line: 233, type: !884)
!8058 = !DILocalVariable(name: "reg", scope: !8052, file: !894, line: 234, type: !1654)
!8059 = !DILocalVariable(name: "reg_val", scope: !8052, file: !894, line: 235, type: !121)
!8060 = !DILocalVariable(name: "dt_val", scope: !8052, file: !894, line: 235, type: !121)
!8061 = !DILocalVariable(name: "err", scope: !8052, file: !894, line: 236, type: !103)
!8062 = !DILocation(line: 0, scope: !8052)
!8063 = !DILocation(line: 241, column: 30, scope: !8052)
!8064 = !DILocation(line: 241, column: 8, scope: !8052)
!8065 = !DILocation(line: 242, column: 10, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8052, file: !894, line: 242, column: 6)
!8067 = !DILocation(line: 242, column: 6, scope: !8052)
!8068 = !DILocation(line: 247, column: 11, scope: !8052)
!8069 = !DILocation(line: 248, column: 6, scope: !8052)
!8070 = !DILocation(line: 247, column: 44, scope: !8052)
!8071 = !DILocation(line: 250, column: 6, scope: !8052)
!8072 = !DILocation(line: 249, column: 52, scope: !8052)
!8073 = !DILocation(line: 249, column: 8, scope: !8052)
!8074 = !DILocation(line: 251, column: 12, scope: !8052)
!8075 = !DILocation(line: 252, column: 10, scope: !8052)
!8076 = !DILocation(line: 253, column: 7, scope: !8052)
!8077 = !DILocation(line: 255, column: 2, scope: !8052)
!8078 = !DILocation(line: 260, column: 1, scope: !8052)
!8079 = distinct !DISubprogram(name: "enabled_clock", scope: !894, file: !894, line: 100, type: !8080, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8082)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!103, !121}
!8082 = !{!8083, !8084}
!8083 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8079, file: !894, line: 100, type: !121)
!8084 = !DILocalVariable(name: "r", scope: !8079, file: !894, line: 102, type: !103)
!8085 = !DILocation(line: 0, scope: !8079)
!8086 = !DILocation(line: 104, column: 2, scope: !8079)
!8087 = !DILocation(line: 180, column: 2, scope: !8079)
!8088 = !DILocation(line: 181, column: 1, scope: !8079)
!8089 = distinct !DISubprogram(name: "get_bus_clock", scope: !894, file: !894, line: 79, type: !8090, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8092)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{!121, !121, !121}
!8092 = !{!8093, !8094}
!8093 = !DILocalVariable(name: "clock", arg: 1, scope: !8089, file: !894, line: 79, type: !121)
!8094 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8089, file: !894, line: 79, type: !121)
!8095 = !DILocation(line: 0, scope: !8089)
!8096 = !DILocation(line: 81, column: 15, scope: !8089)
!8097 = !DILocation(line: 81, column: 2, scope: !8089)
!8098 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !894, file: !894, line: 68, type: !8099, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8101)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!121, !121, !103, !103, !103}
!8101 = !{!8102, !8103, !8104, !8105}
!8102 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8098, file: !894, line: 68, type: !121)
!8103 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8098, file: !894, line: 69, type: !103)
!8104 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8098, file: !894, line: 70, type: !103)
!8105 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8098, file: !894, line: 71, type: !103)
!8106 = !DILocation(line: 0, scope: !8098)
!8107 = !DILocation(line: 75, column: 22, scope: !8098)
!8108 = !DILocation(line: 76, column: 13, scope: !8098)
!8109 = !DILocation(line: 75, column: 34, scope: !8098)
!8110 = !DILocation(line: 75, column: 2, scope: !8098)
!8111 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !894, file: !894, line: 641, type: !921, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8112)
!8112 = !{!8113, !8114, !8115}
!8113 = !DILocalVariable(name: "dev", arg: 1, scope: !8111, file: !894, line: 641, type: !923)
!8114 = !DILocalVariable(name: "old_flash_freq", scope: !8111, file: !894, line: 664, type: !121)
!8115 = !DILocalVariable(name: "new_flash_freq", scope: !8111, file: !894, line: 665, type: !121)
!8116 = !DILocation(line: 0, scope: !8111)
!8117 = !DILocation(line: 646, column: 2, scope: !8111)
!8118 = !DILocation(line: 667, column: 19, scope: !8111)
!8119 = !DILocation(line: 674, column: 21, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8111, file: !894, line: 674, column: 6)
!8121 = !DILocation(line: 674, column: 6, scope: !8111)
!8122 = !DILocation(line: 675, column: 3, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8120, file: !894, line: 674, column: 59)
!8124 = !DILocation(line: 676, column: 2, scope: !8123)
!8125 = !DILocation(line: 680, column: 2, scope: !8111)
!8126 = !DILocation(line: 683, column: 2, scope: !8111)
!8127 = !DILocation(line: 690, column: 3, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !894, line: 689, column: 9)
!8129 = distinct !DILexicalBlock(scope: !8111, file: !894, line: 685, column: 6)
!8130 = !DILocation(line: 695, column: 2, scope: !8111)
!8131 = !DILocation(line: 696, column: 2, scope: !8111)
!8132 = !DILocation(line: 696, column: 9, scope: !8111)
!8133 = !DILocation(line: 696, column: 34, scope: !8111)
!8134 = distinct !{!8134, !8131, !8135}
!8135 = !DILocation(line: 697, column: 2, scope: !8111)
!8136 = !DILocation(line: 720, column: 21, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8111, file: !894, line: 720, column: 6)
!8138 = !DILocation(line: 720, column: 6, scope: !8111)
!8139 = !DILocation(line: 721, column: 3, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8137, file: !894, line: 720, column: 60)
!8141 = !DILocation(line: 722, column: 2, scope: !8140)
!8142 = !DILocation(line: 725, column: 18, scope: !8111)
!8143 = !DILocation(line: 728, column: 2, scope: !8111)
!8144 = !DILocation(line: 730, column: 2, scope: !8111)
!8145 = !DILocation(line: 745, column: 2, scope: !8111)
!8146 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8147, file: !8147, line: 3275, type: !6192, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8147 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8148 = !DILocation(line: 3277, column: 21, scope: !8146)
!8149 = !DILocation(line: 3277, column: 3, scope: !8146)
!8150 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !894, file: !894, line: 507, type: !3339, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8151 = !DILocation(line: 516, column: 4, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !894, line: 515, column: 10)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !894, line: 513, column: 7)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !894, line: 510, column: 37)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !894, line: 510, column: 6)
!8156 = !DILocation(line: 526, column: 3, scope: !8154)
!8157 = !DILocation(line: 527, column: 3, scope: !8154)
!8158 = !DILocation(line: 527, column: 10, scope: !8154)
!8159 = !DILocation(line: 527, column: 31, scope: !8154)
!8160 = distinct !{!8160, !8157, !8161}
!8161 = !DILocation(line: 529, column: 3, scope: !8154)
!8162 = !DILocation(line: 627, column: 1, scope: !8150)
!8163 = distinct !DISubprogram(name: "set_up_plls", scope: !894, file: !894, line: 448, type: !3339, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8164 = !DILocation(line: 460, column: 6, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8163, file: !894, line: 460, column: 6)
!8166 = !DILocation(line: 460, column: 31, scope: !8165)
!8167 = !DILocation(line: 460, column: 6, scope: !8163)
!8168 = !DILocation(line: 461, column: 3, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !894, line: 460, column: 67)
!8170 = !DILocation(line: 462, column: 3, scope: !8169)
!8171 = !DILocation(line: 463, column: 2, scope: !8169)
!8172 = !DILocation(line: 464, column: 2, scope: !8163)
!8173 = !DILocation(line: 488, column: 2, scope: !8163)
!8174 = !DILocation(line: 492, column: 2, scope: !8163)
!8175 = !DILocation(line: 496, column: 2, scope: !8163)
!8176 = !DILocation(line: 499, column: 2, scope: !8163)
!8177 = !DILocation(line: 500, column: 2, scope: !8163)
!8178 = !DILocation(line: 500, column: 9, scope: !8163)
!8179 = !DILocation(line: 500, column: 30, scope: !8163)
!8180 = distinct !{!8180, !8177, !8181}
!8181 = !DILocation(line: 502, column: 2, scope: !8163)
!8182 = !DILocation(line: 505, column: 1, scope: !8163)
!8183 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8147, file: !8147, line: 3224, type: !6202, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8184)
!8184 = !{!8185}
!8185 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8183, file: !8147, line: 3224, type: !121)
!8186 = !DILocation(line: 0, scope: !8183)
!8187 = !DILocation(line: 3226, column: 3, scope: !8183)
!8188 = !DILocation(line: 3227, column: 1, scope: !8183)
!8189 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8147, file: !8147, line: 3188, type: !6202, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8190)
!8190 = !{!8191}
!8191 = !DILocalVariable(name: "Source", arg: 1, scope: !8189, file: !8147, line: 3188, type: !121)
!8192 = !DILocation(line: 0, scope: !8189)
!8193 = !DILocation(line: 3190, column: 3, scope: !8189)
!8194 = !DILocation(line: 3191, column: 1, scope: !8189)
!8195 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8147, file: !8147, line: 3204, type: !6192, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8196 = !DILocation(line: 3206, column: 21, scope: !8195)
!8197 = !DILocation(line: 3206, column: 3, scope: !8195)
!8198 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8147, file: !8147, line: 3240, type: !6202, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8199)
!8199 = !{!8200}
!8200 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8198, file: !8147, line: 3240, type: !121)
!8201 = !DILocation(line: 0, scope: !8198)
!8202 = !DILocation(line: 3242, column: 3, scope: !8198)
!8203 = !DILocation(line: 3243, column: 1, scope: !8198)
!8204 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8147, file: !8147, line: 3256, type: !6202, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8205)
!8205 = !{!8206}
!8206 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8204, file: !8147, line: 3256, type: !121)
!8207 = !DILocation(line: 0, scope: !8204)
!8208 = !DILocation(line: 3258, column: 3, scope: !8204)
!8209 = !DILocation(line: 3259, column: 1, scope: !8204)
!8210 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !894, file: !894, line: 409, type: !3339, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8211 = !DILocation(line: 412, column: 6, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8210, file: !894, line: 412, column: 6)
!8213 = !DILocation(line: 412, column: 27, scope: !8212)
!8214 = !DILocation(line: 412, column: 6, scope: !8210)
!8215 = !DILocation(line: 414, column: 3, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !894, line: 412, column: 33)
!8217 = !DILocation(line: 415, column: 3, scope: !8216)
!8218 = !DILocation(line: 415, column: 10, scope: !8216)
!8219 = !DILocation(line: 415, column: 31, scope: !8216)
!8220 = distinct !{!8220, !8217, !8221}
!8221 = !DILocation(line: 417, column: 3, scope: !8216)
!8222 = !DILocation(line: 421, column: 2, scope: !8210)
!8223 = !DILocation(line: 422, column: 2, scope: !8210)
!8224 = !DILocation(line: 422, column: 9, scope: !8210)
!8225 = !DILocation(line: 422, column: 34, scope: !8210)
!8226 = distinct !{!8226, !8223, !8227}
!8227 = !DILocation(line: 423, column: 2, scope: !8210)
!8228 = !DILocation(line: 424, column: 1, scope: !8210)
!8229 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8147, file: !8147, line: 4195, type: !3339, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8230 = !DILocation(line: 4197, column: 3, scope: !8229)
!8231 = !DILocation(line: 4198, column: 1, scope: !8229)
!8232 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8147, file: !8147, line: 4184, type: !3339, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8233 = !DILocation(line: 4186, column: 3, scope: !8232)
!8234 = !DILocation(line: 4187, column: 1, scope: !8232)
!8235 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8147, file: !8147, line: 4205, type: !6192, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8236 = !DILocation(line: 4207, column: 11, scope: !8235)
!8237 = !DILocation(line: 4207, column: 44, scope: !8235)
!8238 = !DILocation(line: 4207, column: 3, scope: !8235)
!8239 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8147, file: !8147, line: 3007, type: !6192, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8240 = !DILocation(line: 3009, column: 11, scope: !8239)
!8241 = !DILocation(line: 3009, column: 44, scope: !8239)
!8242 = !DILocation(line: 3009, column: 3, scope: !8239)
!8243 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8147, file: !8147, line: 2987, type: !3339, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8244 = !DILocation(line: 2989, column: 3, scope: !8243)
!8245 = !DILocation(line: 2990, column: 1, scope: !8243)
!8246 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8147, file: !8147, line: 2939, type: !3339, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8247 = !DILocation(line: 2941, column: 3, scope: !8246)
!8248 = !DILocation(line: 2942, column: 1, scope: !8246)
!8249 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8147, file: !8147, line: 2949, type: !3339, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8250 = !DILocation(line: 2951, column: 3, scope: !8249)
!8251 = !DILocation(line: 2952, column: 1, scope: !8249)
!8252 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8147, file: !8147, line: 2969, type: !6192, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !317)
!8253 = !DILocation(line: 2971, column: 11, scope: !8252)
!8254 = !DILocation(line: 2971, column: 44, scope: !8252)
!8255 = !DILocation(line: 2971, column: 3, scope: !8252)
!8256 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8257, file: !8257, line: 40, type: !6192, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3064, retainedNodes: !317)
!8257 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8258 = !DILocation(line: 45, column: 3, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !8257, line: 44, column: 44)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !8257, line: 44, column: 13)
!8261 = distinct !DILexicalBlock(scope: !8256, file: !8257, line: 42, column: 6)
!8262 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8257, file: !8257, line: 56, type: !3339, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3064, retainedNodes: !317)
!8263 = !DILocation(line: 58, column: 2, scope: !8262)
!8264 = !DILocation(line: 62, column: 1, scope: !8262)
!8265 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8147, file: !8147, line: 4304, type: !8266, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3064, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{null, !121, !121, !121, !121}
!8268 = !{!8269, !8270, !8271, !8272}
!8269 = !DILocalVariable(name: "Source", arg: 1, scope: !8265, file: !8147, line: 4304, type: !121)
!8270 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8265, file: !8147, line: 4304, type: !121)
!8271 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8265, file: !8147, line: 4304, type: !121)
!8272 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8265, file: !8147, line: 4304, type: !121)
!8273 = !DILocation(line: 0, scope: !8265)
!8274 = !DILocation(line: 4306, column: 3, scope: !8265)
!8275 = !DILocation(line: 4308, column: 3, scope: !8265)
!8276 = !DILocation(line: 4312, column: 1, scope: !8265)
!8277 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8257, file: !8257, line: 69, type: !3339, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3064, retainedNodes: !317)
!8278 = !DILocation(line: 72, column: 2, scope: !8277)
!8279 = !DILocation(line: 73, column: 1, scope: !8277)
!8280 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8281, file: !8281, line: 1185, type: !6202, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3064, retainedNodes: !8282)
!8281 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8282 = !{!8283, !8284}
!8283 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8280, file: !8281, line: 1185, type: !121)
!8284 = !DILocalVariable(name: "tmpreg", scope: !8280, file: !8281, line: 1187, type: !120)
!8285 = !DILocation(line: 0, scope: !8280)
!8286 = !DILocation(line: 1187, column: 3, scope: !8280)
!8287 = !DILocation(line: 1187, column: 17, scope: !8280)
!8288 = !DILocation(line: 1188, column: 3, scope: !8280)
!8289 = !DILocation(line: 1190, column: 12, scope: !8280)
!8290 = !DILocation(line: 1190, column: 10, scope: !8280)
!8291 = !DILocation(line: 1191, column: 9, scope: !8280)
!8292 = !DILocation(line: 1192, column: 1, scope: !8280)
!8293 = distinct !DISubprogram(name: "uart_console_init", scope: !972, file: !972, line: 588, type: !1009, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8294)
!8294 = !{!8295}
!8295 = !DILocalVariable(name: "arg", arg: 1, scope: !8293, file: !972, line: 588, type: !988)
!8296 = !DILocation(line: 0, scope: !8293)
!8297 = !DILocation(line: 593, column: 7, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8293, file: !972, line: 593, column: 6)
!8299 = !DILocation(line: 593, column: 6, scope: !8293)
!8300 = !DILocation(line: 597, column: 2, scope: !8293)
!8301 = !DILocation(line: 599, column: 2, scope: !8293)
!8302 = !DILocation(line: 600, column: 1, scope: !8293)
!8303 = distinct !DISubprogram(name: "device_is_ready", scope: !8304, file: !8304, line: 47, type: !8305, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8307)
!8304 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!157, !988}
!8307 = !{!8308}
!8308 = !DILocalVariable(name: "dev", arg: 1, scope: !8303, file: !8304, line: 47, type: !988)
!8309 = !DILocation(line: 0, scope: !8303)
!8310 = !DILocation(line: 55, column: 2, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8303, file: !8304, line: 55, column: 2)
!8312 = !{i64 2155669204}
!8313 = !DILocation(line: 56, column: 9, scope: !8303)
!8314 = !DILocation(line: 56, column: 2, scope: !8303)
!8315 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !972, file: !972, line: 573, type: !3339, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !317)
!8316 = !DILocation(line: 576, column: 2, scope: !8315)
!8317 = !DILocation(line: 579, column: 2, scope: !8315)
!8318 = !DILocation(line: 581, column: 1, scope: !8315)
!8319 = distinct !DISubprogram(name: "console_out", scope: !972, file: !972, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8320)
!8320 = !{!8321}
!8321 = !DILocalVariable(name: "c", arg: 1, scope: !8319, file: !972, line: 77, type: !103)
!8322 = !DILocation(line: 0, scope: !8319)
!8323 = !DILocation(line: 89, column: 11, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8319, file: !972, line: 89, column: 6)
!8325 = !DILocation(line: 89, column: 6, scope: !8319)
!8326 = !DILocation(line: 90, column: 3, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8324, file: !972, line: 89, column: 17)
!8328 = !DILocation(line: 91, column: 2, scope: !8327)
!8329 = !DILocation(line: 92, column: 34, scope: !8319)
!8330 = !DILocation(line: 92, column: 2, scope: !8319)
!8331 = !DILocation(line: 94, column: 2, scope: !8319)
!8332 = distinct !DISubprogram(name: "uart_poll_out", scope: !8333, file: !8333, line: 95, type: !1005, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8334)
!8333 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/getline")
!8334 = !{!8335, !8336}
!8335 = !DILocalVariable(name: "dev", arg: 1, scope: !8332, file: !8333, line: 95, type: !988)
!8336 = !DILocalVariable(name: "out_char", arg: 2, scope: !8332, file: !8333, line: 95, type: !155)
!8337 = !DILocation(line: 0, scope: !8332)
!8338 = !DILocation(line: 105, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8332, file: !8333, line: 105, column: 2)
!8340 = !{i64 2155752449}
!8341 = !DILocation(line: 106, column: 2, scope: !8332)
!8342 = !DILocation(line: 107, column: 1, scope: !8332)
!8343 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !1005, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8344)
!8344 = !{!8345, !8346, !8347}
!8345 = !DILocalVariable(name: "dev", arg: 1, scope: !8343, file: !209, line: 574, type: !988)
!8346 = !DILocalVariable(name: "out_char", arg: 2, scope: !8343, file: !209, line: 575, type: !155)
!8347 = !DILocalVariable(name: "api", scope: !8343, file: !209, line: 577, type: !980)
!8348 = !DILocation(line: 0, scope: !8343)
!8349 = !DILocation(line: 578, column: 40, scope: !8343)
!8350 = !DILocation(line: 580, column: 7, scope: !8343)
!8351 = !DILocation(line: 580, column: 2, scope: !8343)
!8352 = !DILocation(line: 581, column: 1, scope: !8343)
!8353 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8305, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8354)
!8354 = !{!8355}
!8355 = !DILocalVariable(name: "dev", arg: 1, scope: !8353, file: !141, line: 730, type: !988)
!8356 = !DILocation(line: 0, scope: !8353)
!8357 = !DILocation(line: 732, column: 9, scope: !8353)
!8358 = !DILocation(line: 732, column: 2, scope: !8353)
!8359 = distinct !DISubprogram(name: "uart_register_input", scope: !972, file: !972, line: 549, type: !8360, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{null, !1069, !1069, !1109}
!8362 = !{!8363, !8364, !8365}
!8363 = !DILocalVariable(name: "avail", arg: 1, scope: !8359, file: !972, line: 549, type: !1069)
!8364 = !DILocalVariable(name: "lines", arg: 2, scope: !8359, file: !972, line: 549, type: !1069)
!8365 = !DILocalVariable(name: "completion", arg: 3, scope: !8359, file: !972, line: 550, type: !1109)
!8366 = !DILocation(line: 0, scope: !8359)
!8367 = !DILocation(line: 552, column: 14, scope: !8359)
!8368 = !DILocation(line: 553, column: 14, scope: !8359)
!8369 = !DILocation(line: 554, column: 16, scope: !8359)
!8370 = !DILocation(line: 556, column: 2, scope: !8359)
!8371 = !DILocation(line: 557, column: 1, scope: !8359)
!8372 = distinct !DISubprogram(name: "console_input_init", scope: !972, file: !972, line: 532, type: !3339, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8373)
!8373 = !{!8374}
!8374 = !DILocalVariable(name: "c", scope: !8372, file: !972, line: 534, type: !154)
!8375 = !DILocation(line: 534, column: 2, scope: !8372)
!8376 = !DILocation(line: 536, column: 2, scope: !8372)
!8377 = !DILocation(line: 537, column: 2, scope: !8372)
!8378 = !DILocation(line: 539, column: 2, scope: !8372)
!8379 = !DILocation(line: 542, column: 9, scope: !8372)
!8380 = !DILocation(line: 542, column: 2, scope: !8372)
!8381 = !DILocation(line: 0, scope: !8372)
!8382 = !DILocation(line: 543, column: 3, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8372, file: !972, line: 542, column: 46)
!8384 = distinct !{!8384, !8380, !8385}
!8385 = !DILocation(line: 544, column: 2, scope: !8372)
!8386 = !DILocation(line: 546, column: 2, scope: !8372)
!8387 = !DILocation(line: 547, column: 1, scope: !8372)
!8388 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8333, file: !8333, line: 265, type: !1039, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8388, file: !8333, line: 265, type: !988)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 274, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8388, file: !8333, line: 274, column: 2)
!8394 = !{i64 2155752925}
!8395 = !DILocation(line: 275, column: 2, scope: !8388)
!8396 = !DILocation(line: 276, column: 1, scope: !8388)
!8397 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8333, file: !8333, line: 217, type: !1039, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8398)
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "dev", arg: 1, scope: !8397, file: !8333, line: 217, type: !988)
!8400 = !DILocation(line: 0, scope: !8397)
!8401 = !DILocation(line: 226, column: 2, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8397, file: !8333, line: 226, column: 2)
!8403 = !{i64 2155752789}
!8404 = !DILocation(line: 227, column: 2, scope: !8397)
!8405 = !DILocation(line: 228, column: 1, scope: !8397)
!8406 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8407, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8409)
!8407 = !DISubroutineType(types: !8408)
!8408 = !{null, !988, !1055}
!8409 = !{!8410, !8411}
!8410 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !209, line: 1190, type: !988)
!8411 = !DILocalVariable(name: "cb", arg: 2, scope: !8406, file: !209, line: 1191, type: !1055)
!8412 = !DILocation(line: 0, scope: !8406)
!8413 = !DILocation(line: 1193, column: 2, scope: !8406)
!8414 = !DILocation(line: 1194, column: 1, scope: !8406)
!8415 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !1009, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8416)
!8416 = !{!8417, !8418}
!8417 = !DILocalVariable(name: "dev", arg: 1, scope: !8415, file: !209, line: 1024, type: !988)
!8418 = !DILocalVariable(name: "api", scope: !8415, file: !209, line: 1027, type: !980)
!8419 = !DILocation(line: 0, scope: !8415)
!8420 = !DILocation(line: 1028, column: 40, scope: !8415)
!8421 = !DILocation(line: 1030, column: 11, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8415, file: !209, line: 1030, column: 6)
!8423 = !DILocation(line: 1030, column: 24, scope: !8422)
!8424 = !DILocation(line: 1030, column: 6, scope: !8415)
!8425 = !DILocation(line: 1033, column: 9, scope: !8415)
!8426 = !DILocation(line: 1033, column: 2, scope: !8415)
!8427 = !DILocation(line: 1038, column: 1, scope: !8415)
!8428 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !1035, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8429)
!8429 = !{!8430, !8431, !8432, !8433}
!8430 = !DILocalVariable(name: "dev", arg: 1, scope: !8428, file: !209, line: 785, type: !988)
!8431 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8428, file: !209, line: 785, type: !267)
!8432 = !DILocalVariable(name: "size", arg: 3, scope: !8428, file: !209, line: 786, type: !268)
!8433 = !DILocalVariable(name: "api", scope: !8428, file: !209, line: 789, type: !980)
!8434 = !DILocation(line: 0, scope: !8428)
!8435 = !DILocation(line: 790, column: 40, scope: !8428)
!8436 = !DILocation(line: 792, column: 11, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8428, file: !209, line: 792, column: 6)
!8438 = !DILocation(line: 792, column: 21, scope: !8437)
!8439 = !DILocation(line: 792, column: 6, scope: !8428)
!8440 = !DILocation(line: 796, column: 9, scope: !8428)
!8441 = !DILocation(line: 796, column: 2, scope: !8428)
!8442 = !DILocation(line: 803, column: 1, scope: !8428)
!8443 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8333, file: !8333, line: 241, type: !1039, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8444)
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "dev", arg: 1, scope: !8443, file: !8333, line: 241, type: !988)
!8446 = !DILocation(line: 0, scope: !8443)
!8447 = !DILocation(line: 250, column: 2, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !8333, line: 250, column: 2)
!8449 = !{i64 2155752857}
!8450 = !DILocation(line: 251, column: 2, scope: !8443)
!8451 = !DILocation(line: 252, column: 1, scope: !8443)
!8452 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !1039, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8453)
!8453 = !{!8454, !8455}
!8454 = !DILocalVariable(name: "dev", arg: 1, scope: !8452, file: !209, line: 934, type: !988)
!8455 = !DILocalVariable(name: "api", scope: !8452, file: !209, line: 937, type: !980)
!8456 = !DILocation(line: 0, scope: !8452)
!8457 = !DILocation(line: 938, column: 40, scope: !8452)
!8458 = !DILocation(line: 940, column: 11, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8452, file: !209, line: 940, column: 6)
!8460 = !DILocation(line: 940, column: 25, scope: !8459)
!8461 = !DILocation(line: 940, column: 6, scope: !8452)
!8462 = !DILocation(line: 941, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !209, line: 940, column: 34)
!8464 = !DILocation(line: 942, column: 2, scope: !8463)
!8465 = !DILocation(line: 946, column: 1, scope: !8452)
!8466 = !DILocation(line: 0, scope: !1117)
!8467 = !DILocation(line: 433, column: 9, scope: !1117)
!8468 = !DILocation(line: 433, column: 43, scope: !1117)
!8469 = !DILocation(line: 434, column: 9, scope: !1117)
!8470 = !DILocation(line: 433, column: 2, scope: !1117)
!8471 = !DILocation(line: 436, column: 3, scope: !1122)
!8472 = !DILocation(line: 439, column: 8, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 439, column: 7)
!8474 = !DILocation(line: 439, column: 7, scope: !1122)
!8475 = distinct !{!8475, !8470, !8476}
!8476 = !DILocation(line: 529, column: 2, scope: !1117)
!8477 = !DILocation(line: 0, scope: !1122)
!8478 = !DILocation(line: 445, column: 8, scope: !1122)
!8479 = !DILocation(line: 446, column: 10, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 446, column: 7)
!8481 = !DILocation(line: 446, column: 7, scope: !1122)
!8482 = !DILocation(line: 460, column: 8, scope: !1127)
!8483 = !DILocation(line: 460, column: 7, scope: !1122)
!8484 = !DILocation(line: 461, column: 10, scope: !1125)
!8485 = !DILocation(line: 0, scope: !1125)
!8486 = !DILocation(line: 461, column: 8, scope: !1126)
!8487 = !DILocation(line: 462, column: 9, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !1126, file: !972, line: 462, column: 8)
!8489 = !DILocation(line: 462, column: 8, scope: !1126)
!8490 = !DILocation(line: 477, column: 7, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 477, column: 7)
!8492 = !DILocation(line: 477, column: 7, scope: !1122)
!8493 = !DILocation(line: 478, column: 16, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8491, file: !972, line: 477, column: 46)
!8495 = !DILocation(line: 478, column: 22, scope: !8494)
!8496 = !DILocation(line: 478, column: 4, scope: !8494)
!8497 = !DILocation(line: 479, column: 4, scope: !8494)
!8498 = !DILocation(line: 483, column: 7, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 483, column: 7)
!8500 = !DILocation(line: 483, column: 7, scope: !1122)
!8501 = !DILocation(line: 484, column: 13, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !972, line: 484, column: 8)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !972, line: 483, column: 55)
!8504 = !DILocation(line: 484, column: 8, scope: !8503)
!8505 = !DILocation(line: 485, column: 5, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !972, line: 484, column: 26)
!8507 = !DILocation(line: 486, column: 5, scope: !8506)
!8508 = !DILocation(line: 487, column: 4, scope: !8506)
!8509 = !DILocation(line: 493, column: 16, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 493, column: 7)
!8511 = !DILocation(line: 493, column: 8, scope: !8510)
!8512 = !DILocation(line: 493, column: 7, scope: !1122)
!8513 = !DILocation(line: 494, column: 4, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !972, line: 493, column: 23)
!8515 = !DILocation(line: 497, column: 9, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !972, line: 497, column: 9)
!8517 = distinct !DILexicalBlock(scope: !8514, file: !972, line: 494, column: 18)
!8518 = !DILocation(line: 497, column: 13, scope: !8516)
!8519 = !DILocation(line: 497, column: 9, scope: !8517)
!8520 = !DILocation(line: 498, column: 16, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !972, line: 497, column: 18)
!8522 = !DILocation(line: 498, column: 26, scope: !8521)
!8523 = !DILocation(line: 498, column: 34, scope: !8521)
!8524 = !DILocation(line: 498, column: 6, scope: !8521)
!8525 = !DILocation(line: 499, column: 5, scope: !8521)
!8526 = !DILocation(line: 502, column: 5, scope: !8517)
!8527 = !DILocation(line: 503, column: 5, scope: !8517)
!8528 = !DILocation(line: 505, column: 5, scope: !8517)
!8529 = !DILocation(line: 505, column: 15, scope: !8517)
!8530 = !DILocation(line: 505, column: 21, scope: !8517)
!8531 = !DILocation(line: 505, column: 19, scope: !8517)
!8532 = !DILocation(line: 505, column: 26, scope: !8517)
!8533 = !DILocation(line: 506, column: 5, scope: !8517)
!8534 = !DILocation(line: 507, column: 5, scope: !8517)
!8535 = !DILocation(line: 508, column: 9, scope: !8517)
!8536 = !DILocation(line: 509, column: 9, scope: !8517)
!8537 = !DILocation(line: 510, column: 5, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8517, file: !972, line: 510, column: 5)
!8539 = !DILocation(line: 511, column: 9, scope: !8517)
!8540 = !DILocation(line: 512, column: 5, scope: !8517)
!8541 = !DILocation(line: 514, column: 9, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8517, file: !972, line: 514, column: 9)
!8543 = !DILocation(line: 514, column: 23, scope: !8542)
!8544 = !DILocation(line: 515, column: 27, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8542, file: !972, line: 514, column: 32)
!8546 = !DILocation(line: 515, column: 38, scope: !8545)
!8547 = !DILocation(line: 515, column: 13, scope: !8545)
!8548 = !DILocation(line: 515, column: 10, scope: !8545)
!8549 = !DILocation(line: 516, column: 5, scope: !8545)
!8550 = !DILocation(line: 526, column: 7, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !1122, file: !972, line: 526, column: 7)
!8552 = !DILocation(line: 526, column: 13, scope: !8551)
!8553 = !DILocation(line: 526, column: 11, scope: !8551)
!8554 = !DILocation(line: 526, column: 17, scope: !8551)
!8555 = !DILocation(line: 526, column: 7, scope: !1122)
!8556 = !DILocation(line: 527, column: 17, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8551, file: !972, line: 526, column: 42)
!8558 = !DILocation(line: 527, column: 30, scope: !8557)
!8559 = !DILocation(line: 527, column: 4, scope: !8557)
!8560 = !DILocation(line: 528, column: 3, scope: !8557)
!8561 = !DILocation(line: 530, column: 1, scope: !1117)
!8562 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1053, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8563)
!8563 = !{!8564, !8565, !8566, !8567}
!8564 = !DILocalVariable(name: "dev", arg: 1, scope: !8562, file: !209, line: 1163, type: !988)
!8565 = !DILocalVariable(name: "cb", arg: 2, scope: !8562, file: !209, line: 1164, type: !1055)
!8566 = !DILocalVariable(name: "user_data", arg: 3, scope: !8562, file: !209, line: 1165, type: !102)
!8567 = !DILocalVariable(name: "api", scope: !8562, file: !209, line: 1168, type: !980)
!8568 = !DILocation(line: 0, scope: !8562)
!8569 = !DILocation(line: 1169, column: 40, scope: !8562)
!8570 = !DILocation(line: 1171, column: 11, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8562, file: !209, line: 1171, column: 6)
!8572 = !DILocation(line: 1171, column: 20, scope: !8571)
!8573 = !DILocation(line: 1171, column: 29, scope: !8571)
!8574 = !DILocation(line: 1171, column: 46, scope: !8571)
!8575 = !DILocation(line: 1171, column: 6, scope: !8562)
!8576 = !DILocation(line: 1172, column: 3, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8571, file: !209, line: 1171, column: 56)
!8578 = !DILocation(line: 1173, column: 2, scope: !8577)
!8579 = !DILocation(line: 1179, column: 1, scope: !8562)
!8580 = distinct !DISubprogram(name: "uart_irq_update", scope: !8333, file: !8333, line: 360, type: !1009, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8581)
!8581 = !{!8582}
!8582 = !DILocalVariable(name: "dev", arg: 1, scope: !8580, file: !8333, line: 360, type: !988)
!8583 = !DILocation(line: 0, scope: !8580)
!8584 = !DILocation(line: 368, column: 2, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8580, file: !8333, line: 368, column: 2)
!8586 = !{i64 2155753197}
!8587 = !DILocation(line: 369, column: 9, scope: !8580)
!8588 = !DILocation(line: 369, column: 2, scope: !8580)
!8589 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8333, file: !8333, line: 337, type: !1009, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "dev", arg: 1, scope: !8589, file: !8333, line: 337, type: !988)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 345, column: 2, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !8333, line: 345, column: 2)
!8595 = !{i64 2155753129}
!8596 = !DILocation(line: 346, column: 9, scope: !8589)
!8597 = !DILocation(line: 346, column: 2, scope: !8589)
!8598 = distinct !DISubprogram(name: "read_uart", scope: !972, file: !972, line: 127, type: !8599, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8601)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{!103, !988, !267, !32}
!8601 = !{!8602, !8603, !8604, !8605}
!8602 = !DILocalVariable(name: "uart", arg: 1, scope: !8598, file: !972, line: 127, type: !988)
!8603 = !DILocalVariable(name: "buf", arg: 2, scope: !8598, file: !972, line: 127, type: !267)
!8604 = !DILocalVariable(name: "size", arg: 3, scope: !8598, file: !972, line: 128, type: !32)
!8605 = !DILocalVariable(name: "rx", scope: !8598, file: !972, line: 130, type: !103)
!8606 = !DILocation(line: 0, scope: !8598)
!8607 = !DILocation(line: 132, column: 7, scope: !8598)
!8608 = !DILocation(line: 133, column: 9, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8598, file: !972, line: 133, column: 6)
!8610 = !DILocation(line: 133, column: 6, scope: !8598)
!8611 = !DILocation(line: 135, column: 3, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8609, file: !972, line: 133, column: 14)
!8613 = !DILocation(line: 137, column: 3, scope: !8612)
!8614 = !DILocation(line: 141, column: 1, scope: !8598)
!8615 = distinct !DISubprogram(name: "k_queue_get", scope: !3775, file: !3775, line: 649, type: !8616, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8623)
!8616 = !DISubroutineType(types: !8617)
!8617 = !{!102, !8618, !8619}
!8618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8620)
!8620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8621)
!8621 = !{!8622}
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8620, file: !201, line: 66, baseType: !200, size: 64)
!8623 = !{!8624, !8625}
!8624 = !DILocalVariable(name: "queue", arg: 1, scope: !8615, file: !3775, line: 649, type: !8618)
!8625 = !DILocalVariable(name: "timeout", arg: 2, scope: !8615, file: !3775, line: 649, type: !8619)
!8626 = !DILocation(line: 0, scope: !8615)
!8627 = !DILocation(line: 658, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8615, file: !3775, line: 658, column: 2)
!8629 = !{i64 2155448271}
!8630 = !DILocation(line: 659, column: 9, scope: !8615)
!8631 = !DILocation(line: 659, column: 2, scope: !8615)
!8632 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1137, file: !1137, line: 131, type: !8633, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8637)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!157, !8635, !103}
!8635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8636, size: 32)
!8636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!8637 = !{!8638, !8639, !8640}
!8638 = !DILocalVariable(name: "target", arg: 1, scope: !8632, file: !1137, line: 131, type: !8635)
!8639 = !DILocalVariable(name: "bit", arg: 2, scope: !8632, file: !1137, line: 131, type: !103)
!8640 = !DILocalVariable(name: "val", scope: !8632, file: !1137, line: 133, type: !8641)
!8641 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1137, line: 23, baseType: !1136)
!8642 = !DILocation(line: 0, scope: !8632)
!8643 = !DILocation(line: 133, column: 21, scope: !8632)
!8644 = !DILocation(line: 135, column: 27, scope: !8632)
!8645 = !DILocation(line: 135, column: 50, scope: !8632)
!8646 = !DILocation(line: 135, column: 2, scope: !8632)
!8647 = distinct !DISubprogram(name: "handle_ansi", scope: !972, file: !972, line: 232, type: !8648, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{null, !154, !344}
!8650 = !{!8651, !8652, !8653}
!8651 = !DILocalVariable(name: "byte", arg: 1, scope: !8647, file: !972, line: 232, type: !154)
!8652 = !DILocalVariable(name: "line", arg: 2, scope: !8647, file: !972, line: 232, type: !344)
!8653 = !DILabel(scope: !8647, name: "ansi_cmd", file: !972, line: 268)
!8654 = !DILocation(line: 0, scope: !8647)
!8655 = !DILocation(line: 234, column: 6, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8647, file: !972, line: 234, column: 6)
!8657 = !DILocation(line: 234, column: 6, scope: !8647)
!8658 = !DILocation(line: 235, column: 16, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !972, line: 235, column: 7)
!8660 = distinct !DILexicalBlock(scope: !8656, file: !972, line: 234, column: 61)
!8661 = !DILocation(line: 235, column: 8, scope: !8659)
!8662 = !DILocation(line: 235, column: 7, scope: !8660)
!8663 = !DILocation(line: 236, column: 13, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8659, file: !972, line: 235, column: 23)
!8665 = !DILocation(line: 237, column: 4, scope: !8664)
!8666 = !DILocation(line: 240, column: 3, scope: !8660)
!8667 = !DILocation(line: 241, column: 19, scope: !8660)
!8668 = !DILocation(line: 241, column: 12, scope: !8660)
!8669 = !DILocation(line: 242, column: 14, scope: !8660)
!8670 = !DILocation(line: 243, column: 3, scope: !8660)
!8671 = !DILocation(line: 246, column: 6, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8647, file: !972, line: 246, column: 6)
!8673 = !DILocation(line: 246, column: 6, scope: !8647)
!8674 = !DILocation(line: 247, column: 15, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !972, line: 247, column: 7)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !972, line: 246, column: 49)
!8677 = !DILocation(line: 247, column: 7, scope: !8675)
!8678 = !DILocation(line: 247, column: 7, scope: !8676)
!8679 = !DILocation(line: 248, column: 8, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !972, line: 248, column: 8)
!8681 = distinct !DILexicalBlock(scope: !8675, file: !972, line: 247, column: 22)
!8682 = !DILocation(line: 248, column: 8, scope: !8681)
!8683 = !DILocation(line: 249, column: 16, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8680, file: !972, line: 248, column: 53)
!8685 = !DILocation(line: 250, column: 24, scope: !8684)
!8686 = !DILocation(line: 250, column: 16, scope: !8684)
!8687 = !DILocation(line: 251, column: 4, scope: !8684)
!8688 = !DILocation(line: 252, column: 14, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !972, line: 251, column: 11)
!8690 = !DILocation(line: 253, column: 22, scope: !8689)
!8691 = !DILocation(line: 253, column: 14, scope: !8689)
!8692 = !DILocation(line: 259, column: 12, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8676, file: !972, line: 259, column: 7)
!8694 = !DILocation(line: 259, column: 19, scope: !8693)
!8695 = !DILocation(line: 260, column: 8, scope: !8693)
!8696 = !DILocation(line: 259, column: 7, scope: !8676)
!8697 = !DILocation(line: 264, column: 3, scope: !8676)
!8698 = !DILocation(line: 265, column: 3, scope: !8676)
!8699 = !DILocation(line: 266, column: 2, scope: !8676)
!8700 = !DILocation(line: 268, column: 1, scope: !8647)
!8701 = !DILocation(line: 269, column: 2, scope: !8647)
!8702 = !DILocation(line: 271, column: 7, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !972, line: 271, column: 7)
!8704 = distinct !DILexicalBlock(scope: !8647, file: !972, line: 269, column: 16)
!8705 = !DILocation(line: 271, column: 18, scope: !8703)
!8706 = !DILocation(line: 271, column: 16, scope: !8703)
!8707 = !DILocation(line: 271, column: 7, scope: !8704)
!8708 = !DILocation(line: 275, column: 7, scope: !8704)
!8709 = !DILocation(line: 276, column: 7, scope: !8704)
!8710 = !DILocation(line: 277, column: 3, scope: !8704)
!8711 = !DILocation(line: 278, column: 3, scope: !8704)
!8712 = !DILocation(line: 280, column: 7, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8704, file: !972, line: 280, column: 7)
!8714 = !DILocation(line: 280, column: 18, scope: !8713)
!8715 = !DILocation(line: 280, column: 16, scope: !8713)
!8716 = !DILocation(line: 280, column: 7, scope: !8704)
!8717 = !DILocation(line: 284, column: 7, scope: !8704)
!8718 = !DILocation(line: 285, column: 7, scope: !8704)
!8719 = !DILocation(line: 286, column: 3, scope: !8704)
!8720 = !DILocation(line: 287, column: 3, scope: !8704)
!8721 = !DILocation(line: 289, column: 8, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8704, file: !972, line: 289, column: 7)
!8723 = !DILocation(line: 289, column: 7, scope: !8704)
!8724 = !DILocation(line: 293, column: 19, scope: !8704)
!8725 = !DILocation(line: 293, column: 3, scope: !8704)
!8726 = !DILocation(line: 294, column: 10, scope: !8704)
!8727 = !DILocation(line: 294, column: 7, scope: !8704)
!8728 = !DILocation(line: 295, column: 7, scope: !8704)
!8729 = !DILocation(line: 296, column: 3, scope: !8704)
!8730 = !DILocation(line: 298, column: 8, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8704, file: !972, line: 298, column: 7)
!8732 = !DILocation(line: 298, column: 7, scope: !8704)
!8733 = !DILocation(line: 302, column: 18, scope: !8704)
!8734 = !DILocation(line: 302, column: 3, scope: !8704)
!8735 = !DILocation(line: 303, column: 10, scope: !8704)
!8736 = !DILocation(line: 303, column: 7, scope: !8704)
!8737 = !DILocation(line: 304, column: 7, scope: !8704)
!8738 = !DILocation(line: 305, column: 3, scope: !8704)
!8739 = !DILocation(line: 307, column: 8, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8704, file: !972, line: 307, column: 7)
!8741 = !DILocation(line: 307, column: 7, scope: !8704)
!8742 = !DILocation(line: 311, column: 3, scope: !8704)
!8743 = !DILocation(line: 312, column: 18, scope: !8704)
!8744 = !DILocation(line: 312, column: 13, scope: !8704)
!8745 = !DILocation(line: 312, column: 24, scope: !8704)
!8746 = !DILocation(line: 312, column: 3, scope: !8704)
!8747 = !DILocation(line: 313, column: 3, scope: !8704)
!8748 = !DILocation(line: 318, column: 2, scope: !8647)
!8749 = !DILocation(line: 319, column: 1, scope: !8647)
!8750 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1137, file: !1137, line: 152, type: !8751, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8754)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!157, !8753, !103}
!8753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!8754 = !{!8755, !8756, !8757, !8758}
!8755 = !DILocalVariable(name: "target", arg: 1, scope: !8750, file: !1137, line: 152, type: !8753)
!8756 = !DILocalVariable(name: "bit", arg: 2, scope: !8750, file: !1137, line: 152, type: !103)
!8757 = !DILocalVariable(name: "mask", scope: !8750, file: !1137, line: 154, type: !8641)
!8758 = !DILocalVariable(name: "old", scope: !8750, file: !1137, line: 155, type: !8641)
!8759 = !DILocation(line: 0, scope: !8750)
!8760 = !DILocation(line: 154, column: 22, scope: !8750)
!8761 = !DILocation(line: 157, column: 45, scope: !8750)
!8762 = !DILocation(line: 157, column: 8, scope: !8750)
!8763 = !DILocation(line: 159, column: 14, scope: !8750)
!8764 = !DILocation(line: 159, column: 22, scope: !8750)
!8765 = !DILocation(line: 159, column: 2, scope: !8750)
!8766 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1137, file: !1137, line: 217, type: !8767, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8769)
!8767 = !DISubroutineType(types: !8768)
!8768 = !{null, !8753, !103}
!8769 = !{!8770, !8771, !8772}
!8770 = !DILocalVariable(name: "target", arg: 1, scope: !8766, file: !1137, line: 217, type: !8753)
!8771 = !DILocalVariable(name: "bit", arg: 2, scope: !8766, file: !1137, line: 217, type: !103)
!8772 = !DILocalVariable(name: "mask", scope: !8766, file: !1137, line: 219, type: !8641)
!8773 = !DILocation(line: 0, scope: !8766)
!8774 = !DILocation(line: 219, column: 22, scope: !8766)
!8775 = !DILocation(line: 221, column: 8, scope: !8766)
!8776 = !DILocation(line: 222, column: 1, scope: !8766)
!8777 = distinct !DISubprogram(name: "isprint", scope: !5092, file: !5092, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8778)
!8778 = !{!8779}
!8779 = !DILocalVariable(name: "c", arg: 1, scope: !8777, file: !5092, line: 37, type: !103)
!8780 = !DILocation(line: 0, scope: !8777)
!8781 = !DILocation(line: 39, column: 38, scope: !8777)
!8782 = !DILocation(line: 39, column: 2, scope: !8777)
!8783 = distinct !DISubprogram(name: "del_char", scope: !972, file: !972, line: 191, type: !8784, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8786)
!8784 = !DISubroutineType(types: !8785)
!8785 = !{null, !344, !154}
!8786 = !{!8787, !8788}
!8787 = !DILocalVariable(name: "pos", arg: 1, scope: !8783, file: !972, line: 191, type: !344)
!8788 = !DILocalVariable(name: "end", arg: 2, scope: !8783, file: !972, line: 191, type: !154)
!8789 = !DILocation(line: 0, scope: !8783)
!8790 = !DILocation(line: 193, column: 2, scope: !8783)
!8791 = !DILocation(line: 195, column: 10, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8783, file: !972, line: 195, column: 6)
!8793 = !DILocation(line: 195, column: 6, scope: !8783)
!8794 = !DILocation(line: 196, column: 3, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8792, file: !972, line: 195, column: 17)
!8796 = !DILocation(line: 197, column: 3, scope: !8795)
!8797 = !DILocation(line: 198, column: 3, scope: !8795)
!8798 = !DILocation(line: 201, column: 2, scope: !8783)
!8799 = !DILocation(line: 203, column: 2, scope: !8783)
!8800 = !DILocation(line: 203, column: 12, scope: !8783)
!8801 = !DILocation(line: 204, column: 16, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8783, file: !972, line: 203, column: 20)
!8803 = !DILocation(line: 204, column: 10, scope: !8802)
!8804 = !DILocation(line: 204, column: 8, scope: !8802)
!8805 = !DILocation(line: 205, column: 3, scope: !8802)
!8806 = !DILocation(line: 203, column: 15, scope: !8783)
!8807 = distinct !{!8807, !8799, !8808}
!8808 = !DILocation(line: 206, column: 2, scope: !8783)
!8809 = !DILocation(line: 208, column: 2, scope: !8783)
!8810 = !DILocation(line: 211, column: 2, scope: !8783)
!8811 = !DILocation(line: 212, column: 1, scope: !8783)
!8812 = distinct !DISubprogram(name: "insert_char", scope: !972, file: !972, line: 163, type: !8813, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8815)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{null, !344, !146, !154}
!8815 = !{!8816, !8817, !8818, !8819}
!8816 = !DILocalVariable(name: "pos", arg: 1, scope: !8812, file: !972, line: 163, type: !344)
!8817 = !DILocalVariable(name: "c", arg: 2, scope: !8812, file: !972, line: 163, type: !146)
!8818 = !DILocalVariable(name: "end", arg: 3, scope: !8812, file: !972, line: 163, type: !154)
!8819 = !DILocalVariable(name: "tmp", scope: !8812, file: !972, line: 165, type: !146)
!8820 = !DILocation(line: 0, scope: !8812)
!8821 = !DILocation(line: 168, column: 2, scope: !8812)
!8822 = !DILocation(line: 170, column: 10, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8812, file: !972, line: 170, column: 6)
!8824 = !DILocation(line: 170, column: 6, scope: !8812)
!8825 = !DILocation(line: 171, column: 8, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !972, line: 170, column: 17)
!8827 = !DILocation(line: 172, column: 3, scope: !8826)
!8828 = !DILocation(line: 175, column: 8, scope: !8812)
!8829 = !DILocation(line: 176, column: 11, scope: !8812)
!8830 = !DILocation(line: 178, column: 2, scope: !8812)
!8831 = !DILocation(line: 180, column: 2, scope: !8812)
!8832 = !DILocation(line: 180, column: 12, scope: !8812)
!8833 = !DILocation(line: 181, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8812, file: !972, line: 180, column: 20)
!8835 = !DILocation(line: 182, column: 7, scope: !8834)
!8836 = !DILocation(line: 183, column: 12, scope: !8834)
!8837 = !DILocation(line: 180, column: 15, scope: !8812)
!8838 = distinct !{!8838, !8831, !8839}
!8839 = !DILocation(line: 185, column: 2, scope: !8812)
!8840 = !DILocation(line: 188, column: 2, scope: !8812)
!8841 = !DILocation(line: 189, column: 1, scope: !8812)
!8842 = distinct !DISubprogram(name: "cursor_save", scope: !972, file: !972, line: 153, type: !3339, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !317)
!8843 = !DILocation(line: 155, column: 2, scope: !8842)
!8844 = !DILocation(line: 156, column: 1, scope: !8842)
!8845 = distinct !DISubprogram(name: "cursor_restore", scope: !972, file: !972, line: 158, type: !3339, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !317)
!8846 = !DILocation(line: 160, column: 2, scope: !8845)
!8847 = !DILocation(line: 161, column: 1, scope: !8845)
!8848 = distinct !DISubprogram(name: "atomic_or", scope: !8849, file: !8849, line: 279, type: !8850, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8852)
!8849 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!8641, !8753, !8641}
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "target", arg: 1, scope: !8848, file: !8849, line: 279, type: !8753)
!8854 = !DILocalVariable(name: "value", arg: 2, scope: !8848, file: !8849, line: 279, type: !8641)
!8855 = !DILocation(line: 0, scope: !8848)
!8856 = !DILocation(line: 281, column: 9, scope: !8848)
!8857 = !DILocation(line: 281, column: 2, scope: !8848)
!8858 = distinct !DISubprogram(name: "atomic_and", scope: !8849, file: !8849, line: 319, type: !8850, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8859)
!8859 = !{!8860, !8861}
!8860 = !DILocalVariable(name: "target", arg: 1, scope: !8858, file: !8849, line: 319, type: !8753)
!8861 = !DILocalVariable(name: "value", arg: 2, scope: !8858, file: !8849, line: 319, type: !8641)
!8862 = !DILocation(line: 0, scope: !8858)
!8863 = !DILocation(line: 321, column: 9, scope: !8858)
!8864 = !DILocation(line: 321, column: 2, scope: !8858)
!8865 = distinct !DISubprogram(name: "isdigit", scope: !5092, file: !5092, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8866)
!8866 = !{!8867}
!8867 = !DILocalVariable(name: "a", arg: 1, scope: !8865, file: !5092, line: 43, type: !103)
!8868 = !DILocation(line: 0, scope: !8865)
!8869 = !DILocation(line: 45, column: 29, scope: !8865)
!8870 = !DILocation(line: 45, column: 45, scope: !8865)
!8871 = !DILocation(line: 45, column: 2, scope: !8865)
!8872 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1137, file: !1137, line: 176, type: !8751, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8873)
!8873 = !{!8874, !8875, !8876, !8877}
!8874 = !DILocalVariable(name: "target", arg: 1, scope: !8872, file: !1137, line: 176, type: !8753)
!8875 = !DILocalVariable(name: "bit", arg: 2, scope: !8872, file: !1137, line: 176, type: !103)
!8876 = !DILocalVariable(name: "mask", scope: !8872, file: !1137, line: 178, type: !8641)
!8877 = !DILocalVariable(name: "old", scope: !8872, file: !1137, line: 179, type: !8641)
!8878 = !DILocation(line: 0, scope: !8872)
!8879 = !DILocation(line: 181, column: 8, scope: !8872)
!8880 = !DILocation(line: 183, column: 14, scope: !8872)
!8881 = !DILocation(line: 183, column: 22, scope: !8872)
!8882 = !DILocation(line: 183, column: 2, scope: !8872)
!8883 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1137, file: !1137, line: 198, type: !8767, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8884)
!8884 = !{!8885, !8886, !8887}
!8885 = !DILocalVariable(name: "target", arg: 1, scope: !8883, file: !1137, line: 198, type: !8753)
!8886 = !DILocalVariable(name: "bit", arg: 2, scope: !8883, file: !1137, line: 198, type: !103)
!8887 = !DILocalVariable(name: "mask", scope: !8883, file: !1137, line: 200, type: !8641)
!8888 = !DILocation(line: 0, scope: !8883)
!8889 = !DILocation(line: 200, column: 22, scope: !8883)
!8890 = !DILocation(line: 202, column: 45, scope: !8883)
!8891 = !DILocation(line: 202, column: 8, scope: !8883)
!8892 = !DILocation(line: 203, column: 1, scope: !8883)
!8893 = distinct !DISubprogram(name: "cursor_backward", scope: !972, file: !972, line: 148, type: !5907, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8894)
!8894 = !{!8895}
!8895 = !DILocalVariable(name: "count", arg: 1, scope: !8893, file: !972, line: 148, type: !32)
!8896 = !DILocation(line: 0, scope: !8893)
!8897 = !DILocation(line: 150, column: 2, scope: !8893)
!8898 = !DILocation(line: 151, column: 1, scope: !8893)
!8899 = distinct !DISubprogram(name: "cursor_forward", scope: !972, file: !972, line: 143, type: !5907, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8900)
!8900 = !{!8901}
!8901 = !DILocalVariable(name: "count", arg: 1, scope: !8899, file: !972, line: 143, type: !32)
!8902 = !DILocation(line: 0, scope: !8899)
!8903 = !DILocation(line: 145, column: 2, scope: !8899)
!8904 = !DILocation(line: 146, column: 1, scope: !8899)
!8905 = distinct !DISubprogram(name: "atomic_get", scope: !8849, file: !8849, line: 159, type: !8906, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!8641, !8635}
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "target", arg: 1, scope: !8905, file: !8849, line: 159, type: !8635)
!8910 = !DILocation(line: 0, scope: !8905)
!8911 = !DILocation(line: 161, column: 9, scope: !8905)
!8912 = !DILocation(line: 161, column: 2, scope: !8905)
!8913 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !1009, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8914)
!8914 = !{!8915, !8916}
!8915 = !DILocalVariable(name: "dev", arg: 1, scope: !8913, file: !209, line: 1093, type: !988)
!8916 = !DILocalVariable(name: "api", scope: !8913, file: !209, line: 1096, type: !980)
!8917 = !DILocation(line: 0, scope: !8913)
!8918 = !DILocation(line: 1097, column: 40, scope: !8913)
!8919 = !DILocation(line: 1099, column: 11, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8913, file: !209, line: 1099, column: 6)
!8921 = !DILocation(line: 1099, column: 26, scope: !8920)
!8922 = !DILocation(line: 1099, column: 6, scope: !8913)
!8923 = !DILocation(line: 1102, column: 9, scope: !8913)
!8924 = !DILocation(line: 1102, column: 2, scope: !8913)
!8925 = !DILocation(line: 1107, column: 1, scope: !8913)
!8926 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !1009, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8927)
!8927 = !{!8928, !8929}
!8928 = !DILocalVariable(name: "dev", arg: 1, scope: !8926, file: !209, line: 1136, type: !988)
!8929 = !DILocalVariable(name: "api", scope: !8926, file: !209, line: 1139, type: !980)
!8930 = !DILocation(line: 0, scope: !8926)
!8931 = !DILocation(line: 1140, column: 40, scope: !8926)
!8932 = !DILocation(line: 1142, column: 11, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8926, file: !209, line: 1142, column: 6)
!8934 = !DILocation(line: 1142, column: 22, scope: !8933)
!8935 = !DILocation(line: 1142, column: 6, scope: !8926)
!8936 = !DILocation(line: 1145, column: 9, scope: !8926)
!8937 = !DILocation(line: 1145, column: 2, scope: !8926)
!8938 = !DILocation(line: 1150, column: 1, scope: !8926)
!8939 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !1039, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8940)
!8940 = !{!8941, !8942}
!8941 = !DILocalVariable(name: "dev", arg: 1, scope: !8939, file: !209, line: 878, type: !988)
!8942 = !DILocalVariable(name: "api", scope: !8939, file: !209, line: 881, type: !980)
!8943 = !DILocation(line: 0, scope: !8939)
!8944 = !DILocation(line: 882, column: 40, scope: !8939)
!8945 = !DILocation(line: 884, column: 11, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8939, file: !209, line: 884, column: 6)
!8947 = !DILocation(line: 884, column: 26, scope: !8946)
!8948 = !DILocation(line: 884, column: 6, scope: !8939)
!8949 = !DILocation(line: 885, column: 3, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8946, file: !209, line: 884, column: 35)
!8951 = !DILocation(line: 886, column: 2, scope: !8950)
!8952 = !DILocation(line: 890, column: 1, scope: !8939)
!8953 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !1039, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !968, retainedNodes: !8954)
!8954 = !{!8955, !8956}
!8955 = !DILocalVariable(name: "dev", arg: 1, scope: !8953, file: !209, line: 955, type: !988)
!8956 = !DILocalVariable(name: "api", scope: !8953, file: !209, line: 958, type: !980)
!8957 = !DILocation(line: 0, scope: !8953)
!8958 = !DILocation(line: 959, column: 40, scope: !8953)
!8959 = !DILocation(line: 961, column: 11, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8953, file: !209, line: 961, column: 6)
!8961 = !DILocation(line: 961, column: 26, scope: !8960)
!8962 = !DILocation(line: 961, column: 6, scope: !8953)
!8963 = !DILocation(line: 962, column: 3, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8960, file: !209, line: 961, column: 35)
!8965 = !DILocation(line: 963, column: 2, scope: !8964)
!8966 = !DILocation(line: 967, column: 1, scope: !8953)
!8967 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1317, file: !1317, line: 523, type: !1175, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971, !8972, !8973}
!8969 = !DILocalVariable(name: "dev", arg: 1, scope: !8967, file: !1317, line: 523, type: !1177)
!8970 = !DILocalVariable(name: "pin", arg: 2, scope: !8967, file: !1317, line: 524, type: !1192)
!8971 = !DILocalVariable(name: "flags", arg: 3, scope: !8967, file: !1317, line: 524, type: !1193)
!8972 = !DILocalVariable(name: "err", scope: !8967, file: !1317, line: 526, type: !103)
!8973 = !DILocalVariable(name: "pincfg", scope: !8967, file: !1317, line: 527, type: !103)
!8974 = !DILocation(line: 0, scope: !8967)
!8975 = !DILocation(line: 527, column: 2, scope: !8967)
!8976 = !DILocation(line: 532, column: 8, scope: !8967)
!8977 = !DILocation(line: 533, column: 10, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8967, file: !1317, line: 533, column: 6)
!8979 = !DILocation(line: 533, column: 6, scope: !8967)
!8980 = !DILocation(line: 543, column: 13, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8967, file: !1317, line: 543, column: 6)
!8982 = !DILocation(line: 543, column: 28, scope: !8981)
!8983 = !DILocation(line: 543, column: 6, scope: !8967)
!8984 = !DILocation(line: 544, column: 14, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !1317, line: 544, column: 7)
!8986 = distinct !DILexicalBlock(scope: !8981, file: !1317, line: 543, column: 34)
!8987 = !DILocation(line: 544, column: 39, scope: !8985)
!8988 = !DILocation(line: 544, column: 7, scope: !8986)
!8989 = !DILocation(line: 545, column: 38, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !1317, line: 544, column: 45)
!8991 = !DILocation(line: 545, column: 4, scope: !8990)
!8992 = !DILocation(line: 546, column: 3, scope: !8990)
!8993 = !DILocation(line: 546, column: 21, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8985, file: !1317, line: 546, column: 14)
!8995 = !DILocation(line: 546, column: 45, scope: !8994)
!8996 = !DILocation(line: 546, column: 14, scope: !8985)
!8997 = !DILocation(line: 547, column: 40, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !1317, line: 546, column: 51)
!8999 = !DILocation(line: 547, column: 4, scope: !8998)
!9000 = !DILocation(line: 548, column: 3, scope: !8998)
!9001 = !DILocation(line: 551, column: 32, scope: !8967)
!9002 = !DILocation(line: 551, column: 37, scope: !8967)
!9003 = !DILocation(line: 551, column: 2, scope: !8967)
!9004 = !DILocation(line: 554, column: 6, scope: !8967)
!9005 = !DILocation(line: 562, column: 1, scope: !8967)
!9006 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1317, file: !1317, line: 410, type: !9007, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9009)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{!103, !1177, !890}
!9009 = !{!9010, !9011, !9012, !9014}
!9010 = !DILocalVariable(name: "dev", arg: 1, scope: !9006, file: !1317, line: 410, type: !1177)
!9011 = !DILocalVariable(name: "value", arg: 2, scope: !9006, file: !1317, line: 410, type: !890)
!9012 = !DILocalVariable(name: "cfg", scope: !9006, file: !1317, line: 412, type: !9013)
!9013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!9014 = !DILocalVariable(name: "gpio", scope: !9006, file: !1317, line: 413, type: !1250)
!9015 = !DILocation(line: 0, scope: !9006)
!9016 = !DILocation(line: 412, column: 45, scope: !9006)
!9017 = !DILocation(line: 413, column: 44, scope: !9006)
!9018 = !DILocation(line: 415, column: 11, scope: !9006)
!9019 = !DILocation(line: 415, column: 9, scope: !9006)
!9020 = !DILocation(line: 417, column: 2, scope: !9006)
!9021 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1317, file: !1317, line: 420, type: !1202, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9022)
!9022 = !{!9023, !9024, !9025, !9026, !9027, !9028}
!9023 = !DILocalVariable(name: "dev", arg: 1, scope: !9021, file: !1317, line: 420, type: !1177)
!9024 = !DILocalVariable(name: "mask", arg: 2, scope: !9021, file: !1317, line: 421, type: !1204)
!9025 = !DILocalVariable(name: "value", arg: 3, scope: !9021, file: !1317, line: 422, type: !1199)
!9026 = !DILocalVariable(name: "cfg", scope: !9021, file: !1317, line: 424, type: !9013)
!9027 = !DILocalVariable(name: "gpio", scope: !9021, file: !1317, line: 425, type: !1250)
!9028 = !DILocalVariable(name: "port_value", scope: !9021, file: !1317, line: 426, type: !121)
!9029 = !DILocation(line: 0, scope: !9021)
!9030 = !DILocation(line: 424, column: 45, scope: !9021)
!9031 = !DILocation(line: 425, column: 44, scope: !9021)
!9032 = !DILocation(line: 430, column: 15, scope: !9021)
!9033 = !DILocation(line: 431, column: 46, scope: !9021)
!9034 = !DILocation(line: 431, column: 44, scope: !9021)
!9035 = !DILocation(line: 431, column: 61, scope: !9021)
!9036 = !DILocation(line: 431, column: 53, scope: !9021)
!9037 = !DILocation(line: 431, column: 2, scope: !9021)
!9038 = !DILocation(line: 435, column: 2, scope: !9021)
!9039 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1317, file: !1317, line: 438, type: !1207, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9040)
!9040 = !{!9041, !9042, !9043, !9044}
!9041 = !DILocalVariable(name: "dev", arg: 1, scope: !9039, file: !1317, line: 438, type: !1177)
!9042 = !DILocalVariable(name: "pins", arg: 2, scope: !9039, file: !1317, line: 439, type: !1204)
!9043 = !DILocalVariable(name: "cfg", scope: !9039, file: !1317, line: 441, type: !9013)
!9044 = !DILocalVariable(name: "gpio", scope: !9039, file: !1317, line: 442, type: !1250)
!9045 = !DILocation(line: 0, scope: !9039)
!9046 = !DILocation(line: 441, column: 45, scope: !9039)
!9047 = !DILocation(line: 442, column: 44, scope: !9039)
!9048 = !DILocation(line: 448, column: 2, scope: !9039)
!9049 = !DILocation(line: 450, column: 2, scope: !9039)
!9050 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1317, file: !1317, line: 453, type: !1207, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9051)
!9051 = !{!9052, !9053, !9054, !9055}
!9052 = !DILocalVariable(name: "dev", arg: 1, scope: !9050, file: !1317, line: 453, type: !1177)
!9053 = !DILocalVariable(name: "pins", arg: 2, scope: !9050, file: !1317, line: 454, type: !1204)
!9054 = !DILocalVariable(name: "cfg", scope: !9050, file: !1317, line: 456, type: !9013)
!9055 = !DILocalVariable(name: "gpio", scope: !9050, file: !1317, line: 457, type: !1250)
!9056 = !DILocation(line: 0, scope: !9050)
!9057 = !DILocation(line: 456, column: 45, scope: !9050)
!9058 = !DILocation(line: 457, column: 44, scope: !9050)
!9059 = !DILocation(line: 467, column: 2, scope: !9050)
!9060 = !DILocation(line: 470, column: 2, scope: !9050)
!9061 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1317, file: !1317, line: 473, type: !1207, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9062)
!9062 = !{!9063, !9064, !9065, !9066}
!9063 = !DILocalVariable(name: "dev", arg: 1, scope: !9061, file: !1317, line: 473, type: !1177)
!9064 = !DILocalVariable(name: "pins", arg: 2, scope: !9061, file: !1317, line: 474, type: !1204)
!9065 = !DILocalVariable(name: "cfg", scope: !9061, file: !1317, line: 476, type: !9013)
!9066 = !DILocalVariable(name: "gpio", scope: !9061, file: !1317, line: 477, type: !1250)
!9067 = !DILocation(line: 0, scope: !9061)
!9068 = !DILocation(line: 476, column: 45, scope: !9061)
!9069 = !DILocation(line: 477, column: 44, scope: !9061)
!9070 = !DILocation(line: 484, column: 2, scope: !9061)
!9071 = !DILocation(line: 487, column: 2, scope: !9061)
!9072 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1317, file: !1317, line: 594, type: !1213, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9073)
!9073 = !{!9074, !9075, !9076, !9077, !9078, !9079, !9081, !9082, !9083}
!9074 = !DILocalVariable(name: "dev", arg: 1, scope: !9072, file: !1317, line: 594, type: !1177)
!9075 = !DILocalVariable(name: "pin", arg: 2, scope: !9072, file: !1317, line: 595, type: !1192)
!9076 = !DILocalVariable(name: "mode", arg: 3, scope: !9072, file: !1317, line: 596, type: !1151)
!9077 = !DILocalVariable(name: "trig", arg: 4, scope: !9072, file: !1317, line: 597, type: !1157)
!9078 = !DILocalVariable(name: "cfg", scope: !9072, file: !1317, line: 599, type: !9013)
!9079 = !DILocalVariable(name: "data", scope: !9072, file: !1317, line: 600, type: !9080)
!9080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!9081 = !DILocalVariable(name: "edge", scope: !9072, file: !1317, line: 601, type: !103)
!9082 = !DILocalVariable(name: "err", scope: !9072, file: !1317, line: 602, type: !103)
!9083 = !DILabel(scope: !9072, name: "exit", file: !1317, line: 643)
!9084 = !DILocation(line: 0, scope: !9072)
!9085 = !DILocation(line: 599, column: 45, scope: !9072)
!9086 = !DILocation(line: 604, column: 6, scope: !9072)
!9087 = !DILocation(line: 605, column: 34, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !1317, line: 605, column: 7)
!9089 = distinct !DILexicalBlock(scope: !9090, file: !1317, line: 604, column: 38)
!9090 = distinct !DILexicalBlock(scope: !9072, file: !1317, line: 604, column: 6)
!9091 = !DILocation(line: 605, column: 7, scope: !9088)
!9092 = !DILocation(line: 605, column: 47, scope: !9088)
!9093 = !DILocation(line: 605, column: 39, scope: !9088)
!9094 = !DILocation(line: 605, column: 7, scope: !9089)
!9095 = !DILocation(line: 606, column: 4, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9088, file: !1317, line: 605, column: 53)
!9097 = !DILocation(line: 607, column: 4, scope: !9096)
!9098 = !DILocation(line: 608, column: 4, scope: !9096)
!9099 = !DILocation(line: 609, column: 3, scope: !9096)
!9100 = !DILocation(line: 600, column: 38, scope: !9072)
!9101 = !DILocation(line: 620, column: 30, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9072, file: !1317, line: 620, column: 6)
!9103 = !DILocation(line: 620, column: 6, scope: !9102)
!9104 = !DILocation(line: 620, column: 57, scope: !9102)
!9105 = !DILocation(line: 620, column: 6, scope: !9072)
!9106 = !DILocation(line: 625, column: 29, scope: !9072)
!9107 = !DILocation(line: 625, column: 2, scope: !9072)
!9108 = !DILocation(line: 627, column: 2, scope: !9072)
!9109 = !DILocation(line: 630, column: 3, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9072, file: !1317, line: 627, column: 16)
!9111 = !DILocation(line: 633, column: 3, scope: !9110)
!9112 = !DILocation(line: 636, column: 3, scope: !9110)
!9113 = !DILocation(line: 639, column: 2, scope: !9072)
!9114 = !DILocation(line: 641, column: 2, scope: !9072)
!9115 = !DILocation(line: 643, column: 1, scope: !9072)
!9116 = !DILocation(line: 644, column: 2, scope: !9072)
!9117 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1317, file: !1317, line: 647, type: !1217, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9118)
!9118 = !{!9119, !9120, !9121, !9122}
!9119 = !DILocalVariable(name: "dev", arg: 1, scope: !9117, file: !1317, line: 647, type: !1177)
!9120 = !DILocalVariable(name: "callback", arg: 2, scope: !9117, file: !1317, line: 648, type: !1219)
!9121 = !DILocalVariable(name: "set", arg: 3, scope: !9117, file: !1317, line: 649, type: !157)
!9122 = !DILocalVariable(name: "data", scope: !9117, file: !1317, line: 651, type: !9080)
!9123 = !DILocation(line: 0, scope: !9117)
!9124 = !DILocation(line: 651, column: 38, scope: !9117)
!9125 = !DILocation(line: 653, column: 37, scope: !9117)
!9126 = !DILocation(line: 653, column: 9, scope: !9117)
!9127 = !DILocation(line: 653, column: 2, scope: !9117)
!9128 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9129, file: !9129, line: 38, type: !9130, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9133)
!9129 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!103, !9132, !1219, !157}
!9132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!9133 = !{!9134, !9135, !9136}
!9134 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9128, file: !9129, line: 38, type: !9132)
!9135 = !DILocalVariable(name: "callback", arg: 2, scope: !9128, file: !9129, line: 39, type: !1219)
!9136 = !DILocalVariable(name: "set", arg: 3, scope: !9128, file: !9129, line: 40, type: !157)
!9137 = !DILocation(line: 0, scope: !9128)
!9138 = !DILocation(line: 45, column: 7, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9128, file: !9129, line: 45, column: 6)
!9140 = !DILocation(line: 45, column: 6, scope: !9128)
!9141 = !DILocation(line: 46, column: 56, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !9129, line: 46, column: 7)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !9129, line: 45, column: 38)
!9144 = !DILocation(line: 46, column: 8, scope: !9142)
!9145 = !DILocation(line: 46, column: 7, scope: !9143)
!9146 = !DILocation(line: 51, column: 13, scope: !9139)
!9147 = !DILocation(line: 56, column: 43, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !9129, line: 55, column: 11)
!9149 = distinct !DILexicalBlock(scope: !9128, file: !9129, line: 55, column: 6)
!9150 = !DILocation(line: 56, column: 3, scope: !9148)
!9151 = !DILocation(line: 57, column: 2, scope: !9148)
!9152 = !DILocation(line: 60, column: 1, scope: !9128)
!9153 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1224, file: !1224, line: 261, type: !9154, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{!157, !9132}
!9156 = !{!9157}
!9157 = !DILocalVariable(name: "list", arg: 1, scope: !9153, file: !1224, line: 261, type: !9132)
!9158 = !DILocation(line: 0, scope: !9153)
!9159 = !DILocation(line: 261, column: 1, scope: !9153)
!9160 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1224, file: !1224, line: 417, type: !9161, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9163)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!157, !9132, !1408}
!9163 = !{!9164, !9165, !9166, !9167}
!9164 = !DILocalVariable(name: "list", arg: 1, scope: !9160, file: !1224, line: 417, type: !9132)
!9165 = !DILocalVariable(name: "node", arg: 2, scope: !9160, file: !1224, line: 417, type: !1408)
!9166 = !DILocalVariable(name: "prev", scope: !9160, file: !1224, line: 417, type: !1408)
!9167 = !DILocalVariable(name: "test", scope: !9160, file: !1224, line: 417, type: !1408)
!9168 = !DILocation(line: 0, scope: !9160)
!9169 = !DILocation(line: 417, column: 1, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9160, file: !1224, line: 417, column: 1)
!9171 = !DILocation(line: 417, column: 1, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9170, file: !1224, line: 417, column: 1)
!9173 = !DILocation(line: 417, column: 1, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !1224, line: 417, column: 1)
!9175 = distinct !DILexicalBlock(scope: !9172, file: !1224, line: 417, column: 1)
!9176 = !DILocation(line: 417, column: 1, scope: !9175)
!9177 = distinct !{!9177, !9169, !9169}
!9178 = !DILocation(line: 417, column: 1, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9174, file: !1224, line: 417, column: 1)
!9180 = !DILocation(line: 417, column: 1, scope: !9160)
!9181 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1224, file: !1224, line: 298, type: !9182, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9184)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{null, !9132, !1408}
!9184 = !{!9185, !9186}
!9185 = !DILocalVariable(name: "list", arg: 1, scope: !9181, file: !1224, line: 298, type: !9132)
!9186 = !DILocalVariable(name: "node", arg: 2, scope: !9181, file: !1224, line: 298, type: !1408)
!9187 = !DILocation(line: 0, scope: !9181)
!9188 = !DILocation(line: 298, column: 1, scope: !9181)
!9189 = !DILocation(line: 298, column: 1, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9181, file: !1224, line: 298, column: 1)
!9191 = !DILocation(line: 298, column: 1, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9190, file: !1224, line: 298, column: 1)
!9193 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1224, file: !1224, line: 231, type: !9194, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!1408, !9132}
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "list", arg: 1, scope: !9193, file: !1224, line: 231, type: !9132)
!9198 = !DILocation(line: 0, scope: !9193)
!9199 = !DILocation(line: 233, column: 15, scope: !9193)
!9200 = !DILocation(line: 233, column: 2, scope: !9193)
!9201 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1224, file: !1224, line: 209, type: !9202, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9204)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{null, !1408, !1408}
!9204 = !{!9205, !9206}
!9205 = !DILocalVariable(name: "parent", arg: 1, scope: !9201, file: !1224, line: 209, type: !1408)
!9206 = !DILocalVariable(name: "child", arg: 2, scope: !9201, file: !1224, line: 209, type: !1408)
!9207 = !DILocation(line: 0, scope: !9201)
!9208 = !DILocation(line: 211, column: 10, scope: !9201)
!9209 = !DILocation(line: 211, column: 15, scope: !9201)
!9210 = !DILocation(line: 212, column: 1, scope: !9201)
!9211 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1224, file: !1224, line: 214, type: !9182, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9212)
!9212 = !{!9213, !9214}
!9213 = !DILocalVariable(name: "list", arg: 1, scope: !9211, file: !1224, line: 214, type: !9132)
!9214 = !DILocalVariable(name: "node", arg: 2, scope: !9211, file: !1224, line: 214, type: !1408)
!9215 = !DILocation(line: 0, scope: !9211)
!9216 = !DILocation(line: 216, column: 8, scope: !9211)
!9217 = !DILocation(line: 216, column: 13, scope: !9211)
!9218 = !DILocation(line: 217, column: 1, scope: !9211)
!9219 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1224, file: !1224, line: 243, type: !9194, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9220)
!9220 = !{!9221}
!9221 = !DILocalVariable(name: "list", arg: 1, scope: !9219, file: !1224, line: 243, type: !9132)
!9222 = !DILocation(line: 0, scope: !9219)
!9223 = !DILocation(line: 245, column: 15, scope: !9219)
!9224 = !DILocation(line: 245, column: 2, scope: !9219)
!9225 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1224, file: !1224, line: 219, type: !9182, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9226)
!9226 = !{!9227, !9228}
!9227 = !DILocalVariable(name: "list", arg: 1, scope: !9225, file: !1224, line: 219, type: !9132)
!9228 = !DILocalVariable(name: "node", arg: 2, scope: !9225, file: !1224, line: 219, type: !1408)
!9229 = !DILocation(line: 0, scope: !9225)
!9230 = !DILocation(line: 221, column: 8, scope: !9225)
!9231 = !DILocation(line: 221, column: 13, scope: !9225)
!9232 = !DILocation(line: 222, column: 1, scope: !9225)
!9233 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1224, file: !1224, line: 401, type: !9234, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9236)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{null, !9132, !1408, !1408}
!9236 = !{!9237, !9238, !9239}
!9237 = !DILocalVariable(name: "list", arg: 1, scope: !9233, file: !1224, line: 401, type: !9132)
!9238 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9233, file: !1224, line: 401, type: !1408)
!9239 = !DILocalVariable(name: "node", arg: 3, scope: !9233, file: !1224, line: 401, type: !1408)
!9240 = !DILocation(line: 0, scope: !9233)
!9241 = !DILocation(line: 401, column: 1, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9233, file: !1224, line: 401, column: 1)
!9243 = !DILocation(line: 0, scope: !9242)
!9244 = !DILocation(line: 401, column: 1, scope: !9233)
!9245 = !DILocation(line: 401, column: 1, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !1224, line: 401, column: 1)
!9247 = !DILocation(line: 401, column: 1, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9246, file: !1224, line: 401, column: 1)
!9249 = !DILocation(line: 401, column: 1, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9248, file: !1224, line: 401, column: 1)
!9251 = !DILocation(line: 401, column: 1, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9242, file: !1224, line: 401, column: 1)
!9253 = !DILocation(line: 401, column: 1, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9252, file: !1224, line: 401, column: 1)
!9255 = !DILocation(line: 401, column: 1, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9254, file: !1224, line: 401, column: 1)
!9257 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1224, file: !1224, line: 285, type: !9258, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!1408, !1408}
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "node", arg: 1, scope: !9257, file: !1224, line: 285, type: !1408)
!9262 = !DILocation(line: 0, scope: !9257)
!9263 = !DILocation(line: 285, column: 1, scope: !9257)
!9264 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1224, file: !1224, line: 274, type: !9258, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9265)
!9265 = !{!9266}
!9266 = !DILocalVariable(name: "node", arg: 1, scope: !9264, file: !1224, line: 274, type: !1408)
!9267 = !DILocation(line: 0, scope: !9264)
!9268 = !DILocation(line: 274, column: 1, scope: !9264)
!9269 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1224, file: !1224, line: 204, type: !9258, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9270)
!9270 = !{!9271}
!9271 = !DILocalVariable(name: "node", arg: 1, scope: !9269, file: !1224, line: 204, type: !1408)
!9272 = !DILocation(line: 0, scope: !9269)
!9273 = !DILocation(line: 206, column: 15, scope: !9269)
!9274 = !DILocation(line: 206, column: 2, scope: !9269)
!9275 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1317, file: !1317, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9276)
!9276 = !{!9277, !9278, !9279}
!9277 = !DILocalVariable(name: "pin", arg: 1, scope: !9275, file: !1317, line: 342, type: !103)
!9278 = !DILocalVariable(name: "line", scope: !9275, file: !1317, line: 344, type: !121)
!9279 = !DILocalVariable(name: "port", scope: !9275, file: !1317, line: 345, type: !103)
!9280 = !DILocation(line: 0, scope: !9275)
!9281 = !DILocation(line: 344, column: 18, scope: !9275)
!9282 = !{i32 983040, i32 0}
!9283 = !DILocation(line: 356, column: 9, scope: !9275)
!9284 = !DILocation(line: 370, column: 2, scope: !9275)
!9285 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1317, file: !1317, line: 37, type: !739, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9286)
!9286 = !{!9287, !9288, !9289}
!9287 = !DILocalVariable(name: "line", arg: 1, scope: !9285, file: !1317, line: 37, type: !103)
!9288 = !DILocalVariable(name: "arg", arg: 2, scope: !9285, file: !1317, line: 37, type: !102)
!9289 = !DILocalVariable(name: "data", scope: !9285, file: !1317, line: 39, type: !9080)
!9290 = !DILocation(line: 0, scope: !9285)
!9291 = !DILocation(line: 41, column: 29, scope: !9285)
!9292 = !DILocation(line: 41, column: 39, scope: !9285)
!9293 = !DILocation(line: 41, column: 44, scope: !9285)
!9294 = !DILocation(line: 41, column: 2, scope: !9285)
!9295 = !DILocation(line: 42, column: 1, scope: !9285)
!9296 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1317, file: !1317, line: 376, type: !9297, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!103, !103, !103}
!9299 = !{!9300, !9301, !9302, !9304, !9305}
!9300 = !DILocalVariable(name: "port", arg: 1, scope: !9296, file: !1317, line: 376, type: !103)
!9301 = !DILocalVariable(name: "pin", arg: 2, scope: !9296, file: !1317, line: 376, type: !103)
!9302 = !DILocalVariable(name: "clk", scope: !9296, file: !1317, line: 386, type: !9303)
!9303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!9304 = !DILocalVariable(name: "pclken", scope: !9296, file: !1317, line: 387, type: !1463)
!9305 = !DILocalVariable(name: "ret", scope: !9296, file: !1317, line: 396, type: !103)
!9306 = !DILocation(line: 0, scope: !9296)
!9307 = !DILocation(line: 387, column: 2, scope: !9296)
!9308 = !DILocation(line: 387, column: 22, scope: !9296)
!9309 = !DILocation(line: 399, column: 8, scope: !9296)
!9310 = !DILocation(line: 400, column: 10, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9296, file: !1317, line: 400, column: 6)
!9312 = !DILocation(line: 400, column: 6, scope: !9296)
!9313 = !DILocation(line: 405, column: 2, scope: !9296)
!9314 = !DILocation(line: 407, column: 2, scope: !9296)
!9315 = !DILocation(line: 408, column: 1, scope: !9296)
!9316 = distinct !DISubprogram(name: "clock_control_on", scope: !840, file: !840, line: 123, type: !1282, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9317)
!9317 = !{!9318, !9319, !9320}
!9318 = !DILocalVariable(name: "dev", arg: 1, scope: !9316, file: !840, line: 123, type: !1177)
!9319 = !DILocalVariable(name: "sys", arg: 2, scope: !9316, file: !840, line: 124, type: !934)
!9320 = !DILocalVariable(name: "api", scope: !9316, file: !840, line: 126, type: !1275)
!9321 = !DILocation(line: 0, scope: !9316)
!9322 = !DILocation(line: 127, column: 49, scope: !9316)
!9323 = !DILocation(line: 129, column: 14, scope: !9316)
!9324 = !DILocation(line: 129, column: 9, scope: !9316)
!9325 = !DILocation(line: 129, column: 2, scope: !9316)
!9326 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1317, file: !1317, line: 311, type: !7904, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9327)
!9327 = !{!9328, !9329, !9330}
!9328 = !DILocalVariable(name: "port", arg: 1, scope: !9326, file: !1317, line: 311, type: !103)
!9329 = !DILocalVariable(name: "pin", arg: 2, scope: !9326, file: !1317, line: 311, type: !103)
!9330 = !DILocalVariable(name: "line", scope: !9326, file: !1317, line: 313, type: !121)
!9331 = !DILocation(line: 0, scope: !9326)
!9332 = !DILocation(line: 313, column: 18, scope: !9326)
!9333 = !DILocation(line: 337, column: 2, scope: !9326)
!9334 = !DILocation(line: 340, column: 1, scope: !9326)
!9335 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1317, file: !1317, line: 295, type: !9336, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!121, !103}
!9338 = !{!9339}
!9339 = !DILocalVariable(name: "pin", arg: 1, scope: !9335, file: !1317, line: 295, type: !103)
!9340 = !DILocation(line: 0, scope: !9335)
!9341 = !DILocation(line: 307, column: 46, scope: !9335)
!9342 = !DILocation(line: 307, column: 27, scope: !9335)
!9343 = !DILocation(line: 307, column: 32, scope: !9335)
!9344 = !DILocation(line: 307, column: 14, scope: !9335)
!9345 = !DILocation(line: 307, column: 39, scope: !9335)
!9346 = !DILocation(line: 307, column: 2, scope: !9335)
!9347 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5917, file: !5917, line: 671, type: !9348, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9350)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{null, !121, !121}
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "Port", arg: 1, scope: !9347, file: !5917, line: 671, type: !121)
!9352 = !DILocalVariable(name: "Line", arg: 2, scope: !9347, file: !5917, line: 671, type: !121)
!9353 = !DILocation(line: 0, scope: !9347)
!9354 = !DILocation(line: 673, column: 3, scope: !9347)
!9355 = !DILocalVariable(name: "value", arg: 1, scope: !9356, file: !6111, line: 373, type: !121)
!9356 = distinct !DISubprogram(name: "__RBIT", scope: !6111, file: !6111, line: 373, type: !7118, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9357)
!9357 = !{!9355, !9358}
!9358 = !DILocalVariable(name: "result", scope: !9356, file: !6111, line: 375, type: !121)
!9359 = !DILocation(line: 0, scope: !9356, inlinedAt: !9360)
!9360 = distinct !DILocation(line: 673, column: 3, scope: !9347)
!9361 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9360)
!9362 = !{i64 4115260}
!9363 = !DILocalVariable(name: "value", arg: 1, scope: !9364, file: !6111, line: 403, type: !121)
!9364 = distinct !DISubprogram(name: "__CLZ", scope: !6111, file: !6111, line: 403, type: !9365, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9367)
!9365 = !DISubroutineType(types: !9366)
!9366 = !{!154, !121}
!9367 = !{!9363}
!9368 = !DILocation(line: 0, scope: !9364, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 673, column: 3, scope: !9347)
!9370 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9369)
!9371 = !DILocation(line: 674, column: 1, scope: !9347)
!9372 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9129, file: !9129, line: 69, type: !9373, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9375)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{null, !9132, !1177, !121}
!9375 = !{!9376, !9377, !9378, !9379, !9380}
!9376 = !DILocalVariable(name: "list", arg: 1, scope: !9372, file: !9129, line: 69, type: !9132)
!9377 = !DILocalVariable(name: "port", arg: 2, scope: !9372, file: !9129, line: 70, type: !1177)
!9378 = !DILocalVariable(name: "pins", arg: 3, scope: !9372, file: !9129, line: 71, type: !121)
!9379 = !DILocalVariable(name: "cb", scope: !9372, file: !9129, line: 73, type: !1219)
!9380 = !DILocalVariable(name: "tmp", scope: !9372, file: !9129, line: 73, type: !1219)
!9381 = !DILocation(line: 0, scope: !9372)
!9382 = !DILocation(line: 75, column: 2, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9372, file: !9129, line: 75, column: 2)
!9384 = !DILocation(line: 0, scope: !9383)
!9385 = !DILocation(line: 76, column: 11, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9387, file: !9129, line: 76, column: 7)
!9387 = distinct !DILexicalBlock(scope: !9388, file: !9129, line: 75, column: 57)
!9388 = distinct !DILexicalBlock(scope: !9383, file: !9129, line: 75, column: 2)
!9389 = !DILocation(line: 76, column: 20, scope: !9386)
!9390 = !DILocation(line: 76, column: 7, scope: !9387)
!9391 = !DILocation(line: 78, column: 8, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9386, file: !9129, line: 76, column: 28)
!9393 = !DILocation(line: 78, column: 4, scope: !9392)
!9394 = !DILocation(line: 79, column: 3, scope: !9392)
!9395 = !DILocation(line: 75, column: 2, scope: !9388)
!9396 = !DILocation(line: 81, column: 1, scope: !9372)
!9397 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5917, file: !5917, line: 710, type: !7118, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9398)
!9398 = !{!9399}
!9399 = !DILocalVariable(name: "Line", arg: 1, scope: !9397, file: !5917, line: 710, type: !121)
!9400 = !DILocation(line: 0, scope: !9397)
!9401 = !DILocation(line: 712, column: 21, scope: !9397)
!9402 = !DILocation(line: 0, scope: !9356, inlinedAt: !9403)
!9403 = distinct !DILocation(line: 712, column: 76, scope: !9397)
!9404 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9403)
!9405 = !DILocation(line: 0, scope: !9364, inlinedAt: !9406)
!9406 = distinct !DILocation(line: 712, column: 76, scope: !9397)
!9407 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9406)
!9408 = !DILocation(line: 712, column: 73, scope: !9397)
!9409 = !DILocation(line: 712, column: 3, scope: !9397)
!9410 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9411, file: !9411, line: 910, type: !9412, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9414)
!9411 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9412 = !DISubroutineType(types: !9413)
!9413 = !{null, !1250, !121}
!9414 = !{!9415, !9416}
!9415 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9410, file: !9411, line: 910, type: !1250)
!9416 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9410, file: !9411, line: 910, type: !121)
!9417 = !DILocation(line: 0, scope: !9410)
!9418 = !DILocation(line: 912, column: 3, scope: !9410)
!9419 = !DILocation(line: 913, column: 1, scope: !9410)
!9420 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9411, file: !9411, line: 823, type: !9421, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!121, !1250}
!9423 = !{!9424}
!9424 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9420, file: !9411, line: 823, type: !1250)
!9425 = !DILocation(line: 0, scope: !9420)
!9426 = !DILocation(line: 825, column: 21, scope: !9420)
!9427 = !DILocation(line: 825, column: 3, scope: !9420)
!9428 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9411, file: !9411, line: 812, type: !9412, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9429)
!9429 = !{!9430, !9431}
!9430 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9428, file: !9411, line: 812, type: !1250)
!9431 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9428, file: !9411, line: 812, type: !121)
!9432 = !DILocation(line: 0, scope: !9428)
!9433 = !DILocation(line: 814, column: 3, scope: !9428)
!9434 = !DILocation(line: 815, column: 1, scope: !9428)
!9435 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9411, file: !9411, line: 771, type: !9421, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9436)
!9436 = !{!9437}
!9437 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9435, file: !9411, line: 771, type: !1250)
!9438 = !DILocation(line: 0, scope: !9435)
!9439 = !DILocation(line: 773, column: 21, scope: !9435)
!9440 = !DILocation(line: 773, column: 3, scope: !9435)
!9441 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1317, file: !1317, line: 47, type: !9442, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9444)
!9442 = !DISubroutineType(types: !9443)
!9443 = !{!103, !1193, !2746}
!9444 = !{!9445, !9446}
!9445 = !DILocalVariable(name: "flags", arg: 1, scope: !9441, file: !1317, line: 47, type: !1193)
!9446 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9441, file: !1317, line: 47, type: !2746)
!9447 = !DILocation(line: 0, scope: !9441)
!9448 = !DILocation(line: 50, column: 13, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9441, file: !1317, line: 50, column: 6)
!9450 = !DILocation(line: 50, column: 28, scope: !9449)
!9451 = !DILocation(line: 50, column: 6, scope: !9441)
!9452 = !DILocation(line: 53, column: 11, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9449, file: !1317, line: 50, column: 34)
!9454 = !DILocation(line: 55, column: 14, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9453, file: !1317, line: 55, column: 7)
!9456 = !DILocation(line: 55, column: 35, scope: !9455)
!9457 = !DILocation(line: 55, column: 7, scope: !9453)
!9458 = !DILocation(line: 56, column: 14, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !1317, line: 56, column: 8)
!9460 = distinct !DILexicalBlock(scope: !9455, file: !1317, line: 55, column: 41)
!9461 = !DILocation(line: 56, column: 8, scope: !9460)
!9462 = !DILocation(line: 0, scope: !9455)
!9463 = !DILocation(line: 66, column: 14, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9453, file: !1317, line: 66, column: 7)
!9465 = !DILocation(line: 66, column: 30, scope: !9464)
!9466 = !DILocation(line: 66, column: 7, scope: !9453)
!9467 = !DILocation(line: 67, column: 12, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9464, file: !1317, line: 66, column: 36)
!9469 = !DILocation(line: 68, column: 3, scope: !9468)
!9470 = !DILocation(line: 68, column: 21, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9464, file: !1317, line: 68, column: 14)
!9472 = !DILocation(line: 68, column: 39, scope: !9471)
!9473 = !DILocation(line: 68, column: 14, scope: !9464)
!9474 = !DILocation(line: 69, column: 12, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !1317, line: 68, column: 45)
!9476 = !DILocation(line: 70, column: 3, scope: !9475)
!9477 = !DILocation(line: 72, column: 21, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9449, file: !1317, line: 72, column: 14)
!9479 = !DILocation(line: 72, column: 35, scope: !9478)
!9480 = !DILocation(line: 72, column: 14, scope: !9449)
!9481 = !DILocation(line: 77, column: 14, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1317, line: 77, column: 7)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !1317, line: 72, column: 41)
!9484 = !DILocation(line: 77, column: 30, scope: !9482)
!9485 = !DILocation(line: 77, column: 7, scope: !9483)
!9486 = !DILocation(line: 0, scope: !9449)
!9487 = !DILocation(line: 90, column: 1, scope: !9441)
!9488 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1317, file: !1317, line: 157, type: !9489, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{null, !1177, !103, !103, !103}
!9491 = !{!9492, !9493, !9494, !9495, !9496, !9497, !9498, !9499, !9500, !9501, !9502}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9488, file: !1317, line: 157, type: !1177)
!9493 = !DILocalVariable(name: "pin", arg: 2, scope: !9488, file: !1317, line: 157, type: !103)
!9494 = !DILocalVariable(name: "conf", arg: 3, scope: !9488, file: !1317, line: 158, type: !103)
!9495 = !DILocalVariable(name: "func", arg: 4, scope: !9488, file: !1317, line: 158, type: !103)
!9496 = !DILocalVariable(name: "cfg", scope: !9488, file: !1317, line: 160, type: !9013)
!9497 = !DILocalVariable(name: "gpio", scope: !9488, file: !1317, line: 161, type: !1250)
!9498 = !DILocalVariable(name: "pin_ll", scope: !9488, file: !1317, line: 163, type: !103)
!9499 = !DILocalVariable(name: "mode", scope: !9488, file: !1317, line: 227, type: !32)
!9500 = !DILocalVariable(name: "otype", scope: !9488, file: !1317, line: 227, type: !32)
!9501 = !DILocalVariable(name: "ospeed", scope: !9488, file: !1317, line: 227, type: !32)
!9502 = !DILocalVariable(name: "pupd", scope: !9488, file: !1317, line: 227, type: !32)
!9503 = !DILocation(line: 0, scope: !9488)
!9504 = !DILocation(line: 160, column: 45, scope: !9488)
!9505 = !DILocation(line: 161, column: 44, scope: !9488)
!9506 = !DILocation(line: 163, column: 15, scope: !9488)
!9507 = !DILocation(line: 229, column: 14, scope: !9488)
!9508 = !DILocation(line: 246, column: 47, scope: !9488)
!9509 = !DILocation(line: 246, column: 2, scope: !9488)
!9510 = !DILocation(line: 248, column: 43, scope: !9488)
!9511 = !DILocation(line: 248, column: 2, scope: !9488)
!9512 = !DILocation(line: 250, column: 40, scope: !9488)
!9513 = !DILocation(line: 250, column: 2, scope: !9488)
!9514 = !DILocation(line: 252, column: 11, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9488, file: !1317, line: 252, column: 6)
!9516 = !DILocation(line: 252, column: 6, scope: !9488)
!9517 = !DILocation(line: 253, column: 11, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !1317, line: 253, column: 7)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !1317, line: 252, column: 36)
!9520 = !DILocation(line: 253, column: 7, scope: !9519)
!9521 = !DILocation(line: 254, column: 4, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9518, file: !1317, line: 253, column: 16)
!9523 = !DILocation(line: 255, column: 3, scope: !9522)
!9524 = !DILocation(line: 256, column: 4, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9518, file: !1317, line: 255, column: 10)
!9526 = !DILocation(line: 260, column: 40, scope: !9488)
!9527 = !DILocation(line: 260, column: 2, scope: !9488)
!9528 = !DILocation(line: 265, column: 1, scope: !9488)
!9529 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1317, file: !1317, line: 137, type: !9336, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9530)
!9530 = !{!9531, !9532}
!9531 = !DILocalVariable(name: "pin", arg: 1, scope: !9529, file: !1317, line: 137, type: !103)
!9532 = !DILocalVariable(name: "pinval", scope: !9529, file: !1317, line: 139, type: !121)
!9533 = !DILocation(line: 0, scope: !9529)
!9534 = !DILocation(line: 149, column: 13, scope: !9529)
!9535 = !DILocation(line: 151, column: 2, scope: !9529)
!9536 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9411, file: !9411, line: 342, type: !9537, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9539)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{null, !1250, !121, !121}
!9539 = !{!9540, !9541, !9542}
!9540 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9536, file: !9411, line: 342, type: !1250)
!9541 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9536, file: !9411, line: 342, type: !121)
!9542 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9536, file: !9411, line: 342, type: !121)
!9543 = !DILocation(line: 0, scope: !9536)
!9544 = !DILocation(line: 344, column: 3, scope: !9536)
!9545 = !DILocation(line: 345, column: 1, scope: !9536)
!9546 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9411, file: !9411, line: 413, type: !9537, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9547)
!9547 = !{!9548, !9549, !9550}
!9548 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9546, file: !9411, line: 413, type: !1250)
!9549 = !DILocalVariable(name: "Pin", arg: 2, scope: !9546, file: !9411, line: 413, type: !121)
!9550 = !DILocalVariable(name: "Speed", arg: 3, scope: !9546, file: !9411, line: 413, type: !121)
!9551 = !DILocation(line: 0, scope: !9546)
!9552 = !DILocation(line: 415, column: 3, scope: !9546)
!9553 = !DILocation(line: 0, scope: !9356, inlinedAt: !9554)
!9554 = distinct !DILocation(line: 415, column: 3, scope: !9546)
!9555 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9554)
!9556 = !DILocation(line: 0, scope: !9364, inlinedAt: !9557)
!9557 = distinct !DILocation(line: 415, column: 3, scope: !9546)
!9558 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9557)
!9559 = !DILocation(line: 0, scope: !9356, inlinedAt: !9560)
!9560 = distinct !DILocation(line: 415, column: 3, scope: !9546)
!9561 = !DILocation(line: 0, scope: !9364, inlinedAt: !9562)
!9562 = distinct !DILocation(line: 415, column: 3, scope: !9546)
!9563 = !DILocation(line: 417, column: 1, scope: !9546)
!9564 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9411, file: !9411, line: 484, type: !9537, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9565)
!9565 = !{!9566, !9567, !9568}
!9566 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9564, file: !9411, line: 484, type: !1250)
!9567 = !DILocalVariable(name: "Pin", arg: 2, scope: !9564, file: !9411, line: 484, type: !121)
!9568 = !DILocalVariable(name: "Pull", arg: 3, scope: !9564, file: !9411, line: 484, type: !121)
!9569 = !DILocation(line: 0, scope: !9564)
!9570 = !DILocation(line: 486, column: 3, scope: !9564)
!9571 = !DILocation(line: 0, scope: !9356, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 486, column: 3, scope: !9564)
!9573 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9572)
!9574 = !DILocation(line: 0, scope: !9364, inlinedAt: !9575)
!9575 = distinct !DILocation(line: 486, column: 3, scope: !9564)
!9576 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9575)
!9577 = !DILocation(line: 0, scope: !9356, inlinedAt: !9578)
!9578 = distinct !DILocation(line: 486, column: 3, scope: !9564)
!9579 = !DILocation(line: 0, scope: !9364, inlinedAt: !9580)
!9580 = distinct !DILocation(line: 486, column: 3, scope: !9564)
!9581 = !DILocation(line: 487, column: 1, scope: !9564)
!9582 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9411, file: !9411, line: 556, type: !9537, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9583)
!9583 = !{!9584, !9585, !9586}
!9584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9582, file: !9411, line: 556, type: !1250)
!9585 = !DILocalVariable(name: "Pin", arg: 2, scope: !9582, file: !9411, line: 556, type: !121)
!9586 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9582, file: !9411, line: 556, type: !121)
!9587 = !DILocation(line: 0, scope: !9582)
!9588 = !DILocation(line: 558, column: 3, scope: !9582)
!9589 = !DILocation(line: 0, scope: !9356, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 558, column: 3, scope: !9582)
!9591 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9590)
!9592 = !DILocation(line: 0, scope: !9364, inlinedAt: !9593)
!9593 = distinct !DILocation(line: 558, column: 3, scope: !9582)
!9594 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9593)
!9595 = !DILocation(line: 0, scope: !9356, inlinedAt: !9596)
!9596 = distinct !DILocation(line: 558, column: 3, scope: !9582)
!9597 = !DILocation(line: 0, scope: !9364, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 558, column: 3, scope: !9582)
!9599 = !DILocation(line: 560, column: 1, scope: !9582)
!9600 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9411, file: !9411, line: 633, type: !9537, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9601)
!9601 = !{!9602, !9603, !9604}
!9602 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9600, file: !9411, line: 633, type: !1250)
!9603 = !DILocalVariable(name: "Pin", arg: 2, scope: !9600, file: !9411, line: 633, type: !121)
!9604 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9600, file: !9411, line: 633, type: !121)
!9605 = !DILocation(line: 0, scope: !9600)
!9606 = !DILocation(line: 635, column: 3, scope: !9600)
!9607 = !DILocation(line: 0, scope: !9356, inlinedAt: !9608)
!9608 = distinct !DILocation(line: 635, column: 3, scope: !9600)
!9609 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9608)
!9610 = !DILocation(line: 0, scope: !9364, inlinedAt: !9611)
!9611 = distinct !DILocation(line: 635, column: 3, scope: !9600)
!9612 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9611)
!9613 = !DILocation(line: 0, scope: !9356, inlinedAt: !9614)
!9614 = distinct !DILocation(line: 635, column: 3, scope: !9600)
!9615 = !DILocation(line: 0, scope: !9364, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 635, column: 3, scope: !9600)
!9617 = !DILocation(line: 637, column: 1, scope: !9600)
!9618 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9411, file: !9411, line: 273, type: !9537, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9619)
!9619 = !{!9620, !9621, !9622}
!9620 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9618, file: !9411, line: 273, type: !1250)
!9621 = !DILocalVariable(name: "Pin", arg: 2, scope: !9618, file: !9411, line: 273, type: !121)
!9622 = !DILocalVariable(name: "Mode", arg: 3, scope: !9618, file: !9411, line: 273, type: !121)
!9623 = !DILocation(line: 0, scope: !9618)
!9624 = !DILocation(line: 275, column: 3, scope: !9618)
!9625 = !DILocation(line: 0, scope: !9356, inlinedAt: !9626)
!9626 = distinct !DILocation(line: 275, column: 3, scope: !9618)
!9627 = !DILocation(line: 380, column: 4, scope: !9356, inlinedAt: !9626)
!9628 = !DILocation(line: 0, scope: !9364, inlinedAt: !9629)
!9629 = distinct !DILocation(line: 275, column: 3, scope: !9618)
!9630 = !DILocation(line: 414, column: 7, scope: !9364, inlinedAt: !9629)
!9631 = !DILocation(line: 0, scope: !9356, inlinedAt: !9632)
!9632 = distinct !DILocation(line: 275, column: 3, scope: !9618)
!9633 = !DILocation(line: 0, scope: !9364, inlinedAt: !9634)
!9634 = distinct !DILocation(line: 275, column: 3, scope: !9618)
!9635 = !DILocation(line: 276, column: 1, scope: !9618)
!9636 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1317, file: !1317, line: 698, type: !1330, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9637)
!9637 = !{!9638, !9639, !9640}
!9638 = !DILocalVariable(name: "dev", arg: 1, scope: !9636, file: !1317, line: 698, type: !1177)
!9639 = !DILocalVariable(name: "data", scope: !9636, file: !1317, line: 700, type: !9080)
!9640 = !DILocalVariable(name: "ret", scope: !9636, file: !1317, line: 701, type: !103)
!9641 = !DILocation(line: 0, scope: !9636)
!9642 = !DILocation(line: 700, column: 38, scope: !9636)
!9643 = !DILocation(line: 703, column: 8, scope: !9636)
!9644 = !DILocation(line: 703, column: 12, scope: !9636)
!9645 = !DILocation(line: 705, column: 7, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9636, file: !1317, line: 705, column: 6)
!9647 = !DILocation(line: 705, column: 6, scope: !9636)
!9648 = !DILocation(line: 722, column: 8, scope: !9636)
!9649 = !DILocation(line: 723, column: 10, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9636, file: !1317, line: 723, column: 6)
!9651 = !DILocation(line: 723, column: 6, scope: !9636)
!9652 = !DILocation(line: 731, column: 1, scope: !9636)
!9653 = distinct !DISubprogram(name: "device_is_ready", scope: !8304, file: !8304, line: 47, type: !9654, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9656)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{!157, !1177}
!9656 = !{!9657}
!9657 = !DILocalVariable(name: "dev", arg: 1, scope: !9653, file: !8304, line: 47, type: !1177)
!9658 = !DILocation(line: 0, scope: !9653)
!9659 = !DILocation(line: 55, column: 2, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9653, file: !8304, line: 55, column: 2)
!9661 = !{i64 2155660411}
!9662 = !DILocation(line: 56, column: 9, scope: !9653)
!9663 = !DILocation(line: 56, column: 2, scope: !9653)
!9664 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1317, file: !1317, line: 270, type: !9665, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9667)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!103, !1177, !157}
!9667 = !{!9668, !9669, !9670, !9671, !9672}
!9668 = !DILocalVariable(name: "dev", arg: 1, scope: !9664, file: !1317, line: 270, type: !1177)
!9669 = !DILocalVariable(name: "on", arg: 2, scope: !9664, file: !1317, line: 270, type: !157)
!9670 = !DILocalVariable(name: "cfg", scope: !9664, file: !1317, line: 272, type: !9013)
!9671 = !DILocalVariable(name: "ret", scope: !9664, file: !1317, line: 273, type: !103)
!9672 = !DILocalVariable(name: "clk", scope: !9664, file: !1317, line: 278, type: !9303)
!9673 = !DILocation(line: 0, scope: !9664)
!9674 = !DILocation(line: 272, column: 45, scope: !9664)
!9675 = !DILocation(line: 282, column: 38, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !1317, line: 280, column: 10)
!9677 = distinct !DILexicalBlock(scope: !9664, file: !1317, line: 280, column: 6)
!9678 = !DILocation(line: 282, column: 6, scope: !9676)
!9679 = !DILocation(line: 281, column: 9, scope: !9676)
!9680 = !DILocation(line: 293, column: 1, scope: !9664)
!9681 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9654, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9682)
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9681, file: !141, line: 730, type: !1177)
!9684 = !DILocation(line: 0, scope: !9681)
!9685 = !DILocation(line: 732, column: 9, scope: !9681)
!9686 = !DILocation(line: 732, column: 2, scope: !9681)
!9687 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1317, file: !1317, line: 496, type: !9688, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9690)
!9688 = !DISubroutineType(types: !9689)
!9689 = !{!103, !1177, !103, !103, !103}
!9690 = !{!9691, !9692, !9693, !9694, !9695, !9696}
!9691 = !DILocalVariable(name: "dev", arg: 1, scope: !9687, file: !1317, line: 496, type: !1177)
!9692 = !DILocalVariable(name: "pin", arg: 2, scope: !9687, file: !1317, line: 496, type: !103)
!9693 = !DILocalVariable(name: "conf", arg: 3, scope: !9687, file: !1317, line: 496, type: !103)
!9694 = !DILocalVariable(name: "func", arg: 4, scope: !9687, file: !1317, line: 496, type: !103)
!9695 = !DILocalVariable(name: "ret", scope: !9687, file: !1317, line: 498, type: !103)
!9696 = !DILocalVariable(name: "gpio_out", scope: !9697, file: !1317, line: 508, type: !121)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !1317, line: 507, column: 27)
!9698 = distinct !DILexicalBlock(scope: !9687, file: !1317, line: 507, column: 6)
!9699 = !DILocation(line: 0, scope: !9687)
!9700 = !DILocation(line: 505, column: 2, scope: !9687)
!9701 = !DILocation(line: 507, column: 11, scope: !9698)
!9702 = !DILocation(line: 507, column: 6, scope: !9687)
!9703 = !DILocation(line: 508, column: 28, scope: !9697)
!9704 = !DILocation(line: 0, scope: !9697)
!9705 = !DILocation(line: 510, column: 16, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9697, file: !1317, line: 510, column: 7)
!9707 = !DILocation(line: 0, scope: !9706)
!9708 = !DILocation(line: 510, column: 7, scope: !9697)
!9709 = !DILocation(line: 511, column: 4, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !1317, line: 510, column: 32)
!9711 = !DILocation(line: 512, column: 3, scope: !9710)
!9712 = !DILocation(line: 513, column: 4, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !1317, line: 512, column: 39)
!9714 = distinct !DILexicalBlock(scope: !9706, file: !1317, line: 512, column: 14)
!9715 = !DILocation(line: 514, column: 3, scope: !9713)
!9716 = !DILocation(line: 518, column: 1, scope: !9687)
!9717 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1658, file: !1658, line: 526, type: !1529, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9718)
!9718 = !{!9719, !9720, !9721}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !1658, line: 526, type: !1531)
!9720 = !DILocalVariable(name: "c", arg: 2, scope: !9717, file: !1658, line: 526, type: !230)
!9721 = !DILocalVariable(name: "config", scope: !9717, file: !1658, line: 528, type: !9722)
!9722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!9723 = !DILocation(line: 0, scope: !9717)
!9724 = !DILocation(line: 528, column: 48, scope: !9717)
!9725 = !DILocation(line: 531, column: 40, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9717, file: !1658, line: 531, column: 6)
!9727 = !DILocation(line: 531, column: 6, scope: !9726)
!9728 = !DILocation(line: 531, column: 6, scope: !9717)
!9729 = !DILocation(line: 532, column: 34, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9726, file: !1658, line: 531, column: 48)
!9731 = !DILocation(line: 532, column: 3, scope: !9730)
!9732 = !DILocation(line: 533, column: 2, scope: !9730)
!9733 = !DILocation(line: 539, column: 42, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9717, file: !1658, line: 539, column: 6)
!9735 = !DILocation(line: 539, column: 7, scope: !9734)
!9736 = !DILocation(line: 539, column: 6, scope: !9717)
!9737 = !DILocation(line: 543, column: 52, scope: !9717)
!9738 = !DILocation(line: 543, column: 22, scope: !9717)
!9739 = !DILocation(line: 543, column: 5, scope: !9717)
!9740 = !DILocation(line: 545, column: 2, scope: !9717)
!9741 = !DILocation(line: 546, column: 1, scope: !9717)
!9742 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1658, file: !1658, line: 548, type: !1548, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9743)
!9743 = !{!9744, !9745, !9746, !9747}
!9744 = !DILocalVariable(name: "dev", arg: 1, scope: !9742, file: !1658, line: 548, type: !1531)
!9745 = !DILocalVariable(name: "c", arg: 2, scope: !9742, file: !1658, line: 549, type: !155)
!9746 = !DILocalVariable(name: "config", scope: !9742, file: !1658, line: 551, type: !9722)
!9747 = !DILocalVariable(name: "key", scope: !9742, file: !1658, line: 555, type: !32)
!9748 = !DILocation(line: 0, scope: !9742)
!9749 = !DILocation(line: 551, column: 48, scope: !9742)
!9750 = !DILocation(line: 562, column: 2, scope: !9742)
!9751 = !DILocation(line: 563, column: 41, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !1658, line: 563, column: 7)
!9753 = distinct !DILexicalBlock(scope: !9742, file: !1658, line: 562, column: 12)
!9754 = !DILocation(line: 563, column: 7, scope: !9752)
!9755 = !DILocation(line: 563, column: 7, scope: !9753)
!9756 = !DILocation(line: 55, column: 2, scope: !9757, inlinedAt: !9761)
!9757 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9758)
!9758 = !{!9759, !9760}
!9759 = !DILocalVariable(name: "key", scope: !9757, file: !5896, line: 44, type: !32)
!9760 = !DILocalVariable(name: "tmp", scope: !9757, file: !5896, line: 53, type: !32)
!9761 = distinct !DILocation(line: 564, column: 10, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9752, file: !1658, line: 563, column: 49)
!9763 = !{i64 2642453}
!9764 = !DILocation(line: 0, scope: !9757, inlinedAt: !9761)
!9765 = !DILocation(line: 565, column: 42, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9762, file: !1658, line: 565, column: 8)
!9767 = !DILocation(line: 565, column: 8, scope: !9766)
!9768 = !DILocation(line: 565, column: 8, scope: !9762)
!9769 = !DILocalVariable(name: "key", arg: 1, scope: !9770, file: !5896, line: 84, type: !32)
!9770 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9771)
!9771 = !{!9769}
!9772 = !DILocation(line: 0, scope: !9770, inlinedAt: !9773)
!9773 = distinct !DILocation(line: 568, column: 4, scope: !9762)
!9774 = !DILocation(line: 95, column: 2, scope: !9770, inlinedAt: !9773)
!9775 = !{i64 2643270}
!9776 = !DILocation(line: 569, column: 3, scope: !9762)
!9777 = distinct !{!9777, !9750, !9778}
!9778 = !DILocation(line: 570, column: 2, scope: !9742)
!9779 = !DILocation(line: 592, column: 33, scope: !9742)
!9780 = !DILocation(line: 592, column: 2, scope: !9742)
!9781 = !DILocation(line: 0, scope: !9770, inlinedAt: !9782)
!9782 = distinct !DILocation(line: 593, column: 2, scope: !9742)
!9783 = !DILocation(line: 95, column: 2, scope: !9770, inlinedAt: !9782)
!9784 = !DILocation(line: 594, column: 1, scope: !9742)
!9785 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1658, file: !1658, line: 596, type: !1552, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9786)
!9786 = !{!9787, !9788, !9789}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !1658, line: 596, type: !1531)
!9788 = !DILocalVariable(name: "config", scope: !9785, file: !1658, line: 598, type: !9722)
!9789 = !DILocalVariable(name: "err", scope: !9785, file: !1658, line: 599, type: !121)
!9790 = !DILocation(line: 0, scope: !9785)
!9791 = !DILocation(line: 598, column: 48, scope: !9785)
!9792 = !DILocation(line: 606, column: 40, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 606, column: 6)
!9794 = !DILocation(line: 606, column: 6, scope: !9793)
!9795 = !DILocation(line: 606, column: 6, scope: !9785)
!9796 = !DILocation(line: 610, column: 39, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 610, column: 6)
!9798 = !DILocation(line: 610, column: 6, scope: !9797)
!9799 = !DILocation(line: 610, column: 6, scope: !9785)
!9800 = !DILocation(line: 614, column: 39, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 614, column: 6)
!9802 = !DILocation(line: 614, column: 6, scope: !9801)
!9803 = !DILocation(line: 614, column: 6, scope: !9785)
!9804 = !DILocation(line: 619, column: 40, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 619, column: 6)
!9806 = !DILocation(line: 619, column: 6, scope: !9805)
!9807 = !DILocation(line: 619, column: 6, scope: !9785)
!9808 = !DILocation(line: 623, column: 10, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 623, column: 6)
!9810 = !DILocation(line: 623, column: 6, scope: !9785)
!9811 = !DILocation(line: 624, column: 34, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9809, file: !1658, line: 623, column: 24)
!9813 = !DILocation(line: 624, column: 3, scope: !9812)
!9814 = !DILocation(line: 625, column: 2, scope: !9812)
!9815 = !DILocation(line: 632, column: 10, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 632, column: 6)
!9817 = !DILocation(line: 632, column: 6, scope: !9785)
!9818 = !DILocation(line: 633, column: 34, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9816, file: !1658, line: 632, column: 32)
!9820 = !DILocation(line: 633, column: 3, scope: !9819)
!9821 = !DILocation(line: 634, column: 2, scope: !9819)
!9822 = !DILocation(line: 636, column: 10, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 636, column: 6)
!9824 = !DILocation(line: 636, column: 6, scope: !9785)
!9825 = !DILocation(line: 637, column: 33, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9823, file: !1658, line: 636, column: 31)
!9827 = !DILocation(line: 637, column: 3, scope: !9826)
!9828 = !DILocation(line: 638, column: 2, scope: !9826)
!9829 = !DILocation(line: 640, column: 10, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9785, file: !1658, line: 640, column: 6)
!9831 = !DILocation(line: 640, column: 6, scope: !9785)
!9832 = !DILocation(line: 641, column: 33, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9830, file: !1658, line: 640, column: 32)
!9834 = !DILocation(line: 641, column: 3, scope: !9833)
!9835 = !DILocation(line: 642, column: 2, scope: !9833)
!9836 = !DILocation(line: 646, column: 32, scope: !9785)
!9837 = !DILocation(line: 646, column: 2, scope: !9785)
!9838 = !DILocation(line: 648, column: 2, scope: !9785)
!9839 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1658, file: !1658, line: 419, type: !1556, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9840)
!9840 = !{!9841, !9842, !9843, !9844, !9846, !9847, !9848, !9849}
!9841 = !DILocalVariable(name: "dev", arg: 1, scope: !9839, file: !1658, line: 419, type: !1531)
!9842 = !DILocalVariable(name: "cfg", arg: 2, scope: !9839, file: !1658, line: 420, type: !1558)
!9843 = !DILocalVariable(name: "config", scope: !9839, file: !1658, line: 422, type: !9722)
!9844 = !DILocalVariable(name: "data", scope: !9839, file: !1658, line: 423, type: !9845)
!9845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!9846 = !DILocalVariable(name: "parity", scope: !9839, file: !1658, line: 424, type: !6379)
!9847 = !DILocalVariable(name: "stopbits", scope: !9839, file: !1658, line: 425, type: !6379)
!9848 = !DILocalVariable(name: "databits", scope: !9839, file: !1658, line: 426, type: !6379)
!9849 = !DILocalVariable(name: "flowctrl", scope: !9839, file: !1658, line: 428, type: !6379)
!9850 = !DILocation(line: 0, scope: !9839)
!9851 = !DILocation(line: 422, column: 48, scope: !9839)
!9852 = !DILocation(line: 423, column: 38, scope: !9839)
!9853 = !DILocation(line: 424, column: 56, scope: !9839)
!9854 = !DILocation(line: 424, column: 51, scope: !9839)
!9855 = !DILocation(line: 424, column: 26, scope: !9839)
!9856 = !DILocation(line: 425, column: 60, scope: !9839)
!9857 = !DILocation(line: 425, column: 55, scope: !9839)
!9858 = !DILocation(line: 425, column: 28, scope: !9839)
!9859 = !DILocation(line: 426, column: 60, scope: !9839)
!9860 = !DILocation(line: 426, column: 55, scope: !9839)
!9861 = !DILocation(line: 426, column: 28, scope: !9839)
!9862 = !DILocation(line: 428, column: 58, scope: !9839)
!9863 = !DILocation(line: 428, column: 53, scope: !9839)
!9864 = !DILocation(line: 428, column: 28, scope: !9839)
!9865 = !DILocation(line: 431, column: 44, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 431, column: 6)
!9867 = !DILocation(line: 438, column: 22, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 437, column: 6)
!9869 = !DILocation(line: 437, column: 6, scope: !9839)
!9870 = !DILocation(line: 448, column: 6, scope: !9839)
!9871 = !DILocation(line: 465, column: 47, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 465, column: 6)
!9873 = !DILocation(line: 475, column: 21, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 475, column: 6)
!9875 = !DILocation(line: 475, column: 6, scope: !9839)
!9876 = !DILocation(line: 476, column: 8, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !1658, line: 476, column: 7)
!9878 = distinct !DILexicalBlock(scope: !9874, file: !1658, line: 475, column: 49)
!9879 = !DILocation(line: 477, column: 34, scope: !9877)
!9880 = !DILocation(line: 476, column: 7, scope: !9878)
!9881 = !DILocation(line: 482, column: 27, scope: !9839)
!9882 = !DILocation(line: 482, column: 2, scope: !9839)
!9883 = !DILocation(line: 484, column: 16, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 484, column: 6)
!9885 = !DILocation(line: 484, column: 13, scope: !9884)
!9886 = !DILocation(line: 484, column: 6, scope: !9839)
!9887 = !DILocation(line: 485, column: 3, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !1658, line: 484, column: 44)
!9889 = !DILocation(line: 486, column: 2, scope: !9888)
!9890 = !DILocation(line: 488, column: 18, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 488, column: 6)
!9892 = !DILocation(line: 488, column: 15, scope: !9891)
!9893 = !DILocation(line: 488, column: 6, scope: !9839)
!9894 = !DILocation(line: 489, column: 3, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !1658, line: 488, column: 48)
!9896 = !DILocation(line: 490, column: 2, scope: !9895)
!9897 = !DILocation(line: 492, column: 18, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 492, column: 6)
!9899 = !DILocation(line: 492, column: 15, scope: !9898)
!9900 = !DILocation(line: 492, column: 6, scope: !9839)
!9901 = !DILocation(line: 493, column: 3, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9898, file: !1658, line: 492, column: 48)
!9903 = !DILocation(line: 494, column: 2, scope: !9902)
!9904 = !DILocation(line: 496, column: 18, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 496, column: 6)
!9906 = !DILocation(line: 496, column: 15, scope: !9905)
!9907 = !DILocation(line: 496, column: 6, scope: !9839)
!9908 = !DILocation(line: 497, column: 3, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !1658, line: 496, column: 46)
!9910 = !DILocation(line: 498, column: 2, scope: !9909)
!9911 = !DILocation(line: 500, column: 11, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9839, file: !1658, line: 500, column: 6)
!9913 = !DILocation(line: 500, column: 29, scope: !9912)
!9914 = !DILocation(line: 500, column: 20, scope: !9912)
!9915 = !DILocation(line: 500, column: 6, scope: !9839)
!9916 = !DILocation(line: 501, column: 3, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9912, file: !1658, line: 500, column: 40)
!9918 = !DILocation(line: 502, column: 26, scope: !9917)
!9919 = !DILocation(line: 502, column: 19, scope: !9917)
!9920 = !DILocation(line: 503, column: 2, scope: !9917)
!9921 = !DILocation(line: 505, column: 26, scope: !9839)
!9922 = !DILocation(line: 505, column: 2, scope: !9839)
!9923 = !DILocation(line: 506, column: 2, scope: !9839)
!9924 = !DILocation(line: 507, column: 1, scope: !9839)
!9925 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1658, file: !1658, line: 509, type: !1569, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9926)
!9926 = !{!9927, !9928, !9929}
!9927 = !DILocalVariable(name: "dev", arg: 1, scope: !9925, file: !1658, line: 509, type: !1531)
!9928 = !DILocalVariable(name: "cfg", arg: 2, scope: !9925, file: !1658, line: 510, type: !1571)
!9929 = !DILocalVariable(name: "data", scope: !9925, file: !1658, line: 512, type: !9845)
!9930 = !DILocation(line: 0, scope: !9925)
!9931 = !DILocation(line: 512, column: 38, scope: !9925)
!9932 = !DILocation(line: 514, column: 24, scope: !9925)
!9933 = !DILocation(line: 514, column: 7, scope: !9925)
!9934 = !DILocation(line: 514, column: 16, scope: !9925)
!9935 = !DILocation(line: 515, column: 41, scope: !9925)
!9936 = !{i32 0, i32 1537}
!9937 = !DILocation(line: 515, column: 16, scope: !9925)
!9938 = !DILocation(line: 515, column: 7, scope: !9925)
!9939 = !DILocation(line: 515, column: 14, scope: !9925)
!9940 = !DILocation(line: 517, column: 3, scope: !9925)
!9941 = !{i32 0, i32 12289}
!9942 = !DILocation(line: 516, column: 19, scope: !9925)
!9943 = !DILocation(line: 516, column: 7, scope: !9925)
!9944 = !DILocation(line: 516, column: 17, scope: !9925)
!9945 = !DILocation(line: 519, column: 3, scope: !9925)
!9946 = !DILocation(line: 519, column: 33, scope: !9925)
!9947 = !DILocation(line: 518, column: 19, scope: !9925)
!9948 = !DILocation(line: 518, column: 7, scope: !9925)
!9949 = !DILocation(line: 518, column: 17, scope: !9925)
!9950 = !DILocation(line: 521, column: 3, scope: !9925)
!9951 = !{i32 0, i32 769}
!9952 = !DILocation(line: 520, column: 19, scope: !9925)
!9953 = !DILocation(line: 520, column: 7, scope: !9925)
!9954 = !DILocation(line: 520, column: 17, scope: !9925)
!9955 = !DILocation(line: 522, column: 2, scope: !9925)
!9956 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1658, file: !1658, line: 661, type: !1574, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960, !9961, !9962, !9963}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1658, line: 661, type: !1531)
!9959 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9956, file: !1658, line: 662, type: !261)
!9960 = !DILocalVariable(name: "size", arg: 3, scope: !9956, file: !1658, line: 663, type: !103)
!9961 = !DILocalVariable(name: "config", scope: !9956, file: !1658, line: 665, type: !9722)
!9962 = !DILocalVariable(name: "num_tx", scope: !9956, file: !1658, line: 666, type: !154)
!9963 = !DILocalVariable(name: "key", scope: !9956, file: !1658, line: 667, type: !32)
!9964 = !DILocation(line: 0, scope: !9956)
!9965 = !DILocation(line: 665, column: 48, scope: !9956)
!9966 = !DILocation(line: 669, column: 41, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9956, file: !1658, line: 669, column: 6)
!9968 = !DILocation(line: 669, column: 7, scope: !9967)
!9969 = !DILocation(line: 669, column: 6, scope: !9956)
!9970 = !DILocation(line: 55, column: 2, scope: !9757, inlinedAt: !9971)
!9971 = distinct !DILocation(line: 674, column: 8, scope: !9956)
!9972 = !DILocation(line: 0, scope: !9757, inlinedAt: !9971)
!9973 = !DILocation(line: 676, column: 24, scope: !9956)
!9974 = !DILocation(line: 676, column: 29, scope: !9956)
!9975 = !DILocation(line: 677, column: 43, scope: !9956)
!9976 = !DILocation(line: 677, column: 9, scope: !9956)
!9977 = !DILocation(line: 676, column: 2, scope: !9956)
!9978 = !DILocation(line: 681, column: 34, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9956, file: !1658, line: 677, column: 51)
!9980 = !DILocation(line: 681, column: 55, scope: !9979)
!9981 = !DILocation(line: 681, column: 41, scope: !9979)
!9982 = !DILocation(line: 681, column: 3, scope: !9979)
!9983 = !DILocation(line: 676, column: 17, scope: !9956)
!9984 = distinct !{!9984, !9977, !9985}
!9985 = !DILocation(line: 682, column: 2, scope: !9956)
!9986 = !DILocation(line: 0, scope: !9770, inlinedAt: !9987)
!9987 = distinct !DILocation(line: 684, column: 2, scope: !9956)
!9988 = !DILocation(line: 95, column: 2, scope: !9770, inlinedAt: !9987)
!9989 = !DILocation(line: 686, column: 2, scope: !9956)
!9990 = !DILocation(line: 687, column: 1, scope: !9956)
!9991 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1658, file: !1658, line: 689, type: !1578, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9992)
!9992 = !{!9993, !9994, !9995, !9996, !9997}
!9993 = !DILocalVariable(name: "dev", arg: 1, scope: !9991, file: !1658, line: 689, type: !1531)
!9994 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9991, file: !1658, line: 689, type: !267)
!9995 = !DILocalVariable(name: "size", arg: 3, scope: !9991, file: !1658, line: 690, type: !268)
!9996 = !DILocalVariable(name: "config", scope: !9991, file: !1658, line: 692, type: !9722)
!9997 = !DILocalVariable(name: "num_rx", scope: !9991, file: !1658, line: 693, type: !154)
!9998 = !DILocation(line: 0, scope: !9991)
!9999 = !DILocation(line: 692, column: 48, scope: !9991)
!10000 = !DILocation(line: 696, column: 44, scope: !9991)
!10001 = !DILocation(line: 695, column: 24, scope: !9991)
!10002 = !DILocation(line: 695, column: 29, scope: !9991)
!10003 = !DILocation(line: 696, column: 9, scope: !9991)
!10004 = !DILocation(line: 695, column: 2, scope: !9991)
!10005 = !DILocation(line: 700, column: 53, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9991, file: !1658, line: 696, column: 52)
!10007 = !DILocation(line: 700, column: 23, scope: !10006)
!10008 = !DILocation(line: 700, column: 17, scope: !10006)
!10009 = !DILocation(line: 700, column: 3, scope: !10006)
!10010 = !DILocation(line: 700, column: 21, scope: !10006)
!10011 = !DILocation(line: 703, column: 41, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10006, file: !1658, line: 703, column: 7)
!10013 = !DILocation(line: 703, column: 7, scope: !10012)
!10014 = !DILocation(line: 703, column: 7, scope: !10006)
!10015 = !DILocation(line: 704, column: 35, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !1658, line: 703, column: 49)
!10017 = !DILocation(line: 704, column: 4, scope: !10016)
!10018 = !DILocation(line: 709, column: 3, scope: !10016)
!10019 = !DILocation(line: 695, column: 17, scope: !9991)
!10020 = distinct !{!10020, !10004, !10021}
!10021 = !DILocation(line: 710, column: 2, scope: !9991)
!10022 = !DILocation(line: 712, column: 2, scope: !9991)
!10023 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1658, file: !1658, line: 715, type: !1582, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10024)
!10024 = !{!10025, !10026}
!10025 = !DILocalVariable(name: "dev", arg: 1, scope: !10023, file: !1658, line: 715, type: !1531)
!10026 = !DILocalVariable(name: "config", scope: !10023, file: !1658, line: 717, type: !9722)
!10027 = !DILocation(line: 0, scope: !10023)
!10028 = !DILocation(line: 717, column: 48, scope: !10023)
!10029 = !DILocation(line: 729, column: 31, scope: !10023)
!10030 = !DILocation(line: 729, column: 2, scope: !10023)
!10031 = !DILocation(line: 734, column: 1, scope: !10023)
!10032 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1658, file: !1658, line: 736, type: !1582, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10033)
!10033 = !{!10034, !10035}
!10034 = !DILocalVariable(name: "dev", arg: 1, scope: !10032, file: !1658, line: 736, type: !1531)
!10035 = !DILocalVariable(name: "config", scope: !10032, file: !1658, line: 738, type: !9722)
!10036 = !DILocation(line: 0, scope: !10032)
!10037 = !DILocation(line: 738, column: 48, scope: !10032)
!10038 = !DILocation(line: 746, column: 32, scope: !10032)
!10039 = !DILocation(line: 746, column: 2, scope: !10032)
!10040 = !DILocation(line: 756, column: 1, scope: !10032)
!10041 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1658, file: !1658, line: 758, type: !1552, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10042)
!10042 = !{!10043, !10044}
!10043 = !DILocalVariable(name: "dev", arg: 1, scope: !10041, file: !1658, line: 758, type: !1531)
!10044 = !DILocalVariable(name: "config", scope: !10041, file: !1658, line: 760, type: !9722)
!10045 = !DILocation(line: 0, scope: !10041)
!10046 = !DILocation(line: 760, column: 48, scope: !10041)
!10047 = !DILocation(line: 762, column: 43, scope: !10041)
!10048 = !DILocation(line: 762, column: 9, scope: !10041)
!10049 = !DILocation(line: 762, column: 50, scope: !10041)
!10050 = !DILocation(line: 763, column: 35, scope: !10041)
!10051 = !DILocation(line: 763, column: 3, scope: !10041)
!10052 = !DILocation(line: 762, column: 2, scope: !10041)
!10053 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1658, file: !1658, line: 773, type: !1582, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10054)
!10054 = !{!10055, !10056}
!10055 = !DILocalVariable(name: "dev", arg: 1, scope: !10053, file: !1658, line: 773, type: !1531)
!10056 = !DILocalVariable(name: "config", scope: !10053, file: !1658, line: 775, type: !9722)
!10057 = !DILocation(line: 0, scope: !10053)
!10058 = !DILocation(line: 775, column: 48, scope: !10053)
!10059 = !DILocation(line: 777, column: 33, scope: !10053)
!10060 = !DILocation(line: 777, column: 2, scope: !10053)
!10061 = !DILocation(line: 778, column: 1, scope: !10053)
!10062 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1658, file: !1658, line: 780, type: !1582, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10063)
!10063 = !{!10064, !10065}
!10064 = !DILocalVariable(name: "dev", arg: 1, scope: !10062, file: !1658, line: 780, type: !1531)
!10065 = !DILocalVariable(name: "config", scope: !10062, file: !1658, line: 782, type: !9722)
!10066 = !DILocation(line: 0, scope: !10062)
!10067 = !DILocation(line: 782, column: 48, scope: !10062)
!10068 = !DILocation(line: 784, column: 34, scope: !10062)
!10069 = !DILocation(line: 784, column: 2, scope: !10062)
!10070 = !DILocation(line: 785, column: 1, scope: !10062)
!10071 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1658, file: !1658, line: 766, type: !1552, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10072)
!10072 = !{!10073, !10074}
!10073 = !DILocalVariable(name: "dev", arg: 1, scope: !10071, file: !1658, line: 766, type: !1531)
!10074 = !DILocalVariable(name: "config", scope: !10071, file: !1658, line: 768, type: !9722)
!10075 = !DILocation(line: 0, scope: !10071)
!10076 = !DILocation(line: 768, column: 48, scope: !10071)
!10077 = !DILocation(line: 770, column: 42, scope: !10071)
!10078 = !DILocation(line: 770, column: 9, scope: !10071)
!10079 = !DILocation(line: 770, column: 2, scope: !10071)
!10080 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1658, file: !1658, line: 787, type: !1552, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10081)
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "dev", arg: 1, scope: !10080, file: !1658, line: 787, type: !1531)
!10083 = !DILocalVariable(name: "config", scope: !10080, file: !1658, line: 789, type: !9722)
!10084 = !DILocation(line: 0, scope: !10080)
!10085 = !DILocation(line: 789, column: 48, scope: !10080)
!10086 = !DILocation(line: 794, column: 44, scope: !10080)
!10087 = !DILocation(line: 794, column: 9, scope: !10080)
!10088 = !DILocation(line: 794, column: 2, scope: !10080)
!10089 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1658, file: !1658, line: 797, type: !1582, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10090)
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "dev", arg: 1, scope: !10089, file: !1658, line: 797, type: !1531)
!10092 = !DILocalVariable(name: "config", scope: !10089, file: !1658, line: 799, type: !9722)
!10093 = !DILocation(line: 0, scope: !10089)
!10094 = !DILocation(line: 799, column: 48, scope: !10089)
!10095 = !DILocation(line: 802, column: 34, scope: !10089)
!10096 = !DILocation(line: 802, column: 2, scope: !10089)
!10097 = !DILocation(line: 805, column: 6, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10089, file: !1658, line: 805, column: 6)
!10099 = !DILocation(line: 806, column: 3, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10098, file: !1658, line: 805, column: 43)
!10101 = !DILocation(line: 810, column: 31, scope: !10089)
!10102 = !DILocation(line: 807, column: 2, scope: !10100)
!10103 = !DILocation(line: 810, column: 2, scope: !10089)
!10104 = !DILocation(line: 811, column: 1, scope: !10089)
!10105 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1658, file: !1658, line: 813, type: !1582, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10106)
!10106 = !{!10107, !10108}
!10107 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !1658, line: 813, type: !1531)
!10108 = !DILocalVariable(name: "config", scope: !10105, file: !1658, line: 815, type: !9722)
!10109 = !DILocation(line: 0, scope: !10105)
!10110 = !DILocation(line: 815, column: 48, scope: !10105)
!10111 = !DILocation(line: 818, column: 35, scope: !10105)
!10112 = !DILocation(line: 818, column: 2, scope: !10105)
!10113 = !DILocation(line: 821, column: 6, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10105, file: !1658, line: 821, column: 6)
!10115 = !DILocation(line: 822, column: 3, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10114, file: !1658, line: 821, column: 43)
!10117 = !DILocation(line: 826, column: 32, scope: !10105)
!10118 = !DILocation(line: 823, column: 2, scope: !10116)
!10119 = !DILocation(line: 826, column: 2, scope: !10105)
!10120 = !DILocation(line: 827, column: 1, scope: !10105)
!10121 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1658, file: !1658, line: 829, type: !1552, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10122)
!10122 = !{!10123, !10124}
!10123 = !DILocalVariable(name: "dev", arg: 1, scope: !10121, file: !1658, line: 829, type: !1531)
!10124 = !DILocalVariable(name: "config", scope: !10121, file: !1658, line: 831, type: !9722)
!10125 = !DILocation(line: 0, scope: !10121)
!10126 = !DILocation(line: 831, column: 48, scope: !10121)
!10127 = !DILocation(line: 833, column: 46, scope: !10121)
!10128 = !DILocation(line: 833, column: 11, scope: !10121)
!10129 = !DILocation(line: 833, column: 53, scope: !10121)
!10130 = !DILocation(line: 834, column: 38, scope: !10121)
!10131 = !DILocation(line: 834, column: 4, scope: !10121)
!10132 = !DILocation(line: 834, column: 46, scope: !10121)
!10133 = !DILocation(line: 835, column: 37, scope: !10121)
!10134 = !DILocation(line: 835, column: 4, scope: !10121)
!10135 = !DILocation(line: 835, column: 44, scope: !10121)
!10136 = !DILocation(line: 836, column: 36, scope: !10121)
!10137 = !DILocation(line: 836, column: 4, scope: !10121)
!10138 = !DILocation(line: 833, column: 2, scope: !10121)
!10139 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1658, file: !1658, line: 839, type: !1552, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10140)
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "dev", arg: 1, scope: !10139, file: !1658, line: 839, type: !1531)
!10142 = !DILocation(line: 0, scope: !10139)
!10143 = !DILocation(line: 841, column: 2, scope: !10139)
!10144 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1658, file: !1658, line: 844, type: !1596, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10145)
!10145 = !{!10146, !10147, !10148, !10149}
!10146 = !DILocalVariable(name: "dev", arg: 1, scope: !10144, file: !1658, line: 844, type: !1531)
!10147 = !DILocalVariable(name: "cb", arg: 2, scope: !10144, file: !1658, line: 845, type: !1598)
!10148 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10144, file: !1658, line: 846, type: !102)
!10149 = !DILocalVariable(name: "data", scope: !10144, file: !1658, line: 848, type: !9845)
!10150 = !DILocation(line: 0, scope: !10144)
!10151 = !DILocation(line: 848, column: 38, scope: !10144)
!10152 = !DILocation(line: 850, column: 8, scope: !10144)
!10153 = !DILocation(line: 850, column: 16, scope: !10144)
!10154 = !DILocation(line: 851, column: 8, scope: !10144)
!10155 = !DILocation(line: 851, column: 18, scope: !10144)
!10156 = !DILocation(line: 852, column: 1, scope: !10144)
!10157 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10158, file: !10158, line: 1792, type: !10159, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10161)
!10158 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!121, !1602}
!10161 = !{!10162}
!10162 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10157, file: !10158, line: 1792, type: !1602)
!10163 = !DILocation(line: 0, scope: !10157)
!10164 = !DILocation(line: 1794, column: 11, scope: !10157)
!10165 = !DILocation(line: 1794, column: 47, scope: !10157)
!10166 = !DILocation(line: 1794, column: 3, scope: !10157)
!10167 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10158, file: !10158, line: 2227, type: !10159, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10168)
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10167, file: !10158, line: 2227, type: !1602)
!10170 = !DILocation(line: 0, scope: !10167)
!10171 = !DILocation(line: 2229, column: 11, scope: !10167)
!10172 = !DILocation(line: 2229, column: 51, scope: !10167)
!10173 = !DILocation(line: 2229, column: 3, scope: !10167)
!10174 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10158, file: !10158, line: 1803, type: !10159, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10175)
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10174, file: !10158, line: 1803, type: !1602)
!10177 = !DILocation(line: 0, scope: !10174)
!10178 = !DILocation(line: 1805, column: 11, scope: !10174)
!10179 = !DILocation(line: 1805, column: 45, scope: !10174)
!10180 = !DILocation(line: 1805, column: 3, scope: !10174)
!10181 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10158, file: !10158, line: 2238, type: !10159, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10182)
!10182 = !{!10183}
!10183 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10181, file: !10158, line: 2238, type: !1602)
!10184 = !DILocation(line: 0, scope: !10181)
!10185 = !DILocation(line: 2240, column: 11, scope: !10181)
!10186 = !DILocation(line: 2240, column: 49, scope: !10181)
!10187 = !DILocation(line: 2240, column: 3, scope: !10181)
!10188 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10158, file: !10158, line: 2192, type: !10189, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10191)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{null, !1602}
!10191 = !{!10192, !10193}
!10192 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10188, file: !10158, line: 2192, type: !1602)
!10193 = !DILocalVariable(name: "val", scope: !10194, file: !10158, line: 2194, type: !121)
!10194 = distinct !DILexicalBlock(scope: !10188, file: !10158, line: 2194, column: 3)
!10195 = !DILocation(line: 0, scope: !10188)
!10196 = !DILocation(line: 2194, column: 3, scope: !10194)
!10197 = !DILocalVariable(name: "addr", arg: 1, scope: !10198, file: !6111, line: 476, type: !1654)
!10198 = distinct !DISubprogram(name: "__LDREXW", scope: !6111, file: !6111, line: 476, type: !10199, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10201)
!10199 = !DISubroutineType(types: !10200)
!10200 = !{!121, !1654}
!10201 = !{!10197, !10202}
!10202 = !DILocalVariable(name: "result", scope: !10198, file: !6111, line: 478, type: !121)
!10203 = !DILocation(line: 0, scope: !10198, inlinedAt: !10204)
!10204 = distinct !DILocation(line: 2194, column: 3, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10194, file: !10158, line: 2194, column: 3)
!10206 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10204)
!10207 = !{i64 4142867}
!10208 = !DILocation(line: 2194, column: 3, scope: !10205)
!10209 = !DILocation(line: 0, scope: !10194)
!10210 = !DILocalVariable(name: "value", arg: 1, scope: !10211, file: !6111, line: 527, type: !121)
!10211 = distinct !DISubprogram(name: "__STREXW", scope: !6111, file: !6111, line: 527, type: !10212, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10214)
!10212 = !DISubroutineType(types: !10213)
!10213 = !{!121, !121, !1654}
!10214 = !{!10210, !10215, !10216}
!10215 = !DILocalVariable(name: "addr", arg: 2, scope: !10211, file: !6111, line: 527, type: !1654)
!10216 = !DILocalVariable(name: "result", scope: !10211, file: !6111, line: 529, type: !121)
!10217 = !DILocation(line: 0, scope: !10211, inlinedAt: !10218)
!10218 = distinct !DILocation(line: 2194, column: 3, scope: !10194)
!10219 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10218)
!10220 = !{i64 4144303}
!10221 = distinct !{!10221, !10196, !10196}
!10222 = !DILocation(line: 2195, column: 1, scope: !10188)
!10223 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10158, file: !10158, line: 2177, type: !10189, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10224)
!10224 = !{!10225}
!10225 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10223, file: !10158, line: 2177, type: !1602)
!10226 = !DILocation(line: 0, scope: !10223)
!10227 = !DILocation(line: 2179, column: 3, scope: !10223)
!10228 = !DILocation(line: 2180, column: 1, scope: !10223)
!10229 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10158, file: !10158, line: 2164, type: !10189, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10230)
!10230 = !{!10231, !10232}
!10231 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10229, file: !10158, line: 2164, type: !1602)
!10232 = !DILocalVariable(name: "val", scope: !10233, file: !10158, line: 2166, type: !121)
!10233 = distinct !DILexicalBlock(scope: !10229, file: !10158, line: 2166, column: 3)
!10234 = !DILocation(line: 0, scope: !10229)
!10235 = !DILocation(line: 2166, column: 3, scope: !10233)
!10236 = !DILocation(line: 0, scope: !10198, inlinedAt: !10237)
!10237 = distinct !DILocation(line: 2166, column: 3, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10233, file: !10158, line: 2166, column: 3)
!10239 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10237)
!10240 = !DILocation(line: 2166, column: 3, scope: !10238)
!10241 = !DILocation(line: 0, scope: !10233)
!10242 = !DILocation(line: 0, scope: !10211, inlinedAt: !10243)
!10243 = distinct !DILocation(line: 2166, column: 3, scope: !10233)
!10244 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10243)
!10245 = distinct !{!10245, !10235, !10235}
!10246 = !DILocation(line: 2167, column: 1, scope: !10229)
!10247 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10158, file: !10158, line: 2096, type: !10189, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10248)
!10248 = !{!10249, !10250}
!10249 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10247, file: !10158, line: 2096, type: !1602)
!10250 = !DILocalVariable(name: "val", scope: !10251, file: !10158, line: 2098, type: !121)
!10251 = distinct !DILexicalBlock(scope: !10247, file: !10158, line: 2098, column: 3)
!10252 = !DILocation(line: 0, scope: !10247)
!10253 = !DILocation(line: 2098, column: 3, scope: !10251)
!10254 = !DILocation(line: 0, scope: !10198, inlinedAt: !10255)
!10255 = distinct !DILocation(line: 2098, column: 3, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !10158, line: 2098, column: 3)
!10257 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10255)
!10258 = !DILocation(line: 2098, column: 3, scope: !10256)
!10259 = !DILocation(line: 0, scope: !10251)
!10260 = !DILocation(line: 0, scope: !10211, inlinedAt: !10261)
!10261 = distinct !DILocation(line: 2098, column: 3, scope: !10251)
!10262 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10261)
!10263 = distinct !{!10263, !10253, !10253}
!10264 = !DILocation(line: 2099, column: 1, scope: !10247)
!10265 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10158, file: !10158, line: 2081, type: !10189, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10266)
!10266 = !{!10267}
!10267 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10265, file: !10158, line: 2081, type: !1602)
!10268 = !DILocation(line: 0, scope: !10265)
!10269 = !DILocation(line: 2083, column: 3, scope: !10265)
!10270 = !DILocation(line: 2084, column: 1, scope: !10265)
!10271 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10158, file: !10158, line: 2068, type: !10189, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10272)
!10272 = !{!10273, !10274}
!10273 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10271, file: !10158, line: 2068, type: !1602)
!10274 = !DILocalVariable(name: "val", scope: !10275, file: !10158, line: 2070, type: !121)
!10275 = distinct !DILexicalBlock(scope: !10271, file: !10158, line: 2070, column: 3)
!10276 = !DILocation(line: 0, scope: !10271)
!10277 = !DILocation(line: 2070, column: 3, scope: !10275)
!10278 = !DILocation(line: 0, scope: !10198, inlinedAt: !10279)
!10279 = distinct !DILocation(line: 2070, column: 3, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10275, file: !10158, line: 2070, column: 3)
!10281 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10279)
!10282 = !DILocation(line: 2070, column: 3, scope: !10280)
!10283 = !DILocation(line: 0, scope: !10275)
!10284 = !DILocation(line: 0, scope: !10211, inlinedAt: !10285)
!10285 = distinct !DILocation(line: 2070, column: 3, scope: !10275)
!10286 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10285)
!10287 = distinct !{!10287, !10277, !10277}
!10288 = !DILocation(line: 2071, column: 1, scope: !10271)
!10289 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10158, file: !10158, line: 2131, type: !10189, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10290)
!10290 = !{!10291, !10292}
!10291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10289, file: !10158, line: 2131, type: !1602)
!10292 = !DILocalVariable(name: "val", scope: !10293, file: !10158, line: 2133, type: !121)
!10293 = distinct !DILexicalBlock(scope: !10289, file: !10158, line: 2133, column: 3)
!10294 = !DILocation(line: 0, scope: !10289)
!10295 = !DILocation(line: 2133, column: 3, scope: !10293)
!10296 = !DILocation(line: 0, scope: !10198, inlinedAt: !10297)
!10297 = distinct !DILocation(line: 2133, column: 3, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !10158, line: 2133, column: 3)
!10299 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10297)
!10300 = !DILocation(line: 2133, column: 3, scope: !10298)
!10301 = !DILocation(line: 0, scope: !10293)
!10302 = !DILocation(line: 0, scope: !10211, inlinedAt: !10303)
!10303 = distinct !DILocation(line: 2133, column: 3, scope: !10293)
!10304 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10303)
!10305 = distinct !{!10305, !10295, !10295}
!10306 = !DILocation(line: 2134, column: 1, scope: !10289)
!10307 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10158, file: !10158, line: 2035, type: !10189, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10308)
!10308 = !{!10309, !10310}
!10309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10307, file: !10158, line: 2035, type: !1602)
!10310 = !DILocalVariable(name: "val", scope: !10311, file: !10158, line: 2037, type: !121)
!10311 = distinct !DILexicalBlock(scope: !10307, file: !10158, line: 2037, column: 3)
!10312 = !DILocation(line: 0, scope: !10307)
!10313 = !DILocation(line: 2037, column: 3, scope: !10311)
!10314 = !DILocation(line: 0, scope: !10198, inlinedAt: !10315)
!10315 = distinct !DILocation(line: 2037, column: 3, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10311, file: !10158, line: 2037, column: 3)
!10317 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10315)
!10318 = !DILocation(line: 2037, column: 3, scope: !10316)
!10319 = !DILocation(line: 0, scope: !10311)
!10320 = !DILocation(line: 0, scope: !10211, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 2037, column: 3, scope: !10311)
!10322 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10321)
!10323 = distinct !{!10323, !10313, !10313}
!10324 = !DILocation(line: 2038, column: 1, scope: !10307)
!10325 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10158, file: !10158, line: 1814, type: !10159, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10326)
!10326 = !{!10327}
!10327 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10325, file: !10158, line: 1814, type: !1602)
!10328 = !DILocation(line: 0, scope: !10325)
!10329 = !DILocation(line: 1816, column: 11, scope: !10325)
!10330 = !DILocation(line: 1816, column: 46, scope: !10325)
!10331 = !DILocation(line: 1816, column: 3, scope: !10325)
!10332 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10158, file: !10158, line: 2142, type: !10189, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10333)
!10333 = !{!10334, !10335}
!10334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10332, file: !10158, line: 2142, type: !1602)
!10335 = !DILocalVariable(name: "val", scope: !10336, file: !10158, line: 2144, type: !121)
!10336 = distinct !DILexicalBlock(scope: !10332, file: !10158, line: 2144, column: 3)
!10337 = !DILocation(line: 0, scope: !10332)
!10338 = !DILocation(line: 2144, column: 3, scope: !10336)
!10339 = !DILocation(line: 0, scope: !10198, inlinedAt: !10340)
!10340 = distinct !DILocation(line: 2144, column: 3, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10336, file: !10158, line: 2144, column: 3)
!10342 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10340)
!10343 = !DILocation(line: 2144, column: 3, scope: !10341)
!10344 = !DILocation(line: 0, scope: !10336)
!10345 = !DILocation(line: 0, scope: !10211, inlinedAt: !10346)
!10346 = distinct !DILocation(line: 2144, column: 3, scope: !10336)
!10347 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10346)
!10348 = distinct !{!10348, !10338, !10338}
!10349 = !DILocation(line: 2145, column: 1, scope: !10332)
!10350 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10158, file: !10158, line: 2046, type: !10189, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10351)
!10351 = !{!10352, !10353}
!10352 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10350, file: !10158, line: 2046, type: !1602)
!10353 = !DILocalVariable(name: "val", scope: !10354, file: !10158, line: 2048, type: !121)
!10354 = distinct !DILexicalBlock(scope: !10350, file: !10158, line: 2048, column: 3)
!10355 = !DILocation(line: 0, scope: !10350)
!10356 = !DILocation(line: 2048, column: 3, scope: !10354)
!10357 = !DILocation(line: 0, scope: !10198, inlinedAt: !10358)
!10358 = distinct !DILocation(line: 2048, column: 3, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10354, file: !10158, line: 2048, column: 3)
!10360 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10358)
!10361 = !DILocation(line: 2048, column: 3, scope: !10359)
!10362 = !DILocation(line: 0, scope: !10354)
!10363 = !DILocation(line: 0, scope: !10211, inlinedAt: !10364)
!10364 = distinct !DILocation(line: 2048, column: 3, scope: !10354)
!10365 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10364)
!10366 = distinct !{!10366, !10356, !10356}
!10367 = !DILocation(line: 2049, column: 1, scope: !10350)
!10368 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10158, file: !10158, line: 2403, type: !10369, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10371)
!10369 = !DISubroutineType(types: !10370)
!10370 = !{!154, !1602}
!10371 = !{!10372}
!10372 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10368, file: !10158, line: 2403, type: !1602)
!10373 = !DILocation(line: 0, scope: !10368)
!10374 = !DILocation(line: 2405, column: 20, scope: !10368)
!10375 = !DILocation(line: 2405, column: 10, scope: !10368)
!10376 = !DILocation(line: 2405, column: 3, scope: !10368)
!10377 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10158, file: !10158, line: 1770, type: !10159, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10378)
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10377, file: !10158, line: 1770, type: !1602)
!10380 = !DILocation(line: 0, scope: !10377)
!10381 = !DILocation(line: 1772, column: 11, scope: !10377)
!10382 = !DILocation(line: 1772, column: 46, scope: !10377)
!10383 = !DILocation(line: 1772, column: 3, scope: !10377)
!10384 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10158, file: !10158, line: 1934, type: !10189, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10385)
!10385 = !{!10386, !10387}
!10386 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10384, file: !10158, line: 1934, type: !1602)
!10387 = !DILocalVariable(name: "tmpreg", scope: !10384, file: !10158, line: 1936, type: !120)
!10388 = !DILocation(line: 0, scope: !10384)
!10389 = !DILocation(line: 1936, column: 3, scope: !10384)
!10390 = !DILocation(line: 1936, column: 17, scope: !10384)
!10391 = !DILocation(line: 1937, column: 20, scope: !10384)
!10392 = !DILocation(line: 1937, column: 10, scope: !10384)
!10393 = !DILocation(line: 1938, column: 10, scope: !10384)
!10394 = !DILocation(line: 1939, column: 20, scope: !10384)
!10395 = !DILocation(line: 1939, column: 10, scope: !10384)
!10396 = !DILocation(line: 1940, column: 10, scope: !10384)
!10397 = !DILocation(line: 1941, column: 1, scope: !10384)
!10398 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10158, file: !10158, line: 2426, type: !10399, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10401)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{null, !1602, !154}
!10401 = !{!10402, !10403}
!10402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10398, file: !10158, line: 2426, type: !1602)
!10403 = !DILocalVariable(name: "Value", arg: 2, scope: !10398, file: !10158, line: 2426, type: !154)
!10404 = !DILocation(line: 0, scope: !10398)
!10405 = !DILocation(line: 2428, column: 16, scope: !10398)
!10406 = !DILocation(line: 2428, column: 11, scope: !10398)
!10407 = !DILocation(line: 2428, column: 14, scope: !10398)
!10408 = !DILocation(line: 2429, column: 1, scope: !10398)
!10409 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1658, file: !1658, line: 205, type: !10410, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{!121, !1531}
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "dev", arg: 1, scope: !10409, file: !1658, line: 205, type: !1531)
!10414 = !DILocalVariable(name: "config", scope: !10409, file: !1658, line: 207, type: !9722)
!10415 = !DILocation(line: 0, scope: !10409)
!10416 = !DILocation(line: 207, column: 48, scope: !10409)
!10417 = !DILocation(line: 209, column: 36, scope: !10409)
!10418 = !DILocation(line: 209, column: 9, scope: !10409)
!10419 = !DILocation(line: 209, column: 2, scope: !10409)
!10420 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1658, file: !1658, line: 270, type: !10421, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!1497, !121}
!10423 = !{!10424}
!10424 = !DILocalVariable(name: "parity", arg: 1, scope: !10420, file: !1658, line: 270, type: !121)
!10425 = !DILocation(line: 0, scope: !10420)
!10426 = !DILocation(line: 272, column: 2, scope: !10420)
!10427 = !DILocation(line: 281, column: 1, scope: !10420)
!10428 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1658, file: !1658, line: 220, type: !10410, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10429)
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "dev", arg: 1, scope: !10428, file: !1658, line: 220, type: !1531)
!10431 = !DILocalVariable(name: "config", scope: !10428, file: !1658, line: 222, type: !9722)
!10432 = !DILocation(line: 0, scope: !10428)
!10433 = !DILocation(line: 222, column: 48, scope: !10428)
!10434 = !DILocation(line: 224, column: 44, scope: !10428)
!10435 = !DILocation(line: 224, column: 9, scope: !10428)
!10436 = !DILocation(line: 224, column: 2, scope: !10428)
!10437 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1658, file: !1658, line: 304, type: !10438, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!1511, !121}
!10440 = !{!10441}
!10441 = !DILocalVariable(name: "sb", arg: 1, scope: !10437, file: !1658, line: 304, type: !121)
!10442 = !DILocation(line: 0, scope: !10437)
!10443 = !DILocation(line: 306, column: 2, scope: !10437)
!10444 = !DILocation(line: 0, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10437, file: !1658, line: 306, column: 14)
!10446 = !DILocation(line: 323, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1658, file: !1658, line: 235, type: !10410, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10448)
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !1658, line: 235, type: !1531)
!10450 = !DILocalVariable(name: "config", scope: !10447, file: !1658, line: 237, type: !9722)
!10451 = !DILocation(line: 0, scope: !10447)
!10452 = !DILocation(line: 237, column: 48, scope: !10447)
!10453 = !DILocation(line: 239, column: 39, scope: !10447)
!10454 = !DILocation(line: 239, column: 9, scope: !10447)
!10455 = !DILocation(line: 239, column: 2, scope: !10447)
!10456 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1658, file: !1658, line: 355, type: !10457, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10459)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!1504, !121, !121}
!10459 = !{!10460, !10461}
!10460 = !DILocalVariable(name: "db", arg: 1, scope: !10456, file: !1658, line: 355, type: !121)
!10461 = !DILocalVariable(name: "p", arg: 2, scope: !10456, file: !1658, line: 356, type: !121)
!10462 = !DILocation(line: 0, scope: !10456)
!10463 = !DILocation(line: 358, column: 2, scope: !10456)
!10464 = !DILocation(line: 384, column: 1, scope: !10456)
!10465 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1658, file: !1658, line: 250, type: !10410, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10466)
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "dev", arg: 1, scope: !10465, file: !1658, line: 250, type: !1531)
!10468 = !DILocalVariable(name: "config", scope: !10465, file: !1658, line: 252, type: !9722)
!10469 = !DILocation(line: 0, scope: !10465)
!10470 = !DILocation(line: 252, column: 48, scope: !10465)
!10471 = !DILocation(line: 254, column: 40, scope: !10465)
!10472 = !DILocation(line: 254, column: 9, scope: !10465)
!10473 = !DILocation(line: 254, column: 2, scope: !10465)
!10474 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1658, file: !1658, line: 409, type: !10475, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10477)
!10475 = !DISubroutineType(types: !10476)
!10476 = !{!1517, !121}
!10477 = !{!10478}
!10478 = !DILocalVariable(name: "fc", arg: 1, scope: !10474, file: !1658, line: 409, type: !121)
!10479 = !DILocation(line: 0, scope: !10474)
!10480 = !DILocation(line: 411, column: 9, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10474, file: !1658, line: 411, column: 6)
!10482 = !DILocation(line: 416, column: 1, scope: !10474)
!10483 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10158, file: !10158, line: 967, type: !10159, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10484)
!10484 = !{!10485}
!10485 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10483, file: !10158, line: 967, type: !1602)
!10486 = !DILocation(line: 0, scope: !10483)
!10487 = !DILocation(line: 969, column: 21, scope: !10483)
!10488 = !DILocation(line: 969, column: 3, scope: !10483)
!10489 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10158, file: !10158, line: 601, type: !10159, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10490)
!10490 = !{!10491}
!10491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10489, file: !10158, line: 601, type: !1602)
!10492 = !DILocation(line: 0, scope: !10489)
!10493 = !DILocation(line: 603, column: 21, scope: !10489)
!10494 = !DILocation(line: 603, column: 3, scope: !10489)
!10495 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10158, file: !10158, line: 820, type: !10159, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10496)
!10496 = !{!10497}
!10497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10495, file: !10158, line: 820, type: !1602)
!10498 = !DILocation(line: 0, scope: !10495)
!10499 = !DILocation(line: 822, column: 21, scope: !10495)
!10500 = !DILocation(line: 822, column: 3, scope: !10495)
!10501 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10158, file: !10158, line: 547, type: !10159, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10502)
!10502 = !{!10503}
!10503 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10501, file: !10158, line: 547, type: !1602)
!10504 = !DILocation(line: 0, scope: !10501)
!10505 = !DILocation(line: 549, column: 21, scope: !10501)
!10506 = !DILocation(line: 549, column: 3, scope: !10501)
!10507 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1658, file: !1658, line: 257, type: !10508, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10510)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!121, !1497}
!10510 = !{!10511}
!10511 = !DILocalVariable(name: "parity", arg: 1, scope: !10507, file: !1658, line: 257, type: !1497)
!10512 = !DILocation(line: 0, scope: !10507)
!10513 = !DILocation(line: 259, column: 2, scope: !10507)
!10514 = !DILocation(line: 268, column: 1, scope: !10507)
!10515 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1658, file: !1658, line: 283, type: !10516, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10518)
!10516 = !DISubroutineType(types: !10517)
!10517 = !{!121, !1511}
!10518 = !{!10519}
!10519 = !DILocalVariable(name: "sb", arg: 1, scope: !10515, file: !1658, line: 283, type: !1511)
!10520 = !DILocation(line: 0, scope: !10515)
!10521 = !DILocation(line: 285, column: 2, scope: !10515)
!10522 = !DILocation(line: 0, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10515, file: !1658, line: 285, column: 14)
!10524 = !DILocation(line: 302, column: 1, scope: !10515)
!10525 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1658, file: !1658, line: 325, type: !10526, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10528)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!121, !1504, !1497}
!10528 = !{!10529, !10530}
!10529 = !DILocalVariable(name: "db", arg: 1, scope: !10525, file: !1658, line: 325, type: !1504)
!10530 = !DILocalVariable(name: "p", arg: 2, scope: !10525, file: !1658, line: 326, type: !1497)
!10531 = !DILocation(line: 0, scope: !10525)
!10532 = !DILocation(line: 328, column: 2, scope: !10525)
!10533 = !DILocation(line: 353, column: 1, scope: !10525)
!10534 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1658, file: !1658, line: 393, type: !10535, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!121, !1517}
!10537 = !{!10538}
!10538 = !DILocalVariable(name: "fc", arg: 1, scope: !10534, file: !1658, line: 393, type: !1517)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 395, column: 9, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10534, file: !1658, line: 395, column: 6)
!10542 = !DILocation(line: 400, column: 1, scope: !10534)
!10543 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10158, file: !10158, line: 424, type: !10189, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10544)
!10544 = !{!10545}
!10545 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10543, file: !10158, line: 424, type: !1602)
!10546 = !DILocation(line: 0, scope: !10543)
!10547 = !DILocation(line: 426, column: 3, scope: !10543)
!10548 = !DILocation(line: 427, column: 1, scope: !10543)
!10549 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1658, file: !1658, line: 197, type: !10550, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10552)
!10550 = !DISubroutineType(types: !10551)
!10551 = !{null, !1531, !121}
!10552 = !{!10553, !10554, !10555}
!10553 = !DILocalVariable(name: "dev", arg: 1, scope: !10549, file: !1658, line: 197, type: !1531)
!10554 = !DILocalVariable(name: "parity", arg: 2, scope: !10549, file: !1658, line: 198, type: !121)
!10555 = !DILocalVariable(name: "config", scope: !10549, file: !1658, line: 200, type: !9722)
!10556 = !DILocation(line: 0, scope: !10549)
!10557 = !DILocation(line: 200, column: 48, scope: !10549)
!10558 = !DILocation(line: 202, column: 29, scope: !10549)
!10559 = !DILocation(line: 202, column: 2, scope: !10549)
!10560 = !DILocation(line: 203, column: 1, scope: !10549)
!10561 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1658, file: !1658, line: 212, type: !10550, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10562)
!10562 = !{!10563, !10564, !10565}
!10563 = !DILocalVariable(name: "dev", arg: 1, scope: !10561, file: !1658, line: 212, type: !1531)
!10564 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10561, file: !1658, line: 213, type: !121)
!10565 = !DILocalVariable(name: "config", scope: !10561, file: !1658, line: 215, type: !9722)
!10566 = !DILocation(line: 0, scope: !10561)
!10567 = !DILocation(line: 215, column: 48, scope: !10561)
!10568 = !DILocation(line: 217, column: 37, scope: !10561)
!10569 = !DILocation(line: 217, column: 2, scope: !10561)
!10570 = !DILocation(line: 218, column: 1, scope: !10561)
!10571 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1658, file: !1658, line: 227, type: !10550, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10572)
!10572 = !{!10573, !10574, !10575}
!10573 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !1658, line: 227, type: !1531)
!10574 = !DILocalVariable(name: "databits", arg: 2, scope: !10571, file: !1658, line: 228, type: !121)
!10575 = !DILocalVariable(name: "config", scope: !10571, file: !1658, line: 230, type: !9722)
!10576 = !DILocation(line: 0, scope: !10571)
!10577 = !DILocation(line: 230, column: 48, scope: !10571)
!10578 = !DILocation(line: 232, column: 32, scope: !10571)
!10579 = !DILocation(line: 232, column: 2, scope: !10571)
!10580 = !DILocation(line: 233, column: 1, scope: !10571)
!10581 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1658, file: !1658, line: 242, type: !10550, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10582)
!10582 = !{!10583, !10584, !10585}
!10583 = !DILocalVariable(name: "dev", arg: 1, scope: !10581, file: !1658, line: 242, type: !1531)
!10584 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10581, file: !1658, line: 243, type: !121)
!10585 = !DILocalVariable(name: "config", scope: !10581, file: !1658, line: 245, type: !9722)
!10586 = !DILocation(line: 0, scope: !10581)
!10587 = !DILocation(line: 245, column: 48, scope: !10581)
!10588 = !DILocation(line: 247, column: 33, scope: !10581)
!10589 = !DILocation(line: 247, column: 2, scope: !10581)
!10590 = !DILocation(line: 248, column: 1, scope: !10581)
!10591 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1658, file: !1658, line: 107, type: !10550, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10592)
!10592 = !{!10593, !10594, !10595, !10596, !10597}
!10593 = !DILocalVariable(name: "dev", arg: 1, scope: !10591, file: !1658, line: 107, type: !1531)
!10594 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10591, file: !1658, line: 107, type: !121)
!10595 = !DILocalVariable(name: "config", scope: !10591, file: !1658, line: 109, type: !9722)
!10596 = !DILocalVariable(name: "data", scope: !10591, file: !1658, line: 110, type: !9845)
!10597 = !DILocalVariable(name: "clock_rate", scope: !10591, file: !1658, line: 112, type: !121)
!10598 = !DILocation(line: 0, scope: !10591)
!10599 = !DILocation(line: 109, column: 48, scope: !10591)
!10600 = !DILocation(line: 110, column: 38, scope: !10591)
!10601 = !DILocation(line: 112, column: 2, scope: !10591)
!10602 = !DILocation(line: 123, column: 36, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !1658, line: 123, column: 7)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !1658, line: 122, column: 9)
!10605 = distinct !DILexicalBlock(scope: !10591, file: !1658, line: 115, column: 6)
!10606 = !DILocation(line: 124, column: 42, scope: !10603)
!10607 = !DILocation(line: 123, column: 7, scope: !10603)
!10608 = !DILocation(line: 125, column: 22, scope: !10603)
!10609 = !DILocation(line: 123, column: 7, scope: !10604)
!10610 = !DILocation(line: 176, column: 36, scope: !10591)
!10611 = !DILocation(line: 176, column: 3, scope: !10591)
!10612 = !DILocation(line: 179, column: 32, scope: !10591)
!10613 = !DILocation(line: 180, column: 10, scope: !10591)
!10614 = !DILocation(line: 179, column: 3, scope: !10591)
!10615 = !DILocation(line: 195, column: 1, scope: !10591)
!10616 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10158, file: !10158, line: 410, type: !10189, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10617)
!10617 = !{!10618}
!10618 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10616, file: !10158, line: 410, type: !1602)
!10619 = !DILocation(line: 0, scope: !10616)
!10620 = !DILocation(line: 412, column: 3, scope: !10616)
!10621 = !DILocation(line: 413, column: 1, scope: !10616)
!10622 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !840, file: !840, line: 216, type: !1635, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10623)
!10623 = !{!10624, !10625, !10626, !10627}
!10624 = !DILocalVariable(name: "dev", arg: 1, scope: !10622, file: !840, line: 216, type: !1531)
!10625 = !DILocalVariable(name: "sys", arg: 2, scope: !10622, file: !840, line: 217, type: !934)
!10626 = !DILocalVariable(name: "rate", arg: 3, scope: !10622, file: !840, line: 218, type: !890)
!10627 = !DILocalVariable(name: "api", scope: !10622, file: !840, line: 220, type: !1613)
!10628 = !DILocation(line: 0, scope: !10622)
!10629 = !DILocation(line: 221, column: 49, scope: !10622)
!10630 = !DILocation(line: 223, column: 11, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10622, file: !840, line: 223, column: 6)
!10632 = !DILocation(line: 223, column: 20, scope: !10631)
!10633 = !DILocation(line: 223, column: 6, scope: !10622)
!10634 = !DILocation(line: 227, column: 9, scope: !10622)
!10635 = !DILocation(line: 227, column: 2, scope: !10622)
!10636 = !DILocation(line: 228, column: 1, scope: !10622)
!10637 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10158, file: !10158, line: 615, type: !10638, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10640)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{null, !1602, !121}
!10640 = !{!10641, !10642}
!10641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10637, file: !10158, line: 615, type: !1602)
!10642 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10637, file: !10158, line: 615, type: !121)
!10643 = !DILocation(line: 0, scope: !10637)
!10644 = !DILocation(line: 617, column: 3, scope: !10637)
!10645 = !DILocation(line: 618, column: 1, scope: !10637)
!10646 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10158, file: !10158, line: 1020, type: !10647, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !1602, !121, !121, !121}
!10649 = !{!10650, !10651, !10652, !10653}
!10650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10646, file: !10158, line: 1020, type: !1602)
!10651 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10646, file: !10158, line: 1020, type: !121)
!10652 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10646, file: !10158, line: 1020, type: !121)
!10653 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10646, file: !10158, line: 1021, type: !121)
!10654 = !DILocation(line: 0, scope: !10646)
!10655 = !DILocation(line: 1029, column: 30, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !10158, line: 1028, column: 3)
!10657 = distinct !DILexicalBlock(scope: !10646, file: !10158, line: 1023, column: 7)
!10658 = !DILocation(line: 1029, column: 19, scope: !10656)
!10659 = !DILocation(line: 1029, column: 13, scope: !10656)
!10660 = !DILocation(line: 1029, column: 17, scope: !10656)
!10661 = !DILocation(line: 1031, column: 1, scope: !10646)
!10662 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10158, file: !10158, line: 949, type: !10638, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10663)
!10663 = !{!10664, !10665}
!10664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10662, file: !10158, line: 949, type: !1602)
!10665 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10662, file: !10158, line: 949, type: !121)
!10666 = !DILocation(line: 0, scope: !10662)
!10667 = !DILocation(line: 951, column: 3, scope: !10662)
!10668 = !DILocation(line: 952, column: 1, scope: !10662)
!10669 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10158, file: !10158, line: 588, type: !10638, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10670)
!10670 = !{!10671, !10672}
!10671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10669, file: !10158, line: 588, type: !1602)
!10672 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10669, file: !10158, line: 588, type: !121)
!10673 = !DILocation(line: 0, scope: !10669)
!10674 = !DILocation(line: 590, column: 3, scope: !10669)
!10675 = !DILocation(line: 591, column: 1, scope: !10669)
!10676 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10158, file: !10158, line: 805, type: !10638, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10677)
!10677 = !{!10678, !10679}
!10678 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10676, file: !10158, line: 805, type: !1602)
!10679 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10676, file: !10158, line: 805, type: !121)
!10680 = !DILocation(line: 0, scope: !10676)
!10681 = !DILocation(line: 807, column: 3, scope: !10676)
!10682 = !DILocation(line: 808, column: 1, scope: !10676)
!10683 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10158, file: !10158, line: 532, type: !10638, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10684)
!10684 = !{!10685, !10686}
!10685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10683, file: !10158, line: 532, type: !1602)
!10686 = !DILocalVariable(name: "Parity", arg: 2, scope: !10683, file: !10158, line: 532, type: !121)
!10687 = !DILocation(line: 0, scope: !10683)
!10688 = !DILocation(line: 534, column: 3, scope: !10683)
!10689 = !DILocation(line: 535, column: 1, scope: !10683)
!10690 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10158, file: !10158, line: 1737, type: !10159, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10691)
!10691 = !{!10692}
!10692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10690, file: !10158, line: 1737, type: !1602)
!10693 = !DILocation(line: 0, scope: !10690)
!10694 = !DILocation(line: 1739, column: 11, scope: !10690)
!10695 = !DILocation(line: 1739, column: 3, scope: !10690)
!10696 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10158, file: !10158, line: 1748, type: !10159, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10697)
!10697 = !{!10698}
!10698 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10696, file: !10158, line: 1748, type: !1602)
!10699 = !DILocation(line: 0, scope: !10696)
!10700 = !DILocation(line: 1750, column: 11, scope: !10696)
!10701 = !DILocation(line: 1750, column: 45, scope: !10696)
!10702 = !DILocation(line: 1750, column: 3, scope: !10696)
!10703 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10158, file: !10158, line: 1827, type: !10159, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10704)
!10704 = !{!10705}
!10705 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10703, file: !10158, line: 1827, type: !1602)
!10706 = !DILocation(line: 0, scope: !10703)
!10707 = !DILocation(line: 1829, column: 11, scope: !10703)
!10708 = !DILocation(line: 1829, column: 46, scope: !10703)
!10709 = !DILocation(line: 1829, column: 3, scope: !10703)
!10710 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10158, file: !10158, line: 1992, type: !10189, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10711)
!10711 = !{!10712}
!10712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10710, file: !10158, line: 1992, type: !1602)
!10713 = !DILocation(line: 0, scope: !10710)
!10714 = !DILocation(line: 1994, column: 3, scope: !10710)
!10715 = !DILocation(line: 1995, column: 1, scope: !10710)
!10716 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10158, file: !10158, line: 1877, type: !10189, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10717)
!10717 = !{!10718, !10719}
!10718 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10716, file: !10158, line: 1877, type: !1602)
!10719 = !DILocalVariable(name: "tmpreg", scope: !10716, file: !10158, line: 1879, type: !120)
!10720 = !DILocation(line: 0, scope: !10716)
!10721 = !DILocation(line: 1879, column: 3, scope: !10716)
!10722 = !DILocation(line: 1879, column: 17, scope: !10716)
!10723 = !DILocation(line: 1880, column: 20, scope: !10716)
!10724 = !DILocation(line: 1880, column: 10, scope: !10716)
!10725 = !DILocation(line: 1881, column: 10, scope: !10716)
!10726 = !DILocation(line: 1882, column: 20, scope: !10716)
!10727 = !DILocation(line: 1882, column: 10, scope: !10716)
!10728 = !DILocation(line: 1883, column: 10, scope: !10716)
!10729 = !DILocation(line: 1884, column: 1, scope: !10716)
!10730 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10158, file: !10158, line: 1896, type: !10189, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10731)
!10731 = !{!10732, !10733}
!10732 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10730, file: !10158, line: 1896, type: !1602)
!10733 = !DILocalVariable(name: "tmpreg", scope: !10730, file: !10158, line: 1898, type: !120)
!10734 = !DILocation(line: 0, scope: !10730)
!10735 = !DILocation(line: 1898, column: 3, scope: !10730)
!10736 = !DILocation(line: 1898, column: 17, scope: !10730)
!10737 = !DILocation(line: 1899, column: 20, scope: !10730)
!10738 = !DILocation(line: 1899, column: 10, scope: !10730)
!10739 = !DILocation(line: 1900, column: 10, scope: !10730)
!10740 = !DILocation(line: 1901, column: 20, scope: !10730)
!10741 = !DILocation(line: 1901, column: 10, scope: !10730)
!10742 = !DILocation(line: 1902, column: 10, scope: !10730)
!10743 = !DILocation(line: 1903, column: 1, scope: !10730)
!10744 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10158, file: !10158, line: 1915, type: !10189, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10745)
!10745 = !{!10746, !10747}
!10746 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10744, file: !10158, line: 1915, type: !1602)
!10747 = !DILocalVariable(name: "tmpreg", scope: !10744, file: !10158, line: 1917, type: !120)
!10748 = !DILocation(line: 0, scope: !10744)
!10749 = !DILocation(line: 1917, column: 3, scope: !10744)
!10750 = !DILocation(line: 1917, column: 17, scope: !10744)
!10751 = !DILocation(line: 1918, column: 20, scope: !10744)
!10752 = !DILocation(line: 1918, column: 10, scope: !10744)
!10753 = !DILocation(line: 1919, column: 10, scope: !10744)
!10754 = !DILocation(line: 1920, column: 20, scope: !10744)
!10755 = !DILocation(line: 1920, column: 10, scope: !10744)
!10756 = !DILocation(line: 1921, column: 10, scope: !10744)
!10757 = !DILocation(line: 1922, column: 1, scope: !10744)
!10758 = !DILocation(line: 0, scope: !1744)
!10759 = !DILocation(line: 1914, column: 1, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !1744, file: !1658, line: 1914, column: 1)
!10761 = !DILocation(line: 1914, column: 1, scope: !1744)
!10762 = !DILocation(line: 0, scope: !1793)
!10763 = !DILocation(line: 1914, column: 1, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !1793, file: !1658, line: 1914, column: 1)
!10765 = !DILocation(line: 1914, column: 1, scope: !1793)
!10766 = !DILocation(line: 0, scope: !1810)
!10767 = !DILocation(line: 1914, column: 1, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !1810, file: !1658, line: 1914, column: 1)
!10769 = !DILocation(line: 1914, column: 1, scope: !1810)
!10770 = !DILocation(line: 0, scope: !1827)
!10771 = !DILocation(line: 1914, column: 1, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !1827, file: !1658, line: 1914, column: 1)
!10773 = !DILocation(line: 1914, column: 1, scope: !1827)
!10774 = !DILocation(line: 0, scope: !1844)
!10775 = !DILocation(line: 1914, column: 1, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !1844, file: !1658, line: 1914, column: 1)
!10777 = !DILocation(line: 1914, column: 1, scope: !1844)
!10778 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1658, file: !1658, line: 987, type: !1582, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10779)
!10779 = !{!10780, !10781}
!10780 = !DILocalVariable(name: "dev", arg: 1, scope: !10778, file: !1658, line: 987, type: !1531)
!10781 = !DILocalVariable(name: "data", scope: !10778, file: !1658, line: 989, type: !9845)
!10782 = !DILocation(line: 0, scope: !10778)
!10783 = !DILocation(line: 989, column: 38, scope: !10778)
!10784 = !DILocation(line: 1014, column: 12, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10778, file: !1658, line: 1014, column: 6)
!10786 = !DILocation(line: 1014, column: 6, scope: !10785)
!10787 = !DILocation(line: 1014, column: 6, scope: !10778)
!10788 = !DILocation(line: 1015, column: 28, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10785, file: !1658, line: 1014, column: 21)
!10790 = !DILocation(line: 1015, column: 3, scope: !10789)
!10791 = !DILocation(line: 1016, column: 2, scope: !10789)
!10792 = !DILocation(line: 1059, column: 1, scope: !10778)
!10793 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1658, file: !1658, line: 1583, type: !1552, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10794)
!10794 = !{!10795, !10796, !10797, !10798, !10799, !10800}
!10795 = !DILocalVariable(name: "dev", arg: 1, scope: !10793, file: !1658, line: 1583, type: !1531)
!10796 = !DILocalVariable(name: "config", scope: !10793, file: !1658, line: 1585, type: !9722)
!10797 = !DILocalVariable(name: "data", scope: !10793, file: !1658, line: 1586, type: !9845)
!10798 = !DILocalVariable(name: "ll_parity", scope: !10793, file: !1658, line: 1587, type: !121)
!10799 = !DILocalVariable(name: "ll_datawidth", scope: !10793, file: !1658, line: 1588, type: !121)
!10800 = !DILocalVariable(name: "err", scope: !10793, file: !1658, line: 1589, type: !103)
!10801 = !DILocation(line: 0, scope: !10793)
!10802 = !DILocation(line: 1585, column: 48, scope: !10793)
!10803 = !DILocation(line: 1586, column: 38, scope: !10793)
!10804 = !DILocation(line: 1591, column: 2, scope: !10793)
!10805 = !DILocation(line: 1593, column: 29, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1593, column: 6)
!10807 = !DILocation(line: 1593, column: 7, scope: !10806)
!10808 = !DILocation(line: 1593, column: 6, scope: !10793)
!10809 = !DILocation(line: 1599, column: 31, scope: !10793)
!10810 = !DILocation(line: 1599, column: 71, scope: !10793)
!10811 = !DILocation(line: 1599, column: 8, scope: !10793)
!10812 = !DILocation(line: 1600, column: 10, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1600, column: 6)
!10814 = !DILocation(line: 1600, column: 6, scope: !10793)
!10815 = !DILocation(line: 1616, column: 36, scope: !10793)
!10816 = !DILocation(line: 1616, column: 8, scope: !10793)
!10817 = !DILocation(line: 1617, column: 10, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1617, column: 6)
!10819 = !DILocation(line: 1617, column: 6, scope: !10793)
!10820 = !DILocation(line: 1621, column: 27, scope: !10793)
!10821 = !DILocation(line: 1621, column: 2, scope: !10793)
!10822 = !DILocation(line: 1624, column: 40, scope: !10793)
!10823 = !DILocation(line: 1624, column: 2, scope: !10793)
!10824 = !DILocation(line: 1630, column: 14, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1630, column: 6)
!10826 = !DILocation(line: 1630, column: 6, scope: !10793)
!10827 = !DILocation(line: 1638, column: 2, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !1658, line: 1634, column: 34)
!10829 = distinct !DILexicalBlock(scope: !10825, file: !1658, line: 1634, column: 13)
!10830 = !DILocation(line: 0, scope: !10825)
!10831 = !DILocation(line: 1649, column: 35, scope: !10793)
!10832 = !DILocation(line: 1649, column: 2, scope: !10793)
!10833 = !DILocation(line: 1654, column: 14, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1654, column: 6)
!10835 = !DILocation(line: 1654, column: 6, scope: !10793)
!10836 = !DILocation(line: 1655, column: 3, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10834, file: !1658, line: 1654, column: 31)
!10838 = !DILocation(line: 1656, column: 2, scope: !10837)
!10839 = !DILocation(line: 1659, column: 37, scope: !10793)
!10840 = !DILocation(line: 1659, column: 2, scope: !10793)
!10841 = !DILocation(line: 1662, column: 14, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10793, file: !1658, line: 1662, column: 6)
!10843 = !DILocation(line: 1662, column: 6, scope: !10793)
!10844 = !DILocation(line: 1663, column: 37, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10842, file: !1658, line: 1662, column: 27)
!10846 = !DILocation(line: 1663, column: 3, scope: !10845)
!10847 = !DILocation(line: 1664, column: 2, scope: !10845)
!10848 = !DILocation(line: 1684, column: 26, scope: !10793)
!10849 = !DILocation(line: 1684, column: 2, scope: !10793)
!10850 = !DILocation(line: 1701, column: 10, scope: !10793)
!10851 = !DILocation(line: 1701, column: 2, scope: !10793)
!10852 = !DILocation(line: 1722, column: 2, scope: !10793)
!10853 = !DILocation(line: 1724, column: 1, scope: !10793)
!10854 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1658, file: !1658, line: 651, type: !1582, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10855)
!10855 = !{!10856, !10857, !10858}
!10856 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !1658, line: 651, type: !1531)
!10857 = !DILocalVariable(name: "data", scope: !10854, file: !1658, line: 653, type: !9845)
!10858 = !DILocalVariable(name: "clk", scope: !10854, file: !1658, line: 654, type: !10859)
!10859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!10860 = !DILocation(line: 0, scope: !10854)
!10861 = !DILocation(line: 653, column: 38, scope: !10854)
!10862 = !DILocation(line: 656, column: 8, scope: !10854)
!10863 = !DILocation(line: 656, column: 14, scope: !10854)
!10864 = !DILocation(line: 657, column: 1, scope: !10854)
!10865 = distinct !DISubprogram(name: "device_is_ready", scope: !8304, file: !8304, line: 47, type: !10866, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10868)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!157, !1531}
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10865, file: !8304, line: 47, type: !1531)
!10870 = !DILocation(line: 0, scope: !10865)
!10871 = !DILocation(line: 55, column: 2, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10865, file: !8304, line: 55, column: 2)
!10873 = !{i64 2155751574}
!10874 = !DILocation(line: 56, column: 9, scope: !10865)
!10875 = !DILocation(line: 56, column: 2, scope: !10865)
!10876 = distinct !DISubprogram(name: "clock_control_on", scope: !840, file: !840, line: 123, type: !1620, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10877)
!10877 = !{!10878, !10879, !10880}
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10876, file: !840, line: 123, type: !1531)
!10879 = !DILocalVariable(name: "sys", arg: 2, scope: !10876, file: !840, line: 124, type: !934)
!10880 = !DILocalVariable(name: "api", scope: !10876, file: !840, line: 126, type: !1613)
!10881 = !DILocation(line: 0, scope: !10876)
!10882 = !DILocation(line: 127, column: 49, scope: !10876)
!10883 = !DILocation(line: 129, column: 14, scope: !10876)
!10884 = !DILocation(line: 129, column: 9, scope: !10876)
!10885 = !DILocation(line: 129, column: 2, scope: !10876)
!10886 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1717, file: !1717, line: 342, type: !10887, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10889)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{!103, !1780, !154}
!10889 = !{!10890, !10891, !10892, !10893}
!10890 = !DILocalVariable(name: "config", arg: 1, scope: !10886, file: !1717, line: 342, type: !1780)
!10891 = !DILocalVariable(name: "id", arg: 2, scope: !10886, file: !1717, line: 343, type: !154)
!10892 = !DILocalVariable(name: "ret", scope: !10886, file: !1717, line: 345, type: !103)
!10893 = !DILocalVariable(name: "state", scope: !10886, file: !1717, line: 346, type: !1720)
!10894 = !DILocation(line: 0, scope: !10886)
!10895 = !DILocation(line: 346, column: 2, scope: !10886)
!10896 = !DILocation(line: 348, column: 8, scope: !10886)
!10897 = !DILocation(line: 349, column: 10, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10886, file: !1717, line: 349, column: 6)
!10899 = !DILocation(line: 349, column: 6, scope: !10886)
!10900 = !DILocation(line: 353, column: 44, scope: !10886)
!10901 = !DILocation(line: 353, column: 9, scope: !10886)
!10902 = !DILocation(line: 353, column: 2, scope: !10886)
!10903 = !DILocation(line: 354, column: 1, scope: !10886)
!10904 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10158, file: !10158, line: 497, type: !10638, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10905)
!10905 = !{!10906, !10907, !10908}
!10906 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10904, file: !10158, line: 497, type: !1602)
!10907 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10904, file: !10158, line: 497, type: !121)
!10908 = !DILocalVariable(name: "val", scope: !10909, file: !10158, line: 499, type: !121)
!10909 = distinct !DILexicalBlock(scope: !10904, file: !10158, line: 499, column: 3)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 499, column: 3, scope: !10909)
!10912 = !DILocation(line: 0, scope: !10198, inlinedAt: !10913)
!10913 = distinct !DILocation(line: 499, column: 3, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10909, file: !10158, line: 499, column: 3)
!10915 = !DILocation(line: 480, column: 4, scope: !10198, inlinedAt: !10913)
!10916 = !DILocation(line: 499, column: 3, scope: !10914)
!10917 = !DILocation(line: 0, scope: !10909)
!10918 = !DILocation(line: 0, scope: !10211, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 499, column: 3, scope: !10909)
!10920 = !DILocation(line: 531, column: 4, scope: !10211, inlinedAt: !10919)
!10921 = distinct !{!10921, !10911, !10911}
!10922 = !DILocation(line: 500, column: 1, scope: !10904)
!10923 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10158, file: !10158, line: 850, type: !10647, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10924)
!10924 = !{!10925, !10926, !10927, !10928}
!10925 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10923, file: !10158, line: 850, type: !1602)
!10926 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10923, file: !10158, line: 850, type: !121)
!10927 = !DILocalVariable(name: "Parity", arg: 3, scope: !10923, file: !10158, line: 850, type: !121)
!10928 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10923, file: !10158, line: 851, type: !121)
!10929 = !DILocation(line: 0, scope: !10923)
!10930 = !DILocation(line: 853, column: 3, scope: !10923)
!10931 = !DILocation(line: 854, column: 3, scope: !10923)
!10932 = !DILocation(line: 855, column: 1, scope: !10923)
!10933 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10158, file: !10158, line: 1337, type: !10189, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10934)
!10934 = !{!10935}
!10935 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10933, file: !10158, line: 1337, type: !1602)
!10936 = !DILocation(line: 0, scope: !10933)
!10937 = !DILocation(line: 1339, column: 3, scope: !10933)
!10938 = !DILocation(line: 1340, column: 1, scope: !10933)
!10939 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1717, file: !1717, line: 316, type: !10940, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!103, !1780, !1720}
!10942 = !{!10943, !10944, !10945}
!10943 = !DILocalVariable(name: "config", arg: 1, scope: !10939, file: !1717, line: 317, type: !1780)
!10944 = !DILocalVariable(name: "state", arg: 2, scope: !10939, file: !1717, line: 318, type: !1720)
!10945 = !DILocalVariable(name: "reg", scope: !10939, file: !1717, line: 320, type: !22)
!10946 = !DILocation(line: 0, scope: !10939)
!10947 = !DILocation(line: 329, column: 39, scope: !10939)
!10948 = !DILocation(line: 329, column: 52, scope: !10939)
!10949 = !DILocation(line: 329, column: 9, scope: !10939)
!10950 = !DILocation(line: 329, column: 2, scope: !10939)
!10951 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10866, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !10952)
!10952 = !{!10953}
!10953 = !DILocalVariable(name: "dev", arg: 1, scope: !10951, file: !141, line: 730, type: !1531)
!10954 = !DILocation(line: 0, scope: !10951)
!10955 = !DILocation(line: 732, column: 9, scope: !10951)
!10956 = !DILocation(line: 732, column: 2, scope: !10951)
!10957 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1929, file: !1929, line: 270, type: !1935, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !10958)
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "dev", arg: 1, scope: !10957, file: !1929, line: 270, type: !1937)
!10960 = !DILocation(line: 0, scope: !10957)
!10961 = !DILocation(line: 274, column: 2, scope: !10957)
!10962 = !DILocation(line: 275, column: 12, scope: !10957)
!10963 = !DILocation(line: 276, column: 15, scope: !10957)
!10964 = !DILocation(line: 277, column: 16, scope: !10957)
!10965 = !DILocation(line: 278, column: 15, scope: !10957)
!10966 = !DILocation(line: 279, column: 16, scope: !10957)
!10967 = !DILocation(line: 282, column: 2, scope: !10957)
!10968 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6145, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !10969)
!10969 = !{!10970, !10971}
!10970 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10968, file: !515, line: 1814, type: !782)
!10971 = !DILocalVariable(name: "priority", arg: 2, scope: !10968, file: !515, line: 1814, type: !121)
!10972 = !DILocation(line: 0, scope: !10968)
!10973 = !DILocation(line: 1822, column: 46, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !515, line: 1821, column: 3)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !515, line: 1816, column: 7)
!10976 = !DILocation(line: 1824, column: 1, scope: !10968)
!10977 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1929, file: !1929, line: 118, type: !6048, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !10978)
!10978 = !{!10979, !10980}
!10979 = !DILocalVariable(name: "arg", arg: 1, scope: !10977, file: !1929, line: 118, type: !102)
!10980 = !DILocalVariable(name: "dticks", scope: !10977, file: !1929, line: 121, type: !121)
!10981 = !DILocation(line: 0, scope: !10977)
!10982 = !DILocation(line: 124, column: 2, scope: !10977)
!10983 = !DILocation(line: 129, column: 17, scope: !10977)
!10984 = !DILocation(line: 129, column: 14, scope: !10977)
!10985 = !DILocation(line: 130, column: 15, scope: !10977)
!10986 = !DILocation(line: 145, column: 27, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !1929, line: 132, column: 16)
!10988 = distinct !DILexicalBlock(scope: !10977, file: !1929, line: 132, column: 6)
!10989 = !DILocation(line: 145, column: 25, scope: !10987)
!10990 = !DILocation(line: 145, column: 45, scope: !10987)
!10991 = !DILocation(line: 146, column: 30, scope: !10987)
!10992 = !DILocation(line: 146, column: 20, scope: !10987)
!10993 = !DILocation(line: 147, column: 3, scope: !10987)
!10994 = !DILocation(line: 151, column: 2, scope: !10977)
!10995 = !DILocation(line: 152, column: 1, scope: !10977)
!10996 = distinct !DISubprogram(name: "elapsed", scope: !1929, file: !1929, line: 85, type: !6192, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000}
!10998 = !DILocalVariable(name: "val1", scope: !10996, file: !1929, line: 87, type: !121)
!10999 = !DILocalVariable(name: "ctrl", scope: !10996, file: !1929, line: 88, type: !121)
!11000 = !DILocalVariable(name: "val2", scope: !10996, file: !1929, line: 89, type: !121)
!11001 = !DILocation(line: 87, column: 27, scope: !10996)
!11002 = !DILocation(line: 0, scope: !10996)
!11003 = !DILocation(line: 88, column: 27, scope: !10996)
!11004 = !DILocation(line: 89, column: 27, scope: !10996)
!11005 = !DILocation(line: 105, column: 12, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10996, file: !1929, line: 105, column: 6)
!11007 = !DILocation(line: 106, column: 6, scope: !11006)
!11008 = !DILocation(line: 107, column: 16, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11006, file: !1929, line: 106, column: 24)
!11010 = !DILocation(line: 111, column: 18, scope: !11009)
!11011 = !DILocation(line: 112, column: 2, scope: !11009)
!11012 = !DILocation(line: 114, column: 20, scope: !10996)
!11013 = !DILocation(line: 114, column: 30, scope: !10996)
!11014 = !DILocation(line: 114, column: 28, scope: !10996)
!11015 = !DILocation(line: 114, column: 2, scope: !10996)
!11016 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1929, file: !1929, line: 154, type: !11017, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11019)
!11017 = !DISubroutineType(types: !11018)
!11018 = !{null, !756, !157}
!11019 = !{!11020, !11021, !11022, !11023, !11024, !11025, !11026, !11031, !11032}
!11020 = !DILocalVariable(name: "ticks", arg: 1, scope: !11016, file: !1929, line: 154, type: !756)
!11021 = !DILocalVariable(name: "idle", arg: 2, scope: !11016, file: !1929, line: 154, type: !157)
!11022 = !DILocalVariable(name: "delay", scope: !11016, file: !1929, line: 169, type: !121)
!11023 = !DILocalVariable(name: "val1", scope: !11016, file: !1929, line: 170, type: !121)
!11024 = !DILocalVariable(name: "val2", scope: !11016, file: !1929, line: 170, type: !121)
!11025 = !DILocalVariable(name: "last_load_", scope: !11016, file: !1929, line: 171, type: !121)
!11026 = !DILocalVariable(name: "key", scope: !11016, file: !1929, line: 176, type: !11027)
!11027 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !11028)
!11028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !11029)
!11029 = !{!11030}
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11028, file: !316, line: 33, baseType: !103, size: 32)
!11031 = !DILocalVariable(name: "pending", scope: !11016, file: !1929, line: 178, type: !121)
!11032 = !DILocalVariable(name: "unannounced", scope: !11016, file: !1929, line: 185, type: !121)
!11033 = !DILocation(line: 0, scope: !11016)
!11034 = !DILocation(line: 162, column: 49, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11016, file: !1929, line: 162, column: 6)
!11036 = !DILocation(line: 163, column: 17, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11035, file: !1929, line: 162, column: 78)
!11038 = !DILocation(line: 164, column: 13, scope: !11037)
!11039 = !DILocation(line: 165, column: 3, scope: !11037)
!11040 = !DILocation(line: 171, column: 24, scope: !11016)
!11041 = !DILocation(line: 173, column: 10, scope: !11016)
!11042 = !DILocation(line: 174, column: 10, scope: !11016)
!11043 = !DILocalVariable(name: "l", arg: 1, scope: !11044, file: !316, line: 136, type: !11047)
!11044 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !11045, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11048)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!11027, !11047}
!11047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!11048 = !{!11043, !11049}
!11049 = !DILocalVariable(name: "k", scope: !11044, file: !316, line: 139, type: !11027)
!11050 = !DILocation(line: 0, scope: !11044, inlinedAt: !11051)
!11051 = distinct !DILocation(line: 176, column: 25, scope: !11016)
!11052 = !DILocation(line: 55, column: 2, scope: !11053, inlinedAt: !11057)
!11053 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11054)
!11054 = !{!11055, !11056}
!11055 = !DILocalVariable(name: "key", scope: !11053, file: !5896, line: 44, type: !32)
!11056 = !DILocalVariable(name: "tmp", scope: !11053, file: !5896, line: 53, type: !32)
!11057 = distinct !DILocation(line: 145, column: 10, scope: !11044, inlinedAt: !11051)
!11058 = !{i64 2599675}
!11059 = !DILocation(line: 0, scope: !11053, inlinedAt: !11057)
!11060 = !DILocation(line: 178, column: 21, scope: !11016)
!11061 = !DILocation(line: 180, column: 18, scope: !11016)
!11062 = !DILocation(line: 182, column: 14, scope: !11016)
!11063 = !DILocation(line: 183, column: 15, scope: !11016)
!11064 = !DILocation(line: 185, column: 39, scope: !11016)
!11065 = !DILocation(line: 185, column: 37, scope: !11016)
!11066 = !DILocation(line: 187, column: 27, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11016, file: !1929, line: 187, column: 6)
!11068 = !DILocation(line: 187, column: 6, scope: !11016)
!11069 = !DILocation(line: 202, column: 27, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11067, file: !1929, line: 195, column: 9)
!11071 = !DILocation(line: 202, column: 48, scope: !11070)
!11072 = !DILocation(line: 203, column: 9, scope: !11070)
!11073 = !DILocation(line: 204, column: 11, scope: !11070)
!11074 = !DILocation(line: 205, column: 13, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11070, file: !1929, line: 205, column: 7)
!11076 = !DILocation(line: 205, column: 7, scope: !11070)
!11077 = !DILocation(line: 0, scope: !11067)
!11078 = !DILocation(line: 212, column: 18, scope: !11016)
!11079 = !DILocation(line: 214, column: 28, scope: !11016)
!11080 = !DILocation(line: 214, column: 16, scope: !11016)
!11081 = !DILocation(line: 215, column: 15, scope: !11016)
!11082 = !DILocation(line: 227, column: 11, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11016, file: !1929, line: 227, column: 6)
!11084 = !DILocation(line: 227, column: 6, scope: !11016)
!11085 = !DILocation(line: 228, column: 15, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11083, file: !1929, line: 227, column: 19)
!11087 = !DILocation(line: 228, column: 38, scope: !11086)
!11088 = !DILocation(line: 228, column: 24, scope: !11086)
!11089 = !DILocation(line: 229, column: 2, scope: !11086)
!11090 = !DILocation(line: 230, column: 24, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11083, file: !1929, line: 229, column: 9)
!11092 = !DILocation(line: 230, column: 15, scope: !11091)
!11093 = !DILocation(line: 0, scope: !11083)
!11094 = !DILocalVariable(name: "key", arg: 2, scope: !11095, file: !316, line: 190, type: !11027)
!11095 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !11096, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11098)
!11096 = !DISubroutineType(types: !11097)
!11097 = !{null, !11047, !11027}
!11098 = !{!11099, !11094}
!11099 = !DILocalVariable(name: "l", arg: 1, scope: !11095, file: !316, line: 189, type: !11047)
!11100 = !DILocation(line: 0, scope: !11095, inlinedAt: !11101)
!11101 = distinct !DILocation(line: 232, column: 2, scope: !11016)
!11102 = !DILocalVariable(name: "key", arg: 1, scope: !11103, file: !5896, line: 84, type: !32)
!11103 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11104)
!11104 = !{!11102}
!11105 = !DILocation(line: 0, scope: !11103, inlinedAt: !11106)
!11106 = distinct !DILocation(line: 215, column: 2, scope: !11095, inlinedAt: !11101)
!11107 = !DILocation(line: 95, column: 2, scope: !11103, inlinedAt: !11106)
!11108 = !{i64 2600492}
!11109 = !DILocation(line: 234, column: 1, scope: !11016)
!11110 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1929, file: !1929, line: 236, type: !6192, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11111)
!11111 = !{!11112, !11113}
!11112 = !DILocalVariable(name: "key", scope: !11110, file: !1929, line: 242, type: !11027)
!11113 = !DILocalVariable(name: "cyc", scope: !11110, file: !1929, line: 243, type: !121)
!11114 = !DILocation(line: 0, scope: !11044, inlinedAt: !11115)
!11115 = distinct !DILocation(line: 242, column: 25, scope: !11110)
!11116 = !DILocation(line: 55, column: 2, scope: !11053, inlinedAt: !11117)
!11117 = distinct !DILocation(line: 145, column: 10, scope: !11044, inlinedAt: !11115)
!11118 = !DILocation(line: 0, scope: !11053, inlinedAt: !11117)
!11119 = !DILocation(line: 0, scope: !11110)
!11120 = !DILocation(line: 243, column: 17, scope: !11110)
!11121 = !DILocation(line: 243, column: 29, scope: !11110)
!11122 = !DILocation(line: 243, column: 27, scope: !11110)
!11123 = !DILocation(line: 243, column: 43, scope: !11110)
!11124 = !DILocation(line: 243, column: 41, scope: !11110)
!11125 = !DILocation(line: 0, scope: !11095, inlinedAt: !11126)
!11126 = distinct !DILocation(line: 245, column: 2, scope: !11110)
!11127 = !DILocation(line: 0, scope: !11103, inlinedAt: !11128)
!11128 = distinct !DILocation(line: 215, column: 2, scope: !11095, inlinedAt: !11126)
!11129 = !DILocation(line: 95, column: 2, scope: !11103, inlinedAt: !11128)
!11130 = !DILocation(line: 246, column: 13, scope: !11110)
!11131 = !DILocation(line: 246, column: 2, scope: !11110)
!11132 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1929, file: !1929, line: 249, type: !6192, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !11133)
!11133 = !{!11134, !11135}
!11134 = !DILocalVariable(name: "key", scope: !11132, file: !1929, line: 251, type: !11027)
!11135 = !DILocalVariable(name: "ret", scope: !11132, file: !1929, line: 252, type: !121)
!11136 = !DILocation(line: 0, scope: !11044, inlinedAt: !11137)
!11137 = distinct !DILocation(line: 251, column: 25, scope: !11132)
!11138 = !DILocation(line: 55, column: 2, scope: !11053, inlinedAt: !11139)
!11139 = distinct !DILocation(line: 145, column: 10, scope: !11044, inlinedAt: !11137)
!11140 = !DILocation(line: 0, scope: !11053, inlinedAt: !11139)
!11141 = !DILocation(line: 0, scope: !11132)
!11142 = !DILocation(line: 252, column: 17, scope: !11132)
!11143 = !DILocation(line: 252, column: 29, scope: !11132)
!11144 = !DILocation(line: 252, column: 27, scope: !11132)
!11145 = !DILocation(line: 0, scope: !11095, inlinedAt: !11146)
!11146 = distinct !DILocation(line: 254, column: 2, scope: !11132)
!11147 = !DILocation(line: 0, scope: !11103, inlinedAt: !11148)
!11148 = distinct !DILocation(line: 215, column: 2, scope: !11095, inlinedAt: !11146)
!11149 = !DILocation(line: 95, column: 2, scope: !11103, inlinedAt: !11148)
!11150 = !DILocation(line: 255, column: 2, scope: !11132)
!11151 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1929, file: !1929, line: 258, type: !3339, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !317)
!11152 = !DILocation(line: 260, column: 6, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11151, file: !1929, line: 260, column: 6)
!11154 = !DILocation(line: 260, column: 16, scope: !11153)
!11155 = !DILocation(line: 260, column: 6, scope: !11151)
!11156 = !DILocation(line: 261, column: 17, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11153, file: !1929, line: 260, column: 34)
!11158 = !DILocation(line: 262, column: 2, scope: !11157)
!11159 = !DILocation(line: 263, column: 1, scope: !11151)
!11160 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1929, file: !1929, line: 265, type: !3339, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1851, retainedNodes: !317)
!11161 = !DILocation(line: 267, column: 16, scope: !11160)
!11162 = !DILocation(line: 268, column: 1, scope: !11160)
!11163 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11164, file: !11164, line: 9, type: !11165, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3103, retainedNodes: !11188)
!11164 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!103, !11167, !154, !11187}
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11168, size: 32)
!11168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11169)
!11169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1717, line: 60, size: 64, elements: !11170)
!11170 = !{!11171, !11186}
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11169, file: !1717, line: 69, baseType: !11172, size: 32)
!11172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11173, size: 32)
!11173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11174)
!11174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1717, line: 50, size: 64, elements: !11175)
!11175 = !{!11176, !11184, !11185}
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11174, file: !1717, line: 52, baseType: !11177, size: 32)
!11177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11178, size: 32)
!11178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11179)
!11179 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1728, line: 37, baseType: !11180)
!11180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1728, line: 32, size: 64, elements: !11181)
!11181 = !{!11182, !11183}
!11182 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11180, file: !1728, line: 34, baseType: !121, size: 32)
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11180, file: !1728, line: 36, baseType: !121, size: 32, offset: 32)
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11174, file: !1717, line: 54, baseType: !154, size: 8, offset: 32)
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11174, file: !1717, line: 56, baseType: !154, size: 8, offset: 40)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11169, file: !1717, line: 71, baseType: !154, size: 8, offset: 32)
!11187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11172, size: 32)
!11188 = !{!11189, !11190, !11191}
!11189 = !DILocalVariable(name: "config", arg: 1, scope: !11163, file: !11164, line: 9, type: !11167)
!11190 = !DILocalVariable(name: "id", arg: 2, scope: !11163, file: !11164, line: 9, type: !154)
!11191 = !DILocalVariable(name: "state", arg: 3, scope: !11163, file: !11164, line: 10, type: !11187)
!11192 = !DILocation(line: 0, scope: !11163)
!11193 = !DILocation(line: 12, column: 20, scope: !11163)
!11194 = !DILocation(line: 13, column: 27, scope: !11163)
!11195 = !DILocation(line: 13, column: 42, scope: !11163)
!11196 = !DILocation(line: 13, column: 19, scope: !11163)
!11197 = !DILocation(line: 13, column: 16, scope: !11163)
!11198 = !DILocation(line: 13, column: 2, scope: !11163)
!11199 = distinct !{!11199, !11198, !11200}
!11200 = !DILocation(line: 19, column: 2, scope: !11163)
!11201 = !DILocation(line: 14, column: 23, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !11164, line: 14, column: 7)
!11203 = distinct !DILexicalBlock(scope: !11163, file: !11164, line: 13, column: 54)
!11204 = !DILocation(line: 14, column: 10, scope: !11202)
!11205 = !DILocation(line: 18, column: 11, scope: !11203)
!11206 = !DILocation(line: 14, column: 7, scope: !11203)
!11207 = !DILocation(line: 22, column: 1, scope: !11163)
!11208 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2046, file: !2046, line: 193, type: !11209, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1964, retainedNodes: !11218)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{!103, !11211, !154, !22}
!11211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11212, size: 32)
!11212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11213)
!11213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1728, line: 37, baseType: !11214)
!11214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1728, line: 32, size: 64, elements: !11215)
!11215 = !{!11216, !11217}
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11214, file: !1728, line: 34, baseType: !121, size: 32)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11214, file: !1728, line: 36, baseType: !121, size: 32, offset: 32)
!11218 = !{!11219, !11220, !11221, !11222, !11223, !11224, !11225, !11226, !11228}
!11219 = !DILocalVariable(name: "pins", arg: 1, scope: !11208, file: !2046, line: 193, type: !11211)
!11220 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11208, file: !2046, line: 193, type: !154)
!11221 = !DILocalVariable(name: "reg", arg: 3, scope: !11208, file: !2046, line: 194, type: !22)
!11222 = !DILocalVariable(name: "pin", scope: !11208, file: !2046, line: 196, type: !121)
!11223 = !DILocalVariable(name: "mux", scope: !11208, file: !2046, line: 196, type: !121)
!11224 = !DILocalVariable(name: "pin_cgf", scope: !11208, file: !2046, line: 197, type: !121)
!11225 = !DILocalVariable(name: "ret", scope: !11208, file: !2046, line: 198, type: !103)
!11226 = !DILocalVariable(name: "i", scope: !11227, file: !2046, line: 209, type: !154)
!11227 = distinct !DILexicalBlock(scope: !11208, file: !2046, line: 209, column: 2)
!11228 = !DILocalVariable(name: "gpio_out", scope: !11229, file: !2046, line: 239, type: !121)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !2046, line: 238, column: 55)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !2046, line: 238, column: 14)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !2046, line: 236, column: 14)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !2046, line: 234, column: 7)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !2046, line: 209, column: 41)
!11234 = distinct !DILexicalBlock(scope: !11227, file: !2046, line: 209, column: 2)
!11235 = !DILocation(line: 0, scope: !11208)
!11236 = !DILocation(line: 0, scope: !11227)
!11237 = !DILocation(line: 209, column: 25, scope: !11234)
!11238 = !DILocation(line: 209, column: 2, scope: !11227)
!11239 = distinct !{!11239, !11238, !11240}
!11240 = !DILocation(line: 259, column: 2, scope: !11227)
!11241 = !DILocation(line: 210, column: 17, scope: !11233)
!11242 = !DILocation(line: 234, column: 7, scope: !11232)
!11243 = !DILocation(line: 234, column: 33, scope: !11232)
!11244 = !DILocation(line: 234, column: 7, scope: !11233)
!11245 = !DILocation(line: 235, column: 22, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11232, file: !2046, line: 234, column: 49)
!11247 = !DILocation(line: 235, column: 29, scope: !11246)
!11248 = !DILocation(line: 236, column: 3, scope: !11246)
!11249 = !DILocation(line: 236, column: 14, scope: !11232)
!11250 = !DILocation(line: 239, column: 32, scope: !11229)
!11251 = !DILocation(line: 0, scope: !11229)
!11252 = !DILocation(line: 241, column: 8, scope: !11229)
!11253 = !DILocation(line: 246, column: 3, scope: !11229)
!11254 = !DILocation(line: 252, column: 9, scope: !11233)
!11255 = !DILocation(line: 255, column: 9, scope: !11233)
!11256 = !DILocation(line: 256, column: 11, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11233, file: !2046, line: 256, column: 7)
!11258 = !DILocation(line: 209, column: 37, scope: !11234)
!11259 = !DILocation(line: 256, column: 7, scope: !11233)
!11260 = !DILocation(line: 262, column: 1, scope: !11208)
!11261 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2046, file: !2046, line: 176, type: !11262, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1964, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!103, !121, !121, !121}
!11264 = !{!11265, !11266, !11267, !11268}
!11265 = !DILocalVariable(name: "pin", arg: 1, scope: !11261, file: !2046, line: 176, type: !121)
!11266 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11261, file: !2046, line: 176, type: !121)
!11267 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11261, file: !2046, line: 176, type: !121)
!11268 = !DILocalVariable(name: "port_device", scope: !11261, file: !2046, line: 178, type: !1976)
!11269 = !DILocation(line: 0, scope: !11261)
!11270 = !DILocation(line: 180, column: 22, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11261, file: !2046, line: 180, column: 6)
!11272 = !DILocation(line: 180, column: 6, scope: !11261)
!11273 = !DILocation(line: 180, column: 6, scope: !11271)
!11274 = !DILocation(line: 184, column: 16, scope: !11261)
!11275 = !DILocation(line: 186, column: 33, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11261, file: !2046, line: 186, column: 6)
!11277 = !DILocation(line: 186, column: 6, scope: !11261)
!11278 = !DILocation(line: 190, column: 43, scope: !11261)
!11279 = !DILocation(line: 190, column: 9, scope: !11261)
!11280 = !DILocation(line: 190, column: 2, scope: !11261)
!11281 = !DILocation(line: 191, column: 1, scope: !11261)
!11282 = distinct !DISubprogram(name: "device_is_ready", scope: !8304, file: !8304, line: 47, type: !11283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1964, retainedNodes: !11285)
!11283 = !DISubroutineType(types: !11284)
!11284 = !{!157, !1976}
!11285 = !{!11286}
!11286 = !DILocalVariable(name: "dev", arg: 1, scope: !11282, file: !8304, line: 47, type: !1976)
!11287 = !DILocation(line: 0, scope: !11282)
!11288 = !DILocation(line: 55, column: 2, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11282, file: !8304, line: 55, column: 2)
!11290 = !{i64 2149833681}
!11291 = !DILocation(line: 56, column: 9, scope: !11282)
!11292 = !DILocation(line: 56, column: 2, scope: !11282)
!11293 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11283, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1964, retainedNodes: !11294)
!11294 = !{!11295}
!11295 = !DILocalVariable(name: "dev", arg: 1, scope: !11293, file: !141, line: 730, type: !1976)
!11296 = !DILocation(line: 0, scope: !11293)
!11297 = !DILocation(line: 732, column: 9, scope: !11293)
!11298 = !DILocation(line: 732, column: 2, scope: !11293)
!11299 = distinct !DISubprogram(name: "SystemInit", scope: !2096, file: !2096, line: 167, type: !3339, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !317)
!11300 = !DILocation(line: 182, column: 1, scope: !11299)
!11301 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2096, file: !2096, line: 220, type: !3339, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11302)
!11302 = !{!11303, !11304, !11305, !11306, !11307}
!11303 = !DILocalVariable(name: "tmp", scope: !11301, file: !2096, line: 222, type: !121)
!11304 = !DILocalVariable(name: "pllvco", scope: !11301, file: !2096, line: 222, type: !121)
!11305 = !DILocalVariable(name: "pllp", scope: !11301, file: !2096, line: 222, type: !121)
!11306 = !DILocalVariable(name: "pllsource", scope: !11301, file: !2096, line: 222, type: !121)
!11307 = !DILocalVariable(name: "pllm", scope: !11301, file: !2096, line: 222, type: !121)
!11308 = !DILocation(line: 0, scope: !11301)
!11309 = !DILocation(line: 225, column: 14, scope: !11301)
!11310 = !DILocation(line: 225, column: 19, scope: !11301)
!11311 = !DILocation(line: 227, column: 3, scope: !11301)
!11312 = !DILocation(line: 234, column: 7, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11301, file: !2096, line: 228, column: 3)
!11314 = !DILocation(line: 240, column: 25, scope: !11313)
!11315 = !DILocation(line: 241, column: 19, scope: !11313)
!11316 = !DILocation(line: 241, column: 27, scope: !11313)
!11317 = !DILocation(line: 243, column: 21, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11313, file: !2096, line: 243, column: 11)
!11319 = !DILocation(line: 0, scope: !11318)
!11320 = !DILocation(line: 254, column: 22, scope: !11313)
!11321 = !DILocation(line: 254, column: 62, scope: !11313)
!11322 = !DILocation(line: 255, column: 31, scope: !11313)
!11323 = !DILocation(line: 256, column: 7, scope: !11313)
!11324 = !DILocation(line: 0, scope: !11313)
!11325 = !DILocation(line: 263, column: 30, scope: !11301)
!11326 = !DILocation(line: 263, column: 52, scope: !11301)
!11327 = !DILocation(line: 263, column: 9, scope: !11301)
!11328 = !DILocation(line: 265, column: 19, scope: !11301)
!11329 = !DILocation(line: 266, column: 1, scope: !11301)
!11330 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11331, file: !11331, line: 200, type: !11332, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11331 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!11334}
!11334 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3109, line: 44, baseType: !3108)
!11335 = !DILocation(line: 202, column: 3, scope: !11330)
!11336 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11331, file: !11331, line: 219, type: !11337, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !11361)
!11337 = !DISubroutineType(types: !11338)
!11338 = !{!11334, !11339}
!11339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11340, size: 32)
!11340 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11341, line: 70, baseType: !11342)
!11341 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11341, line: 49, size: 384, elements: !11343)
!11343 = !{!11344, !11345, !11346, !11347, !11348, !11349, !11350}
!11344 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11342, file: !11341, line: 51, baseType: !121, size: 32)
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11342, file: !11341, line: 54, baseType: !121, size: 32, offset: 32)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11342, file: !11341, line: 57, baseType: !121, size: 32, offset: 64)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11342, file: !11341, line: 60, baseType: !121, size: 32, offset: 96)
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11342, file: !11341, line: 63, baseType: !121, size: 32, offset: 128)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11342, file: !11341, line: 66, baseType: !121, size: 32, offset: 160)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11342, file: !11341, line: 69, baseType: !11351, size: 192, offset: 192)
!11351 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11352, line: 73, baseType: !11353)
!11352 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11352, line: 45, size: 192, elements: !11354)
!11354 = !{!11355, !11356, !11357, !11358, !11359, !11360}
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11353, file: !11352, line: 47, baseType: !121, size: 32)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11353, file: !11352, line: 50, baseType: !121, size: 32, offset: 32)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11353, file: !11352, line: 53, baseType: !121, size: 32, offset: 64)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11353, file: !11352, line: 56, baseType: !121, size: 32, offset: 96)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11353, file: !11352, line: 60, baseType: !121, size: 32, offset: 128)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11353, file: !11352, line: 63, baseType: !121, size: 32, offset: 160)
!11361 = !{!11362, !11363, !11364, !11365, !11369}
!11362 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11336, file: !11331, line: 219, type: !11339)
!11363 = !DILocalVariable(name: "tickstart", scope: !11336, file: !11331, line: 221, type: !121)
!11364 = !DILocalVariable(name: "pll_config", scope: !11336, file: !11331, line: 221, type: !121)
!11365 = !DILocalVariable(name: "pwrclkchanged", scope: !11366, file: !11331, line: 391, type: !11368)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !11331, line: 390, column: 3)
!11367 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 389, column: 6)
!11368 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !835, line: 188, baseType: !3115)
!11369 = !DILocalVariable(name: "tmpreg", scope: !11370, file: !11331, line: 400, type: !120)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !11331, line: 400, column: 7)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !11331, line: 399, column: 5)
!11372 = distinct !DILexicalBlock(scope: !11366, file: !11331, line: 398, column: 8)
!11373 = !DILocation(line: 0, scope: !11336)
!11374 = !DILocation(line: 224, column: 24, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 224, column: 6)
!11376 = !DILocation(line: 224, column: 6, scope: !11336)
!11377 = !DILocation(line: 232, column: 27, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 232, column: 6)
!11379 = !DILocation(line: 232, column: 43, scope: !11378)
!11380 = !DILocation(line: 232, column: 69, scope: !11378)
!11381 = !DILocation(line: 232, column: 6, scope: !11336)
!11382 = !DILocation(line: 237, column: 9, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !11331, line: 237, column: 8)
!11384 = distinct !DILexicalBlock(scope: !11378, file: !11331, line: 233, column: 3)
!11385 = !DILocation(line: 237, column: 39, scope: !11383)
!11386 = !DILocation(line: 237, column: 60, scope: !11383)
!11387 = !DILocation(line: 238, column: 9, scope: !11383)
!11388 = !DILocation(line: 238, column: 39, scope: !11383)
!11389 = !DILocation(line: 238, column: 60, scope: !11383)
!11390 = !DILocation(line: 238, column: 70, scope: !11383)
!11391 = !DILocation(line: 238, column: 78, scope: !11383)
!11392 = !DILocation(line: 238, column: 100, scope: !11383)
!11393 = !DILocation(line: 237, column: 8, scope: !11384)
!11394 = !DILocation(line: 240, column: 11, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !11331, line: 240, column: 10)
!11396 = distinct !DILexicalBlock(scope: !11383, file: !11331, line: 239, column: 5)
!11397 = !DILocation(line: 240, column: 57, scope: !11395)
!11398 = !DILocation(line: 240, column: 80, scope: !11395)
!11399 = !DILocation(line: 240, column: 89, scope: !11395)
!11400 = !DILocation(line: 240, column: 10, scope: !11396)
!11401 = !DILocation(line: 248, column: 7, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !11331, line: 248, column: 7)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !11331, line: 248, column: 7)
!11404 = distinct !DILexicalBlock(scope: !11383, file: !11331, line: 246, column: 5)
!11405 = !DILocation(line: 248, column: 7, scope: !11403)
!11406 = !DILocation(line: 248, column: 7, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11402, file: !11331, line: 248, column: 7)
!11408 = !DILocation(line: 248, column: 7, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !11331, line: 248, column: 7)
!11410 = distinct !DILexicalBlock(scope: !11402, file: !11331, line: 248, column: 7)
!11411 = !DILocation(line: 248, column: 7, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11410, file: !11331, line: 248, column: 7)
!11413 = !DILocation(line: 0, scope: !11402)
!11414 = !DILocation(line: 251, column: 30, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11404, file: !11331, line: 251, column: 10)
!11416 = !DILocation(line: 251, column: 40, scope: !11415)
!11417 = !DILocation(line: 0, scope: !11415)
!11418 = !DILocation(line: 251, column: 10, scope: !11404)
!11419 = !DILocation(line: 257, column: 15, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11415, file: !11331, line: 252, column: 7)
!11421 = !DILocation(line: 257, column: 51, scope: !11420)
!11422 = !DILocation(line: 257, column: 9, scope: !11420)
!11423 = !DILocation(line: 259, column: 15, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !11331, line: 259, column: 14)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !11331, line: 258, column: 9)
!11426 = !DILocation(line: 259, column: 29, scope: !11424)
!11427 = !DILocation(line: 259, column: 43, scope: !11424)
!11428 = !DILocation(line: 259, column: 14, scope: !11425)
!11429 = distinct !{!11429, !11422, !11430}
!11430 = !DILocation(line: 263, column: 9, scope: !11420)
!11431 = !DILocation(line: 271, column: 15, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11415, file: !11331, line: 266, column: 7)
!11433 = !DILocation(line: 271, column: 9, scope: !11432)
!11434 = !DILocation(line: 273, column: 15, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !11331, line: 273, column: 14)
!11436 = distinct !DILexicalBlock(scope: !11432, file: !11331, line: 272, column: 9)
!11437 = !DILocation(line: 273, column: 29, scope: !11435)
!11438 = !DILocation(line: 273, column: 43, scope: !11435)
!11439 = !DILocation(line: 273, column: 14, scope: !11436)
!11440 = distinct !{!11440, !11433, !11441}
!11441 = !DILocation(line: 277, column: 9, scope: !11432)
!11442 = !DILocation(line: 282, column: 27, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 282, column: 6)
!11444 = !DILocation(line: 282, column: 43, scope: !11443)
!11445 = !DILocation(line: 282, column: 69, scope: !11443)
!11446 = !DILocation(line: 282, column: 6, scope: !11336)
!11447 = !DILocation(line: 289, column: 9, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !11331, line: 289, column: 8)
!11449 = distinct !DILexicalBlock(scope: !11443, file: !11331, line: 283, column: 3)
!11450 = !DILocation(line: 289, column: 39, scope: !11448)
!11451 = !DILocation(line: 289, column: 60, scope: !11448)
!11452 = !DILocation(line: 290, column: 9, scope: !11448)
!11453 = !DILocation(line: 290, column: 39, scope: !11448)
!11454 = !DILocation(line: 290, column: 60, scope: !11448)
!11455 = !DILocation(line: 290, column: 70, scope: !11448)
!11456 = !DILocation(line: 290, column: 78, scope: !11448)
!11457 = !DILocation(line: 290, column: 100, scope: !11448)
!11458 = !DILocation(line: 289, column: 8, scope: !11449)
!11459 = !DILocation(line: 293, column: 11, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11331, line: 293, column: 10)
!11461 = distinct !DILexicalBlock(scope: !11448, file: !11331, line: 291, column: 5)
!11462 = !DILocation(line: 293, column: 57, scope: !11460)
!11463 = !DILocation(line: 293, column: 80, scope: !11460)
!11464 = !DILocation(line: 293, column: 89, scope: !11460)
!11465 = !DILocation(line: 293, column: 10, scope: !11461)
!11466 = !DILocation(line: 307, column: 30, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !11331, line: 307, column: 10)
!11468 = distinct !DILexicalBlock(scope: !11448, file: !11331, line: 305, column: 5)
!11469 = !DILocation(line: 307, column: 39, scope: !11467)
!11470 = !DILocation(line: 307, column: 10, scope: !11468)
!11471 = !DILocation(line: 310, column: 9, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11467, file: !11331, line: 308, column: 7)
!11473 = !DILocation(line: 313, column: 21, scope: !11472)
!11474 = !DILocation(line: 316, column: 9, scope: !11472)
!11475 = !DILocation(line: 316, column: 15, scope: !11472)
!11476 = !DILocation(line: 316, column: 51, scope: !11472)
!11477 = !DILocation(line: 318, column: 15, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !11331, line: 318, column: 14)
!11479 = distinct !DILexicalBlock(scope: !11472, file: !11331, line: 317, column: 9)
!11480 = !DILocation(line: 318, column: 29, scope: !11478)
!11481 = !DILocation(line: 318, column: 43, scope: !11478)
!11482 = !DILocation(line: 318, column: 14, scope: !11479)
!11483 = distinct !{!11483, !11474, !11484}
!11484 = !DILocation(line: 322, column: 9, scope: !11472)
!11485 = !DILocation(line: 330, column: 9, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11467, file: !11331, line: 328, column: 7)
!11487 = !DILocation(line: 333, column: 21, scope: !11486)
!11488 = !DILocation(line: 336, column: 9, scope: !11486)
!11489 = !DILocation(line: 336, column: 15, scope: !11486)
!11490 = !DILocation(line: 338, column: 15, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11492, file: !11331, line: 338, column: 14)
!11492 = distinct !DILexicalBlock(scope: !11486, file: !11331, line: 337, column: 9)
!11493 = !DILocation(line: 338, column: 29, scope: !11491)
!11494 = !DILocation(line: 338, column: 43, scope: !11491)
!11495 = !DILocation(line: 338, column: 14, scope: !11492)
!11496 = distinct !{!11496, !11488, !11497}
!11497 = !DILocation(line: 342, column: 9, scope: !11486)
!11498 = !DILocation(line: 0, scope: !11448)
!11499 = !DILocation(line: 347, column: 27, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 347, column: 6)
!11501 = !DILocation(line: 347, column: 43, scope: !11500)
!11502 = !DILocation(line: 347, column: 69, scope: !11500)
!11503 = !DILocation(line: 347, column: 6, scope: !11336)
!11504 = !DILocation(line: 353, column: 28, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !11331, line: 353, column: 8)
!11506 = distinct !DILexicalBlock(scope: !11500, file: !11331, line: 348, column: 3)
!11507 = !DILocation(line: 353, column: 37, scope: !11505)
!11508 = !DILocation(line: 353, column: 8, scope: !11506)
!11509 = !DILocation(line: 356, column: 7, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11505, file: !11331, line: 354, column: 5)
!11511 = !DILocation(line: 359, column: 19, scope: !11510)
!11512 = !DILocation(line: 362, column: 7, scope: !11510)
!11513 = !DILocation(line: 362, column: 13, scope: !11510)
!11514 = !DILocation(line: 362, column: 49, scope: !11510)
!11515 = !DILocation(line: 364, column: 13, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !11331, line: 364, column: 12)
!11517 = distinct !DILexicalBlock(scope: !11510, file: !11331, line: 363, column: 7)
!11518 = !DILocation(line: 364, column: 27, scope: !11516)
!11519 = !DILocation(line: 364, column: 41, scope: !11516)
!11520 = !DILocation(line: 364, column: 12, scope: !11517)
!11521 = distinct !{!11521, !11512, !11522}
!11522 = !DILocation(line: 368, column: 7, scope: !11510)
!11523 = !DILocation(line: 373, column: 7, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11505, file: !11331, line: 371, column: 5)
!11525 = !DILocation(line: 376, column: 19, scope: !11524)
!11526 = !DILocation(line: 379, column: 7, scope: !11524)
!11527 = !DILocation(line: 379, column: 13, scope: !11524)
!11528 = !DILocation(line: 381, column: 13, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !11331, line: 381, column: 12)
!11530 = distinct !DILexicalBlock(scope: !11524, file: !11331, line: 380, column: 7)
!11531 = !DILocation(line: 381, column: 27, scope: !11529)
!11532 = !DILocation(line: 381, column: 41, scope: !11529)
!11533 = !DILocation(line: 381, column: 12, scope: !11530)
!11534 = distinct !{!11534, !11526, !11535}
!11535 = !DILocation(line: 385, column: 7, scope: !11524)
!11536 = !DILocation(line: 389, column: 27, scope: !11367)
!11537 = !DILocation(line: 389, column: 43, scope: !11367)
!11538 = !DILocation(line: 389, column: 69, scope: !11367)
!11539 = !DILocation(line: 389, column: 6, scope: !11336)
!11540 = !DILocation(line: 0, scope: !11366)
!11541 = !DILocation(line: 398, column: 8, scope: !11372)
!11542 = !DILocation(line: 398, column: 8, scope: !11366)
!11543 = !DILocation(line: 400, column: 7, scope: !11370)
!11544 = !DILocation(line: 400, column: 7, scope: !11371)
!11545 = !DILocation(line: 402, column: 5, scope: !11371)
!11546 = !DILocation(line: 404, column: 8, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11366, file: !11331, line: 404, column: 8)
!11548 = !DILocation(line: 404, column: 8, scope: !11366)
!11549 = !DILocation(line: 407, column: 7, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11547, file: !11331, line: 405, column: 5)
!11551 = !DILocation(line: 410, column: 19, scope: !11550)
!11552 = !DILocation(line: 412, column: 7, scope: !11550)
!11553 = !DILocation(line: 412, column: 13, scope: !11550)
!11554 = !DILocation(line: 414, column: 13, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11331, line: 414, column: 12)
!11556 = distinct !DILexicalBlock(scope: !11550, file: !11331, line: 413, column: 7)
!11557 = !DILocation(line: 414, column: 27, scope: !11555)
!11558 = !DILocation(line: 414, column: 40, scope: !11555)
!11559 = !DILocation(line: 414, column: 12, scope: !11556)
!11560 = distinct !{!11560, !11552, !11561}
!11561 = !DILocation(line: 418, column: 7, scope: !11550)
!11562 = !DILocation(line: 422, column: 5, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !11331, line: 422, column: 5)
!11564 = distinct !DILexicalBlock(scope: !11366, file: !11331, line: 422, column: 5)
!11565 = !DILocation(line: 422, column: 5, scope: !11564)
!11566 = !DILocation(line: 422, column: 5, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11563, file: !11331, line: 422, column: 5)
!11568 = !DILocation(line: 422, column: 5, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !11331, line: 422, column: 5)
!11570 = distinct !DILexicalBlock(scope: !11563, file: !11331, line: 422, column: 5)
!11571 = !DILocation(line: 422, column: 5, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11570, file: !11331, line: 422, column: 5)
!11573 = !DILocation(line: 0, scope: !11563)
!11574 = !DILocation(line: 424, column: 28, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11366, file: !11331, line: 424, column: 8)
!11576 = !DILocation(line: 424, column: 38, scope: !11575)
!11577 = !DILocation(line: 0, scope: !11575)
!11578 = !DILocation(line: 424, column: 8, scope: !11366)
!11579 = !DILocation(line: 430, column: 13, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11575, file: !11331, line: 425, column: 5)
!11581 = !DILocation(line: 430, column: 49, scope: !11580)
!11582 = !DILocation(line: 430, column: 7, scope: !11580)
!11583 = !DILocation(line: 432, column: 13, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11585, file: !11331, line: 432, column: 12)
!11585 = distinct !DILexicalBlock(scope: !11580, file: !11331, line: 431, column: 7)
!11586 = !DILocation(line: 432, column: 27, scope: !11584)
!11587 = !DILocation(line: 432, column: 41, scope: !11584)
!11588 = !DILocation(line: 432, column: 12, scope: !11585)
!11589 = distinct !{!11589, !11582, !11590}
!11590 = !DILocation(line: 436, column: 7, scope: !11580)
!11591 = !DILocation(line: 444, column: 13, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11575, file: !11331, line: 439, column: 5)
!11593 = !DILocation(line: 444, column: 7, scope: !11592)
!11594 = !DILocation(line: 446, column: 13, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11596, file: !11331, line: 446, column: 12)
!11596 = distinct !DILexicalBlock(scope: !11592, file: !11331, line: 445, column: 7)
!11597 = !DILocation(line: 446, column: 27, scope: !11595)
!11598 = !DILocation(line: 446, column: 41, scope: !11595)
!11599 = !DILocation(line: 446, column: 12, scope: !11596)
!11600 = distinct !{!11600, !11593, !11601}
!11601 = !DILocation(line: 450, column: 7, scope: !11592)
!11602 = !DILocation(line: 454, column: 8, scope: !11366)
!11603 = !DILocation(line: 456, column: 7, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !11331, line: 455, column: 5)
!11605 = distinct !DILexicalBlock(scope: !11366, file: !11331, line: 454, column: 8)
!11606 = !DILocation(line: 457, column: 5, scope: !11604)
!11607 = !DILocation(line: 462, column: 31, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11336, file: !11331, line: 462, column: 7)
!11609 = !DILocation(line: 462, column: 41, scope: !11608)
!11610 = !DILocation(line: 462, column: 7, scope: !11336)
!11611 = !DILocation(line: 465, column: 8, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !11331, line: 465, column: 8)
!11613 = distinct !DILexicalBlock(scope: !11608, file: !11331, line: 463, column: 3)
!11614 = !DILocation(line: 465, column: 38, scope: !11612)
!11615 = !DILocation(line: 465, column: 8, scope: !11613)
!11616 = !DILocation(line: 467, column: 44, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !11331, line: 467, column: 10)
!11618 = distinct !DILexicalBlock(scope: !11612, file: !11331, line: 466, column: 5)
!11619 = !DILocation(line: 0, scope: !11617)
!11620 = !DILocation(line: 467, column: 10, scope: !11618)
!11621 = !DILocation(line: 483, column: 15, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11617, file: !11331, line: 468, column: 7)
!11623 = !DILocation(line: 483, column: 9, scope: !11622)
!11624 = !DILocation(line: 485, column: 15, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !11331, line: 485, column: 14)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !11331, line: 484, column: 9)
!11627 = !DILocation(line: 485, column: 29, scope: !11625)
!11628 = !DILocation(line: 485, column: 43, scope: !11625)
!11629 = !DILocation(line: 485, column: 14, scope: !11626)
!11630 = distinct !{!11630, !11623, !11631}
!11631 = !DILocation(line: 489, column: 9, scope: !11622)
!11632 = !DILocation(line: 492, column: 9, scope: !11622)
!11633 = !DILocation(line: 498, column: 9, scope: !11622)
!11634 = !DILocation(line: 501, column: 21, scope: !11622)
!11635 = !DILocation(line: 504, column: 9, scope: !11622)
!11636 = !DILocation(line: 504, column: 15, scope: !11622)
!11637 = !DILocation(line: 504, column: 51, scope: !11622)
!11638 = !DILocation(line: 506, column: 15, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11331, line: 506, column: 14)
!11640 = distinct !DILexicalBlock(scope: !11622, file: !11331, line: 505, column: 9)
!11641 = !DILocation(line: 506, column: 29, scope: !11639)
!11642 = !DILocation(line: 506, column: 43, scope: !11639)
!11643 = !DILocation(line: 506, column: 14, scope: !11640)
!11644 = distinct !{!11644, !11635, !11645}
!11645 = !DILocation(line: 510, column: 9, scope: !11622)
!11646 = !DILocation(line: 521, column: 15, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11617, file: !11331, line: 513, column: 7)
!11648 = !DILocation(line: 521, column: 9, scope: !11647)
!11649 = !DILocation(line: 523, column: 15, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !11331, line: 523, column: 14)
!11651 = distinct !DILexicalBlock(scope: !11647, file: !11331, line: 522, column: 9)
!11652 = !DILocation(line: 523, column: 29, scope: !11650)
!11653 = !DILocation(line: 523, column: 43, scope: !11650)
!11654 = !DILocation(line: 523, column: 14, scope: !11651)
!11655 = distinct !{!11655, !11648, !11656}
!11656 = !DILocation(line: 527, column: 9, scope: !11647)
!11657 = !DILocation(line: 533, column: 44, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11659, file: !11331, line: 533, column: 10)
!11659 = distinct !DILexicalBlock(scope: !11612, file: !11331, line: 531, column: 5)
!11660 = !DILocation(line: 533, column: 10, scope: !11659)
!11661 = !DILocation(line: 540, column: 27, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11658, file: !11331, line: 538, column: 7)
!11663 = !DILocation(line: 551, column: 14, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11662, file: !11331, line: 550, column: 13)
!11665 = !DILocation(line: 551, column: 81, scope: !11664)
!11666 = !DILocation(line: 551, column: 55, scope: !11664)
!11667 = !DILocation(line: 551, column: 92, scope: !11664)
!11668 = !DILocation(line: 552, column: 14, scope: !11664)
!11669 = !DILocation(line: 552, column: 80, scope: !11664)
!11670 = !DILocation(line: 552, column: 53, scope: !11664)
!11671 = !DILocation(line: 552, column: 111, scope: !11664)
!11672 = !DILocation(line: 553, column: 14, scope: !11664)
!11673 = !DILocation(line: 553, column: 80, scope: !11664)
!11674 = !DILocation(line: 553, column: 86, scope: !11664)
!11675 = !DILocation(line: 553, column: 53, scope: !11664)
!11676 = !DILocation(line: 553, column: 111, scope: !11664)
!11677 = !DILocation(line: 554, column: 14, scope: !11664)
!11678 = !DILocation(line: 554, column: 82, scope: !11664)
!11679 = !DILocation(line: 554, column: 101, scope: !11664)
!11680 = !DILocation(line: 554, column: 53, scope: !11664)
!11681 = !DILocation(line: 554, column: 126, scope: !11664)
!11682 = !DILocation(line: 555, column: 14, scope: !11664)
!11683 = !DILocation(line: 555, column: 80, scope: !11664)
!11684 = !DILocation(line: 555, column: 85, scope: !11664)
!11685 = !DILocation(line: 555, column: 53, scope: !11664)
!11686 = !DILocation(line: 550, column: 13, scope: !11662)
!11687 = !DILocation(line: 563, column: 3, scope: !11336)
!11688 = !DILocation(line: 564, column: 1, scope: !11336)
!11689 = !DISubprogram(name: "HAL_GetTick", scope: !11690, file: !11690, line: 234, type: !6192, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11690 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11691 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11331, file: !11331, line: 591, type: !11692, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !11703)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!11334, !11694, !121}
!11694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11695, size: 32)
!11695 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11341, line: 92, baseType: !11696)
!11696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11341, line: 75, size: 160, elements: !11697)
!11697 = !{!11698, !11699, !11700, !11701, !11702}
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11696, file: !11341, line: 77, baseType: !121, size: 32)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11696, file: !11341, line: 80, baseType: !121, size: 32, offset: 32)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11696, file: !11341, line: 83, baseType: !121, size: 32, offset: 64)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11696, file: !11341, line: 86, baseType: !121, size: 32, offset: 96)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11696, file: !11341, line: 89, baseType: !121, size: 32, offset: 128)
!11703 = !{!11704, !11705, !11706}
!11704 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11691, file: !11331, line: 591, type: !11694)
!11705 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11691, file: !11331, line: 591, type: !121)
!11706 = !DILocalVariable(name: "tickstart", scope: !11691, file: !11331, line: 593, type: !121)
!11707 = !DILocation(line: 0, scope: !11691)
!11708 = !DILocation(line: 596, column: 24, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 596, column: 6)
!11710 = !DILocation(line: 596, column: 6, scope: !11691)
!11711 = !DILocation(line: 610, column: 17, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 610, column: 6)
!11713 = !DILocation(line: 610, column: 15, scope: !11712)
!11714 = !DILocation(line: 610, column: 6, scope: !11691)
!11715 = !DILocation(line: 613, column: 5, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11712, file: !11331, line: 611, column: 3)
!11717 = !DILocation(line: 617, column: 8, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11716, file: !11331, line: 617, column: 8)
!11719 = !DILocation(line: 617, column: 34, scope: !11718)
!11720 = !DILocation(line: 617, column: 8, scope: !11716)
!11721 = !DILocation(line: 624, column: 27, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 624, column: 6)
!11723 = !DILocation(line: 624, column: 38, scope: !11722)
!11724 = !DILocation(line: 624, column: 60, scope: !11722)
!11725 = !DILocation(line: 624, column: 6, scope: !11691)
!11726 = !DILocation(line: 628, column: 40, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !11331, line: 628, column: 8)
!11728 = distinct !DILexicalBlock(scope: !11722, file: !11331, line: 625, column: 3)
!11729 = !DILocation(line: 628, column: 63, scope: !11727)
!11730 = !DILocation(line: 628, column: 8, scope: !11728)
!11731 = !DILocation(line: 630, column: 7, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11727, file: !11331, line: 629, column: 5)
!11733 = !DILocation(line: 633, column: 29, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11728, file: !11331, line: 633, column: 8)
!11735 = !DILocation(line: 631, column: 5, scope: !11732)
!11736 = !DILocation(line: 633, column: 40, scope: !11734)
!11737 = !DILocation(line: 633, column: 63, scope: !11734)
!11738 = !DILocation(line: 633, column: 8, scope: !11728)
!11739 = !DILocation(line: 635, column: 7, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11734, file: !11331, line: 634, column: 5)
!11741 = !DILocation(line: 636, column: 5, scope: !11740)
!11742 = !DILocation(line: 639, column: 5, scope: !11728)
!11743 = !DILocation(line: 643, column: 27, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 643, column: 6)
!11745 = !DILocation(line: 640, column: 3, scope: !11728)
!11746 = !DILocation(line: 643, column: 38, scope: !11744)
!11747 = !DILocation(line: 643, column: 62, scope: !11744)
!11748 = !DILocation(line: 643, column: 6, scope: !11691)
!11749 = !DILocation(line: 648, column: 27, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11751, file: !11331, line: 648, column: 8)
!11751 = distinct !DILexicalBlock(scope: !11744, file: !11331, line: 644, column: 3)
!11752 = !DILocation(line: 648, column: 8, scope: !11751)
!11753 = !DILocation(line: 651, column: 10, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !11331, line: 651, column: 10)
!11755 = distinct !DILexicalBlock(scope: !11750, file: !11331, line: 649, column: 5)
!11756 = !DILocation(line: 651, column: 46, scope: !11754)
!11757 = !DILocation(line: 651, column: 10, scope: !11755)
!11758 = !DILocation(line: 661, column: 10, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !11331, line: 661, column: 10)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !11331, line: 659, column: 5)
!11761 = distinct !DILexicalBlock(scope: !11750, file: !11331, line: 657, column: 13)
!11762 = !DILocation(line: 661, column: 46, scope: !11759)
!11763 = !DILocation(line: 661, column: 10, scope: !11760)
!11764 = !DILocation(line: 670, column: 10, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !11331, line: 670, column: 10)
!11766 = distinct !DILexicalBlock(scope: !11761, file: !11331, line: 668, column: 5)
!11767 = !DILocation(line: 670, column: 46, scope: !11765)
!11768 = !DILocation(line: 670, column: 10, scope: !11766)
!11769 = !DILocation(line: 676, column: 5, scope: !11751)
!11770 = !DILocation(line: 679, column: 17, scope: !11751)
!11771 = !DILocation(line: 681, column: 5, scope: !11751)
!11772 = !DILocation(line: 681, column: 12, scope: !11751)
!11773 = !DILocation(line: 681, column: 65, scope: !11751)
!11774 = !DILocation(line: 681, column: 78, scope: !11751)
!11775 = !DILocation(line: 681, column: 42, scope: !11751)
!11776 = !DILocation(line: 683, column: 12, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !11331, line: 683, column: 11)
!11778 = distinct !DILexicalBlock(scope: !11751, file: !11331, line: 682, column: 5)
!11779 = !DILocation(line: 683, column: 26, scope: !11777)
!11780 = !DILocation(line: 683, column: 39, scope: !11777)
!11781 = !DILocation(line: 683, column: 11, scope: !11778)
!11782 = distinct !{!11782, !11771, !11783}
!11783 = !DILocation(line: 687, column: 5, scope: !11751)
!11784 = !DILocation(line: 691, column: 17, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 691, column: 6)
!11786 = !DILocation(line: 691, column: 15, scope: !11785)
!11787 = !DILocation(line: 691, column: 6, scope: !11691)
!11788 = !DILocation(line: 694, column: 5, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11785, file: !11331, line: 692, column: 3)
!11790 = !DILocation(line: 698, column: 8, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11789, file: !11331, line: 698, column: 8)
!11792 = !DILocation(line: 698, column: 34, scope: !11791)
!11793 = !DILocation(line: 698, column: 8, scope: !11789)
!11794 = !DILocation(line: 705, column: 27, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 705, column: 6)
!11796 = !DILocation(line: 705, column: 38, scope: !11795)
!11797 = !DILocation(line: 705, column: 61, scope: !11795)
!11798 = !DILocation(line: 705, column: 6, scope: !11691)
!11799 = !DILocation(line: 708, column: 5, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11795, file: !11331, line: 706, column: 3)
!11801 = !DILocation(line: 712, column: 27, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11691, file: !11331, line: 712, column: 6)
!11803 = !DILocation(line: 709, column: 3, scope: !11800)
!11804 = !DILocation(line: 712, column: 38, scope: !11802)
!11805 = !DILocation(line: 712, column: 61, scope: !11802)
!11806 = !DILocation(line: 712, column: 6, scope: !11691)
!11807 = !DILocation(line: 715, column: 5, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11802, file: !11331, line: 713, column: 3)
!11809 = !DILocation(line: 716, column: 3, scope: !11808)
!11810 = !DILocation(line: 719, column: 21, scope: !11691)
!11811 = !DILocation(line: 719, column: 70, scope: !11691)
!11812 = !DILocation(line: 719, column: 91, scope: !11691)
!11813 = !DILocation(line: 719, column: 50, scope: !11691)
!11814 = !DILocation(line: 719, column: 47, scope: !11691)
!11815 = !DILocation(line: 719, column: 19, scope: !11691)
!11816 = !DILocation(line: 722, column: 17, scope: !11691)
!11817 = !DILocation(line: 722, column: 3, scope: !11691)
!11818 = !DILocation(line: 724, column: 3, scope: !11691)
!11819 = !DILocation(line: 725, column: 1, scope: !11691)
!11820 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11331, file: !11331, line: 885, type: !6192, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !11821)
!11821 = !{!11822, !11823, !11824, !11825}
!11822 = !DILocalVariable(name: "pllm", scope: !11820, file: !11331, line: 887, type: !121)
!11823 = !DILocalVariable(name: "pllvco", scope: !11820, file: !11331, line: 887, type: !121)
!11824 = !DILocalVariable(name: "pllp", scope: !11820, file: !11331, line: 887, type: !121)
!11825 = !DILocalVariable(name: "sysclockfreq", scope: !11820, file: !11331, line: 888, type: !121)
!11826 = !DILocation(line: 0, scope: !11820)
!11827 = !DILocation(line: 891, column: 16, scope: !11820)
!11828 = !DILocation(line: 891, column: 21, scope: !11820)
!11829 = !DILocation(line: 891, column: 3, scope: !11820)
!11830 = !DILocation(line: 901, column: 7, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11832, file: !11331, line: 899, column: 5)
!11832 = distinct !DILexicalBlock(scope: !11820, file: !11331, line: 892, column: 3)
!11833 = !DILocation(line: 907, column: 19, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11832, file: !11331, line: 904, column: 5)
!11835 = !DILocation(line: 907, column: 27, scope: !11834)
!11836 = !DILocation(line: 908, column: 10, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11834, file: !11331, line: 908, column: 10)
!11838 = !DILocation(line: 908, column: 40, scope: !11837)
!11839 = !DILocation(line: 0, scope: !11837)
!11840 = !DILocation(line: 918, column: 23, scope: !11834)
!11841 = !DILocation(line: 918, column: 82, scope: !11834)
!11842 = !DILocation(line: 920, column: 28, scope: !11834)
!11843 = !DILocation(line: 921, column: 7, scope: !11834)
!11844 = !DILocation(line: 0, scope: !11832)
!11845 = !DILocation(line: 929, column: 3, scope: !11820)
!11846 = !DISubprogram(name: "HAL_InitTick", scope: !11690, file: !11690, line: 223, type: !11847, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{!11334, !121}
!11849 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11331, file: !11331, line: 775, type: !11850, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !11852)
!11850 = !DISubroutineType(types: !11851)
!11851 = !{null, !121, !121, !121}
!11852 = !{!11853, !11854, !11855, !11856, !11866, !11870}
!11853 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11849, file: !11331, line: 775, type: !121)
!11854 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11849, file: !11331, line: 775, type: !121)
!11855 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11849, file: !11331, line: 775, type: !121)
!11856 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11849, file: !11331, line: 777, type: !11857)
!11857 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11858, line: 62, baseType: !11859)
!11858 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11858, line: 46, size: 160, elements: !11860)
!11860 = !{!11861, !11862, !11863, !11864, !11865}
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11859, file: !11858, line: 48, baseType: !121, size: 32)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11859, file: !11858, line: 51, baseType: !121, size: 32, offset: 32)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11859, file: !11858, line: 54, baseType: !121, size: 32, offset: 64)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11859, file: !11858, line: 57, baseType: !121, size: 32, offset: 96)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11859, file: !11858, line: 60, baseType: !121, size: 32, offset: 128)
!11866 = !DILocalVariable(name: "tmpreg", scope: !11867, file: !11331, line: 787, type: !120)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !11331, line: 787, column: 5)
!11868 = distinct !DILexicalBlock(scope: !11869, file: !11331, line: 783, column: 3)
!11869 = distinct !DILexicalBlock(scope: !11849, file: !11331, line: 782, column: 6)
!11870 = !DILocalVariable(name: "tmpreg", scope: !11871, file: !11331, line: 811, type: !120)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11331, line: 811, column: 5)
!11872 = distinct !DILexicalBlock(scope: !11869, file: !11331, line: 807, column: 3)
!11873 = !DILocation(line: 0, scope: !11849)
!11874 = !DILocation(line: 777, column: 3, scope: !11849)
!11875 = !DILocation(line: 777, column: 20, scope: !11849)
!11876 = !DILocation(line: 782, column: 15, scope: !11869)
!11877 = !DILocation(line: 782, column: 6, scope: !11849)
!11878 = !DILocation(line: 787, column: 5, scope: !11867)
!11879 = !DILocation(line: 787, column: 5, scope: !11868)
!11880 = !DILocation(line: 790, column: 21, scope: !11868)
!11881 = !DILocation(line: 790, column: 25, scope: !11868)
!11882 = !DILocation(line: 791, column: 21, scope: !11868)
!11883 = !DILocation(line: 791, column: 26, scope: !11868)
!11884 = !DILocation(line: 792, column: 21, scope: !11868)
!11885 = !DILocation(line: 792, column: 27, scope: !11868)
!11886 = !DILocation(line: 793, column: 21, scope: !11868)
!11887 = !DILocation(line: 793, column: 26, scope: !11868)
!11888 = !DILocation(line: 794, column: 21, scope: !11868)
!11889 = !DILocation(line: 794, column: 31, scope: !11868)
!11890 = !DILocation(line: 795, column: 5, scope: !11868)
!11891 = !DILocation(line: 798, column: 5, scope: !11868)
!11892 = !DILocation(line: 804, column: 3, scope: !11868)
!11893 = !DILocation(line: 811, column: 5, scope: !11871)
!11894 = !DILocation(line: 811, column: 5, scope: !11872)
!11895 = !DILocation(line: 814, column: 21, scope: !11872)
!11896 = !DILocation(line: 814, column: 25, scope: !11872)
!11897 = !DILocation(line: 815, column: 21, scope: !11872)
!11898 = !DILocation(line: 815, column: 26, scope: !11872)
!11899 = !DILocation(line: 816, column: 21, scope: !11872)
!11900 = !DILocation(line: 816, column: 27, scope: !11872)
!11901 = !DILocation(line: 817, column: 21, scope: !11872)
!11902 = !DILocation(line: 817, column: 26, scope: !11872)
!11903 = !DILocation(line: 818, column: 21, scope: !11872)
!11904 = !DILocation(line: 818, column: 31, scope: !11872)
!11905 = !DILocation(line: 819, column: 5, scope: !11872)
!11906 = !DILocation(line: 822, column: 5, scope: !11872)
!11907 = !DILocation(line: 0, scope: !11869)
!11908 = !DILocation(line: 830, column: 1, scope: !11849)
!11909 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11858, file: !11858, line: 224, type: !11910, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11910 = !DISubroutineType(types: !11911)
!11911 = !{null, !3178, !11912}
!11912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11857, size: 32)
!11913 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11331, file: !11331, line: 841, type: !3339, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11914 = !DILocation(line: 843, column: 38, scope: !11913)
!11915 = !DILocation(line: 844, column: 1, scope: !11913)
!11916 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11331, file: !11331, line: 850, type: !3339, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11917 = !DILocation(line: 852, column: 38, scope: !11916)
!11918 = !DILocation(line: 853, column: 1, scope: !11916)
!11919 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11331, file: !11331, line: 941, type: !6192, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11920 = !DILocation(line: 943, column: 10, scope: !11919)
!11921 = !DILocation(line: 943, column: 3, scope: !11919)
!11922 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11331, file: !11331, line: 952, type: !6192, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11923 = !DILocation(line: 955, column: 11, scope: !11922)
!11924 = !DILocation(line: 955, column: 56, scope: !11922)
!11925 = !DILocation(line: 955, column: 78, scope: !11922)
!11926 = !DILocation(line: 955, column: 36, scope: !11922)
!11927 = !DILocation(line: 955, column: 33, scope: !11922)
!11928 = !DILocation(line: 955, column: 3, scope: !11922)
!11929 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11331, file: !11331, line: 964, type: !6192, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!11930 = !DILocation(line: 967, column: 11, scope: !11929)
!11931 = !DILocation(line: 967, column: 55, scope: !11929)
!11932 = !DILocation(line: 967, column: 77, scope: !11929)
!11933 = !DILocation(line: 967, column: 35, scope: !11929)
!11934 = !DILocation(line: 967, column: 32, scope: !11929)
!11935 = !DILocation(line: 967, column: 3, scope: !11929)
!11936 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11331, file: !11331, line: 977, type: !11937, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !11939)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{null, !11339}
!11939 = !{!11940}
!11940 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11936, file: !11331, line: 977, type: !11339)
!11941 = !DILocation(line: 0, scope: !11936)
!11942 = !DILocation(line: 980, column: 22, scope: !11936)
!11943 = !DILocation(line: 980, column: 37, scope: !11936)
!11944 = !DILocation(line: 983, column: 12, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11936, file: !11331, line: 983, column: 6)
!11946 = !DILocation(line: 983, column: 15, scope: !11945)
!11947 = !DILocation(line: 983, column: 31, scope: !11945)
!11948 = !DILocation(line: 983, column: 6, scope: !11936)
!11949 = !DILocation(line: 985, column: 24, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11945, file: !11331, line: 984, column: 3)
!11951 = !DILocation(line: 985, column: 33, scope: !11950)
!11952 = !DILocation(line: 986, column: 3, scope: !11950)
!11953 = !DILocation(line: 987, column: 17, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11945, file: !11331, line: 987, column: 11)
!11955 = !DILocation(line: 987, column: 20, scope: !11954)
!11956 = !DILocation(line: 987, column: 35, scope: !11954)
!11957 = !DILocation(line: 0, scope: !11954)
!11958 = !DILocation(line: 987, column: 11, scope: !11945)
!11959 = !DILocation(line: 989, column: 33, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11954, file: !11331, line: 988, column: 3)
!11961 = !DILocation(line: 990, column: 3, scope: !11960)
!11962 = !DILocation(line: 993, column: 33, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11954, file: !11331, line: 992, column: 3)
!11964 = !DILocation(line: 997, column: 12, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11936, file: !11331, line: 997, column: 6)
!11966 = !DILocation(line: 997, column: 15, scope: !11965)
!11967 = !DILocation(line: 1003, column: 24, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11965, file: !11331, line: 1002, column: 3)
!11969 = !DILocation(line: 1003, column: 33, scope: !11968)
!11970 = !DILocation(line: 1006, column: 61, scope: !11936)
!11971 = !DILocation(line: 1006, column: 81, scope: !11936)
!11972 = !DILocation(line: 1006, column: 22, scope: !11936)
!11973 = !DILocation(line: 1006, column: 42, scope: !11936)
!11974 = !DILocation(line: 1009, column: 12, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11936, file: !11331, line: 1009, column: 6)
!11976 = !DILocation(line: 1009, column: 17, scope: !11975)
!11977 = !DILocation(line: 1009, column: 35, scope: !11975)
!11978 = !DILocation(line: 1009, column: 6, scope: !11936)
!11979 = !DILocation(line: 1011, column: 24, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11975, file: !11331, line: 1010, column: 3)
!11981 = !DILocation(line: 1011, column: 33, scope: !11980)
!11982 = !DILocation(line: 1012, column: 3, scope: !11980)
!11983 = !DILocation(line: 1013, column: 17, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11975, file: !11331, line: 1013, column: 11)
!11985 = !DILocation(line: 1013, column: 22, scope: !11984)
!11986 = !DILocation(line: 1013, column: 39, scope: !11984)
!11987 = !DILocation(line: 0, scope: !11984)
!11988 = !DILocation(line: 1013, column: 11, scope: !11975)
!11989 = !DILocation(line: 1015, column: 33, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11984, file: !11331, line: 1014, column: 3)
!11991 = !DILocation(line: 1016, column: 3, scope: !11990)
!11992 = !DILocation(line: 1019, column: 33, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11984, file: !11331, line: 1018, column: 3)
!11994 = !DILocation(line: 1023, column: 12, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11936, file: !11331, line: 1023, column: 6)
!11996 = !DILocation(line: 1023, column: 16, scope: !11995)
!11997 = !DILocation(line: 1029, column: 24, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11995, file: !11331, line: 1028, column: 3)
!11999 = !DILocation(line: 1029, column: 33, scope: !11998)
!12000 = !DILocation(line: 1033, column: 12, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11936, file: !11331, line: 1033, column: 6)
!12002 = !DILocation(line: 1033, column: 15, scope: !12001)
!12003 = !DILocation(line: 1033, column: 30, scope: !12001)
!12004 = !DILocation(line: 1033, column: 6, scope: !11936)
!12005 = !DILocation(line: 1039, column: 28, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12001, file: !11331, line: 1038, column: 3)
!12007 = !DILocation(line: 1039, column: 37, scope: !12006)
!12008 = !DILocation(line: 1041, column: 54, scope: !11936)
!12009 = !DILocation(line: 1041, column: 62, scope: !11936)
!12010 = !DILocation(line: 1041, column: 26, scope: !11936)
!12011 = !DILocation(line: 1041, column: 36, scope: !11936)
!12012 = !DILocation(line: 1042, column: 49, scope: !11936)
!12013 = !DILocation(line: 1042, column: 57, scope: !11936)
!12014 = !DILocation(line: 1042, column: 26, scope: !11936)
!12015 = !DILocation(line: 1042, column: 31, scope: !11936)
!12016 = !DILocation(line: 1043, column: 50, scope: !11936)
!12017 = !DILocation(line: 1043, column: 78, scope: !11936)
!12018 = !DILocation(line: 1043, column: 26, scope: !11936)
!12019 = !DILocation(line: 1043, column: 31, scope: !11936)
!12020 = !DILocation(line: 1044, column: 52, scope: !11936)
!12021 = !DILocation(line: 1044, column: 102, scope: !11936)
!12022 = !DILocation(line: 1044, column: 109, scope: !11936)
!12023 = !DILocation(line: 1044, column: 26, scope: !11936)
!12024 = !DILocation(line: 1044, column: 31, scope: !11936)
!12025 = !DILocation(line: 1045, column: 50, scope: !11936)
!12026 = !DILocation(line: 1045, column: 78, scope: !11936)
!12027 = !DILocation(line: 1045, column: 26, scope: !11936)
!12028 = !DILocation(line: 1045, column: 31, scope: !11936)
!12029 = !DILocation(line: 1046, column: 1, scope: !11936)
!12030 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11331, file: !11331, line: 1056, type: !12031, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12033)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{null, !11694, !890}
!12033 = !{!12034, !12035}
!12034 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12030, file: !11331, line: 1056, type: !11694)
!12035 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12030, file: !11331, line: 1056, type: !890)
!12036 = !DILocation(line: 0, scope: !12030)
!12037 = !DILocation(line: 1059, column: 22, scope: !12030)
!12038 = !DILocation(line: 1059, column: 32, scope: !12030)
!12039 = !DILocation(line: 1062, column: 53, scope: !12030)
!12040 = !DILocation(line: 1062, column: 58, scope: !12030)
!12041 = !DILocation(line: 1062, column: 22, scope: !12030)
!12042 = !DILocation(line: 1062, column: 35, scope: !12030)
!12043 = !DILocation(line: 1065, column: 54, scope: !12030)
!12044 = !DILocation(line: 1065, column: 59, scope: !12030)
!12045 = !DILocation(line: 1065, column: 22, scope: !12030)
!12046 = !DILocation(line: 1065, column: 36, scope: !12030)
!12047 = !DILocation(line: 1068, column: 55, scope: !12030)
!12048 = !DILocation(line: 1068, column: 60, scope: !12030)
!12049 = !DILocation(line: 1068, column: 22, scope: !12030)
!12050 = !DILocation(line: 1068, column: 37, scope: !12030)
!12051 = !DILocation(line: 1071, column: 56, scope: !12030)
!12052 = !DILocation(line: 1071, column: 79, scope: !12030)
!12053 = !DILocation(line: 1071, column: 22, scope: !12030)
!12054 = !DILocation(line: 1071, column: 37, scope: !12030)
!12055 = !DILocation(line: 1074, column: 34, scope: !12030)
!12056 = !DILocation(line: 1074, column: 38, scope: !12030)
!12057 = !DILocation(line: 1074, column: 14, scope: !12030)
!12058 = !DILocation(line: 1075, column: 1, scope: !12030)
!12059 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11331, file: !11331, line: 1082, type: !3339, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12060 = !DILocation(line: 1085, column: 6, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12059, file: !11331, line: 1085, column: 6)
!12062 = !DILocation(line: 1085, column: 6, scope: !12059)
!12063 = !DILocation(line: 1088, column: 5, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12061, file: !11331, line: 1086, column: 3)
!12065 = !DILocation(line: 1091, column: 5, scope: !12064)
!12066 = !DILocation(line: 1092, column: 3, scope: !12064)
!12067 = !DILocation(line: 1093, column: 1, scope: !12059)
!12068 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11331, file: !11331, line: 1099, type: !3339, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12069 = !DILocation(line: 1104, column: 1, scope: !12068)
!12070 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12071, file: !12071, line: 257, type: !6202, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12072)
!12071 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12072 = !{!12073}
!12073 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12070, file: !12071, line: 257, type: !121)
!12074 = !DILocation(line: 0, scope: !12070)
!12075 = !DILocation(line: 260, column: 3, scope: !12070)
!12076 = !DILocation(line: 261, column: 1, scope: !12070)
!12077 = distinct !DISubprogram(name: "LL_InitTick", scope: !12078, file: !12078, line: 260, type: !9348, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12079)
!12078 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12079 = !{!12080, !12081}
!12080 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12077, file: !12078, line: 260, type: !121)
!12081 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12077, file: !12078, line: 260, type: !121)
!12082 = !DILocation(line: 0, scope: !12077)
!12083 = !DILocation(line: 263, column: 46, scope: !12077)
!12084 = !DILocation(line: 263, column: 55, scope: !12077)
!12085 = !DILocation(line: 263, column: 18, scope: !12077)
!12086 = !DILocation(line: 264, column: 18, scope: !12077)
!12087 = !DILocation(line: 265, column: 18, scope: !12077)
!12088 = !DILocation(line: 267, column: 1, scope: !12077)
!12089 = distinct !DISubprogram(name: "LL_mDelay", scope: !12071, file: !12071, line: 273, type: !6202, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12090)
!12090 = !{!12091, !12092}
!12091 = !DILocalVariable(name: "Delay", arg: 1, scope: !12089, file: !12071, line: 273, type: !121)
!12092 = !DILocalVariable(name: "tmp", scope: !12089, file: !12071, line: 275, type: !120)
!12093 = !DILocation(line: 0, scope: !12089)
!12094 = !DILocation(line: 275, column: 3, scope: !12089)
!12095 = !DILocation(line: 275, column: 18, scope: !12089)
!12096 = !DILocation(line: 275, column: 33, scope: !12089)
!12097 = !DILocation(line: 277, column: 10, scope: !12089)
!12098 = !DILocation(line: 280, column: 12, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12089, file: !12071, line: 280, column: 6)
!12100 = !DILocation(line: 285, column: 3, scope: !12089)
!12101 = !DILocation(line: 287, column: 18, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12103, file: !12071, line: 287, column: 8)
!12103 = distinct !DILexicalBlock(scope: !12089, file: !12071, line: 286, column: 3)
!12104 = !DILocation(line: 292, column: 1, scope: !12089)
!12105 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12071, file: !12071, line: 323, type: !6202, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12106)
!12106 = !{!12107}
!12107 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12105, file: !12071, line: 323, type: !121)
!12108 = !DILocation(line: 0, scope: !12105)
!12109 = !DILocation(line: 326, column: 19, scope: !12105)
!12110 = !DILocation(line: 327, column: 1, scope: !12105)
!12111 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12071, file: !12071, line: 338, type: !12112, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12115)
!12112 = !DISubroutineType(types: !12113)
!12113 = !{!12114, !121}
!12114 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !835, line: 201, baseType: !834)
!12115 = !{!12116, !12117, !12118, !12119, !12120}
!12116 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12111, file: !12071, line: 338, type: !121)
!12117 = !DILocalVariable(name: "timeout", scope: !12111, file: !12071, line: 340, type: !121)
!12118 = !DILocalVariable(name: "getlatency", scope: !12111, file: !12071, line: 341, type: !121)
!12119 = !DILocalVariable(name: "latency", scope: !12111, file: !12071, line: 342, type: !121)
!12120 = !DILocalVariable(name: "status", scope: !12111, file: !12071, line: 343, type: !12114)
!12121 = !DILocation(line: 0, scope: !12111)
!12122 = !DILocation(line: 347, column: 21, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12111, file: !12071, line: 347, column: 6)
!12124 = !DILocation(line: 347, column: 6, scope: !12111)
!12125 = !DILocation(line: 353, column: 8, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !12071, line: 353, column: 8)
!12127 = distinct !DILexicalBlock(scope: !12123, file: !12071, line: 352, column: 3)
!12128 = !DILocation(line: 353, column: 40, scope: !12126)
!12129 = !DILocation(line: 353, column: 8, scope: !12127)
!12130 = !DILocation(line: 356, column: 26, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !12071, line: 356, column: 10)
!12132 = distinct !DILexicalBlock(scope: !12126, file: !12071, line: 354, column: 5)
!12133 = !DILocation(line: 356, column: 55, scope: !12131)
!12134 = !DILocation(line: 362, column: 55, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12132, file: !12071, line: 362, column: 10)
!12136 = !DILocation(line: 368, column: 55, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12132, file: !12071, line: 368, column: 10)
!12138 = !DILocation(line: 374, column: 26, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12132, file: !12071, line: 374, column: 10)
!12140 = !DILocation(line: 374, column: 55, scope: !12139)
!12141 = !DILocation(line: 380, column: 28, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !12071, line: 380, column: 12)
!12143 = distinct !DILexicalBlock(scope: !12139, file: !12071, line: 379, column: 7)
!12144 = !DILocation(line: 380, column: 57, scope: !12142)
!12145 = !DILocation(line: 387, column: 8, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12127, file: !12071, line: 387, column: 8)
!12147 = !DILocation(line: 387, column: 40, scope: !12146)
!12148 = !DILocation(line: 387, column: 8, scope: !12127)
!12149 = !DILocation(line: 390, column: 26, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !12071, line: 390, column: 10)
!12151 = distinct !DILexicalBlock(scope: !12146, file: !12071, line: 388, column: 5)
!12152 = !DILocation(line: 390, column: 55, scope: !12150)
!12153 = !DILocation(line: 396, column: 26, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12151, file: !12071, line: 396, column: 10)
!12155 = !DILocation(line: 396, column: 55, scope: !12154)
!12156 = !DILocation(line: 402, column: 26, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !12071, line: 402, column: 10)
!12158 = !DILocation(line: 402, column: 55, scope: !12157)
!12159 = !DILocation(line: 407, column: 26, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12151, file: !12071, line: 407, column: 10)
!12161 = !DILocation(line: 407, column: 55, scope: !12160)
!12162 = !DILocation(line: 413, column: 28, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !12071, line: 413, column: 12)
!12164 = distinct !DILexicalBlock(scope: !12160, file: !12071, line: 412, column: 7)
!12165 = !DILocation(line: 413, column: 57, scope: !12163)
!12166 = !DILocation(line: 0, scope: !12127)
!12167 = !DILocation(line: 420, column: 8, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12127, file: !12071, line: 420, column: 8)
!12169 = !DILocation(line: 420, column: 40, scope: !12168)
!12170 = !DILocation(line: 420, column: 8, scope: !12127)
!12171 = !DILocation(line: 423, column: 26, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !12071, line: 423, column: 10)
!12173 = distinct !DILexicalBlock(scope: !12168, file: !12071, line: 421, column: 5)
!12174 = !DILocation(line: 423, column: 55, scope: !12172)
!12175 = !DILocation(line: 429, column: 26, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12173, file: !12071, line: 429, column: 10)
!12177 = !DILocation(line: 429, column: 55, scope: !12176)
!12178 = !DILocation(line: 435, column: 28, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !12071, line: 435, column: 12)
!12180 = distinct !DILexicalBlock(scope: !12176, file: !12071, line: 434, column: 7)
!12181 = !DILocation(line: 435, column: 57, scope: !12179)
!12182 = !DILocation(line: 444, column: 5, scope: !12127)
!12183 = !DILocation(line: 448, column: 5, scope: !12127)
!12184 = !DILocation(line: 451, column: 18, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12127, file: !12071, line: 449, column: 5)
!12186 = !DILocation(line: 452, column: 12, scope: !12185)
!12187 = !DILocation(line: 453, column: 26, scope: !12127)
!12188 = !DILocation(line: 453, column: 38, scope: !12127)
!12189 = !DILocation(line: 453, column: 5, scope: !12185)
!12190 = distinct !{!12190, !12183, !12191}
!12191 = !DILocation(line: 453, column: 54, scope: !12127)
!12192 = !DILocation(line: 0, scope: !12123)
!12193 = !DILocation(line: 464, column: 3, scope: !12111)
!12194 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12195, file: !12195, line: 519, type: !6192, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12195 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12196 = !DILocation(line: 521, column: 21, scope: !12194)
!12197 = !DILocation(line: 521, column: 3, scope: !12194)
!12198 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5917, file: !5917, line: 1543, type: !6202, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12199)
!12199 = !{!12200}
!12200 = !DILocalVariable(name: "Latency", arg: 1, scope: !12198, file: !5917, line: 1543, type: !121)
!12201 = !DILocation(line: 0, scope: !12198)
!12202 = !DILocation(line: 1545, column: 3, scope: !12198)
!12203 = !DILocation(line: 1546, column: 1, scope: !12198)
!12204 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5917, file: !5917, line: 1569, type: !6192, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12205 = !DILocation(line: 1571, column: 21, scope: !12204)
!12206 = !DILocation(line: 1571, column: 3, scope: !12204)
!12207 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12071, file: !12071, line: 483, type: !12208, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12224)
!12208 = !DISubroutineType(types: !12209)
!12209 = !{!12114, !12210, !12217}
!12210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12211, size: 32)
!12211 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12078, line: 114, baseType: !12212)
!12212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12078, line: 94, size: 96, elements: !12213)
!12213 = !{!12214, !12215, !12216}
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12212, file: !12078, line: 96, baseType: !121, size: 32)
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12212, file: !12078, line: 102, baseType: !121, size: 32, offset: 32)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12212, file: !12078, line: 109, baseType: !121, size: 32, offset: 64)
!12217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12218, size: 32)
!12218 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12078, line: 139, baseType: !12219)
!12219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12078, line: 119, size: 96, elements: !12220)
!12220 = !{!12221, !12222, !12223}
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12219, file: !12078, line: 121, baseType: !121, size: 32)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12219, file: !12078, line: 127, baseType: !121, size: 32, offset: 32)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12219, file: !12078, line: 133, baseType: !121, size: 32, offset: 64)
!12224 = !{!12225, !12226, !12227, !12228}
!12225 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12207, file: !12071, line: 483, type: !12210)
!12226 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12207, file: !12071, line: 484, type: !12217)
!12227 = !DILocalVariable(name: "status", scope: !12207, file: !12071, line: 486, type: !12114)
!12228 = !DILocalVariable(name: "pllfreq", scope: !12207, file: !12071, line: 487, type: !121)
!12229 = !DILocation(line: 0, scope: !12207)
!12230 = !DILocation(line: 490, column: 6, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12207, file: !12071, line: 490, column: 6)
!12232 = !DILocation(line: 490, column: 25, scope: !12231)
!12233 = !DILocation(line: 490, column: 6, scope: !12207)
!12234 = !DILocation(line: 493, column: 15, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12231, file: !12071, line: 491, column: 3)
!12236 = !DILocation(line: 496, column: 8, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12235, file: !12071, line: 496, column: 8)
!12238 = !DILocation(line: 496, column: 29, scope: !12237)
!12239 = !DILocation(line: 496, column: 8, scope: !12235)
!12240 = !DILocation(line: 498, column: 7, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12237, file: !12071, line: 497, column: 5)
!12242 = !DILocation(line: 499, column: 7, scope: !12241)
!12243 = !DILocation(line: 499, column: 14, scope: !12241)
!12244 = !DILocation(line: 499, column: 35, scope: !12241)
!12245 = distinct !{!12245, !12242, !12246}
!12246 = !DILocation(line: 502, column: 7, scope: !12241)
!12247 = !DILocation(line: 506, column: 76, scope: !12235)
!12248 = !DILocation(line: 506, column: 103, scope: !12235)
!12249 = !DILocation(line: 507, column: 54, scope: !12235)
!12250 = !DILocation(line: 506, column: 5, scope: !12235)
!12251 = !DILocation(line: 510, column: 14, scope: !12235)
!12252 = !DILocation(line: 511, column: 3, scope: !12235)
!12253 = !DILocation(line: 0, scope: !12231)
!12254 = !DILocation(line: 518, column: 3, scope: !12207)
!12255 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12071, file: !12071, line: 642, type: !12256, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12258)
!12256 = !DISubroutineType(types: !12257)
!12257 = !{!12114}
!12258 = !{!12259}
!12259 = !DILocalVariable(name: "status", scope: !12255, file: !12071, line: 644, type: !12114)
!12260 = !DILocation(line: 0, scope: !12255)
!12261 = !DILocation(line: 647, column: 6, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12255, file: !12071, line: 647, column: 6)
!12263 = !DILocation(line: 647, column: 27, scope: !12262)
!12264 = !DILocation(line: 655, column: 6, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12255, file: !12071, line: 655, column: 6)
!12266 = !DILocation(line: 655, column: 30, scope: !12265)
!12267 = !DILocation(line: 663, column: 6, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12255, file: !12071, line: 663, column: 6)
!12269 = !DILocation(line: 663, column: 30, scope: !12268)
!12270 = !DILocation(line: 663, column: 6, scope: !12255)
!12271 = !DILocation(line: 669, column: 3, scope: !12255)
!12272 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12071, file: !12071, line: 611, type: !12273, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12275)
!12273 = !DISubroutineType(types: !12274)
!12274 = !{!121, !121, !12210}
!12275 = !{!12276, !12277, !12278}
!12276 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12272, file: !12071, line: 611, type: !121)
!12277 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12272, file: !12071, line: 611, type: !12210)
!12278 = !DILocalVariable(name: "pllfreq", scope: !12272, file: !12071, line: 613, type: !121)
!12279 = !DILocation(line: 0, scope: !12272)
!12280 = !DILocation(line: 622, column: 56, scope: !12272)
!12281 = !DILocation(line: 622, column: 61, scope: !12272)
!12282 = !DILocation(line: 622, column: 32, scope: !12272)
!12283 = !DILocation(line: 626, column: 45, scope: !12272)
!12284 = !DILocation(line: 626, column: 50, scope: !12272)
!12285 = !DILocation(line: 626, column: 21, scope: !12272)
!12286 = !DILocation(line: 630, column: 47, scope: !12272)
!12287 = !DILocation(line: 630, column: 82, scope: !12272)
!12288 = !DILocation(line: 630, column: 21, scope: !12272)
!12289 = !DILocation(line: 633, column: 3, scope: !12272)
!12290 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8147, file: !8147, line: 3007, type: !6192, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12291 = !DILocation(line: 3009, column: 11, scope: !12290)
!12292 = !DILocation(line: 3009, column: 44, scope: !12290)
!12293 = !DILocation(line: 3009, column: 3, scope: !12290)
!12294 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8147, file: !8147, line: 2987, type: !3339, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12295 = !DILocation(line: 2989, column: 3, scope: !12294)
!12296 = !DILocation(line: 2990, column: 1, scope: !12294)
!12297 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8147, file: !8147, line: 4304, type: !8266, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12298)
!12298 = !{!12299, !12300, !12301, !12302}
!12299 = !DILocalVariable(name: "Source", arg: 1, scope: !12297, file: !8147, line: 4304, type: !121)
!12300 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12297, file: !8147, line: 4304, type: !121)
!12301 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12297, file: !8147, line: 4304, type: !121)
!12302 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12297, file: !8147, line: 4304, type: !121)
!12303 = !DILocation(line: 0, scope: !12297)
!12304 = !DILocation(line: 4306, column: 3, scope: !12297)
!12305 = !DILocation(line: 4308, column: 3, scope: !12297)
!12306 = !DILocation(line: 4312, column: 1, scope: !12297)
!12307 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12071, file: !12071, line: 681, type: !12308, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12310)
!12308 = !DISubroutineType(types: !12309)
!12309 = !{!12114, !121, !12217}
!12310 = !{!12311, !12312, !12313, !12314}
!12311 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12307, file: !12071, line: 681, type: !121)
!12312 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12307, file: !12071, line: 681, type: !12217)
!12313 = !DILocalVariable(name: "status", scope: !12307, file: !12071, line: 683, type: !12114)
!12314 = !DILocalVariable(name: "hclk_frequency", scope: !12307, file: !12071, line: 684, type: !121)
!12315 = !DILocation(line: 0, scope: !12307)
!12316 = !DILocation(line: 691, column: 20, scope: !12307)
!12317 = !DILocation(line: 694, column: 6, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12307, file: !12071, line: 694, column: 6)
!12319 = !DILocation(line: 694, column: 22, scope: !12318)
!12320 = !DILocation(line: 694, column: 6, scope: !12307)
!12321 = !DILocation(line: 697, column: 14, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12318, file: !12071, line: 695, column: 3)
!12323 = !DILocation(line: 701, column: 13, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12307, file: !12071, line: 701, column: 6)
!12325 = !DILocation(line: 701, column: 6, scope: !12307)
!12326 = !DILocation(line: 704, column: 5, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12324, file: !12071, line: 702, column: 3)
!12328 = !DILocation(line: 705, column: 5, scope: !12327)
!12329 = !DILocation(line: 705, column: 12, scope: !12327)
!12330 = !DILocation(line: 705, column: 33, scope: !12327)
!12331 = distinct !{!12331, !12328, !12332}
!12332 = !DILocation(line: 708, column: 5, scope: !12327)
!12333 = !DILocation(line: 711, column: 49, scope: !12327)
!12334 = !DILocation(line: 711, column: 5, scope: !12327)
!12335 = !DILocation(line: 712, column: 5, scope: !12327)
!12336 = !DILocation(line: 713, column: 5, scope: !12327)
!12337 = !DILocation(line: 713, column: 12, scope: !12327)
!12338 = !DILocation(line: 713, column: 37, scope: !12327)
!12339 = distinct !{!12339, !12336, !12340}
!12340 = !DILocation(line: 716, column: 5, scope: !12327)
!12341 = !DILocation(line: 719, column: 50, scope: !12327)
!12342 = !DILocation(line: 719, column: 5, scope: !12327)
!12343 = !DILocation(line: 720, column: 50, scope: !12327)
!12344 = !DILocation(line: 720, column: 5, scope: !12327)
!12345 = !DILocation(line: 721, column: 3, scope: !12327)
!12346 = !DILocation(line: 724, column: 6, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12307, file: !12071, line: 724, column: 6)
!12348 = !DILocation(line: 724, column: 22, scope: !12347)
!12349 = !DILocation(line: 724, column: 6, scope: !12307)
!12350 = !DILocation(line: 727, column: 14, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12347, file: !12071, line: 725, column: 3)
!12352 = !DILocation(line: 728, column: 3, scope: !12351)
!12353 = !DILocation(line: 731, column: 13, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12307, file: !12071, line: 731, column: 6)
!12355 = !DILocation(line: 731, column: 6, scope: !12307)
!12356 = !DILocation(line: 733, column: 5, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !12071, line: 732, column: 3)
!12358 = !DILocation(line: 734, column: 3, scope: !12357)
!12359 = !DILocation(line: 736, column: 3, scope: !12307)
!12360 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8147, file: !8147, line: 4184, type: !3339, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12361 = !DILocation(line: 4186, column: 3, scope: !12360)
!12362 = !DILocation(line: 4187, column: 1, scope: !12360)
!12363 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8147, file: !8147, line: 4205, type: !6192, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12364 = !DILocation(line: 4207, column: 11, scope: !12363)
!12365 = !DILocation(line: 4207, column: 44, scope: !12363)
!12366 = !DILocation(line: 4207, column: 3, scope: !12363)
!12367 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8147, file: !8147, line: 3224, type: !6202, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12368)
!12368 = !{!12369}
!12369 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12367, file: !8147, line: 3224, type: !121)
!12370 = !DILocation(line: 0, scope: !12367)
!12371 = !DILocation(line: 3226, column: 3, scope: !12367)
!12372 = !DILocation(line: 3227, column: 1, scope: !12367)
!12373 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8147, file: !8147, line: 3188, type: !6202, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12374)
!12374 = !{!12375}
!12375 = !DILocalVariable(name: "Source", arg: 1, scope: !12373, file: !8147, line: 3188, type: !121)
!12376 = !DILocation(line: 0, scope: !12373)
!12377 = !DILocation(line: 3190, column: 3, scope: !12373)
!12378 = !DILocation(line: 3191, column: 1, scope: !12373)
!12379 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8147, file: !8147, line: 3204, type: !6192, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12380 = !DILocation(line: 3206, column: 21, scope: !12379)
!12381 = !DILocation(line: 3206, column: 3, scope: !12379)
!12382 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8147, file: !8147, line: 3240, type: !6202, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12383)
!12383 = !{!12384}
!12384 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12382, file: !8147, line: 3240, type: !121)
!12385 = !DILocation(line: 0, scope: !12382)
!12386 = !DILocation(line: 3242, column: 3, scope: !12382)
!12387 = !DILocation(line: 3243, column: 1, scope: !12382)
!12388 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8147, file: !8147, line: 3256, type: !6202, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12389)
!12389 = !{!12390}
!12390 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12388, file: !8147, line: 3256, type: !121)
!12391 = !DILocation(line: 0, scope: !12388)
!12392 = !DILocation(line: 3258, column: 3, scope: !12388)
!12393 = !DILocation(line: 3259, column: 1, scope: !12388)
!12394 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8147, file: !8147, line: 5969, type: !6192, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12395 = !DILocation(line: 5971, column: 11, scope: !12394)
!12396 = !DILocation(line: 5971, column: 47, scope: !12394)
!12397 = !DILocation(line: 5971, column: 3, scope: !12394)
!12398 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8147, file: !8147, line: 5153, type: !6192, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12399 = !DILocation(line: 5155, column: 11, scope: !12398)
!12400 = !DILocation(line: 5155, column: 47, scope: !12398)
!12401 = !DILocation(line: 5155, column: 3, scope: !12398)
!12402 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12071, file: !12071, line: 540, type: !12403, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !12405)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{!12114, !121, !121, !12210, !12217}
!12405 = !{!12406, !12407, !12408, !12409, !12410, !12411}
!12406 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12402, file: !12071, line: 540, type: !121)
!12407 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12402, file: !12071, line: 540, type: !121)
!12408 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12402, file: !12071, line: 541, type: !12210)
!12409 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12402, file: !12071, line: 541, type: !12217)
!12410 = !DILocalVariable(name: "status", scope: !12402, file: !12071, line: 543, type: !12114)
!12411 = !DILocalVariable(name: "pllfreq", scope: !12402, file: !12071, line: 544, type: !121)
!12412 = !DILocation(line: 0, scope: !12402)
!12413 = !DILocation(line: 551, column: 6, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12402, file: !12071, line: 551, column: 6)
!12415 = !DILocation(line: 551, column: 25, scope: !12414)
!12416 = !DILocation(line: 551, column: 6, scope: !12402)
!12417 = !DILocation(line: 554, column: 15, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12414, file: !12071, line: 552, column: 3)
!12419 = !DILocation(line: 557, column: 8, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12418, file: !12071, line: 557, column: 8)
!12421 = !DILocation(line: 557, column: 29, scope: !12420)
!12422 = !DILocation(line: 557, column: 8, scope: !12418)
!12423 = !DILocation(line: 560, column: 20, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !12071, line: 560, column: 10)
!12425 = distinct !DILexicalBlock(scope: !12420, file: !12071, line: 558, column: 5)
!12426 = !DILocation(line: 560, column: 10, scope: !12425)
!12427 = !DILocation(line: 562, column: 9, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12424, file: !12071, line: 561, column: 7)
!12429 = !DILocation(line: 563, column: 7, scope: !12428)
!12430 = !DILocation(line: 566, column: 9, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12424, file: !12071, line: 565, column: 7)
!12432 = !DILocation(line: 570, column: 7, scope: !12425)
!12433 = !DILocation(line: 571, column: 7, scope: !12425)
!12434 = !DILocation(line: 571, column: 14, scope: !12425)
!12435 = !DILocation(line: 571, column: 35, scope: !12425)
!12436 = distinct !{!12436, !12433, !12437}
!12437 = !DILocation(line: 574, column: 7, scope: !12425)
!12438 = !DILocation(line: 578, column: 76, scope: !12418)
!12439 = !DILocation(line: 578, column: 103, scope: !12418)
!12440 = !DILocation(line: 579, column: 54, scope: !12418)
!12441 = !DILocation(line: 578, column: 5, scope: !12418)
!12442 = !DILocation(line: 582, column: 14, scope: !12418)
!12443 = !DILocation(line: 583, column: 3, scope: !12418)
!12444 = !DILocation(line: 0, scope: !12414)
!12445 = !DILocation(line: 590, column: 3, scope: !12402)
!12446 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8147, file: !8147, line: 2969, type: !6192, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12447 = !DILocation(line: 2971, column: 11, scope: !12446)
!12448 = !DILocation(line: 2971, column: 44, scope: !12446)
!12449 = !DILocation(line: 2971, column: 3, scope: !12446)
!12450 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8147, file: !8147, line: 2929, type: !3339, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12451 = !DILocation(line: 2931, column: 3, scope: !12450)
!12452 = !DILocation(line: 2932, column: 1, scope: !12450)
!12453 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8147, file: !8147, line: 2939, type: !3339, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12454 = !DILocation(line: 2941, column: 3, scope: !12453)
!12455 = !DILocation(line: 2942, column: 1, scope: !12453)
!12456 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8147, file: !8147, line: 2949, type: !3339, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !317)
!12457 = !DILocation(line: 2951, column: 3, scope: !12456)
!12458 = !DILocation(line: 2952, column: 1, scope: !12456)
!12459 = distinct !DISubprogram(name: "z_device_state_init", scope: !12460, file: !12460, line: 23, type: !3339, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12461)
!12460 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12461 = !{!12462}
!12462 = !DILocalVariable(name: "dev", scope: !12459, file: !12460, line: 25, type: !12463)
!12463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12464, size: 32)
!12464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12465)
!12465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12466)
!12466 = !{!12467, !12468, !12469, !12470, !12476, !12477}
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12465, file: !141, line: 380, baseType: !144, size: 32)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12465, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12465, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12465, file: !141, line: 386, baseType: !12471, size: 32, offset: 96)
!12471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12472, size: 32)
!12472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12473)
!12473 = !{!12474, !12475}
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12472, file: !141, line: 359, baseType: !154, size: 8)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12472, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12465, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12465, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12478 = !DILocation(line: 0, scope: !12459)
!12479 = !DILocation(line: 31, column: 1, scope: !12459)
!12480 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12460, file: !12460, line: 33, type: !12481, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12483)
!12481 = !DISubroutineType(types: !12482)
!12482 = !{!12463, !144}
!12483 = !{!12484, !12485}
!12484 = !DILocalVariable(name: "name", arg: 1, scope: !12480, file: !12460, line: 33, type: !144)
!12485 = !DILocalVariable(name: "dev", scope: !12480, file: !12460, line: 35, type: !12463)
!12486 = !DILocation(line: 0, scope: !12480)
!12487 = !DILocation(line: 40, column: 12, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12480, file: !12460, line: 40, column: 6)
!12489 = !DILocation(line: 40, column: 21, scope: !12488)
!12490 = !DILocation(line: 40, column: 25, scope: !12488)
!12491 = !DILocation(line: 40, column: 33, scope: !12488)
!12492 = !DILocation(line: 40, column: 6, scope: !12480)
!12493 = !DILocation(line: 55, column: 2, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12480, file: !12460, line: 55, column: 2)
!12495 = !DILocation(line: 50, column: 7, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !12460, line: 50, column: 7)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !12460, line: 49, column: 57)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !12460, line: 49, column: 2)
!12499 = distinct !DILexicalBlock(scope: !12480, file: !12460, line: 49, column: 2)
!12500 = !DILocation(line: 50, column: 30, scope: !12496)
!12501 = !DILocation(line: 50, column: 39, scope: !12496)
!12502 = !DILocation(line: 50, column: 44, scope: !12496)
!12503 = !DILocation(line: 50, column: 7, scope: !12497)
!12504 = !DILocation(line: 49, column: 53, scope: !12498)
!12505 = !DILocation(line: 49, column: 33, scope: !12498)
!12506 = !DILocation(line: 49, column: 2, scope: !12499)
!12507 = distinct !{!12507, !12506, !12508}
!12508 = !DILocation(line: 53, column: 2, scope: !12499)
!12509 = !DILocation(line: 56, column: 7, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !12460, line: 56, column: 7)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !12460, line: 55, column: 57)
!12512 = distinct !DILexicalBlock(scope: !12494, file: !12460, line: 55, column: 2)
!12513 = !DILocation(line: 56, column: 30, scope: !12510)
!12514 = !DILocation(line: 56, column: 52, scope: !12510)
!12515 = !DILocation(line: 56, column: 34, scope: !12510)
!12516 = !DILocation(line: 56, column: 58, scope: !12510)
!12517 = !DILocation(line: 56, column: 7, scope: !12511)
!12518 = !DILocation(line: 55, column: 53, scope: !12512)
!12519 = !DILocation(line: 55, column: 33, scope: !12512)
!12520 = distinct !{!12520, !12493, !12521}
!12521 = !DILocation(line: 59, column: 2, scope: !12494)
!12522 = !DILocation(line: 62, column: 1, scope: !12480)
!12523 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12460, file: !12460, line: 93, type: !12524, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12526)
!12524 = !DISubroutineType(types: !12525)
!12525 = !{!157, !12463}
!12526 = !{!12527}
!12527 = !DILocalVariable(name: "dev", arg: 1, scope: !12523, file: !12460, line: 93, type: !12463)
!12528 = !DILocation(line: 0, scope: !12523)
!12529 = !DILocation(line: 99, column: 10, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12523, file: !12460, line: 99, column: 6)
!12531 = !DILocation(line: 99, column: 6, scope: !12523)
!12532 = !DILocation(line: 103, column: 14, scope: !12523)
!12533 = !DILocation(line: 103, column: 21, scope: !12523)
!12534 = !DILocation(line: 103, column: 33, scope: !12523)
!12535 = !DILocation(line: 103, column: 49, scope: !12523)
!12536 = !DILocation(line: 103, column: 58, scope: !12523)
!12537 = !DILocation(line: 104, column: 1, scope: !12523)
!12538 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12460, file: !12460, line: 87, type: !12539, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12542)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!204, !12541}
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12463, size: 32)
!12542 = !{!12543}
!12543 = !DILocalVariable(name: "devices", arg: 1, scope: !12538, file: !12460, line: 87, type: !12541)
!12544 = !DILocation(line: 0, scope: !12538)
!12545 = !DILocation(line: 89, column: 11, scope: !12538)
!12546 = !DILocation(line: 90, column: 2, scope: !12538)
!12547 = distinct !DISubprogram(name: "device_required_foreach", scope: !12460, file: !12460, line: 125, type: !12548, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12554)
!12548 = !DISubroutineType(types: !12549)
!12549 = !{!103, !12463, !12550, !102}
!12550 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !12551)
!12551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12552, size: 32)
!12552 = !DISubroutineType(types: !12553)
!12553 = !{!103, !12463, !102}
!12554 = !{!12555, !12556, !12557, !12558, !12559}
!12555 = !DILocalVariable(name: "dev", arg: 1, scope: !12547, file: !12460, line: 125, type: !12463)
!12556 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12547, file: !12460, line: 126, type: !12550)
!12557 = !DILocalVariable(name: "context", arg: 3, scope: !12547, file: !12460, line: 127, type: !102)
!12558 = !DILocalVariable(name: "handle_count", scope: !12547, file: !12460, line: 129, type: !204)
!12559 = !DILocalVariable(name: "handles", scope: !12547, file: !12460, line: 130, type: !160)
!12560 = !DILocation(line: 0, scope: !12547)
!12561 = !DILocation(line: 129, column: 2, scope: !12547)
!12562 = !DILocation(line: 129, column: 9, scope: !12547)
!12563 = !DILocation(line: 130, column: 35, scope: !12547)
!12564 = !DILocation(line: 132, column: 33, scope: !12547)
!12565 = !DILocation(line: 132, column: 9, scope: !12547)
!12566 = !DILocation(line: 133, column: 1, scope: !12547)
!12567 = !DILocation(line: 132, column: 2, scope: !12547)
!12568 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !12569, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12571)
!12569 = !DISubroutineType(types: !12570)
!12570 = !{!160, !12463, !2752}
!12571 = !{!12572, !12573, !12574, !12575}
!12572 = !DILocalVariable(name: "dev", arg: 1, scope: !12568, file: !141, line: 493, type: !12463)
!12573 = !DILocalVariable(name: "count", arg: 2, scope: !12568, file: !141, line: 493, type: !2752)
!12574 = !DILocalVariable(name: "rv", scope: !12568, file: !141, line: 495, type: !160)
!12575 = !DILocalVariable(name: "i", scope: !12576, file: !141, line: 498, type: !204)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !141, line: 497, column: 18)
!12577 = distinct !DILexicalBlock(scope: !12568, file: !141, line: 497, column: 6)
!12578 = !DILocation(line: 0, scope: !12568)
!12579 = !DILocation(line: 495, column: 35, scope: !12568)
!12580 = !DILocation(line: 497, column: 9, scope: !12577)
!12581 = !DILocation(line: 497, column: 6, scope: !12568)
!12582 = !DILocation(line: 0, scope: !12576)
!12583 = !DILocation(line: 500, column: 11, scope: !12576)
!12584 = !DILocation(line: 500, column: 40, scope: !12576)
!12585 = !DILocation(line: 502, column: 4, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12576, file: !141, line: 501, column: 40)
!12587 = distinct !{!12587, !12588, !12589}
!12588 = !DILocation(line: 500, column: 3, scope: !12576)
!12589 = !DILocation(line: 503, column: 3, scope: !12576)
!12590 = !DILocation(line: 504, column: 10, scope: !12576)
!12591 = !DILocation(line: 505, column: 2, scope: !12576)
!12592 = !DILocation(line: 507, column: 2, scope: !12568)
!12593 = distinct !DISubprogram(name: "device_visitor", scope: !12460, file: !12460, line: 106, type: !12594, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12596)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{!103, !160, !204, !12550, !102}
!12596 = !{!12597, !12598, !12599, !12600, !12601, !12603, !12606, !12607}
!12597 = !DILocalVariable(name: "handles", arg: 1, scope: !12593, file: !12460, line: 106, type: !160)
!12598 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12593, file: !12460, line: 107, type: !204)
!12599 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12593, file: !12460, line: 108, type: !12550)
!12600 = !DILocalVariable(name: "context", arg: 4, scope: !12593, file: !12460, line: 109, type: !102)
!12601 = !DILocalVariable(name: "i", scope: !12602, file: !12460, line: 112, type: !204)
!12602 = distinct !DILexicalBlock(scope: !12593, file: !12460, line: 112, column: 2)
!12603 = !DILocalVariable(name: "dh", scope: !12604, file: !12460, line: 113, type: !162)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !12460, line: 112, column: 44)
!12605 = distinct !DILexicalBlock(scope: !12602, file: !12460, line: 112, column: 2)
!12606 = !DILocalVariable(name: "rdev", scope: !12604, file: !12460, line: 114, type: !12463)
!12607 = !DILocalVariable(name: "rc", scope: !12604, file: !12460, line: 115, type: !103)
!12608 = !DILocation(line: 0, scope: !12593)
!12609 = !DILocation(line: 0, scope: !12602)
!12610 = !DILocation(line: 112, column: 23, scope: !12605)
!12611 = !DILocation(line: 112, column: 2, scope: !12602)
!12612 = distinct !{!12612, !12611, !12613}
!12613 = !DILocation(line: 120, column: 2, scope: !12602)
!12614 = !DILocation(line: 113, column: 24, scope: !12604)
!12615 = !DILocation(line: 0, scope: !12604)
!12616 = !DILocation(line: 114, column: 31, scope: !12604)
!12617 = !DILocation(line: 115, column: 12, scope: !12604)
!12618 = !DILocation(line: 117, column: 10, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12604, file: !12460, line: 117, column: 7)
!12620 = !DILocation(line: 112, column: 39, scope: !12605)
!12621 = !DILocation(line: 123, column: 1, scope: !12593)
!12622 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !12623, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{!12463, !162}
!12625 = !{!12626, !12627, !12628}
!12626 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12622, file: !141, line: 439, type: !162)
!12627 = !DILocalVariable(name: "dev", scope: !12622, file: !141, line: 443, type: !12463)
!12628 = !DILocalVariable(name: "numdev", scope: !12622, file: !141, line: 444, type: !204)
!12629 = !DILocation(line: 0, scope: !12622)
!12630 = !DILocation(line: 446, column: 7, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12622, file: !141, line: 446, column: 6)
!12632 = !DILocation(line: 446, column: 18, scope: !12631)
!12633 = !DILocation(line: 446, column: 23, scope: !12631)
!12634 = !DILocation(line: 450, column: 2, scope: !12622)
!12635 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12460, file: !12460, line: 135, type: !12548, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12636)
!12636 = !{!12637, !12638, !12639, !12640, !12641}
!12637 = !DILocalVariable(name: "dev", arg: 1, scope: !12635, file: !12460, line: 135, type: !12463)
!12638 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12635, file: !12460, line: 136, type: !12550)
!12639 = !DILocalVariable(name: "context", arg: 3, scope: !12635, file: !12460, line: 137, type: !102)
!12640 = !DILocalVariable(name: "handle_count", scope: !12635, file: !12460, line: 139, type: !204)
!12641 = !DILocalVariable(name: "handles", scope: !12635, file: !12460, line: 140, type: !160)
!12642 = !DILocation(line: 0, scope: !12635)
!12643 = !DILocation(line: 139, column: 2, scope: !12635)
!12644 = !DILocation(line: 139, column: 9, scope: !12635)
!12645 = !DILocation(line: 140, column: 35, scope: !12635)
!12646 = !DILocation(line: 142, column: 33, scope: !12635)
!12647 = !DILocation(line: 142, column: 9, scope: !12635)
!12648 = !DILocation(line: 143, column: 1, scope: !12635)
!12649 = !DILocation(line: 142, column: 2, scope: !12635)
!12650 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !12569, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !12651)
!12651 = !{!12652, !12653, !12654, !12655, !12656}
!12652 = !DILocalVariable(name: "dev", arg: 1, scope: !12650, file: !141, line: 573, type: !12463)
!12653 = !DILocalVariable(name: "count", arg: 2, scope: !12650, file: !141, line: 573, type: !2752)
!12654 = !DILocalVariable(name: "rv", scope: !12650, file: !141, line: 575, type: !160)
!12655 = !DILocalVariable(name: "region", scope: !12650, file: !141, line: 576, type: !204)
!12656 = !DILocalVariable(name: "i", scope: !12650, file: !141, line: 577, type: !204)
!12657 = !DILocation(line: 0, scope: !12650)
!12658 = !DILocation(line: 575, column: 35, scope: !12650)
!12659 = !DILocation(line: 579, column: 9, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12650, file: !141, line: 579, column: 6)
!12661 = !DILocation(line: 579, column: 6, scope: !12650)
!12662 = !DILocation(line: 582, column: 8, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !141, line: 582, column: 8)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !141, line: 581, column: 23)
!12665 = distinct !DILexicalBlock(scope: !12660, file: !141, line: 579, column: 18)
!12666 = !DILocation(line: 582, column: 12, scope: !12663)
!12667 = !DILocation(line: 585, column: 6, scope: !12664)
!12668 = !DILocation(line: 0, scope: !12665)
!12669 = !DILocation(line: 581, column: 17, scope: !12665)
!12670 = !DILocation(line: 581, column: 3, scope: !12665)
!12671 = !DILocation(line: 588, column: 10, scope: !12665)
!12672 = !DILocation(line: 588, column: 16, scope: !12665)
!12673 = !DILocation(line: 589, column: 4, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12665, file: !141, line: 588, column: 39)
!12675 = !DILocation(line: 588, column: 3, scope: !12665)
!12676 = distinct !{!12676, !12675, !12677}
!12677 = !DILocation(line: 590, column: 3, scope: !12665)
!12678 = !DILocation(line: 591, column: 10, scope: !12665)
!12679 = !DILocation(line: 592, column: 2, scope: !12665)
!12680 = !DILocation(line: 575, column: 25, scope: !12650)
!12681 = !DILocation(line: 594, column: 2, scope: !12650)
!12682 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2108, file: !2108, line: 49, type: !12683, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !317)
!12683 = !DISubroutineType(types: !12684)
!12684 = !{!2746}
!12685 = !DILocation(line: 51, column: 10, scope: !12682)
!12686 = !DILocation(line: 51, column: 20, scope: !12682)
!12687 = !DILocation(line: 51, column: 2, scope: !12682)
!12688 = distinct !DISubprogram(name: "coredump", scope: !3263, file: !3263, line: 209, type: !12689, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12835)
!12689 = !DISubroutineType(types: !12690)
!12690 = !{null, !32, !12691, !12735}
!12691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12692, size: 32)
!12692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12693)
!12693 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2877, line: 141, baseType: !12694)
!12694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2877, line: 97, size: 256, elements: !12695)
!12695 = !{!12696}
!12696 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12694, file: !2877, line: 107, baseType: !12697, size: 256)
!12697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2877, line: 98, size: 256, elements: !12698)
!12698 = !{!12699, !12704, !12709, !12714, !12719, !12724, !12729, !12734}
!12699 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 99, baseType: !12700, size: 32)
!12700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 99, size: 32, elements: !12701)
!12701 = !{!12702, !12703}
!12702 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12700, file: !2877, line: 99, baseType: !121, size: 32)
!12703 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12700, file: !2877, line: 99, baseType: !121, size: 32)
!12704 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 100, baseType: !12705, size: 32, offset: 32)
!12705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 100, size: 32, elements: !12706)
!12706 = !{!12707, !12708}
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12705, file: !2877, line: 100, baseType: !121, size: 32)
!12708 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12705, file: !2877, line: 100, baseType: !121, size: 32)
!12709 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 101, baseType: !12710, size: 32, offset: 64)
!12710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 101, size: 32, elements: !12711)
!12711 = !{!12712, !12713}
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12710, file: !2877, line: 101, baseType: !121, size: 32)
!12713 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12710, file: !2877, line: 101, baseType: !121, size: 32)
!12714 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 102, baseType: !12715, size: 32, offset: 96)
!12715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 102, size: 32, elements: !12716)
!12716 = !{!12717, !12718}
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12715, file: !2877, line: 102, baseType: !121, size: 32)
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12715, file: !2877, line: 102, baseType: !121, size: 32)
!12719 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 103, baseType: !12720, size: 32, offset: 128)
!12720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 103, size: 32, elements: !12721)
!12721 = !{!12722, !12723}
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12720, file: !2877, line: 103, baseType: !121, size: 32)
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12720, file: !2877, line: 103, baseType: !121, size: 32)
!12724 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 104, baseType: !12725, size: 32, offset: 160)
!12725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 104, size: 32, elements: !12726)
!12726 = !{!12727, !12728}
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12725, file: !2877, line: 104, baseType: !121, size: 32)
!12728 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12725, file: !2877, line: 104, baseType: !121, size: 32)
!12729 = !DIDerivedType(tag: DW_TAG_member, scope: !12697, file: !2877, line: 105, baseType: !12730, size: 32, offset: 192)
!12730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12697, file: !2877, line: 105, size: 32, elements: !12731)
!12731 = !{!12732, !12733}
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12730, file: !2877, line: 105, baseType: !121, size: 32)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12730, file: !2877, line: 105, baseType: !121, size: 32)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12697, file: !2877, line: 106, baseType: !121, size: 32, offset: 224)
!12735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12736, size: 32)
!12736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !12737)
!12737 = !{!12738, !12796, !12808, !12809, !12810, !12811, !12817, !12830}
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12736, file: !379, line: 247, baseType: !12739, size: 384)
!12739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !12740)
!12740 = !{!12741, !12765, !12772, !12773, !12774, !12783, !12784, !12785}
!12741 = !DIDerivedType(tag: DW_TAG_member, scope: !12739, file: !379, line: 60, baseType: !12742, size: 64)
!12742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12739, file: !379, line: 60, size: 64, elements: !12743)
!12743 = !{!12744, !12759}
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12742, file: !379, line: 61, baseType: !12745, size: 64)
!12745 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !12746)
!12746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !12747)
!12747 = !{!12748, !12754}
!12748 = !DIDerivedType(tag: DW_TAG_member, scope: !12746, file: !325, line: 38, baseType: !12749, size: 32)
!12749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12746, file: !325, line: 38, size: 32, elements: !12750)
!12750 = !{!12751, !12753}
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12749, file: !325, line: 39, baseType: !12752, size: 32)
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12746, size: 32)
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12749, file: !325, line: 40, baseType: !12752, size: 32)
!12754 = !DIDerivedType(tag: DW_TAG_member, scope: !12746, file: !325, line: 42, baseType: !12755, size: 32, offset: 32)
!12755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12746, file: !325, line: 42, size: 32, elements: !12756)
!12756 = !{!12757, !12758}
!12757 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12755, file: !325, line: 43, baseType: !12752, size: 32)
!12758 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12755, file: !325, line: 44, baseType: !12752, size: 32)
!12759 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12742, file: !379, line: 62, baseType: !12760, size: 64)
!12760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !12761)
!12761 = !{!12762}
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12760, file: !404, line: 50, baseType: !12763, size: 64)
!12763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12764, size: 64, elements: !363)
!12764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12760, size: 32)
!12765 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12739, file: !379, line: 68, baseType: !12766, size: 32, offset: 64)
!12766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12767, size: 32)
!12767 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !12768)
!12768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !12769)
!12769 = !{!12770}
!12770 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12768, file: !320, line: 232, baseType: !12771, size: 64)
!12771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !12746)
!12772 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12739, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!12773 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12739, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!12774 = !DIDerivedType(tag: DW_TAG_member, scope: !12739, file: !379, line: 90, baseType: !12775, size: 16, offset: 112)
!12775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12739, file: !379, line: 90, size: 16, elements: !12776)
!12776 = !{!12777, !12782}
!12777 = !DIDerivedType(tag: DW_TAG_member, scope: !12775, file: !379, line: 91, baseType: !12778, size: 16)
!12778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12775, file: !379, line: 91, size: 16, elements: !12779)
!12779 = !{!12780, !12781}
!12780 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12778, file: !379, line: 96, baseType: !425, size: 8)
!12781 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12778, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!12782 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12775, file: !379, line: 100, baseType: !429, size: 16)
!12783 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12739, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!12784 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12739, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!12785 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12739, file: !379, line: 131, baseType: !12786, size: 192, offset: 192)
!12786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !12787)
!12787 = !{!12788, !12789, !12795}
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12786, file: !320, line: 245, baseType: !12745, size: 64)
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12786, file: !320, line: 246, baseType: !12790, size: 32, offset: 64)
!12790 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !12791)
!12791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12792, size: 32)
!12792 = !DISubroutineType(types: !12793)
!12793 = !{null, !12794}
!12794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12786, size: 32)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12786, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12736, file: !379, line: 250, baseType: !12797, size: 288, offset: 384)
!12797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !12798)
!12798 = !{!12799, !12800, !12801, !12802, !12803, !12804, !12805, !12806, !12807}
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12797, file: !446, line: 26, baseType: !121, size: 32)
!12800 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12797, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12797, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12797, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12797, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12797, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12797, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12797, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12797, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12736, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12736, file: !379, line: 256, baseType: !12767, size: 64, offset: 704)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12736, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12736, file: !379, line: 300, baseType: !12812, size: 96, offset: 800)
!12812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !12813)
!12813 = !{!12814, !12815, !12816}
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12812, file: !379, line: 153, baseType: !22, size: 32)
!12815 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12812, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!12816 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12812, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!12817 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12736, file: !379, line: 325, baseType: !12818, size: 32, offset: 896)
!12818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12819, size: 32)
!12819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !12820)
!12820 = !{!12821, !12827, !12828}
!12821 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12819, file: !296, line: 5074, baseType: !12822, size: 96)
!12822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !12823)
!12823 = !{!12824, !12825, !12826}
!12824 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12822, file: !472, line: 57, baseType: !475, size: 32)
!12825 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12822, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!12826 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12822, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!12827 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12819, file: !296, line: 5075, baseType: !12767, size: 64, offset: 96)
!12828 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12819, file: !296, line: 5076, baseType: !12829, offset: 160)
!12829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12736, file: !379, line: 343, baseType: !12831, size: 64, offset: 928)
!12831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !12832)
!12832 = !{!12833, !12834}
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12831, file: !446, line: 63, baseType: !121, size: 32)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12831, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!12835 = !{!12836, !12837, !12838}
!12836 = !DILocalVariable(name: "reason", arg: 1, scope: !12688, file: !3263, line: 209, type: !32)
!12837 = !DILocalVariable(name: "esf", arg: 2, scope: !12688, file: !3263, line: 209, type: !12691)
!12838 = !DILocalVariable(name: "thread", arg: 3, scope: !12688, file: !3263, line: 210, type: !12735)
!12839 = !DILocation(line: 0, scope: !12688)
!12840 = !DILocation(line: 212, column: 1, scope: !12688)
!12841 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3263, file: !3263, line: 214, type: !12842, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12844)
!12842 = !DISubroutineType(types: !12843)
!12843 = !{null, !22, !22}
!12844 = !{!12845, !12846}
!12845 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12841, file: !3263, line: 214, type: !22)
!12846 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12841, file: !3263, line: 214, type: !22)
!12847 = !DILocation(line: 0, scope: !12841)
!12848 = !DILocation(line: 216, column: 1, scope: !12841)
!12849 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3263, file: !3263, line: 218, type: !12850, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12852)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{null, !267, !204}
!12852 = !{!12853, !12854}
!12853 = !DILocalVariable(name: "buf", arg: 1, scope: !12849, file: !3263, line: 218, type: !267)
!12854 = !DILocalVariable(name: "buflen", arg: 2, scope: !12849, file: !3263, line: 218, type: !204)
!12855 = !DILocation(line: 0, scope: !12849)
!12856 = !DILocation(line: 220, column: 1, scope: !12849)
!12857 = distinct !DISubprogram(name: "coredump_query", scope: !3263, file: !3263, line: 222, type: !12858, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12860)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!103, !3262, !102}
!12860 = !{!12861, !12862}
!12861 = !DILocalVariable(name: "query_id", arg: 1, scope: !12857, file: !3263, line: 222, type: !3262)
!12862 = !DILocalVariable(name: "arg", arg: 2, scope: !12857, file: !3263, line: 222, type: !102)
!12863 = !DILocation(line: 0, scope: !12857)
!12864 = !DILocation(line: 224, column: 2, scope: !12857)
!12865 = distinct !DISubprogram(name: "coredump_cmd", scope: !3263, file: !3263, line: 227, type: !12866, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12868)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{!103, !3269, !102}
!12868 = !{!12869, !12870}
!12869 = !DILocalVariable(name: "query_id", arg: 1, scope: !12865, file: !3263, line: 227, type: !3269)
!12870 = !DILocalVariable(name: "arg", arg: 2, scope: !12865, file: !3263, line: 227, type: !102)
!12871 = !DILocation(line: 0, scope: !12865)
!12872 = !DILocation(line: 229, column: 2, scope: !12865)
!12873 = distinct !DISubprogram(name: "arch_system_halt", scope: !12874, file: !12874, line: 23, type: !5907, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12875)
!12874 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12875 = !{!12876}
!12876 = !DILocalVariable(name: "reason", arg: 1, scope: !12873, file: !12874, line: 23, type: !32)
!12877 = !DILocation(line: 0, scope: !12873)
!12878 = !DILocation(line: 55, column: 2, scope: !12879, inlinedAt: !12883)
!12879 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12880)
!12880 = !{!12881, !12882}
!12881 = !DILocalVariable(name: "key", scope: !12879, file: !5896, line: 44, type: !32)
!12882 = !DILocalVariable(name: "tmp", scope: !12879, file: !5896, line: 53, type: !32)
!12883 = distinct !DILocation(line: 31, column: 8, scope: !12873)
!12884 = !{i64 2595013}
!12885 = !DILocation(line: 0, scope: !12879, inlinedAt: !12883)
!12886 = !DILocation(line: 32, column: 2, scope: !12873)
!12887 = !DILocation(line: 32, column: 2, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12874, line: 32, column: 2)
!12889 = distinct !DILexicalBlock(scope: !12873, file: !12874, line: 32, column: 2)
!12890 = distinct !{!12890, !12891, !12892}
!12891 = !DILocation(line: 32, column: 2, scope: !12889)
!12892 = !DILocation(line: 34, column: 2, scope: !12889)
!12893 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12874, file: !12874, line: 39, type: !12894, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12896)
!12894 = !DISubroutineType(types: !12895)
!12895 = !{null, !32, !12691}
!12896 = !{!12897, !12898}
!12897 = !DILocalVariable(name: "reason", arg: 1, scope: !12893, file: !12874, line: 39, type: !32)
!12898 = !DILocalVariable(name: "esf", arg: 2, scope: !12893, file: !12874, line: 40, type: !12691)
!12899 = !DILocation(line: 0, scope: !12893)
!12900 = !DILocation(line: 46, column: 2, scope: !12893)
!12901 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12874, file: !12874, line: 81, type: !5907, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12902)
!12902 = !{!12903}
!12903 = !DILocalVariable(name: "reason", arg: 1, scope: !12901, file: !12874, line: 81, type: !32)
!12904 = !DILocation(line: 0, scope: !12901)
!12905 = !DILocation(line: 83, column: 2, scope: !12901)
!12906 = distinct !DISubprogram(name: "z_fatal_error", scope: !12874, file: !12874, line: 96, type: !12894, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12907)
!12907 = !{!12908, !12909, !12910, !12911}
!12908 = !DILocalVariable(name: "reason", arg: 1, scope: !12906, file: !12874, line: 96, type: !32)
!12909 = !DILocalVariable(name: "esf", arg: 2, scope: !12906, file: !12874, line: 96, type: !12691)
!12910 = !DILocalVariable(name: "key", scope: !12906, file: !12874, line: 102, type: !32)
!12911 = !DILocalVariable(name: "thread", scope: !12906, file: !12874, line: 103, type: !12735)
!12912 = !DILocation(line: 0, scope: !12906)
!12913 = !DILocation(line: 55, column: 2, scope: !12879, inlinedAt: !12914)
!12914 = distinct !DILocation(line: 102, column: 21, scope: !12906)
!12915 = !DILocation(line: 0, scope: !12879, inlinedAt: !12914)
!12916 = !DILocation(line: 119, column: 11, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12906, file: !12874, line: 119, column: 6)
!12918 = !DILocation(line: 119, column: 20, scope: !12917)
!12919 = !DILocation(line: 131, column: 2, scope: !12906)
!12920 = !DILocation(line: 151, column: 7, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !12874, line: 146, column: 32)
!12922 = distinct !DILexicalBlock(scope: !12906, file: !12874, line: 146, column: 6)
!12923 = !DILocation(line: 151, column: 21, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12921, file: !12874, line: 151, column: 7)
!12925 = !DILocation(line: 104, column: 4, scope: !12906)
!12926 = !DILocalVariable(name: "key", arg: 1, scope: !12927, file: !5896, line: 84, type: !32)
!12927 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12928)
!12928 = !{!12926}
!12929 = !DILocation(line: 0, scope: !12927, inlinedAt: !12930)
!12930 = distinct !DILocation(line: 186, column: 2, scope: !12906)
!12931 = !DILocation(line: 95, column: 2, scope: !12927, inlinedAt: !12930)
!12932 = !{i64 2595830}
!12933 = !DILocation(line: 189, column: 3, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !12874, line: 188, column: 41)
!12935 = distinct !DILexicalBlock(scope: !12906, file: !12874, line: 188, column: 6)
!12936 = !DILocation(line: 191, column: 1, scope: !12906)
!12937 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !12938, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !317)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!12940}
!12940 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !12735)
!12941 = !DILocation(line: 535, column: 9, scope: !12937)
!12942 = !DILocation(line: 535, column: 2, scope: !12937)
!12943 = distinct !DISubprogram(name: "k_thread_abort", scope: !3775, file: !3775, line: 188, type: !12944, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !12946)
!12944 = !DISubroutineType(types: !12945)
!12945 = !{null, !12940}
!12946 = !{!12947}
!12947 = !DILocalVariable(name: "thread", arg: 1, scope: !12943, file: !3775, line: 188, type: !12940)
!12948 = !DILocation(line: 0, scope: !12943)
!12949 = !DILocation(line: 197, column: 2, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12943, file: !3775, line: 197, column: 2)
!12951 = !{i64 2155438657}
!12952 = !DILocation(line: 198, column: 2, scope: !12943)
!12953 = !DILocation(line: 199, column: 1, scope: !12943)
!12954 = distinct !DISubprogram(name: "z_current_get", scope: !3775, file: !3775, line: 173, type: !12938, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !317)
!12955 = !DILocation(line: 180, column: 2, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12954, file: !3775, line: 180, column: 2)
!12957 = !{i64 2155438589}
!12958 = !DILocation(line: 181, column: 9, scope: !12954)
!12959 = !DILocation(line: 181, column: 2, scope: !12954)
!12960 = distinct !DISubprogram(name: "z_early_memset", scope: !2115, file: !2115, line: 108, type: !12961, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !12963)
!12961 = !DISubroutineType(types: !12962)
!12962 = !{null, !102, !103, !204}
!12963 = !{!12964, !12965, !12966}
!12964 = !DILocalVariable(name: "dst", arg: 1, scope: !12960, file: !2115, line: 108, type: !102)
!12965 = !DILocalVariable(name: "c", arg: 2, scope: !12960, file: !2115, line: 108, type: !103)
!12966 = !DILocalVariable(name: "n", arg: 3, scope: !12960, file: !2115, line: 108, type: !204)
!12967 = !DILocation(line: 0, scope: !12960)
!12968 = !DILocation(line: 110, column: 9, scope: !12960)
!12969 = !DILocation(line: 111, column: 1, scope: !12960)
!12970 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2115, file: !2115, line: 121, type: !12971, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !12973)
!12971 = !DISubroutineType(types: !12972)
!12972 = !{null, !102, !13, !204}
!12973 = !{!12974, !12975, !12976}
!12974 = !DILocalVariable(name: "dst", arg: 1, scope: !12970, file: !2115, line: 121, type: !102)
!12975 = !DILocalVariable(name: "src", arg: 2, scope: !12970, file: !2115, line: 121, type: !13)
!12976 = !DILocalVariable(name: "n", arg: 3, scope: !12970, file: !2115, line: 121, type: !204)
!12977 = !DILocation(line: 0, scope: !12970)
!12978 = !DILocation(line: 123, column: 9, scope: !12970)
!12979 = !DILocation(line: 124, column: 1, scope: !12970)
!12980 = distinct !DISubprogram(name: "z_bss_zero", scope: !2115, file: !2115, line: 132, type: !3339, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !317)
!12981 = !DILocation(line: 143, column: 2, scope: !12980)
!12982 = !DILocation(line: 145, column: 2, scope: !12980)
!12983 = !DILocation(line: 168, column: 1, scope: !12980)
!12984 = distinct !DISubprogram(name: "z_init_cpu", scope: !2115, file: !2115, line: 372, type: !7755, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !12985)
!12985 = !{!12986}
!12986 = !DILocalVariable(name: "id", arg: 1, scope: !12984, file: !2115, line: 372, type: !103)
!12987 = !DILocation(line: 0, scope: !12984)
!12988 = !DILocation(line: 374, column: 2, scope: !12984)
!12989 = !DILocation(line: 375, column: 34, scope: !12984)
!12990 = !DILocation(line: 375, column: 19, scope: !12984)
!12991 = !DILocation(line: 375, column: 31, scope: !12984)
!12992 = !DILocation(line: 376, column: 24, scope: !12984)
!12993 = !DILocation(line: 376, column: 19, scope: !12984)
!12994 = !DILocation(line: 376, column: 22, scope: !12984)
!12995 = !DILocation(line: 378, column: 26, scope: !12984)
!12996 = !DILocation(line: 378, column: 4, scope: !12984)
!12997 = !DILocation(line: 378, column: 50, scope: !12984)
!12998 = !DILocation(line: 377, column: 19, scope: !12984)
!12999 = !DILocation(line: 377, column: 29, scope: !12984)
!13000 = !DILocation(line: 384, column: 1, scope: !12984)
!13001 = distinct !DISubprogram(name: "init_idle_thread", scope: !2115, file: !2115, line: 343, type: !7755, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13002)
!13002 = !{!13003, !13004, !13005, !13008}
!13003 = !DILocalVariable(name: "i", arg: 1, scope: !13001, file: !2115, line: 343, type: !103)
!13004 = !DILocalVariable(name: "thread", scope: !13001, file: !2115, line: 345, type: !2207)
!13005 = !DILocalVariable(name: "stack", scope: !13001, file: !2115, line: 346, type: !13006)
!13006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13007, size: 32)
!13007 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !2321)
!13008 = !DILocalVariable(name: "tname", scope: !13001, file: !2115, line: 358, type: !344)
!13009 = !DILocation(line: 0, scope: !13001)
!13010 = !DILocation(line: 345, column: 29, scope: !13001)
!13011 = !DILocation(line: 346, column: 28, scope: !13001)
!13012 = !DILocation(line: 362, column: 37, scope: !13001)
!13013 = !DILocation(line: 362, column: 36, scope: !13001)
!13014 = !DILocation(line: 361, column: 2, scope: !13001)
!13015 = !DILocation(line: 365, column: 2, scope: !13001)
!13016 = !DILocation(line: 370, column: 1, scope: !13001)
!13017 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2322, file: !2322, line: 331, type: !13018, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13020)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!344, !13006}
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "sym", arg: 1, scope: !13017, file: !2322, line: 331, type: !13006)
!13022 = !DILocation(line: 0, scope: !13017)
!13023 = !DILocation(line: 333, column: 21, scope: !13017)
!13024 = !DILocation(line: 333, column: 2, scope: !13017)
!13025 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13026, file: !13026, line: 155, type: !13027, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13029)
!13026 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13027 = !DISubroutineType(types: !13028)
!13028 = !{null, !2207}
!13029 = !{!13030}
!13030 = !DILocalVariable(name: "thread", arg: 1, scope: !13025, file: !13026, line: 155, type: !2207)
!13031 = !DILocation(line: 0, scope: !13025)
!13032 = !DILocation(line: 157, column: 15, scope: !13025)
!13033 = !DILocation(line: 157, column: 28, scope: !13025)
!13034 = !DILocation(line: 158, column: 1, scope: !13025)
!13035 = distinct !DISubprogram(name: "z_cstart", scope: !2115, file: !2115, line: 501, type: !3339, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13036)
!13036 = !{!13037}
!13037 = !DILocalVariable(name: "dummy_thread", scope: !13035, file: !2115, line: 518, type: !2208)
!13038 = !DILocation(line: 507, column: 2, scope: !13035)
!13039 = !DILocation(line: 43, column: 14, scope: !13040, inlinedAt: !13044)
!13040 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13041, file: !13041, line: 40, type: !3339, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13042)
!13041 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13042 = !{!13043}
!13043 = !DILocalVariable(name: "msp", scope: !13040, file: !13041, line: 42, type: !121)
!13044 = distinct !DILocation(line: 44, column: 2, scope: !13045, inlinedAt: !13047)
!13045 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13046, file: !13046, line: 42, type: !3339, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !317)
!13046 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13047 = distinct !DILocation(line: 510, column: 2, scope: !13035)
!13048 = !DILocation(line: 43, column: 3, scope: !13040, inlinedAt: !13044)
!13049 = !DILocation(line: 43, column: 60, scope: !13040, inlinedAt: !13044)
!13050 = !DILocation(line: 0, scope: !13040, inlinedAt: !13044)
!13051 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13052, file: !6111, line: 1153, type: !121)
!13052 = distinct !DISubprogram(name: "__set_MSP", scope: !6111, file: !6111, line: 1153, type: !6202, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13053)
!13053 = !{!13051}
!13054 = !DILocation(line: 0, scope: !13052, inlinedAt: !13055)
!13055 = distinct !DILocation(line: 46, column: 2, scope: !13040, inlinedAt: !13044)
!13056 = !DILocation(line: 1155, column: 3, scope: !13052, inlinedAt: !13055)
!13057 = !{i64 4130609}
!13058 = !DILocation(line: 62, column: 11, scope: !13040, inlinedAt: !13044)
!13059 = !DILocation(line: 102, column: 2, scope: !13060, inlinedAt: !13061)
!13060 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6905, file: !6905, line: 97, type: !3339, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !317)
!13061 = distinct !DILocation(line: 45, column: 2, scope: !13045, inlinedAt: !13047)
!13062 = !DILocation(line: 108, column: 2, scope: !13060, inlinedAt: !13061)
!13063 = !DILocation(line: 112, column: 2, scope: !13060, inlinedAt: !13061)
!13064 = !DILocation(line: 113, column: 2, scope: !13060, inlinedAt: !13061)
!13065 = !DILocation(line: 114, column: 2, scope: !13060, inlinedAt: !13061)
!13066 = !DILocation(line: 116, column: 2, scope: !13060, inlinedAt: !13061)
!13067 = !DILocation(line: 123, column: 13, scope: !13060, inlinedAt: !13061)
!13068 = !DILocation(line: 46, column: 2, scope: !13045, inlinedAt: !13047)
!13069 = !DILocation(line: 47, column: 2, scope: !13045, inlinedAt: !13047)
!13070 = !DILocation(line: 174, column: 12, scope: !13071, inlinedAt: !13072)
!13071 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6905, file: !6905, line: 169, type: !3339, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !317)
!13072 = distinct !DILocation(line: 48, column: 2, scope: !13045, inlinedAt: !13047)
!13073 = !DILocation(line: 179, column: 12, scope: !13071, inlinedAt: !13072)
!13074 = !DILocation(line: 50, column: 2, scope: !13045, inlinedAt: !13047)
!13075 = !DILocation(line: 57, column: 2, scope: !13045, inlinedAt: !13047)
!13076 = !DILocation(line: 518, column: 2, scope: !13035)
!13077 = !DILocation(line: 518, column: 18, scope: !13035)
!13078 = !DILocation(line: 520, column: 2, scope: !13035)
!13079 = !DILocation(line: 523, column: 2, scope: !13035)
!13080 = !DILocation(line: 526, column: 2, scope: !13035)
!13081 = !DILocation(line: 527, column: 2, scope: !13035)
!13082 = !DILocation(line: 543, column: 24, scope: !13035)
!13083 = !DILocation(line: 543, column: 2, scope: !13035)
!13084 = !DILocation(line: 0, scope: !2341)
!13085 = !DILocation(line: 246, column: 15, scope: !2359)
!13086 = !DILocation(line: 246, column: 36, scope: !2358)
!13087 = !DILocation(line: 246, column: 2, scope: !2359)
!13088 = !DILocation(line: 247, column: 37, scope: !2357)
!13089 = !DILocation(line: 0, scope: !2357)
!13090 = !DILocation(line: 248, column: 19, scope: !2357)
!13091 = !DILocation(line: 248, column: 12, scope: !2357)
!13092 = !DILocation(line: 250, column: 11, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !2357, file: !2115, line: 250, column: 7)
!13094 = !DILocation(line: 250, column: 7, scope: !2357)
!13095 = !DILocation(line: 254, column: 11, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13097, file: !2115, line: 254, column: 8)
!13097 = distinct !DILexicalBlock(scope: !13093, file: !2115, line: 250, column: 20)
!13098 = !DILocation(line: 254, column: 8, scope: !13097)
!13099 = !DILocation(line: 255, column: 9, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13096, file: !2115, line: 254, column: 17)
!13101 = !DILocation(line: 258, column: 9, scope: !13100)
!13102 = !DILocation(line: 261, column: 28, scope: !13100)
!13103 = !DILocation(line: 261, column: 10, scope: !13100)
!13104 = !DILocation(line: 261, column: 17, scope: !13100)
!13105 = !DILocation(line: 261, column: 26, scope: !13100)
!13106 = !DILocation(line: 262, column: 4, scope: !13100)
!13107 = !DILocation(line: 263, column: 9, scope: !13097)
!13108 = !DILocation(line: 263, column: 16, scope: !13097)
!13109 = !DILocation(line: 263, column: 28, scope: !13097)
!13110 = !DILocation(line: 264, column: 3, scope: !13097)
!13111 = !DILocation(line: 246, column: 60, scope: !2358)
!13112 = distinct !{!13112, !13087, !13113}
!13113 = !DILocation(line: 265, column: 2, scope: !2359)
!13114 = !DILocation(line: 266, column: 1, scope: !2341)
!13115 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6145, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13116)
!13116 = !{!13117, !13118}
!13117 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13115, file: !515, line: 1814, type: !782)
!13118 = !DILocalVariable(name: "priority", arg: 2, scope: !13115, file: !515, line: 1814, type: !121)
!13119 = !DILocation(line: 0, scope: !13115)
!13120 = !DILocation(line: 1822, column: 48, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !515, line: 1821, column: 3)
!13122 = distinct !DILexicalBlock(scope: !13115, file: !515, line: 1816, column: 7)
!13123 = !DILocation(line: 1822, column: 32, scope: !13121)
!13124 = !DILocation(line: 1822, column: 40, scope: !13121)
!13125 = !DILocation(line: 1822, column: 5, scope: !13121)
!13126 = !DILocation(line: 1822, column: 46, scope: !13121)
!13127 = !DILocation(line: 1824, column: 1, scope: !13115)
!13128 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13046, file: !13046, line: 32, type: !3339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13129 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13130, file: !13130, line: 215, type: !13027, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13131)
!13130 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13131 = !{!13132}
!13132 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13129, file: !13130, line: 215, type: !2207)
!13133 = !DILocation(line: 0, scope: !13129)
!13134 = !DILocation(line: 217, column: 21, scope: !13129)
!13135 = !DILocation(line: 217, column: 34, scope: !13129)
!13136 = !DILocation(line: 221, column: 21, scope: !13129)
!13137 = !DILocation(line: 221, column: 34, scope: !13129)
!13138 = !DILocation(line: 223, column: 27, scope: !13129)
!13139 = !DILocation(line: 223, column: 33, scope: !13129)
!13140 = !DILocation(line: 224, column: 27, scope: !13129)
!13141 = !DILocation(line: 224, column: 32, scope: !13129)
!13142 = !DILocation(line: 232, column: 16, scope: !13129)
!13143 = !DILocation(line: 232, column: 30, scope: !13129)
!13144 = !DILocation(line: 239, column: 24, scope: !13129)
!13145 = !DILocation(line: 240, column: 1, scope: !13129)
!13146 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2115, file: !2115, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13147)
!13147 = !{!13148}
!13148 = !DILocalVariable(name: "stack_ptr", scope: !13146, file: !2115, line: 401, type: !344)
!13149 = !DILocation(line: 404, column: 2, scope: !13146)
!13150 = !DILocation(line: 416, column: 24, scope: !13146)
!13151 = !DILocation(line: 418, column: 14, scope: !13146)
!13152 = !DILocation(line: 0, scope: !13146)
!13153 = !DILocation(line: 423, column: 2, scope: !13146)
!13154 = !DILocation(line: 424, column: 2, scope: !13146)
!13155 = !DILocation(line: 426, column: 2, scope: !13146)
!13156 = !DILocation(line: 428, column: 2, scope: !13146)
!13157 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2115, file: !2115, line: 432, type: !13158, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13160)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{null, !344}
!13160 = !{!13161}
!13161 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13157, file: !2115, line: 432, type: !344)
!13162 = !DILocation(line: 0, scope: !13157)
!13163 = !DILocation(line: 435, column: 2, scope: !13157)
!13164 = !DILocation(line: 445, column: 2, scope: !13157)
!13165 = distinct !DISubprogram(name: "bg_thread_main", scope: !2115, file: !2115, line: 277, type: !3656, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2111, retainedNodes: !13166)
!13166 = !{!13167, !13168, !13169}
!13167 = !DILocalVariable(name: "unused1", arg: 1, scope: !13165, file: !2115, line: 277, type: !102)
!13168 = !DILocalVariable(name: "unused2", arg: 2, scope: !13165, file: !2115, line: 277, type: !102)
!13169 = !DILocalVariable(name: "unused3", arg: 3, scope: !13165, file: !2115, line: 277, type: !102)
!13170 = !DILocation(line: 0, scope: !13165)
!13171 = !DILocation(line: 291, column: 20, scope: !13165)
!13172 = !DILocation(line: 293, column: 2, scope: !13165)
!13173 = !DILocation(line: 297, column: 2, scope: !13165)
!13174 = !DILocation(line: 305, column: 2, scope: !13165)
!13175 = !DILocation(line: 307, column: 2, scope: !13165)
!13176 = !DILocation(line: 330, column: 8, scope: !13165)
!13177 = !DILocation(line: 333, column: 34, scope: !13165)
!13178 = !DILocation(line: 339, column: 1, scope: !13165)
!13179 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2370, file: !2370, line: 45, type: !13180, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13188)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{null, !13182, !102}
!13182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !13183)
!13183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13184, size: 32)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{null, !13186, !102}
!13186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13187, size: 32)
!13187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!13188 = !{!13189, !13190}
!13189 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13179, file: !2370, line: 45, type: !13182)
!13190 = !DILocalVariable(name: "user_data", arg: 2, scope: !13179, file: !2370, line: 45, type: !102)
!13191 = !DILocation(line: 0, scope: !13179)
!13192 = !DILocation(line: 71, column: 1, scope: !13179)
!13193 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2370, file: !2370, line: 73, type: !13180, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13194)
!13194 = !{!13195, !13196}
!13195 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13193, file: !2370, line: 73, type: !13182)
!13196 = !DILocalVariable(name: "user_data", arg: 2, scope: !13193, file: !2370, line: 73, type: !102)
!13197 = !DILocation(line: 0, scope: !13193)
!13198 = !DILocation(line: 95, column: 1, scope: !13193)
!13199 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2370, file: !2370, line: 97, type: !6906, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !317)
!13200 = !DILocation(line: 1031, column: 3, scope: !13201, inlinedAt: !13204)
!13201 = distinct !DISubprogram(name: "__get_IPSR", scope: !6111, file: !6111, line: 1027, type: !6192, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13202)
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "result", scope: !13201, file: !6111, line: 1029, type: !121)
!13204 = distinct !DILocation(line: 48, column: 10, scope: !13205, inlinedAt: !13206)
!13205 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6905, file: !6905, line: 46, type: !6906, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !317)
!13206 = distinct !DILocation(line: 99, column: 9, scope: !13199)
!13207 = !{i64 4136260}
!13208 = !DILocation(line: 0, scope: !13201, inlinedAt: !13204)
!13209 = !DILocation(line: 48, column: 9, scope: !13205, inlinedAt: !13206)
!13210 = !DILocation(line: 99, column: 2, scope: !13199)
!13211 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2370, file: !2370, line: 106, type: !3339, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !317)
!13212 = !DILocation(line: 108, column: 2, scope: !13211)
!13213 = !DILocation(line: 108, column: 17, scope: !13211)
!13214 = !DILocation(line: 108, column: 30, scope: !13211)
!13215 = !DILocation(line: 109, column: 1, scope: !13211)
!13216 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2370, file: !2370, line: 116, type: !3339, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !317)
!13217 = !DILocation(line: 118, column: 2, scope: !13216)
!13218 = !DILocation(line: 118, column: 17, scope: !13216)
!13219 = !DILocation(line: 118, column: 30, scope: !13216)
!13220 = !DILocation(line: 119, column: 1, scope: !13216)
!13221 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2370, file: !2370, line: 126, type: !6906, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !317)
!13222 = !DILocation(line: 128, column: 10, scope: !13221)
!13223 = !DILocation(line: 128, column: 25, scope: !13221)
!13224 = !DILocation(line: 128, column: 38, scope: !13221)
!13225 = !DILocation(line: 128, column: 53, scope: !13221)
!13226 = !DILocation(line: 128, column: 2, scope: !13221)
!13227 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2370, file: !2370, line: 187, type: !13228, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13230)
!13228 = !DISubroutineType(types: !13229)
!13229 = !{!103, !2374, !144}
!13230 = !{!13231, !13232}
!13231 = !DILocalVariable(name: "thread", arg: 1, scope: !13227, file: !2370, line: 187, type: !2374)
!13232 = !DILocalVariable(name: "value", arg: 2, scope: !13227, file: !2370, line: 187, type: !144)
!13233 = !DILocation(line: 0, scope: !13227)
!13234 = !DILocation(line: 206, column: 2, scope: !13227)
!13235 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2370, file: !2370, line: 238, type: !13236, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13238)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!144, !2374}
!13238 = !{!13239}
!13239 = !DILocalVariable(name: "thread", arg: 1, scope: !13235, file: !2370, line: 238, type: !2374)
!13240 = !DILocation(line: 0, scope: !13235)
!13241 = !DILocation(line: 244, column: 2, scope: !13235)
!13242 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2370, file: !2370, line: 248, type: !13243, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13245)
!13243 = !DISubroutineType(types: !13244)
!13244 = !{!103, !2373, !344, !204}
!13245 = !{!13246, !13247, !13248}
!13246 = !DILocalVariable(name: "thread", arg: 1, scope: !13242, file: !2370, line: 248, type: !2373)
!13247 = !DILocalVariable(name: "buf", arg: 2, scope: !13242, file: !2370, line: 248, type: !344)
!13248 = !DILocalVariable(name: "size", arg: 3, scope: !13242, file: !2370, line: 248, type: !204)
!13249 = !DILocation(line: 0, scope: !13242)
!13250 = !DILocation(line: 257, column: 2, scope: !13242)
!13251 = !DILocation(line: 0, scope: !2369)
!13252 = !DILocation(line: 281, column: 11, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !2369, file: !2370, line: 281, column: 6)
!13254 = !DILocation(line: 281, column: 20, scope: !13253)
!13255 = !DILocation(line: 275, column: 45, scope: !2369)
!13256 = !DILocation(line: 285, column: 10, scope: !2369)
!13257 = !DILocation(line: 0, scope: !2490)
!13258 = !DILocation(line: 293, column: 39, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !2490, file: !2370, line: 293, column: 2)
!13260 = !DILocation(line: 293, column: 2, scope: !2490)
!13261 = !DILocation(line: 273, column: 14, scope: !2369)
!13262 = !DILocation(line: 309, column: 2, scope: !2369)
!13263 = !DILocation(line: 309, column: 11, scope: !2369)
!13264 = !DILocation(line: 311, column: 2, scope: !2369)
!13265 = !DILocation(line: 293, column: 26, scope: !13259)
!13266 = !DILocation(line: 294, column: 9, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13259, file: !2370, line: 293, column: 54)
!13268 = !DILocation(line: 295, column: 21, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13267, file: !2370, line: 295, column: 7)
!13270 = !DILocation(line: 295, column: 28, scope: !13269)
!13271 = !DILocation(line: 295, column: 7, scope: !13267)
!13272 = !DILocation(line: 299, column: 25, scope: !13267)
!13273 = !DILocation(line: 299, column: 41, scope: !13267)
!13274 = !DILocation(line: 300, column: 7, scope: !13267)
!13275 = !DILocation(line: 300, column: 26, scope: !13267)
!13276 = !DILocation(line: 299, column: 10, scope: !13267)
!13277 = !DILocation(line: 299, column: 7, scope: !13267)
!13278 = !DILocation(line: 302, column: 16, scope: !13267)
!13279 = !DILocation(line: 304, column: 20, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13267, file: !2370, line: 304, column: 7)
!13281 = !DILocation(line: 304, column: 7, scope: !13267)
!13282 = !DILocation(line: 305, column: 26, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13280, file: !2370, line: 304, column: 26)
!13284 = !DILocation(line: 305, column: 42, scope: !13283)
!13285 = !DILocation(line: 305, column: 11, scope: !13283)
!13286 = !DILocation(line: 305, column: 8, scope: !13283)
!13287 = !DILocation(line: 306, column: 3, scope: !13283)
!13288 = !DILocation(line: 293, column: 50, scope: !13259)
!13289 = !DILocation(line: 312, column: 1, scope: !2369)
!13290 = distinct !DISubprogram(name: "copy_bytes", scope: !2370, file: !2370, line: 261, type: !13291, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13293)
!13291 = !DISubroutineType(types: !13292)
!13292 = !{!204, !344, !204, !144, !204}
!13293 = !{!13294, !13295, !13296, !13297, !13298}
!13294 = !DILocalVariable(name: "dest", arg: 1, scope: !13290, file: !2370, line: 261, type: !344)
!13295 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13290, file: !2370, line: 261, type: !204)
!13296 = !DILocalVariable(name: "src", arg: 3, scope: !13290, file: !2370, line: 261, type: !144)
!13297 = !DILocalVariable(name: "src_size", arg: 4, scope: !13290, file: !2370, line: 261, type: !204)
!13298 = !DILocalVariable(name: "bytes_to_copy", scope: !13290, file: !2370, line: 263, type: !204)
!13299 = !DILocation(line: 0, scope: !13290)
!13300 = !DILocation(line: 265, column: 18, scope: !13290)
!13301 = !DILocation(line: 266, column: 2, scope: !13290)
!13302 = !DILocation(line: 268, column: 2, scope: !13290)
!13303 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2370, file: !2370, line: 383, type: !13304, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13306)
!13304 = !DISubroutineType(types: !13305)
!13305 = !{null, !2374}
!13306 = !{!13307}
!13307 = !DILocalVariable(name: "thread", arg: 1, scope: !13303, file: !2370, line: 383, type: !2374)
!13308 = !DILocation(line: 0, scope: !13303)
!13309 = !DILocation(line: 387, column: 2, scope: !13303)
!13310 = !DILocation(line: 388, column: 1, scope: !13303)
!13311 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2370, file: !2370, line: 528, type: !13312, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13319)
!13312 = !DISubroutineType(types: !13313)
!13313 = !{!344, !2374, !13314, !204, !3653, !102, !102, !102, !103, !121, !144}
!13314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13315, size: 32)
!13315 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3654, line: 44, baseType: !13316)
!13316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2322, line: 47, size: 8, elements: !13317)
!13317 = !{!13318}
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13316, file: !2322, line: 48, baseType: !146, size: 8)
!13319 = !{!13320, !13321, !13322, !13323, !13324, !13325, !13326, !13327, !13328, !13329, !13330}
!13320 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13311, file: !2370, line: 528, type: !2374)
!13321 = !DILocalVariable(name: "stack", arg: 2, scope: !13311, file: !2370, line: 529, type: !13314)
!13322 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13311, file: !2370, line: 529, type: !204)
!13323 = !DILocalVariable(name: "entry", arg: 4, scope: !13311, file: !2370, line: 530, type: !3653)
!13324 = !DILocalVariable(name: "p1", arg: 5, scope: !13311, file: !2370, line: 531, type: !102)
!13325 = !DILocalVariable(name: "p2", arg: 6, scope: !13311, file: !2370, line: 531, type: !102)
!13326 = !DILocalVariable(name: "p3", arg: 7, scope: !13311, file: !2370, line: 531, type: !102)
!13327 = !DILocalVariable(name: "prio", arg: 8, scope: !13311, file: !2370, line: 532, type: !103)
!13328 = !DILocalVariable(name: "options", arg: 9, scope: !13311, file: !2370, line: 532, type: !121)
!13329 = !DILocalVariable(name: "name", arg: 10, scope: !13311, file: !2370, line: 532, type: !144)
!13330 = !DILocalVariable(name: "stack_ptr", scope: !13311, file: !2370, line: 534, type: !344)
!13331 = !DILocation(line: 0, scope: !13311)
!13332 = !DILocation(line: 550, column: 28, scope: !13311)
!13333 = !DILocation(line: 550, column: 2, scope: !13311)
!13334 = !DILocation(line: 553, column: 34, scope: !13311)
!13335 = !DILocation(line: 553, column: 2, scope: !13311)
!13336 = !DILocation(line: 554, column: 14, scope: !13311)
!13337 = !DILocation(line: 564, column: 2, scope: !13311)
!13338 = !DILocation(line: 567, column: 14, scope: !13311)
!13339 = !DILocation(line: 567, column: 24, scope: !13311)
!13340 = !DILocation(line: 612, column: 7, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13311, file: !2370, line: 612, column: 6)
!13342 = !DILocation(line: 612, column: 6, scope: !13311)
!13343 = !DILocation(line: 627, column: 40, scope: !13311)
!13344 = !DILocation(line: 637, column: 2, scope: !13311)
!13345 = !DILocation(line: 613, column: 15, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13341, file: !2370, line: 612, column: 17)
!13347 = !DILocation(line: 613, column: 29, scope: !13346)
!13348 = !DILocation(line: 638, column: 1, scope: !13311)
!13349 = distinct !DISubprogram(name: "z_waitq_init", scope: !13350, file: !13350, line: 47, type: !13351, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13353)
!13350 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13351 = !DISubroutineType(types: !13352)
!13352 = !{null, !2405}
!13353 = !{!13354}
!13354 = !DILocalVariable(name: "w", arg: 1, scope: !13349, file: !13350, line: 47, type: !2405)
!13355 = !DILocation(line: 0, scope: !13349)
!13356 = !DILocation(line: 49, column: 21, scope: !13349)
!13357 = !DILocation(line: 49, column: 2, scope: !13349)
!13358 = !DILocation(line: 50, column: 1, scope: !13349)
!13359 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2370, file: !2370, line: 791, type: !13360, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13363)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{null, !13362, !103, !121, !32}
!13362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!13363 = !{!13364, !13365, !13366, !13367}
!13364 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13359, file: !2370, line: 791, type: !13362)
!13365 = !DILocalVariable(name: "priority", arg: 2, scope: !13359, file: !2370, line: 791, type: !103)
!13366 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13359, file: !2370, line: 792, type: !121)
!13367 = !DILocalVariable(name: "options", arg: 4, scope: !13359, file: !2370, line: 792, type: !32)
!13368 = !DILocation(line: 0, scope: !13359)
!13369 = !DILocation(line: 795, column: 15, scope: !13359)
!13370 = !DILocation(line: 795, column: 25, scope: !13359)
!13371 = !DILocation(line: 796, column: 30, scope: !13359)
!13372 = !DILocation(line: 796, column: 15, scope: !13359)
!13373 = !DILocation(line: 796, column: 28, scope: !13359)
!13374 = !DILocation(line: 797, column: 30, scope: !13359)
!13375 = !DILocation(line: 797, column: 15, scope: !13359)
!13376 = !DILocation(line: 797, column: 28, scope: !13359)
!13377 = !DILocation(line: 799, column: 22, scope: !13359)
!13378 = !DILocation(line: 799, column: 15, scope: !13359)
!13379 = !DILocation(line: 799, column: 20, scope: !13359)
!13380 = !DILocation(line: 801, column: 15, scope: !13359)
!13381 = !DILocation(line: 801, column: 28, scope: !13359)
!13382 = !DILocation(line: 814, column: 2, scope: !13359)
!13383 = !DILocation(line: 815, column: 1, scope: !13359)
!13384 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2370, file: !2370, line: 449, type: !13385, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13387)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{!344, !2374, !13314, !204}
!13387 = !{!13388, !13389, !13390, !13391, !13392, !13393, !13394, !13395}
!13388 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13384, file: !2370, line: 449, type: !2374)
!13389 = !DILocalVariable(name: "stack", arg: 2, scope: !13384, file: !2370, line: 450, type: !13314)
!13390 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13384, file: !2370, line: 450, type: !204)
!13391 = !DILocalVariable(name: "stack_obj_size", scope: !13384, file: !2370, line: 452, type: !204)
!13392 = !DILocalVariable(name: "stack_buf_size", scope: !13384, file: !2370, line: 452, type: !204)
!13393 = !DILocalVariable(name: "stack_ptr", scope: !13384, file: !2370, line: 453, type: !344)
!13394 = !DILocalVariable(name: "stack_buf_start", scope: !13384, file: !2370, line: 453, type: !344)
!13395 = !DILocalVariable(name: "delta", scope: !13384, file: !2370, line: 454, type: !204)
!13396 = !DILocation(line: 0, scope: !13384)
!13397 = !DILocation(line: 465, column: 20, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13384, file: !2370, line: 463, column: 2)
!13399 = !DILocation(line: 466, column: 21, scope: !13398)
!13400 = !DILocation(line: 473, column: 28, scope: !13384)
!13401 = !DILocation(line: 514, column: 33, scope: !13384)
!13402 = !DILocation(line: 514, column: 25, scope: !13384)
!13403 = !DILocation(line: 514, column: 31, scope: !13384)
!13404 = !DILocation(line: 515, column: 25, scope: !13384)
!13405 = !DILocation(line: 515, column: 30, scope: !13384)
!13406 = !DILocation(line: 516, column: 25, scope: !13384)
!13407 = !DILocation(line: 516, column: 31, scope: !13384)
!13408 = !DILocation(line: 520, column: 2, scope: !13384)
!13409 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2322, file: !2322, line: 331, type: !13410, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13412)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{!344, !13314}
!13412 = !{!13413}
!13413 = !DILocalVariable(name: "sym", arg: 1, scope: !13409, file: !2322, line: 331, type: !13314)
!13414 = !DILocation(line: 0, scope: !13409)
!13415 = !DILocation(line: 333, column: 21, scope: !13409)
!13416 = !DILocation(line: 333, column: 2, scope: !13409)
!13417 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13418, file: !13418, line: 40, type: !13419, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13421)
!13418 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13419 = !DISubroutineType(types: !13420)
!13420 = !{null, !13362}
!13421 = !{!13422}
!13422 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13417, file: !13418, line: 40, type: !13362)
!13423 = !DILocation(line: 0, scope: !13417)
!13424 = !DILocation(line: 42, column: 31, scope: !13417)
!13425 = !DILocation(line: 42, column: 2, scope: !13417)
!13426 = !DILocation(line: 43, column: 1, scope: !13417)
!13427 = distinct !DISubprogram(name: "z_init_timeout", scope: !13418, file: !13418, line: 25, type: !2431, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13428)
!13428 = !{!13429}
!13429 = !DILocalVariable(name: "to", arg: 1, scope: !13427, file: !13418, line: 25, type: !2433)
!13430 = !DILocation(line: 0, scope: !13427)
!13431 = !DILocation(line: 27, column: 22, scope: !13427)
!13432 = !DILocation(line: 27, column: 2, scope: !13427)
!13433 = !DILocation(line: 28, column: 1, scope: !13427)
!13434 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13435, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13437)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{null, !2477}
!13437 = !{!13438}
!13438 = !DILocalVariable(name: "node", arg: 1, scope: !13434, file: !325, line: 211, type: !2477)
!13439 = !DILocation(line: 0, scope: !13434)
!13440 = !DILocation(line: 213, column: 8, scope: !13434)
!13441 = !DILocation(line: 213, column: 13, scope: !13434)
!13442 = !DILocation(line: 214, column: 8, scope: !13434)
!13443 = !DILocation(line: 214, column: 13, scope: !13434)
!13444 = !DILocation(line: 215, column: 1, scope: !13434)
!13445 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13446, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13449)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{null, !13448}
!13448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!13449 = !{!13450}
!13450 = !DILocalVariable(name: "list", arg: 1, scope: !13445, file: !325, line: 197, type: !13448)
!13451 = !DILocation(line: 0, scope: !13445)
!13452 = !DILocation(line: 199, column: 8, scope: !13445)
!13453 = !DILocation(line: 199, column: 13, scope: !13445)
!13454 = !DILocation(line: 200, column: 8, scope: !13445)
!13455 = !DILocation(line: 200, column: 13, scope: !13445)
!13456 = !DILocation(line: 201, column: 1, scope: !13445)
!13457 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2370, file: !2370, line: 641, type: !13458, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13464)
!13458 = !DISubroutineType(types: !13459)
!13459 = !{!2373, !2374, !13314, !204, !3653, !102, !102, !102, !103, !121, !13460}
!13460 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13461)
!13461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13462)
!13462 = !{!13463}
!13463 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13461, file: !201, line: 66, baseType: !200, size: 64)
!13464 = !{!13465, !13466, !13467, !13468, !13469, !13470, !13471, !13472, !13473, !13474}
!13465 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13457, file: !2370, line: 641, type: !2374)
!13466 = !DILocalVariable(name: "stack", arg: 2, scope: !13457, file: !2370, line: 642, type: !13314)
!13467 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13457, file: !2370, line: 643, type: !204)
!13468 = !DILocalVariable(name: "entry", arg: 4, scope: !13457, file: !2370, line: 643, type: !3653)
!13469 = !DILocalVariable(name: "p1", arg: 5, scope: !13457, file: !2370, line: 644, type: !102)
!13470 = !DILocalVariable(name: "p2", arg: 6, scope: !13457, file: !2370, line: 644, type: !102)
!13471 = !DILocalVariable(name: "p3", arg: 7, scope: !13457, file: !2370, line: 644, type: !102)
!13472 = !DILocalVariable(name: "prio", arg: 8, scope: !13457, file: !2370, line: 645, type: !103)
!13473 = !DILocalVariable(name: "options", arg: 9, scope: !13457, file: !2370, line: 645, type: !121)
!13474 = !DILocalVariable(name: "delay", arg: 10, scope: !13457, file: !2370, line: 645, type: !13460)
!13475 = !DILocation(line: 0, scope: !13457)
!13476 = !DILocation(line: 649, column: 2, scope: !13457)
!13477 = !DILocation(line: 652, column: 7, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13457, file: !2370, line: 652, column: 6)
!13479 = !DILocation(line: 652, column: 6, scope: !13457)
!13480 = !DILocation(line: 653, column: 3, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13478, file: !2370, line: 652, column: 39)
!13482 = !DILocation(line: 654, column: 2, scope: !13481)
!13483 = !DILocation(line: 656, column: 2, scope: !13457)
!13484 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2370, file: !2370, line: 401, type: !13485, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13487)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{null, !2374, !13460}
!13487 = !{!13488, !13489}
!13488 = !DILocalVariable(name: "thread", arg: 1, scope: !13484, file: !2370, line: 401, type: !2374)
!13489 = !DILocalVariable(name: "delay", arg: 2, scope: !13484, file: !2370, line: 401, type: !13460)
!13490 = !DILocation(line: 0, scope: !13484)
!13491 = !DILocation(line: 404, column: 6, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13484, file: !2370, line: 404, column: 6)
!13493 = !DILocation(line: 404, column: 6, scope: !13484)
!13494 = !DILocation(line: 405, column: 3, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13492, file: !2370, line: 404, column: 38)
!13496 = !DILocation(line: 406, column: 2, scope: !13495)
!13497 = !DILocation(line: 407, column: 3, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13492, file: !2370, line: 406, column: 9)
!13499 = !DILocation(line: 413, column: 1, scope: !13484)
!13500 = distinct !DISubprogram(name: "k_thread_start", scope: !3775, file: !3775, line: 205, type: !13501, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{null, !2373}
!13503 = !{!13504}
!13504 = !DILocalVariable(name: "thread", arg: 1, scope: !13500, file: !3775, line: 205, type: !2373)
!13505 = !DILocation(line: 0, scope: !13500)
!13506 = !DILocation(line: 214, column: 2, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13500, file: !3775, line: 214, column: 2)
!13508 = !{i64 2155463881}
!13509 = !DILocation(line: 215, column: 2, scope: !13500)
!13510 = !DILocation(line: 216, column: 1, scope: !13500)
!13511 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13418, file: !13418, line: 47, type: !13485, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13512)
!13512 = !{!13513, !13514}
!13513 = !DILocalVariable(name: "thread", arg: 1, scope: !13511, file: !13418, line: 47, type: !2374)
!13514 = !DILocalVariable(name: "ticks", arg: 2, scope: !13511, file: !13418, line: 47, type: !13460)
!13515 = !DILocation(line: 0, scope: !13511)
!13516 = !DILocation(line: 49, column: 30, scope: !13511)
!13517 = !DILocation(line: 49, column: 2, scope: !13511)
!13518 = !DILocation(line: 50, column: 1, scope: !13511)
!13519 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2370, file: !2370, line: 748, type: !3339, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13520)
!13520 = !{!13521, !13539}
!13521 = !DILocalVariable(name: "thread_data", scope: !13522, file: !2370, line: 750, type: !13523)
!13522 = distinct !DILexicalBlock(scope: !13519, file: !2370, line: 750, column: 2)
!13523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13524, size: 32)
!13524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !13525)
!13525 = !{!13526, !13527, !13528, !13529, !13530, !13531, !13532, !13533, !13534, !13535, !13536, !13538}
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13524, file: !296, line: 621, baseType: !2374, size: 32)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13524, file: !296, line: 622, baseType: !13314, size: 32, offset: 32)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13524, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13524, file: !296, line: 624, baseType: !3653, size: 32, offset: 96)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13524, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13524, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13524, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13524, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13524, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13524, file: !296, line: 630, baseType: !756, size: 32, offset: 288)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13524, file: !296, line: 631, baseType: !13537, size: 32, offset: 320)
!13537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 32)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13524, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!13539 = !DILocalVariable(name: "thread_data", scope: !13540, file: !2370, line: 781, type: !13523)
!13540 = distinct !DILexicalBlock(scope: !13519, file: !2370, line: 781, column: 2)
!13541 = !DILocation(line: 0, scope: !13522)
!13542 = !DILocation(line: 750, column: 2, scope: !13522)
!13543 = !DILocation(line: 780, column: 2, scope: !13519)
!13544 = !DILocation(line: 0, scope: !13540)
!13545 = !DILocation(line: 781, column: 2, scope: !13540)
!13546 = !DILocation(line: 752, column: 17, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !2370, line: 750, column: 38)
!13548 = distinct !DILexicalBlock(scope: !13522, file: !2370, line: 750, column: 2)
!13549 = !DILocation(line: 753, column: 17, scope: !13547)
!13550 = !DILocation(line: 754, column: 17, scope: !13547)
!13551 = !DILocation(line: 755, column: 17, scope: !13547)
!13552 = !DILocation(line: 756, column: 17, scope: !13547)
!13553 = !DILocation(line: 757, column: 17, scope: !13547)
!13554 = !DILocation(line: 758, column: 17, scope: !13547)
!13555 = !DILocation(line: 759, column: 17, scope: !13547)
!13556 = !DILocation(line: 760, column: 17, scope: !13547)
!13557 = !DILocation(line: 751, column: 3, scope: !13547)
!13558 = !DILocation(line: 763, column: 16, scope: !13547)
!13559 = !DILocation(line: 763, column: 29, scope: !13547)
!13560 = !DILocation(line: 763, column: 39, scope: !13547)
!13561 = !DILocation(line: 750, column: 2, scope: !13548)
!13562 = !DILocation(line: 750, column: 2, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13548, file: !2370, line: 750, column: 2)
!13564 = distinct !{!13564, !13542, !13565}
!13565 = !DILocation(line: 764, column: 2, scope: !13522)
!13566 = !DILocation(line: 787, column: 2, scope: !13519)
!13567 = !DILocation(line: 788, column: 1, scope: !13519)
!13568 = !DILocation(line: 782, column: 20, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !2370, line: 782, column: 7)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !2370, line: 781, column: 38)
!13571 = distinct !DILexicalBlock(scope: !13540, file: !2370, line: 781, column: 2)
!13572 = !DILocation(line: 782, column: 31, scope: !13569)
!13573 = !DILocation(line: 782, column: 7, scope: !13570)
!13574 = !DILocation(line: 783, column: 37, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13569, file: !2370, line: 782, column: 51)
!13576 = !DILocation(line: 784, column: 10, scope: !13575)
!13577 = !DILocation(line: 783, column: 4, scope: !13575)
!13578 = !DILocation(line: 785, column: 3, scope: !13575)
!13579 = !DILocation(line: 781, column: 2, scope: !13571)
!13580 = !DILocation(line: 781, column: 2, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13571, file: !2370, line: 781, column: 2)
!13582 = distinct !{!13582, !13545, !13583}
!13583 = !DILocation(line: 786, column: 2, scope: !13540)
!13584 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13585, file: !13585, line: 403, type: !13586, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13588)
!13585 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13586 = !DISubroutineType(types: !13587)
!13587 = !{!1652, !1652}
!13588 = !{!13589}
!13589 = !DILocalVariable(name: "t", arg: 1, scope: !13584, file: !13585, line: 403, type: !1652)
!13590 = !DILocation(line: 0, scope: !13584)
!13591 = !DILocalVariable(name: "t", arg: 1, scope: !13592, file: !13585, line: 102, type: !1652)
!13592 = distinct !DISubprogram(name: "z_tmcvt", scope: !13585, file: !13585, line: 102, type: !13593, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{!1652, !1652, !121, !121, !157, !157, !157, !157}
!13595 = !{!13591, !13596, !13597, !13598, !13599, !13600, !13601, !13602, !13603, !13604, !13605}
!13596 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13592, file: !13585, line: 102, type: !121)
!13597 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13592, file: !13585, line: 103, type: !121)
!13598 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13592, file: !13585, line: 103, type: !157)
!13599 = !DILocalVariable(name: "result32", arg: 5, scope: !13592, file: !13585, line: 104, type: !157)
!13600 = !DILocalVariable(name: "round_up", arg: 6, scope: !13592, file: !13585, line: 104, type: !157)
!13601 = !DILocalVariable(name: "round_off", arg: 7, scope: !13592, file: !13585, line: 105, type: !157)
!13602 = !DILocalVariable(name: "mul_ratio", scope: !13592, file: !13585, line: 107, type: !157)
!13603 = !DILocalVariable(name: "div_ratio", scope: !13592, file: !13585, line: 109, type: !157)
!13604 = !DILocalVariable(name: "off", scope: !13592, file: !13585, line: 116, type: !1652)
!13605 = !DILocalVariable(name: "rdivisor", scope: !13606, file: !13585, line: 119, type: !121)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !13585, line: 118, column: 18)
!13607 = distinct !DILexicalBlock(scope: !13592, file: !13585, line: 118, column: 6)
!13608 = !DILocation(line: 0, scope: !13592, inlinedAt: !13609)
!13609 = distinct !DILocation(line: 406, column: 9, scope: !13584)
!13610 = !DILocation(line: 145, column: 13, scope: !13611, inlinedAt: !13609)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !13585, line: 144, column: 10)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !13585, line: 142, column: 7)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !13585, line: 141, column: 24)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !13585, line: 141, column: 13)
!13615 = distinct !DILexicalBlock(scope: !13592, file: !13585, line: 134, column: 6)
!13616 = !DILocation(line: 406, column: 2, scope: !13584)
!13617 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2370, file: !2370, line: 817, type: !3651, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13618)
!13618 = !{!13619, !13620, !13621, !13622}
!13619 = !DILocalVariable(name: "entry", arg: 1, scope: !13617, file: !2370, line: 817, type: !3653)
!13620 = !DILocalVariable(name: "p1", arg: 2, scope: !13617, file: !2370, line: 818, type: !102)
!13621 = !DILocalVariable(name: "p2", arg: 3, scope: !13617, file: !2370, line: 818, type: !102)
!13622 = !DILocalVariable(name: "p3", arg: 4, scope: !13617, file: !2370, line: 818, type: !102)
!13623 = !DILocation(line: 0, scope: !13617)
!13624 = !DILocation(line: 822, column: 2, scope: !13617)
!13625 = !DILocation(line: 822, column: 17, scope: !13617)
!13626 = !DILocation(line: 822, column: 30, scope: !13617)
!13627 = !DILocation(line: 823, column: 2, scope: !13617)
!13628 = !DILocation(line: 845, column: 2, scope: !13617)
!13629 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2370, file: !2370, line: 888, type: !13630, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!103, !2374}
!13632 = !{!13633}
!13633 = !DILocalVariable(name: "thread", arg: 1, scope: !13629, file: !2370, line: 888, type: !2374)
!13634 = !DILocation(line: 0, scope: !13629)
!13635 = !DILocation(line: 893, column: 2, scope: !13629)
!13636 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2370, file: !2370, line: 897, type: !13637, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!103, !2374, !32}
!13639 = !{!13640, !13641}
!13640 = !DILocalVariable(name: "thread", arg: 1, scope: !13636, file: !2370, line: 897, type: !2374)
!13641 = !DILocalVariable(name: "options", arg: 2, scope: !13636, file: !2370, line: 897, type: !32)
!13642 = !DILocation(line: 0, scope: !13636)
!13643 = !DILocation(line: 902, column: 2, scope: !13636)
!13644 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2370, file: !2370, line: 1072, type: !13645, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13650)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{!103, !2373, !13647}
!13647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13648, size: 32)
!13648 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !13649)
!13649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!13650 = !{!13651, !13652}
!13651 = !DILocalVariable(name: "thread", arg: 1, scope: !13644, file: !2370, line: 1072, type: !2373)
!13652 = !DILocalVariable(name: "stats", arg: 2, scope: !13644, file: !2370, line: 1073, type: !13647)
!13653 = !DILocation(line: 0, scope: !13644)
!13654 = !DILocation(line: 1075, column: 14, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13644, file: !2370, line: 1075, column: 6)
!13656 = !DILocation(line: 1075, column: 23, scope: !13655)
!13657 = !DILocation(line: 1086, column: 1, scope: !13644)
!13658 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2370, file: !2370, line: 1088, type: !13659, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2474, retainedNodes: !13661)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!103, !13647}
!13661 = !{!13662}
!13662 = !DILocalVariable(name: "stats", arg: 1, scope: !13658, file: !2370, line: 1088, type: !13647)
!13663 = !DILocation(line: 0, scope: !13658)
!13664 = !DILocation(line: 1094, column: 12, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13658, file: !2370, line: 1094, column: 6)
!13666 = !DILocation(line: 1120, column: 1, scope: !13658)
!13667 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13668, file: !13668, line: 20, type: !3339, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3277, retainedNodes: !317)
!13668 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13669 = !DILocation(line: 30, column: 2, scope: !13667)
!13670 = !DILocation(line: 31, column: 1, scope: !13667)
!13671 = distinct !DISubprogram(name: "idle", scope: !13668, file: !13668, line: 33, type: !3656, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3277, retainedNodes: !13672)
!13672 = !{!13673, !13674, !13675}
!13673 = !DILocalVariable(name: "unused1", arg: 1, scope: !13671, file: !13668, line: 33, type: !102)
!13674 = !DILocalVariable(name: "unused2", arg: 2, scope: !13671, file: !13668, line: 33, type: !102)
!13675 = !DILocalVariable(name: "unused3", arg: 3, scope: !13671, file: !13668, line: 33, type: !102)
!13676 = !DILocation(line: 0, scope: !13671)
!13677 = !DILocation(line: 41, column: 2, scope: !13671)
!13678 = !DILocation(line: 55, column: 2, scope: !13679, inlinedAt: !13683)
!13679 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3277, retainedNodes: !13680)
!13680 = !{!13681, !13682}
!13681 = !DILocalVariable(name: "key", scope: !13679, file: !5896, line: 44, type: !32)
!13682 = !DILocalVariable(name: "tmp", scope: !13679, file: !5896, line: 53, type: !32)
!13683 = distinct !DILocation(line: 62, column: 10, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13671, file: !13668, line: 41, column: 15)
!13685 = !{i64 2593355}
!13686 = !DILocation(line: 0, scope: !13679, inlinedAt: !13683)
!13687 = !DILocation(line: 86, column: 3, scope: !13684)
!13688 = distinct !{!13688, !13677, !13689}
!13689 = !DILocation(line: 105, column: 2, scope: !13671)
!13690 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3339, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3277, retainedNodes: !317)
!13691 = !DILocation(line: 5629, column: 2, scope: !13690)
!13692 = !DILocation(line: 5630, column: 1, scope: !13690)
!13693 = !DISubprogram(name: "arch_cpu_idle", scope: !3654, file: !3654, line: 167, type: !3339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13694 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3295, file: !3295, line: 30, type: !13695, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13697)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{!102, !3304, !157}
!13697 = !{!13698, !13699, !13700, !13701}
!13698 = !DILocalVariable(name: "node", arg: 1, scope: !13694, file: !3295, line: 30, type: !3304)
!13699 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13694, file: !3295, line: 30, type: !157)
!13700 = !DILocalVariable(name: "ret", scope: !13694, file: !3295, line: 32, type: !102)
!13701 = !DILocalVariable(name: "anode", scope: !13702, file: !3295, line: 40, type: !3293)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !3295, line: 34, column: 68)
!13703 = distinct !DILexicalBlock(scope: !13694, file: !3295, line: 34, column: 6)
!13704 = !DILocation(line: 0, scope: !13694)
!13705 = !DILocation(line: 34, column: 12, scope: !13703)
!13706 = !DILocation(line: 34, column: 21, scope: !13703)
!13707 = !DILocation(line: 34, column: 25, scope: !13703)
!13708 = !DILocation(line: 34, column: 52, scope: !13703)
!13709 = !DILocation(line: 34, column: 6, scope: !13694)
!13710 = !DILocation(line: 0, scope: !13702)
!13711 = !DILocation(line: 43, column: 16, scope: !13702)
!13712 = !DILocation(line: 44, column: 7, scope: !13702)
!13713 = !DILocation(line: 42, column: 11, scope: !13702)
!13714 = !DILocation(line: 45, column: 4, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13716, file: !3295, line: 44, column: 19)
!13716 = distinct !DILexicalBlock(scope: !13702, file: !3295, line: 44, column: 7)
!13717 = !DILocation(line: 46, column: 3, scope: !13715)
!13718 = !DILocation(line: 52, column: 9, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13703, file: !3295, line: 47, column: 9)
!13720 = !DILocation(line: 0, scope: !13703)
!13721 = !DILocation(line: 55, column: 2, scope: !13694)
!13722 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !13723, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13725)
!13723 = !DISubroutineType(types: !13724)
!13724 = !{!154, !3304}
!13725 = !{!13726}
!13726 = !DILocalVariable(name: "node", arg: 1, scope: !13722, file: !303, line: 270, type: !3304)
!13727 = !DILocation(line: 0, scope: !13722)
!13728 = !DILocation(line: 272, column: 15, scope: !13722)
!13729 = !DILocation(line: 272, column: 9, scope: !13722)
!13730 = !DILocation(line: 272, column: 2, scope: !13722)
!13731 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3295, file: !3295, line: 58, type: !13732, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13751)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{null, !13734}
!13734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13735, size: 32)
!13735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !13736)
!13736 = !{!13737, !13743, !13745}
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13735, file: !296, line: 1710, baseType: !13738, size: 64)
!13738 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !13739)
!13739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !13740)
!13740 = !{!13741, !13742}
!13741 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13739, file: !303, line: 42, baseType: !3304, size: 32)
!13742 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13739, file: !303, line: 43, baseType: !3304, size: 32, offset: 32)
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13735, file: !296, line: 1711, baseType: !13744, offset: 64)
!13744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13735, file: !296, line: 1712, baseType: !13746, size: 64, offset: 64)
!13746 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13747)
!13747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13748)
!13748 = !{!13749}
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13747, file: !320, line: 232, baseType: !13750, size: 64)
!13750 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3307)
!13751 = !{!13752}
!13752 = !DILocalVariable(name: "queue", arg: 1, scope: !13731, file: !3295, line: 58, type: !13734)
!13753 = !DILocation(line: 0, scope: !13731)
!13754 = !DILocation(line: 60, column: 26, scope: !13731)
!13755 = !DILocation(line: 60, column: 2, scope: !13731)
!13756 = !DILocation(line: 62, column: 23, scope: !13731)
!13757 = !DILocation(line: 62, column: 2, scope: !13731)
!13758 = !DILocation(line: 70, column: 1, scope: !13731)
!13759 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !13760, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13763)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{null, !13762}
!13762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13738, size: 32)
!13763 = !{!13764}
!13764 = !DILocalVariable(name: "list", arg: 1, scope: !13759, file: !303, line: 202, type: !13762)
!13765 = !DILocation(line: 0, scope: !13759)
!13766 = !DILocation(line: 204, column: 8, scope: !13759)
!13767 = !DILocation(line: 204, column: 13, scope: !13759)
!13768 = !DILocation(line: 205, column: 8, scope: !13759)
!13769 = !DILocation(line: 205, column: 13, scope: !13759)
!13770 = !DILocation(line: 206, column: 1, scope: !13759)
!13771 = distinct !DISubprogram(name: "z_waitq_init", scope: !13350, file: !13350, line: 47, type: !13772, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13775)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{null, !13774}
!13774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13746, size: 32)
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "w", arg: 1, scope: !13771, file: !13350, line: 47, type: !13774)
!13777 = !DILocation(line: 0, scope: !13771)
!13778 = !DILocation(line: 49, column: 21, scope: !13771)
!13779 = !DILocation(line: 49, column: 2, scope: !13771)
!13780 = !DILocation(line: 50, column: 1, scope: !13771)
!13781 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13782, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13785)
!13782 = !DISubroutineType(types: !13783)
!13783 = !{null, !13784}
!13784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13750, size: 32)
!13785 = !{!13786}
!13786 = !DILocalVariable(name: "list", arg: 1, scope: !13781, file: !325, line: 197, type: !13784)
!13787 = !DILocation(line: 0, scope: !13781)
!13788 = !DILocation(line: 199, column: 8, scope: !13781)
!13789 = !DILocation(line: 199, column: 13, scope: !13781)
!13790 = !DILocation(line: 200, column: 8, scope: !13781)
!13791 = !DILocation(line: 200, column: 13, scope: !13781)
!13792 = !DILocation(line: 201, column: 1, scope: !13781)
!13793 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3295, file: !3295, line: 94, type: !13732, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13794)
!13794 = !{!13795, !13796, !13801}
!13795 = !DILocalVariable(name: "queue", arg: 1, scope: !13793, file: !3295, line: 94, type: !13734)
!13796 = !DILocalVariable(name: "key", scope: !13793, file: !3295, line: 98, type: !13797)
!13797 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !13798)
!13798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !13799)
!13799 = !{!13800}
!13800 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13798, file: !316, line: 33, baseType: !103, size: 32)
!13801 = !DILocalVariable(name: "first_pending_thread", scope: !13793, file: !3295, line: 99, type: !13802)
!13802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13803, size: 32)
!13803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13804)
!13804 = !{!13805, !13843, !13855, !13856, !13857, !13858, !13864, !13876}
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13803, file: !379, line: 247, baseType: !13806, size: 384)
!13806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13807)
!13807 = !{!13808, !13818, !13819, !13820, !13821, !13830, !13831, !13832}
!13808 = !DIDerivedType(tag: DW_TAG_member, scope: !13806, file: !379, line: 60, baseType: !13809, size: 64)
!13809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13806, file: !379, line: 60, size: 64, elements: !13810)
!13810 = !{!13811, !13812}
!13811 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13809, file: !379, line: 61, baseType: !3306, size: 64)
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13809, file: !379, line: 62, baseType: !13813, size: 64)
!13813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13814)
!13814 = !{!13815}
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13813, file: !404, line: 50, baseType: !13816, size: 64)
!13816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13817, size: 64, elements: !363)
!13817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13813, size: 32)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13806, file: !379, line: 68, baseType: !13774, size: 32, offset: 64)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13806, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13806, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13821 = !DIDerivedType(tag: DW_TAG_member, scope: !13806, file: !379, line: 90, baseType: !13822, size: 16, offset: 112)
!13822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13806, file: !379, line: 90, size: 16, elements: !13823)
!13823 = !{!13824, !13829}
!13824 = !DIDerivedType(tag: DW_TAG_member, scope: !13822, file: !379, line: 91, baseType: !13825, size: 16)
!13825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13822, file: !379, line: 91, size: 16, elements: !13826)
!13826 = !{!13827, !13828}
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13825, file: !379, line: 96, baseType: !425, size: 8)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13825, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13829 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13822, file: !379, line: 100, baseType: !429, size: 16)
!13830 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13806, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13806, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13832 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13806, file: !379, line: 131, baseType: !13833, size: 192, offset: 192)
!13833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13834)
!13834 = !{!13835, !13836, !13842}
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13833, file: !320, line: 245, baseType: !3306, size: 64)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13833, file: !320, line: 246, baseType: !13837, size: 32, offset: 64)
!13837 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13838)
!13838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13839, size: 32)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{null, !13841}
!13841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13833, size: 32)
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13833, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13803, file: !379, line: 250, baseType: !13844, size: 288, offset: 384)
!13844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13845)
!13845 = !{!13846, !13847, !13848, !13849, !13850, !13851, !13852, !13853, !13854}
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13844, file: !446, line: 26, baseType: !121, size: 32)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13844, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13844, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13844, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13844, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13844, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13844, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13844, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13844, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13803, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13803, file: !379, line: 256, baseType: !13746, size: 64, offset: 704)
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13803, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13803, file: !379, line: 300, baseType: !13859, size: 96, offset: 800)
!13859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13860)
!13860 = !{!13861, !13862, !13863}
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13859, file: !379, line: 153, baseType: !22, size: 32)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13859, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13859, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13803, file: !379, line: 325, baseType: !13865, size: 32, offset: 896)
!13865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13866, size: 32)
!13866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13867)
!13867 = !{!13868, !13874, !13875}
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13866, file: !296, line: 5074, baseType: !13869, size: 96)
!13869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13870)
!13870 = !{!13871, !13872, !13873}
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13869, file: !472, line: 57, baseType: !475, size: 32)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13869, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13869, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13866, file: !296, line: 5075, baseType: !13746, size: 64, offset: 96)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13866, file: !296, line: 5076, baseType: !13744, offset: 160)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13803, file: !379, line: 343, baseType: !13877, size: 64, offset: 928)
!13877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13878)
!13878 = !{!13879, !13880}
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13877, file: !446, line: 63, baseType: !121, size: 32)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13877, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13881 = !DILocation(line: 0, scope: !13793)
!13882 = !DILocalVariable(name: "l", arg: 1, scope: !13883, file: !316, line: 136, type: !13886)
!13883 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !13884, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13887)
!13884 = !DISubroutineType(types: !13885)
!13885 = !{!13797, !13886}
!13886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13744, size: 32)
!13887 = !{!13882, !13888}
!13888 = !DILocalVariable(name: "k", scope: !13883, file: !316, line: 139, type: !13797)
!13889 = !DILocation(line: 0, scope: !13883, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 98, column: 25, scope: !13793)
!13891 = !DILocation(line: 55, column: 2, scope: !13892, inlinedAt: !13896)
!13892 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13893)
!13893 = !{!13894, !13895}
!13894 = !DILocalVariable(name: "key", scope: !13892, file: !5896, line: 44, type: !32)
!13895 = !DILocalVariable(name: "tmp", scope: !13892, file: !5896, line: 53, type: !32)
!13896 = distinct !DILocation(line: 145, column: 10, scope: !13883, inlinedAt: !13890)
!13897 = !{i64 2601096}
!13898 = !DILocation(line: 0, scope: !13892, inlinedAt: !13896)
!13899 = !DILocation(line: 101, column: 55, scope: !13793)
!13900 = !DILocation(line: 101, column: 25, scope: !13793)
!13901 = !DILocation(line: 103, column: 27, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13793, file: !3295, line: 103, column: 6)
!13903 = !DILocation(line: 103, column: 6, scope: !13793)
!13904 = !DILocation(line: 104, column: 3, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13902, file: !3295, line: 103, column: 36)
!13906 = !DILocation(line: 105, column: 2, scope: !13905)
!13907 = !DILocation(line: 98, column: 45, scope: !13793)
!13908 = !DILocation(line: 108, column: 2, scope: !13793)
!13909 = !DILocation(line: 109, column: 1, scope: !13793)
!13910 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3295, file: !3295, line: 81, type: !13911, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{null, !13802, !102}
!13913 = !{!13914, !13915}
!13914 = !DILocalVariable(name: "thread", arg: 1, scope: !13910, file: !3295, line: 81, type: !13802)
!13915 = !DILocalVariable(name: "data", arg: 2, scope: !13910, file: !3295, line: 81, type: !102)
!13916 = !DILocation(line: 0, scope: !13910)
!13917 = !DILocalVariable(name: "thread", arg: 1, scope: !13918, file: !13919, line: 134, type: !13802)
!13918 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13919, file: !13919, line: 134, type: !13920, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13922)
!13919 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13920 = !DISubroutineType(types: !13921)
!13921 = !{null, !13802, !32, !102}
!13922 = !{!13917, !13923, !13924}
!13923 = !DILocalVariable(name: "value", arg: 2, scope: !13918, file: !13919, line: 135, type: !32)
!13924 = !DILocalVariable(name: "data", arg: 3, scope: !13918, file: !13919, line: 136, type: !102)
!13925 = !DILocation(line: 0, scope: !13918, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 83, column: 2, scope: !13910)
!13927 = !DILocalVariable(name: "thread", arg: 1, scope: !13928, file: !13046, line: 65, type: !13802)
!13928 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13046, file: !13046, line: 65, type: !13929, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13931)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{null, !13802, !32}
!13931 = !{!13927, !13932}
!13932 = !DILocalVariable(name: "value", arg: 2, scope: !13928, file: !13046, line: 65, type: !32)
!13933 = !DILocation(line: 0, scope: !13928, inlinedAt: !13934)
!13934 = distinct !DILocation(line: 138, column: 2, scope: !13918, inlinedAt: !13926)
!13935 = !DILocation(line: 67, column: 15, scope: !13928, inlinedAt: !13934)
!13936 = !DILocation(line: 67, column: 33, scope: !13928, inlinedAt: !13934)
!13937 = !DILocation(line: 139, column: 15, scope: !13918, inlinedAt: !13926)
!13938 = !DILocation(line: 139, column: 25, scope: !13918, inlinedAt: !13926)
!13939 = !DILocation(line: 84, column: 2, scope: !13910)
!13940 = !DILocation(line: 85, column: 1, scope: !13910)
!13941 = distinct !DISubprogram(name: "k_queue_insert", scope: !3295, file: !3295, line: 175, type: !13942, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{null, !13734, !102, !102}
!13944 = !{!13945, !13946, !13947}
!13945 = !DILocalVariable(name: "queue", arg: 1, scope: !13941, file: !3295, line: 175, type: !13734)
!13946 = !DILocalVariable(name: "prev", arg: 2, scope: !13941, file: !3295, line: 175, type: !102)
!13947 = !DILocalVariable(name: "data", arg: 3, scope: !13941, file: !3295, line: 175, type: !102)
!13948 = !DILocation(line: 0, scope: !13941)
!13949 = !DILocation(line: 179, column: 8, scope: !13941)
!13950 = !DILocation(line: 182, column: 1, scope: !13941)
!13951 = distinct !DISubprogram(name: "queue_insert", scope: !3295, file: !3295, line: 120, type: !13952, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13954)
!13952 = !DISubroutineType(types: !13953)
!13953 = !{!756, !13734, !102, !102, !157, !157}
!13954 = !{!13955, !13956, !13957, !13958, !13959, !13960, !13961, !13962}
!13955 = !DILocalVariable(name: "queue", arg: 1, scope: !13951, file: !3295, line: 120, type: !13734)
!13956 = !DILocalVariable(name: "prev", arg: 2, scope: !13951, file: !3295, line: 120, type: !102)
!13957 = !DILocalVariable(name: "data", arg: 3, scope: !13951, file: !3295, line: 120, type: !102)
!13958 = !DILocalVariable(name: "alloc", arg: 4, scope: !13951, file: !3295, line: 121, type: !157)
!13959 = !DILocalVariable(name: "is_append", arg: 5, scope: !13951, file: !3295, line: 121, type: !157)
!13960 = !DILocalVariable(name: "first_pending_thread", scope: !13951, file: !3295, line: 123, type: !13802)
!13961 = !DILocalVariable(name: "key", scope: !13951, file: !3295, line: 124, type: !13797)
!13962 = !DILocalVariable(name: "anode", scope: !13963, file: !3295, line: 146, type: !3293)
!13963 = distinct !DILexicalBlock(scope: !13964, file: !3295, line: 145, column: 13)
!13964 = distinct !DILexicalBlock(scope: !13951, file: !3295, line: 145, column: 6)
!13965 = !DILocation(line: 0, scope: !13951)
!13966 = !DILocation(line: 124, column: 45, scope: !13951)
!13967 = !DILocation(line: 0, scope: !13883, inlinedAt: !13968)
!13968 = distinct !DILocation(line: 124, column: 25, scope: !13951)
!13969 = !DILocation(line: 55, column: 2, scope: !13892, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 145, column: 10, scope: !13883, inlinedAt: !13968)
!13971 = !DILocation(line: 0, scope: !13892, inlinedAt: !13970)
!13972 = !DILocation(line: 128, column: 6, scope: !13951)
!13973 = !DILocation(line: 129, column: 39, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !3295, line: 128, column: 17)
!13975 = distinct !DILexicalBlock(scope: !13951, file: !3295, line: 128, column: 6)
!13976 = !DILocation(line: 129, column: 10, scope: !13974)
!13977 = !DILocation(line: 130, column: 2, scope: !13974)
!13978 = !DILocation(line: 131, column: 55, scope: !13951)
!13979 = !DILocation(line: 131, column: 25, scope: !13951)
!13980 = !DILocation(line: 133, column: 27, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13951, file: !3295, line: 133, column: 6)
!13982 = !DILocation(line: 133, column: 6, scope: !13951)
!13983 = !DILocation(line: 136, column: 3, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !3295, line: 133, column: 36)
!13985 = !DILocation(line: 137, column: 3, scope: !13984)
!13986 = !DILocation(line: 141, column: 3, scope: !13984)
!13987 = !DILocation(line: 145, column: 6, scope: !13951)
!13988 = !DILocation(line: 148, column: 11, scope: !13963)
!13989 = !DILocation(line: 0, scope: !13963)
!13990 = !DILocation(line: 149, column: 13, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13963, file: !3295, line: 149, column: 7)
!13992 = !DILocation(line: 149, column: 7, scope: !13963)
!13993 = !DILocalVariable(name: "key", arg: 2, scope: !13994, file: !316, line: 190, type: !13797)
!13994 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !13995, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{null, !13886, !13797}
!13997 = !{!13998, !13993}
!13998 = !DILocalVariable(name: "l", arg: 1, scope: !13994, file: !316, line: 189, type: !13886)
!13999 = !DILocation(line: 0, scope: !13994, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 150, column: 4, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13991, file: !3295, line: 149, column: 22)
!14002 = !DILocalVariable(name: "key", arg: 1, scope: !14003, file: !5896, line: 84, type: !32)
!14003 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14004)
!14004 = !{!14002}
!14005 = !DILocation(line: 0, scope: !14003, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 215, column: 2, scope: !13994, inlinedAt: !14000)
!14007 = !DILocation(line: 95, column: 2, scope: !14003, inlinedAt: !14006)
!14008 = !{i64 2601913}
!14009 = !DILocation(line: 157, column: 10, scope: !13963)
!14010 = !DILocation(line: 157, column: 15, scope: !13963)
!14011 = !DILocation(line: 158, column: 27, scope: !13963)
!14012 = !DILocation(line: 158, column: 3, scope: !13963)
!14013 = !DILocation(line: 161, column: 19, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !13964, file: !3295, line: 160, column: 9)
!14015 = !DILocation(line: 161, column: 3, scope: !14014)
!14016 = !DILocation(line: 166, column: 42, scope: !13951)
!14017 = !DILocation(line: 166, column: 28, scope: !13951)
!14018 = !DILocation(line: 166, column: 36, scope: !13951)
!14019 = !DILocation(line: 166, column: 2, scope: !13951)
!14020 = !DILocation(line: 168, column: 2, scope: !13951)
!14021 = !DILocation(line: 172, column: 2, scope: !13951)
!14022 = !DILocation(line: 173, column: 1, scope: !13951)
!14023 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !14024, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14026)
!14024 = !DISubroutineType(types: !14025)
!14025 = !{!3304, !13762}
!14026 = !{!14027}
!14027 = !DILocalVariable(name: "list", arg: 1, scope: !14023, file: !303, line: 255, type: !13762)
!14028 = !DILocation(line: 0, scope: !14023)
!14029 = !DILocation(line: 257, column: 15, scope: !14023)
!14030 = !DILocation(line: 257, column: 2, scope: !14023)
!14031 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13919, file: !13919, line: 102, type: !14032, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14033)
!14032 = !DISubroutineType(types: !3258)
!14033 = !{!14034}
!14034 = !DILocalVariable(name: "size", arg: 1, scope: !14031, file: !13919, line: 102, type: !204)
!14035 = !DILocation(line: 0, scope: !14031)
!14036 = !DILocation(line: 104, column: 9, scope: !14031)
!14037 = !DILocation(line: 104, column: 2, scope: !14031)
!14038 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !14039, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14041)
!14039 = !DISubroutineType(types: !14040)
!14040 = !{null, !3304, !154}
!14041 = !{!14042, !14043}
!14042 = !DILocalVariable(name: "node", arg: 1, scope: !14038, file: !303, line: 288, type: !3304)
!14043 = !DILocalVariable(name: "flags", arg: 2, scope: !14038, file: !303, line: 288, type: !154)
!14044 = !DILocation(line: 0, scope: !14038)
!14045 = !DILocation(line: 291, column: 25, scope: !14038)
!14046 = !DILocation(line: 291, column: 8, scope: !14038)
!14047 = !DILocation(line: 291, column: 23, scope: !14038)
!14048 = !DILocation(line: 292, column: 1, scope: !14038)
!14049 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !14050, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14052)
!14050 = !DISubroutineType(types: !14051)
!14051 = !{null, !13762, !3304, !3304}
!14052 = !{!14053, !14054, !14055}
!14053 = !DILocalVariable(name: "list", arg: 1, scope: !14049, file: !303, line: 420, type: !13762)
!14054 = !DILocalVariable(name: "prev", arg: 2, scope: !14049, file: !303, line: 420, type: !3304)
!14055 = !DILocalVariable(name: "node", arg: 3, scope: !14049, file: !303, line: 420, type: !3304)
!14056 = !DILocation(line: 0, scope: !14049)
!14057 = !DILocation(line: 420, column: 1, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14049, file: !303, line: 420, column: 1)
!14059 = !DILocation(line: 420, column: 1, scope: !14049)
!14060 = !DILocation(line: 420, column: 1, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14058, file: !303, line: 420, column: 1)
!14062 = !DILocation(line: 420, column: 1, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14058, file: !303, line: 420, column: 1)
!14064 = !DILocation(line: 420, column: 1, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14063, file: !303, line: 420, column: 1)
!14066 = !DILocation(line: 420, column: 1, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14063, file: !303, line: 420, column: 1)
!14068 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !14069, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14071)
!14069 = !DISubroutineType(types: !14070)
!14070 = !{null, !13762, !3304}
!14071 = !{!14072, !14073}
!14072 = !DILocalVariable(name: "list", arg: 1, scope: !14068, file: !303, line: 360, type: !13762)
!14073 = !DILocalVariable(name: "node", arg: 2, scope: !14068, file: !303, line: 360, type: !3304)
!14074 = !DILocation(line: 0, scope: !14068)
!14075 = !DILocation(line: 360, column: 1, scope: !14068)
!14076 = !DILocation(line: 360, column: 1, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14068, file: !303, line: 360, column: 1)
!14078 = !DILocation(line: 360, column: 1, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14077, file: !303, line: 360, column: 1)
!14080 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !14081, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14083)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{!3304, !3304}
!14083 = !{!14084}
!14084 = !DILocalVariable(name: "node", arg: 1, scope: !14080, file: !303, line: 211, type: !3304)
!14085 = !DILocation(line: 0, scope: !14080)
!14086 = !DILocation(line: 213, column: 32, scope: !14080)
!14087 = !DILocation(line: 213, column: 47, scope: !14080)
!14088 = !DILocation(line: 213, column: 9, scope: !14080)
!14089 = !DILocation(line: 213, column: 2, scope: !14080)
!14090 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !14069, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14091)
!14091 = !{!14092, !14093}
!14092 = !DILocalVariable(name: "list", arg: 1, scope: !14090, file: !303, line: 373, type: !13762)
!14093 = !DILocalVariable(name: "node", arg: 2, scope: !14090, file: !303, line: 373, type: !3304)
!14094 = !DILocation(line: 0, scope: !14090)
!14095 = !DILocation(line: 373, column: 1, scope: !14090)
!14096 = !DILocation(line: 373, column: 1, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14090, file: !303, line: 373, column: 1)
!14098 = !DILocation(line: 373, column: 1, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14097, file: !303, line: 373, column: 1)
!14100 = !DILocation(line: 373, column: 1, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14097, file: !303, line: 373, column: 1)
!14102 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !14103, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{null, !3304, !3304}
!14105 = !{!14106, !14107, !14108}
!14106 = !DILocalVariable(name: "parent", arg: 1, scope: !14102, file: !303, line: 218, type: !3304)
!14107 = !DILocalVariable(name: "child", arg: 2, scope: !14102, file: !303, line: 219, type: !3304)
!14108 = !DILocalVariable(name: "cur_flags", scope: !14102, file: !303, line: 221, type: !154)
!14109 = !DILocation(line: 0, scope: !14102)
!14110 = !DILocation(line: 221, column: 22, scope: !14102)
!14111 = !DILocation(line: 223, column: 27, scope: !14102)
!14112 = !DILocation(line: 223, column: 39, scope: !14102)
!14113 = !DILocation(line: 223, column: 37, scope: !14102)
!14114 = !DILocation(line: 223, column: 10, scope: !14102)
!14115 = !DILocation(line: 223, column: 25, scope: !14102)
!14116 = !DILocation(line: 224, column: 1, scope: !14102)
!14117 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !14069, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14118)
!14118 = !{!14119, !14120}
!14119 = !DILocalVariable(name: "list", arg: 1, scope: !14117, file: !303, line: 231, type: !13762)
!14120 = !DILocalVariable(name: "node", arg: 2, scope: !14117, file: !303, line: 231, type: !3304)
!14121 = !DILocation(line: 0, scope: !14117)
!14122 = !DILocation(line: 233, column: 8, scope: !14117)
!14123 = !DILocation(line: 233, column: 13, scope: !14117)
!14124 = !DILocation(line: 234, column: 1, scope: !14117)
!14125 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !14069, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14126)
!14126 = !{!14127, !14128}
!14127 = !DILocalVariable(name: "list", arg: 1, scope: !14125, file: !303, line: 226, type: !13762)
!14128 = !DILocalVariable(name: "node", arg: 2, scope: !14125, file: !303, line: 226, type: !3304)
!14129 = !DILocation(line: 0, scope: !14125)
!14130 = !DILocation(line: 228, column: 8, scope: !14125)
!14131 = !DILocation(line: 228, column: 13, scope: !14125)
!14132 = !DILocation(line: 229, column: 1, scope: !14125)
!14133 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !14024, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14134)
!14134 = !{!14135}
!14135 = !DILocalVariable(name: "list", arg: 1, scope: !14133, file: !303, line: 243, type: !13762)
!14136 = !DILocation(line: 0, scope: !14133)
!14137 = !DILocation(line: 245, column: 15, scope: !14133)
!14138 = !DILocation(line: 245, column: 2, scope: !14133)
!14139 = distinct !DISubprogram(name: "k_queue_append", scope: !3295, file: !3295, line: 184, type: !14140, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{null, !13734, !102}
!14142 = !{!14143, !14144}
!14143 = !DILocalVariable(name: "queue", arg: 1, scope: !14139, file: !3295, line: 184, type: !13734)
!14144 = !DILocalVariable(name: "data", arg: 2, scope: !14139, file: !3295, line: 184, type: !102)
!14145 = !DILocation(line: 0, scope: !14139)
!14146 = !DILocation(line: 188, column: 8, scope: !14139)
!14147 = !DILocation(line: 191, column: 1, scope: !14139)
!14148 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3295, file: !3295, line: 193, type: !14140, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14149)
!14149 = !{!14150, !14151}
!14150 = !DILocalVariable(name: "queue", arg: 1, scope: !14148, file: !3295, line: 193, type: !13734)
!14151 = !DILocalVariable(name: "data", arg: 2, scope: !14148, file: !3295, line: 193, type: !102)
!14152 = !DILocation(line: 0, scope: !14148)
!14153 = !DILocation(line: 197, column: 8, scope: !14148)
!14154 = !DILocation(line: 200, column: 1, scope: !14148)
!14155 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3295, file: !3295, line: 202, type: !14156, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{!756, !13734, !102}
!14158 = !{!14159, !14160, !14161}
!14159 = !DILocalVariable(name: "queue", arg: 1, scope: !14155, file: !3295, line: 202, type: !13734)
!14160 = !DILocalVariable(name: "data", arg: 2, scope: !14155, file: !3295, line: 202, type: !102)
!14161 = !DILocalVariable(name: "ret", scope: !14155, file: !3295, line: 206, type: !756)
!14162 = !DILocation(line: 0, scope: !14155)
!14163 = !DILocation(line: 206, column: 16, scope: !14155)
!14164 = !DILocation(line: 210, column: 2, scope: !14155)
!14165 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3295, file: !3295, line: 223, type: !14156, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14166)
!14166 = !{!14167, !14168, !14169}
!14167 = !DILocalVariable(name: "queue", arg: 1, scope: !14165, file: !3295, line: 223, type: !13734)
!14168 = !DILocalVariable(name: "data", arg: 2, scope: !14165, file: !3295, line: 223, type: !102)
!14169 = !DILocalVariable(name: "ret", scope: !14165, file: !3295, line: 227, type: !756)
!14170 = !DILocation(line: 0, scope: !14165)
!14171 = !DILocation(line: 227, column: 16, scope: !14165)
!14172 = !DILocation(line: 231, column: 2, scope: !14165)
!14173 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3295, file: !3295, line: 244, type: !14174, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14176)
!14174 = !DISubroutineType(types: !14175)
!14175 = !{!103, !13734, !102, !102}
!14176 = !{!14177, !14178, !14179, !14180, !14181}
!14177 = !DILocalVariable(name: "queue", arg: 1, scope: !14173, file: !3295, line: 244, type: !13734)
!14178 = !DILocalVariable(name: "head", arg: 2, scope: !14173, file: !3295, line: 244, type: !102)
!14179 = !DILocalVariable(name: "tail", arg: 3, scope: !14173, file: !3295, line: 244, type: !102)
!14180 = !DILocalVariable(name: "key", scope: !14173, file: !3295, line: 255, type: !13797)
!14181 = !DILocalVariable(name: "thread", scope: !14173, file: !3295, line: 256, type: !13802)
!14182 = !DILocation(line: 0, scope: !14173)
!14183 = !DILocation(line: 249, column: 2, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14173, file: !3295, line: 249, column: 2)
!14185 = !DILocation(line: 255, column: 45, scope: !14173)
!14186 = !DILocation(line: 0, scope: !13883, inlinedAt: !14187)
!14187 = distinct !DILocation(line: 255, column: 25, scope: !14173)
!14188 = !DILocation(line: 55, column: 2, scope: !13892, inlinedAt: !14189)
!14189 = distinct !DILocation(line: 145, column: 10, scope: !13883, inlinedAt: !14187)
!14190 = !DILocation(line: 0, scope: !13892, inlinedAt: !14189)
!14191 = !DILocation(line: 259, column: 42, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !3295, line: 258, column: 20)
!14193 = distinct !DILexicalBlock(scope: !14173, file: !3295, line: 258, column: 6)
!14194 = !DILocation(line: 259, column: 12, scope: !14192)
!14195 = !DILocation(line: 262, column: 24, scope: !14173)
!14196 = !DILocation(line: 262, column: 2, scope: !14173)
!14197 = !DILocation(line: 263, column: 3, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14173, file: !3295, line: 262, column: 45)
!14199 = !DILocation(line: 264, column: 11, scope: !14198)
!14200 = !DILocation(line: 264, column: 10, scope: !14198)
!14201 = !DILocation(line: 265, column: 12, scope: !14198)
!14202 = !DILocation(line: 262, column: 15, scope: !14173)
!14203 = distinct !{!14203, !14196, !14204}
!14204 = !DILocation(line: 266, column: 2, scope: !14173)
!14205 = !DILocation(line: 268, column: 6, scope: !14173)
!14206 = !DILocation(line: 269, column: 34, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14208, file: !3295, line: 268, column: 20)
!14208 = distinct !DILexicalBlock(scope: !14173, file: !3295, line: 268, column: 6)
!14209 = !DILocation(line: 269, column: 3, scope: !14207)
!14210 = !DILocation(line: 270, column: 2, scope: !14207)
!14211 = !DILocation(line: 275, column: 2, scope: !14173)
!14212 = !DILocation(line: 277, column: 1, scope: !14173)
!14213 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !14214, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14216)
!14214 = !DISubroutineType(types: !14215)
!14215 = !{null, !13762, !102, !102}
!14216 = !{!14217, !14218, !14219}
!14217 = !DILocalVariable(name: "list", arg: 1, scope: !14213, file: !303, line: 391, type: !13762)
!14218 = !DILocalVariable(name: "head", arg: 2, scope: !14213, file: !303, line: 391, type: !102)
!14219 = !DILocalVariable(name: "tail", arg: 3, scope: !14213, file: !303, line: 391, type: !102)
!14220 = !DILocation(line: 0, scope: !14213)
!14221 = !DILocation(line: 391, column: 1, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14213, file: !303, line: 391, column: 1)
!14223 = !DILocation(line: 391, column: 1, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !303, line: 391, column: 1)
!14225 = distinct !DILexicalBlock(scope: !14222, file: !303, line: 391, column: 1)
!14226 = !DILocation(line: 0, scope: !14224)
!14227 = !DILocation(line: 391, column: 1, scope: !14225)
!14228 = !DILocation(line: 391, column: 1, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14224, file: !303, line: 391, column: 1)
!14230 = !DILocation(line: 391, column: 1, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14224, file: !303, line: 391, column: 1)
!14232 = !DILocation(line: 391, column: 1, scope: !14213)
!14233 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3295, file: !3295, line: 279, type: !14234, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14248)
!14234 = !DISubroutineType(types: !14235)
!14235 = !{!103, !13734, !14236}
!14236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14237, size: 32)
!14237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1224, line: 40, baseType: !14238)
!14238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1224, line: 35, size: 64, elements: !14239)
!14239 = !{!14240, !14247}
!14240 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14238, file: !1224, line: 36, baseType: !14241, size: 32)
!14241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14242, size: 32)
!14242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1224, line: 33, baseType: !14243)
!14243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1224, line: 29, size: 32, elements: !14244)
!14244 = !{!14245}
!14245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14243, file: !1224, line: 30, baseType: !14246, size: 32)
!14246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14243, size: 32)
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14238, file: !1224, line: 37, baseType: !14241, size: 32, offset: 32)
!14248 = !{!14249, !14250, !14251}
!14249 = !DILocalVariable(name: "queue", arg: 1, scope: !14233, file: !3295, line: 279, type: !13734)
!14250 = !DILocalVariable(name: "list", arg: 2, scope: !14233, file: !3295, line: 279, type: !14236)
!14251 = !DILocalVariable(name: "ret", scope: !14233, file: !3295, line: 281, type: !103)
!14252 = !DILocation(line: 0, scope: !14233)
!14253 = !DILocation(line: 286, column: 2, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14233, file: !3295, line: 286, column: 2)
!14255 = !DILocation(line: 286, column: 2, scope: !14233)
!14256 = !DILocation(line: 301, column: 41, scope: !14233)
!14257 = !DILocation(line: 301, column: 53, scope: !14233)
!14258 = !DILocation(line: 301, column: 8, scope: !14233)
!14259 = !DILocation(line: 302, column: 2, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14233, file: !3295, line: 302, column: 2)
!14261 = !DILocation(line: 302, column: 2, scope: !14233)
!14262 = !DILocation(line: 307, column: 2, scope: !14233)
!14263 = !DILocation(line: 311, column: 2, scope: !14233)
!14264 = !DILocation(line: 312, column: 1, scope: !14233)
!14265 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1224, file: !1224, line: 261, type: !14266, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14268)
!14266 = !DISubroutineType(types: !14267)
!14267 = !{!157, !14236}
!14268 = !{!14269}
!14269 = !DILocalVariable(name: "list", arg: 1, scope: !14265, file: !1224, line: 261, type: !14236)
!14270 = !DILocation(line: 0, scope: !14265)
!14271 = !DILocation(line: 261, column: 1, scope: !14265)
!14272 = distinct !DISubprogram(name: "sys_slist_init", scope: !1224, file: !1224, line: 196, type: !14273, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14275)
!14273 = !DISubroutineType(types: !14274)
!14274 = !{null, !14236}
!14275 = !{!14276}
!14276 = !DILocalVariable(name: "list", arg: 1, scope: !14272, file: !1224, line: 196, type: !14236)
!14277 = !DILocation(line: 0, scope: !14272)
!14278 = !DILocation(line: 198, column: 8, scope: !14272)
!14279 = !DILocation(line: 198, column: 13, scope: !14272)
!14280 = !DILocation(line: 199, column: 8, scope: !14272)
!14281 = !DILocation(line: 199, column: 13, scope: !14272)
!14282 = !DILocation(line: 200, column: 1, scope: !14272)
!14283 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1224, file: !1224, line: 231, type: !14284, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14286)
!14284 = !DISubroutineType(types: !14285)
!14285 = !{!14241, !14236}
!14286 = !{!14287}
!14287 = !DILocalVariable(name: "list", arg: 1, scope: !14283, file: !1224, line: 231, type: !14236)
!14288 = !DILocation(line: 0, scope: !14283)
!14289 = !DILocation(line: 233, column: 15, scope: !14283)
!14290 = !DILocation(line: 233, column: 2, scope: !14283)
!14291 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3295, file: !3295, line: 314, type: !14292, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14298)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{!102, !13734, !14294}
!14294 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14295)
!14295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14296)
!14296 = !{!14297}
!14297 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14295, file: !201, line: 66, baseType: !200, size: 64)
!14298 = !{!14299, !14300, !14301, !14302, !14303, !14306}
!14299 = !DILocalVariable(name: "queue", arg: 1, scope: !14291, file: !3295, line: 314, type: !13734)
!14300 = !DILocalVariable(name: "timeout", arg: 2, scope: !14291, file: !3295, line: 314, type: !14294)
!14301 = !DILocalVariable(name: "key", scope: !14291, file: !3295, line: 316, type: !13797)
!14302 = !DILocalVariable(name: "data", scope: !14291, file: !3295, line: 317, type: !102)
!14303 = !DILocalVariable(name: "node", scope: !14304, file: !3295, line: 322, type: !3304)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !3295, line: 321, column: 52)
!14305 = distinct !DILexicalBlock(scope: !14291, file: !3295, line: 321, column: 6)
!14306 = !DILocalVariable(name: "ret", scope: !14291, file: !3295, line: 343, type: !103)
!14307 = !DILocation(line: 0, scope: !14291)
!14308 = !DILocation(line: 316, column: 45, scope: !14291)
!14309 = !DILocation(line: 0, scope: !13883, inlinedAt: !14310)
!14310 = distinct !DILocation(line: 316, column: 25, scope: !14291)
!14311 = !DILocation(line: 55, column: 2, scope: !13892, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 145, column: 10, scope: !13883, inlinedAt: !14310)
!14313 = !DILocation(line: 0, scope: !13892, inlinedAt: !14312)
!14314 = !DILocation(line: 321, column: 6, scope: !14305)
!14315 = !DILocation(line: 321, column: 6, scope: !14291)
!14316 = !{!"branch_weights", i32 1, i32 2000}
!14317 = !DILocation(line: 324, column: 10, scope: !14304)
!14318 = !DILocation(line: 0, scope: !14304)
!14319 = !DILocation(line: 325, column: 10, scope: !14304)
!14320 = !DILocation(line: 0, scope: !13994, inlinedAt: !14321)
!14321 = distinct !DILocation(line: 326, column: 3, scope: !14304)
!14322 = !DILocation(line: 0, scope: !14003, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 215, column: 2, scope: !13994, inlinedAt: !14321)
!14324 = !DILocation(line: 95, column: 2, scope: !14003, inlinedAt: !14323)
!14325 = !DILocation(line: 335, column: 6, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14291, file: !3295, line: 335, column: 6)
!14327 = !DILocation(line: 335, column: 6, scope: !14291)
!14328 = !DILocation(line: 0, scope: !13994, inlinedAt: !14329)
!14329 = distinct !DILocation(line: 336, column: 3, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14326, file: !3295, line: 335, column: 40)
!14331 = !DILocation(line: 0, scope: !14003, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 215, column: 2, scope: !13994, inlinedAt: !14329)
!14333 = !DILocation(line: 95, column: 2, scope: !14003, inlinedAt: !14332)
!14334 = !DILocation(line: 340, column: 3, scope: !14330)
!14335 = !DILocation(line: 343, column: 51, scope: !14291)
!14336 = !DILocation(line: 343, column: 12, scope: !14291)
!14337 = !DILocation(line: 348, column: 14, scope: !14291)
!14338 = !DILocation(line: 348, column: 9, scope: !14291)
!14339 = !DILocation(line: 348, column: 29, scope: !14291)
!14340 = !DILocation(line: 348, column: 44, scope: !14291)
!14341 = !DILocation(line: 349, column: 1, scope: !14291)
!14342 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14343, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14345)
!14343 = !DISubroutineType(types: !14344)
!14344 = !{!157, !13762}
!14345 = !{!14346}
!14346 = !DILocalVariable(name: "list", arg: 1, scope: !14342, file: !303, line: 323, type: !13762)
!14347 = !DILocation(line: 0, scope: !14342)
!14348 = !DILocation(line: 323, column: 1, scope: !14342)
!14349 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !14024, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14350)
!14350 = !{!14351, !14352}
!14351 = !DILocalVariable(name: "list", arg: 1, scope: !14349, file: !303, line: 434, type: !13762)
!14352 = !DILocalVariable(name: "node", scope: !14349, file: !303, line: 434, type: !3304)
!14353 = !DILocation(line: 0, scope: !14349)
!14354 = !DILocation(line: 434, column: 1, scope: !14349)
!14355 = !DILocation(line: 434, column: 1, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14349, file: !303, line: 434, column: 1)
!14357 = !DILocation(line: 434, column: 1, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14356, file: !303, line: 434, column: 1)
!14359 = distinct !DISubprogram(name: "k_queue_remove", scope: !3295, file: !3295, line: 351, type: !14360, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!157, !13734, !102}
!14362 = !{!14363, !14364, !14365}
!14363 = !DILocalVariable(name: "queue", arg: 1, scope: !14359, file: !3295, line: 351, type: !13734)
!14364 = !DILocalVariable(name: "data", arg: 2, scope: !14359, file: !3295, line: 351, type: !102)
!14365 = !DILocalVariable(name: "ret", scope: !14359, file: !3295, line: 355, type: !157)
!14366 = !DILocation(line: 0, scope: !14359)
!14367 = !DILocation(line: 355, column: 48, scope: !14359)
!14368 = !DILocation(line: 355, column: 56, scope: !14359)
!14369 = !DILocation(line: 355, column: 13, scope: !14359)
!14370 = !DILocation(line: 359, column: 2, scope: !14359)
!14371 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14372, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14374)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{!157, !13762, !3304}
!14374 = !{!14375, !14376, !14377, !14378}
!14375 = !DILocalVariable(name: "list", arg: 1, scope: !14371, file: !303, line: 478, type: !13762)
!14376 = !DILocalVariable(name: "node", arg: 2, scope: !14371, file: !303, line: 478, type: !3304)
!14377 = !DILocalVariable(name: "prev", scope: !14371, file: !303, line: 478, type: !3304)
!14378 = !DILocalVariable(name: "test", scope: !14371, file: !303, line: 478, type: !3304)
!14379 = !DILocation(line: 0, scope: !14371)
!14380 = !DILocation(line: 478, column: 1, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14371, file: !303, line: 478, column: 1)
!14382 = !DILocation(line: 478, column: 1, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14381, file: !303, line: 478, column: 1)
!14384 = !DILocation(line: 478, column: 1, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !303, line: 478, column: 1)
!14386 = distinct !DILexicalBlock(scope: !14383, file: !303, line: 478, column: 1)
!14387 = !DILocation(line: 478, column: 1, scope: !14386)
!14388 = distinct !{!14388, !14380, !14380}
!14389 = !DILocation(line: 478, column: 1, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14385, file: !303, line: 478, column: 1)
!14391 = !DILocation(line: 478, column: 1, scope: !14371)
!14392 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !14050, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14393)
!14393 = !{!14394, !14395, !14396}
!14394 = !DILocalVariable(name: "list", arg: 1, scope: !14392, file: !303, line: 463, type: !13762)
!14395 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14392, file: !303, line: 463, type: !3304)
!14396 = !DILocalVariable(name: "node", arg: 3, scope: !14392, file: !303, line: 463, type: !3304)
!14397 = !DILocation(line: 0, scope: !14392)
!14398 = !DILocation(line: 463, column: 1, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14392, file: !303, line: 463, column: 1)
!14400 = !DILocation(line: 0, scope: !14399)
!14401 = !DILocation(line: 463, column: 1, scope: !14392)
!14402 = !DILocation(line: 463, column: 1, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14399, file: !303, line: 463, column: 1)
!14404 = !DILocation(line: 463, column: 1, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14403, file: !303, line: 463, column: 1)
!14406 = !DILocation(line: 463, column: 1, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14405, file: !303, line: 463, column: 1)
!14408 = !DILocation(line: 463, column: 1, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14399, file: !303, line: 463, column: 1)
!14410 = !DILocation(line: 463, column: 1, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14409, file: !303, line: 463, column: 1)
!14412 = !DILocation(line: 463, column: 1, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14411, file: !303, line: 463, column: 1)
!14414 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !14081, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14415)
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "node", arg: 1, scope: !14414, file: !303, line: 347, type: !3304)
!14417 = !DILocation(line: 0, scope: !14414)
!14418 = !DILocation(line: 347, column: 1, scope: !14414)
!14419 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !14081, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14420)
!14420 = !{!14421}
!14421 = !DILocalVariable(name: "node", arg: 1, scope: !14419, file: !303, line: 336, type: !3304)
!14422 = !DILocation(line: 0, scope: !14419)
!14423 = !DILocation(line: 336, column: 1, scope: !14419)
!14424 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3295, file: !3295, line: 362, type: !14360, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14425)
!14425 = !{!14426, !14427, !14428}
!14426 = !DILocalVariable(name: "queue", arg: 1, scope: !14424, file: !3295, line: 362, type: !13734)
!14427 = !DILocalVariable(name: "data", arg: 2, scope: !14424, file: !3295, line: 362, type: !102)
!14428 = !DILocalVariable(name: "test", scope: !14424, file: !3295, line: 366, type: !3304)
!14429 = !DILocation(line: 0, scope: !14424)
!14430 = !DILocation(line: 368, column: 2, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14424, file: !3295, line: 368, column: 2)
!14432 = !DILocation(line: 368, column: 2, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14431, file: !3295, line: 368, column: 2)
!14434 = !DILocation(line: 369, column: 12, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14436, file: !3295, line: 369, column: 7)
!14436 = distinct !DILexicalBlock(scope: !14433, file: !3295, line: 368, column: 49)
!14437 = !DILocation(line: 369, column: 7, scope: !14436)
!14438 = distinct !{!14438, !14430, !14439}
!14439 = !DILocation(line: 374, column: 2, scope: !14431)
!14440 = !DILocation(line: 376, column: 2, scope: !14424)
!14441 = !DILocation(line: 380, column: 2, scope: !14424)
!14442 = !DILocation(line: 381, column: 1, scope: !14424)
!14443 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3295, file: !3295, line: 383, type: !14444, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!102, !13734}
!14446 = !{!14447, !14448}
!14447 = !DILocalVariable(name: "queue", arg: 1, scope: !14443, file: !3295, line: 383, type: !13734)
!14448 = !DILocalVariable(name: "ret", scope: !14443, file: !3295, line: 385, type: !102)
!14449 = !DILocation(line: 0, scope: !14443)
!14450 = !DILocation(line: 385, column: 61, scope: !14443)
!14451 = !DILocation(line: 385, column: 32, scope: !14443)
!14452 = !DILocation(line: 385, column: 14, scope: !14443)
!14453 = !DILocation(line: 389, column: 2, scope: !14443)
!14454 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3295, file: !3295, line: 392, type: !14444, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3279, retainedNodes: !14455)
!14455 = !{!14456, !14457}
!14456 = !DILocalVariable(name: "queue", arg: 1, scope: !14454, file: !3295, line: 392, type: !13734)
!14457 = !DILocalVariable(name: "ret", scope: !14454, file: !3295, line: 394, type: !102)
!14458 = !DILocation(line: 0, scope: !14454)
!14459 = !DILocation(line: 394, column: 61, scope: !14454)
!14460 = !DILocation(line: 394, column: 32, scope: !14454)
!14461 = !DILocation(line: 394, column: 14, scope: !14454)
!14462 = !DILocation(line: 398, column: 2, scope: !14454)
!14463 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2602, file: !2602, line: 93, type: !14464, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14466)
!14464 = !DISubroutineType(types: !14465)
!14465 = !{!756, !2497, !2497}
!14466 = !{!14467, !14468, !14469, !14470}
!14467 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14463, file: !2602, line: 93, type: !2497)
!14468 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14463, file: !2602, line: 94, type: !2497)
!14469 = !DILocalVariable(name: "b1", scope: !14463, file: !2602, line: 97, type: !756)
!14470 = !DILocalVariable(name: "b2", scope: !14463, file: !2602, line: 98, type: !756)
!14471 = !DILocation(line: 0, scope: !14463)
!14472 = !DILocation(line: 97, column: 30, scope: !14463)
!14473 = !DILocation(line: 98, column: 30, scope: !14463)
!14474 = !DILocation(line: 100, column: 9, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14463, file: !2602, line: 100, column: 6)
!14476 = !DILocation(line: 100, column: 6, scope: !14463)
!14477 = !DILocation(line: 125, column: 1, scope: !14463)
!14478 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2602, file: !2602, line: 428, type: !14479, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14481)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{null, !2497}
!14481 = !{!14482}
!14482 = !DILocalVariable(name: "curr", arg: 1, scope: !14478, file: !2602, line: 428, type: !2497)
!14483 = !DILocation(line: 0, scope: !14478)
!14484 = !DILocation(line: 434, column: 6, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14478, file: !2602, line: 434, column: 6)
!14486 = !DILocation(line: 434, column: 23, scope: !14485)
!14487 = !DILocation(line: 434, column: 6, scope: !14478)
!14488 = !DILocation(line: 435, column: 50, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14485, file: !2602, line: 434, column: 29)
!14490 = !DILocation(line: 435, column: 48, scope: !14489)
!14491 = !DILocation(line: 435, column: 29, scope: !14489)
!14492 = !DILocation(line: 436, column: 24, scope: !14489)
!14493 = !DILocation(line: 436, column: 3, scope: !14489)
!14494 = !DILocation(line: 437, column: 2, scope: !14489)
!14495 = !DILocation(line: 438, column: 1, scope: !14478)
!14496 = distinct !DISubprogram(name: "slice_time", scope: !2602, file: !2602, line: 407, type: !14497, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14499)
!14497 = !DISubroutineType(types: !14498)
!14498 = !{!103, !2497}
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "curr", arg: 1, scope: !14496, file: !2602, line: 407, type: !2497)
!14501 = !DILocalVariable(name: "ret", scope: !14496, file: !2602, line: 409, type: !103)
!14502 = !DILocation(line: 0, scope: !14496)
!14503 = !DILocation(line: 409, column: 12, scope: !14496)
!14504 = !DILocation(line: 416, column: 2, scope: !14496)
!14505 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2602, file: !2602, line: 440, type: !14506, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14508)
!14506 = !DISubroutineType(types: !14507)
!14507 = !{null, !756, !103}
!14508 = !{!14509, !14510, !14511, !14517}
!14509 = !DILocalVariable(name: "slice", arg: 1, scope: !14505, file: !2602, line: 440, type: !756)
!14510 = !DILocalVariable(name: "prio", arg: 2, scope: !14505, file: !2602, line: 440, type: !103)
!14511 = !DILocalVariable(name: "__i", scope: !14512, file: !2602, line: 442, type: !14513)
!14512 = distinct !DILexicalBlock(scope: !14505, file: !2602, line: 442, column: 2)
!14513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14514)
!14514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14515)
!14515 = !{!14516}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14514, file: !316, line: 33, baseType: !103, size: 32)
!14517 = !DILocalVariable(name: "__key", scope: !14512, file: !2602, line: 442, type: !14513)
!14518 = !DILocation(line: 0, scope: !14505)
!14519 = !DILocation(line: 0, scope: !14512)
!14520 = !DILocalVariable(name: "l", arg: 1, scope: !14521, file: !316, line: 136, type: !14524)
!14521 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14522, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14525)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{!14513, !14524}
!14524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!14525 = !{!14520, !14526}
!14526 = !DILocalVariable(name: "k", scope: !14521, file: !316, line: 139, type: !14513)
!14527 = !DILocation(line: 0, scope: !14521, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 442, column: 2, scope: !14512)
!14529 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !14534)
!14530 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14531)
!14531 = !{!14532, !14533}
!14532 = !DILocalVariable(name: "key", scope: !14530, file: !5896, line: 44, type: !32)
!14533 = !DILocalVariable(name: "tmp", scope: !14530, file: !5896, line: 53, type: !32)
!14534 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !14528)
!14535 = !{i64 2637326}
!14536 = !DILocation(line: 0, scope: !14530, inlinedAt: !14534)
!14537 = !DILocation(line: 443, column: 29, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14539, file: !2602, line: 442, column: 26)
!14539 = distinct !DILexicalBlock(scope: !14512, file: !2602, line: 442, column: 2)
!14540 = !DILocation(line: 444, column: 17, scope: !14538)
!14541 = !DILocation(line: 445, column: 51, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14538, file: !2602, line: 445, column: 7)
!14543 = !DILocation(line: 445, column: 7, scope: !14538)
!14544 = !DILocation(line: 0, scope: !14538)
!14545 = !DILocation(line: 451, column: 18, scope: !14538)
!14546 = !DILocation(line: 452, column: 3, scope: !14538)
!14547 = !DILocalVariable(name: "key", arg: 2, scope: !14548, file: !316, line: 190, type: !14513)
!14548 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14549, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14551)
!14549 = !DISubroutineType(types: !14550)
!14550 = !{null, !14524, !14513}
!14551 = !{!14552, !14547}
!14552 = !DILocalVariable(name: "l", arg: 1, scope: !14548, file: !316, line: 189, type: !14524)
!14553 = !DILocation(line: 0, scope: !14548, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 442, column: 2, scope: !14539)
!14555 = !DILocalVariable(name: "key", arg: 1, scope: !14556, file: !5896, line: 84, type: !32)
!14556 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14557)
!14557 = !{!14555}
!14558 = !DILocation(line: 0, scope: !14556, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !14554)
!14560 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !14559)
!14561 = !{i64 2638143}
!14562 = !DILocation(line: 454, column: 1, scope: !14505)
!14563 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13585, file: !13585, line: 389, type: !7118, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14564)
!14564 = !{!14565}
!14565 = !DILocalVariable(name: "t", arg: 1, scope: !14563, file: !13585, line: 389, type: !121)
!14566 = !DILocation(line: 0, scope: !14563)
!14567 = !DILocalVariable(name: "t", arg: 1, scope: !14568, file: !13585, line: 102, type: !1652)
!14568 = distinct !DISubprogram(name: "z_tmcvt", scope: !13585, file: !13585, line: 102, type: !13593, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14569)
!14569 = !{!14567, !14570, !14571, !14572, !14573, !14574, !14575, !14576, !14577, !14578, !14579}
!14570 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14568, file: !13585, line: 102, type: !121)
!14571 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14568, file: !13585, line: 103, type: !121)
!14572 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14568, file: !13585, line: 103, type: !157)
!14573 = !DILocalVariable(name: "result32", arg: 5, scope: !14568, file: !13585, line: 104, type: !157)
!14574 = !DILocalVariable(name: "round_up", arg: 6, scope: !14568, file: !13585, line: 104, type: !157)
!14575 = !DILocalVariable(name: "round_off", arg: 7, scope: !14568, file: !13585, line: 105, type: !157)
!14576 = !DILocalVariable(name: "mul_ratio", scope: !14568, file: !13585, line: 107, type: !157)
!14577 = !DILocalVariable(name: "div_ratio", scope: !14568, file: !13585, line: 109, type: !157)
!14578 = !DILocalVariable(name: "off", scope: !14568, file: !13585, line: 116, type: !1652)
!14579 = !DILocalVariable(name: "rdivisor", scope: !14580, file: !13585, line: 119, type: !121)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !13585, line: 118, column: 18)
!14581 = distinct !DILexicalBlock(scope: !14568, file: !13585, line: 118, column: 6)
!14582 = !DILocation(line: 0, scope: !14568, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 392, column: 9, scope: !14563)
!14584 = !DILocation(line: 143, column: 25, scope: !14585, inlinedAt: !14583)
!14585 = distinct !DILexicalBlock(scope: !14586, file: !13585, line: 142, column: 17)
!14586 = distinct !DILexicalBlock(scope: !14587, file: !13585, line: 142, column: 7)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !13585, line: 141, column: 24)
!14588 = distinct !DILexicalBlock(scope: !14589, file: !13585, line: 141, column: 13)
!14589 = distinct !DILexicalBlock(scope: !14568, file: !13585, line: 134, column: 6)
!14590 = !DILocation(line: 392, column: 2, scope: !14563)
!14591 = distinct !DISubprogram(name: "z_time_slice", scope: !2602, file: !2602, line: 502, type: !7755, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14592)
!14592 = !{!14593, !14594}
!14593 = !DILocalVariable(name: "ticks", arg: 1, scope: !14591, file: !2602, line: 502, type: !103)
!14594 = !DILocalVariable(name: "key", scope: !14591, file: !2602, line: 511, type: !14513)
!14595 = !DILocation(line: 0, scope: !14591)
!14596 = !DILocation(line: 0, scope: !14521, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 511, column: 25, scope: !14591)
!14598 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !14597)
!14600 = !DILocation(line: 0, scope: !14530, inlinedAt: !14599)
!14601 = !DILocation(line: 514, column: 6, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14591, file: !2602, line: 514, column: 6)
!14603 = !DILocation(line: 514, column: 25, scope: !14602)
!14604 = !DILocation(line: 514, column: 22, scope: !14602)
!14605 = !DILocation(line: 514, column: 6, scope: !14591)
!14606 = !DILocation(line: 515, column: 3, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14602, file: !2602, line: 514, column: 35)
!14608 = !DILocation(line: 0, scope: !14548, inlinedAt: !14609)
!14609 = distinct !DILocation(line: 516, column: 3, scope: !14607)
!14610 = !DILocation(line: 0, scope: !14556, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !14609)
!14612 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !14611)
!14613 = !DILocation(line: 517, column: 3, scope: !14607)
!14614 = !DILocation(line: 519, column: 18, scope: !14591)
!14615 = !DILocation(line: 522, column: 6, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14591, file: !2602, line: 522, column: 6)
!14617 = !DILocation(line: 522, column: 27, scope: !14616)
!14618 = !DILocation(line: 522, column: 30, scope: !14616)
!14619 = !DILocation(line: 522, column: 6, scope: !14591)
!14620 = !DILocation(line: 523, column: 30, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !2602, line: 523, column: 7)
!14622 = distinct !DILexicalBlock(scope: !14616, file: !2602, line: 522, column: 51)
!14623 = !DILocation(line: 523, column: 13, scope: !14621)
!14624 = !DILocation(line: 523, column: 7, scope: !14622)
!14625 = !DILocation(line: 530, column: 10, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14621, file: !2602, line: 523, column: 43)
!14627 = !DILocation(line: 531, column: 3, scope: !14626)
!14628 = !DILocation(line: 532, column: 30, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14621, file: !2602, line: 531, column: 10)
!14630 = !DILocation(line: 535, column: 29, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14616, file: !2602, line: 534, column: 9)
!14632 = !DILocation(line: 0, scope: !14548, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 537, column: 2, scope: !14591)
!14634 = !DILocation(line: 0, scope: !14556, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !14633)
!14636 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !14635)
!14637 = !DILocation(line: 538, column: 1, scope: !14591)
!14638 = distinct !DISubprogram(name: "sliceable", scope: !2602, file: !2602, line: 468, type: !14639, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14641)
!14639 = !DISubroutineType(types: !14640)
!14640 = !{!157, !2497}
!14641 = !{!14642, !14643}
!14642 = !DILocalVariable(name: "thread", arg: 1, scope: !14638, file: !2602, line: 468, type: !2497)
!14643 = !DILocalVariable(name: "ret", scope: !14638, file: !2602, line: 470, type: !157)
!14644 = !DILocation(line: 0, scope: !14638)
!14645 = !DILocation(line: 470, column: 13, scope: !14638)
!14646 = !DILocation(line: 471, column: 3, scope: !14638)
!14647 = !DILocation(line: 471, column: 7, scope: !14638)
!14648 = !DILocation(line: 472, column: 3, scope: !14638)
!14649 = !DILocation(line: 472, column: 37, scope: !14638)
!14650 = !DILocation(line: 472, column: 24, scope: !14638)
!14651 = !DILocation(line: 472, column: 43, scope: !14638)
!14652 = !DILocation(line: 472, column: 7, scope: !14638)
!14653 = !DILocation(line: 473, column: 3, scope: !14638)
!14654 = !DILocation(line: 473, column: 7, scope: !14638)
!14655 = !DILocation(line: 473, column: 6, scope: !14638)
!14656 = !DILocation(line: 479, column: 2, scope: !14638)
!14657 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2602, file: !2602, line: 482, type: !14658, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14660)
!14658 = !DISubroutineType(types: !14659)
!14659 = !{!14513, !14513}
!14660 = !{!14661, !14662}
!14661 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14657, file: !2602, line: 482, type: !14513)
!14662 = !DILocalVariable(name: "curr", scope: !14657, file: !2602, line: 484, type: !2497)
!14663 = !DILocation(line: 0, scope: !14657)
!14664 = !DILocation(line: 484, column: 26, scope: !14657)
!14665 = !DILocation(line: 493, column: 7, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14657, file: !2602, line: 493, column: 6)
!14667 = !DILocation(line: 493, column: 6, scope: !14657)
!14668 = !DILocation(line: 494, column: 3, scope: !14669)
!14669 = distinct !DILexicalBlock(scope: !14666, file: !2602, line: 493, column: 49)
!14670 = !DILocation(line: 495, column: 2, scope: !14669)
!14671 = !DILocation(line: 496, column: 2, scope: !14657)
!14672 = !DILocation(line: 499, column: 1, scope: !14657)
!14673 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13026, file: !13026, line: 106, type: !14639, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14674)
!14674 = !{!14675, !14676}
!14675 = !DILocalVariable(name: "thread", arg: 1, scope: !14673, file: !13026, line: 106, type: !2497)
!14676 = !DILocalVariable(name: "state", scope: !14673, file: !13026, line: 108, type: !154)
!14677 = !DILocation(line: 0, scope: !14673)
!14678 = !DILocation(line: 108, column: 31, scope: !14673)
!14679 = !DILocation(line: 110, column: 16, scope: !14673)
!14680 = !DILocation(line: 111, column: 41, scope: !14673)
!14681 = !DILocation(line: 110, column: 2, scope: !14673)
!14682 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2602, file: !2602, line: 393, type: !14479, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14683)
!14683 = !{!14684}
!14684 = !DILocalVariable(name: "thread", arg: 1, scope: !14682, file: !2602, line: 393, type: !2497)
!14685 = !DILocation(line: 0, scope: !14682)
!14686 = !DILocation(line: 395, column: 6, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14682, file: !2602, line: 395, column: 6)
!14688 = !DILocation(line: 395, column: 6, scope: !14682)
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14690, file: !2602, line: 264, type: !2497)
!14690 = distinct !DISubprogram(name: "dequeue_thread", scope: !2602, file: !2602, line: 264, type: !14479, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14691)
!14691 = !{!14689}
!14692 = !DILocation(line: 0, scope: !14690, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 396, column: 3, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14687, file: !2602, line: 395, column: 34)
!14695 = !DILocation(line: 266, column: 15, scope: !14690, inlinedAt: !14693)
!14696 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !14693)
!14697 = !DILocalVariable(name: "thread", arg: 1, scope: !14698, file: !2602, line: 232, type: !2497)
!14698 = distinct !DISubprogram(name: "runq_remove", scope: !2602, file: !2602, line: 232, type: !14479, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14699)
!14699 = !{!14697}
!14700 = !DILocation(line: 0, scope: !14698, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !14693)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !2602, line: 267, column: 35)
!14703 = distinct !DILexicalBlock(scope: !14690, file: !2602, line: 267, column: 6)
!14704 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !14701)
!14705 = !DILocation(line: 397, column: 2, scope: !14694)
!14706 = !DILocalVariable(name: "thread", arg: 1, scope: !14707, file: !2602, line: 250, type: !2497)
!14707 = distinct !DISubprogram(name: "queue_thread", scope: !2602, file: !2602, line: 250, type: !14479, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14708)
!14708 = !{!14706}
!14709 = !DILocation(line: 0, scope: !14707, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 398, column: 2, scope: !14682)
!14711 = !DILocation(line: 252, column: 15, scope: !14707, inlinedAt: !14710)
!14712 = !DILocation(line: 252, column: 28, scope: !14707, inlinedAt: !14710)
!14713 = !DILocalVariable(name: "thread", arg: 1, scope: !14714, file: !2602, line: 227, type: !2497)
!14714 = distinct !DISubprogram(name: "runq_add", scope: !2602, file: !2602, line: 227, type: !14479, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14715)
!14715 = !{!14713}
!14716 = !DILocation(line: 0, scope: !14714, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 254, column: 3, scope: !14718, inlinedAt: !14710)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !2602, line: 253, column: 35)
!14719 = distinct !DILexicalBlock(scope: !14707, file: !2602, line: 253, column: 6)
!14720 = !DILocalVariable(name: "pq", arg: 1, scope: !14721, file: !2602, line: 181, type: !14724)
!14721 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2602, file: !2602, line: 181, type: !14722, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14725)
!14722 = !DISubroutineType(types: !14723)
!14723 = !{null, !14724, !2497}
!14724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!14725 = !{!14720, !14726, !14727}
!14726 = !DILocalVariable(name: "thread", arg: 2, scope: !14721, file: !2602, line: 182, type: !2497)
!14727 = !DILocalVariable(name: "t", scope: !14721, file: !2602, line: 184, type: !2497)
!14728 = !DILocation(line: 0, scope: !14721, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 229, column: 2, scope: !14714, inlinedAt: !14717)
!14730 = !DILocation(line: 188, column: 2, scope: !14731, inlinedAt: !14729)
!14731 = distinct !DILexicalBlock(scope: !14721, file: !2602, line: 188, column: 2)
!14732 = !DILocation(line: 188, column: 2, scope: !14733, inlinedAt: !14729)
!14733 = distinct !DILexicalBlock(scope: !14731, file: !2602, line: 188, column: 2)
!14734 = !DILocation(line: 0, scope: !14731, inlinedAt: !14729)
!14735 = !DILocation(line: 189, column: 7, scope: !14736, inlinedAt: !14729)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !2602, line: 189, column: 7)
!14737 = distinct !DILexicalBlock(scope: !14733, file: !2602, line: 188, column: 56)
!14738 = !DILocation(line: 189, column: 35, scope: !14736, inlinedAt: !14729)
!14739 = !DILocation(line: 189, column: 7, scope: !14737, inlinedAt: !14729)
!14740 = !DILocation(line: 191, column: 21, scope: !14741, inlinedAt: !14729)
!14741 = distinct !DILexicalBlock(scope: !14736, file: !2602, line: 189, column: 40)
!14742 = !DILocation(line: 190, column: 4, scope: !14741, inlinedAt: !14729)
!14743 = !DILocation(line: 192, column: 4, scope: !14741, inlinedAt: !14729)
!14744 = distinct !{!14744, !14730, !14745}
!14745 = !DILocation(line: 194, column: 2, scope: !14731, inlinedAt: !14729)
!14746 = !DILocation(line: 196, column: 37, scope: !14721, inlinedAt: !14729)
!14747 = !DILocation(line: 196, column: 2, scope: !14721, inlinedAt: !14729)
!14748 = !DILocation(line: 197, column: 1, scope: !14721, inlinedAt: !14729)
!14749 = !DILocation(line: 399, column: 25, scope: !14682)
!14750 = !DILocation(line: 399, column: 22, scope: !14682)
!14751 = !DILocation(line: 399, column: 2, scope: !14682)
!14752 = !DILocation(line: 400, column: 1, scope: !14682)
!14753 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13026, file: !13026, line: 136, type: !14639, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14754)
!14754 = !{!14755}
!14755 = !DILocalVariable(name: "thread", arg: 1, scope: !14753, file: !13026, line: 136, type: !2497)
!14756 = !DILocation(line: 0, scope: !14753)
!14757 = !DILocation(line: 138, column: 9, scope: !14753)
!14758 = !DILocation(line: 138, column: 2, scope: !14753)
!14759 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2602, file: !2602, line: 1137, type: !14722, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14760)
!14760 = !{!14761, !14762}
!14761 = !DILocalVariable(name: "pq", arg: 1, scope: !14759, file: !2602, line: 1137, type: !14724)
!14762 = !DILocalVariable(name: "thread", arg: 2, scope: !14759, file: !2602, line: 1137, type: !2497)
!14763 = !DILocation(line: 0, scope: !14759)
!14764 = !DILocation(line: 1141, column: 33, scope: !14759)
!14765 = !DILocation(line: 1141, column: 2, scope: !14759)
!14766 = !DILocation(line: 1142, column: 1, scope: !14759)
!14767 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !14768, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14770)
!14768 = !DISubroutineType(types: !14769)
!14769 = !{!2598, !14724}
!14770 = !{!14771}
!14771 = !DILocalVariable(name: "list", arg: 1, scope: !14767, file: !325, line: 294, type: !14724)
!14772 = !DILocation(line: 0, scope: !14767)
!14773 = !DILocation(line: 296, column: 9, scope: !14767)
!14774 = !DILocation(line: 296, column: 49, scope: !14767)
!14775 = !DILocation(line: 296, column: 2, scope: !14767)
!14776 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !14777, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14779)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{null, !2598, !2598}
!14779 = !{!14780, !14781, !14782}
!14780 = !DILocalVariable(name: "successor", arg: 1, scope: !14776, file: !325, line: 443, type: !2598)
!14781 = !DILocalVariable(name: "node", arg: 2, scope: !14776, file: !325, line: 443, type: !2598)
!14782 = !DILocalVariable(name: "prev", scope: !14776, file: !325, line: 445, type: !14783)
!14783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2598)
!14784 = !DILocation(line: 0, scope: !14776)
!14785 = !DILocation(line: 445, column: 39, scope: !14776)
!14786 = !DILocation(line: 447, column: 8, scope: !14776)
!14787 = !DILocation(line: 447, column: 13, scope: !14776)
!14788 = !DILocation(line: 448, column: 8, scope: !14776)
!14789 = !DILocation(line: 448, column: 13, scope: !14776)
!14790 = !DILocation(line: 449, column: 8, scope: !14776)
!14791 = !DILocation(line: 449, column: 13, scope: !14776)
!14792 = !DILocation(line: 450, column: 18, scope: !14776)
!14793 = !DILocation(line: 451, column: 1, scope: !14776)
!14794 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !14795, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14797)
!14795 = !DISubroutineType(types: !14796)
!14796 = !{!2598, !14724, !2598}
!14797 = !{!14798, !14799}
!14798 = !DILocalVariable(name: "list", arg: 1, scope: !14794, file: !325, line: 341, type: !14724)
!14799 = !DILocalVariable(name: "node", arg: 2, scope: !14794, file: !325, line: 342, type: !2598)
!14800 = !DILocation(line: 0, scope: !14794)
!14801 = !DILocation(line: 344, column: 15, scope: !14794)
!14802 = !DILocation(line: 344, column: 9, scope: !14794)
!14803 = !DILocation(line: 344, column: 26, scope: !14794)
!14804 = !DILocation(line: 344, column: 2, scope: !14794)
!14805 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !14806, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14808)
!14806 = !DISubroutineType(types: !14807)
!14807 = !{null, !14724, !2598}
!14808 = !{!14809, !14810, !14811}
!14809 = !DILocalVariable(name: "list", arg: 1, scope: !14805, file: !325, line: 404, type: !14724)
!14810 = !DILocalVariable(name: "node", arg: 2, scope: !14805, file: !325, line: 404, type: !2598)
!14811 = !DILocalVariable(name: "tail", scope: !14805, file: !325, line: 406, type: !14783)
!14812 = !DILocation(line: 0, scope: !14805)
!14813 = !DILocation(line: 406, column: 34, scope: !14805)
!14814 = !DILocation(line: 408, column: 8, scope: !14805)
!14815 = !DILocation(line: 408, column: 13, scope: !14805)
!14816 = !DILocation(line: 409, column: 8, scope: !14805)
!14817 = !DILocation(line: 409, column: 13, scope: !14805)
!14818 = !DILocation(line: 411, column: 8, scope: !14805)
!14819 = !DILocation(line: 411, column: 13, scope: !14805)
!14820 = !DILocation(line: 412, column: 13, scope: !14805)
!14821 = !DILocation(line: 413, column: 1, scope: !14805)
!14822 = distinct !DISubprogram(name: "update_cache", scope: !2602, file: !2602, line: 559, type: !7755, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14823)
!14823 = !{!14824, !14825}
!14824 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14822, file: !2602, line: 559, type: !103)
!14825 = !DILocalVariable(name: "thread", scope: !14822, file: !2602, line: 562, type: !2497)
!14826 = !DILocation(line: 0, scope: !14822)
!14827 = !DILocation(line: 239, column: 9, scope: !14828, inlinedAt: !14831)
!14828 = distinct !DISubprogram(name: "runq_best", scope: !2602, file: !2602, line: 237, type: !14829, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!14829 = !DISubroutineType(types: !14830)
!14830 = !{!2497}
!14831 = distinct !DILocation(line: 314, column: 28, scope: !14832, inlinedAt: !14835)
!14832 = distinct !DISubprogram(name: "next_up", scope: !2602, file: !2602, line: 312, type: !14829, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14833)
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "thread", scope: !14832, file: !2602, line: 314, type: !2497)
!14835 = distinct !DILocation(line: 562, column: 28, scope: !14822)
!14836 = !DILocation(line: 0, scope: !14832, inlinedAt: !14835)
!14837 = !DILocation(line: 340, column: 17, scope: !14832, inlinedAt: !14835)
!14838 = !DILocation(line: 340, column: 9, scope: !14832, inlinedAt: !14835)
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2602, line: 127, type: !2497)
!14840 = distinct !DISubprogram(name: "should_preempt", scope: !2602, file: !2602, line: 127, type: !14841, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14843)
!14841 = !DISubroutineType(types: !14842)
!14842 = !{!157, !2497, !103}
!14843 = !{!14839, !14844}
!14844 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14840, file: !2602, line: 128, type: !103)
!14845 = !DILocation(line: 0, scope: !14840, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 564, column: 6, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14822, file: !2602, line: 564, column: 6)
!14848 = !DILocation(line: 133, column: 17, scope: !14849, inlinedAt: !14846)
!14849 = distinct !DILexicalBlock(scope: !14840, file: !2602, line: 133, column: 6)
!14850 = !DILocation(line: 0, scope: !14847)
!14851 = !DILocation(line: 133, column: 6, scope: !14840, inlinedAt: !14846)
!14852 = !DILocation(line: 140, column: 6, scope: !14853, inlinedAt: !14846)
!14853 = distinct !DILexicalBlock(scope: !14840, file: !2602, line: 140, column: 6)
!14854 = !DILocation(line: 140, column: 6, scope: !14840, inlinedAt: !14846)
!14855 = !DILocation(line: 150, column: 9, scope: !14856, inlinedAt: !14846)
!14856 = distinct !DILexicalBlock(scope: !14840, file: !2602, line: 149, column: 6)
!14857 = !DILocation(line: 149, column: 6, scope: !14840, inlinedAt: !14846)
!14858 = !DILocation(line: 157, column: 6, scope: !14859, inlinedAt: !14846)
!14859 = distinct !DILexicalBlock(scope: !14840, file: !2602, line: 157, column: 6)
!14860 = !DILocation(line: 564, column: 6, scope: !14822)
!14861 = !DILocation(line: 566, column: 14, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !2602, line: 566, column: 7)
!14863 = distinct !DILexicalBlock(scope: !14847, file: !2602, line: 564, column: 42)
!14864 = !DILocation(line: 566, column: 7, scope: !14863)
!14865 = !DILocation(line: 567, column: 4, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14862, file: !2602, line: 566, column: 27)
!14867 = !DILocation(line: 568, column: 3, scope: !14866)
!14868 = !DILocation(line: 585, column: 1, scope: !14822)
!14869 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2602, file: !2602, line: 1144, type: !14870, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14872)
!14870 = !DISubroutineType(types: !14871)
!14871 = !{!2497, !14724}
!14872 = !{!14873, !14874, !14875}
!14873 = !DILocalVariable(name: "pq", arg: 1, scope: !14869, file: !2602, line: 1144, type: !14724)
!14874 = !DILocalVariable(name: "thread", scope: !14869, file: !2602, line: 1146, type: !2497)
!14875 = !DILocalVariable(name: "n", scope: !14869, file: !2602, line: 1147, type: !2598)
!14876 = !DILocation(line: 0, scope: !14869)
!14877 = !DILocation(line: 1147, column: 19, scope: !14869)
!14878 = !DILocation(line: 1152, column: 2, scope: !14869)
!14879 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13026, file: !13026, line: 115, type: !14639, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14880)
!14880 = !{!14881}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14879, file: !13026, line: 115, type: !2497)
!14882 = !DILocation(line: 0, scope: !14879)
!14883 = !DILocation(line: 117, column: 46, scope: !14879)
!14884 = !DILocation(line: 117, column: 10, scope: !14879)
!14885 = !DILocation(line: 117, column: 9, scope: !14879)
!14886 = !DILocation(line: 117, column: 2, scope: !14879)
!14887 = distinct !DISubprogram(name: "is_preempt", scope: !2602, file: !2602, line: 62, type: !14497, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14888)
!14888 = !{!14889}
!14889 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !2602, line: 62, type: !2497)
!14890 = !DILocation(line: 0, scope: !14887)
!14891 = !DILocation(line: 65, column: 22, scope: !14887)
!14892 = !DILocation(line: 65, column: 30, scope: !14887)
!14893 = !DILocation(line: 65, column: 2, scope: !14887)
!14894 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13418, file: !13418, line: 35, type: !14895, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14899)
!14895 = !DISubroutineType(types: !14896)
!14896 = !{!157, !14897}
!14897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14898, size: 32)
!14898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2548)
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "to", arg: 1, scope: !14894, file: !13418, line: 35, type: !14897)
!14901 = !DILocation(line: 0, scope: !14894)
!14902 = !DILocation(line: 37, column: 35, scope: !14894)
!14903 = !DILocation(line: 37, column: 10, scope: !14894)
!14904 = !DILocation(line: 37, column: 9, scope: !14894)
!14905 = !DILocation(line: 37, column: 2, scope: !14894)
!14906 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !14907, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14911)
!14907 = !DISubroutineType(types: !14908)
!14908 = !{!157, !14909}
!14909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14910, size: 32)
!14910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "node", arg: 1, scope: !14906, file: !325, line: 225, type: !14909)
!14913 = !DILocation(line: 0, scope: !14906)
!14914 = !DILocation(line: 227, column: 15, scope: !14906)
!14915 = !DILocation(line: 227, column: 20, scope: !14906)
!14916 = !DILocation(line: 227, column: 2, scope: !14906)
!14917 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !14795, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14918)
!14918 = !{!14919, !14920}
!14919 = !DILocalVariable(name: "list", arg: 1, scope: !14917, file: !325, line: 325, type: !14724)
!14920 = !DILocalVariable(name: "node", arg: 2, scope: !14917, file: !325, line: 326, type: !2598)
!14921 = !DILocation(line: 0, scope: !14917)
!14922 = !DILocation(line: 328, column: 24, scope: !14917)
!14923 = !DILocation(line: 328, column: 15, scope: !14917)
!14924 = !DILocation(line: 328, column: 9, scope: !14917)
!14925 = !DILocation(line: 328, column: 45, scope: !14917)
!14926 = !DILocation(line: 328, column: 2, scope: !14917)
!14927 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !14928, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14930)
!14928 = !DISubroutineType(types: !14929)
!14929 = !{!157, !14724}
!14930 = !{!14931}
!14931 = !DILocalVariable(name: "list", arg: 1, scope: !14927, file: !325, line: 266, type: !14724)
!14932 = !DILocation(line: 0, scope: !14927)
!14933 = !DILocation(line: 268, column: 15, scope: !14927)
!14934 = !DILocation(line: 268, column: 20, scope: !14927)
!14935 = !DILocation(line: 268, column: 2, scope: !14927)
!14936 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !14937, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{null, !2598}
!14939 = !{!14940, !14941, !14942}
!14940 = !DILocalVariable(name: "node", arg: 1, scope: !14936, file: !325, line: 496, type: !2598)
!14941 = !DILocalVariable(name: "prev", scope: !14936, file: !325, line: 498, type: !14783)
!14942 = !DILocalVariable(name: "next", scope: !14936, file: !325, line: 499, type: !14783)
!14943 = !DILocation(line: 0, scope: !14936)
!14944 = !DILocation(line: 498, column: 34, scope: !14936)
!14945 = !DILocation(line: 499, column: 34, scope: !14936)
!14946 = !DILocation(line: 501, column: 8, scope: !14936)
!14947 = !DILocation(line: 501, column: 13, scope: !14936)
!14948 = !DILocation(line: 502, column: 8, scope: !14936)
!14949 = !DILocation(line: 502, column: 13, scope: !14936)
!14950 = !DILocation(line: 503, column: 2, scope: !14936)
!14951 = !DILocation(line: 504, column: 1, scope: !14936)
!14952 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !14937, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14953)
!14953 = !{!14954}
!14954 = !DILocalVariable(name: "node", arg: 1, scope: !14952, file: !325, line: 211, type: !2598)
!14955 = !DILocation(line: 0, scope: !14952)
!14956 = !DILocation(line: 213, column: 8, scope: !14952)
!14957 = !DILocation(line: 213, column: 13, scope: !14952)
!14958 = !DILocation(line: 214, column: 8, scope: !14952)
!14959 = !DILocation(line: 214, column: 13, scope: !14952)
!14960 = !DILocation(line: 215, column: 1, scope: !14952)
!14961 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13026, file: !13026, line: 131, type: !14962, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14964)
!14962 = !DISubroutineType(types: !14963)
!14963 = !{!157, !2497, !121}
!14964 = !{!14965, !14966}
!14965 = !DILocalVariable(name: "thread", arg: 1, scope: !14961, file: !13026, line: 131, type: !2497)
!14966 = !DILocalVariable(name: "state", arg: 2, scope: !14961, file: !13026, line: 131, type: !121)
!14967 = !DILocation(line: 0, scope: !14961)
!14968 = !DILocation(line: 133, column: 23, scope: !14961)
!14969 = !DILocation(line: 133, column: 45, scope: !14961)
!14970 = !DILocation(line: 133, column: 2, scope: !14961)
!14971 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13026, file: !13026, line: 211, type: !14972, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14974)
!14972 = !DISubroutineType(types: !14973)
!14973 = !{!157, !103, !103}
!14974 = !{!14975, !14976}
!14975 = !DILocalVariable(name: "prio", arg: 1, scope: !14971, file: !13026, line: 211, type: !103)
!14976 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14971, file: !13026, line: 211, type: !103)
!14977 = !DILocation(line: 0, scope: !14971)
!14978 = !DILocation(line: 213, column: 9, scope: !14971)
!14979 = !DILocation(line: 213, column: 2, scope: !14971)
!14980 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13026, file: !13026, line: 83, type: !14639, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14981)
!14981 = !{!14982}
!14982 = !DILocalVariable(name: "thread", arg: 1, scope: !14980, file: !13026, line: 83, type: !2497)
!14983 = !DILocation(line: 0, scope: !14980)
!14984 = !DILocation(line: 89, column: 16, scope: !14980)
!14985 = !DILocation(line: 89, column: 2, scope: !14980)
!14986 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13026, file: !13026, line: 206, type: !14972, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14987)
!14987 = !{!14988, !14989}
!14988 = !DILocalVariable(name: "prio1", arg: 1, scope: !14986, file: !13026, line: 206, type: !103)
!14989 = !DILocalVariable(name: "prio2", arg: 2, scope: !14986, file: !13026, line: 206, type: !103)
!14990 = !DILocation(line: 0, scope: !14986)
!14991 = !DILocation(line: 208, column: 15, scope: !14986)
!14992 = !DILocation(line: 208, column: 2, scope: !14986)
!14993 = distinct !DISubprogram(name: "z_ready_thread", scope: !2602, file: !2602, line: 635, type: !14479, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !14994)
!14994 = !{!14995, !14996, !14998}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !2602, line: 635, type: !2497)
!14996 = !DILocalVariable(name: "__i", scope: !14997, file: !2602, line: 637, type: !14513)
!14997 = distinct !DILexicalBlock(scope: !14993, file: !2602, line: 637, column: 2)
!14998 = !DILocalVariable(name: "__key", scope: !14997, file: !2602, line: 637, type: !14513)
!14999 = !DILocation(line: 0, scope: !14993)
!15000 = !DILocation(line: 0, scope: !14997)
!15001 = !DILocation(line: 0, scope: !14521, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 637, column: 2, scope: !14997)
!15003 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15002)
!15005 = !DILocation(line: 0, scope: !14530, inlinedAt: !15004)
!15006 = !DILocation(line: 639, column: 4, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !15008, file: !2602, line: 638, column: 41)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !2602, line: 638, column: 7)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !2602, line: 637, column: 26)
!15010 = distinct !DILexicalBlock(scope: !14997, file: !2602, line: 637, column: 2)
!15011 = !DILocation(line: 0, scope: !14548, inlinedAt: !15012)
!15012 = distinct !DILocation(line: 637, column: 2, scope: !15010)
!15013 = !DILocation(line: 0, scope: !14556, inlinedAt: !15014)
!15014 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15012)
!15015 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15014)
!15016 = !DILocation(line: 642, column: 1, scope: !14993)
!15017 = distinct !DISubprogram(name: "ready_thread", scope: !2602, file: !2602, line: 617, type: !14479, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15018)
!15018 = !{!15019}
!15019 = !DILocalVariable(name: "thread", arg: 1, scope: !15017, file: !2602, line: 617, type: !2497)
!15020 = !DILocation(line: 0, scope: !15017)
!15021 = !DILocation(line: 626, column: 7, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15017, file: !2602, line: 626, column: 6)
!15023 = !DILocation(line: 626, column: 34, scope: !15022)
!15024 = !DILocation(line: 626, column: 37, scope: !15022)
!15025 = !DILocation(line: 626, column: 6, scope: !15017)
!15026 = !DILocation(line: 0, scope: !14707, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 629, column: 3, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15022, file: !2602, line: 626, column: 64)
!15029 = !DILocation(line: 252, column: 15, scope: !14707, inlinedAt: !15027)
!15030 = !DILocation(line: 252, column: 28, scope: !14707, inlinedAt: !15027)
!15031 = !DILocation(line: 0, scope: !14714, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 254, column: 3, scope: !14718, inlinedAt: !15027)
!15033 = !DILocation(line: 0, scope: !14721, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 229, column: 2, scope: !14714, inlinedAt: !15032)
!15035 = !DILocation(line: 188, column: 2, scope: !14731, inlinedAt: !15034)
!15036 = !DILocation(line: 188, column: 2, scope: !14733, inlinedAt: !15034)
!15037 = !DILocation(line: 0, scope: !14731, inlinedAt: !15034)
!15038 = !DILocation(line: 189, column: 7, scope: !14736, inlinedAt: !15034)
!15039 = !DILocation(line: 189, column: 35, scope: !14736, inlinedAt: !15034)
!15040 = !DILocation(line: 189, column: 7, scope: !14737, inlinedAt: !15034)
!15041 = !DILocation(line: 191, column: 21, scope: !14741, inlinedAt: !15034)
!15042 = !DILocation(line: 190, column: 4, scope: !14741, inlinedAt: !15034)
!15043 = !DILocation(line: 192, column: 4, scope: !14741, inlinedAt: !15034)
!15044 = distinct !{!15044, !15035, !15045}
!15045 = !DILocation(line: 194, column: 2, scope: !14731, inlinedAt: !15034)
!15046 = !DILocation(line: 196, column: 37, scope: !14721, inlinedAt: !15034)
!15047 = !DILocation(line: 196, column: 2, scope: !14721, inlinedAt: !15034)
!15048 = !DILocation(line: 197, column: 1, scope: !14721, inlinedAt: !15034)
!15049 = !DILocation(line: 630, column: 3, scope: !15028)
!15050 = !DILocation(line: 632, column: 2, scope: !15028)
!15051 = !DILocation(line: 633, column: 1, scope: !15017)
!15052 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13026, file: !13026, line: 120, type: !14639, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15053)
!15053 = !{!15054}
!15054 = !DILocalVariable(name: "thread", arg: 1, scope: !15052, file: !13026, line: 120, type: !2497)
!15055 = !DILocation(line: 0, scope: !15052)
!15056 = !DILocation(line: 122, column: 12, scope: !15052)
!15057 = !DILocation(line: 122, column: 62, scope: !15052)
!15058 = !DILocation(line: 123, column: 4, scope: !15052)
!15059 = !DILocation(line: 122, column: 2, scope: !15052)
!15060 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2602, file: !2602, line: 644, type: !14479, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15061)
!15061 = !{!15062, !15063, !15065}
!15062 = !DILocalVariable(name: "thread", arg: 1, scope: !15060, file: !2602, line: 644, type: !2497)
!15063 = !DILocalVariable(name: "__i", scope: !15064, file: !2602, line: 646, type: !14513)
!15064 = distinct !DILexicalBlock(scope: !15060, file: !2602, line: 646, column: 2)
!15065 = !DILocalVariable(name: "__key", scope: !15064, file: !2602, line: 646, type: !14513)
!15066 = !DILocation(line: 0, scope: !15060)
!15067 = !DILocation(line: 0, scope: !15064)
!15068 = !DILocation(line: 0, scope: !14521, inlinedAt: !15069)
!15069 = distinct !DILocation(line: 646, column: 2, scope: !15064)
!15070 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15071)
!15071 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15069)
!15072 = !DILocation(line: 0, scope: !14530, inlinedAt: !15071)
!15073 = !DILocation(line: 647, column: 3, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15075, file: !2602, line: 646, column: 26)
!15075 = distinct !DILexicalBlock(scope: !15064, file: !2602, line: 646, column: 2)
!15076 = !DILocation(line: 0, scope: !14548, inlinedAt: !15077)
!15077 = distinct !DILocation(line: 646, column: 2, scope: !15075)
!15078 = !DILocation(line: 0, scope: !14556, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15077)
!15080 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15079)
!15081 = !DILocation(line: 649, column: 1, scope: !15060)
!15082 = distinct !DISubprogram(name: "z_sched_start", scope: !2602, file: !2602, line: 651, type: !14479, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15083)
!15083 = !{!15084, !15085}
!15084 = !DILocalVariable(name: "thread", arg: 1, scope: !15082, file: !2602, line: 651, type: !2497)
!15085 = !DILocalVariable(name: "key", scope: !15082, file: !2602, line: 653, type: !14513)
!15086 = !DILocation(line: 0, scope: !15082)
!15087 = !DILocation(line: 0, scope: !14521, inlinedAt: !15088)
!15088 = distinct !DILocation(line: 653, column: 25, scope: !15082)
!15089 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15090)
!15090 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15088)
!15091 = !DILocation(line: 0, scope: !14530, inlinedAt: !15090)
!15092 = !DILocation(line: 655, column: 6, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15082, file: !2602, line: 655, column: 6)
!15094 = !DILocation(line: 655, column: 6, scope: !15082)
!15095 = !DILocation(line: 0, scope: !14548, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 656, column: 3, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15093, file: !2602, line: 655, column: 36)
!15098 = !DILocation(line: 0, scope: !14556, inlinedAt: !15099)
!15099 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15096)
!15100 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15099)
!15101 = !DILocation(line: 657, column: 3, scope: !15097)
!15102 = !DILocation(line: 660, column: 2, scope: !15082)
!15103 = !DILocation(line: 661, column: 2, scope: !15082)
!15104 = !DILocation(line: 662, column: 2, scope: !15082)
!15105 = !DILocation(line: 663, column: 1, scope: !15082)
!15106 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13026, file: !13026, line: 126, type: !14639, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15107)
!15107 = !{!15108}
!15108 = !DILocalVariable(name: "thread", arg: 1, scope: !15106, file: !13026, line: 126, type: !2497)
!15109 = !DILocation(line: 0, scope: !15106)
!15110 = !DILocation(line: 128, column: 23, scope: !15106)
!15111 = !DILocation(line: 128, column: 36, scope: !15106)
!15112 = !DILocation(line: 128, column: 56, scope: !15106)
!15113 = !DILocation(line: 128, column: 2, scope: !15106)
!15114 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13026, file: !13026, line: 155, type: !14479, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15115)
!15115 = !{!15116}
!15116 = !DILocalVariable(name: "thread", arg: 1, scope: !15114, file: !13026, line: 155, type: !2497)
!15117 = !DILocation(line: 0, scope: !15114)
!15118 = !DILocation(line: 157, column: 15, scope: !15114)
!15119 = !DILocation(line: 157, column: 28, scope: !15114)
!15120 = !DILocation(line: 158, column: 1, scope: !15114)
!15121 = distinct !DISubprogram(name: "z_reschedule", scope: !2602, file: !2602, line: 967, type: !14549, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15122)
!15122 = !{!15123, !15124}
!15123 = !DILocalVariable(name: "lock", arg: 1, scope: !15121, file: !2602, line: 967, type: !14524)
!15124 = !DILocalVariable(name: "key", arg: 2, scope: !15121, file: !2602, line: 967, type: !14513)
!15125 = !DILocation(line: 0, scope: !15121)
!15126 = !DILocation(line: 969, column: 6, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15121, file: !2602, line: 969, column: 6)
!15128 = !DILocation(line: 969, column: 23, scope: !15127)
!15129 = !DILocation(line: 969, column: 26, scope: !15127)
!15130 = !DILocation(line: 969, column: 6, scope: !15121)
!15131 = !DILocalVariable(name: "key", arg: 2, scope: !15132, file: !13130, line: 193, type: !14513)
!15132 = distinct !DISubprogram(name: "z_swap", scope: !13130, file: !13130, line: 193, type: !15133, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15135)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{!103, !14524, !14513}
!15135 = !{!15136, !15131}
!15136 = !DILocalVariable(name: "lock", arg: 1, scope: !15132, file: !13130, line: 193, type: !14524)
!15137 = !DILocation(line: 0, scope: !15132, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 970, column: 3, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15127, file: !2602, line: 969, column: 39)
!15140 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !15138)
!15141 = !DILocation(line: 971, column: 2, scope: !15139)
!15142 = !DILocation(line: 0, scope: !14548, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 972, column: 3, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15127, file: !2602, line: 971, column: 9)
!15145 = !DILocation(line: 0, scope: !14556, inlinedAt: !15146)
!15146 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15143)
!15147 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15146)
!15148 = !DILocation(line: 975, column: 1, scope: !15121)
!15149 = distinct !DISubprogram(name: "resched", scope: !2602, file: !2602, line: 940, type: !15150, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!157, !121}
!15152 = !{!15153}
!15153 = !DILocalVariable(name: "key", arg: 1, scope: !15149, file: !2602, line: 940, type: !121)
!15154 = !DILocation(line: 0, scope: !15149)
!15155 = !DILocalVariable(name: "key", arg: 1, scope: !15156, file: !5896, line: 112, type: !32)
!15156 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5896, file: !5896, line: 112, type: !15157, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!157, !32}
!15159 = !{!15155}
!15160 = !DILocation(line: 0, scope: !15156, inlinedAt: !15161)
!15161 = distinct !DILocation(line: 946, column: 9, scope: !15149)
!15162 = !DILocation(line: 115, column: 13, scope: !15156, inlinedAt: !15161)
!15163 = !DILocation(line: 946, column: 32, scope: !15149)
!15164 = !DILocation(line: 1031, column: 3, scope: !15165, inlinedAt: !15168)
!15165 = distinct !DISubprogram(name: "__get_IPSR", scope: !6111, file: !6111, line: 1027, type: !6192, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15166)
!15166 = !{!15167}
!15167 = !DILocalVariable(name: "result", scope: !15165, file: !6111, line: 1029, type: !121)
!15168 = distinct !DILocation(line: 48, column: 10, scope: !15169, inlinedAt: !15170)
!15169 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6905, file: !6905, line: 46, type: !6906, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!15170 = distinct !DILocation(line: 946, column: 36, scope: !15149)
!15171 = !{i64 4153417}
!15172 = !DILocation(line: 0, scope: !15165, inlinedAt: !15168)
!15173 = !DILocation(line: 48, column: 9, scope: !15169, inlinedAt: !15170)
!15174 = !DILocation(line: 946, column: 2, scope: !15149)
!15175 = distinct !DISubprogram(name: "need_swap", scope: !2602, file: !2602, line: 953, type: !6906, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15176)
!15176 = !{!15177}
!15177 = !DILocalVariable(name: "new_thread", scope: !15175, file: !2602, line: 959, type: !2497)
!15178 = !DILocation(line: 962, column: 31, scope: !15175)
!15179 = !DILocation(line: 0, scope: !15175)
!15180 = !DILocation(line: 963, column: 23, scope: !15175)
!15181 = !DILocation(line: 963, column: 20, scope: !15175)
!15182 = !DILocation(line: 963, column: 2, scope: !15175)
!15183 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13130, file: !13130, line: 181, type: !6121, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15184)
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "key", arg: 1, scope: !15183, file: !13130, line: 181, type: !32)
!15186 = !DILocalVariable(name: "ret", scope: !15183, file: !13130, line: 183, type: !103)
!15187 = !DILocation(line: 0, scope: !15183)
!15188 = !DILocation(line: 185, column: 8, scope: !15183)
!15189 = !DILocation(line: 186, column: 2, scope: !15183)
!15190 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2602, file: !2602, line: 665, type: !14479, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15191)
!15191 = !{!15192, !15193, !15195}
!15192 = !DILocalVariable(name: "thread", arg: 1, scope: !15190, file: !2602, line: 665, type: !2497)
!15193 = !DILocalVariable(name: "__i", scope: !15194, file: !2602, line: 671, type: !14513)
!15194 = distinct !DILexicalBlock(scope: !15190, file: !2602, line: 671, column: 2)
!15195 = !DILocalVariable(name: "__key", scope: !15194, file: !2602, line: 671, type: !14513)
!15196 = !DILocation(line: 0, scope: !15190)
!15197 = !DILocation(line: 669, column: 8, scope: !15190)
!15198 = !DILocation(line: 0, scope: !15194)
!15199 = !DILocation(line: 0, scope: !14521, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 671, column: 2, scope: !15194)
!15201 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15200)
!15203 = !DILocation(line: 0, scope: !14530, inlinedAt: !15202)
!15204 = !DILocation(line: 672, column: 7, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2602, line: 672, column: 7)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2602, line: 671, column: 26)
!15207 = distinct !DILexicalBlock(scope: !15194, file: !2602, line: 671, column: 2)
!15208 = !DILocation(line: 672, column: 7, scope: !15206)
!15209 = !DILocation(line: 0, scope: !14690, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 673, column: 4, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15205, file: !2602, line: 672, column: 35)
!15212 = !DILocation(line: 266, column: 15, scope: !14690, inlinedAt: !15210)
!15213 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !15210)
!15214 = !DILocation(line: 0, scope: !14698, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !15210)
!15216 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !15215)
!15217 = !DILocation(line: 674, column: 3, scope: !15211)
!15218 = !DILocation(line: 675, column: 3, scope: !15206)
!15219 = !DILocation(line: 676, column: 26, scope: !15206)
!15220 = !DILocation(line: 676, column: 23, scope: !15206)
!15221 = !DILocation(line: 676, column: 3, scope: !15206)
!15222 = !DILocation(line: 0, scope: !14548, inlinedAt: !15223)
!15223 = distinct !DILocation(line: 671, column: 2, scope: !15207)
!15224 = !DILocation(line: 0, scope: !14556, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15223)
!15226 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15225)
!15227 = !DILocation(line: 679, column: 16, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15190, file: !2602, line: 679, column: 6)
!15229 = !DILocation(line: 679, column: 13, scope: !15228)
!15230 = !DILocation(line: 679, column: 6, scope: !15190)
!15231 = !DILocation(line: 680, column: 3, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15228, file: !2602, line: 679, column: 26)
!15233 = !DILocation(line: 681, column: 2, scope: !15232)
!15234 = !DILocation(line: 684, column: 1, scope: !15190)
!15235 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13418, file: !13418, line: 52, type: !14497, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15236)
!15236 = !{!15237}
!15237 = !DILocalVariable(name: "thread", arg: 1, scope: !15235, file: !13418, line: 52, type: !2497)
!15238 = !DILocation(line: 0, scope: !15235)
!15239 = !DILocation(line: 54, column: 39, scope: !15235)
!15240 = !DILocation(line: 54, column: 9, scope: !15235)
!15241 = !DILocation(line: 54, column: 2, scope: !15235)
!15242 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13026, file: !13026, line: 141, type: !14479, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15243)
!15243 = !{!15244}
!15244 = !DILocalVariable(name: "thread", arg: 1, scope: !15242, file: !13026, line: 141, type: !2497)
!15245 = !DILocation(line: 0, scope: !15242)
!15246 = !DILocation(line: 143, column: 15, scope: !15242)
!15247 = !DILocation(line: 143, column: 28, scope: !15242)
!15248 = !DILocation(line: 146, column: 1, scope: !15242)
!15249 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13026, file: !13026, line: 73, type: !3339, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!15250 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 75, column: 30, scope: !15249)
!15252 = !DILocation(line: 0, scope: !14530, inlinedAt: !15251)
!15253 = !DILocation(line: 75, column: 9, scope: !15249)
!15254 = !DILocation(line: 76, column: 1, scope: !15249)
!15255 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2602, file: !2602, line: 977, type: !6202, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15256)
!15256 = !{!15257}
!15257 = !DILocalVariable(name: "key", arg: 1, scope: !15255, file: !2602, line: 977, type: !121)
!15258 = !DILocation(line: 0, scope: !15255)
!15259 = !DILocation(line: 979, column: 6, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15255, file: !2602, line: 979, column: 6)
!15261 = !DILocation(line: 979, column: 6, scope: !15255)
!15262 = !DILocation(line: 980, column: 3, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15260, file: !2602, line: 979, column: 20)
!15264 = !DILocation(line: 981, column: 2, scope: !15263)
!15265 = !DILocation(line: 0, scope: !14556, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 982, column: 3, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15260, file: !2602, line: 981, column: 9)
!15268 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15266)
!15269 = !DILocation(line: 985, column: 1, scope: !15255)
!15270 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2602, file: !2602, line: 695, type: !14479, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15271)
!15271 = !{!15272, !15273}
!15272 = !DILocalVariable(name: "thread", arg: 1, scope: !15270, file: !2602, line: 695, type: !2497)
!15273 = !DILocalVariable(name: "key", scope: !15270, file: !2602, line: 699, type: !14513)
!15274 = !DILocation(line: 0, scope: !15270)
!15275 = !DILocation(line: 0, scope: !14521, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 699, column: 25, scope: !15270)
!15277 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15276)
!15279 = !DILocation(line: 0, scope: !14530, inlinedAt: !15278)
!15280 = !DILocation(line: 702, column: 7, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15270, file: !2602, line: 702, column: 6)
!15282 = !DILocation(line: 702, column: 6, scope: !15270)
!15283 = !DILocation(line: 0, scope: !14548, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 703, column: 3, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15281, file: !2602, line: 702, column: 38)
!15286 = !DILocation(line: 0, scope: !14556, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15284)
!15288 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15287)
!15289 = !DILocation(line: 704, column: 3, scope: !15285)
!15290 = !DILocation(line: 707, column: 2, scope: !15270)
!15291 = !DILocation(line: 708, column: 2, scope: !15270)
!15292 = !DILocation(line: 710, column: 2, scope: !15270)
!15293 = !DILocation(line: 713, column: 1, scope: !15270)
!15294 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13026, file: !13026, line: 96, type: !14639, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15295)
!15295 = !{!15296}
!15296 = !DILocalVariable(name: "thread", arg: 1, scope: !15294, file: !13026, line: 96, type: !2497)
!15297 = !DILocation(line: 0, scope: !15294)
!15298 = !DILocation(line: 98, column: 23, scope: !15294)
!15299 = !DILocation(line: 98, column: 36, scope: !15294)
!15300 = !DILocation(line: 98, column: 57, scope: !15294)
!15301 = !DILocation(line: 98, column: 2, scope: !15294)
!15302 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13026, file: !13026, line: 148, type: !14479, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15303)
!15303 = !{!15304}
!15304 = !DILocalVariable(name: "thread", arg: 1, scope: !15302, file: !13026, line: 148, type: !2497)
!15305 = !DILocation(line: 0, scope: !15302)
!15306 = !DILocation(line: 150, column: 15, scope: !15302)
!15307 = !DILocation(line: 150, column: 28, scope: !15302)
!15308 = !DILocation(line: 153, column: 1, scope: !15302)
!15309 = distinct !DISubprogram(name: "z_pend_thread", scope: !2602, file: !2602, line: 770, type: !15310, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15316)
!15310 = !DISubroutineType(types: !15311)
!15311 = !{null, !2497, !2528, !15312}
!15312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15313)
!15313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15314)
!15314 = !{!15315}
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15313, file: !201, line: 66, baseType: !200, size: 64)
!15316 = !{!15317, !15318, !15319, !15320, !15322}
!15317 = !DILocalVariable(name: "thread", arg: 1, scope: !15309, file: !2602, line: 770, type: !2497)
!15318 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15309, file: !2602, line: 770, type: !2528)
!15319 = !DILocalVariable(name: "timeout", arg: 3, scope: !15309, file: !2602, line: 771, type: !15312)
!15320 = !DILocalVariable(name: "__i", scope: !15321, file: !2602, line: 774, type: !14513)
!15321 = distinct !DILexicalBlock(scope: !15309, file: !2602, line: 774, column: 2)
!15322 = !DILocalVariable(name: "__key", scope: !15321, file: !2602, line: 774, type: !14513)
!15323 = !DILocation(line: 0, scope: !15309)
!15324 = !DILocation(line: 0, scope: !15321)
!15325 = !DILocation(line: 0, scope: !14521, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 774, column: 2, scope: !15321)
!15327 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15326)
!15329 = !DILocation(line: 0, scope: !14530, inlinedAt: !15328)
!15330 = !DILocation(line: 775, column: 3, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15332, file: !2602, line: 774, column: 26)
!15332 = distinct !DILexicalBlock(scope: !15321, file: !2602, line: 774, column: 2)
!15333 = !DILocation(line: 0, scope: !14548, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 774, column: 2, scope: !15332)
!15335 = !DILocation(line: 0, scope: !14556, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15334)
!15337 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15336)
!15338 = !DILocation(line: 777, column: 1, scope: !15309)
!15339 = distinct !DISubprogram(name: "pend_locked", scope: !2602, file: !2602, line: 760, type: !15310, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15340)
!15340 = !{!15341, !15342, !15343}
!15341 = !DILocalVariable(name: "thread", arg: 1, scope: !15339, file: !2602, line: 760, type: !2497)
!15342 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15339, file: !2602, line: 760, type: !2528)
!15343 = !DILocalVariable(name: "timeout", arg: 3, scope: !15339, file: !2602, line: 761, type: !15312)
!15344 = !DILocation(line: 0, scope: !15339)
!15345 = !DILocation(line: 766, column: 2, scope: !15339)
!15346 = !DILocation(line: 767, column: 2, scope: !15339)
!15347 = !DILocation(line: 768, column: 1, scope: !15339)
!15348 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2602, file: !2602, line: 740, type: !15349, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15351)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{null, !2497, !2528}
!15351 = !{!15352, !15353}
!15352 = !DILocalVariable(name: "thread", arg: 1, scope: !15348, file: !2602, line: 740, type: !2497)
!15353 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15348, file: !2602, line: 740, type: !2528)
!15354 = !DILocation(line: 0, scope: !15348)
!15355 = !DILocation(line: 742, column: 2, scope: !15348)
!15356 = !DILocation(line: 743, column: 2, scope: !15348)
!15357 = !DILocation(line: 747, column: 13, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15348, file: !2602, line: 747, column: 6)
!15359 = !DILocation(line: 747, column: 6, scope: !15348)
!15360 = !DILocation(line: 748, column: 16, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15358, file: !2602, line: 747, column: 22)
!15362 = !DILocation(line: 748, column: 26, scope: !15361)
!15363 = !DILocation(line: 749, column: 28, scope: !15361)
!15364 = !DILocation(line: 0, scope: !14721, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 749, column: 3, scope: !15361)
!15366 = !DILocation(line: 188, column: 2, scope: !14731, inlinedAt: !15365)
!15367 = !DILocation(line: 188, column: 2, scope: !14733, inlinedAt: !15365)
!15368 = !DILocation(line: 0, scope: !14731, inlinedAt: !15365)
!15369 = !DILocation(line: 189, column: 7, scope: !14736, inlinedAt: !15365)
!15370 = !DILocation(line: 189, column: 35, scope: !14736, inlinedAt: !15365)
!15371 = !DILocation(line: 189, column: 7, scope: !14737, inlinedAt: !15365)
!15372 = !DILocation(line: 191, column: 21, scope: !14741, inlinedAt: !15365)
!15373 = !DILocation(line: 190, column: 4, scope: !14741, inlinedAt: !15365)
!15374 = !DILocation(line: 192, column: 4, scope: !14741, inlinedAt: !15365)
!15375 = distinct !{!15375, !15366, !15376}
!15376 = !DILocation(line: 194, column: 2, scope: !14731, inlinedAt: !15365)
!15377 = !DILocation(line: 196, column: 37, scope: !14721, inlinedAt: !15365)
!15378 = !DILocation(line: 196, column: 2, scope: !14721, inlinedAt: !15365)
!15379 = !DILocation(line: 197, column: 1, scope: !14721, inlinedAt: !15365)
!15380 = !DILocation(line: 751, column: 1, scope: !15348)
!15381 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2602, file: !2602, line: 753, type: !15382, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15384)
!15382 = !DISubroutineType(types: !15383)
!15383 = !{null, !2497, !15312}
!15384 = !{!15385, !15386}
!15385 = !DILocalVariable(name: "thread", arg: 1, scope: !15381, file: !2602, line: 753, type: !2497)
!15386 = !DILocalVariable(name: "timeout", arg: 2, scope: !15381, file: !2602, line: 753, type: !15312)
!15387 = !DILocation(line: 0, scope: !15381)
!15388 = !DILocation(line: 755, column: 7, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15381, file: !2602, line: 755, column: 6)
!15390 = !DILocation(line: 755, column: 6, scope: !15381)
!15391 = !DILocation(line: 756, column: 3, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15389, file: !2602, line: 755, column: 41)
!15393 = !DILocation(line: 757, column: 2, scope: !15392)
!15394 = !DILocation(line: 758, column: 1, scope: !15381)
!15395 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13418, file: !13418, line: 47, type: !15382, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15396)
!15396 = !{!15397, !15398}
!15397 = !DILocalVariable(name: "thread", arg: 1, scope: !15395, file: !13418, line: 47, type: !2497)
!15398 = !DILocalVariable(name: "ticks", arg: 2, scope: !15395, file: !13418, line: 47, type: !15312)
!15399 = !DILocation(line: 0, scope: !15395)
!15400 = !DILocation(line: 49, column: 30, scope: !15395)
!15401 = !DILocation(line: 49, column: 2, scope: !15395)
!15402 = !DILocation(line: 50, column: 1, scope: !15395)
!15403 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2602, file: !2602, line: 795, type: !2554, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15404)
!15404 = !{!15405, !15406, !15407, !15409, !15410}
!15405 = !DILocalVariable(name: "timeout", arg: 1, scope: !15403, file: !2602, line: 795, type: !2556)
!15406 = !DILocalVariable(name: "thread", scope: !15403, file: !2602, line: 797, type: !2497)
!15407 = !DILocalVariable(name: "__i", scope: !15408, file: !2602, line: 800, type: !14513)
!15408 = distinct !DILexicalBlock(scope: !15403, file: !2602, line: 800, column: 2)
!15409 = !DILocalVariable(name: "__key", scope: !15408, file: !2602, line: 800, type: !14513)
!15410 = !DILocalVariable(name: "killed", scope: !15411, file: !2602, line: 801, type: !157)
!15411 = distinct !DILexicalBlock(scope: !15412, file: !2602, line: 800, column: 26)
!15412 = distinct !DILexicalBlock(scope: !15408, file: !2602, line: 800, column: 2)
!15413 = !DILocation(line: 0, scope: !15403)
!15414 = !DILocation(line: 797, column: 28, scope: !15403)
!15415 = !DILocation(line: 0, scope: !15408)
!15416 = !DILocation(line: 0, scope: !14521, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 800, column: 2, scope: !15408)
!15418 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15417)
!15420 = !DILocation(line: 0, scope: !14530, inlinedAt: !15419)
!15421 = !DILocation(line: 801, column: 27, scope: !15411)
!15422 = !DILocation(line: 801, column: 32, scope: !15411)
!15423 = !DILocation(line: 801, column: 61, scope: !15411)
!15424 = !DILocation(line: 0, scope: !15411)
!15425 = !DILocation(line: 804, column: 7, scope: !15411)
!15426 = !DILocation(line: 805, column: 21, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15428, file: !2602, line: 805, column: 8)
!15428 = distinct !DILexicalBlock(scope: !15429, file: !2602, line: 804, column: 16)
!15429 = distinct !DILexicalBlock(scope: !15411, file: !2602, line: 804, column: 7)
!15430 = !DILocation(line: 805, column: 31, scope: !15427)
!15431 = !DILocation(line: 805, column: 8, scope: !15428)
!15432 = !DILocation(line: 806, column: 5, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15427, file: !2602, line: 805, column: 40)
!15434 = !DILocation(line: 807, column: 4, scope: !15433)
!15435 = !DILocation(line: 808, column: 4, scope: !15428)
!15436 = !DILocation(line: 809, column: 4, scope: !15428)
!15437 = !DILocation(line: 810, column: 4, scope: !15428)
!15438 = !DILocation(line: 811, column: 3, scope: !15428)
!15439 = !DILocation(line: 0, scope: !14548, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 800, column: 2, scope: !15412)
!15441 = !DILocation(line: 0, scope: !14556, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15440)
!15443 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15442)
!15444 = !DILocation(line: 813, column: 1, scope: !15403)
!15445 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2602, file: !2602, line: 779, type: !14479, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15446)
!15446 = !{!15447}
!15447 = !DILocalVariable(name: "thread", arg: 1, scope: !15445, file: !2602, line: 779, type: !2497)
!15448 = !DILocation(line: 0, scope: !15445)
!15449 = !DILocation(line: 781, column: 2, scope: !15445)
!15450 = !DILocation(line: 782, column: 2, scope: !15445)
!15451 = !DILocation(line: 783, column: 15, scope: !15445)
!15452 = !DILocation(line: 783, column: 25, scope: !15445)
!15453 = !DILocation(line: 784, column: 1, scope: !15445)
!15454 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13026, file: !13026, line: 165, type: !14479, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15455)
!15455 = !{!15456}
!15456 = !DILocalVariable(name: "thread", arg: 1, scope: !15454, file: !13026, line: 165, type: !2497)
!15457 = !DILocation(line: 0, scope: !15454)
!15458 = !DILocation(line: 167, column: 15, scope: !15454)
!15459 = !DILocation(line: 167, column: 28, scope: !15454)
!15460 = !DILocation(line: 168, column: 1, scope: !15454)
!15461 = distinct !DISubprogram(name: "unready_thread", scope: !2602, file: !2602, line: 731, type: !14479, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15462)
!15462 = !{!15463}
!15463 = !DILocalVariable(name: "thread", arg: 1, scope: !15461, file: !2602, line: 731, type: !2497)
!15464 = !DILocation(line: 0, scope: !15461)
!15465 = !DILocation(line: 733, column: 6, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15461, file: !2602, line: 733, column: 6)
!15467 = !DILocation(line: 733, column: 6, scope: !15461)
!15468 = !DILocation(line: 0, scope: !14690, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 734, column: 3, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15466, file: !2602, line: 733, column: 34)
!15471 = !DILocation(line: 266, column: 15, scope: !14690, inlinedAt: !15469)
!15472 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !15469)
!15473 = !DILocation(line: 0, scope: !14698, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !15469)
!15475 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !15474)
!15476 = !DILocation(line: 735, column: 2, scope: !15470)
!15477 = !DILocation(line: 736, column: 25, scope: !15461)
!15478 = !DILocation(line: 736, column: 22, scope: !15461)
!15479 = !DILocation(line: 736, column: 2, scope: !15461)
!15480 = !DILocation(line: 737, column: 1, scope: !15461)
!15481 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13026, file: !13026, line: 160, type: !14479, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15482)
!15482 = !{!15483}
!15483 = !DILocalVariable(name: "thread", arg: 1, scope: !15481, file: !13026, line: 160, type: !2497)
!15484 = !DILocation(line: 0, scope: !15481)
!15485 = !DILocation(line: 162, column: 15, scope: !15481)
!15486 = !DILocation(line: 162, column: 28, scope: !15481)
!15487 = !DILocation(line: 163, column: 1, scope: !15481)
!15488 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2602, file: !2602, line: 786, type: !14479, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15489)
!15489 = !{!15490, !15491, !15493}
!15490 = !DILocalVariable(name: "thread", arg: 1, scope: !15488, file: !2602, line: 786, type: !2497)
!15491 = !DILocalVariable(name: "__i", scope: !15492, file: !2602, line: 788, type: !14513)
!15492 = distinct !DILexicalBlock(scope: !15488, file: !2602, line: 788, column: 2)
!15493 = !DILocalVariable(name: "__key", scope: !15492, file: !2602, line: 788, type: !14513)
!15494 = !DILocation(line: 0, scope: !15488)
!15495 = !DILocation(line: 0, scope: !15492)
!15496 = !DILocation(line: 0, scope: !14521, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 788, column: 2, scope: !15492)
!15498 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15497)
!15500 = !DILocation(line: 0, scope: !14530, inlinedAt: !15499)
!15501 = !DILocation(line: 789, column: 3, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15503, file: !2602, line: 788, column: 26)
!15503 = distinct !DILexicalBlock(scope: !15492, file: !2602, line: 788, column: 2)
!15504 = !DILocation(line: 0, scope: !14548, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 788, column: 2, scope: !15503)
!15506 = !DILocation(line: 0, scope: !14556, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15505)
!15508 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15507)
!15509 = !DILocation(line: 791, column: 1, scope: !15488)
!15510 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2602, file: !2602, line: 816, type: !15511, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15513)
!15511 = !DISubroutineType(types: !15512)
!15512 = !{!103, !121, !2528, !15312}
!15513 = !{!15514, !15515, !15516, !15517, !15518, !15520}
!15514 = !DILocalVariable(name: "key", arg: 1, scope: !15510, file: !2602, line: 816, type: !121)
!15515 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15510, file: !2602, line: 816, type: !2528)
!15516 = !DILocalVariable(name: "timeout", arg: 3, scope: !15510, file: !2602, line: 816, type: !15312)
!15517 = !DILocalVariable(name: "ret", scope: !15510, file: !2602, line: 828, type: !103)
!15518 = !DILocalVariable(name: "__i", scope: !15519, file: !2602, line: 829, type: !14513)
!15519 = distinct !DILexicalBlock(scope: !15510, file: !2602, line: 829, column: 2)
!15520 = !DILocalVariable(name: "__key", scope: !15519, file: !2602, line: 829, type: !14513)
!15521 = !DILocation(line: 0, scope: !15510)
!15522 = !DILocation(line: 823, column: 14, scope: !15510)
!15523 = !DILocation(line: 823, column: 2, scope: !15510)
!15524 = !DILocation(line: 826, column: 20, scope: !15510)
!15525 = !DILocation(line: 826, column: 18, scope: !15510)
!15526 = !DILocation(line: 828, column: 12, scope: !15510)
!15527 = !DILocation(line: 0, scope: !15519)
!15528 = !DILocation(line: 0, scope: !14521, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 829, column: 2, scope: !15519)
!15530 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15529)
!15532 = !DILocation(line: 0, scope: !14530, inlinedAt: !15531)
!15533 = !DILocation(line: 830, column: 7, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15535, file: !2602, line: 830, column: 7)
!15535 = distinct !DILexicalBlock(scope: !15536, file: !2602, line: 829, column: 26)
!15536 = distinct !DILexicalBlock(scope: !15519, file: !2602, line: 829, column: 2)
!15537 = !DILocation(line: 830, column: 26, scope: !15534)
!15538 = !DILocation(line: 830, column: 23, scope: !15534)
!15539 = !DILocation(line: 830, column: 7, scope: !15535)
!15540 = !DILocation(line: 831, column: 20, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15534, file: !2602, line: 830, column: 36)
!15542 = !DILocation(line: 832, column: 3, scope: !15541)
!15543 = !DILocation(line: 0, scope: !14548, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 829, column: 2, scope: !15536)
!15545 = !DILocation(line: 0, scope: !14556, inlinedAt: !15546)
!15546 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15544)
!15547 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15546)
!15548 = !DILocation(line: 834, column: 2, scope: !15510)
!15549 = distinct !DISubprogram(name: "z_pend_curr", scope: !2602, file: !2602, line: 840, type: !15550, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15552)
!15550 = !DISubroutineType(types: !15551)
!15551 = !{!103, !14524, !14513, !2528, !15312}
!15552 = !{!15553, !15554, !15555, !15556}
!15553 = !DILocalVariable(name: "lock", arg: 1, scope: !15549, file: !2602, line: 840, type: !14524)
!15554 = !DILocalVariable(name: "key", arg: 2, scope: !15549, file: !2602, line: 840, type: !14513)
!15555 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15549, file: !2602, line: 841, type: !2528)
!15556 = !DILocalVariable(name: "timeout", arg: 4, scope: !15549, file: !2602, line: 841, type: !15312)
!15557 = !DILocation(line: 0, scope: !15549)
!15558 = !DILocation(line: 844, column: 20, scope: !15549)
!15559 = !DILocation(line: 844, column: 18, scope: !15549)
!15560 = !DILocation(line: 0, scope: !14521, inlinedAt: !15561)
!15561 = distinct !DILocation(line: 856, column: 9, scope: !15549)
!15562 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15561)
!15564 = !DILocation(line: 0, scope: !14530, inlinedAt: !15563)
!15565 = !DILocation(line: 857, column: 14, scope: !15549)
!15566 = !DILocation(line: 857, column: 2, scope: !15549)
!15567 = !DILocation(line: 0, scope: !15132, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 859, column: 9, scope: !15549)
!15569 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !15568)
!15570 = !DILocation(line: 859, column: 2, scope: !15549)
!15571 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2602, file: !2602, line: 862, type: !15572, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15574)
!15572 = !DISubroutineType(types: !15573)
!15573 = !{!2497, !2528}
!15574 = !{!15575, !15576, !15577, !15579}
!15575 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15571, file: !2602, line: 862, type: !2528)
!15576 = !DILocalVariable(name: "thread", scope: !15571, file: !2602, line: 864, type: !2497)
!15577 = !DILocalVariable(name: "__i", scope: !15578, file: !2602, line: 866, type: !14513)
!15578 = distinct !DILexicalBlock(scope: !15571, file: !2602, line: 866, column: 2)
!15579 = !DILocalVariable(name: "__key", scope: !15578, file: !2602, line: 866, type: !14513)
!15580 = !DILocation(line: 0, scope: !15571)
!15581 = !DILocation(line: 0, scope: !15578)
!15582 = !DILocation(line: 0, scope: !14521, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 866, column: 2, scope: !15578)
!15584 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15583)
!15586 = !DILocation(line: 0, scope: !14530, inlinedAt: !15585)
!15587 = !DILocation(line: 867, column: 12, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15589, file: !2602, line: 866, column: 26)
!15589 = distinct !DILexicalBlock(scope: !15578, file: !2602, line: 866, column: 2)
!15590 = !DILocation(line: 869, column: 14, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15588, file: !2602, line: 869, column: 7)
!15592 = !DILocation(line: 869, column: 7, scope: !15588)
!15593 = !DILocation(line: 870, column: 4, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15591, file: !2602, line: 869, column: 23)
!15595 = !DILocation(line: 871, column: 3, scope: !15594)
!15596 = !DILocation(line: 0, scope: !14548, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 866, column: 2, scope: !15589)
!15598 = !DILocation(line: 0, scope: !14556, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15597)
!15600 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15599)
!15601 = !DILocation(line: 874, column: 2, scope: !15571)
!15602 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2602, file: !2602, line: 877, type: !15572, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15603)
!15603 = !{!15604, !15605, !15606, !15608}
!15604 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15602, file: !2602, line: 877, type: !2528)
!15605 = !DILocalVariable(name: "thread", scope: !15602, file: !2602, line: 879, type: !2497)
!15606 = !DILocalVariable(name: "__i", scope: !15607, file: !2602, line: 881, type: !14513)
!15607 = distinct !DILexicalBlock(scope: !15602, file: !2602, line: 881, column: 2)
!15608 = !DILocalVariable(name: "__key", scope: !15607, file: !2602, line: 881, type: !14513)
!15609 = !DILocation(line: 0, scope: !15602)
!15610 = !DILocation(line: 0, scope: !15607)
!15611 = !DILocation(line: 0, scope: !14521, inlinedAt: !15612)
!15612 = distinct !DILocation(line: 881, column: 2, scope: !15607)
!15613 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15612)
!15615 = !DILocation(line: 0, scope: !14530, inlinedAt: !15614)
!15616 = !DILocation(line: 882, column: 12, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15618, file: !2602, line: 881, column: 26)
!15618 = distinct !DILexicalBlock(scope: !15607, file: !2602, line: 881, column: 2)
!15619 = !DILocation(line: 884, column: 14, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15617, file: !2602, line: 884, column: 7)
!15621 = !DILocation(line: 884, column: 7, scope: !15617)
!15622 = !DILocation(line: 885, column: 4, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15620, file: !2602, line: 884, column: 23)
!15624 = !DILocation(line: 886, column: 10, scope: !15623)
!15625 = !DILocation(line: 887, column: 3, scope: !15623)
!15626 = !DILocation(line: 0, scope: !14548, inlinedAt: !15627)
!15627 = distinct !DILocation(line: 881, column: 2, scope: !15618)
!15628 = !DILocation(line: 0, scope: !14556, inlinedAt: !15629)
!15629 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15627)
!15630 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15629)
!15631 = !DILocation(line: 890, column: 2, scope: !15602)
!15632 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2602, file: !2602, line: 893, type: !14479, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15633)
!15633 = !{!15634}
!15634 = !DILocalVariable(name: "thread", arg: 1, scope: !15632, file: !2602, line: 893, type: !2497)
!15635 = !DILocation(line: 0, scope: !15632)
!15636 = !DILocation(line: 0, scope: !15488, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 895, column: 2, scope: !15632)
!15638 = !DILocation(line: 0, scope: !15492, inlinedAt: !15637)
!15639 = !DILocation(line: 0, scope: !14521, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 788, column: 2, scope: !15492, inlinedAt: !15637)
!15641 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15642)
!15642 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15640)
!15643 = !DILocation(line: 0, scope: !14530, inlinedAt: !15642)
!15644 = !DILocation(line: 789, column: 3, scope: !15502, inlinedAt: !15637)
!15645 = !DILocation(line: 0, scope: !14548, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 788, column: 2, scope: !15503, inlinedAt: !15637)
!15647 = !DILocation(line: 0, scope: !14556, inlinedAt: !15648)
!15648 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15646)
!15649 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15648)
!15650 = !DILocation(line: 896, column: 8, scope: !15632)
!15651 = !DILocation(line: 897, column: 1, scope: !15632)
!15652 = distinct !DISubprogram(name: "z_set_prio", scope: !2602, file: !2602, line: 902, type: !14841, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15653)
!15653 = !{!15654, !15655, !15656, !15657, !15659}
!15654 = !DILocalVariable(name: "thread", arg: 1, scope: !15652, file: !2602, line: 902, type: !2497)
!15655 = !DILocalVariable(name: "prio", arg: 2, scope: !15652, file: !2602, line: 902, type: !103)
!15656 = !DILocalVariable(name: "need_sched", scope: !15652, file: !2602, line: 904, type: !157)
!15657 = !DILocalVariable(name: "__i", scope: !15658, file: !2602, line: 906, type: !14513)
!15658 = distinct !DILexicalBlock(scope: !15652, file: !2602, line: 906, column: 2)
!15659 = !DILocalVariable(name: "__key", scope: !15658, file: !2602, line: 906, type: !14513)
!15660 = !DILocation(line: 0, scope: !15652)
!15661 = !DILocation(line: 0, scope: !15658)
!15662 = !DILocation(line: 0, scope: !14521, inlinedAt: !15663)
!15663 = distinct !DILocation(line: 906, column: 2, scope: !15658)
!15664 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15665)
!15665 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15663)
!15666 = !DILocation(line: 0, scope: !14530, inlinedAt: !15665)
!15667 = !DILocation(line: 907, column: 16, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15669, file: !2602, line: 906, column: 26)
!15669 = distinct !DILexicalBlock(scope: !15658, file: !2602, line: 906, column: 2)
!15670 = !DILocation(line: 909, column: 7, scope: !15668)
!15671 = !DILocation(line: 0, scope: !14690, inlinedAt: !15672)
!15672 = distinct !DILocation(line: 912, column: 5, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15674, file: !2602, line: 911, column: 63)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !2602, line: 911, column: 8)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !2602, line: 909, column: 19)
!15676 = distinct !DILexicalBlock(scope: !15668, file: !2602, line: 909, column: 7)
!15677 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !15672)
!15678 = !DILocation(line: 0, scope: !14698, inlinedAt: !15679)
!15679 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !15672)
!15680 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !15679)
!15681 = !DILocation(line: 913, column: 23, scope: !15673)
!15682 = !DILocation(line: 0, scope: !14707, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 914, column: 5, scope: !15673)
!15684 = !DILocation(line: 252, column: 28, scope: !14707, inlinedAt: !15683)
!15685 = !DILocation(line: 0, scope: !14714, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 254, column: 3, scope: !14718, inlinedAt: !15683)
!15687 = !DILocation(line: 0, scope: !14721, inlinedAt: !15688)
!15688 = distinct !DILocation(line: 229, column: 2, scope: !14714, inlinedAt: !15686)
!15689 = !DILocation(line: 188, column: 2, scope: !14731, inlinedAt: !15688)
!15690 = !DILocation(line: 188, column: 2, scope: !14733, inlinedAt: !15688)
!15691 = !DILocation(line: 0, scope: !14731, inlinedAt: !15688)
!15692 = !DILocation(line: 189, column: 7, scope: !14736, inlinedAt: !15688)
!15693 = !DILocation(line: 189, column: 35, scope: !14736, inlinedAt: !15688)
!15694 = !DILocation(line: 189, column: 7, scope: !14737, inlinedAt: !15688)
!15695 = !DILocation(line: 190, column: 4, scope: !14741, inlinedAt: !15688)
!15696 = !DILocation(line: 192, column: 4, scope: !14741, inlinedAt: !15688)
!15697 = distinct !{!15697, !15689, !15698}
!15698 = !DILocation(line: 194, column: 2, scope: !14731, inlinedAt: !15688)
!15699 = !DILocation(line: 196, column: 2, scope: !14721, inlinedAt: !15688)
!15700 = !DILocation(line: 197, column: 1, scope: !14721, inlinedAt: !15688)
!15701 = !DILocation(line: 918, column: 4, scope: !15675)
!15702 = !DILocation(line: 919, column: 3, scope: !15675)
!15703 = !DILocation(line: 920, column: 22, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15676, file: !2602, line: 919, column: 10)
!15705 = !DILocation(line: 0, scope: !14548, inlinedAt: !15706)
!15706 = distinct !DILocation(line: 906, column: 2, scope: !15669)
!15707 = !DILocation(line: 0, scope: !14556, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15706)
!15709 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15708)
!15710 = !DILocation(line: 926, column: 2, scope: !15652)
!15711 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2602, file: !2602, line: 929, type: !15712, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15714)
!15712 = !DISubroutineType(types: !15713)
!15713 = !{null, !2497, !103}
!15714 = !{!15715, !15716, !15717}
!15715 = !DILocalVariable(name: "thread", arg: 1, scope: !15711, file: !2602, line: 929, type: !2497)
!15716 = !DILocalVariable(name: "prio", arg: 2, scope: !15711, file: !2602, line: 929, type: !103)
!15717 = !DILocalVariable(name: "need_sched", scope: !15711, file: !2602, line: 931, type: !157)
!15718 = !DILocation(line: 0, scope: !15711)
!15719 = !DILocation(line: 931, column: 20, scope: !15711)
!15720 = !DILocation(line: 935, column: 17, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15711, file: !2602, line: 935, column: 6)
!15722 = !DILocation(line: 935, column: 20, scope: !15721)
!15723 = !DILocation(line: 935, column: 35, scope: !15721)
!15724 = !DILocation(line: 935, column: 48, scope: !15721)
!15725 = !DILocation(line: 935, column: 6, scope: !15711)
!15726 = !DILocation(line: 936, column: 3, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15721, file: !2602, line: 935, column: 55)
!15728 = !DILocation(line: 937, column: 2, scope: !15727)
!15729 = !DILocation(line: 938, column: 1, scope: !15711)
!15730 = distinct !DISubprogram(name: "k_sched_lock", scope: !2602, file: !2602, line: 987, type: !3339, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15731)
!15731 = !{!15732, !15734}
!15732 = !DILocalVariable(name: "__i", scope: !15733, file: !2602, line: 989, type: !14513)
!15733 = distinct !DILexicalBlock(scope: !15730, file: !2602, line: 989, column: 2)
!15734 = !DILocalVariable(name: "__key", scope: !15733, file: !2602, line: 989, type: !14513)
!15735 = !DILocation(line: 0, scope: !15733)
!15736 = !DILocation(line: 0, scope: !14521, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 989, column: 2, scope: !15733)
!15738 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15737)
!15740 = !DILocation(line: 0, scope: !14530, inlinedAt: !15739)
!15741 = !DILocation(line: 992, column: 3, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15743, file: !2602, line: 989, column: 26)
!15743 = distinct !DILexicalBlock(scope: !15733, file: !2602, line: 989, column: 2)
!15744 = !DILocation(line: 0, scope: !14548, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 989, column: 2, scope: !15743)
!15746 = !DILocation(line: 0, scope: !14556, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15745)
!15748 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15747)
!15749 = !DILocation(line: 994, column: 1, scope: !15730)
!15750 = distinct !DISubprogram(name: "z_sched_lock", scope: !13026, file: !13026, line: 251, type: !3339, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!15751 = !DILocation(line: 256, column: 4, scope: !15750)
!15752 = !DILocation(line: 256, column: 19, scope: !15750)
!15753 = !DILocation(line: 256, column: 2, scope: !15750)
!15754 = !DILocation(line: 258, column: 2, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15750, file: !13026, line: 258, column: 2)
!15756 = !{i64 2155563057}
!15757 = !DILocation(line: 259, column: 1, scope: !15750)
!15758 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2602, file: !2602, line: 996, type: !3339, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15759)
!15759 = !{!15760, !15762}
!15760 = !DILocalVariable(name: "__i", scope: !15761, file: !2602, line: 998, type: !14513)
!15761 = distinct !DILexicalBlock(scope: !15758, file: !2602, line: 998, column: 2)
!15762 = !DILocalVariable(name: "__key", scope: !15761, file: !2602, line: 998, type: !14513)
!15763 = !DILocation(line: 0, scope: !15761)
!15764 = !DILocation(line: 0, scope: !14521, inlinedAt: !15765)
!15765 = distinct !DILocation(line: 998, column: 2, scope: !15761)
!15766 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !15767)
!15767 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !15765)
!15768 = !DILocation(line: 0, scope: !14530, inlinedAt: !15767)
!15769 = !DILocation(line: 1002, column: 5, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2602, line: 998, column: 26)
!15771 = distinct !DILexicalBlock(scope: !15761, file: !2602, line: 998, column: 2)
!15772 = !DILocation(line: 1002, column: 20, scope: !15770)
!15773 = !DILocation(line: 1002, column: 3, scope: !15770)
!15774 = !DILocation(line: 1003, column: 3, scope: !15770)
!15775 = !DILocation(line: 0, scope: !14548, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 998, column: 2, scope: !15771)
!15777 = !DILocation(line: 0, scope: !14556, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !15776)
!15779 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !15778)
!15780 = !DILocation(line: 1011, column: 2, scope: !15758)
!15781 = !DILocation(line: 1012, column: 1, scope: !15758)
!15782 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2602, file: !2602, line: 1014, type: !14829, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!15783 = !DILocation(line: 1028, column: 25, scope: !15782)
!15784 = !DILocation(line: 1028, column: 2, scope: !15782)
!15785 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2602, file: !2602, line: 1155, type: !15786, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15788)
!15786 = !DISubroutineType(types: !15787)
!15787 = !{!157, !2526, !2526}
!15788 = !{!15789, !15790, !15791, !15792, !15793}
!15789 = !DILocalVariable(name: "a", arg: 1, scope: !15785, file: !2602, line: 1155, type: !2526)
!15790 = !DILocalVariable(name: "b", arg: 2, scope: !15785, file: !2602, line: 1155, type: !2526)
!15791 = !DILocalVariable(name: "thread_a", scope: !15785, file: !2602, line: 1157, type: !2497)
!15792 = !DILocalVariable(name: "thread_b", scope: !15785, file: !2602, line: 1157, type: !2497)
!15793 = !DILocalVariable(name: "cmp", scope: !15785, file: !2602, line: 1158, type: !756)
!15794 = !DILocation(line: 0, scope: !15785)
!15795 = !DILocation(line: 1160, column: 13, scope: !15785)
!15796 = !DILocation(line: 1161, column: 13, scope: !15785)
!15797 = !DILocation(line: 1163, column: 8, scope: !15785)
!15798 = !DILocation(line: 1165, column: 10, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15785, file: !2602, line: 1165, column: 6)
!15800 = !DILocation(line: 1165, column: 6, scope: !15785)
!15801 = !DILocation(line: 1167, column: 17, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !2602, line: 1167, column: 13)
!15803 = !DILocation(line: 1167, column: 13, scope: !15799)
!15804 = !DILocation(line: 1170, column: 25, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15802, file: !2602, line: 1169, column: 9)
!15806 = !DILocation(line: 1170, column: 52, scope: !15805)
!15807 = !DILocation(line: 1170, column: 35, scope: !15805)
!15808 = !DILocation(line: 1170, column: 3, scope: !15805)
!15809 = !DILocation(line: 0, scope: !15799)
!15810 = !DILocation(line: 1173, column: 1, scope: !15785)
!15811 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2602, file: !2602, line: 1175, type: !15812, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15827)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{null, !15814, !2497}
!15814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15815, size: 32)
!15815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15816, line: 37, size: 128, elements: !15817)
!15816 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15817 = !{!15818, !15826}
!15818 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15815, file: !15816, line: 38, baseType: !15819, size: 96)
!15819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !15820)
!15820 = !{!15821, !15822, !15825}
!15821 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15819, file: !404, line: 84, baseType: !2526, size: 32)
!15822 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15819, file: !404, line: 85, baseType: !15823, size: 32, offset: 32)
!15823 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !15824)
!15824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15786, size: 32)
!15825 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15819, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!15826 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15815, file: !15816, line: 39, baseType: !103, size: 32, offset: 96)
!15827 = !{!15828, !15829, !15830, !15831, !15840}
!15828 = !DILocalVariable(name: "pq", arg: 1, scope: !15811, file: !2602, line: 1175, type: !15814)
!15829 = !DILocalVariable(name: "thread", arg: 2, scope: !15811, file: !2602, line: 1175, type: !2497)
!15830 = !DILocalVariable(name: "t", scope: !15811, file: !2602, line: 1177, type: !2497)
!15831 = !DILocalVariable(name: "__f", scope: !15832, file: !2602, line: 1190, type: !15835)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !2602, line: 1190, column: 3)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !2602, line: 1189, column: 27)
!15834 = distinct !DILexicalBlock(scope: !15811, file: !2602, line: 1189, column: 6)
!15835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !15836)
!15836 = !{!15837, !15838, !15839}
!15837 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15835, file: !404, line: 156, baseType: !2597, size: 32)
!15838 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15835, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!15839 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15835, file: !404, line: 158, baseType: !756, size: 32, offset: 64)
!15840 = !DILocalVariable(name: "n", scope: !15841, file: !2602, line: 1190, type: !2526)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !2602, line: 1190, column: 3)
!15842 = distinct !DILexicalBlock(scope: !15832, file: !2602, line: 1190, column: 3)
!15843 = !DILocation(line: 0, scope: !15811)
!15844 = !DILocation(line: 1181, column: 31, scope: !15811)
!15845 = !DILocation(line: 1181, column: 45, scope: !15811)
!15846 = !DILocation(line: 1181, column: 15, scope: !15811)
!15847 = !DILocation(line: 1181, column: 25, scope: !15811)
!15848 = !DILocation(line: 1189, column: 11, scope: !15834)
!15849 = !DILocation(line: 1189, column: 7, scope: !15834)
!15850 = !DILocation(line: 1189, column: 6, scope: !15811)
!15851 = !DILocation(line: 1190, column: 3, scope: !15832)
!15852 = !DILocation(line: 1190, column: 3, scope: !15841)
!15853 = !DILocation(line: 0, scope: !15841)
!15854 = !DILocation(line: 1190, column: 3, scope: !15842)
!15855 = !DILocation(line: 1193, column: 2, scope: !15833)
!15856 = !DILocation(line: 1191, column: 42, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15842, file: !2602, line: 1190, column: 54)
!15858 = !DILocation(line: 1191, column: 12, scope: !15857)
!15859 = !DILocation(line: 1191, column: 22, scope: !15857)
!15860 = distinct !{!15860, !15851, !15861}
!15861 = !DILocation(line: 1192, column: 3, scope: !15832)
!15862 = !DILocation(line: 1195, column: 17, scope: !15811)
!15863 = !DILocation(line: 1195, column: 37, scope: !15811)
!15864 = !DILocation(line: 1195, column: 2, scope: !15811)
!15865 = !DILocation(line: 1196, column: 1, scope: !15811)
!15866 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !15867, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!2526, !15869, !15870}
!15869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15819, size: 32)
!15870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15835, size: 32)
!15871 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !15872, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15872 = !DISubroutineType(types: !15873)
!15873 = !{null, !15869, !2526}
!15874 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2602, file: !2602, line: 1198, type: !15812, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15875)
!15875 = !{!15876, !15877}
!15876 = !DILocalVariable(name: "pq", arg: 1, scope: !15874, file: !2602, line: 1198, type: !15814)
!15877 = !DILocalVariable(name: "thread", arg: 2, scope: !15874, file: !2602, line: 1198, type: !2497)
!15878 = !DILocation(line: 0, scope: !15874)
!15879 = !DILocation(line: 1202, column: 17, scope: !15874)
!15880 = !DILocation(line: 1202, column: 37, scope: !15874)
!15881 = !DILocation(line: 1202, column: 2, scope: !15874)
!15882 = !DILocation(line: 1204, column: 16, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15874, file: !2602, line: 1204, column: 6)
!15884 = !DILocation(line: 1204, column: 7, scope: !15883)
!15885 = !DILocation(line: 1204, column: 6, scope: !15874)
!15886 = !DILocation(line: 1205, column: 7, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15883, file: !2602, line: 1204, column: 22)
!15888 = !DILocation(line: 1205, column: 22, scope: !15887)
!15889 = !DILocation(line: 1206, column: 2, scope: !15887)
!15890 = !DILocation(line: 1207, column: 1, scope: !15874)
!15891 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !15872, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15892 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2602, file: !2602, line: 1209, type: !15893, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15895)
!15893 = !DISubroutineType(types: !15894)
!15894 = !{!2497, !15814}
!15895 = !{!15896, !15897, !15898}
!15896 = !DILocalVariable(name: "pq", arg: 1, scope: !15892, file: !2602, line: 1209, type: !15814)
!15897 = !DILocalVariable(name: "thread", scope: !15892, file: !2602, line: 1211, type: !2497)
!15898 = !DILocalVariable(name: "n", scope: !15892, file: !2602, line: 1212, type: !2526)
!15899 = !DILocation(line: 0, scope: !15892)
!15900 = !DILocation(line: 1212, column: 37, scope: !15892)
!15901 = !DILocation(line: 1212, column: 21, scope: !15892)
!15902 = !DILocation(line: 1217, column: 2, scope: !15892)
!15903 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !15904, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15906)
!15904 = !DISubroutineType(types: !15905)
!15905 = !{!2526, !15869}
!15906 = !{!15907}
!15907 = !DILocalVariable(name: "tree", arg: 1, scope: !15903, file: !404, line: 115, type: !15869)
!15908 = !DILocation(line: 0, scope: !15903)
!15909 = !DILocation(line: 117, column: 9, scope: !15903)
!15910 = !DILocation(line: 117, column: 2, scope: !15903)
!15911 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !15912, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15912 = !DISubroutineType(types: !15913)
!15913 = !{!2526, !15869, !154}
!15914 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2602, file: !2602, line: 1246, type: !15915, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15925)
!15915 = !DISubroutineType(types: !15916)
!15916 = !{!2497, !15917}
!15917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15918, size: 32)
!15918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15816, line: 53, size: 2080, elements: !15919)
!15919 = !{!15920, !15924}
!15920 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15918, file: !15816, line: 54, baseType: !15921, size: 2048)
!15921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2533, size: 2048, elements: !15922)
!15922 = !{!15923}
!15923 = !DISubrange(count: 32)
!15924 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15918, file: !15816, line: 55, baseType: !32, size: 32, offset: 2048)
!15925 = !{!15926, !15927, !15928, !15929}
!15926 = !DILocalVariable(name: "pq", arg: 1, scope: !15914, file: !2602, line: 1246, type: !15917)
!15927 = !DILocalVariable(name: "thread", scope: !15914, file: !2602, line: 1252, type: !2497)
!15928 = !DILocalVariable(name: "l", scope: !15914, file: !2602, line: 1253, type: !14724)
!15929 = !DILocalVariable(name: "n", scope: !15914, file: !2602, line: 1254, type: !2598)
!15930 = !DILocation(line: 0, scope: !15914)
!15931 = !DILocation(line: 1248, column: 11, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15914, file: !2602, line: 1248, column: 6)
!15933 = !DILocation(line: 1248, column: 7, scope: !15932)
!15934 = !DILocation(line: 1248, column: 6, scope: !15914)
!15935 = !DILocation(line: 1253, column: 31, scope: !15914)
!15936 = !DILocation(line: 1253, column: 20, scope: !15914)
!15937 = !DILocation(line: 1254, column: 19, scope: !15914)
!15938 = !DILocation(line: 1260, column: 1, scope: !15914)
!15939 = distinct !DISubprogram(name: "z_unpend_all", scope: !2602, file: !2602, line: 1262, type: !15940, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15942)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{!103, !2528}
!15942 = !{!15943, !15944, !15945}
!15943 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15939, file: !2602, line: 1262, type: !2528)
!15944 = !DILocalVariable(name: "need_sched", scope: !15939, file: !2602, line: 1264, type: !103)
!15945 = !DILocalVariable(name: "thread", scope: !15939, file: !2602, line: 1265, type: !2497)
!15946 = !DILocation(line: 0, scope: !15939)
!15947 = !DILocation(line: 1267, column: 19, scope: !15939)
!15948 = !DILocation(line: 1267, column: 41, scope: !15939)
!15949 = !DILocation(line: 1267, column: 2, scope: !15939)
!15950 = !DILocation(line: 1268, column: 3, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15939, file: !2602, line: 1267, column: 50)
!15952 = !DILocation(line: 1269, column: 3, scope: !15951)
!15953 = distinct !{!15953, !15949, !15954}
!15954 = !DILocation(line: 1271, column: 2, scope: !15939)
!15955 = !DILocation(line: 1273, column: 2, scope: !15939)
!15956 = distinct !DISubprogram(name: "z_waitq_head", scope: !13350, file: !13350, line: 52, type: !15572, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15957)
!15957 = !{!15958}
!15958 = !DILocalVariable(name: "w", arg: 1, scope: !15956, file: !13350, line: 52, type: !2528)
!15959 = !DILocation(line: 0, scope: !15956)
!15960 = !DILocation(line: 54, column: 52, scope: !15956)
!15961 = !DILocation(line: 54, column: 28, scope: !15956)
!15962 = !DILocation(line: 54, column: 9, scope: !15956)
!15963 = !DILocation(line: 54, column: 2, scope: !15956)
!15964 = distinct !DISubprogram(name: "init_ready_q", scope: !2602, file: !2602, line: 1276, type: !15965, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15972)
!15965 = !DISubroutineType(types: !15966)
!15966 = !{null, !15967}
!15967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15968, size: 32)
!15968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !15969)
!15969 = !{!15970, !15971}
!15970 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15968, file: !320, line: 86, baseType: !2497, size: 32)
!15971 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15968, file: !320, line: 90, baseType: !2533, size: 64, offset: 32)
!15972 = !{!15973}
!15973 = !DILocalVariable(name: "rq", arg: 1, scope: !15964, file: !2602, line: 1276, type: !15967)
!15974 = !DILocation(line: 0, scope: !15964)
!15975 = !DILocation(line: 1289, column: 22, scope: !15964)
!15976 = !DILocation(line: 1289, column: 2, scope: !15964)
!15977 = !DILocation(line: 1291, column: 1, scope: !15964)
!15978 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !15979, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15981)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{null, !14724}
!15981 = !{!15982}
!15982 = !DILocalVariable(name: "list", arg: 1, scope: !15978, file: !325, line: 197, type: !14724)
!15983 = !DILocation(line: 0, scope: !15978)
!15984 = !DILocation(line: 199, column: 8, scope: !15978)
!15985 = !DILocation(line: 199, column: 13, scope: !15978)
!15986 = !DILocation(line: 200, column: 8, scope: !15978)
!15987 = !DILocation(line: 200, column: 13, scope: !15978)
!15988 = !DILocation(line: 201, column: 1, scope: !15978)
!15989 = distinct !DISubprogram(name: "z_sched_init", scope: !2602, file: !2602, line: 1293, type: !3339, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!15990 = !DILocation(line: 1302, column: 2, scope: !15989)
!15991 = !DILocation(line: 1306, column: 2, scope: !15989)
!15992 = !DILocation(line: 1309, column: 1, scope: !15989)
!15993 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2602, file: !2602, line: 1311, type: !15994, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !15997)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{!103, !15996}
!15996 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2497)
!15997 = !{!15998}
!15998 = !DILocalVariable(name: "thread", arg: 1, scope: !15993, file: !2602, line: 1311, type: !15996)
!15999 = !DILocation(line: 0, scope: !15993)
!16000 = !DILocation(line: 1313, column: 22, scope: !15993)
!16001 = !DILocation(line: 1313, column: 9, scope: !15993)
!16002 = !DILocation(line: 1313, column: 2, scope: !15993)
!16003 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2602, file: !2602, line: 1325, type: !16004, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16006)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{null, !15996, !103}
!16006 = !{!16007, !16008, !16009}
!16007 = !DILocalVariable(name: "thread", arg: 1, scope: !16003, file: !2602, line: 1325, type: !15996)
!16008 = !DILocalVariable(name: "prio", arg: 2, scope: !16003, file: !2602, line: 1325, type: !103)
!16009 = !DILocalVariable(name: "th", scope: !16003, file: !2602, line: 1334, type: !2497)
!16010 = !DILocation(line: 0, scope: !16003)
!16011 = !DILocation(line: 1336, column: 2, scope: !16003)
!16012 = !DILocation(line: 1337, column: 1, scope: !16003)
!16013 = distinct !DISubprogram(name: "k_can_yield", scope: !2602, file: !2602, line: 1384, type: !6906, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!16014 = !DILocation(line: 1386, column: 11, scope: !16013)
!16015 = !DILocation(line: 1386, column: 29, scope: !16013)
!16016 = !DILocation(line: 1386, column: 32, scope: !16013)
!16017 = !DILocation(line: 1386, column: 46, scope: !16013)
!16018 = !DILocation(line: 1387, column: 28, scope: !16013)
!16019 = !DILocation(line: 1387, column: 4, scope: !16013)
!16020 = !DILocation(line: 1386, column: 2, scope: !16013)
!16021 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6906, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!16022 = !DILocation(line: 993, column: 10, scope: !16021)
!16023 = !DILocation(line: 993, column: 2, scope: !16021)
!16024 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2602, file: !2602, line: 1390, type: !3339, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16025)
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "key", scope: !16024, file: !2602, line: 1396, type: !14513)
!16027 = !DILocation(line: 0, scope: !14521, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 1396, column: 25, scope: !16024)
!16029 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !16028)
!16031 = !DILocation(line: 0, scope: !14530, inlinedAt: !16030)
!16032 = !DILocation(line: 0, scope: !16024)
!16033 = !DILocation(line: 1400, column: 18, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !2602, line: 1399, column: 36)
!16035 = distinct !DILexicalBlock(scope: !16024, file: !2602, line: 1398, column: 6)
!16036 = !DILocation(line: 0, scope: !14690, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 1400, column: 3, scope: !16034)
!16038 = !DILocation(line: 266, column: 15, scope: !14690, inlinedAt: !16037)
!16039 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !16037)
!16040 = !DILocation(line: 0, scope: !14698, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !16037)
!16042 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !16041)
!16043 = !DILocation(line: 1402, column: 15, scope: !16024)
!16044 = !DILocation(line: 0, scope: !14707, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 1402, column: 2, scope: !16024)
!16046 = !DILocation(line: 252, column: 15, scope: !14707, inlinedAt: !16045)
!16047 = !DILocation(line: 252, column: 28, scope: !14707, inlinedAt: !16045)
!16048 = !DILocation(line: 0, scope: !14714, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 254, column: 3, scope: !14718, inlinedAt: !16045)
!16050 = !DILocation(line: 0, scope: !14721, inlinedAt: !16051)
!16051 = distinct !DILocation(line: 229, column: 2, scope: !14714, inlinedAt: !16049)
!16052 = !DILocation(line: 188, column: 2, scope: !14731, inlinedAt: !16051)
!16053 = !DILocation(line: 188, column: 2, scope: !14733, inlinedAt: !16051)
!16054 = !DILocation(line: 0, scope: !14731, inlinedAt: !16051)
!16055 = !DILocation(line: 189, column: 7, scope: !14736, inlinedAt: !16051)
!16056 = !DILocation(line: 189, column: 35, scope: !14736, inlinedAt: !16051)
!16057 = !DILocation(line: 189, column: 7, scope: !14737, inlinedAt: !16051)
!16058 = !DILocation(line: 191, column: 21, scope: !14741, inlinedAt: !16051)
!16059 = !DILocation(line: 190, column: 4, scope: !14741, inlinedAt: !16051)
!16060 = !DILocation(line: 192, column: 4, scope: !14741, inlinedAt: !16051)
!16061 = distinct !{!16061, !16052, !16062}
!16062 = !DILocation(line: 194, column: 2, scope: !14731, inlinedAt: !16051)
!16063 = !DILocation(line: 196, column: 37, scope: !14721, inlinedAt: !16051)
!16064 = !DILocation(line: 196, column: 2, scope: !14721, inlinedAt: !16051)
!16065 = !DILocation(line: 197, column: 1, scope: !14721, inlinedAt: !16051)
!16066 = !DILocation(line: 1403, column: 2, scope: !16024)
!16067 = !DILocation(line: 0, scope: !15132, inlinedAt: !16068)
!16068 = distinct !DILocation(line: 1404, column: 2, scope: !16024)
!16069 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !16068)
!16070 = !DILocation(line: 1405, column: 1, scope: !16024)
!16071 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2602, file: !2602, line: 1459, type: !16072, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16074)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{!756, !15312}
!16074 = !{!16075, !16076, !16077}
!16075 = !DILocalVariable(name: "timeout", arg: 1, scope: !16071, file: !2602, line: 1459, type: !15312)
!16076 = !DILocalVariable(name: "ticks", scope: !16071, file: !2602, line: 1461, type: !200)
!16077 = !DILocalVariable(name: "ret", scope: !16071, file: !2602, line: 1480, type: !756)
!16078 = !DILocation(line: 0, scope: !16071)
!16079 = !DILocation(line: 1468, column: 6, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16071, file: !2602, line: 1468, column: 6)
!16081 = !DILocation(line: 1468, column: 6, scope: !16071)
!16082 = !DILocation(line: 1469, column: 20, scope: !16083)
!16083 = distinct !DILexicalBlock(scope: !16080, file: !2602, line: 1468, column: 40)
!16084 = !DILocation(line: 1469, column: 3, scope: !16083)
!16085 = !DILocation(line: 1473, column: 3, scope: !16083)
!16086 = !DILocation(line: 1478, column: 10, scope: !16071)
!16087 = !DILocation(line: 1480, column: 16, scope: !16071)
!16088 = !DILocation(line: 1485, column: 1, scope: !16071)
!16089 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3775, file: !3775, line: 310, type: !16090, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16092)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{null, !15996}
!16092 = !{!16093}
!16093 = !DILocalVariable(name: "thread", arg: 1, scope: !16089, file: !3775, line: 310, type: !15996)
!16094 = !DILocation(line: 0, scope: !16089)
!16095 = !DILocation(line: 319, column: 2, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16089, file: !3775, line: 319, column: 2)
!16097 = !{i64 2155481446}
!16098 = !DILocation(line: 320, column: 2, scope: !16089)
!16099 = !DILocation(line: 321, column: 1, scope: !16089)
!16100 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2602, file: !2602, line: 1415, type: !16101, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16103)
!16101 = !DISubroutineType(types: !16102)
!16102 = !{!756, !200}
!16103 = !{!16104, !16105, !16106, !16107}
!16104 = !DILocalVariable(name: "ticks", arg: 1, scope: !16100, file: !2602, line: 1415, type: !200)
!16105 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16100, file: !2602, line: 1418, type: !121)
!16106 = !DILocalVariable(name: "timeout", scope: !16100, file: !2602, line: 1430, type: !15312)
!16107 = !DILocalVariable(name: "key", scope: !16100, file: !2602, line: 1437, type: !14513)
!16108 = !DILocation(line: 0, scope: !16100)
!16109 = !DILocation(line: 1425, column: 12, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16100, file: !2602, line: 1425, column: 6)
!16111 = !DILocation(line: 1425, column: 6, scope: !16100)
!16112 = !DILocation(line: 1426, column: 3, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16110, file: !2602, line: 1425, column: 18)
!16114 = !DILocation(line: 1427, column: 3, scope: !16113)
!16115 = !DILocation(line: 1431, column: 24, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16100, file: !2602, line: 1431, column: 6)
!16117 = !DILocation(line: 1431, column: 6, scope: !16100)
!16118 = !DILocation(line: 1432, column: 35, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16116, file: !2602, line: 1431, column: 30)
!16120 = !DILocation(line: 1432, column: 27, scope: !16119)
!16121 = !DILocation(line: 1433, column: 2, scope: !16119)
!16122 = !DILocation(line: 1434, column: 27, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16116, file: !2602, line: 1433, column: 9)
!16124 = !DILocation(line: 0, scope: !16116)
!16125 = !DILocation(line: 0, scope: !14521, inlinedAt: !16126)
!16126 = distinct !DILocation(line: 1437, column: 25, scope: !16100)
!16127 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !16126)
!16129 = !DILocation(line: 0, scope: !14530, inlinedAt: !16128)
!16130 = !DILocation(line: 1440, column: 20, scope: !16100)
!16131 = !DILocation(line: 1440, column: 18, scope: !16100)
!16132 = !DILocation(line: 1442, column: 2, scope: !16100)
!16133 = !DILocation(line: 1443, column: 23, scope: !16100)
!16134 = !DILocation(line: 1443, column: 2, scope: !16100)
!16135 = !DILocation(line: 1444, column: 29, scope: !16100)
!16136 = !DILocation(line: 1444, column: 2, scope: !16100)
!16137 = !DILocation(line: 0, scope: !15132, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 1446, column: 8, scope: !16100)
!16139 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !16138)
!16140 = !DILocation(line: 1450, column: 10, scope: !16100)
!16141 = !DILocation(line: 1450, column: 45, scope: !16100)
!16142 = !DILocation(line: 1450, column: 43, scope: !16100)
!16143 = !DILocation(line: 1451, column: 6, scope: !16100)
!16144 = !DILocation(line: 1457, column: 1, scope: !16100)
!16145 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13585, file: !13585, line: 1103, type: !13586, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16146)
!16146 = !{!16147}
!16147 = !DILocalVariable(name: "t", arg: 1, scope: !16145, file: !13585, line: 1103, type: !1652)
!16148 = !DILocation(line: 0, scope: !16145)
!16149 = !DILocation(line: 0, scope: !14568, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 1106, column: 9, scope: !16145)
!16151 = !DILocation(line: 139, column: 13, scope: !16152, inlinedAt: !16150)
!16152 = distinct !DILexicalBlock(scope: !16153, file: !13585, line: 138, column: 10)
!16153 = distinct !DILexicalBlock(scope: !16154, file: !13585, line: 136, column: 7)
!16154 = distinct !DILexicalBlock(scope: !14589, file: !13585, line: 134, column: 17)
!16155 = !DILocation(line: 1106, column: 2, scope: !16145)
!16156 = distinct !DISubprogram(name: "k_yield", scope: !3775, file: !3775, line: 140, type: !3339, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!16157 = !DILocation(line: 148, column: 2, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16156, file: !3775, line: 148, column: 2)
!16159 = !{i64 2155480766}
!16160 = !DILocation(line: 149, column: 2, scope: !16156)
!16161 = !DILocation(line: 150, column: 1, scope: !16156)
!16162 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2602, file: !2602, line: 1495, type: !16163, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16165)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{!756, !103}
!16165 = !{!16166, !16167}
!16166 = !DILocalVariable(name: "us", arg: 1, scope: !16162, file: !2602, line: 1495, type: !103)
!16167 = !DILocalVariable(name: "ticks", scope: !16162, file: !2602, line: 1497, type: !756)
!16168 = !DILocation(line: 0, scope: !16162)
!16169 = !DILocation(line: 1501, column: 31, scope: !16162)
!16170 = !DILocation(line: 1501, column: 10, scope: !16162)
!16171 = !DILocation(line: 1502, column: 23, scope: !16162)
!16172 = !DILocation(line: 1502, column: 10, scope: !16162)
!16173 = !DILocation(line: 1506, column: 31, scope: !16162)
!16174 = !DILocation(line: 1506, column: 9, scope: !16162)
!16175 = !DILocation(line: 1506, column: 2, scope: !16162)
!16176 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13585, file: !13585, line: 571, type: !13586, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16177)
!16177 = !{!16178}
!16178 = !DILocalVariable(name: "t", arg: 1, scope: !16176, file: !13585, line: 571, type: !1652)
!16179 = !DILocation(line: 0, scope: !16176)
!16180 = !DILocation(line: 0, scope: !14568, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 574, column: 9, scope: !16176)
!16182 = !DILocation(line: 135, column: 5, scope: !16154, inlinedAt: !16181)
!16183 = !DILocation(line: 139, column: 13, scope: !16152, inlinedAt: !16181)
!16184 = !DILocation(line: 574, column: 2, scope: !16176)
!16185 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13585, file: !13585, line: 1187, type: !13586, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16186)
!16186 = !{!16187}
!16187 = !DILocalVariable(name: "t", arg: 1, scope: !16185, file: !13585, line: 1187, type: !1652)
!16188 = !DILocation(line: 0, scope: !16185)
!16189 = !DILocation(line: 0, scope: !14568, inlinedAt: !16190)
!16190 = distinct !DILocation(line: 1190, column: 9, scope: !16185)
!16191 = !DILocation(line: 145, column: 13, scope: !16192, inlinedAt: !16190)
!16192 = distinct !DILexicalBlock(scope: !14586, file: !13585, line: 144, column: 10)
!16193 = !DILocation(line: 1190, column: 2, scope: !16185)
!16194 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2602, file: !2602, line: 1517, type: !16090, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16195)
!16195 = !{!16196}
!16196 = !DILocalVariable(name: "thread", arg: 1, scope: !16194, file: !2602, line: 1517, type: !15996)
!16197 = !DILocation(line: 0, scope: !16194)
!16198 = !DILocation(line: 1521, column: 6, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16194, file: !2602, line: 1521, column: 6)
!16200 = !DILocation(line: 1521, column: 6, scope: !16194)
!16201 = !DILocation(line: 1525, column: 6, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16194, file: !2602, line: 1525, column: 6)
!16203 = !DILocation(line: 1525, column: 37, scope: !16202)
!16204 = !DILocation(line: 1525, column: 6, scope: !16194)
!16205 = !DILocation(line: 1527, column: 20, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16207, file: !2602, line: 1527, column: 7)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !2602, line: 1525, column: 42)
!16208 = !DILocation(line: 1527, column: 33, scope: !16206)
!16209 = !DILocation(line: 1527, column: 7, scope: !16207)
!16210 = !DILocation(line: 1532, column: 2, scope: !16194)
!16211 = !DILocation(line: 1533, column: 2, scope: !16194)
!16212 = !DILocation(line: 1031, column: 3, scope: !15165, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 48, column: 10, scope: !15169, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 1537, column: 7, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16194, file: !2602, line: 1537, column: 6)
!16216 = !DILocation(line: 0, scope: !15165, inlinedAt: !16213)
!16217 = !DILocation(line: 48, column: 9, scope: !15169, inlinedAt: !16214)
!16218 = !DILocation(line: 1537, column: 6, scope: !16194)
!16219 = !DILocation(line: 1538, column: 3, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16215, file: !2602, line: 1537, column: 25)
!16221 = !DILocation(line: 1539, column: 2, scope: !16220)
!16222 = !DILocation(line: 1540, column: 1, scope: !16194)
!16223 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13026, file: !13026, line: 101, type: !14639, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16224)
!16224 = !{!16225}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16223, file: !13026, line: 101, type: !2497)
!16226 = !DILocation(line: 0, scope: !16223)
!16227 = !DILocation(line: 103, column: 23, scope: !16223)
!16228 = !DILocation(line: 103, column: 36, scope: !16223)
!16229 = !DILocation(line: 103, column: 55, scope: !16223)
!16230 = !DILocation(line: 103, column: 2, scope: !16223)
!16231 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2602, file: !2602, line: 1567, type: !16232, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16234)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{!15996}
!16234 = !{!16235}
!16235 = !DILocalVariable(name: "ret", scope: !16231, file: !2602, line: 1577, type: !15996)
!16236 = !DILocation(line: 1577, column: 30, scope: !16231)
!16237 = !DILocation(line: 0, scope: !16231)
!16238 = !DILocation(line: 1582, column: 2, scope: !16231)
!16239 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2602, file: !2602, line: 1593, type: !7180, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !317)
!16240 = !DILocation(line: 1031, column: 3, scope: !15165, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 48, column: 10, scope: !15169, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 1595, column: 10, scope: !16239)
!16243 = !DILocation(line: 0, scope: !15165, inlinedAt: !16241)
!16244 = !DILocation(line: 48, column: 9, scope: !15169, inlinedAt: !16242)
!16245 = !DILocation(line: 1595, column: 27, scope: !16239)
!16246 = !DILocation(line: 1595, column: 41, scope: !16239)
!16247 = !DILocation(line: 1595, column: 30, scope: !16239)
!16248 = !DILocation(line: 1595, column: 2, scope: !16239)
!16249 = distinct !DISubprogram(name: "z_thread_abort", scope: !2602, file: !2602, line: 1725, type: !14479, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16250)
!16250 = !{!16251, !16252}
!16251 = !DILocalVariable(name: "thread", arg: 1, scope: !16249, file: !2602, line: 1725, type: !2497)
!16252 = !DILocalVariable(name: "key", scope: !16249, file: !2602, line: 1727, type: !14513)
!16253 = !DILocation(line: 0, scope: !16249)
!16254 = !DILocation(line: 0, scope: !14521, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 1727, column: 25, scope: !16249)
!16256 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !16255)
!16258 = !DILocation(line: 0, scope: !14530, inlinedAt: !16257)
!16259 = !DILocation(line: 1729, column: 20, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16249, file: !2602, line: 1729, column: 6)
!16261 = !DILocation(line: 1729, column: 33, scope: !16260)
!16262 = !DILocation(line: 1729, column: 48, scope: !16260)
!16263 = !DILocation(line: 1729, column: 6, scope: !16249)
!16264 = !DILocation(line: 0, scope: !14548, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 1730, column: 3, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16260, file: !2602, line: 1729, column: 54)
!16267 = !DILocation(line: 0, scope: !14556, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !16265)
!16269 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !16268)
!16270 = !DILocation(line: 1732, column: 3, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16266, file: !2602, line: 1732, column: 3)
!16272 = !{i64 2156218176, i64 2156218192, i64 2156218218, i64 2156218246, i64 2156218266}
!16273 = !DILocation(line: 1733, column: 3, scope: !16266)
!16274 = !DILocation(line: 1736, column: 20, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16249, file: !2602, line: 1736, column: 6)
!16276 = !DILocation(line: 1736, column: 33, scope: !16275)
!16277 = !DILocation(line: 1736, column: 49, scope: !16275)
!16278 = !DILocation(line: 1736, column: 6, scope: !16249)
!16279 = !DILocation(line: 0, scope: !14548, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 1737, column: 3, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16275, file: !2602, line: 1736, column: 56)
!16282 = !DILocation(line: 0, scope: !14556, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !16280)
!16284 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !16283)
!16285 = !DILocation(line: 1738, column: 3, scope: !16281)
!16286 = !DILocation(line: 1775, column: 2, scope: !16249)
!16287 = !DILocation(line: 1776, column: 16, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16249, file: !2602, line: 1776, column: 6)
!16289 = !DILocation(line: 1776, column: 13, scope: !16288)
!16290 = !DILocation(line: 1776, column: 25, scope: !16288)
!16291 = !DILocation(line: 1031, column: 3, scope: !15165, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 48, column: 10, scope: !15169, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1776, column: 29, scope: !16288)
!16294 = !DILocation(line: 0, scope: !15165, inlinedAt: !16292)
!16295 = !DILocation(line: 48, column: 9, scope: !15169, inlinedAt: !16293)
!16296 = !DILocation(line: 1776, column: 6, scope: !16249)
!16297 = !DILocation(line: 0, scope: !15132, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 1777, column: 3, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16288, file: !2602, line: 1776, column: 47)
!16300 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !16298)
!16301 = !DILocation(line: 1779, column: 2, scope: !16299)
!16302 = !DILocation(line: 0, scope: !14548, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 1780, column: 2, scope: !16249)
!16304 = !DILocation(line: 0, scope: !14556, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !16303)
!16306 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !16305)
!16307 = !DILocation(line: 1781, column: 1, scope: !16249)
!16308 = distinct !DISubprogram(name: "end_thread", scope: !2602, file: !2602, line: 1690, type: !14479, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16309)
!16309 = !{!16310}
!16310 = !DILocalVariable(name: "thread", arg: 1, scope: !16308, file: !2602, line: 1690, type: !2497)
!16311 = !DILocation(line: 0, scope: !16308)
!16312 = !DILocation(line: 1695, column: 20, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16308, file: !2602, line: 1695, column: 6)
!16314 = !DILocation(line: 1695, column: 33, scope: !16313)
!16315 = !DILocation(line: 1695, column: 49, scope: !16313)
!16316 = !DILocation(line: 1695, column: 6, scope: !16308)
!16317 = !DILocation(line: 1697, column: 29, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16313, file: !2602, line: 1695, column: 56)
!16319 = !DILocation(line: 1698, column: 7, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16318, file: !2602, line: 1698, column: 7)
!16321 = !DILocation(line: 1698, column: 7, scope: !16318)
!16322 = !DILocation(line: 0, scope: !14690, inlinedAt: !16323)
!16323 = distinct !DILocation(line: 1699, column: 4, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16320, file: !2602, line: 1698, column: 35)
!16325 = !DILocation(line: 266, column: 28, scope: !14690, inlinedAt: !16323)
!16326 = !DILocation(line: 0, scope: !14698, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 268, column: 3, scope: !14702, inlinedAt: !16323)
!16328 = !DILocation(line: 234, column: 2, scope: !14698, inlinedAt: !16327)
!16329 = !DILocation(line: 1700, column: 3, scope: !16324)
!16330 = !DILocation(line: 1701, column: 20, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16318, file: !2602, line: 1701, column: 7)
!16332 = !DILocation(line: 1701, column: 30, scope: !16331)
!16333 = !DILocation(line: 1701, column: 7, scope: !16318)
!16334 = !DILocation(line: 1702, column: 4, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16331, file: !2602, line: 1701, column: 39)
!16336 = !DILocation(line: 1703, column: 3, scope: !16335)
!16337 = !DILocation(line: 1704, column: 9, scope: !16318)
!16338 = !DILocation(line: 1705, column: 23, scope: !16318)
!16339 = !DILocation(line: 1705, column: 3, scope: !16318)
!16340 = !DILocation(line: 1706, column: 3, scope: !16318)
!16341 = !DILocation(line: 1722, column: 2, scope: !16318)
!16342 = !DILocation(line: 1723, column: 1, scope: !16308)
!16343 = distinct !DISubprogram(name: "unpend_all", scope: !2602, file: !2602, line: 1674, type: !16344, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16346)
!16344 = !DISubroutineType(types: !16345)
!16345 = !{null, !2528}
!16346 = !{!16347, !16348}
!16347 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16343, file: !2602, line: 1674, type: !2528)
!16348 = !DILocalVariable(name: "thread", scope: !16343, file: !2602, line: 1676, type: !2497)
!16349 = !DILocation(line: 0, scope: !16343)
!16350 = !DILocation(line: 1678, column: 19, scope: !16343)
!16351 = !DILocation(line: 1678, column: 41, scope: !16343)
!16352 = !DILocation(line: 1678, column: 2, scope: !16343)
!16353 = !DILocation(line: 1679, column: 3, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16343, file: !2602, line: 1678, column: 50)
!16355 = !DILocation(line: 1680, column: 9, scope: !16354)
!16356 = !DILocalVariable(name: "thread", arg: 1, scope: !16357, file: !13046, line: 65, type: !2497)
!16357 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13046, file: !13046, line: 65, type: !16358, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16360)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{null, !2497, !32}
!16360 = !{!16356, !16361}
!16361 = !DILocalVariable(name: "value", arg: 2, scope: !16357, file: !13046, line: 65, type: !32)
!16362 = !DILocation(line: 0, scope: !16357, inlinedAt: !16363)
!16363 = distinct !DILocation(line: 1681, column: 3, scope: !16354)
!16364 = !DILocation(line: 67, column: 15, scope: !16357, inlinedAt: !16363)
!16365 = !DILocation(line: 67, column: 33, scope: !16357, inlinedAt: !16363)
!16366 = !DILocation(line: 1682, column: 3, scope: !16354)
!16367 = distinct !{!16367, !16352, !16368}
!16368 = !DILocation(line: 1683, column: 2, scope: !16343)
!16369 = !DILocation(line: 1684, column: 1, scope: !16343)
!16370 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2602, file: !2602, line: 1794, type: !16371, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16373)
!16371 = !DISubroutineType(types: !16372)
!16372 = !{!103, !2497, !15312}
!16373 = !{!16374, !16375, !16376, !16377}
!16374 = !DILocalVariable(name: "thread", arg: 1, scope: !16370, file: !2602, line: 1794, type: !2497)
!16375 = !DILocalVariable(name: "timeout", arg: 2, scope: !16370, file: !2602, line: 1794, type: !15312)
!16376 = !DILocalVariable(name: "key", scope: !16370, file: !2602, line: 1796, type: !14513)
!16377 = !DILocalVariable(name: "ret", scope: !16370, file: !2602, line: 1797, type: !103)
!16378 = !DILocation(line: 0, scope: !16370)
!16379 = !DILocation(line: 0, scope: !14521, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 1796, column: 25, scope: !16370)
!16381 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !16380)
!16383 = !DILocation(line: 0, scope: !14530, inlinedAt: !16382)
!16384 = !DILocation(line: 1801, column: 20, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16370, file: !2602, line: 1801, column: 6)
!16386 = !DILocation(line: 1801, column: 33, scope: !16385)
!16387 = !DILocation(line: 1801, column: 49, scope: !16385)
!16388 = !DILocation(line: 1801, column: 6, scope: !16370)
!16389 = !DILocation(line: 1803, column: 13, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16385, file: !2602, line: 1803, column: 13)
!16391 = !DILocation(line: 1803, column: 13, scope: !16385)
!16392 = !DILocation(line: 1805, column: 24, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16390, file: !2602, line: 1805, column: 13)
!16394 = !DILocation(line: 1805, column: 21, scope: !16393)
!16395 = !DILocation(line: 1805, column: 34, scope: !16393)
!16396 = !DILocation(line: 1806, column: 20, scope: !16393)
!16397 = !DILocation(line: 1806, column: 44, scope: !16393)
!16398 = !DILocation(line: 1806, column: 30, scope: !16393)
!16399 = !DILocation(line: 1805, column: 13, scope: !16390)
!16400 = !DILocation(line: 1810, column: 42, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !16393, file: !2602, line: 1808, column: 9)
!16402 = !DILocation(line: 1810, column: 3, scope: !16401)
!16403 = !DILocation(line: 1811, column: 22, scope: !16401)
!16404 = !DILocation(line: 1811, column: 3, scope: !16401)
!16405 = !DILocation(line: 0, scope: !15132, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 1814, column: 9, scope: !16401)
!16407 = !DILocation(line: 196, column: 9, scope: !15132, inlinedAt: !16406)
!16408 = !DILocation(line: 1817, column: 3, scope: !16401)
!16409 = !DILocation(line: 0, scope: !16385)
!16410 = !DILocation(line: 0, scope: !14548, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 1822, column: 2, scope: !16370)
!16412 = !DILocation(line: 0, scope: !14556, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !16411)
!16414 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !16413)
!16415 = !DILocation(line: 1823, column: 2, scope: !16370)
!16416 = !DILocation(line: 1824, column: 1, scope: !16370)
!16417 = distinct !DISubprogram(name: "z_sched_wake", scope: !2602, file: !2602, line: 1882, type: !16418, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16420)
!16418 = !DISubroutineType(types: !16419)
!16419 = !{!157, !2528, !103, !102}
!16420 = !{!16421, !16422, !16423, !16424, !16425, !16426, !16428}
!16421 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16417, file: !2602, line: 1882, type: !2528)
!16422 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16417, file: !2602, line: 1882, type: !103)
!16423 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16417, file: !2602, line: 1882, type: !102)
!16424 = !DILocalVariable(name: "thread", scope: !16417, file: !2602, line: 1884, type: !2497)
!16425 = !DILocalVariable(name: "ret", scope: !16417, file: !2602, line: 1885, type: !157)
!16426 = !DILocalVariable(name: "__i", scope: !16427, file: !2602, line: 1887, type: !14513)
!16427 = distinct !DILexicalBlock(scope: !16417, file: !2602, line: 1887, column: 2)
!16428 = !DILocalVariable(name: "__key", scope: !16427, file: !2602, line: 1887, type: !14513)
!16429 = !DILocation(line: 0, scope: !16417)
!16430 = !DILocation(line: 0, scope: !16427)
!16431 = !DILocation(line: 0, scope: !14521, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 1887, column: 2, scope: !16427)
!16433 = !DILocation(line: 55, column: 2, scope: !14530, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 145, column: 10, scope: !14521, inlinedAt: !16432)
!16435 = !DILocation(line: 0, scope: !14530, inlinedAt: !16434)
!16436 = !DILocation(line: 1888, column: 12, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16438, file: !2602, line: 1887, column: 26)
!16438 = distinct !DILexicalBlock(scope: !16427, file: !2602, line: 1887, column: 2)
!16439 = !DILocation(line: 1890, column: 14, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16437, file: !2602, line: 1890, column: 7)
!16441 = !DILocation(line: 1890, column: 7, scope: !16437)
!16442 = !DILocalVariable(name: "thread", arg: 1, scope: !16443, file: !13919, line: 134, type: !2497)
!16443 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13919, file: !13919, line: 134, type: !16444, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16446)
!16444 = !DISubroutineType(types: !16445)
!16445 = !{null, !2497, !32, !102}
!16446 = !{!16442, !16447, !16448}
!16447 = !DILocalVariable(name: "value", arg: 2, scope: !16443, file: !13919, line: 135, type: !32)
!16448 = !DILocalVariable(name: "data", arg: 3, scope: !16443, file: !13919, line: 136, type: !102)
!16449 = !DILocation(line: 0, scope: !16443, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 1891, column: 4, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16440, file: !2602, line: 1890, column: 23)
!16452 = !DILocation(line: 0, scope: !16357, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 138, column: 2, scope: !16443, inlinedAt: !16450)
!16454 = !DILocation(line: 67, column: 15, scope: !16357, inlinedAt: !16453)
!16455 = !DILocation(line: 67, column: 33, scope: !16357, inlinedAt: !16453)
!16456 = !DILocation(line: 139, column: 15, scope: !16443, inlinedAt: !16450)
!16457 = !DILocation(line: 139, column: 25, scope: !16443, inlinedAt: !16450)
!16458 = !DILocation(line: 1894, column: 4, scope: !16451)
!16459 = !DILocation(line: 1895, column: 10, scope: !16451)
!16460 = !DILocation(line: 1896, column: 4, scope: !16451)
!16461 = !DILocation(line: 1898, column: 3, scope: !16451)
!16462 = !DILocation(line: 0, scope: !14548, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 1887, column: 2, scope: !16438)
!16464 = !DILocation(line: 0, scope: !14556, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 215, column: 2, scope: !14548, inlinedAt: !16463)
!16466 = !DILocation(line: 95, column: 2, scope: !14556, inlinedAt: !16465)
!16467 = !DILocation(line: 1901, column: 2, scope: !16417)
!16468 = distinct !DISubprogram(name: "z_sched_wait", scope: !2602, file: !2602, line: 1904, type: !16469, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !16471)
!16469 = !DISubroutineType(types: !16470)
!16470 = !{!103, !14524, !14513, !2528, !15312, !3303}
!16471 = !{!16472, !16473, !16474, !16475, !16476, !16477}
!16472 = !DILocalVariable(name: "lock", arg: 1, scope: !16468, file: !2602, line: 1904, type: !14524)
!16473 = !DILocalVariable(name: "key", arg: 2, scope: !16468, file: !2602, line: 1904, type: !14513)
!16474 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16468, file: !2602, line: 1905, type: !2528)
!16475 = !DILocalVariable(name: "timeout", arg: 4, scope: !16468, file: !2602, line: 1905, type: !15312)
!16476 = !DILocalVariable(name: "data", arg: 5, scope: !16468, file: !2602, line: 1905, type: !3303)
!16477 = !DILocalVariable(name: "ret", scope: !16468, file: !2602, line: 1907, type: !103)
!16478 = !DILocation(line: 0, scope: !16468)
!16479 = !DILocation(line: 1907, column: 12, scope: !16468)
!16480 = !DILocation(line: 1909, column: 11, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16468, file: !2602, line: 1909, column: 6)
!16482 = !DILocation(line: 1909, column: 6, scope: !16468)
!16483 = !DILocation(line: 1910, column: 11, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16481, file: !2602, line: 1909, column: 20)
!16485 = !DILocation(line: 1910, column: 26, scope: !16484)
!16486 = !DILocation(line: 1910, column: 9, scope: !16484)
!16487 = !DILocation(line: 1911, column: 2, scope: !16484)
!16488 = !DILocation(line: 1912, column: 2, scope: !16468)
!16489 = distinct !DISubprogram(name: "z_data_copy", scope: !16490, file: !16490, line: 22, type: !3339, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3320, retainedNodes: !317)
!16490 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16491 = !DILocation(line: 24, column: 2, scope: !16489)
!16492 = !DILocation(line: 27, column: 2, scope: !16489)
!16493 = !DILocation(line: 31, column: 2, scope: !16489)
!16494 = !DILocation(line: 71, column: 1, scope: !16489)
!16495 = distinct !DISubprogram(name: "z_add_timeout", scope: !2639, file: !2639, line: 88, type: !16496, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16502)
!16496 = !DISubroutineType(types: !16497)
!16497 = !{null, !2612, !2631, !16498}
!16498 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !16499)
!16499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !16500)
!16500 = !{!16501}
!16501 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16499, file: !201, line: 66, baseType: !200, size: 64)
!16502 = !{!16503, !16504, !16505, !16506, !16512, !16513, !16516, !16519}
!16503 = !DILocalVariable(name: "to", arg: 1, scope: !16495, file: !2639, line: 88, type: !2612)
!16504 = !DILocalVariable(name: "fn", arg: 2, scope: !16495, file: !2639, line: 88, type: !2631)
!16505 = !DILocalVariable(name: "timeout", arg: 3, scope: !16495, file: !2639, line: 89, type: !16498)
!16506 = !DILocalVariable(name: "__i", scope: !16507, file: !2639, line: 102, type: !16508)
!16507 = distinct !DILexicalBlock(scope: !16495, file: !2639, line: 102, column: 2)
!16508 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !16509)
!16509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !16510)
!16510 = !{!16511}
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16509, file: !316, line: 33, baseType: !103, size: 32)
!16512 = !DILocalVariable(name: "__key", scope: !16507, file: !2639, line: 102, type: !16508)
!16513 = !DILocalVariable(name: "t", scope: !16514, file: !2639, line: 103, type: !2612)
!16514 = distinct !DILexicalBlock(scope: !16515, file: !2639, line: 102, column: 24)
!16515 = distinct !DILexicalBlock(scope: !16507, file: !2639, line: 102, column: 2)
!16516 = !DILocalVariable(name: "ticks", scope: !16517, file: !2639, line: 107, type: !200)
!16517 = distinct !DILexicalBlock(scope: !16518, file: !2639, line: 106, column: 39)
!16518 = distinct !DILexicalBlock(scope: !16514, file: !2639, line: 105, column: 7)
!16519 = !DILocalVariable(name: "next_time", scope: !16520, file: !2639, line: 137, type: !756)
!16520 = distinct !DILexicalBlock(scope: !16521, file: !2639, line: 127, column: 22)
!16521 = distinct !DILexicalBlock(scope: !16514, file: !2639, line: 127, column: 7)
!16522 = !DILocation(line: 0, scope: !16495)
!16523 = !DILocation(line: 91, column: 6, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16495, file: !2639, line: 91, column: 6)
!16525 = !DILocation(line: 91, column: 6, scope: !16495)
!16526 = !DILocation(line: 100, column: 6, scope: !16495)
!16527 = !DILocation(line: 100, column: 9, scope: !16495)
!16528 = !DILocation(line: 0, scope: !16507)
!16529 = !DILocalVariable(name: "l", arg: 1, scope: !16530, file: !316, line: 136, type: !16533)
!16530 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !16531, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16534)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{!16508, !16533}
!16533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 32)
!16534 = !{!16529, !16535}
!16535 = !DILocalVariable(name: "k", scope: !16530, file: !316, line: 139, type: !16508)
!16536 = !DILocation(line: 0, scope: !16530, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 102, column: 2, scope: !16507)
!16538 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16543)
!16539 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16540)
!16540 = !{!16541, !16542}
!16541 = !DILocalVariable(name: "key", scope: !16539, file: !5896, line: 44, type: !32)
!16542 = !DILocalVariable(name: "tmp", scope: !16539, file: !5896, line: 53, type: !32)
!16543 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16537)
!16544 = !{i64 2598868}
!16545 = !DILocation(line: 0, scope: !16539, inlinedAt: !16543)
!16546 = !DILocation(line: 106, column: 33, scope: !16518)
!16547 = !DILocation(line: 105, column: 7, scope: !16514)
!16548 = !DILocation(line: 107, column: 50, scope: !16517)
!16549 = !DILocation(line: 107, column: 48, scope: !16517)
!16550 = !DILocation(line: 0, scope: !16517)
!16551 = !DILocation(line: 109, column: 17, scope: !16517)
!16552 = !DILocation(line: 110, column: 3, scope: !16517)
!16553 = !DILocation(line: 111, column: 31, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16518, file: !2639, line: 110, column: 10)
!16555 = !DILocation(line: 111, column: 37, scope: !16554)
!16556 = !DILocation(line: 111, column: 35, scope: !16554)
!16557 = !DILocation(line: 0, scope: !16518)
!16558 = !DILocation(line: 109, column: 8, scope: !16517)
!16559 = !DILocation(line: 109, column: 15, scope: !16517)
!16560 = !DILocation(line: 114, column: 12, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16514, file: !2639, line: 114, column: 3)
!16562 = !DILocation(line: 0, scope: !16514)
!16563 = !DILocation(line: 114, column: 3, scope: !16561)
!16564 = !DILocation(line: 115, column: 24, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !2639, line: 115, column: 8)
!16566 = distinct !DILexicalBlock(scope: !16567, file: !2639, line: 114, column: 45)
!16567 = distinct !DILexicalBlock(scope: !16561, file: !2639, line: 114, column: 3)
!16568 = !DILocation(line: 115, column: 11, scope: !16565)
!16569 = !DILocation(line: 115, column: 18, scope: !16565)
!16570 = !DILocation(line: 115, column: 8, scope: !16566)
!16571 = !DILocation(line: 116, column: 15, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16565, file: !2639, line: 115, column: 32)
!16573 = !DILocation(line: 117, column: 26, scope: !16572)
!16574 = !DILocation(line: 117, column: 37, scope: !16572)
!16575 = !DILocation(line: 117, column: 5, scope: !16572)
!16576 = !DILocation(line: 123, column: 7, scope: !16514)
!16577 = !DILocation(line: 120, column: 15, scope: !16566)
!16578 = !DILocation(line: 114, column: 36, scope: !16567)
!16579 = distinct !{!16579, !16563, !16580}
!16580 = !DILocation(line: 121, column: 3, scope: !16561)
!16581 = !DILocation(line: 124, column: 41, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16583, file: !2639, line: 123, column: 18)
!16583 = distinct !DILexicalBlock(scope: !16514, file: !2639, line: 123, column: 7)
!16584 = !DILocation(line: 124, column: 4, scope: !16582)
!16585 = !DILocation(line: 125, column: 3, scope: !16582)
!16586 = !DILocation(line: 127, column: 13, scope: !16521)
!16587 = !DILocation(line: 127, column: 10, scope: !16521)
!16588 = !DILocation(line: 127, column: 7, scope: !16514)
!16589 = !DILocation(line: 137, column: 24, scope: !16520)
!16590 = !DILocation(line: 0, scope: !16520)
!16591 = !DILocation(line: 139, column: 18, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16520, file: !2639, line: 139, column: 8)
!16593 = !DILocation(line: 139, column: 23, scope: !16592)
!16594 = !DILocation(line: 141, column: 5, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16592, file: !2639, line: 140, column: 48)
!16596 = !DILocation(line: 142, column: 4, scope: !16595)
!16597 = !DILocalVariable(name: "key", arg: 2, scope: !16598, file: !316, line: 190, type: !16508)
!16598 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !16599, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16601)
!16599 = !DISubroutineType(types: !16600)
!16600 = !{null, !16533, !16508}
!16601 = !{!16602, !16597}
!16602 = !DILocalVariable(name: "l", arg: 1, scope: !16598, file: !316, line: 189, type: !16533)
!16603 = !DILocation(line: 0, scope: !16598, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 102, column: 2, scope: !16515)
!16605 = !DILocalVariable(name: "key", arg: 1, scope: !16606, file: !5896, line: 84, type: !32)
!16606 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16607)
!16607 = !{!16605}
!16608 = !DILocation(line: 0, scope: !16606, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16604)
!16610 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16609)
!16611 = !{i64 2599685}
!16612 = !DILocation(line: 148, column: 1, scope: !16495)
!16613 = distinct !DISubprogram(name: "elapsed", scope: !2639, file: !2639, line: 62, type: !16614, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !317)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{!756}
!16616 = !DILocation(line: 64, column: 9, scope: !16613)
!16617 = !DILocation(line: 64, column: 28, scope: !16613)
!16618 = !DILocation(line: 64, column: 35, scope: !16613)
!16619 = !DILocation(line: 64, column: 2, scope: !16613)
!16620 = distinct !DISubprogram(name: "first", scope: !2639, file: !2639, line: 39, type: !16621, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16623)
!16621 = !DISubroutineType(types: !16622)
!16622 = !{!2612}
!16623 = !{!16624}
!16624 = !DILocalVariable(name: "t", scope: !16620, file: !2639, line: 41, type: !16625)
!16625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!16626 = !DILocation(line: 41, column: 19, scope: !16620)
!16627 = !DILocation(line: 0, scope: !16620)
!16628 = !DILocation(line: 43, column: 9, scope: !16620)
!16629 = !DILocation(line: 43, column: 2, scope: !16620)
!16630 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !16631, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16633)
!16631 = !DISubroutineType(types: !16632)
!16632 = !{null, !16625, !16625}
!16633 = !{!16634, !16635, !16636}
!16634 = !DILocalVariable(name: "successor", arg: 1, scope: !16630, file: !325, line: 443, type: !16625)
!16635 = !DILocalVariable(name: "node", arg: 2, scope: !16630, file: !325, line: 443, type: !16625)
!16636 = !DILocalVariable(name: "prev", scope: !16630, file: !325, line: 445, type: !16637)
!16637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16625)
!16638 = !DILocation(line: 0, scope: !16630)
!16639 = !DILocation(line: 445, column: 39, scope: !16630)
!16640 = !DILocation(line: 447, column: 8, scope: !16630)
!16641 = !DILocation(line: 447, column: 13, scope: !16630)
!16642 = !DILocation(line: 448, column: 8, scope: !16630)
!16643 = !DILocation(line: 448, column: 13, scope: !16630)
!16644 = !DILocation(line: 449, column: 8, scope: !16630)
!16645 = !DILocation(line: 449, column: 13, scope: !16630)
!16646 = !DILocation(line: 450, column: 18, scope: !16630)
!16647 = !DILocation(line: 451, column: 1, scope: !16630)
!16648 = distinct !DISubprogram(name: "next", scope: !2639, file: !2639, line: 46, type: !16649, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16651)
!16649 = !DISubroutineType(types: !16650)
!16650 = !{!2612, !2612}
!16651 = !{!16652, !16653}
!16652 = !DILocalVariable(name: "t", arg: 1, scope: !16648, file: !2639, line: 46, type: !2612)
!16653 = !DILocalVariable(name: "n", scope: !16648, file: !2639, line: 48, type: !16625)
!16654 = !DILocation(line: 0, scope: !16648)
!16655 = !DILocation(line: 48, column: 58, scope: !16648)
!16656 = !DILocation(line: 48, column: 19, scope: !16648)
!16657 = !DILocation(line: 50, column: 9, scope: !16648)
!16658 = !DILocation(line: 50, column: 2, scope: !16648)
!16659 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !16660, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16663)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{null, !16662, !16625}
!16662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 32)
!16663 = !{!16664, !16665, !16666}
!16664 = !DILocalVariable(name: "list", arg: 1, scope: !16659, file: !325, line: 404, type: !16662)
!16665 = !DILocalVariable(name: "node", arg: 2, scope: !16659, file: !325, line: 404, type: !16625)
!16666 = !DILocalVariable(name: "tail", scope: !16659, file: !325, line: 406, type: !16637)
!16667 = !DILocation(line: 0, scope: !16659)
!16668 = !DILocation(line: 406, column: 34, scope: !16659)
!16669 = !DILocation(line: 408, column: 8, scope: !16659)
!16670 = !DILocation(line: 408, column: 13, scope: !16659)
!16671 = !DILocation(line: 409, column: 8, scope: !16659)
!16672 = !DILocation(line: 409, column: 13, scope: !16659)
!16673 = !DILocation(line: 411, column: 8, scope: !16659)
!16674 = !DILocation(line: 411, column: 13, scope: !16659)
!16675 = !DILocation(line: 412, column: 13, scope: !16659)
!16676 = !DILocation(line: 413, column: 1, scope: !16659)
!16677 = distinct !DISubprogram(name: "next_timeout", scope: !2639, file: !2639, line: 67, type: !16614, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16678)
!16678 = !{!16679, !16680, !16681}
!16679 = !DILocalVariable(name: "to", scope: !16677, file: !2639, line: 69, type: !2612)
!16680 = !DILocalVariable(name: "ticks_elapsed", scope: !16677, file: !2639, line: 70, type: !756)
!16681 = !DILocalVariable(name: "ret", scope: !16677, file: !2639, line: 71, type: !756)
!16682 = !DILocation(line: 69, column: 24, scope: !16677)
!16683 = !DILocation(line: 0, scope: !16677)
!16684 = !DILocation(line: 70, column: 26, scope: !16677)
!16685 = !DILocation(line: 73, column: 10, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16677, file: !2639, line: 73, column: 6)
!16687 = !DILocation(line: 73, column: 19, scope: !16686)
!16688 = !DILocation(line: 74, column: 21, scope: !16686)
!16689 = !DILocation(line: 74, column: 30, scope: !16686)
!16690 = !DILocation(line: 74, column: 28, scope: !16686)
!16691 = !DILocation(line: 74, column: 45, scope: !16686)
!16692 = !DILocation(line: 73, column: 6, scope: !16677)
!16693 = !DILocation(line: 77, column: 9, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16686, file: !2639, line: 76, column: 9)
!16695 = !DILocation(line: 0, scope: !16686)
!16696 = !DILocation(line: 81, column: 20, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16677, file: !2639, line: 81, column: 6)
!16698 = !DILocation(line: 81, column: 6, scope: !16697)
!16699 = !DILocation(line: 81, column: 32, scope: !16697)
!16700 = !DILocation(line: 85, column: 2, scope: !16677)
!16701 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !16702, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16704)
!16702 = !DISubroutineType(types: !16703)
!16703 = !{!16625, !16662, !16625}
!16704 = !{!16705, !16706}
!16705 = !DILocalVariable(name: "list", arg: 1, scope: !16701, file: !325, line: 341, type: !16662)
!16706 = !DILocalVariable(name: "node", arg: 2, scope: !16701, file: !325, line: 342, type: !16625)
!16707 = !DILocation(line: 0, scope: !16701)
!16708 = !DILocation(line: 344, column: 15, scope: !16701)
!16709 = !DILocation(line: 344, column: 9, scope: !16701)
!16710 = !DILocation(line: 344, column: 26, scope: !16701)
!16711 = !DILocation(line: 344, column: 2, scope: !16701)
!16712 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !16702, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16713)
!16713 = !{!16714, !16715}
!16714 = !DILocalVariable(name: "list", arg: 1, scope: !16712, file: !325, line: 325, type: !16662)
!16715 = !DILocalVariable(name: "node", arg: 2, scope: !16712, file: !325, line: 326, type: !16625)
!16716 = !DILocation(line: 0, scope: !16712)
!16717 = !DILocation(line: 328, column: 24, scope: !16712)
!16718 = !DILocation(line: 328, column: 15, scope: !16712)
!16719 = !DILocation(line: 328, column: 9, scope: !16712)
!16720 = !DILocation(line: 328, column: 45, scope: !16712)
!16721 = !DILocation(line: 328, column: 2, scope: !16712)
!16722 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !16723, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16725)
!16723 = !DISubroutineType(types: !16724)
!16724 = !{!16625, !16662}
!16725 = !{!16726}
!16726 = !DILocalVariable(name: "list", arg: 1, scope: !16722, file: !325, line: 294, type: !16662)
!16727 = !DILocation(line: 0, scope: !16722)
!16728 = !DILocation(line: 296, column: 9, scope: !16722)
!16729 = !DILocation(line: 296, column: 2, scope: !16722)
!16730 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !16731, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16733)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{!157, !16662}
!16733 = !{!16734}
!16734 = !DILocalVariable(name: "list", arg: 1, scope: !16730, file: !325, line: 266, type: !16662)
!16735 = !DILocation(line: 0, scope: !16730)
!16736 = !DILocation(line: 268, column: 15, scope: !16730)
!16737 = !DILocation(line: 268, column: 20, scope: !16730)
!16738 = !DILocation(line: 268, column: 2, scope: !16730)
!16739 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2639, file: !2639, line: 150, type: !16740, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16742)
!16740 = !DISubroutineType(types: !16741)
!16741 = !{!103, !2612}
!16742 = !{!16743, !16744, !16745, !16747}
!16743 = !DILocalVariable(name: "to", arg: 1, scope: !16739, file: !2639, line: 150, type: !2612)
!16744 = !DILocalVariable(name: "ret", scope: !16739, file: !2639, line: 152, type: !103)
!16745 = !DILocalVariable(name: "__i", scope: !16746, file: !2639, line: 154, type: !16508)
!16746 = distinct !DILexicalBlock(scope: !16739, file: !2639, line: 154, column: 2)
!16747 = !DILocalVariable(name: "__key", scope: !16746, file: !2639, line: 154, type: !16508)
!16748 = !DILocation(line: 0, scope: !16739)
!16749 = !DILocation(line: 0, scope: !16746)
!16750 = !DILocation(line: 0, scope: !16530, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 154, column: 2, scope: !16746)
!16752 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16751)
!16754 = !DILocation(line: 0, scope: !16539, inlinedAt: !16753)
!16755 = !DILocation(line: 155, column: 7, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !2639, line: 155, column: 7)
!16757 = distinct !DILexicalBlock(scope: !16758, file: !2639, line: 154, column: 24)
!16758 = distinct !DILexicalBlock(scope: !16746, file: !2639, line: 154, column: 2)
!16759 = !DILocation(line: 155, column: 7, scope: !16757)
!16760 = !DILocation(line: 156, column: 4, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16756, file: !2639, line: 155, column: 39)
!16762 = !DILocation(line: 158, column: 3, scope: !16761)
!16763 = !DILocation(line: 0, scope: !16598, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 154, column: 2, scope: !16758)
!16765 = !DILocation(line: 0, scope: !16606, inlinedAt: !16766)
!16766 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16764)
!16767 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16766)
!16768 = !DILocation(line: 161, column: 2, scope: !16739)
!16769 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !16770, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16774)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{!157, !16772}
!16772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16773, size: 32)
!16773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2616)
!16774 = !{!16775}
!16775 = !DILocalVariable(name: "node", arg: 1, scope: !16769, file: !325, line: 225, type: !16772)
!16776 = !DILocation(line: 0, scope: !16769)
!16777 = !DILocation(line: 227, column: 15, scope: !16769)
!16778 = !DILocation(line: 227, column: 20, scope: !16769)
!16779 = !DILocation(line: 227, column: 2, scope: !16769)
!16780 = distinct !DISubprogram(name: "remove_timeout", scope: !2639, file: !2639, line: 53, type: !2633, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16781)
!16781 = !{!16782}
!16782 = !DILocalVariable(name: "t", arg: 1, scope: !16780, file: !2639, line: 53, type: !2612)
!16783 = !DILocation(line: 0, scope: !16780)
!16784 = !DILocation(line: 55, column: 6, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16780, file: !2639, line: 55, column: 6)
!16786 = !DILocation(line: 55, column: 14, scope: !16785)
!16787 = !DILocation(line: 55, column: 6, scope: !16780)
!16788 = !DILocation(line: 56, column: 25, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16785, file: !2639, line: 55, column: 23)
!16790 = !DILocation(line: 56, column: 12, scope: !16789)
!16791 = !DILocation(line: 56, column: 19, scope: !16789)
!16792 = !DILocation(line: 57, column: 2, scope: !16789)
!16793 = !DILocation(line: 59, column: 23, scope: !16780)
!16794 = !DILocation(line: 59, column: 2, scope: !16780)
!16795 = !DILocation(line: 60, column: 1, scope: !16780)
!16796 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !16797, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16799)
!16797 = !DISubroutineType(types: !16798)
!16798 = !{null, !16625}
!16799 = !{!16800, !16801, !16802}
!16800 = !DILocalVariable(name: "node", arg: 1, scope: !16796, file: !325, line: 496, type: !16625)
!16801 = !DILocalVariable(name: "prev", scope: !16796, file: !325, line: 498, type: !16637)
!16802 = !DILocalVariable(name: "next", scope: !16796, file: !325, line: 499, type: !16637)
!16803 = !DILocation(line: 0, scope: !16796)
!16804 = !DILocation(line: 498, column: 34, scope: !16796)
!16805 = !DILocation(line: 499, column: 34, scope: !16796)
!16806 = !DILocation(line: 501, column: 8, scope: !16796)
!16807 = !DILocation(line: 501, column: 13, scope: !16796)
!16808 = !DILocation(line: 502, column: 8, scope: !16796)
!16809 = !DILocation(line: 502, column: 13, scope: !16796)
!16810 = !DILocation(line: 503, column: 2, scope: !16796)
!16811 = !DILocation(line: 504, column: 1, scope: !16796)
!16812 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !16797, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16813)
!16813 = !{!16814}
!16814 = !DILocalVariable(name: "node", arg: 1, scope: !16812, file: !325, line: 211, type: !16625)
!16815 = !DILocation(line: 0, scope: !16812)
!16816 = !DILocation(line: 213, column: 8, scope: !16812)
!16817 = !DILocation(line: 213, column: 13, scope: !16812)
!16818 = !DILocation(line: 214, column: 8, scope: !16812)
!16819 = !DILocation(line: 214, column: 13, scope: !16812)
!16820 = !DILocation(line: 215, column: 1, scope: !16812)
!16821 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2639, file: !2639, line: 183, type: !16822, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16826)
!16822 = !DISubroutineType(types: !16823)
!16823 = !{!200, !16824}
!16824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16825, size: 32)
!16825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2613)
!16826 = !{!16827, !16828, !16829, !16831}
!16827 = !DILocalVariable(name: "timeout", arg: 1, scope: !16821, file: !2639, line: 183, type: !16824)
!16828 = !DILocalVariable(name: "ticks", scope: !16821, file: !2639, line: 185, type: !200)
!16829 = !DILocalVariable(name: "__i", scope: !16830, file: !2639, line: 187, type: !16508)
!16830 = distinct !DILexicalBlock(scope: !16821, file: !2639, line: 187, column: 2)
!16831 = !DILocalVariable(name: "__key", scope: !16830, file: !2639, line: 187, type: !16508)
!16832 = !DILocation(line: 0, scope: !16821)
!16833 = !DILocation(line: 0, scope: !16830)
!16834 = !DILocation(line: 0, scope: !16530, inlinedAt: !16835)
!16835 = distinct !DILocation(line: 187, column: 2, scope: !16830)
!16836 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16835)
!16838 = !DILocation(line: 0, scope: !16539, inlinedAt: !16837)
!16839 = !DILocation(line: 188, column: 11, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !2639, line: 187, column: 24)
!16841 = distinct !DILexicalBlock(scope: !16830, file: !2639, line: 187, column: 2)
!16842 = !DILocation(line: 0, scope: !16598, inlinedAt: !16843)
!16843 = distinct !DILocation(line: 187, column: 2, scope: !16841)
!16844 = !DILocation(line: 0, scope: !16606, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16843)
!16846 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16845)
!16847 = !DILocation(line: 191, column: 2, scope: !16821)
!16848 = distinct !DISubprogram(name: "timeout_rem", scope: !2639, file: !2639, line: 165, type: !16822, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16849)
!16849 = !{!16850, !16851, !16852}
!16850 = !DILocalVariable(name: "timeout", arg: 1, scope: !16848, file: !2639, line: 165, type: !16824)
!16851 = !DILocalVariable(name: "ticks", scope: !16848, file: !2639, line: 167, type: !200)
!16852 = !DILocalVariable(name: "t", scope: !16853, file: !2639, line: 173, type: !2612)
!16853 = distinct !DILexicalBlock(scope: !16848, file: !2639, line: 173, column: 2)
!16854 = !DILocation(line: 0, scope: !16848)
!16855 = !DILocation(line: 169, column: 6, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16848, file: !2639, line: 169, column: 6)
!16857 = !DILocation(line: 169, column: 6, scope: !16848)
!16858 = !DILocation(line: 173, column: 28, scope: !16853)
!16859 = !DILocation(line: 0, scope: !16853)
!16860 = !DILocation(line: 173, column: 39, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16853, file: !2639, line: 173, column: 2)
!16862 = !DILocation(line: 173, column: 2, scope: !16853)
!16863 = !DILocation(line: 174, column: 15, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16861, file: !2639, line: 173, column: 61)
!16865 = !DILocation(line: 174, column: 9, scope: !16864)
!16866 = !DILocation(line: 175, column: 15, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16864, file: !2639, line: 175, column: 7)
!16868 = !DILocation(line: 175, column: 7, scope: !16864)
!16869 = !DILocation(line: 173, column: 52, scope: !16861)
!16870 = distinct !{!16870, !16862, !16871}
!16871 = !DILocation(line: 178, column: 2, scope: !16853)
!16872 = !DILocation(line: 180, column: 17, scope: !16848)
!16873 = !DILocation(line: 180, column: 15, scope: !16848)
!16874 = !DILocation(line: 180, column: 2, scope: !16848)
!16875 = !DILocation(line: 181, column: 1, scope: !16848)
!16876 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13418, file: !13418, line: 35, type: !16877, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16879)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{!157, !16824}
!16879 = !{!16880}
!16880 = !DILocalVariable(name: "to", arg: 1, scope: !16876, file: !13418, line: 35, type: !16824)
!16881 = !DILocation(line: 0, scope: !16876)
!16882 = !DILocation(line: 37, column: 35, scope: !16876)
!16883 = !DILocation(line: 37, column: 10, scope: !16876)
!16884 = !DILocation(line: 37, column: 9, scope: !16876)
!16885 = !DILocation(line: 37, column: 2, scope: !16876)
!16886 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2639, file: !2639, line: 194, type: !16822, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16887)
!16887 = !{!16888, !16889, !16890, !16892}
!16888 = !DILocalVariable(name: "timeout", arg: 1, scope: !16886, file: !2639, line: 194, type: !16824)
!16889 = !DILocalVariable(name: "ticks", scope: !16886, file: !2639, line: 196, type: !200)
!16890 = !DILocalVariable(name: "__i", scope: !16891, file: !2639, line: 198, type: !16508)
!16891 = distinct !DILexicalBlock(scope: !16886, file: !2639, line: 198, column: 2)
!16892 = !DILocalVariable(name: "__key", scope: !16891, file: !2639, line: 198, type: !16508)
!16893 = !DILocation(line: 0, scope: !16886)
!16894 = !DILocation(line: 0, scope: !16891)
!16895 = !DILocation(line: 0, scope: !16530, inlinedAt: !16896)
!16896 = distinct !DILocation(line: 198, column: 2, scope: !16891)
!16897 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16896)
!16899 = !DILocation(line: 0, scope: !16539, inlinedAt: !16898)
!16900 = !DILocation(line: 199, column: 11, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2639, line: 198, column: 24)
!16902 = distinct !DILexicalBlock(scope: !16891, file: !2639, line: 198, column: 2)
!16903 = !DILocation(line: 199, column: 23, scope: !16901)
!16904 = !DILocation(line: 0, scope: !16598, inlinedAt: !16905)
!16905 = distinct !DILocation(line: 198, column: 2, scope: !16902)
!16906 = !DILocation(line: 0, scope: !16606, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16905)
!16908 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16907)
!16909 = !DILocation(line: 199, column: 21, scope: !16901)
!16910 = !DILocation(line: 202, column: 2, scope: !16886)
!16911 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2639, file: !2639, line: 205, type: !16614, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16912)
!16912 = !{!16913, !16914, !16916}
!16913 = !DILocalVariable(name: "ret", scope: !16911, file: !2639, line: 207, type: !756)
!16914 = !DILocalVariable(name: "__i", scope: !16915, file: !2639, line: 209, type: !16508)
!16915 = distinct !DILexicalBlock(scope: !16911, file: !2639, line: 209, column: 2)
!16916 = !DILocalVariable(name: "__key", scope: !16915, file: !2639, line: 209, type: !16508)
!16917 = !DILocation(line: 0, scope: !16911)
!16918 = !DILocation(line: 0, scope: !16915)
!16919 = !DILocation(line: 0, scope: !16530, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 209, column: 2, scope: !16915)
!16921 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16920)
!16923 = !DILocation(line: 0, scope: !16539, inlinedAt: !16922)
!16924 = !DILocation(line: 210, column: 9, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16926, file: !2639, line: 209, column: 24)
!16926 = distinct !DILexicalBlock(scope: !16915, file: !2639, line: 209, column: 2)
!16927 = !DILocation(line: 0, scope: !16598, inlinedAt: !16928)
!16928 = distinct !DILocation(line: 209, column: 2, scope: !16926)
!16929 = !DILocation(line: 0, scope: !16606, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16928)
!16931 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16930)
!16932 = !DILocation(line: 212, column: 2, scope: !16911)
!16933 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2639, file: !2639, line: 215, type: !11017, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16934)
!16934 = !{!16935, !16936, !16937, !16939, !16940, !16943, !16944}
!16935 = !DILocalVariable(name: "ticks", arg: 1, scope: !16933, file: !2639, line: 215, type: !756)
!16936 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16933, file: !2639, line: 215, type: !157)
!16937 = !DILocalVariable(name: "__i", scope: !16938, file: !2639, line: 217, type: !16508)
!16938 = distinct !DILexicalBlock(scope: !16933, file: !2639, line: 217, column: 2)
!16939 = !DILocalVariable(name: "__key", scope: !16938, file: !2639, line: 217, type: !16508)
!16940 = !DILocalVariable(name: "next_to", scope: !16941, file: !2639, line: 218, type: !103)
!16941 = distinct !DILexicalBlock(scope: !16942, file: !2639, line: 217, column: 24)
!16942 = distinct !DILexicalBlock(scope: !16938, file: !2639, line: 217, column: 2)
!16943 = !DILocalVariable(name: "sooner", scope: !16941, file: !2639, line: 219, type: !157)
!16944 = !DILocalVariable(name: "imminent", scope: !16941, file: !2639, line: 221, type: !157)
!16945 = !DILocation(line: 0, scope: !16933)
!16946 = !DILocation(line: 0, scope: !16938)
!16947 = !DILocation(line: 0, scope: !16530, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 217, column: 2, scope: !16938)
!16949 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16948)
!16951 = !DILocation(line: 0, scope: !16539, inlinedAt: !16950)
!16952 = !DILocation(line: 218, column: 17, scope: !16941)
!16953 = !DILocation(line: 0, scope: !16941)
!16954 = !DILocation(line: 221, column: 27, scope: !16941)
!16955 = !DILocation(line: 233, column: 17, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16941, file: !2639, line: 233, column: 7)
!16957 = !DILocation(line: 234, column: 26, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16956, file: !2639, line: 233, column: 56)
!16959 = !DILocation(line: 234, column: 4, scope: !16958)
!16960 = !DILocation(line: 235, column: 3, scope: !16958)
!16961 = !DILocation(line: 0, scope: !16598, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 217, column: 2, scope: !16942)
!16963 = !DILocation(line: 0, scope: !16606, inlinedAt: !16964)
!16964 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16962)
!16965 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16964)
!16966 = !DILocation(line: 237, column: 1, scope: !16933)
!16967 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2639, file: !2639, line: 239, type: !16968, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16970)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{null, !756}
!16970 = !{!16971, !16972, !16973, !16975}
!16971 = !DILocalVariable(name: "ticks", arg: 1, scope: !16967, file: !2639, line: 239, type: !756)
!16972 = !DILocalVariable(name: "key", scope: !16967, file: !2639, line: 245, type: !16508)
!16973 = !DILocalVariable(name: "t", scope: !16974, file: !2639, line: 262, type: !2612)
!16974 = distinct !DILexicalBlock(scope: !16967, file: !2639, line: 261, column: 67)
!16975 = !DILocalVariable(name: "dt", scope: !16974, file: !2639, line: 263, type: !103)
!16976 = !DILocation(line: 0, scope: !16967)
!16977 = !DILocation(line: 242, column: 2, scope: !16967)
!16978 = !DILocation(line: 0, scope: !16530, inlinedAt: !16979)
!16979 = distinct !DILocation(line: 245, column: 25, scope: !16967)
!16980 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !16979)
!16982 = !DILocation(line: 0, scope: !16539, inlinedAt: !16981)
!16983 = !DILocation(line: 261, column: 9, scope: !16967)
!16984 = !DILocation(line: 261, column: 17, scope: !16967)
!16985 = !DILocation(line: 261, column: 25, scope: !16967)
!16986 = !DILocation(line: 261, column: 37, scope: !16967)
!16987 = !DILocation(line: 261, column: 47, scope: !16967)
!16988 = !DILocation(line: 261, column: 44, scope: !16967)
!16989 = !DILocation(line: 261, column: 2, scope: !16967)
!16990 = !DILocation(line: 0, scope: !16974)
!16991 = !DILocation(line: 263, column: 12, scope: !16974)
!16992 = !DILocation(line: 265, column: 16, scope: !16974)
!16993 = !DILocation(line: 265, column: 13, scope: !16974)
!16994 = !DILocation(line: 266, column: 13, scope: !16974)
!16995 = !DILocation(line: 267, column: 3, scope: !16974)
!16996 = !DILocation(line: 0, scope: !16598, inlinedAt: !16997)
!16997 = distinct !DILocation(line: 269, column: 3, scope: !16974)
!16998 = !DILocation(line: 0, scope: !16606, inlinedAt: !16999)
!16999 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !16997)
!17000 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !16999)
!17001 = !DILocation(line: 270, column: 6, scope: !16974)
!17002 = !DILocation(line: 270, column: 3, scope: !16974)
!17003 = !DILocation(line: 0, scope: !16530, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 271, column: 9, scope: !16974)
!17005 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !17004)
!17007 = !DILocation(line: 0, scope: !16539, inlinedAt: !17006)
!17008 = !DILocation(line: 272, column: 22, scope: !16974)
!17009 = distinct !{!17009, !16989, !17010}
!17010 = !DILocation(line: 273, column: 2, scope: !16967)
!17011 = !DILocation(line: 276, column: 19, scope: !17012)
!17012 = distinct !DILexicalBlock(scope: !17013, file: !2639, line: 275, column: 23)
!17013 = distinct !DILexicalBlock(scope: !16967, file: !2639, line: 275, column: 6)
!17014 = !DILocation(line: 277, column: 2, scope: !17012)
!17015 = !DILocation(line: 279, column: 15, scope: !16967)
!17016 = !DILocation(line: 279, column: 12, scope: !16967)
!17017 = !DILocation(line: 280, column: 21, scope: !16967)
!17018 = !DILocation(line: 282, column: 24, scope: !16967)
!17019 = !DILocation(line: 282, column: 2, scope: !16967)
!17020 = !DILocation(line: 0, scope: !16598, inlinedAt: !17021)
!17021 = distinct !DILocation(line: 284, column: 2, scope: !16967)
!17022 = !DILocation(line: 0, scope: !16606, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !17021)
!17024 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !17023)
!17025 = !DILocation(line: 285, column: 1, scope: !16967)
!17026 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2639, file: !2639, line: 287, type: !17027, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !17029)
!17027 = !DISubroutineType(types: !17028)
!17028 = !{!202}
!17029 = !{!17030, !17031, !17033}
!17030 = !DILocalVariable(name: "t", scope: !17026, file: !2639, line: 289, type: !1652)
!17031 = !DILocalVariable(name: "__i", scope: !17032, file: !2639, line: 291, type: !16508)
!17032 = distinct !DILexicalBlock(scope: !17026, file: !2639, line: 291, column: 2)
!17033 = !DILocalVariable(name: "__key", scope: !17032, file: !2639, line: 291, type: !16508)
!17034 = !DILocation(line: 0, scope: !17026)
!17035 = !DILocation(line: 0, scope: !17032)
!17036 = !DILocation(line: 0, scope: !16530, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 291, column: 2, scope: !17032)
!17038 = !DILocation(line: 55, column: 2, scope: !16539, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 145, column: 10, scope: !16530, inlinedAt: !17037)
!17040 = !DILocation(line: 0, scope: !16539, inlinedAt: !17039)
!17041 = !DILocation(line: 292, column: 7, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17043, file: !2639, line: 291, column: 24)
!17043 = distinct !DILexicalBlock(scope: !17032, file: !2639, line: 291, column: 2)
!17044 = !DILocation(line: 292, column: 19, scope: !17042)
!17045 = !DILocation(line: 0, scope: !16598, inlinedAt: !17046)
!17046 = distinct !DILocation(line: 291, column: 2, scope: !17043)
!17047 = !DILocation(line: 0, scope: !16606, inlinedAt: !17048)
!17048 = distinct !DILocation(line: 215, column: 2, scope: !16598, inlinedAt: !17046)
!17049 = !DILocation(line: 95, column: 2, scope: !16606, inlinedAt: !17048)
!17050 = !DILocation(line: 292, column: 17, scope: !17042)
!17051 = !DILocation(line: 294, column: 2, scope: !17026)
!17052 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2639, file: !2639, line: 297, type: !6192, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !317)
!17053 = !DILocation(line: 300, column: 19, scope: !17052)
!17054 = !DILocation(line: 300, column: 9, scope: !17052)
!17055 = !DILocation(line: 300, column: 2, scope: !17052)
!17056 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2639, file: !2639, line: 306, type: !17027, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !317)
!17057 = !DILocation(line: 308, column: 9, scope: !17056)
!17058 = !DILocation(line: 308, column: 2, scope: !17056)
!17059 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2639, file: !2639, line: 319, type: !6202, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !17060)
!17060 = !{!17061, !17062, !17063, !17064}
!17061 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17059, file: !2639, line: 319, type: !121)
!17062 = !DILocalVariable(name: "start_cycles", scope: !17059, file: !2639, line: 328, type: !121)
!17063 = !DILocalVariable(name: "cycles_to_wait", scope: !17059, file: !2639, line: 331, type: !121)
!17064 = !DILocalVariable(name: "current_cycles", scope: !17065, file: !2639, line: 338, type: !121)
!17065 = distinct !DILexicalBlock(scope: !17066, file: !2639, line: 337, column: 11)
!17066 = distinct !DILexicalBlock(scope: !17067, file: !2639, line: 337, column: 2)
!17067 = distinct !DILexicalBlock(scope: !17059, file: !2639, line: 337, column: 2)
!17068 = !DILocation(line: 0, scope: !17059)
!17069 = !DILocation(line: 322, column: 19, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17059, file: !2639, line: 322, column: 6)
!17071 = !DILocation(line: 322, column: 6, scope: !17059)
!17072 = !DILocation(line: 328, column: 26, scope: !17059)
!17073 = !DILocation(line: 333, column: 43, scope: !17059)
!17074 = !DILocation(line: 337, column: 2, scope: !17059)
!17075 = !DILocation(line: 338, column: 29, scope: !17065)
!17076 = !DILocation(line: 0, scope: !17065)
!17077 = !DILocation(line: 341, column: 23, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17065, file: !2639, line: 341, column: 7)
!17079 = !DILocation(line: 341, column: 39, scope: !17078)
!17080 = !DILocation(line: 349, column: 1, scope: !17059)
!17081 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6192, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !317)
!17082 = !DILocation(line: 1677, column: 9, scope: !17081)
!17083 = !DILocation(line: 1677, column: 2, scope: !17081)
!17084 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17085, file: !17085, line: 24, type: !6192, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !317)
!17085 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17086 = !DILocation(line: 26, column: 9, scope: !17084)
!17087 = !DILocation(line: 26, column: 2, scope: !17084)
!17088 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2639, file: !2639, line: 364, type: !17089, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !17091)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{!1652, !16498}
!17091 = !{!17092, !17093}
!17092 = !DILocalVariable(name: "timeout", arg: 1, scope: !17088, file: !2639, line: 364, type: !16498)
!17093 = !DILocalVariable(name: "dt", scope: !17088, file: !2639, line: 366, type: !200)
!17094 = !DILocation(line: 0, scope: !17088)
!17095 = !DILocation(line: 368, column: 6, scope: !17088)
!17096 = !DILocation(line: 371, column: 10, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17098, file: !2639, line: 370, column: 47)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !2639, line: 370, column: 13)
!17099 = distinct !DILexicalBlock(scope: !17088, file: !2639, line: 368, column: 6)
!17100 = !DILocation(line: 371, column: 3, scope: !17097)
!17101 = !DILocation(line: 376, column: 58, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !2639, line: 376, column: 7)
!17103 = distinct !DILexicalBlock(scope: !17098, file: !2639, line: 372, column: 9)
!17104 = !DILocation(line: 376, column: 7, scope: !17103)
!17105 = !DILocation(line: 376, column: 43, scope: !17102)
!17106 = !DILocation(line: 377, column: 4, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17102, file: !2639, line: 376, column: 64)
!17108 = !DILocation(line: 379, column: 10, scope: !17103)
!17109 = !DILocation(line: 379, column: 33, scope: !17103)
!17110 = !DILocation(line: 379, column: 31, scope: !17103)
!17111 = !DILocation(line: 379, column: 3, scope: !17103)
!17112 = !DILocation(line: 0, scope: !17099)
!17113 = !DILocation(line: 381, column: 1, scope: !17088)
!17114 = distinct !DISubprogram(name: "k_free", scope: !17115, file: !17115, line: 43, type: !6048, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !17116)
!17115 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17116 = !{!17117, !17118}
!17117 = !DILocalVariable(name: "ptr", arg: 1, scope: !17114, file: !17115, line: 43, type: !102)
!17118 = !DILocalVariable(name: "heap_ref", scope: !17114, file: !17115, line: 45, type: !17119)
!17119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17120, size: 32)
!17120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17121, size: 32)
!17121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17122)
!17122 = !{!17123, !17129, !17148}
!17123 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17121, file: !296, line: 5074, baseType: !17124, size: 96)
!17124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17125)
!17125 = !{!17126, !17127, !17128}
!17126 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17124, file: !472, line: 57, baseType: !475, size: 32)
!17127 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17124, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17128 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17124, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17121, file: !296, line: 5075, baseType: !17130, size: 64, offset: 96)
!17130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17131)
!17131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17132)
!17132 = !{!17133}
!17133 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17131, file: !320, line: 232, baseType: !17134, size: 64)
!17134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !17135)
!17135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !17136)
!17136 = !{!17137, !17143}
!17137 = !DIDerivedType(tag: DW_TAG_member, scope: !17135, file: !325, line: 38, baseType: !17138, size: 32)
!17138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17135, file: !325, line: 38, size: 32, elements: !17139)
!17139 = !{!17140, !17142}
!17140 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !17138, file: !325, line: 39, baseType: !17141, size: 32)
!17141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17135, size: 32)
!17142 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17138, file: !325, line: 40, baseType: !17141, size: 32)
!17143 = !DIDerivedType(tag: DW_TAG_member, scope: !17135, file: !325, line: 42, baseType: !17144, size: 32, offset: 32)
!17144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17135, file: !325, line: 42, size: 32, elements: !17145)
!17145 = !{!17146, !17147}
!17146 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !17144, file: !325, line: 43, baseType: !17141, size: 32)
!17147 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !17144, file: !325, line: 44, baseType: !17141, size: 32)
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17121, file: !296, line: 5076, baseType: !17149, offset: 160)
!17149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17150 = !DILocation(line: 0, scope: !17114)
!17151 = !DILocation(line: 47, column: 10, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17114, file: !17115, line: 47, column: 6)
!17153 = !DILocation(line: 47, column: 6, scope: !17114)
!17154 = !DILocation(line: 49, column: 9, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17152, file: !17115, line: 47, column: 19)
!17156 = !DILocation(line: 53, column: 15, scope: !17155)
!17157 = !DILocation(line: 53, column: 3, scope: !17155)
!17158 = !DILocation(line: 56, column: 2, scope: !17155)
!17159 = !DILocation(line: 57, column: 1, scope: !17114)
!17160 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !17115, file: !17115, line: 124, type: !17161, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !17163)
!17161 = !DISubroutineType(types: !17162)
!17162 = !{!102, !204, !204}
!17163 = !{!17164, !17165, !17166, !17167}
!17164 = !DILocalVariable(name: "align", arg: 1, scope: !17160, file: !17115, line: 124, type: !204)
!17165 = !DILocalVariable(name: "size", arg: 2, scope: !17160, file: !17115, line: 124, type: !204)
!17166 = !DILocalVariable(name: "ret", scope: !17160, file: !17115, line: 126, type: !102)
!17167 = !DILocalVariable(name: "heap", scope: !17160, file: !17115, line: 127, type: !17120)
!17168 = !DILocation(line: 0, scope: !17160)
!17169 = !DILocation(line: 129, column: 6, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17160, file: !17115, line: 129, column: 6)
!17171 = !DILocation(line: 129, column: 6, scope: !17160)
!17172 = !DILocation(line: 132, column: 10, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17170, file: !17115, line: 131, column: 9)
!17174 = !DILocation(line: 132, column: 20, scope: !17173)
!17175 = !DILocation(line: 135, column: 11, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17160, file: !17115, line: 135, column: 6)
!17177 = !DILocation(line: 135, column: 6, scope: !17160)
!17178 = !DILocation(line: 136, column: 9, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17176, file: !17115, line: 135, column: 20)
!17180 = !DILocation(line: 137, column: 2, scope: !17179)
!17181 = !DILocation(line: 0, scope: !17176)
!17182 = !DILocation(line: 141, column: 2, scope: !17160)
!17183 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !17115, file: !17115, line: 12, type: !17184, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !17186)
!17184 = !DISubroutineType(types: !17185)
!17185 = !{!102, !17120, !204, !204}
!17186 = !{!17187, !17188, !17189, !17190, !17191, !17192}
!17187 = !DILocalVariable(name: "heap", arg: 1, scope: !17183, file: !17115, line: 12, type: !17120)
!17188 = !DILocalVariable(name: "align", arg: 2, scope: !17183, file: !17115, line: 12, type: !204)
!17189 = !DILocalVariable(name: "size", arg: 3, scope: !17183, file: !17115, line: 12, type: !204)
!17190 = !DILocalVariable(name: "mem", scope: !17183, file: !17115, line: 14, type: !102)
!17191 = !DILocalVariable(name: "heap_ref", scope: !17183, file: !17115, line: 15, type: !17119)
!17192 = !DILocalVariable(name: "__align", scope: !17183, file: !17115, line: 16, type: !204)
!17193 = !DILocation(line: 0, scope: !17183)
!17194 = !DILocation(line: 24, column: 6, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17183, file: !17115, line: 24, column: 6)
!17196 = !DILocation(line: 24, column: 6, scope: !17183)
!17197 = !DILocation(line: 27, column: 18, scope: !17183)
!17198 = !DILocation(line: 29, column: 44, scope: !17183)
!17199 = !DILocation(line: 29, column: 8, scope: !17183)
!17200 = !DILocation(line: 30, column: 10, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !17183, file: !17115, line: 30, column: 6)
!17202 = !DILocation(line: 30, column: 6, scope: !17183)
!17203 = !DILocation(line: 34, column: 13, scope: !17183)
!17204 = !DILocation(line: 35, column: 12, scope: !17183)
!17205 = !DILocation(line: 36, column: 8, scope: !17183)
!17206 = !DILocation(line: 40, column: 2, scope: !17183)
!17207 = !DILocation(line: 41, column: 1, scope: !17183)
!17208 = distinct !DISubprogram(name: "size_add_overflow", scope: !17209, file: !17209, line: 47, type: !17210, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !17212)
!17209 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!157, !204, !204, !2752}
!17212 = !{!17213, !17214, !17215}
!17213 = !DILocalVariable(name: "a", arg: 1, scope: !17208, file: !17209, line: 47, type: !204)
!17214 = !DILocalVariable(name: "b", arg: 2, scope: !17208, file: !17209, line: 47, type: !204)
!17215 = !DILocalVariable(name: "result", arg: 3, scope: !17208, file: !17209, line: 47, type: !2752)
!17216 = !DILocation(line: 0, scope: !17208)
!17217 = !DILocation(line: 49, column: 9, scope: !17208)
!17218 = !DILocation(line: 49, column: 2, scope: !17208)
!17219 = distinct !DISubprogram(name: "boot_banner", scope: !17220, file: !17220, line: 26, type: !3339, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3325, retainedNodes: !317)
!17220 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17221 = !DILocation(line: 34, column: 2, scope: !17219)
!17222 = !DILocation(line: 36, column: 1, scope: !17219)
!17223 = distinct !DISubprogram(name: "statics_init", scope: !2667, file: !2667, line: 21, type: !2673, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17224)
!17224 = !{!17225, !17226}
!17225 = !DILocalVariable(name: "unused", arg: 1, scope: !17223, file: !2667, line: 21, type: !2675)
!17226 = !DILocalVariable(name: "h", scope: !17227, file: !2667, line: 24, type: !17228)
!17227 = distinct !DILexicalBlock(scope: !17223, file: !2667, line: 24, column: 2)
!17228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17229, size: 32)
!17229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17230)
!17230 = !{!17231, !17237, !17243}
!17231 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17229, file: !296, line: 5074, baseType: !17232, size: 96)
!17232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17233)
!17233 = !{!17234, !17235, !17236}
!17234 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17232, file: !472, line: 57, baseType: !475, size: 32)
!17235 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17232, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17236 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17232, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17237 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17229, file: !296, line: 5075, baseType: !17238, size: 64, offset: 96)
!17238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17239)
!17239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17240)
!17240 = !{!17241}
!17241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17239, file: !320, line: 232, baseType: !17242, size: 64)
!17242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2653)
!17243 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17229, file: !296, line: 5076, baseType: !17244, offset: 160)
!17244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17245 = !DILocation(line: 0, scope: !17223)
!17246 = !DILocation(line: 0, scope: !17227)
!17247 = !DILocation(line: 24, column: 2, scope: !17227)
!17248 = !DILocation(line: 52, column: 2, scope: !17223)
!17249 = !DILocation(line: 49, column: 27, scope: !17250)
!17250 = distinct !DILexicalBlock(scope: !17251, file: !2667, line: 48, column: 3)
!17251 = distinct !DILexicalBlock(scope: !17252, file: !2667, line: 24, column: 36)
!17252 = distinct !DILexicalBlock(scope: !17227, file: !2667, line: 24, column: 2)
!17253 = !DILocation(line: 49, column: 45, scope: !17250)
!17254 = !DILocation(line: 49, column: 4, scope: !17250)
!17255 = !DILocation(line: 24, column: 2, scope: !17252)
!17256 = !DILocation(line: 24, column: 2, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17252, file: !2667, line: 24, column: 2)
!17258 = distinct !{!17258, !17247, !17259}
!17259 = !DILocation(line: 51, column: 2, scope: !17227)
!17260 = distinct !DISubprogram(name: "k_heap_init", scope: !2667, file: !2667, line: 13, type: !17261, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17263)
!17261 = !DISubroutineType(types: !17262)
!17262 = !{null, !17228, !102, !204}
!17263 = !{!17264, !17265, !17266}
!17264 = !DILocalVariable(name: "h", arg: 1, scope: !17260, file: !2667, line: 13, type: !17228)
!17265 = !DILocalVariable(name: "mem", arg: 2, scope: !17260, file: !2667, line: 13, type: !102)
!17266 = !DILocalVariable(name: "bytes", arg: 3, scope: !17260, file: !2667, line: 13, type: !204)
!17267 = !DILocation(line: 0, scope: !17260)
!17268 = !DILocation(line: 15, column: 19, scope: !17260)
!17269 = !DILocation(line: 15, column: 2, scope: !17260)
!17270 = !DILocation(line: 16, column: 20, scope: !17260)
!17271 = !DILocation(line: 16, column: 2, scope: !17260)
!17272 = !DILocation(line: 19, column: 1, scope: !17260)
!17273 = distinct !DISubprogram(name: "z_waitq_init", scope: !13350, file: !13350, line: 47, type: !17274, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17277)
!17274 = !DISubroutineType(types: !17275)
!17275 = !{null, !17276}
!17276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17238, size: 32)
!17277 = !{!17278}
!17278 = !DILocalVariable(name: "w", arg: 1, scope: !17273, file: !13350, line: 47, type: !17276)
!17279 = !DILocation(line: 0, scope: !17273)
!17280 = !DILocation(line: 49, column: 21, scope: !17273)
!17281 = !DILocation(line: 49, column: 2, scope: !17273)
!17282 = !DILocation(line: 50, column: 1, scope: !17273)
!17283 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17284, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17287)
!17284 = !DISubroutineType(types: !17285)
!17285 = !{null, !17286}
!17286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17242, size: 32)
!17287 = !{!17288}
!17288 = !DILocalVariable(name: "list", arg: 1, scope: !17283, file: !325, line: 197, type: !17286)
!17289 = !DILocation(line: 0, scope: !17283)
!17290 = !DILocation(line: 199, column: 8, scope: !17283)
!17291 = !DILocation(line: 199, column: 13, scope: !17283)
!17292 = !DILocation(line: 200, column: 8, scope: !17283)
!17293 = !DILocation(line: 200, column: 13, scope: !17283)
!17294 = !DILocation(line: 201, column: 1, scope: !17283)
!17295 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2667, file: !2667, line: 64, type: !17296, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17302)
!17296 = !DISubroutineType(types: !17297)
!17297 = !{!102, !17228, !204, !204, !17298}
!17298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17299)
!17299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17300)
!17300 = !{!17301}
!17301 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17299, file: !201, line: 66, baseType: !200, size: 64)
!17302 = !{!17303, !17304, !17305, !17306, !17307, !17308, !17309, !17310, !17315}
!17303 = !DILocalVariable(name: "h", arg: 1, scope: !17295, file: !2667, line: 64, type: !17228)
!17304 = !DILocalVariable(name: "align", arg: 2, scope: !17295, file: !2667, line: 64, type: !204)
!17305 = !DILocalVariable(name: "bytes", arg: 3, scope: !17295, file: !2667, line: 64, type: !204)
!17306 = !DILocalVariable(name: "timeout", arg: 4, scope: !17295, file: !2667, line: 65, type: !17298)
!17307 = !DILocalVariable(name: "now", scope: !17295, file: !2667, line: 67, type: !202)
!17308 = !DILocalVariable(name: "end", scope: !17295, file: !2667, line: 67, type: !202)
!17309 = !DILocalVariable(name: "ret", scope: !17295, file: !2667, line: 68, type: !102)
!17310 = !DILocalVariable(name: "key", scope: !17295, file: !2667, line: 72, type: !17311)
!17311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17312)
!17312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17313)
!17313 = !{!17314}
!17314 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17312, file: !316, line: 33, baseType: !103, size: 32)
!17315 = !DILocalVariable(name: "blocked_alloc", scope: !17295, file: !2667, line: 78, type: !157)
!17316 = !DILocation(line: 0, scope: !17295)
!17317 = !DILocation(line: 67, column: 21, scope: !17295)
!17318 = !DILocation(line: 70, column: 8, scope: !17295)
!17319 = !DILocation(line: 72, column: 41, scope: !17295)
!17320 = !DILocalVariable(name: "l", arg: 1, scope: !17321, file: !316, line: 136, type: !17324)
!17321 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17322, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17325)
!17322 = !DISubroutineType(types: !17323)
!17323 = !{!17311, !17324}
!17324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17244, size: 32)
!17325 = !{!17320, !17326}
!17326 = !DILocalVariable(name: "k", scope: !17321, file: !316, line: 139, type: !17311)
!17327 = !DILocation(line: 0, scope: !17321, inlinedAt: !17328)
!17328 = distinct !DILocation(line: 72, column: 25, scope: !17295)
!17329 = !DILocation(line: 55, column: 2, scope: !17330, inlinedAt: !17334)
!17330 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5896, file: !5896, line: 42, type: !5897, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17331)
!17331 = !{!17332, !17333}
!17332 = !DILocalVariable(name: "key", scope: !17330, file: !5896, line: 44, type: !32)
!17333 = !DILocalVariable(name: "tmp", scope: !17330, file: !5896, line: 53, type: !32)
!17334 = distinct !DILocation(line: 145, column: 10, scope: !17321, inlinedAt: !17328)
!17335 = !{i64 2593922}
!17336 = !DILocation(line: 0, scope: !17330, inlinedAt: !17334)
!17337 = !DILocation(line: 81, column: 9, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17295, file: !2667, line: 80, column: 22)
!17339 = !DILocation(line: 83, column: 9, scope: !17338)
!17340 = !DILocation(line: 85, column: 12, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17338, file: !2667, line: 84, column: 7)
!17342 = !DILocation(line: 85, column: 21, scope: !17341)
!17343 = !DILocation(line: 85, column: 30, scope: !17341)
!17344 = !DILocation(line: 85, column: 37, scope: !17341)
!17345 = !DILocation(line: 84, column: 7, scope: !17338)
!17346 = !DILocation(line: 99, column: 10, scope: !17338)
!17347 = !DILocation(line: 0, scope: !17321, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 101, column: 9, scope: !17338)
!17349 = !DILocation(line: 55, column: 2, scope: !17330, inlinedAt: !17350)
!17350 = distinct !DILocation(line: 145, column: 10, scope: !17321, inlinedAt: !17348)
!17351 = !DILocation(line: 0, scope: !17330, inlinedAt: !17350)
!17352 = distinct !{!17352, !17353, !17354}
!17353 = !DILocation(line: 80, column: 2, scope: !17295)
!17354 = !DILocation(line: 102, column: 2, scope: !17295)
!17355 = !DILocalVariable(name: "key", arg: 2, scope: !17356, file: !316, line: 190, type: !17311)
!17356 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17357, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17359)
!17357 = !DISubroutineType(types: !17358)
!17358 = !{null, !17324, !17311}
!17359 = !{!17360, !17355}
!17360 = !DILocalVariable(name: "l", arg: 1, scope: !17356, file: !316, line: 189, type: !17324)
!17361 = !DILocation(line: 0, scope: !17356, inlinedAt: !17362)
!17362 = distinct !DILocation(line: 106, column: 2, scope: !17295)
!17363 = !DILocalVariable(name: "key", arg: 1, scope: !17364, file: !5896, line: 84, type: !32)
!17364 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5896, file: !5896, line: 84, type: !5907, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17365)
!17365 = !{!17363}
!17366 = !DILocation(line: 0, scope: !17364, inlinedAt: !17367)
!17367 = distinct !DILocation(line: 215, column: 2, scope: !17356, inlinedAt: !17362)
!17368 = !DILocation(line: 95, column: 2, scope: !17364, inlinedAt: !17367)
!17369 = !{i64 2594739}
!17370 = !DILocation(line: 107, column: 2, scope: !17295)
!17371 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2667, file: !2667, line: 110, type: !17372, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17374)
!17372 = !DISubroutineType(types: !17373)
!17373 = !{!102, !17228, !204, !17298}
!17374 = !{!17375, !17376, !17377, !17378}
!17375 = !DILocalVariable(name: "h", arg: 1, scope: !17371, file: !2667, line: 110, type: !17228)
!17376 = !DILocalVariable(name: "bytes", arg: 2, scope: !17371, file: !2667, line: 110, type: !204)
!17377 = !DILocalVariable(name: "timeout", arg: 3, scope: !17371, file: !2667, line: 110, type: !17298)
!17378 = !DILocalVariable(name: "ret", scope: !17371, file: !2667, line: 114, type: !102)
!17379 = !DILocation(line: 0, scope: !17371)
!17380 = !DILocation(line: 114, column: 14, scope: !17371)
!17381 = !DILocation(line: 118, column: 2, scope: !17371)
!17382 = distinct !DISubprogram(name: "k_heap_free", scope: !2667, file: !2667, line: 121, type: !17383, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !17385)
!17383 = !DISubroutineType(types: !17384)
!17384 = !{null, !17228, !102}
!17385 = !{!17386, !17387, !17388}
!17386 = !DILocalVariable(name: "h", arg: 1, scope: !17382, file: !2667, line: 121, type: !17228)
!17387 = !DILocalVariable(name: "mem", arg: 2, scope: !17382, file: !2667, line: 121, type: !102)
!17388 = !DILocalVariable(name: "key", scope: !17382, file: !2667, line: 123, type: !17311)
!17389 = !DILocation(line: 0, scope: !17382)
!17390 = !DILocation(line: 0, scope: !17321, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 123, column: 25, scope: !17382)
!17392 = !DILocation(line: 55, column: 2, scope: !17330, inlinedAt: !17393)
!17393 = distinct !DILocation(line: 145, column: 10, scope: !17321, inlinedAt: !17391)
!17394 = !DILocation(line: 0, scope: !17330, inlinedAt: !17393)
!17395 = !DILocation(line: 125, column: 20, scope: !17382)
!17396 = !DILocation(line: 125, column: 2, scope: !17382)
!17397 = !DILocation(line: 128, column: 60, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17382, file: !2667, line: 128, column: 6)
!17399 = !DILocation(line: 128, column: 43, scope: !17398)
!17400 = !DILocation(line: 128, column: 68, scope: !17398)
!17401 = !DILocation(line: 128, column: 6, scope: !17382)
!17402 = !DILocation(line: 123, column: 41, scope: !17382)
!17403 = !DILocation(line: 129, column: 3, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17398, file: !2667, line: 128, column: 74)
!17405 = !DILocation(line: 130, column: 2, scope: !17404)
!17406 = !DILocation(line: 0, scope: !17356, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 131, column: 3, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17398, file: !2667, line: 130, column: 9)
!17409 = !DILocation(line: 0, scope: !17364, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 215, column: 2, scope: !17356, inlinedAt: !17407)
!17411 = !DILocation(line: 95, column: 2, scope: !17364, inlinedAt: !17410)
!17412 = !DILocation(line: 133, column: 1, scope: !17382)
